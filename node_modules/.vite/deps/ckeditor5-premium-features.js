import {
  AttributeElement,
  AutocompleteView,
  BalloonPanelView,
  BodyCollection,
  BoxedEditorUIView,
  ButtonLabelView,
  ButtonLabelWithHighlightView,
  ButtonView,
  CKEditorError,
  ClickObserver,
  Clipboard,
  ClipboardMarkersUtils,
  ClipboardPipeline,
  CollapsibleView,
  Collection,
  Command,
  ContainerElement,
  Context,
  ContextPlugin,
  ContextualBalloon,
  DataTransfer as DataTransfer2,
  Delete,
  Dialog,
  DialogViewPosition,
  Document$1,
  DocumentFragment,
  DocumentFragment$1,
  DomConverter,
  DomEmitterMixin,
  DomEventData,
  DropdownButtonView,
  Editor,
  EditorUI,
  EditorUIView,
  Element,
  Element$1,
  ElementApiMixin,
  ElementReplacer,
  EmitterMixin,
  EmptyElement,
  Enter,
  FileDialogButtonView,
  FocusCycler,
  FocusTracker,
  HighlightedTextView,
  History,
  IconView,
  InlineEditableUIView,
  Input,
  InputNumberView,
  InsertOperation,
  KeystrokeHandler,
  LabelView,
  LabelWithHighlightView,
  LabeledFieldView,
  ListItemGroupView,
  ListItemView,
  ListSeparatorView,
  ListView,
  LivePosition,
  LiveRange,
  MSWordNormalizer,
  MarkerOperation,
  Matcher,
  MenuBarMenuListItemButtonView,
  MenuBarMenuListItemFileDialogButtonView,
  MenuBarMenuListItemView,
  MenuBarMenuListView,
  MenuBarMenuView,
  Model2 as Model,
  MouseObserver,
  NoOperation,
  Notification,
  ObservableMixin,
  OperationFactory,
  Paragraph,
  PendingActions,
  Plugin,
  Position,
  Range,
  RawElement,
  Rect,
  ResizeObserver,
  RootAttributeOperation,
  SearchTextView,
  SelectAll,
  ShiftEnter,
  SpinnerView,
  SplitButtonView,
  StickyPanelView,
  Text,
  Text$1,
  ToolbarSeparatorView,
  ToolbarView,
  TreeWalker,
  Typing,
  UIElement,
  Undo,
  UpcastWriter,
  View2 as View,
  ViewCollection,
  Widget,
  addKeyboardHandlingForGrid,
  addListToDropdown,
  addMenuToDropdown,
  clickOutsideHandler,
  cloneDeep_default,
  createDropdown,
  createLabeledInputNumber,
  createLabeledInputText,
  createLabeledTextarea,
  debounce_default,
  diff,
  diffToChanges,
  disablePlaceholder,
  enablePlaceholder,
  env,
  escape_default,
  filterGroupAndItemNames,
  findOptimalInsertionRange,
  first,
  focusChildOnDropdownOpen,
  getEnvKeystrokeText,
  global as global2,
  icons,
  injectCssTransitionDisabler,
  insertToPriorityArray,
  isElement_default,
  isEqual_default,
  isObject_default,
  isParagraphable,
  isViewWithFocusCycler,
  isVisible,
  keyCodes,
  logError,
  logWarning,
  normalizeColorOptions,
  normalizeToolbarConfig,
  omit_default,
  parseHtml,
  priorities,
  scrollAncestorsToShowTarget,
  scrollViewportToShowTarget,
  setHighlightHandling,
  set_default,
  submitHandler,
  throttle_default,
  toUnit,
  toWidget,
  transformSets,
  uid,
  unescape_default,
  unset_default,
  version,
  viewToModelPositionOutsideModelElement,
  wrapInParagraph
} from "./chunk-YDM2RKF6.js";
import {
  __commonJS,
  __export,
  __publicField,
  __toESM
} from "./chunk-DC5AMYBS.js";

// node_modules/@babel/runtime/helpers/interopRequireDefault.js
var require_interopRequireDefault = __commonJS({
  "node_modules/@babel/runtime/helpers/interopRequireDefault.js"(exports2, module2) {
    function _interopRequireDefault(e9) {
      return e9 && e9.__esModule ? e9 : {
        "default": e9
      };
    }
    module2.exports = _interopRequireDefault, module2.exports.__esModule = true, module2.exports["default"] = module2.exports;
  }
});

// node_modules/@babel/runtime/helpers/typeof.js
var require_typeof = __commonJS({
  "node_modules/@babel/runtime/helpers/typeof.js"(exports2, module2) {
    function _typeof(o12) {
      "@babel/helpers - typeof";
      return module2.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o13) {
        return typeof o13;
      } : function(o13) {
        return o13 && "function" == typeof Symbol && o13.constructor === Symbol && o13 !== Symbol.prototype ? "symbol" : typeof o13;
      }, module2.exports.__esModule = true, module2.exports["default"] = module2.exports, _typeof(o12);
    }
    module2.exports = _typeof, module2.exports.__esModule = true, module2.exports["default"] = module2.exports;
  }
});

// node_modules/date-fns/_lib/requiredArgs/index.js
var require_requiredArgs = __commonJS({
  "node_modules/date-fns/_lib/requiredArgs/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = requiredArgs;
    function requiredArgs(required, args) {
      if (args.length < required) {
        throw new TypeError(required + " argument" + (required > 1 ? "s" : "") + " required, but only " + args.length + " present");
      }
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isDate/index.js
var require_isDate = __commonJS({
  "node_modules/date-fns/isDate/index.js"(exports2, module2) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isDate2;
    var _typeof2 = _interopRequireDefault(require_typeof());
    var _index = _interopRequireDefault(require_requiredArgs());
    function isDate2(value2) {
      (0, _index.default)(1, arguments);
      return value2 instanceof Date || (0, _typeof2.default)(value2) === "object" && Object.prototype.toString.call(value2) === "[object Date]";
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/toDate/index.js
var require_toDate = __commonJS({
  "node_modules/date-fns/toDate/index.js"(exports2, module2) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = toDate2;
    var _typeof2 = _interopRequireDefault(require_typeof());
    var _index = _interopRequireDefault(require_requiredArgs());
    function toDate2(argument) {
      (0, _index.default)(1, arguments);
      var argStr = Object.prototype.toString.call(argument);
      if (argument instanceof Date || (0, _typeof2.default)(argument) === "object" && argStr === "[object Date]") {
        return new Date(argument.getTime());
      } else if (typeof argument === "number" || argStr === "[object Number]") {
        return new Date(argument);
      } else {
        if ((typeof argument === "string" || argStr === "[object String]") && typeof console !== "undefined") {
          console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments");
          console.warn(new Error().stack);
        }
        return /* @__PURE__ */ new Date(NaN);
      }
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isValid/index.js
var require_isValid = __commonJS({
  "node_modules/date-fns/isValid/index.js"(exports2, module2) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = isValid;
    var _index = _interopRequireDefault(require_isDate());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function isValid(dirtyDate) {
      (0, _index3.default)(1, arguments);
      if (!(0, _index.default)(dirtyDate) && typeof dirtyDate !== "number") {
        return false;
      }
      var date = (0, _index2.default)(dirtyDate);
      return !isNaN(Number(date));
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/toInteger/index.js
var require_toInteger = __commonJS({
  "node_modules/date-fns/_lib/toInteger/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = toInteger;
    function toInteger(dirtyNumber) {
      if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
        return NaN;
      }
      var number = Number(dirtyNumber);
      if (isNaN(number)) {
        return number;
      }
      return number < 0 ? Math.ceil(number) : Math.floor(number);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/addMilliseconds/index.js
var require_addMilliseconds = __commonJS({
  "node_modules/date-fns/addMilliseconds/index.js"(exports2, module2) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = addMilliseconds;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function addMilliseconds(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var timestamp = (0, _index2.default)(dirtyDate).getTime();
      var amount = (0, _index.default)(dirtyAmount);
      return new Date(timestamp + amount);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/subMilliseconds/index.js
var require_subMilliseconds = __commonJS({
  "node_modules/date-fns/subMilliseconds/index.js"(exports2, module2) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = subMilliseconds;
    var _index = _interopRequireDefault(require_addMilliseconds());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    var _index3 = _interopRequireDefault(require_toInteger());
    function subMilliseconds(dirtyDate, dirtyAmount) {
      (0, _index2.default)(2, arguments);
      var amount = (0, _index3.default)(dirtyAmount);
      return (0, _index.default)(dirtyDate, -amount);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/getUTCDayOfYear/index.js
var require_getUTCDayOfYear = __commonJS({
  "node_modules/date-fns/_lib/getUTCDayOfYear/index.js"(exports2, module2) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getUTCDayOfYear;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    var MILLISECONDS_IN_DAY = 864e5;
    function getUTCDayOfYear(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var timestamp = date.getTime();
      date.setUTCMonth(0, 1);
      date.setUTCHours(0, 0, 0, 0);
      var startOfYearTimestamp = date.getTime();
      var difference = timestamp - startOfYearTimestamp;
      return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/startOfUTCISOWeek/index.js
var require_startOfUTCISOWeek = __commonJS({
  "node_modules/date-fns/_lib/startOfUTCISOWeek/index.js"(exports2, module2) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = startOfUTCISOWeek;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function startOfUTCISOWeek(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var weekStartsOn = 1;
      var date = (0, _index.default)(dirtyDate);
      var day = date.getUTCDay();
      var diff2 = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
      date.setUTCDate(date.getUTCDate() - diff2);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/getUTCISOWeekYear/index.js
var require_getUTCISOWeekYear = __commonJS({
  "node_modules/date-fns/_lib/getUTCISOWeekYear/index.js"(exports2, module2) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getUTCISOWeekYear;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    var _index3 = _interopRequireDefault(require_startOfUTCISOWeek());
    function getUTCISOWeekYear(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var year = date.getUTCFullYear();
      var fourthOfJanuaryOfNextYear = /* @__PURE__ */ new Date(0);
      fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);
      fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
      var startOfNextYear = (0, _index3.default)(fourthOfJanuaryOfNextYear);
      var fourthOfJanuaryOfThisYear = /* @__PURE__ */ new Date(0);
      fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);
      fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
      var startOfThisYear = (0, _index3.default)(fourthOfJanuaryOfThisYear);
      if (date.getTime() >= startOfNextYear.getTime()) {
        return year + 1;
      } else if (date.getTime() >= startOfThisYear.getTime()) {
        return year;
      } else {
        return year - 1;
      }
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/startOfUTCISOWeekYear/index.js
var require_startOfUTCISOWeekYear = __commonJS({
  "node_modules/date-fns/_lib/startOfUTCISOWeekYear/index.js"(exports2, module2) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = startOfUTCISOWeekYear;
    var _index = _interopRequireDefault(require_getUTCISOWeekYear());
    var _index2 = _interopRequireDefault(require_startOfUTCISOWeek());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function startOfUTCISOWeekYear(dirtyDate) {
      (0, _index3.default)(1, arguments);
      var year = (0, _index.default)(dirtyDate);
      var fourthOfJanuary = /* @__PURE__ */ new Date(0);
      fourthOfJanuary.setUTCFullYear(year, 0, 4);
      fourthOfJanuary.setUTCHours(0, 0, 0, 0);
      var date = (0, _index2.default)(fourthOfJanuary);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/getUTCISOWeek/index.js
var require_getUTCISOWeek = __commonJS({
  "node_modules/date-fns/_lib/getUTCISOWeek/index.js"(exports2, module2) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getUTCISOWeek;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_startOfUTCISOWeek());
    var _index3 = _interopRequireDefault(require_startOfUTCISOWeekYear());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    var MILLISECONDS_IN_WEEK = 6048e5;
    function getUTCISOWeek(dirtyDate) {
      (0, _index4.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var diff2 = (0, _index2.default)(date).getTime() - (0, _index3.default)(date).getTime();
      return Math.round(diff2 / MILLISECONDS_IN_WEEK) + 1;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/defaultOptions/index.js
var require_defaultOptions = __commonJS({
  "node_modules/date-fns/_lib/defaultOptions/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.getDefaultOptions = getDefaultOptions;
    exports2.setDefaultOptions = setDefaultOptions;
    var defaultOptions = {};
    function getDefaultOptions() {
      return defaultOptions;
    }
    function setDefaultOptions(newOptions) {
      defaultOptions = newOptions;
    }
  }
});

// node_modules/date-fns/_lib/startOfUTCWeek/index.js
var require_startOfUTCWeek = __commonJS({
  "node_modules/date-fns/_lib/startOfUTCWeek/index.js"(exports2, module2) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = startOfUTCWeek;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    var _index3 = _interopRequireDefault(require_toInteger());
    var _index4 = require_defaultOptions();
    function startOfUTCWeek(dirtyDate, options) {
      var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
      (0, _index2.default)(1, arguments);
      var defaultOptions = (0, _index4.getDefaultOptions)();
      var weekStartsOn = (0, _index3.default)((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);
      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
      }
      var date = (0, _index.default)(dirtyDate);
      var day = date.getUTCDay();
      var diff2 = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
      date.setUTCDate(date.getUTCDate() - diff2);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/getUTCWeekYear/index.js
var require_getUTCWeekYear = __commonJS({
  "node_modules/date-fns/_lib/getUTCWeekYear/index.js"(exports2, module2) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getUTCWeekYear;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    var _index3 = _interopRequireDefault(require_startOfUTCWeek());
    var _index4 = _interopRequireDefault(require_toInteger());
    var _index5 = require_defaultOptions();
    function getUTCWeekYear(dirtyDate, options) {
      var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var year = date.getUTCFullYear();
      var defaultOptions = (0, _index5.getDefaultOptions)();
      var firstWeekContainsDate = (0, _index4.default)((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
      if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
        throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
      }
      var firstWeekOfNextYear = /* @__PURE__ */ new Date(0);
      firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);
      firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
      var startOfNextYear = (0, _index3.default)(firstWeekOfNextYear, options);
      var firstWeekOfThisYear = /* @__PURE__ */ new Date(0);
      firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
      firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
      var startOfThisYear = (0, _index3.default)(firstWeekOfThisYear, options);
      if (date.getTime() >= startOfNextYear.getTime()) {
        return year + 1;
      } else if (date.getTime() >= startOfThisYear.getTime()) {
        return year;
      } else {
        return year - 1;
      }
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/startOfUTCWeekYear/index.js
var require_startOfUTCWeekYear = __commonJS({
  "node_modules/date-fns/_lib/startOfUTCWeekYear/index.js"(exports2, module2) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = startOfUTCWeekYear;
    var _index = _interopRequireDefault(require_getUTCWeekYear());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    var _index3 = _interopRequireDefault(require_startOfUTCWeek());
    var _index4 = _interopRequireDefault(require_toInteger());
    var _index5 = require_defaultOptions();
    function startOfUTCWeekYear(dirtyDate, options) {
      var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
      (0, _index2.default)(1, arguments);
      var defaultOptions = (0, _index5.getDefaultOptions)();
      var firstWeekContainsDate = (0, _index4.default)((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
      var year = (0, _index.default)(dirtyDate, options);
      var firstWeek = /* @__PURE__ */ new Date(0);
      firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
      firstWeek.setUTCHours(0, 0, 0, 0);
      var date = (0, _index3.default)(firstWeek, options);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/getUTCWeek/index.js
var require_getUTCWeek = __commonJS({
  "node_modules/date-fns/_lib/getUTCWeek/index.js"(exports2, module2) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getUTCWeek;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_startOfUTCWeek());
    var _index3 = _interopRequireDefault(require_startOfUTCWeekYear());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    var MILLISECONDS_IN_WEEK = 6048e5;
    function getUTCWeek(dirtyDate, options) {
      (0, _index4.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var diff2 = (0, _index2.default)(date, options).getTime() - (0, _index3.default)(date, options).getTime();
      return Math.round(diff2 / MILLISECONDS_IN_WEEK) + 1;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/addLeadingZeros/index.js
var require_addLeadingZeros = __commonJS({
  "node_modules/date-fns/_lib/addLeadingZeros/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = addLeadingZeros;
    function addLeadingZeros(number, targetLength) {
      var sign = number < 0 ? "-" : "";
      var output = Math.abs(number).toString();
      while (output.length < targetLength) {
        output = "0" + output;
      }
      return sign + output;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/format/lightFormatters/index.js
var require_lightFormatters = __commonJS({
  "node_modules/date-fns/_lib/format/lightFormatters/index.js"(exports2, module2) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = void 0;
    var _index = _interopRequireDefault(require_addLeadingZeros());
    var formatters = {
      // Year
      y: function y10(date, token) {
        var signedYear = date.getUTCFullYear();
        var year = signedYear > 0 ? signedYear : 1 - signedYear;
        return (0, _index.default)(token === "yy" ? year % 100 : year, token.length);
      },
      // Month
      M: function M3(date, token) {
        var month = date.getUTCMonth();
        return token === "M" ? String(month + 1) : (0, _index.default)(month + 1, 2);
      },
      // Day of the month
      d: function d9(date, token) {
        return (0, _index.default)(date.getUTCDate(), token.length);
      },
      // AM or PM
      a: function a15(date, token) {
        var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? "pm" : "am";
        switch (token) {
          case "a":
          case "aa":
            return dayPeriodEnumValue.toUpperCase();
          case "aaa":
            return dayPeriodEnumValue;
          case "aaaaa":
            return dayPeriodEnumValue[0];
          case "aaaa":
          default:
            return dayPeriodEnumValue === "am" ? "a.m." : "p.m.";
        }
      },
      // Hour [1-12]
      h: function h8(date, token) {
        return (0, _index.default)(date.getUTCHours() % 12 || 12, token.length);
      },
      // Hour [0-23]
      H: function H8(date, token) {
        return (0, _index.default)(date.getUTCHours(), token.length);
      },
      // Minute
      m: function m13(date, token) {
        return (0, _index.default)(date.getUTCMinutes(), token.length);
      },
      // Second
      s: function s15(date, token) {
        return (0, _index.default)(date.getUTCSeconds(), token.length);
      },
      // Fraction of second
      S: function S6(date, token) {
        var numberOfDigits = token.length;
        var milliseconds = date.getUTCMilliseconds();
        var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));
        return (0, _index.default)(fractionalSeconds, token.length);
      }
    };
    var _default = formatters;
    exports2.default = _default;
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/format/formatters/index.js
var require_formatters = __commonJS({
  "node_modules/date-fns/_lib/format/formatters/index.js"(exports2, module2) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = void 0;
    var _index = _interopRequireDefault(require_getUTCDayOfYear());
    var _index2 = _interopRequireDefault(require_getUTCISOWeek());
    var _index3 = _interopRequireDefault(require_getUTCISOWeekYear());
    var _index4 = _interopRequireDefault(require_getUTCWeek());
    var _index5 = _interopRequireDefault(require_getUTCWeekYear());
    var _index6 = _interopRequireDefault(require_addLeadingZeros());
    var _index7 = _interopRequireDefault(require_lightFormatters());
    var dayPeriodEnum = {
      am: "am",
      pm: "pm",
      midnight: "midnight",
      noon: "noon",
      morning: "morning",
      afternoon: "afternoon",
      evening: "evening",
      night: "night"
    };
    var formatters = {
      // Era
      G: function G5(date, token, localize) {
        var era = date.getUTCFullYear() > 0 ? 1 : 0;
        switch (token) {
          case "G":
          case "GG":
          case "GGG":
            return localize.era(era, {
              width: "abbreviated"
            });
          case "GGGGG":
            return localize.era(era, {
              width: "narrow"
            });
          case "GGGG":
          default:
            return localize.era(era, {
              width: "wide"
            });
        }
      },
      // Year
      y: function y10(date, token, localize) {
        if (token === "yo") {
          var signedYear = date.getUTCFullYear();
          var year = signedYear > 0 ? signedYear : 1 - signedYear;
          return localize.ordinalNumber(year, {
            unit: "year"
          });
        }
        return _index7.default.y(date, token);
      },
      // Local week-numbering year
      Y: function Y3(date, token, localize, options) {
        var signedWeekYear = (0, _index5.default)(date, options);
        var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;
        if (token === "YY") {
          var twoDigitYear = weekYear % 100;
          return (0, _index6.default)(twoDigitYear, 2);
        }
        if (token === "Yo") {
          return localize.ordinalNumber(weekYear, {
            unit: "year"
          });
        }
        return (0, _index6.default)(weekYear, token.length);
      },
      // ISO week-numbering year
      R: function R7(date, token) {
        var isoWeekYear = (0, _index3.default)(date);
        return (0, _index6.default)(isoWeekYear, token.length);
      },
      // Extended year. This is a single number designating the year of this calendar system.
      // The main difference between `y` and `u` localizers are B.C. years:
      // | Year | `y` | `u` |
      // |------|-----|-----|
      // | AC 1 |   1 |   1 |
      // | BC 1 |   1 |   0 |
      // | BC 2 |   2 |  -1 |
      // Also `yy` always returns the last two digits of a year,
      // while `uu` pads single digit years to 2 characters and returns other years unchanged.
      u: function u9(date, token) {
        var year = date.getUTCFullYear();
        return (0, _index6.default)(year, token.length);
      },
      // Quarter
      Q: function Q4(date, token, localize) {
        var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
        switch (token) {
          case "Q":
            return String(quarter);
          case "QQ":
            return (0, _index6.default)(quarter, 2);
          case "Qo":
            return localize.ordinalNumber(quarter, {
              unit: "quarter"
            });
          case "QQQ":
            return localize.quarter(quarter, {
              width: "abbreviated",
              context: "formatting"
            });
          case "QQQQQ":
            return localize.quarter(quarter, {
              width: "narrow",
              context: "formatting"
            });
          case "QQQQ":
          default:
            return localize.quarter(quarter, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      // Stand-alone quarter
      q: function q8(date, token, localize) {
        var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
        switch (token) {
          case "q":
            return String(quarter);
          case "qq":
            return (0, _index6.default)(quarter, 2);
          case "qo":
            return localize.ordinalNumber(quarter, {
              unit: "quarter"
            });
          case "qqq":
            return localize.quarter(quarter, {
              width: "abbreviated",
              context: "standalone"
            });
          case "qqqqq":
            return localize.quarter(quarter, {
              width: "narrow",
              context: "standalone"
            });
          case "qqqq":
          default:
            return localize.quarter(quarter, {
              width: "wide",
              context: "standalone"
            });
        }
      },
      // Month
      M: function M3(date, token, localize) {
        var month = date.getUTCMonth();
        switch (token) {
          case "M":
          case "MM":
            return _index7.default.M(date, token);
          case "Mo":
            return localize.ordinalNumber(month + 1, {
              unit: "month"
            });
          case "MMM":
            return localize.month(month, {
              width: "abbreviated",
              context: "formatting"
            });
          case "MMMMM":
            return localize.month(month, {
              width: "narrow",
              context: "formatting"
            });
          case "MMMM":
          default:
            return localize.month(month, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      // Stand-alone month
      L: function L5(date, token, localize) {
        var month = date.getUTCMonth();
        switch (token) {
          case "L":
            return String(month + 1);
          case "LL":
            return (0, _index6.default)(month + 1, 2);
          case "Lo":
            return localize.ordinalNumber(month + 1, {
              unit: "month"
            });
          case "LLL":
            return localize.month(month, {
              width: "abbreviated",
              context: "standalone"
            });
          case "LLLLL":
            return localize.month(month, {
              width: "narrow",
              context: "standalone"
            });
          case "LLLL":
          default:
            return localize.month(month, {
              width: "wide",
              context: "standalone"
            });
        }
      },
      // Local week of year
      w: function w7(date, token, localize, options) {
        var week = (0, _index4.default)(date, options);
        if (token === "wo") {
          return localize.ordinalNumber(week, {
            unit: "week"
          });
        }
        return (0, _index6.default)(week, token.length);
      },
      // ISO week of year
      I: function I4(date, token, localize) {
        var isoWeek = (0, _index2.default)(date);
        if (token === "Io") {
          return localize.ordinalNumber(isoWeek, {
            unit: "week"
          });
        }
        return (0, _index6.default)(isoWeek, token.length);
      },
      // Day of the month
      d: function d9(date, token, localize) {
        if (token === "do") {
          return localize.ordinalNumber(date.getUTCDate(), {
            unit: "date"
          });
        }
        return _index7.default.d(date, token);
      },
      // Day of year
      D: function D5(date, token, localize) {
        var dayOfYear = (0, _index.default)(date);
        if (token === "Do") {
          return localize.ordinalNumber(dayOfYear, {
            unit: "dayOfYear"
          });
        }
        return (0, _index6.default)(dayOfYear, token.length);
      },
      // Day of week
      E: function E7(date, token, localize) {
        var dayOfWeek2 = date.getUTCDay();
        switch (token) {
          case "E":
          case "EE":
          case "EEE":
            return localize.day(dayOfWeek2, {
              width: "abbreviated",
              context: "formatting"
            });
          case "EEEEE":
            return localize.day(dayOfWeek2, {
              width: "narrow",
              context: "formatting"
            });
          case "EEEEEE":
            return localize.day(dayOfWeek2, {
              width: "short",
              context: "formatting"
            });
          case "EEEE":
          default:
            return localize.day(dayOfWeek2, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      // Local day of week
      e: function e9(date, token, localize, options) {
        var dayOfWeek2 = date.getUTCDay();
        var localDayOfWeek = (dayOfWeek2 - options.weekStartsOn + 8) % 7 || 7;
        switch (token) {
          case "e":
            return String(localDayOfWeek);
          case "ee":
            return (0, _index6.default)(localDayOfWeek, 2);
          case "eo":
            return localize.ordinalNumber(localDayOfWeek, {
              unit: "day"
            });
          case "eee":
            return localize.day(dayOfWeek2, {
              width: "abbreviated",
              context: "formatting"
            });
          case "eeeee":
            return localize.day(dayOfWeek2, {
              width: "narrow",
              context: "formatting"
            });
          case "eeeeee":
            return localize.day(dayOfWeek2, {
              width: "short",
              context: "formatting"
            });
          case "eeee":
          default:
            return localize.day(dayOfWeek2, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      // Stand-alone local day of week
      c: function c11(date, token, localize, options) {
        var dayOfWeek2 = date.getUTCDay();
        var localDayOfWeek = (dayOfWeek2 - options.weekStartsOn + 8) % 7 || 7;
        switch (token) {
          case "c":
            return String(localDayOfWeek);
          case "cc":
            return (0, _index6.default)(localDayOfWeek, token.length);
          case "co":
            return localize.ordinalNumber(localDayOfWeek, {
              unit: "day"
            });
          case "ccc":
            return localize.day(dayOfWeek2, {
              width: "abbreviated",
              context: "standalone"
            });
          case "ccccc":
            return localize.day(dayOfWeek2, {
              width: "narrow",
              context: "standalone"
            });
          case "cccccc":
            return localize.day(dayOfWeek2, {
              width: "short",
              context: "standalone"
            });
          case "cccc":
          default:
            return localize.day(dayOfWeek2, {
              width: "wide",
              context: "standalone"
            });
        }
      },
      // ISO day of week
      i: function i11(date, token, localize) {
        var dayOfWeek2 = date.getUTCDay();
        var isoDayOfWeek = dayOfWeek2 === 0 ? 7 : dayOfWeek2;
        switch (token) {
          case "i":
            return String(isoDayOfWeek);
          case "ii":
            return (0, _index6.default)(isoDayOfWeek, token.length);
          case "io":
            return localize.ordinalNumber(isoDayOfWeek, {
              unit: "day"
            });
          case "iii":
            return localize.day(dayOfWeek2, {
              width: "abbreviated",
              context: "formatting"
            });
          case "iiiii":
            return localize.day(dayOfWeek2, {
              width: "narrow",
              context: "formatting"
            });
          case "iiiiii":
            return localize.day(dayOfWeek2, {
              width: "short",
              context: "formatting"
            });
          case "iiii":
          default:
            return localize.day(dayOfWeek2, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      // AM or PM
      a: function a15(date, token, localize) {
        var hours = date.getUTCHours();
        var dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
        switch (token) {
          case "a":
          case "aa":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "abbreviated",
              context: "formatting"
            });
          case "aaa":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "abbreviated",
              context: "formatting"
            }).toLowerCase();
          case "aaaaa":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "narrow",
              context: "formatting"
            });
          case "aaaa":
          default:
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      // AM, PM, midnight, noon
      b: function b6(date, token, localize) {
        var hours = date.getUTCHours();
        var dayPeriodEnumValue;
        if (hours === 12) {
          dayPeriodEnumValue = dayPeriodEnum.noon;
        } else if (hours === 0) {
          dayPeriodEnumValue = dayPeriodEnum.midnight;
        } else {
          dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
        }
        switch (token) {
          case "b":
          case "bb":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "abbreviated",
              context: "formatting"
            });
          case "bbb":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "abbreviated",
              context: "formatting"
            }).toLowerCase();
          case "bbbbb":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "narrow",
              context: "formatting"
            });
          case "bbbb":
          default:
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      // in the morning, in the afternoon, in the evening, at night
      B: function B6(date, token, localize) {
        var hours = date.getUTCHours();
        var dayPeriodEnumValue;
        if (hours >= 17) {
          dayPeriodEnumValue = dayPeriodEnum.evening;
        } else if (hours >= 12) {
          dayPeriodEnumValue = dayPeriodEnum.afternoon;
        } else if (hours >= 4) {
          dayPeriodEnumValue = dayPeriodEnum.morning;
        } else {
          dayPeriodEnumValue = dayPeriodEnum.night;
        }
        switch (token) {
          case "B":
          case "BB":
          case "BBB":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "abbreviated",
              context: "formatting"
            });
          case "BBBBB":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "narrow",
              context: "formatting"
            });
          case "BBBB":
          default:
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      // Hour [1-12]
      h: function h8(date, token, localize) {
        if (token === "ho") {
          var hours = date.getUTCHours() % 12;
          if (hours === 0) hours = 12;
          return localize.ordinalNumber(hours, {
            unit: "hour"
          });
        }
        return _index7.default.h(date, token);
      },
      // Hour [0-23]
      H: function H8(date, token, localize) {
        if (token === "Ho") {
          return localize.ordinalNumber(date.getUTCHours(), {
            unit: "hour"
          });
        }
        return _index7.default.H(date, token);
      },
      // Hour [0-11]
      K: function K4(date, token, localize) {
        var hours = date.getUTCHours() % 12;
        if (token === "Ko") {
          return localize.ordinalNumber(hours, {
            unit: "hour"
          });
        }
        return (0, _index6.default)(hours, token.length);
      },
      // Hour [1-24]
      k: function k8(date, token, localize) {
        var hours = date.getUTCHours();
        if (hours === 0) hours = 24;
        if (token === "ko") {
          return localize.ordinalNumber(hours, {
            unit: "hour"
          });
        }
        return (0, _index6.default)(hours, token.length);
      },
      // Minute
      m: function m13(date, token, localize) {
        if (token === "mo") {
          return localize.ordinalNumber(date.getUTCMinutes(), {
            unit: "minute"
          });
        }
        return _index7.default.m(date, token);
      },
      // Second
      s: function s15(date, token, localize) {
        if (token === "so") {
          return localize.ordinalNumber(date.getUTCSeconds(), {
            unit: "second"
          });
        }
        return _index7.default.s(date, token);
      },
      // Fraction of second
      S: function S6(date, token) {
        return _index7.default.S(date, token);
      },
      // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)
      X: function X2(date, token, _localize, options) {
        var originalDate = options._originalDate || date;
        var timezoneOffset = originalDate.getTimezoneOffset();
        if (timezoneOffset === 0) {
          return "Z";
        }
        switch (token) {
          case "X":
            return formatTimezoneWithOptionalMinutes(timezoneOffset);
          case "XXXX":
          case "XX":
            return formatTimezone(timezoneOffset);
          case "XXXXX":
          case "XXX":
          default:
            return formatTimezone(timezoneOffset, ":");
        }
      },
      // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)
      x: function x6(date, token, _localize, options) {
        var originalDate = options._originalDate || date;
        var timezoneOffset = originalDate.getTimezoneOffset();
        switch (token) {
          case "x":
            return formatTimezoneWithOptionalMinutes(timezoneOffset);
          case "xxxx":
          case "xx":
            return formatTimezone(timezoneOffset);
          case "xxxxx":
          case "xxx":
          default:
            return formatTimezone(timezoneOffset, ":");
        }
      },
      // Timezone (GMT)
      O: function O7(date, token, _localize, options) {
        var originalDate = options._originalDate || date;
        var timezoneOffset = originalDate.getTimezoneOffset();
        switch (token) {
          case "O":
          case "OO":
          case "OOO":
            return "GMT" + formatTimezoneShort(timezoneOffset, ":");
          case "OOOO":
          default:
            return "GMT" + formatTimezone(timezoneOffset, ":");
        }
      },
      // Timezone (specific non-location)
      z: function z5(date, token, _localize, options) {
        var originalDate = options._originalDate || date;
        var timezoneOffset = originalDate.getTimezoneOffset();
        switch (token) {
          case "z":
          case "zz":
          case "zzz":
            return "GMT" + formatTimezoneShort(timezoneOffset, ":");
          case "zzzz":
          default:
            return "GMT" + formatTimezone(timezoneOffset, ":");
        }
      },
      // Seconds timestamp
      t: function t2(date, token, _localize, options) {
        var originalDate = options._originalDate || date;
        var timestamp = Math.floor(originalDate.getTime() / 1e3);
        return (0, _index6.default)(timestamp, token.length);
      },
      // Milliseconds timestamp
      T: function T7(date, token, _localize, options) {
        var originalDate = options._originalDate || date;
        var timestamp = originalDate.getTime();
        return (0, _index6.default)(timestamp, token.length);
      }
    };
    function formatTimezoneShort(offset2, dirtyDelimiter) {
      var sign = offset2 > 0 ? "-" : "+";
      var absOffset = Math.abs(offset2);
      var hours = Math.floor(absOffset / 60);
      var minutes = absOffset % 60;
      if (minutes === 0) {
        return sign + String(hours);
      }
      var delimiter = dirtyDelimiter || "";
      return sign + String(hours) + delimiter + (0, _index6.default)(minutes, 2);
    }
    function formatTimezoneWithOptionalMinutes(offset2, dirtyDelimiter) {
      if (offset2 % 60 === 0) {
        var sign = offset2 > 0 ? "-" : "+";
        return sign + (0, _index6.default)(Math.abs(offset2) / 60, 2);
      }
      return formatTimezone(offset2, dirtyDelimiter);
    }
    function formatTimezone(offset2, dirtyDelimiter) {
      var delimiter = dirtyDelimiter || "";
      var sign = offset2 > 0 ? "-" : "+";
      var absOffset = Math.abs(offset2);
      var hours = (0, _index6.default)(Math.floor(absOffset / 60), 2);
      var minutes = (0, _index6.default)(absOffset % 60, 2);
      return sign + hours + delimiter + minutes;
    }
    var _default = formatters;
    exports2.default = _default;
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/format/longFormatters/index.js
var require_longFormatters = __commonJS({
  "node_modules/date-fns/_lib/format/longFormatters/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = void 0;
    var dateLongFormatter = function dateLongFormatter2(pattern, formatLong) {
      switch (pattern) {
        case "P":
          return formatLong.date({
            width: "short"
          });
        case "PP":
          return formatLong.date({
            width: "medium"
          });
        case "PPP":
          return formatLong.date({
            width: "long"
          });
        case "PPPP":
        default:
          return formatLong.date({
            width: "full"
          });
      }
    };
    var timeLongFormatter = function timeLongFormatter2(pattern, formatLong) {
      switch (pattern) {
        case "p":
          return formatLong.time({
            width: "short"
          });
        case "pp":
          return formatLong.time({
            width: "medium"
          });
        case "ppp":
          return formatLong.time({
            width: "long"
          });
        case "pppp":
        default:
          return formatLong.time({
            width: "full"
          });
      }
    };
    var dateTimeLongFormatter = function dateTimeLongFormatter2(pattern, formatLong) {
      var matchResult = pattern.match(/(P+)(p+)?/) || [];
      var datePattern = matchResult[1];
      var timePattern = matchResult[2];
      if (!timePattern) {
        return dateLongFormatter(pattern, formatLong);
      }
      var dateTimeFormat;
      switch (datePattern) {
        case "P":
          dateTimeFormat = formatLong.dateTime({
            width: "short"
          });
          break;
        case "PP":
          dateTimeFormat = formatLong.dateTime({
            width: "medium"
          });
          break;
        case "PPP":
          dateTimeFormat = formatLong.dateTime({
            width: "long"
          });
          break;
        case "PPPP":
        default:
          dateTimeFormat = formatLong.dateTime({
            width: "full"
          });
          break;
      }
      return dateTimeFormat.replace("{{date}}", dateLongFormatter(datePattern, formatLong)).replace("{{time}}", timeLongFormatter(timePattern, formatLong));
    };
    var longFormatters = {
      p: timeLongFormatter,
      P: dateTimeLongFormatter
    };
    var _default = longFormatters;
    exports2.default = _default;
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js
var require_getTimezoneOffsetInMilliseconds = __commonJS({
  "node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = getTimezoneOffsetInMilliseconds;
    function getTimezoneOffsetInMilliseconds(date) {
      var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));
      utcDate.setUTCFullYear(date.getFullYear());
      return date.getTime() - utcDate.getTime();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/protectedTokens/index.js
var require_protectedTokens = __commonJS({
  "node_modules/date-fns/_lib/protectedTokens/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.isProtectedDayOfYearToken = isProtectedDayOfYearToken;
    exports2.isProtectedWeekYearToken = isProtectedWeekYearToken;
    exports2.throwProtectedError = throwProtectedError;
    var protectedDayOfYearTokens = ["D", "DD"];
    var protectedWeekYearTokens = ["YY", "YYYY"];
    function isProtectedDayOfYearToken(token) {
      return protectedDayOfYearTokens.indexOf(token) !== -1;
    }
    function isProtectedWeekYearToken(token) {
      return protectedWeekYearTokens.indexOf(token) !== -1;
    }
    function throwProtectedError(token, format, input) {
      if (token === "YYYY") {
        throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(format, "`) for formatting years to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
      } else if (token === "YY") {
        throw new RangeError("Use `yy` instead of `YY` (in `".concat(format, "`) for formatting years to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
      } else if (token === "D") {
        throw new RangeError("Use `d` instead of `D` (in `".concat(format, "`) for formatting days of the month to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
      } else if (token === "DD") {
        throw new RangeError("Use `dd` instead of `DD` (in `".concat(format, "`) for formatting days of the month to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
      }
    }
  }
});

// node_modules/date-fns/locale/en-US/_lib/formatDistance/index.js
var require_formatDistance = __commonJS({
  "node_modules/date-fns/locale/en-US/_lib/formatDistance/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = void 0;
    var formatDistanceLocale = {
      lessThanXSeconds: {
        one: "less than a second",
        other: "less than {{count}} seconds"
      },
      xSeconds: {
        one: "1 second",
        other: "{{count}} seconds"
      },
      halfAMinute: "half a minute",
      lessThanXMinutes: {
        one: "less than a minute",
        other: "less than {{count}} minutes"
      },
      xMinutes: {
        one: "1 minute",
        other: "{{count}} minutes"
      },
      aboutXHours: {
        one: "about 1 hour",
        other: "about {{count}} hours"
      },
      xHours: {
        one: "1 hour",
        other: "{{count}} hours"
      },
      xDays: {
        one: "1 day",
        other: "{{count}} days"
      },
      aboutXWeeks: {
        one: "about 1 week",
        other: "about {{count}} weeks"
      },
      xWeeks: {
        one: "1 week",
        other: "{{count}} weeks"
      },
      aboutXMonths: {
        one: "about 1 month",
        other: "about {{count}} months"
      },
      xMonths: {
        one: "1 month",
        other: "{{count}} months"
      },
      aboutXYears: {
        one: "about 1 year",
        other: "about {{count}} years"
      },
      xYears: {
        one: "1 year",
        other: "{{count}} years"
      },
      overXYears: {
        one: "over 1 year",
        other: "over {{count}} years"
      },
      almostXYears: {
        one: "almost 1 year",
        other: "almost {{count}} years"
      }
    };
    var formatDistance = function formatDistance2(token, count, options) {
      var result;
      var tokenValue = formatDistanceLocale[token];
      if (typeof tokenValue === "string") {
        result = tokenValue;
      } else if (count === 1) {
        result = tokenValue.one;
      } else {
        result = tokenValue.other.replace("{{count}}", count.toString());
      }
      if (options !== null && options !== void 0 && options.addSuffix) {
        if (options.comparison && options.comparison > 0) {
          return "in " + result;
        } else {
          return result + " ago";
        }
      }
      return result;
    };
    var _default = formatDistance;
    exports2.default = _default;
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/locale/_lib/buildFormatLongFn/index.js
var require_buildFormatLongFn = __commonJS({
  "node_modules/date-fns/locale/_lib/buildFormatLongFn/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = buildFormatLongFn;
    function buildFormatLongFn(args) {
      return function() {
        var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        var width = options.width ? String(options.width) : args.defaultWidth;
        var format = args.formats[width] || args.formats[args.defaultWidth];
        return format;
      };
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/locale/en-US/_lib/formatLong/index.js
var require_formatLong = __commonJS({
  "node_modules/date-fns/locale/en-US/_lib/formatLong/index.js"(exports2, module2) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = void 0;
    var _index = _interopRequireDefault(require_buildFormatLongFn());
    var dateFormats = {
      full: "EEEE, MMMM do, y",
      long: "MMMM do, y",
      medium: "MMM d, y",
      short: "MM/dd/yyyy"
    };
    var timeFormats = {
      full: "h:mm:ss a zzzz",
      long: "h:mm:ss a z",
      medium: "h:mm:ss a",
      short: "h:mm a"
    };
    var dateTimeFormats = {
      full: "{{date}} 'at' {{time}}",
      long: "{{date}} 'at' {{time}}",
      medium: "{{date}}, {{time}}",
      short: "{{date}}, {{time}}"
    };
    var formatLong = {
      date: (0, _index.default)({
        formats: dateFormats,
        defaultWidth: "full"
      }),
      time: (0, _index.default)({
        formats: timeFormats,
        defaultWidth: "full"
      }),
      dateTime: (0, _index.default)({
        formats: dateTimeFormats,
        defaultWidth: "full"
      })
    };
    var _default = formatLong;
    exports2.default = _default;
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/locale/en-US/_lib/formatRelative/index.js
var require_formatRelative = __commonJS({
  "node_modules/date-fns/locale/en-US/_lib/formatRelative/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = void 0;
    var formatRelativeLocale = {
      lastWeek: "'last' eeee 'at' p",
      yesterday: "'yesterday at' p",
      today: "'today at' p",
      tomorrow: "'tomorrow at' p",
      nextWeek: "eeee 'at' p",
      other: "P"
    };
    var formatRelative = function formatRelative2(token, _date, _baseDate, _options) {
      return formatRelativeLocale[token];
    };
    var _default = formatRelative;
    exports2.default = _default;
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/locale/_lib/buildLocalizeFn/index.js
var require_buildLocalizeFn = __commonJS({
  "node_modules/date-fns/locale/_lib/buildLocalizeFn/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = buildLocalizeFn;
    function buildLocalizeFn(args) {
      return function(dirtyIndex, options) {
        var context = options !== null && options !== void 0 && options.context ? String(options.context) : "standalone";
        var valuesArray;
        if (context === "formatting" && args.formattingValues) {
          var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
          var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;
          valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
        } else {
          var _defaultWidth = args.defaultWidth;
          var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;
          valuesArray = args.values[_width] || args.values[_defaultWidth];
        }
        var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
        return valuesArray[index];
      };
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/locale/en-US/_lib/localize/index.js
var require_localize = __commonJS({
  "node_modules/date-fns/locale/en-US/_lib/localize/index.js"(exports2, module2) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = void 0;
    var _index = _interopRequireDefault(require_buildLocalizeFn());
    var eraValues = {
      narrow: ["B", "A"],
      abbreviated: ["BC", "AD"],
      wide: ["Before Christ", "Anno Domini"]
    };
    var quarterValues = {
      narrow: ["1", "2", "3", "4"],
      abbreviated: ["Q1", "Q2", "Q3", "Q4"],
      wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"]
    };
    var monthValues = {
      narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
      abbreviated: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
      wide: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
    };
    var dayValues = {
      narrow: ["S", "M", "T", "W", "T", "F", "S"],
      short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
      abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
      wide: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
    };
    var dayPeriodValues = {
      narrow: {
        am: "a",
        pm: "p",
        midnight: "mi",
        noon: "n",
        morning: "morning",
        afternoon: "afternoon",
        evening: "evening",
        night: "night"
      },
      abbreviated: {
        am: "AM",
        pm: "PM",
        midnight: "midnight",
        noon: "noon",
        morning: "morning",
        afternoon: "afternoon",
        evening: "evening",
        night: "night"
      },
      wide: {
        am: "a.m.",
        pm: "p.m.",
        midnight: "midnight",
        noon: "noon",
        morning: "morning",
        afternoon: "afternoon",
        evening: "evening",
        night: "night"
      }
    };
    var formattingDayPeriodValues = {
      narrow: {
        am: "a",
        pm: "p",
        midnight: "mi",
        noon: "n",
        morning: "in the morning",
        afternoon: "in the afternoon",
        evening: "in the evening",
        night: "at night"
      },
      abbreviated: {
        am: "AM",
        pm: "PM",
        midnight: "midnight",
        noon: "noon",
        morning: "in the morning",
        afternoon: "in the afternoon",
        evening: "in the evening",
        night: "at night"
      },
      wide: {
        am: "a.m.",
        pm: "p.m.",
        midnight: "midnight",
        noon: "noon",
        morning: "in the morning",
        afternoon: "in the afternoon",
        evening: "in the evening",
        night: "at night"
      }
    };
    var ordinalNumber = function ordinalNumber2(dirtyNumber, _options) {
      var number = Number(dirtyNumber);
      var rem100 = number % 100;
      if (rem100 > 20 || rem100 < 10) {
        switch (rem100 % 10) {
          case 1:
            return number + "st";
          case 2:
            return number + "nd";
          case 3:
            return number + "rd";
        }
      }
      return number + "th";
    };
    var localize = {
      ordinalNumber,
      era: (0, _index.default)({
        values: eraValues,
        defaultWidth: "wide"
      }),
      quarter: (0, _index.default)({
        values: quarterValues,
        defaultWidth: "wide",
        argumentCallback: function argumentCallback(quarter) {
          return quarter - 1;
        }
      }),
      month: (0, _index.default)({
        values: monthValues,
        defaultWidth: "wide"
      }),
      day: (0, _index.default)({
        values: dayValues,
        defaultWidth: "wide"
      }),
      dayPeriod: (0, _index.default)({
        values: dayPeriodValues,
        defaultWidth: "wide",
        formattingValues: formattingDayPeriodValues,
        defaultFormattingWidth: "wide"
      })
    };
    var _default = localize;
    exports2.default = _default;
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/locale/_lib/buildMatchFn/index.js
var require_buildMatchFn = __commonJS({
  "node_modules/date-fns/locale/_lib/buildMatchFn/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = buildMatchFn;
    function buildMatchFn(args) {
      return function(string) {
        var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        var width = options.width;
        var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
        var matchResult = string.match(matchPattern);
        if (!matchResult) {
          return null;
        }
        var matchedString = matchResult[0];
        var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
        var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function(pattern) {
          return pattern.test(matchedString);
        }) : findKey(parsePatterns, function(pattern) {
          return pattern.test(matchedString);
        });
        var value2;
        value2 = args.valueCallback ? args.valueCallback(key) : key;
        value2 = options.valueCallback ? options.valueCallback(value2) : value2;
        var rest = string.slice(matchedString.length);
        return {
          value: value2,
          rest
        };
      };
    }
    function findKey(object, predicate) {
      for (var key in object) {
        if (object.hasOwnProperty(key) && predicate(object[key])) {
          return key;
        }
      }
      return void 0;
    }
    function findIndex(array, predicate) {
      for (var key = 0; key < array.length; key++) {
        if (predicate(array[key])) {
          return key;
        }
      }
      return void 0;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/locale/_lib/buildMatchPatternFn/index.js
var require_buildMatchPatternFn = __commonJS({
  "node_modules/date-fns/locale/_lib/buildMatchPatternFn/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = buildMatchPatternFn;
    function buildMatchPatternFn(args) {
      return function(string) {
        var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        var matchResult = string.match(args.matchPattern);
        if (!matchResult) return null;
        var matchedString = matchResult[0];
        var parseResult = string.match(args.parsePattern);
        if (!parseResult) return null;
        var value2 = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
        value2 = options.valueCallback ? options.valueCallback(value2) : value2;
        var rest = string.slice(matchedString.length);
        return {
          value: value2,
          rest
        };
      };
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/locale/en-US/_lib/match/index.js
var require_match = __commonJS({
  "node_modules/date-fns/locale/en-US/_lib/match/index.js"(exports2, module2) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = void 0;
    var _index = _interopRequireDefault(require_buildMatchFn());
    var _index2 = _interopRequireDefault(require_buildMatchPatternFn());
    var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
    var parseOrdinalNumberPattern = /\d+/i;
    var matchEraPatterns = {
      narrow: /^(b|a)/i,
      abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
      wide: /^(before christ|before common era|anno domini|common era)/i
    };
    var parseEraPatterns = {
      any: [/^b/i, /^(a|c)/i]
    };
    var matchQuarterPatterns = {
      narrow: /^[1234]/i,
      abbreviated: /^q[1234]/i,
      wide: /^[1234](th|st|nd|rd)? quarter/i
    };
    var parseQuarterPatterns = {
      any: [/1/i, /2/i, /3/i, /4/i]
    };
    var matchMonthPatterns = {
      narrow: /^[jfmasond]/i,
      abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
      wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
    };
    var parseMonthPatterns = {
      narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
      any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
    };
    var matchDayPatterns = {
      narrow: /^[smtwf]/i,
      short: /^(su|mo|tu|we|th|fr|sa)/i,
      abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
      wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
    };
    var parseDayPatterns = {
      narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
      any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
    };
    var matchDayPeriodPatterns = {
      narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
      any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
    };
    var parseDayPeriodPatterns = {
      any: {
        am: /^a/i,
        pm: /^p/i,
        midnight: /^mi/i,
        noon: /^no/i,
        morning: /morning/i,
        afternoon: /afternoon/i,
        evening: /evening/i,
        night: /night/i
      }
    };
    var match2 = {
      ordinalNumber: (0, _index2.default)({
        matchPattern: matchOrdinalNumberPattern,
        parsePattern: parseOrdinalNumberPattern,
        valueCallback: function valueCallback(value2) {
          return parseInt(value2, 10);
        }
      }),
      era: (0, _index.default)({
        matchPatterns: matchEraPatterns,
        defaultMatchWidth: "wide",
        parsePatterns: parseEraPatterns,
        defaultParseWidth: "any"
      }),
      quarter: (0, _index.default)({
        matchPatterns: matchQuarterPatterns,
        defaultMatchWidth: "wide",
        parsePatterns: parseQuarterPatterns,
        defaultParseWidth: "any",
        valueCallback: function valueCallback(index) {
          return index + 1;
        }
      }),
      month: (0, _index.default)({
        matchPatterns: matchMonthPatterns,
        defaultMatchWidth: "wide",
        parsePatterns: parseMonthPatterns,
        defaultParseWidth: "any"
      }),
      day: (0, _index.default)({
        matchPatterns: matchDayPatterns,
        defaultMatchWidth: "wide",
        parsePatterns: parseDayPatterns,
        defaultParseWidth: "any"
      }),
      dayPeriod: (0, _index.default)({
        matchPatterns: matchDayPeriodPatterns,
        defaultMatchWidth: "any",
        parsePatterns: parseDayPeriodPatterns,
        defaultParseWidth: "any"
      })
    };
    var _default = match2;
    exports2.default = _default;
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/locale/en-US/index.js
var require_en_US = __commonJS({
  "node_modules/date-fns/locale/en-US/index.js"(exports2, module2) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = void 0;
    var _index = _interopRequireDefault(require_formatDistance());
    var _index2 = _interopRequireDefault(require_formatLong());
    var _index3 = _interopRequireDefault(require_formatRelative());
    var _index4 = _interopRequireDefault(require_localize());
    var _index5 = _interopRequireDefault(require_match());
    var locale = {
      code: "en-US",
      formatDistance: _index.default,
      formatLong: _index2.default,
      formatRelative: _index3.default,
      localize: _index4.default,
      match: _index5.default,
      options: {
        weekStartsOn: 0,
        firstWeekContainsDate: 1
      }
    };
    var _default = locale;
    exports2.default = _default;
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/defaultLocale/index.js
var require_defaultLocale = __commonJS({
  "node_modules/date-fns/_lib/defaultLocale/index.js"(exports2, module2) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = void 0;
    var _index = _interopRequireDefault(require_en_US());
    var _default = _index.default;
    exports2.default = _default;
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/format/index.js
var require_format = __commonJS({
  "node_modules/date-fns/format/index.js"(exports2, module2) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = format;
    var _index = _interopRequireDefault(require_isValid());
    var _index2 = _interopRequireDefault(require_subMilliseconds());
    var _index3 = _interopRequireDefault(require_toDate());
    var _index4 = _interopRequireDefault(require_formatters());
    var _index5 = _interopRequireDefault(require_longFormatters());
    var _index6 = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds());
    var _index7 = require_protectedTokens();
    var _index8 = _interopRequireDefault(require_toInteger());
    var _index9 = _interopRequireDefault(require_requiredArgs());
    var _index10 = require_defaultOptions();
    var _index11 = _interopRequireDefault(require_defaultLocale());
    var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;
    var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
    var escapedStringRegExp = /^'([^]*?)'?$/;
    var doubleQuoteRegExp = /''/g;
    var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
    function format(dirtyDate, dirtyFormatStr, options) {
      var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _options$locale3, _options$locale3$opti, _defaultOptions$local3, _defaultOptions$local4;
      (0, _index9.default)(2, arguments);
      var formatStr = String(dirtyFormatStr);
      var defaultOptions = (0, _index10.getDefaultOptions)();
      var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : _index11.default;
      var firstWeekContainsDate = (0, _index8.default)((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale2 = options.locale) === null || _options$locale2 === void 0 ? void 0 : (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.firstWeekContainsDate) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1);
      if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
        throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
      }
      var weekStartsOn = (0, _index8.default)((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale3 = options.locale) === null || _options$locale3 === void 0 ? void 0 : (_options$locale3$opti = _options$locale3.options) === null || _options$locale3$opti === void 0 ? void 0 : _options$locale3$opti.weekStartsOn) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions.locale) === null || _defaultOptions$local3 === void 0 ? void 0 : (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0);
      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
      }
      if (!locale.localize) {
        throw new RangeError("locale must contain localize property");
      }
      if (!locale.formatLong) {
        throw new RangeError("locale must contain formatLong property");
      }
      var originalDate = (0, _index3.default)(dirtyDate);
      if (!(0, _index.default)(originalDate)) {
        throw new RangeError("Invalid time value");
      }
      var timezoneOffset = (0, _index6.default)(originalDate);
      var utcDate = (0, _index2.default)(originalDate, timezoneOffset);
      var formatterOptions = {
        firstWeekContainsDate,
        weekStartsOn,
        locale,
        _originalDate: originalDate
      };
      var result = formatStr.match(longFormattingTokensRegExp).map(function(substring2) {
        var firstCharacter = substring2[0];
        if (firstCharacter === "p" || firstCharacter === "P") {
          var longFormatter = _index5.default[firstCharacter];
          return longFormatter(substring2, locale.formatLong);
        }
        return substring2;
      }).join("").match(formattingTokensRegExp).map(function(substring2) {
        if (substring2 === "''") {
          return "'";
        }
        var firstCharacter = substring2[0];
        if (firstCharacter === "'") {
          return cleanEscapedString(substring2);
        }
        var formatter = _index4.default[firstCharacter];
        if (formatter) {
          if (!(options !== null && options !== void 0 && options.useAdditionalWeekYearTokens) && (0, _index7.isProtectedWeekYearToken)(substring2)) {
            (0, _index7.throwProtectedError)(substring2, dirtyFormatStr, String(dirtyDate));
          }
          if (!(options !== null && options !== void 0 && options.useAdditionalDayOfYearTokens) && (0, _index7.isProtectedDayOfYearToken)(substring2)) {
            (0, _index7.throwProtectedError)(substring2, dirtyFormatStr, String(dirtyDate));
          }
          return formatter(utcDate, substring2, locale.localize, formatterOptions);
        }
        if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
          throw new RangeError("Format string contains an unescaped latin alphabet character `" + firstCharacter + "`");
        }
        return substring2;
      }).join("");
      return result;
    }
    function cleanEscapedString(input) {
      var matched = input.match(escapedStringRegExp);
      if (!matched) {
        return input;
      }
      return matched[1].replace(doubleQuoteRegExp, "'");
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/constants/index.js
var require_constants = __commonJS({
  "node_modules/date-fns/constants/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.secondsInYear = exports2.secondsInWeek = exports2.secondsInQuarter = exports2.secondsInMonth = exports2.secondsInMinute = exports2.secondsInHour = exports2.secondsInDay = exports2.quartersInYear = exports2.monthsInYear = exports2.monthsInQuarter = exports2.minutesInHour = exports2.minTime = exports2.millisecondsInSecond = exports2.millisecondsInMinute = exports2.millisecondsInHour = exports2.maxTime = exports2.daysInYear = exports2.daysInWeek = void 0;
    var daysInWeek = 7;
    exports2.daysInWeek = daysInWeek;
    var daysInYear2 = 365.2425;
    exports2.daysInYear = daysInYear2;
    var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1e3;
    exports2.maxTime = maxTime;
    var millisecondsInMinute = 6e4;
    exports2.millisecondsInMinute = millisecondsInMinute;
    var millisecondsInHour = 36e5;
    exports2.millisecondsInHour = millisecondsInHour;
    var millisecondsInSecond = 1e3;
    exports2.millisecondsInSecond = millisecondsInSecond;
    var minTime = -maxTime;
    exports2.minTime = minTime;
    var minutesInHour = 60;
    exports2.minutesInHour = minutesInHour;
    var monthsInQuarter = 3;
    exports2.monthsInQuarter = monthsInQuarter;
    var monthsInYear = 12;
    exports2.monthsInYear = monthsInYear;
    var quartersInYear = 4;
    exports2.quartersInYear = quartersInYear;
    var secondsInHour = 3600;
    exports2.secondsInHour = secondsInHour;
    var secondsInMinute = 60;
    exports2.secondsInMinute = secondsInMinute;
    var secondsInDay = secondsInHour * 24;
    exports2.secondsInDay = secondsInDay;
    var secondsInWeek = secondsInDay * 7;
    exports2.secondsInWeek = secondsInWeek;
    var secondsInYear = secondsInDay * daysInYear2;
    exports2.secondsInYear = secondsInYear;
    var secondsInMonth = secondsInYear / 12;
    exports2.secondsInMonth = secondsInMonth;
    var secondsInQuarter = secondsInMonth * 3;
    exports2.secondsInQuarter = secondsInQuarter;
  }
});

// node_modules/date-fns/parseISO/index.js
var require_parseISO = __commonJS({
  "node_modules/date-fns/parseISO/index.js"(exports2, module2) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = parseISO;
    var _index = require_constants();
    var _index2 = _interopRequireDefault(require_requiredArgs());
    var _index3 = _interopRequireDefault(require_toInteger());
    function parseISO(argument, options) {
      var _options$additionalDi;
      (0, _index2.default)(1, arguments);
      var additionalDigits = (0, _index3.default)((_options$additionalDi = options === null || options === void 0 ? void 0 : options.additionalDigits) !== null && _options$additionalDi !== void 0 ? _options$additionalDi : 2);
      if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {
        throw new RangeError("additionalDigits must be 0, 1 or 2");
      }
      if (!(typeof argument === "string" || Object.prototype.toString.call(argument) === "[object String]")) {
        return /* @__PURE__ */ new Date(NaN);
      }
      var dateStrings = splitDateString(argument);
      var date;
      if (dateStrings.date) {
        var parseYearResult = parseYear(dateStrings.date, additionalDigits);
        date = parseDate(parseYearResult.restDateString, parseYearResult.year);
      }
      if (!date || isNaN(date.getTime())) {
        return /* @__PURE__ */ new Date(NaN);
      }
      var timestamp = date.getTime();
      var time = 0;
      var offset2;
      if (dateStrings.time) {
        time = parseTime(dateStrings.time);
        if (isNaN(time)) {
          return /* @__PURE__ */ new Date(NaN);
        }
      }
      if (dateStrings.timezone) {
        offset2 = parseTimezone(dateStrings.timezone);
        if (isNaN(offset2)) {
          return /* @__PURE__ */ new Date(NaN);
        }
      } else {
        var dirtyDate = new Date(timestamp + time);
        var result = /* @__PURE__ */ new Date(0);
        result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());
        result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());
        return result;
      }
      return new Date(timestamp + time + offset2);
    }
    var patterns = {
      dateTimeDelimiter: /[T ]/,
      timeZoneDelimiter: /[Z ]/i,
      timezone: /([Z+-].*)$/
    };
    var dateRegex = /^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/;
    var timeRegex = /^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/;
    var timezoneRegex = /^([+-])(\d{2})(?::?(\d{2}))?$/;
    function splitDateString(dateString) {
      var dateStrings = {};
      var array = dateString.split(patterns.dateTimeDelimiter);
      var timeString;
      if (array.length > 2) {
        return dateStrings;
      }
      if (/:/.test(array[0])) {
        timeString = array[0];
      } else {
        dateStrings.date = array[0];
        timeString = array[1];
        if (patterns.timeZoneDelimiter.test(dateStrings.date)) {
          dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];
          timeString = dateString.substr(dateStrings.date.length, dateString.length);
        }
      }
      if (timeString) {
        var token = patterns.timezone.exec(timeString);
        if (token) {
          dateStrings.time = timeString.replace(token[1], "");
          dateStrings.timezone = token[1];
        } else {
          dateStrings.time = timeString;
        }
      }
      return dateStrings;
    }
    function parseYear(dateString, additionalDigits) {
      var regex = new RegExp("^(?:(\\d{4}|[+-]\\d{" + (4 + additionalDigits) + "})|(\\d{2}|[+-]\\d{" + (2 + additionalDigits) + "})$)");
      var captures = dateString.match(regex);
      if (!captures) return {
        year: NaN,
        restDateString: ""
      };
      var year = captures[1] ? parseInt(captures[1]) : null;
      var century = captures[2] ? parseInt(captures[2]) : null;
      return {
        year: century === null ? year : century * 100,
        restDateString: dateString.slice((captures[1] || captures[2]).length)
      };
    }
    function parseDate(dateString, year) {
      if (year === null) return /* @__PURE__ */ new Date(NaN);
      var captures = dateString.match(dateRegex);
      if (!captures) return /* @__PURE__ */ new Date(NaN);
      var isWeekDate = !!captures[4];
      var dayOfYear = parseDateUnit(captures[1]);
      var month = parseDateUnit(captures[2]) - 1;
      var day = parseDateUnit(captures[3]);
      var week = parseDateUnit(captures[4]);
      var dayOfWeek2 = parseDateUnit(captures[5]) - 1;
      if (isWeekDate) {
        if (!validateWeekDate(year, week, dayOfWeek2)) {
          return /* @__PURE__ */ new Date(NaN);
        }
        return dayOfISOWeekYear(year, week, dayOfWeek2);
      } else {
        var date = /* @__PURE__ */ new Date(0);
        if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {
          return /* @__PURE__ */ new Date(NaN);
        }
        date.setUTCFullYear(year, month, Math.max(dayOfYear, day));
        return date;
      }
    }
    function parseDateUnit(value2) {
      return value2 ? parseInt(value2) : 1;
    }
    function parseTime(timeString) {
      var captures = timeString.match(timeRegex);
      if (!captures) return NaN;
      var hours = parseTimeUnit(captures[1]);
      var minutes = parseTimeUnit(captures[2]);
      var seconds = parseTimeUnit(captures[3]);
      if (!validateTime(hours, minutes, seconds)) {
        return NaN;
      }
      return hours * _index.millisecondsInHour + minutes * _index.millisecondsInMinute + seconds * 1e3;
    }
    function parseTimeUnit(value2) {
      return value2 && parseFloat(value2.replace(",", ".")) || 0;
    }
    function parseTimezone(timezoneString) {
      if (timezoneString === "Z") return 0;
      var captures = timezoneString.match(timezoneRegex);
      if (!captures) return 0;
      var sign = captures[1] === "+" ? -1 : 1;
      var hours = parseInt(captures[2]);
      var minutes = captures[3] && parseInt(captures[3]) || 0;
      if (!validateTimezone(hours, minutes)) {
        return NaN;
      }
      return sign * (hours * _index.millisecondsInHour + minutes * _index.millisecondsInMinute);
    }
    function dayOfISOWeekYear(isoWeekYear, week, day) {
      var date = /* @__PURE__ */ new Date(0);
      date.setUTCFullYear(isoWeekYear, 0, 4);
      var fourthOfJanuaryDay = date.getUTCDay() || 7;
      var diff2 = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;
      date.setUTCDate(date.getUTCDate() + diff2);
      return date;
    }
    var daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
    function isLeapYearIndex(year) {
      return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
    }
    function validateDate(year, month, date) {
      return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));
    }
    function validateDayOfYearDate(year, dayOfYear) {
      return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);
    }
    function validateWeekDate(_year, week, day) {
      return week >= 1 && week <= 53 && day >= 0 && day <= 6;
    }
    function validateTime(hours, minutes, seconds) {
      if (hours === 24) {
        return minutes === 0 && seconds === 0;
      }
      return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;
    }
    function validateTimezone(_hours, minutes) {
      return minutes >= 0 && minutes <= 59;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/startOfDay/index.js
var require_startOfDay = __commonJS({
  "node_modules/date-fns/startOfDay/index.js"(exports2, module2) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = startOfDay;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function startOfDay(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInCalendarDays/index.js
var require_differenceInCalendarDays = __commonJS({
  "node_modules/date-fns/differenceInCalendarDays/index.js"(exports2, module2) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.default = differenceInCalendarDays;
    var _index = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds());
    var _index2 = _interopRequireDefault(require_startOfDay());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    var MILLISECONDS_IN_DAY = 864e5;
    function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {
      (0, _index3.default)(2, arguments);
      var startOfDayLeft = (0, _index2.default)(dirtyDateLeft);
      var startOfDayRight = (0, _index2.default)(dirtyDateRight);
      var timestampLeft = startOfDayLeft.getTime() - (0, _index.default)(startOfDayLeft);
      var timestampRight = startOfDayRight.getTime() - (0, _index.default)(startOfDayRight);
      return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/fast-xml-parser/src/util.js
var require_util = __commonJS({
  "node_modules/fast-xml-parser/src/util.js"(exports2) {
    "use strict";
    var nameStartChar = ":A-Za-z_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
    var nameChar = nameStartChar + "\\-.\\d\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
    var nameRegexp = "[" + nameStartChar + "][" + nameChar + "]*";
    var regexName = new RegExp("^" + nameRegexp + "$");
    var getAllMatches = function(string, regex) {
      const matches = [];
      let match2 = regex.exec(string);
      while (match2) {
        const allmatches = [];
        allmatches.startIndex = regex.lastIndex - match2[0].length;
        const len = match2.length;
        for (let index = 0; index < len; index++) {
          allmatches.push(match2[index]);
        }
        matches.push(allmatches);
        match2 = regex.exec(string);
      }
      return matches;
    };
    var isName = function(string) {
      const match2 = regexName.exec(string);
      return !(match2 === null || typeof match2 === "undefined");
    };
    exports2.isExist = function(v11) {
      return typeof v11 !== "undefined";
    };
    exports2.isEmptyObject = function(obj) {
      return Object.keys(obj).length === 0;
    };
    exports2.merge = function(target, a15, arrayMode) {
      if (a15) {
        const keys = Object.keys(a15);
        const len = keys.length;
        for (let i11 = 0; i11 < len; i11++) {
          if (arrayMode === "strict") {
            target[keys[i11]] = [a15[keys[i11]]];
          } else {
            target[keys[i11]] = a15[keys[i11]];
          }
        }
      }
    };
    exports2.getValue = function(v11) {
      if (exports2.isExist(v11)) {
        return v11;
      } else {
        return "";
      }
    };
    exports2.isName = isName;
    exports2.getAllMatches = getAllMatches;
    exports2.nameRegexp = nameRegexp;
  }
});

// node_modules/fast-xml-parser/src/validator.js
var require_validator = __commonJS({
  "node_modules/fast-xml-parser/src/validator.js"(exports2) {
    "use strict";
    var util = require_util();
    var defaultOptions = {
      allowBooleanAttributes: false,
      //A tag can have attributes without any value
      unpairedTags: []
    };
    exports2.validate = function(xmlData, options) {
      options = Object.assign({}, defaultOptions, options);
      const tags = [];
      let tagFound = false;
      let reachedRoot = false;
      if (xmlData[0] === "\uFEFF") {
        xmlData = xmlData.substr(1);
      }
      for (let i11 = 0; i11 < xmlData.length; i11++) {
        if (xmlData[i11] === "<" && xmlData[i11 + 1] === "?") {
          i11 += 2;
          i11 = readPI(xmlData, i11);
          if (i11.err) return i11;
        } else if (xmlData[i11] === "<") {
          let tagStartPos = i11;
          i11++;
          if (xmlData[i11] === "!") {
            i11 = readCommentAndCDATA(xmlData, i11);
            continue;
          } else {
            let closingTag = false;
            if (xmlData[i11] === "/") {
              closingTag = true;
              i11++;
            }
            let tagName = "";
            for (; i11 < xmlData.length && xmlData[i11] !== ">" && xmlData[i11] !== " " && xmlData[i11] !== "	" && xmlData[i11] !== "\n" && xmlData[i11] !== "\r"; i11++) {
              tagName += xmlData[i11];
            }
            tagName = tagName.trim();
            if (tagName[tagName.length - 1] === "/") {
              tagName = tagName.substring(0, tagName.length - 1);
              i11--;
            }
            if (!validateTagName(tagName)) {
              let msg;
              if (tagName.trim().length === 0) {
                msg = "Invalid space after '<'.";
              } else {
                msg = "Tag '" + tagName + "' is an invalid name.";
              }
              return getErrorObject("InvalidTag", msg, getLineNumberForPosition(xmlData, i11));
            }
            const result = readAttributeStr(xmlData, i11);
            if (result === false) {
              return getErrorObject("InvalidAttr", "Attributes for '" + tagName + "' have open quote.", getLineNumberForPosition(xmlData, i11));
            }
            let attrStr = result.value;
            i11 = result.index;
            if (attrStr[attrStr.length - 1] === "/") {
              const attrStrStart = i11 - attrStr.length;
              attrStr = attrStr.substring(0, attrStr.length - 1);
              const isValid = validateAttributeString(attrStr, options);
              if (isValid === true) {
                tagFound = true;
              } else {
                return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));
              }
            } else if (closingTag) {
              if (!result.tagClosed) {
                return getErrorObject("InvalidTag", "Closing tag '" + tagName + "' doesn't have proper closing.", getLineNumberForPosition(xmlData, i11));
              } else if (attrStr.trim().length > 0) {
                return getErrorObject("InvalidTag", "Closing tag '" + tagName + "' can't have attributes or invalid starting.", getLineNumberForPosition(xmlData, tagStartPos));
              } else if (tags.length === 0) {
                return getErrorObject("InvalidTag", "Closing tag '" + tagName + "' has not been opened.", getLineNumberForPosition(xmlData, tagStartPos));
              } else {
                const otg = tags.pop();
                if (tagName !== otg.tagName) {
                  let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);
                  return getErrorObject(
                    "InvalidTag",
                    "Expected closing tag '" + otg.tagName + "' (opened in line " + openPos.line + ", col " + openPos.col + ") instead of closing tag '" + tagName + "'.",
                    getLineNumberForPosition(xmlData, tagStartPos)
                  );
                }
                if (tags.length == 0) {
                  reachedRoot = true;
                }
              }
            } else {
              const isValid = validateAttributeString(attrStr, options);
              if (isValid !== true) {
                return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i11 - attrStr.length + isValid.err.line));
              }
              if (reachedRoot === true) {
                return getErrorObject("InvalidXml", "Multiple possible root nodes found.", getLineNumberForPosition(xmlData, i11));
              } else if (options.unpairedTags.indexOf(tagName) !== -1) {
              } else {
                tags.push({ tagName, tagStartPos });
              }
              tagFound = true;
            }
            for (i11++; i11 < xmlData.length; i11++) {
              if (xmlData[i11] === "<") {
                if (xmlData[i11 + 1] === "!") {
                  i11++;
                  i11 = readCommentAndCDATA(xmlData, i11);
                  continue;
                } else if (xmlData[i11 + 1] === "?") {
                  i11 = readPI(xmlData, ++i11);
                  if (i11.err) return i11;
                } else {
                  break;
                }
              } else if (xmlData[i11] === "&") {
                const afterAmp = validateAmpersand(xmlData, i11);
                if (afterAmp == -1)
                  return getErrorObject("InvalidChar", "char '&' is not expected.", getLineNumberForPosition(xmlData, i11));
                i11 = afterAmp;
              } else {
                if (reachedRoot === true && !isWhiteSpace(xmlData[i11])) {
                  return getErrorObject("InvalidXml", "Extra text at the end", getLineNumberForPosition(xmlData, i11));
                }
              }
            }
            if (xmlData[i11] === "<") {
              i11--;
            }
          }
        } else {
          if (isWhiteSpace(xmlData[i11])) {
            continue;
          }
          return getErrorObject("InvalidChar", "char '" + xmlData[i11] + "' is not expected.", getLineNumberForPosition(xmlData, i11));
        }
      }
      if (!tagFound) {
        return getErrorObject("InvalidXml", "Start tag expected.", 1);
      } else if (tags.length == 1) {
        return getErrorObject("InvalidTag", "Unclosed tag '" + tags[0].tagName + "'.", getLineNumberForPosition(xmlData, tags[0].tagStartPos));
      } else if (tags.length > 0) {
        return getErrorObject("InvalidXml", "Invalid '" + JSON.stringify(tags.map((t2) => t2.tagName), null, 4).replace(/\r?\n/g, "") + "' found.", { line: 1, col: 1 });
      }
      return true;
    };
    function isWhiteSpace(char) {
      return char === " " || char === "	" || char === "\n" || char === "\r";
    }
    function readPI(xmlData, i11) {
      const start = i11;
      for (; i11 < xmlData.length; i11++) {
        if (xmlData[i11] == "?" || xmlData[i11] == " ") {
          const tagname = xmlData.substr(start, i11 - start);
          if (i11 > 5 && tagname === "xml") {
            return getErrorObject("InvalidXml", "XML declaration allowed only at the start of the document.", getLineNumberForPosition(xmlData, i11));
          } else if (xmlData[i11] == "?" && xmlData[i11 + 1] == ">") {
            i11++;
            break;
          } else {
            continue;
          }
        }
      }
      return i11;
    }
    function readCommentAndCDATA(xmlData, i11) {
      if (xmlData.length > i11 + 5 && xmlData[i11 + 1] === "-" && xmlData[i11 + 2] === "-") {
        for (i11 += 3; i11 < xmlData.length; i11++) {
          if (xmlData[i11] === "-" && xmlData[i11 + 1] === "-" && xmlData[i11 + 2] === ">") {
            i11 += 2;
            break;
          }
        }
      } else if (xmlData.length > i11 + 8 && xmlData[i11 + 1] === "D" && xmlData[i11 + 2] === "O" && xmlData[i11 + 3] === "C" && xmlData[i11 + 4] === "T" && xmlData[i11 + 5] === "Y" && xmlData[i11 + 6] === "P" && xmlData[i11 + 7] === "E") {
        let angleBracketsCount = 1;
        for (i11 += 8; i11 < xmlData.length; i11++) {
          if (xmlData[i11] === "<") {
            angleBracketsCount++;
          } else if (xmlData[i11] === ">") {
            angleBracketsCount--;
            if (angleBracketsCount === 0) {
              break;
            }
          }
        }
      } else if (xmlData.length > i11 + 9 && xmlData[i11 + 1] === "[" && xmlData[i11 + 2] === "C" && xmlData[i11 + 3] === "D" && xmlData[i11 + 4] === "A" && xmlData[i11 + 5] === "T" && xmlData[i11 + 6] === "A" && xmlData[i11 + 7] === "[") {
        for (i11 += 8; i11 < xmlData.length; i11++) {
          if (xmlData[i11] === "]" && xmlData[i11 + 1] === "]" && xmlData[i11 + 2] === ">") {
            i11 += 2;
            break;
          }
        }
      }
      return i11;
    }
    var doubleQuote = '"';
    var singleQuote = "'";
    function readAttributeStr(xmlData, i11) {
      let attrStr = "";
      let startChar = "";
      let tagClosed = false;
      for (; i11 < xmlData.length; i11++) {
        if (xmlData[i11] === doubleQuote || xmlData[i11] === singleQuote) {
          if (startChar === "") {
            startChar = xmlData[i11];
          } else if (startChar !== xmlData[i11]) {
          } else {
            startChar = "";
          }
        } else if (xmlData[i11] === ">") {
          if (startChar === "") {
            tagClosed = true;
            break;
          }
        }
        attrStr += xmlData[i11];
      }
      if (startChar !== "") {
        return false;
      }
      return {
        value: attrStr,
        index: i11,
        tagClosed
      };
    }
    var validAttrStrRegxp = new RegExp(`(\\s*)([^\\s=]+)(\\s*=)?(\\s*(['"])(([\\s\\S])*?)\\5)?`, "g");
    function validateAttributeString(attrStr, options) {
      const matches = util.getAllMatches(attrStr, validAttrStrRegxp);
      const attrNames = {};
      for (let i11 = 0; i11 < matches.length; i11++) {
        if (matches[i11][1].length === 0) {
          return getErrorObject("InvalidAttr", "Attribute '" + matches[i11][2] + "' has no space in starting.", getPositionFromMatch(matches[i11]));
        } else if (matches[i11][3] !== void 0 && matches[i11][4] === void 0) {
          return getErrorObject("InvalidAttr", "Attribute '" + matches[i11][2] + "' is without value.", getPositionFromMatch(matches[i11]));
        } else if (matches[i11][3] === void 0 && !options.allowBooleanAttributes) {
          return getErrorObject("InvalidAttr", "boolean attribute '" + matches[i11][2] + "' is not allowed.", getPositionFromMatch(matches[i11]));
        }
        const attrName = matches[i11][2];
        if (!validateAttrName(attrName)) {
          return getErrorObject("InvalidAttr", "Attribute '" + attrName + "' is an invalid name.", getPositionFromMatch(matches[i11]));
        }
        if (!attrNames.hasOwnProperty(attrName)) {
          attrNames[attrName] = 1;
        } else {
          return getErrorObject("InvalidAttr", "Attribute '" + attrName + "' is repeated.", getPositionFromMatch(matches[i11]));
        }
      }
      return true;
    }
    function validateNumberAmpersand(xmlData, i11) {
      let re3 = /\d/;
      if (xmlData[i11] === "x") {
        i11++;
        re3 = /[\da-fA-F]/;
      }
      for (; i11 < xmlData.length; i11++) {
        if (xmlData[i11] === ";")
          return i11;
        if (!xmlData[i11].match(re3))
          break;
      }
      return -1;
    }
    function validateAmpersand(xmlData, i11) {
      i11++;
      if (xmlData[i11] === ";")
        return -1;
      if (xmlData[i11] === "#") {
        i11++;
        return validateNumberAmpersand(xmlData, i11);
      }
      let count = 0;
      for (; i11 < xmlData.length; i11++, count++) {
        if (xmlData[i11].match(/\w/) && count < 20)
          continue;
        if (xmlData[i11] === ";")
          break;
        return -1;
      }
      return i11;
    }
    function getErrorObject(code, message, lineNumber) {
      return {
        err: {
          code,
          msg: message,
          line: lineNumber.line || lineNumber,
          col: lineNumber.col
        }
      };
    }
    function validateAttrName(attrName) {
      return util.isName(attrName);
    }
    function validateTagName(tagname) {
      return util.isName(tagname);
    }
    function getLineNumberForPosition(xmlData, index) {
      const lines = xmlData.substring(0, index).split(/\r?\n/);
      return {
        line: lines.length,
        // column number is last line's length + 1, because column numbering starts at 1:
        col: lines[lines.length - 1].length + 1
      };
    }
    function getPositionFromMatch(match2) {
      return match2.startIndex + match2[1].length;
    }
  }
});

// node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js
var require_OptionsBuilder = __commonJS({
  "node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js"(exports2) {
    var defaultOptions = {
      preserveOrder: false,
      attributeNamePrefix: "@_",
      attributesGroupName: false,
      textNodeName: "#text",
      ignoreAttributes: true,
      removeNSPrefix: false,
      // remove NS from tag name or attribute name if true
      allowBooleanAttributes: false,
      //a tag can have attributes without any value
      //ignoreRootElement : false,
      parseTagValue: true,
      parseAttributeValue: false,
      trimValues: true,
      //Trim string values of tag and attributes
      cdataPropName: false,
      numberParseOptions: {
        hex: true,
        leadingZeros: true,
        eNotation: true
      },
      tagValueProcessor: function(tagName, val2) {
        return val2;
      },
      attributeValueProcessor: function(attrName, val2) {
        return val2;
      },
      stopNodes: [],
      //nested tags will not be parsed even for errors
      alwaysCreateTextNode: false,
      isArray: () => false,
      commentPropName: false,
      unpairedTags: [],
      processEntities: true,
      htmlEntities: false,
      ignoreDeclaration: false,
      ignorePiTags: false,
      transformTagName: false,
      transformAttributeName: false,
      updateTag: function(tagName, jPath, attrs) {
        return tagName;
      }
      // skipEmptyListItem: false
    };
    var buildOptions = function(options) {
      return Object.assign({}, defaultOptions, options);
    };
    exports2.buildOptions = buildOptions;
    exports2.defaultOptions = defaultOptions;
  }
});

// node_modules/fast-xml-parser/src/xmlparser/xmlNode.js
var require_xmlNode = __commonJS({
  "node_modules/fast-xml-parser/src/xmlparser/xmlNode.js"(exports2, module2) {
    "use strict";
    var XmlNode = class {
      constructor(tagname) {
        this.tagname = tagname;
        this.child = [];
        this[":@"] = {};
      }
      add(key, val2) {
        if (key === "__proto__") key = "#__proto__";
        this.child.push({ [key]: val2 });
      }
      addChild(node) {
        if (node.tagname === "__proto__") node.tagname = "#__proto__";
        if (node[":@"] && Object.keys(node[":@"]).length > 0) {
          this.child.push({ [node.tagname]: node.child, [":@"]: node[":@"] });
        } else {
          this.child.push({ [node.tagname]: node.child });
        }
      }
    };
    module2.exports = XmlNode;
  }
});

// node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js
var require_DocTypeReader = __commonJS({
  "node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js"(exports2, module2) {
    var util = require_util();
    function readDocType(xmlData, i11) {
      const entities = {};
      if (xmlData[i11 + 3] === "O" && xmlData[i11 + 4] === "C" && xmlData[i11 + 5] === "T" && xmlData[i11 + 6] === "Y" && xmlData[i11 + 7] === "P" && xmlData[i11 + 8] === "E") {
        i11 = i11 + 9;
        let angleBracketsCount = 1;
        let hasBody = false, comment = false;
        let exp = "";
        for (; i11 < xmlData.length; i11++) {
          if (xmlData[i11] === "<" && !comment) {
            if (hasBody && isEntity(xmlData, i11)) {
              i11 += 7;
              [entityName, val, i11] = readEntityExp(xmlData, i11 + 1);
              if (val.indexOf("&") === -1)
                entities[validateEntityName(entityName)] = {
                  regx: RegExp(`&${entityName};`, "g"),
                  val
                };
            } else if (hasBody && isElement(xmlData, i11)) i11 += 8;
            else if (hasBody && isAttlist(xmlData, i11)) i11 += 8;
            else if (hasBody && isNotation(xmlData, i11)) i11 += 9;
            else if (isComment) comment = true;
            else throw new Error("Invalid DOCTYPE");
            angleBracketsCount++;
            exp = "";
          } else if (xmlData[i11] === ">") {
            if (comment) {
              if (xmlData[i11 - 1] === "-" && xmlData[i11 - 2] === "-") {
                comment = false;
                angleBracketsCount--;
              }
            } else {
              angleBracketsCount--;
            }
            if (angleBracketsCount === 0) {
              break;
            }
          } else if (xmlData[i11] === "[") {
            hasBody = true;
          } else {
            exp += xmlData[i11];
          }
        }
        if (angleBracketsCount !== 0) {
          throw new Error(`Unclosed DOCTYPE`);
        }
      } else {
        throw new Error(`Invalid Tag instead of DOCTYPE`);
      }
      return { entities, i: i11 };
    }
    function readEntityExp(xmlData, i11) {
      let entityName2 = "";
      for (; i11 < xmlData.length && (xmlData[i11] !== "'" && xmlData[i11] !== '"'); i11++) {
        entityName2 += xmlData[i11];
      }
      entityName2 = entityName2.trim();
      if (entityName2.indexOf(" ") !== -1) throw new Error("External entites are not supported");
      const startChar = xmlData[i11++];
      let val2 = "";
      for (; i11 < xmlData.length && xmlData[i11] !== startChar; i11++) {
        val2 += xmlData[i11];
      }
      return [entityName2, val2, i11];
    }
    function isComment(xmlData, i11) {
      if (xmlData[i11 + 1] === "!" && xmlData[i11 + 2] === "-" && xmlData[i11 + 3] === "-") return true;
      return false;
    }
    function isEntity(xmlData, i11) {
      if (xmlData[i11 + 1] === "!" && xmlData[i11 + 2] === "E" && xmlData[i11 + 3] === "N" && xmlData[i11 + 4] === "T" && xmlData[i11 + 5] === "I" && xmlData[i11 + 6] === "T" && xmlData[i11 + 7] === "Y") return true;
      return false;
    }
    function isElement(xmlData, i11) {
      if (xmlData[i11 + 1] === "!" && xmlData[i11 + 2] === "E" && xmlData[i11 + 3] === "L" && xmlData[i11 + 4] === "E" && xmlData[i11 + 5] === "M" && xmlData[i11 + 6] === "E" && xmlData[i11 + 7] === "N" && xmlData[i11 + 8] === "T") return true;
      return false;
    }
    function isAttlist(xmlData, i11) {
      if (xmlData[i11 + 1] === "!" && xmlData[i11 + 2] === "A" && xmlData[i11 + 3] === "T" && xmlData[i11 + 4] === "T" && xmlData[i11 + 5] === "L" && xmlData[i11 + 6] === "I" && xmlData[i11 + 7] === "S" && xmlData[i11 + 8] === "T") return true;
      return false;
    }
    function isNotation(xmlData, i11) {
      if (xmlData[i11 + 1] === "!" && xmlData[i11 + 2] === "N" && xmlData[i11 + 3] === "O" && xmlData[i11 + 4] === "T" && xmlData[i11 + 5] === "A" && xmlData[i11 + 6] === "T" && xmlData[i11 + 7] === "I" && xmlData[i11 + 8] === "O" && xmlData[i11 + 9] === "N") return true;
      return false;
    }
    function validateEntityName(name) {
      if (util.isName(name))
        return name;
      else
        throw new Error(`Invalid entity name ${name}`);
    }
    module2.exports = readDocType;
  }
});

// node_modules/strnum/strnum.js
var require_strnum = __commonJS({
  "node_modules/strnum/strnum.js"(exports2, module2) {
    var hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;
    var numRegex = /^([\-\+])?(0*)(\.[0-9]+([eE]\-?[0-9]+)?|[0-9]+(\.[0-9]+([eE]\-?[0-9]+)?)?)$/;
    if (!Number.parseInt && window.parseInt) {
      Number.parseInt = window.parseInt;
    }
    if (!Number.parseFloat && window.parseFloat) {
      Number.parseFloat = window.parseFloat;
    }
    var consider = {
      hex: true,
      leadingZeros: true,
      decimalPoint: ".",
      eNotation: true
      //skipLike: /regex/
    };
    function toNumber(str, options = {}) {
      options = Object.assign({}, consider, options);
      if (!str || typeof str !== "string") return str;
      let trimmedStr = str.trim();
      if (options.skipLike !== void 0 && options.skipLike.test(trimmedStr)) return str;
      else if (options.hex && hexRegex.test(trimmedStr)) {
        return Number.parseInt(trimmedStr, 16);
      } else {
        const match2 = numRegex.exec(trimmedStr);
        if (match2) {
          const sign = match2[1];
          const leadingZeros = match2[2];
          let numTrimmedByZeros = trimZeros(match2[3]);
          const eNotation = match2[4] || match2[6];
          if (!options.leadingZeros && leadingZeros.length > 0 && sign && trimmedStr[2] !== ".") return str;
          else if (!options.leadingZeros && leadingZeros.length > 0 && !sign && trimmedStr[1] !== ".") return str;
          else {
            const num = Number(trimmedStr);
            const numStr = "" + num;
            if (numStr.search(/[eE]/) !== -1) {
              if (options.eNotation) return num;
              else return str;
            } else if (eNotation) {
              if (options.eNotation) return num;
              else return str;
            } else if (trimmedStr.indexOf(".") !== -1) {
              if (numStr === "0" && numTrimmedByZeros === "") return num;
              else if (numStr === numTrimmedByZeros) return num;
              else if (sign && numStr === "-" + numTrimmedByZeros) return num;
              else return str;
            }
            if (leadingZeros) {
              if (numTrimmedByZeros === numStr) return num;
              else if (sign + numTrimmedByZeros === numStr) return num;
              else return str;
            }
            if (trimmedStr === numStr) return num;
            else if (trimmedStr === sign + numStr) return num;
            return str;
          }
        } else {
          return str;
        }
      }
    }
    function trimZeros(numStr) {
      if (numStr && numStr.indexOf(".") !== -1) {
        numStr = numStr.replace(/0+$/, "");
        if (numStr === ".") numStr = "0";
        else if (numStr[0] === ".") numStr = "0" + numStr;
        else if (numStr[numStr.length - 1] === ".") numStr = numStr.substr(0, numStr.length - 1);
        return numStr;
      }
      return numStr;
    }
    module2.exports = toNumber;
  }
});

// node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js
var require_OrderedObjParser = __commonJS({
  "node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js"(exports2, module2) {
    "use strict";
    var util = require_util();
    var xmlNode = require_xmlNode();
    var readDocType = require_DocTypeReader();
    var toNumber = require_strnum();
    var OrderedObjParser = class {
      constructor(options) {
        this.options = options;
        this.currentNode = null;
        this.tagsNodeStack = [];
        this.docTypeEntities = {};
        this.lastEntities = {
          "apos": { regex: /&(apos|#39|#x27);/g, val: "'" },
          "gt": { regex: /&(gt|#62|#x3E);/g, val: ">" },
          "lt": { regex: /&(lt|#60|#x3C);/g, val: "<" },
          "quot": { regex: /&(quot|#34|#x22);/g, val: '"' }
        };
        this.ampEntity = { regex: /&(amp|#38|#x26);/g, val: "&" };
        this.htmlEntities = {
          "space": { regex: /&(nbsp|#160);/g, val: " " },
          // "lt" : { regex: /&(lt|#60);/g, val: "<" },
          // "gt" : { regex: /&(gt|#62);/g, val: ">" },
          // "amp" : { regex: /&(amp|#38);/g, val: "&" },
          // "quot" : { regex: /&(quot|#34);/g, val: "\"" },
          // "apos" : { regex: /&(apos|#39);/g, val: "'" },
          "cent": { regex: /&(cent|#162);/g, val: "¢" },
          "pound": { regex: /&(pound|#163);/g, val: "£" },
          "yen": { regex: /&(yen|#165);/g, val: "¥" },
          "euro": { regex: /&(euro|#8364);/g, val: "€" },
          "copyright": { regex: /&(copy|#169);/g, val: "©" },
          "reg": { regex: /&(reg|#174);/g, val: "®" },
          "inr": { regex: /&(inr|#8377);/g, val: "₹" },
          "num_dec": { regex: /&#([0-9]{1,7});/g, val: (_5, str) => String.fromCharCode(Number.parseInt(str, 10)) },
          "num_hex": { regex: /&#x([0-9a-fA-F]{1,6});/g, val: (_5, str) => String.fromCharCode(Number.parseInt(str, 16)) }
        };
        this.addExternalEntities = addExternalEntities;
        this.parseXml = parseXml;
        this.parseTextData = parseTextData;
        this.resolveNameSpace = resolveNameSpace;
        this.buildAttributesMap = buildAttributesMap;
        this.isItStopNode = isItStopNode;
        this.replaceEntitiesValue = replaceEntitiesValue;
        this.readStopNodeData = readStopNodeData;
        this.saveTextToParentTag = saveTextToParentTag;
        this.addChild = addChild;
      }
    };
    function addExternalEntities(externalEntities) {
      const entKeys = Object.keys(externalEntities);
      for (let i11 = 0; i11 < entKeys.length; i11++) {
        const ent = entKeys[i11];
        this.lastEntities[ent] = {
          regex: new RegExp("&" + ent + ";", "g"),
          val: externalEntities[ent]
        };
      }
    }
    function parseTextData(val2, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {
      if (val2 !== void 0) {
        if (this.options.trimValues && !dontTrim) {
          val2 = val2.trim();
        }
        if (val2.length > 0) {
          if (!escapeEntities) val2 = this.replaceEntitiesValue(val2);
          const newval = this.options.tagValueProcessor(tagName, val2, jPath, hasAttributes, isLeafNode);
          if (newval === null || newval === void 0) {
            return val2;
          } else if (typeof newval !== typeof val2 || newval !== val2) {
            return newval;
          } else if (this.options.trimValues) {
            return parseValue(val2, this.options.parseTagValue, this.options.numberParseOptions);
          } else {
            const trimmedVal = val2.trim();
            if (trimmedVal === val2) {
              return parseValue(val2, this.options.parseTagValue, this.options.numberParseOptions);
            } else {
              return val2;
            }
          }
        }
      }
    }
    function resolveNameSpace(tagname) {
      if (this.options.removeNSPrefix) {
        const tags = tagname.split(":");
        const prefix = tagname.charAt(0) === "/" ? "/" : "";
        if (tags[0] === "xmlns") {
          return "";
        }
        if (tags.length === 2) {
          tagname = prefix + tags[1];
        }
      }
      return tagname;
    }
    var attrsRegx = new RegExp(`([^\\s=]+)\\s*(=\\s*(['"])([\\s\\S]*?)\\3)?`, "gm");
    function buildAttributesMap(attrStr, jPath, tagName) {
      if (!this.options.ignoreAttributes && typeof attrStr === "string") {
        const matches = util.getAllMatches(attrStr, attrsRegx);
        const len = matches.length;
        const attrs = {};
        for (let i11 = 0; i11 < len; i11++) {
          const attrName = this.resolveNameSpace(matches[i11][1]);
          let oldVal = matches[i11][4];
          let aName = this.options.attributeNamePrefix + attrName;
          if (attrName.length) {
            if (this.options.transformAttributeName) {
              aName = this.options.transformAttributeName(aName);
            }
            if (aName === "__proto__") aName = "#__proto__";
            if (oldVal !== void 0) {
              if (this.options.trimValues) {
                oldVal = oldVal.trim();
              }
              oldVal = this.replaceEntitiesValue(oldVal);
              const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);
              if (newVal === null || newVal === void 0) {
                attrs[aName] = oldVal;
              } else if (typeof newVal !== typeof oldVal || newVal !== oldVal) {
                attrs[aName] = newVal;
              } else {
                attrs[aName] = parseValue(
                  oldVal,
                  this.options.parseAttributeValue,
                  this.options.numberParseOptions
                );
              }
            } else if (this.options.allowBooleanAttributes) {
              attrs[aName] = true;
            }
          }
        }
        if (!Object.keys(attrs).length) {
          return;
        }
        if (this.options.attributesGroupName) {
          const attrCollection = {};
          attrCollection[this.options.attributesGroupName] = attrs;
          return attrCollection;
        }
        return attrs;
      }
    }
    var parseXml = function(xmlData) {
      xmlData = xmlData.replace(/\r\n?/g, "\n");
      const xmlObj = new xmlNode("!xml");
      let currentNode = xmlObj;
      let textData = "";
      let jPath = "";
      for (let i11 = 0; i11 < xmlData.length; i11++) {
        const ch = xmlData[i11];
        if (ch === "<") {
          if (xmlData[i11 + 1] === "/") {
            const closeIndex = findClosingIndex(xmlData, ">", i11, "Closing Tag is not closed.");
            let tagName = xmlData.substring(i11 + 2, closeIndex).trim();
            if (this.options.removeNSPrefix) {
              const colonIndex = tagName.indexOf(":");
              if (colonIndex !== -1) {
                tagName = tagName.substr(colonIndex + 1);
              }
            }
            if (this.options.transformTagName) {
              tagName = this.options.transformTagName(tagName);
            }
            if (currentNode) {
              textData = this.saveTextToParentTag(textData, currentNode, jPath);
            }
            const lastTagName = jPath.substring(jPath.lastIndexOf(".") + 1);
            if (tagName && this.options.unpairedTags.indexOf(tagName) !== -1) {
              throw new Error(`Unpaired tag can not be used as closing tag: </${tagName}>`);
            }
            let propIndex = 0;
            if (lastTagName && this.options.unpairedTags.indexOf(lastTagName) !== -1) {
              propIndex = jPath.lastIndexOf(".", jPath.lastIndexOf(".") - 1);
              this.tagsNodeStack.pop();
            } else {
              propIndex = jPath.lastIndexOf(".");
            }
            jPath = jPath.substring(0, propIndex);
            currentNode = this.tagsNodeStack.pop();
            textData = "";
            i11 = closeIndex;
          } else if (xmlData[i11 + 1] === "?") {
            let tagData = readTagExp(xmlData, i11, false, "?>");
            if (!tagData) throw new Error("Pi Tag is not closed.");
            textData = this.saveTextToParentTag(textData, currentNode, jPath);
            if (this.options.ignoreDeclaration && tagData.tagName === "?xml" || this.options.ignorePiTags) {
            } else {
              const childNode = new xmlNode(tagData.tagName);
              childNode.add(this.options.textNodeName, "");
              if (tagData.tagName !== tagData.tagExp && tagData.attrExpPresent) {
                childNode[":@"] = this.buildAttributesMap(tagData.tagExp, jPath, tagData.tagName);
              }
              this.addChild(currentNode, childNode, jPath);
            }
            i11 = tagData.closeIndex + 1;
          } else if (xmlData.substr(i11 + 1, 3) === "!--") {
            const endIndex = findClosingIndex(xmlData, "-->", i11 + 4, "Comment is not closed.");
            if (this.options.commentPropName) {
              const comment = xmlData.substring(i11 + 4, endIndex - 2);
              textData = this.saveTextToParentTag(textData, currentNode, jPath);
              currentNode.add(this.options.commentPropName, [{ [this.options.textNodeName]: comment }]);
            }
            i11 = endIndex;
          } else if (xmlData.substr(i11 + 1, 2) === "!D") {
            const result = readDocType(xmlData, i11);
            this.docTypeEntities = result.entities;
            i11 = result.i;
          } else if (xmlData.substr(i11 + 1, 2) === "![") {
            const closeIndex = findClosingIndex(xmlData, "]]>", i11, "CDATA is not closed.") - 2;
            const tagExp = xmlData.substring(i11 + 9, closeIndex);
            textData = this.saveTextToParentTag(textData, currentNode, jPath);
            let val2 = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true, true);
            if (val2 == void 0) val2 = "";
            if (this.options.cdataPropName) {
              currentNode.add(this.options.cdataPropName, [{ [this.options.textNodeName]: tagExp }]);
            } else {
              currentNode.add(this.options.textNodeName, val2);
            }
            i11 = closeIndex + 2;
          } else {
            let result = readTagExp(xmlData, i11, this.options.removeNSPrefix);
            let tagName = result.tagName;
            const rawTagName = result.rawTagName;
            let tagExp = result.tagExp;
            let attrExpPresent = result.attrExpPresent;
            let closeIndex = result.closeIndex;
            if (this.options.transformTagName) {
              tagName = this.options.transformTagName(tagName);
            }
            if (currentNode && textData) {
              if (currentNode.tagname !== "!xml") {
                textData = this.saveTextToParentTag(textData, currentNode, jPath, false);
              }
            }
            const lastTag = currentNode;
            if (lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1) {
              currentNode = this.tagsNodeStack.pop();
              jPath = jPath.substring(0, jPath.lastIndexOf("."));
            }
            if (tagName !== xmlObj.tagname) {
              jPath += jPath ? "." + tagName : tagName;
            }
            if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) {
              let tagContent = "";
              if (tagExp.length > 0 && tagExp.lastIndexOf("/") === tagExp.length - 1) {
                if (tagName[tagName.length - 1] === "/") {
                  tagName = tagName.substr(0, tagName.length - 1);
                  jPath = jPath.substr(0, jPath.length - 1);
                  tagExp = tagName;
                } else {
                  tagExp = tagExp.substr(0, tagExp.length - 1);
                }
                i11 = result.closeIndex;
              } else if (this.options.unpairedTags.indexOf(tagName) !== -1) {
                i11 = result.closeIndex;
              } else {
                const result2 = this.readStopNodeData(xmlData, rawTagName, closeIndex + 1);
                if (!result2) throw new Error(`Unexpected end of ${rawTagName}`);
                i11 = result2.i;
                tagContent = result2.tagContent;
              }
              const childNode = new xmlNode(tagName);
              if (tagName !== tagExp && attrExpPresent) {
                childNode[":@"] = this.buildAttributesMap(tagExp, jPath, tagName);
              }
              if (tagContent) {
                tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);
              }
              jPath = jPath.substr(0, jPath.lastIndexOf("."));
              childNode.add(this.options.textNodeName, tagContent);
              this.addChild(currentNode, childNode, jPath);
            } else {
              if (tagExp.length > 0 && tagExp.lastIndexOf("/") === tagExp.length - 1) {
                if (tagName[tagName.length - 1] === "/") {
                  tagName = tagName.substr(0, tagName.length - 1);
                  jPath = jPath.substr(0, jPath.length - 1);
                  tagExp = tagName;
                } else {
                  tagExp = tagExp.substr(0, tagExp.length - 1);
                }
                if (this.options.transformTagName) {
                  tagName = this.options.transformTagName(tagName);
                }
                const childNode = new xmlNode(tagName);
                if (tagName !== tagExp && attrExpPresent) {
                  childNode[":@"] = this.buildAttributesMap(tagExp, jPath, tagName);
                }
                this.addChild(currentNode, childNode, jPath);
                jPath = jPath.substr(0, jPath.lastIndexOf("."));
              } else {
                const childNode = new xmlNode(tagName);
                this.tagsNodeStack.push(currentNode);
                if (tagName !== tagExp && attrExpPresent) {
                  childNode[":@"] = this.buildAttributesMap(tagExp, jPath, tagName);
                }
                this.addChild(currentNode, childNode, jPath);
                currentNode = childNode;
              }
              textData = "";
              i11 = closeIndex;
            }
          }
        } else {
          textData += xmlData[i11];
        }
      }
      return xmlObj.child;
    };
    function addChild(currentNode, childNode, jPath) {
      const result = this.options.updateTag(childNode.tagname, jPath, childNode[":@"]);
      if (result === false) {
      } else if (typeof result === "string") {
        childNode.tagname = result;
        currentNode.addChild(childNode);
      } else {
        currentNode.addChild(childNode);
      }
    }
    var replaceEntitiesValue = function(val2) {
      if (this.options.processEntities) {
        for (let entityName2 in this.docTypeEntities) {
          const entity = this.docTypeEntities[entityName2];
          val2 = val2.replace(entity.regx, entity.val);
        }
        for (let entityName2 in this.lastEntities) {
          const entity = this.lastEntities[entityName2];
          val2 = val2.replace(entity.regex, entity.val);
        }
        if (this.options.htmlEntities) {
          for (let entityName2 in this.htmlEntities) {
            const entity = this.htmlEntities[entityName2];
            val2 = val2.replace(entity.regex, entity.val);
          }
        }
        val2 = val2.replace(this.ampEntity.regex, this.ampEntity.val);
      }
      return val2;
    };
    function saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {
      if (textData) {
        if (isLeafNode === void 0) isLeafNode = Object.keys(currentNode.child).length === 0;
        textData = this.parseTextData(
          textData,
          currentNode.tagname,
          jPath,
          false,
          currentNode[":@"] ? Object.keys(currentNode[":@"]).length !== 0 : false,
          isLeafNode
        );
        if (textData !== void 0 && textData !== "")
          currentNode.add(this.options.textNodeName, textData);
        textData = "";
      }
      return textData;
    }
    function isItStopNode(stopNodes, jPath, currentTagName) {
      const allNodesExp = "*." + currentTagName;
      for (const stopNodePath in stopNodes) {
        const stopNodeExp = stopNodes[stopNodePath];
        if (allNodesExp === stopNodeExp || jPath === stopNodeExp) return true;
      }
      return false;
    }
    function tagExpWithClosingIndex(xmlData, i11, closingChar = ">") {
      let attrBoundary;
      let tagExp = "";
      for (let index = i11; index < xmlData.length; index++) {
        let ch = xmlData[index];
        if (attrBoundary) {
          if (ch === attrBoundary) attrBoundary = "";
        } else if (ch === '"' || ch === "'") {
          attrBoundary = ch;
        } else if (ch === closingChar[0]) {
          if (closingChar[1]) {
            if (xmlData[index + 1] === closingChar[1]) {
              return {
                data: tagExp,
                index
              };
            }
          } else {
            return {
              data: tagExp,
              index
            };
          }
        } else if (ch === "	") {
          ch = " ";
        }
        tagExp += ch;
      }
    }
    function findClosingIndex(xmlData, str, i11, errMsg) {
      const closingIndex = xmlData.indexOf(str, i11);
      if (closingIndex === -1) {
        throw new Error(errMsg);
      } else {
        return closingIndex + str.length - 1;
      }
    }
    function readTagExp(xmlData, i11, removeNSPrefix, closingChar = ">") {
      const result = tagExpWithClosingIndex(xmlData, i11 + 1, closingChar);
      if (!result) return;
      let tagExp = result.data;
      const closeIndex = result.index;
      const separatorIndex = tagExp.search(/\s/);
      let tagName = tagExp;
      let attrExpPresent = true;
      if (separatorIndex !== -1) {
        tagName = tagExp.substring(0, separatorIndex);
        tagExp = tagExp.substring(separatorIndex + 1).trimStart();
      }
      const rawTagName = tagName;
      if (removeNSPrefix) {
        const colonIndex = tagName.indexOf(":");
        if (colonIndex !== -1) {
          tagName = tagName.substr(colonIndex + 1);
          attrExpPresent = tagName !== result.data.substr(colonIndex + 1);
        }
      }
      return {
        tagName,
        tagExp,
        closeIndex,
        attrExpPresent,
        rawTagName
      };
    }
    function readStopNodeData(xmlData, tagName, i11) {
      const startIndex = i11;
      let openTagCount = 1;
      for (; i11 < xmlData.length; i11++) {
        if (xmlData[i11] === "<") {
          if (xmlData[i11 + 1] === "/") {
            const closeIndex = findClosingIndex(xmlData, ">", i11, `${tagName} is not closed`);
            let closeTagName = xmlData.substring(i11 + 2, closeIndex).trim();
            if (closeTagName === tagName) {
              openTagCount--;
              if (openTagCount === 0) {
                return {
                  tagContent: xmlData.substring(startIndex, i11),
                  i: closeIndex
                };
              }
            }
            i11 = closeIndex;
          } else if (xmlData[i11 + 1] === "?") {
            const closeIndex = findClosingIndex(xmlData, "?>", i11 + 1, "StopNode is not closed.");
            i11 = closeIndex;
          } else if (xmlData.substr(i11 + 1, 3) === "!--") {
            const closeIndex = findClosingIndex(xmlData, "-->", i11 + 3, "StopNode is not closed.");
            i11 = closeIndex;
          } else if (xmlData.substr(i11 + 1, 2) === "![") {
            const closeIndex = findClosingIndex(xmlData, "]]>", i11, "StopNode is not closed.") - 2;
            i11 = closeIndex;
          } else {
            const tagData = readTagExp(xmlData, i11, ">");
            if (tagData) {
              const openTagName = tagData && tagData.tagName;
              if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length - 1] !== "/") {
                openTagCount++;
              }
              i11 = tagData.closeIndex;
            }
          }
        }
      }
    }
    function parseValue(val2, shouldParse, options) {
      if (shouldParse && typeof val2 === "string") {
        const newval = val2.trim();
        if (newval === "true") return true;
        else if (newval === "false") return false;
        else return toNumber(val2, options);
      } else {
        if (util.isExist(val2)) {
          return val2;
        } else {
          return "";
        }
      }
    }
    module2.exports = OrderedObjParser;
  }
});

// node_modules/fast-xml-parser/src/xmlparser/node2json.js
var require_node2json = __commonJS({
  "node_modules/fast-xml-parser/src/xmlparser/node2json.js"(exports2) {
    "use strict";
    function prettify(node, options) {
      return compress(node, options);
    }
    function compress(arr, options, jPath) {
      let text;
      const compressedObj = {};
      for (let i11 = 0; i11 < arr.length; i11++) {
        const tagObj = arr[i11];
        const property = propName(tagObj);
        let newJpath = "";
        if (jPath === void 0) newJpath = property;
        else newJpath = jPath + "." + property;
        if (property === options.textNodeName) {
          if (text === void 0) text = tagObj[property];
          else text += "" + tagObj[property];
        } else if (property === void 0) {
          continue;
        } else if (tagObj[property]) {
          let val2 = compress(tagObj[property], options, newJpath);
          const isLeaf = isLeafTag(val2, options);
          if (tagObj[":@"]) {
            assignAttributes(val2, tagObj[":@"], newJpath, options);
          } else if (Object.keys(val2).length === 1 && val2[options.textNodeName] !== void 0 && !options.alwaysCreateTextNode) {
            val2 = val2[options.textNodeName];
          } else if (Object.keys(val2).length === 0) {
            if (options.alwaysCreateTextNode) val2[options.textNodeName] = "";
            else val2 = "";
          }
          if (compressedObj[property] !== void 0 && compressedObj.hasOwnProperty(property)) {
            if (!Array.isArray(compressedObj[property])) {
              compressedObj[property] = [compressedObj[property]];
            }
            compressedObj[property].push(val2);
          } else {
            if (options.isArray(property, newJpath, isLeaf)) {
              compressedObj[property] = [val2];
            } else {
              compressedObj[property] = val2;
            }
          }
        }
      }
      if (typeof text === "string") {
        if (text.length > 0) compressedObj[options.textNodeName] = text;
      } else if (text !== void 0) compressedObj[options.textNodeName] = text;
      return compressedObj;
    }
    function propName(obj) {
      const keys = Object.keys(obj);
      for (let i11 = 0; i11 < keys.length; i11++) {
        const key = keys[i11];
        if (key !== ":@") return key;
      }
    }
    function assignAttributes(obj, attrMap, jpath, options) {
      if (attrMap) {
        const keys = Object.keys(attrMap);
        const len = keys.length;
        for (let i11 = 0; i11 < len; i11++) {
          const atrrName = keys[i11];
          if (options.isArray(atrrName, jpath + "." + atrrName, true, true)) {
            obj[atrrName] = [attrMap[atrrName]];
          } else {
            obj[atrrName] = attrMap[atrrName];
          }
        }
      }
    }
    function isLeafTag(obj, options) {
      const { textNodeName } = options;
      const propCount = Object.keys(obj).length;
      if (propCount === 0) {
        return true;
      }
      if (propCount === 1 && (obj[textNodeName] || typeof obj[textNodeName] === "boolean" || obj[textNodeName] === 0)) {
        return true;
      }
      return false;
    }
    exports2.prettify = prettify;
  }
});

// node_modules/fast-xml-parser/src/xmlparser/XMLParser.js
var require_XMLParser = __commonJS({
  "node_modules/fast-xml-parser/src/xmlparser/XMLParser.js"(exports2, module2) {
    var { buildOptions } = require_OptionsBuilder();
    var OrderedObjParser = require_OrderedObjParser();
    var { prettify } = require_node2json();
    var validator = require_validator();
    var XMLParser2 = class {
      constructor(options) {
        this.externalEntities = {};
        this.options = buildOptions(options);
      }
      /**
       * Parse XML dats to JS object 
       * @param {string|Buffer} xmlData 
       * @param {boolean|Object} validationOption 
       */
      parse(xmlData, validationOption) {
        if (typeof xmlData === "string") {
        } else if (xmlData.toString) {
          xmlData = xmlData.toString();
        } else {
          throw new Error("XML data is accepted in String or Bytes[] form.");
        }
        if (validationOption) {
          if (validationOption === true) validationOption = {};
          const result = validator.validate(xmlData, validationOption);
          if (result !== true) {
            throw Error(`${result.err.msg}:${result.err.line}:${result.err.col}`);
          }
        }
        const orderedObjParser = new OrderedObjParser(this.options);
        orderedObjParser.addExternalEntities(this.externalEntities);
        const orderedResult = orderedObjParser.parseXml(xmlData);
        if (this.options.preserveOrder || orderedResult === void 0) return orderedResult;
        else return prettify(orderedResult, this.options);
      }
      /**
       * Add Entity which is not by default supported by this library
       * @param {string} key 
       * @param {string} value 
       */
      addEntity(key, value2) {
        if (value2.indexOf("&") !== -1) {
          throw new Error("Entity value can't have '&'");
        } else if (key.indexOf("&") !== -1 || key.indexOf(";") !== -1) {
          throw new Error("An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'");
        } else if (value2 === "&") {
          throw new Error("An entity with value '&' is not permitted");
        } else {
          this.externalEntities[key] = value2;
        }
      }
    };
    module2.exports = XMLParser2;
  }
});

// node_modules/fast-xml-parser/src/xmlbuilder/orderedJs2Xml.js
var require_orderedJs2Xml = __commonJS({
  "node_modules/fast-xml-parser/src/xmlbuilder/orderedJs2Xml.js"(exports2, module2) {
    var EOL = "\n";
    function toXml(jArray, options) {
      let indentation = "";
      if (options.format && options.indentBy.length > 0) {
        indentation = EOL;
      }
      return arrToStr(jArray, options, "", indentation);
    }
    function arrToStr(arr, options, jPath, indentation) {
      let xmlStr = "";
      let isPreviousElementTag = false;
      for (let i11 = 0; i11 < arr.length; i11++) {
        const tagObj = arr[i11];
        const tagName = propName(tagObj);
        if (tagName === void 0) continue;
        let newJPath = "";
        if (jPath.length === 0) newJPath = tagName;
        else newJPath = `${jPath}.${tagName}`;
        if (tagName === options.textNodeName) {
          let tagText = tagObj[tagName];
          if (!isStopNode(newJPath, options)) {
            tagText = options.tagValueProcessor(tagName, tagText);
            tagText = replaceEntitiesValue(tagText, options);
          }
          if (isPreviousElementTag) {
            xmlStr += indentation;
          }
          xmlStr += tagText;
          isPreviousElementTag = false;
          continue;
        } else if (tagName === options.cdataPropName) {
          if (isPreviousElementTag) {
            xmlStr += indentation;
          }
          xmlStr += `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;
          isPreviousElementTag = false;
          continue;
        } else if (tagName === options.commentPropName) {
          xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;
          isPreviousElementTag = true;
          continue;
        } else if (tagName[0] === "?") {
          const attStr2 = attr_to_str(tagObj[":@"], options);
          const tempInd = tagName === "?xml" ? "" : indentation;
          let piTextNodeName = tagObj[tagName][0][options.textNodeName];
          piTextNodeName = piTextNodeName.length !== 0 ? " " + piTextNodeName : "";
          xmlStr += tempInd + `<${tagName}${piTextNodeName}${attStr2}?>`;
          isPreviousElementTag = true;
          continue;
        }
        let newIdentation = indentation;
        if (newIdentation !== "") {
          newIdentation += options.indentBy;
        }
        const attStr = attr_to_str(tagObj[":@"], options);
        const tagStart = indentation + `<${tagName}${attStr}`;
        const tagValue = arrToStr(tagObj[tagName], options, newJPath, newIdentation);
        if (options.unpairedTags.indexOf(tagName) !== -1) {
          if (options.suppressUnpairedNode) xmlStr += tagStart + ">";
          else xmlStr += tagStart + "/>";
        } else if ((!tagValue || tagValue.length === 0) && options.suppressEmptyNode) {
          xmlStr += tagStart + "/>";
        } else if (tagValue && tagValue.endsWith(">")) {
          xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>`;
        } else {
          xmlStr += tagStart + ">";
          if (tagValue && indentation !== "" && (tagValue.includes("/>") || tagValue.includes("</"))) {
            xmlStr += indentation + options.indentBy + tagValue + indentation;
          } else {
            xmlStr += tagValue;
          }
          xmlStr += `</${tagName}>`;
        }
        isPreviousElementTag = true;
      }
      return xmlStr;
    }
    function propName(obj) {
      const keys = Object.keys(obj);
      for (let i11 = 0; i11 < keys.length; i11++) {
        const key = keys[i11];
        if (!obj.hasOwnProperty(key)) continue;
        if (key !== ":@") return key;
      }
    }
    function attr_to_str(attrMap, options) {
      let attrStr = "";
      if (attrMap && !options.ignoreAttributes) {
        for (let attr in attrMap) {
          if (!attrMap.hasOwnProperty(attr)) continue;
          let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);
          attrVal = replaceEntitiesValue(attrVal, options);
          if (attrVal === true && options.suppressBooleanAttributes) {
            attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}`;
          } else {
            attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}="${attrVal}"`;
          }
        }
      }
      return attrStr;
    }
    function isStopNode(jPath, options) {
      jPath = jPath.substr(0, jPath.length - options.textNodeName.length - 1);
      let tagName = jPath.substr(jPath.lastIndexOf(".") + 1);
      for (let index in options.stopNodes) {
        if (options.stopNodes[index] === jPath || options.stopNodes[index] === "*." + tagName) return true;
      }
      return false;
    }
    function replaceEntitiesValue(textValue, options) {
      if (textValue && textValue.length > 0 && options.processEntities) {
        for (let i11 = 0; i11 < options.entities.length; i11++) {
          const entity = options.entities[i11];
          textValue = textValue.replace(entity.regex, entity.val);
        }
      }
      return textValue;
    }
    module2.exports = toXml;
  }
});

// node_modules/fast-xml-parser/src/xmlbuilder/json2xml.js
var require_json2xml = __commonJS({
  "node_modules/fast-xml-parser/src/xmlbuilder/json2xml.js"(exports2, module2) {
    "use strict";
    var buildFromOrderedJs = require_orderedJs2Xml();
    var defaultOptions = {
      attributeNamePrefix: "@_",
      attributesGroupName: false,
      textNodeName: "#text",
      ignoreAttributes: true,
      cdataPropName: false,
      format: false,
      indentBy: "  ",
      suppressEmptyNode: false,
      suppressUnpairedNode: true,
      suppressBooleanAttributes: true,
      tagValueProcessor: function(key, a15) {
        return a15;
      },
      attributeValueProcessor: function(attrName, a15) {
        return a15;
      },
      preserveOrder: false,
      commentPropName: false,
      unpairedTags: [],
      entities: [
        { regex: new RegExp("&", "g"), val: "&amp;" },
        //it must be on top
        { regex: new RegExp(">", "g"), val: "&gt;" },
        { regex: new RegExp("<", "g"), val: "&lt;" },
        { regex: new RegExp("'", "g"), val: "&apos;" },
        { regex: new RegExp('"', "g"), val: "&quot;" }
      ],
      processEntities: true,
      stopNodes: [],
      // transformTagName: false,
      // transformAttributeName: false,
      oneListGroup: false
    };
    function Builder(options) {
      this.options = Object.assign({}, defaultOptions, options);
      if (this.options.ignoreAttributes || this.options.attributesGroupName) {
        this.isAttribute = function() {
          return false;
        };
      } else {
        this.attrPrefixLen = this.options.attributeNamePrefix.length;
        this.isAttribute = isAttribute;
      }
      this.processTextOrObjNode = processTextOrObjNode;
      if (this.options.format) {
        this.indentate = indentate;
        this.tagEndChar = ">\n";
        this.newLine = "\n";
      } else {
        this.indentate = function() {
          return "";
        };
        this.tagEndChar = ">";
        this.newLine = "";
      }
    }
    Builder.prototype.build = function(jObj) {
      if (this.options.preserveOrder) {
        return buildFromOrderedJs(jObj, this.options);
      } else {
        if (Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1) {
          jObj = {
            [this.options.arrayNodeName]: jObj
          };
        }
        return this.j2x(jObj, 0).val;
      }
    };
    Builder.prototype.j2x = function(jObj, level) {
      let attrStr = "";
      let val2 = "";
      for (let key in jObj) {
        if (!Object.prototype.hasOwnProperty.call(jObj, key)) continue;
        if (typeof jObj[key] === "undefined") {
          if (this.isAttribute(key)) {
            val2 += "";
          }
        } else if (jObj[key] === null) {
          if (this.isAttribute(key)) {
            val2 += "";
          } else if (key[0] === "?") {
            val2 += this.indentate(level) + "<" + key + "?" + this.tagEndChar;
          } else {
            val2 += this.indentate(level) + "<" + key + "/" + this.tagEndChar;
          }
        } else if (jObj[key] instanceof Date) {
          val2 += this.buildTextValNode(jObj[key], key, "", level);
        } else if (typeof jObj[key] !== "object") {
          const attr = this.isAttribute(key);
          if (attr) {
            attrStr += this.buildAttrPairStr(attr, "" + jObj[key]);
          } else {
            if (key === this.options.textNodeName) {
              let newval = this.options.tagValueProcessor(key, "" + jObj[key]);
              val2 += this.replaceEntitiesValue(newval);
            } else {
              val2 += this.buildTextValNode(jObj[key], key, "", level);
            }
          }
        } else if (Array.isArray(jObj[key])) {
          const arrLen = jObj[key].length;
          let listTagVal = "";
          let listTagAttr = "";
          for (let j5 = 0; j5 < arrLen; j5++) {
            const item = jObj[key][j5];
            if (typeof item === "undefined") {
            } else if (item === null) {
              if (key[0] === "?") val2 += this.indentate(level) + "<" + key + "?" + this.tagEndChar;
              else val2 += this.indentate(level) + "<" + key + "/" + this.tagEndChar;
            } else if (typeof item === "object") {
              if (this.options.oneListGroup) {
                const result = this.j2x(item, level + 1);
                listTagVal += result.val;
                if (this.options.attributesGroupName && item.hasOwnProperty(this.options.attributesGroupName)) {
                  listTagAttr += result.attrStr;
                }
              } else {
                listTagVal += this.processTextOrObjNode(item, key, level);
              }
            } else {
              if (this.options.oneListGroup) {
                let textValue = this.options.tagValueProcessor(key, item);
                textValue = this.replaceEntitiesValue(textValue);
                listTagVal += textValue;
              } else {
                listTagVal += this.buildTextValNode(item, key, "", level);
              }
            }
          }
          if (this.options.oneListGroup) {
            listTagVal = this.buildObjectNode(listTagVal, key, listTagAttr, level);
          }
          val2 += listTagVal;
        } else {
          if (this.options.attributesGroupName && key === this.options.attributesGroupName) {
            const Ks = Object.keys(jObj[key]);
            const L5 = Ks.length;
            for (let j5 = 0; j5 < L5; j5++) {
              attrStr += this.buildAttrPairStr(Ks[j5], "" + jObj[key][Ks[j5]]);
            }
          } else {
            val2 += this.processTextOrObjNode(jObj[key], key, level);
          }
        }
      }
      return { attrStr, val: val2 };
    };
    Builder.prototype.buildAttrPairStr = function(attrName, val2) {
      val2 = this.options.attributeValueProcessor(attrName, "" + val2);
      val2 = this.replaceEntitiesValue(val2);
      if (this.options.suppressBooleanAttributes && val2 === "true") {
        return " " + attrName;
      } else return " " + attrName + '="' + val2 + '"';
    };
    function processTextOrObjNode(object, key, level) {
      const result = this.j2x(object, level + 1);
      if (object[this.options.textNodeName] !== void 0 && Object.keys(object).length === 1) {
        return this.buildTextValNode(object[this.options.textNodeName], key, result.attrStr, level);
      } else {
        return this.buildObjectNode(result.val, key, result.attrStr, level);
      }
    }
    Builder.prototype.buildObjectNode = function(val2, key, attrStr, level) {
      if (val2 === "") {
        if (key[0] === "?") return this.indentate(level) + "<" + key + attrStr + "?" + this.tagEndChar;
        else {
          return this.indentate(level) + "<" + key + attrStr + this.closeTag(key) + this.tagEndChar;
        }
      } else {
        let tagEndExp = "</" + key + this.tagEndChar;
        let piClosingChar = "";
        if (key[0] === "?") {
          piClosingChar = "?";
          tagEndExp = "";
        }
        if ((attrStr || attrStr === "") && val2.indexOf("<") === -1) {
          return this.indentate(level) + "<" + key + attrStr + piClosingChar + ">" + val2 + tagEndExp;
        } else if (this.options.commentPropName !== false && key === this.options.commentPropName && piClosingChar.length === 0) {
          return this.indentate(level) + `<!--${val2}-->` + this.newLine;
        } else {
          return this.indentate(level) + "<" + key + attrStr + piClosingChar + this.tagEndChar + val2 + this.indentate(level) + tagEndExp;
        }
      }
    };
    Builder.prototype.closeTag = function(key) {
      let closeTag = "";
      if (this.options.unpairedTags.indexOf(key) !== -1) {
        if (!this.options.suppressUnpairedNode) closeTag = "/";
      } else if (this.options.suppressEmptyNode) {
        closeTag = "/";
      } else {
        closeTag = `></${key}`;
      }
      return closeTag;
    };
    Builder.prototype.buildTextValNode = function(val2, key, attrStr, level) {
      if (this.options.cdataPropName !== false && key === this.options.cdataPropName) {
        return this.indentate(level) + `<![CDATA[${val2}]]>` + this.newLine;
      } else if (this.options.commentPropName !== false && key === this.options.commentPropName) {
        return this.indentate(level) + `<!--${val2}-->` + this.newLine;
      } else if (key[0] === "?") {
        return this.indentate(level) + "<" + key + attrStr + "?" + this.tagEndChar;
      } else {
        let textValue = this.options.tagValueProcessor(key, val2);
        textValue = this.replaceEntitiesValue(textValue);
        if (textValue === "") {
          return this.indentate(level) + "<" + key + attrStr + this.closeTag(key) + this.tagEndChar;
        } else {
          return this.indentate(level) + "<" + key + attrStr + ">" + textValue + "</" + key + this.tagEndChar;
        }
      }
    };
    Builder.prototype.replaceEntitiesValue = function(textValue) {
      if (textValue && textValue.length > 0 && this.options.processEntities) {
        for (let i11 = 0; i11 < this.options.entities.length; i11++) {
          const entity = this.options.entities[i11];
          textValue = textValue.replace(entity.regex, entity.val);
        }
      }
      return textValue;
    };
    function indentate(level) {
      return this.options.indentBy.repeat(level);
    }
    function isAttribute(name) {
      if (name.startsWith(this.options.attributeNamePrefix) && name !== this.options.textNodeName) {
        return name.substr(this.attrPrefixLen);
      } else {
        return false;
      }
    }
    module2.exports = Builder;
  }
});

// node_modules/fast-xml-parser/src/fxp.js
var require_fxp = __commonJS({
  "node_modules/fast-xml-parser/src/fxp.js"(exports2, module2) {
    "use strict";
    var validator = require_validator();
    var XMLParser2 = require_XMLParser();
    var XMLBuilder = require_json2xml();
    module2.exports = {
      XMLParser: XMLParser2,
      XMLValidator: validator,
      XMLBuilder
    };
  }
});

// node_modules/@protobufjs/aspromise/index.js
var require_aspromise = __commonJS({
  "node_modules/@protobufjs/aspromise/index.js"(exports2, module2) {
    "use strict";
    module2.exports = asPromise;
    function asPromise(fn, ctx) {
      var params = new Array(arguments.length - 1), offset2 = 0, index = 2, pending = true;
      while (index < arguments.length)
        params[offset2++] = arguments[index++];
      return new Promise(function executor(resolve, reject) {
        params[offset2] = function callback(err) {
          if (pending) {
            pending = false;
            if (err)
              reject(err);
            else {
              var params2 = new Array(arguments.length - 1), offset3 = 0;
              while (offset3 < params2.length)
                params2[offset3++] = arguments[offset3];
              resolve.apply(null, params2);
            }
          }
        };
        try {
          fn.apply(ctx || null, params);
        } catch (err) {
          if (pending) {
            pending = false;
            reject(err);
          }
        }
      });
    }
  }
});

// node_modules/@protobufjs/base64/index.js
var require_base64 = __commonJS({
  "node_modules/@protobufjs/base64/index.js"(exports2) {
    "use strict";
    var base64 = exports2;
    base64.length = function length2(string) {
      var p11 = string.length;
      if (!p11)
        return 0;
      var n11 = 0;
      while (--p11 % 4 > 1 && string.charAt(p11) === "=")
        ++n11;
      return Math.ceil(string.length * 3) / 4 - n11;
    };
    var b64 = new Array(64);
    var s64 = new Array(123);
    for (i11 = 0; i11 < 64; )
      s64[b64[i11] = i11 < 26 ? i11 + 65 : i11 < 52 ? i11 + 71 : i11 < 62 ? i11 - 4 : i11 - 59 | 43] = i11++;
    var i11;
    base64.encode = function encode3(buffer, start, end) {
      var parts2 = null, chunk = [];
      var i12 = 0, j5 = 0, t2;
      while (start < end) {
        var b6 = buffer[start++];
        switch (j5) {
          case 0:
            chunk[i12++] = b64[b6 >> 2];
            t2 = (b6 & 3) << 4;
            j5 = 1;
            break;
          case 1:
            chunk[i12++] = b64[t2 | b6 >> 4];
            t2 = (b6 & 15) << 2;
            j5 = 2;
            break;
          case 2:
            chunk[i12++] = b64[t2 | b6 >> 6];
            chunk[i12++] = b64[b6 & 63];
            j5 = 0;
            break;
        }
        if (i12 > 8191) {
          (parts2 || (parts2 = [])).push(String.fromCharCode.apply(String, chunk));
          i12 = 0;
        }
      }
      if (j5) {
        chunk[i12++] = b64[t2];
        chunk[i12++] = 61;
        if (j5 === 1)
          chunk[i12++] = 61;
      }
      if (parts2) {
        if (i12)
          parts2.push(String.fromCharCode.apply(String, chunk.slice(0, i12)));
        return parts2.join("");
      }
      return String.fromCharCode.apply(String, chunk.slice(0, i12));
    };
    var invalidEncoding = "invalid encoding";
    base64.decode = function decode3(string, buffer, offset2) {
      var start = offset2;
      var j5 = 0, t2;
      for (var i12 = 0; i12 < string.length; ) {
        var c11 = string.charCodeAt(i12++);
        if (c11 === 61 && j5 > 1)
          break;
        if ((c11 = s64[c11]) === void 0)
          throw Error(invalidEncoding);
        switch (j5) {
          case 0:
            t2 = c11;
            j5 = 1;
            break;
          case 1:
            buffer[offset2++] = t2 << 2 | (c11 & 48) >> 4;
            t2 = c11;
            j5 = 2;
            break;
          case 2:
            buffer[offset2++] = (t2 & 15) << 4 | (c11 & 60) >> 2;
            t2 = c11;
            j5 = 3;
            break;
          case 3:
            buffer[offset2++] = (t2 & 3) << 6 | c11;
            j5 = 0;
            break;
        }
      }
      if (j5 === 1)
        throw Error(invalidEncoding);
      return offset2 - start;
    };
    base64.test = function test(string) {
      return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);
    };
  }
});

// node_modules/@protobufjs/eventemitter/index.js
var require_eventemitter = __commonJS({
  "node_modules/@protobufjs/eventemitter/index.js"(exports2, module2) {
    "use strict";
    module2.exports = EventEmitter;
    function EventEmitter() {
      this._listeners = {};
    }
    EventEmitter.prototype.on = function on3(evt, fn, ctx) {
      (this._listeners[evt] || (this._listeners[evt] = [])).push({
        fn,
        ctx: ctx || this
      });
      return this;
    };
    EventEmitter.prototype.off = function off(evt, fn) {
      if (evt === void 0)
        this._listeners = {};
      else {
        if (fn === void 0)
          this._listeners[evt] = [];
        else {
          var listeners = this._listeners[evt];
          for (var i11 = 0; i11 < listeners.length; )
            if (listeners[i11].fn === fn)
              listeners.splice(i11, 1);
            else
              ++i11;
        }
      }
      return this;
    };
    EventEmitter.prototype.emit = function emit(evt) {
      var listeners = this._listeners[evt];
      if (listeners) {
        var args = [], i11 = 1;
        for (; i11 < arguments.length; )
          args.push(arguments[i11++]);
        for (i11 = 0; i11 < listeners.length; )
          listeners[i11].fn.apply(listeners[i11++].ctx, args);
      }
      return this;
    };
  }
});

// node_modules/@protobufjs/float/index.js
var require_float = __commonJS({
  "node_modules/@protobufjs/float/index.js"(exports2, module2) {
    "use strict";
    module2.exports = factory(factory);
    function factory(exports3) {
      if (typeof Float32Array !== "undefined") (function() {
        var f32 = new Float32Array([-0]), f8b = new Uint8Array(f32.buffer), le2 = f8b[3] === 128;
        function writeFloat_f32_cpy(val2, buf, pos) {
          f32[0] = val2;
          buf[pos] = f8b[0];
          buf[pos + 1] = f8b[1];
          buf[pos + 2] = f8b[2];
          buf[pos + 3] = f8b[3];
        }
        function writeFloat_f32_rev(val2, buf, pos) {
          f32[0] = val2;
          buf[pos] = f8b[3];
          buf[pos + 1] = f8b[2];
          buf[pos + 2] = f8b[1];
          buf[pos + 3] = f8b[0];
        }
        exports3.writeFloatLE = le2 ? writeFloat_f32_cpy : writeFloat_f32_rev;
        exports3.writeFloatBE = le2 ? writeFloat_f32_rev : writeFloat_f32_cpy;
        function readFloat_f32_cpy(buf, pos) {
          f8b[0] = buf[pos];
          f8b[1] = buf[pos + 1];
          f8b[2] = buf[pos + 2];
          f8b[3] = buf[pos + 3];
          return f32[0];
        }
        function readFloat_f32_rev(buf, pos) {
          f8b[3] = buf[pos];
          f8b[2] = buf[pos + 1];
          f8b[1] = buf[pos + 2];
          f8b[0] = buf[pos + 3];
          return f32[0];
        }
        exports3.readFloatLE = le2 ? readFloat_f32_cpy : readFloat_f32_rev;
        exports3.readFloatBE = le2 ? readFloat_f32_rev : readFloat_f32_cpy;
      })();
      else (function() {
        function writeFloat_ieee754(writeUint, val2, buf, pos) {
          var sign = val2 < 0 ? 1 : 0;
          if (sign)
            val2 = -val2;
          if (val2 === 0)
            writeUint(1 / val2 > 0 ? (
              /* positive */
              0
            ) : (
              /* negative 0 */
              2147483648
            ), buf, pos);
          else if (isNaN(val2))
            writeUint(2143289344, buf, pos);
          else if (val2 > 34028234663852886e22)
            writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);
          else if (val2 < 11754943508222875e-54)
            writeUint((sign << 31 | Math.round(val2 / 1401298464324817e-60)) >>> 0, buf, pos);
          else {
            var exponent = Math.floor(Math.log(val2) / Math.LN2), mantissa = Math.round(val2 * Math.pow(2, -exponent) * 8388608) & 8388607;
            writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);
          }
        }
        exports3.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);
        exports3.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);
        function readFloat_ieee754(readUint, buf, pos) {
          var uint = readUint(buf, pos), sign = (uint >> 31) * 2 + 1, exponent = uint >>> 23 & 255, mantissa = uint & 8388607;
          return exponent === 255 ? mantissa ? NaN : sign * Infinity : exponent === 0 ? sign * 1401298464324817e-60 * mantissa : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);
        }
        exports3.readFloatLE = readFloat_ieee754.bind(null, readUintLE);
        exports3.readFloatBE = readFloat_ieee754.bind(null, readUintBE);
      })();
      if (typeof Float64Array !== "undefined") (function() {
        var f64 = new Float64Array([-0]), f8b = new Uint8Array(f64.buffer), le2 = f8b[7] === 128;
        function writeDouble_f64_cpy(val2, buf, pos) {
          f64[0] = val2;
          buf[pos] = f8b[0];
          buf[pos + 1] = f8b[1];
          buf[pos + 2] = f8b[2];
          buf[pos + 3] = f8b[3];
          buf[pos + 4] = f8b[4];
          buf[pos + 5] = f8b[5];
          buf[pos + 6] = f8b[6];
          buf[pos + 7] = f8b[7];
        }
        function writeDouble_f64_rev(val2, buf, pos) {
          f64[0] = val2;
          buf[pos] = f8b[7];
          buf[pos + 1] = f8b[6];
          buf[pos + 2] = f8b[5];
          buf[pos + 3] = f8b[4];
          buf[pos + 4] = f8b[3];
          buf[pos + 5] = f8b[2];
          buf[pos + 6] = f8b[1];
          buf[pos + 7] = f8b[0];
        }
        exports3.writeDoubleLE = le2 ? writeDouble_f64_cpy : writeDouble_f64_rev;
        exports3.writeDoubleBE = le2 ? writeDouble_f64_rev : writeDouble_f64_cpy;
        function readDouble_f64_cpy(buf, pos) {
          f8b[0] = buf[pos];
          f8b[1] = buf[pos + 1];
          f8b[2] = buf[pos + 2];
          f8b[3] = buf[pos + 3];
          f8b[4] = buf[pos + 4];
          f8b[5] = buf[pos + 5];
          f8b[6] = buf[pos + 6];
          f8b[7] = buf[pos + 7];
          return f64[0];
        }
        function readDouble_f64_rev(buf, pos) {
          f8b[7] = buf[pos];
          f8b[6] = buf[pos + 1];
          f8b[5] = buf[pos + 2];
          f8b[4] = buf[pos + 3];
          f8b[3] = buf[pos + 4];
          f8b[2] = buf[pos + 5];
          f8b[1] = buf[pos + 6];
          f8b[0] = buf[pos + 7];
          return f64[0];
        }
        exports3.readDoubleLE = le2 ? readDouble_f64_cpy : readDouble_f64_rev;
        exports3.readDoubleBE = le2 ? readDouble_f64_rev : readDouble_f64_cpy;
      })();
      else (function() {
        function writeDouble_ieee754(writeUint, off0, off1, val2, buf, pos) {
          var sign = val2 < 0 ? 1 : 0;
          if (sign)
            val2 = -val2;
          if (val2 === 0) {
            writeUint(0, buf, pos + off0);
            writeUint(1 / val2 > 0 ? (
              /* positive */
              0
            ) : (
              /* negative 0 */
              2147483648
            ), buf, pos + off1);
          } else if (isNaN(val2)) {
            writeUint(0, buf, pos + off0);
            writeUint(2146959360, buf, pos + off1);
          } else if (val2 > 17976931348623157e292) {
            writeUint(0, buf, pos + off0);
            writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);
          } else {
            var mantissa;
            if (val2 < 22250738585072014e-324) {
              mantissa = val2 / 5e-324;
              writeUint(mantissa >>> 0, buf, pos + off0);
              writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);
            } else {
              var exponent = Math.floor(Math.log(val2) / Math.LN2);
              if (exponent === 1024)
                exponent = 1023;
              mantissa = val2 * Math.pow(2, -exponent);
              writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);
              writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);
            }
          }
        }
        exports3.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);
        exports3.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);
        function readDouble_ieee754(readUint, off0, off1, buf, pos) {
          var lo = readUint(buf, pos + off0), hi = readUint(buf, pos + off1);
          var sign = (hi >> 31) * 2 + 1, exponent = hi >>> 20 & 2047, mantissa = 4294967296 * (hi & 1048575) + lo;
          return exponent === 2047 ? mantissa ? NaN : sign * Infinity : exponent === 0 ? sign * 5e-324 * mantissa : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);
        }
        exports3.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);
        exports3.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);
      })();
      return exports3;
    }
    function writeUintLE(val2, buf, pos) {
      buf[pos] = val2 & 255;
      buf[pos + 1] = val2 >>> 8 & 255;
      buf[pos + 2] = val2 >>> 16 & 255;
      buf[pos + 3] = val2 >>> 24;
    }
    function writeUintBE(val2, buf, pos) {
      buf[pos] = val2 >>> 24;
      buf[pos + 1] = val2 >>> 16 & 255;
      buf[pos + 2] = val2 >>> 8 & 255;
      buf[pos + 3] = val2 & 255;
    }
    function readUintLE(buf, pos) {
      return (buf[pos] | buf[pos + 1] << 8 | buf[pos + 2] << 16 | buf[pos + 3] << 24) >>> 0;
    }
    function readUintBE(buf, pos) {
      return (buf[pos] << 24 | buf[pos + 1] << 16 | buf[pos + 2] << 8 | buf[pos + 3]) >>> 0;
    }
  }
});

// node_modules/@protobufjs/inquire/index.js
var require_inquire = __commonJS({
  "node_modules/@protobufjs/inquire/index.js"(exports, module) {
    "use strict";
    module.exports = inquire;
    function inquire(moduleName) {
      try {
        var mod = eval("quire".replace(/^/, "re"))(moduleName);
        if (mod && (mod.length || Object.keys(mod).length))
          return mod;
      } catch (e9) {
      }
      return null;
    }
  }
});

// node_modules/@protobufjs/utf8/index.js
var require_utf8 = __commonJS({
  "node_modules/@protobufjs/utf8/index.js"(exports2) {
    "use strict";
    var utf8 = exports2;
    utf8.length = function utf8_length(string) {
      var len = 0, c11 = 0;
      for (var i11 = 0; i11 < string.length; ++i11) {
        c11 = string.charCodeAt(i11);
        if (c11 < 128)
          len += 1;
        else if (c11 < 2048)
          len += 2;
        else if ((c11 & 64512) === 55296 && (string.charCodeAt(i11 + 1) & 64512) === 56320) {
          ++i11;
          len += 4;
        } else
          len += 3;
      }
      return len;
    };
    utf8.read = function utf8_read(buffer, start, end) {
      var len = end - start;
      if (len < 1)
        return "";
      var parts2 = null, chunk = [], i11 = 0, t2;
      while (start < end) {
        t2 = buffer[start++];
        if (t2 < 128)
          chunk[i11++] = t2;
        else if (t2 > 191 && t2 < 224)
          chunk[i11++] = (t2 & 31) << 6 | buffer[start++] & 63;
        else if (t2 > 239 && t2 < 365) {
          t2 = ((t2 & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 65536;
          chunk[i11++] = 55296 + (t2 >> 10);
          chunk[i11++] = 56320 + (t2 & 1023);
        } else
          chunk[i11++] = (t2 & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;
        if (i11 > 8191) {
          (parts2 || (parts2 = [])).push(String.fromCharCode.apply(String, chunk));
          i11 = 0;
        }
      }
      if (parts2) {
        if (i11)
          parts2.push(String.fromCharCode.apply(String, chunk.slice(0, i11)));
        return parts2.join("");
      }
      return String.fromCharCode.apply(String, chunk.slice(0, i11));
    };
    utf8.write = function utf8_write(string, buffer, offset2) {
      var start = offset2, c1, c22;
      for (var i11 = 0; i11 < string.length; ++i11) {
        c1 = string.charCodeAt(i11);
        if (c1 < 128) {
          buffer[offset2++] = c1;
        } else if (c1 < 2048) {
          buffer[offset2++] = c1 >> 6 | 192;
          buffer[offset2++] = c1 & 63 | 128;
        } else if ((c1 & 64512) === 55296 && ((c22 = string.charCodeAt(i11 + 1)) & 64512) === 56320) {
          c1 = 65536 + ((c1 & 1023) << 10) + (c22 & 1023);
          ++i11;
          buffer[offset2++] = c1 >> 18 | 240;
          buffer[offset2++] = c1 >> 12 & 63 | 128;
          buffer[offset2++] = c1 >> 6 & 63 | 128;
          buffer[offset2++] = c1 & 63 | 128;
        } else {
          buffer[offset2++] = c1 >> 12 | 224;
          buffer[offset2++] = c1 >> 6 & 63 | 128;
          buffer[offset2++] = c1 & 63 | 128;
        }
      }
      return offset2 - start;
    };
  }
});

// node_modules/@protobufjs/pool/index.js
var require_pool = __commonJS({
  "node_modules/@protobufjs/pool/index.js"(exports2, module2) {
    "use strict";
    module2.exports = pool;
    function pool(alloc, slice, size) {
      var SIZE = size || 8192;
      var MAX = SIZE >>> 1;
      var slab = null;
      var offset2 = SIZE;
      return function pool_alloc(size2) {
        if (size2 < 1 || size2 > MAX)
          return alloc(size2);
        if (offset2 + size2 > SIZE) {
          slab = alloc(SIZE);
          offset2 = 0;
        }
        var buf = slice.call(slab, offset2, offset2 += size2);
        if (offset2 & 7)
          offset2 = (offset2 | 7) + 1;
        return buf;
      };
    }
  }
});

// node_modules/protobufjs/src/util/longbits.js
var require_longbits = __commonJS({
  "node_modules/protobufjs/src/util/longbits.js"(exports2, module2) {
    "use strict";
    module2.exports = LongBits;
    var util = require_minimal();
    function LongBits(lo, hi) {
      this.lo = lo >>> 0;
      this.hi = hi >>> 0;
    }
    var zero = LongBits.zero = new LongBits(0, 0);
    zero.toNumber = function() {
      return 0;
    };
    zero.zzEncode = zero.zzDecode = function() {
      return this;
    };
    zero.length = function() {
      return 1;
    };
    var zeroHash = LongBits.zeroHash = "\0\0\0\0\0\0\0\0";
    LongBits.fromNumber = function fromNumber(value2) {
      if (value2 === 0)
        return zero;
      var sign = value2 < 0;
      if (sign)
        value2 = -value2;
      var lo = value2 >>> 0, hi = (value2 - lo) / 4294967296 >>> 0;
      if (sign) {
        hi = ~hi >>> 0;
        lo = ~lo >>> 0;
        if (++lo > 4294967295) {
          lo = 0;
          if (++hi > 4294967295)
            hi = 0;
        }
      }
      return new LongBits(lo, hi);
    };
    LongBits.from = function from(value2) {
      if (typeof value2 === "number")
        return LongBits.fromNumber(value2);
      if (util.isString(value2)) {
        if (util.Long)
          value2 = util.Long.fromString(value2);
        else
          return LongBits.fromNumber(parseInt(value2, 10));
      }
      return value2.low || value2.high ? new LongBits(value2.low >>> 0, value2.high >>> 0) : zero;
    };
    LongBits.prototype.toNumber = function toNumber(unsigned) {
      if (!unsigned && this.hi >>> 31) {
        var lo = ~this.lo + 1 >>> 0, hi = ~this.hi >>> 0;
        if (!lo)
          hi = hi + 1 >>> 0;
        return -(lo + hi * 4294967296);
      }
      return this.lo + this.hi * 4294967296;
    };
    LongBits.prototype.toLong = function toLong(unsigned) {
      return util.Long ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned)) : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };
    };
    var charCodeAt = String.prototype.charCodeAt;
    LongBits.fromHash = function fromHash(hash) {
      if (hash === zeroHash)
        return zero;
      return new LongBits(
        (charCodeAt.call(hash, 0) | charCodeAt.call(hash, 1) << 8 | charCodeAt.call(hash, 2) << 16 | charCodeAt.call(hash, 3) << 24) >>> 0,
        (charCodeAt.call(hash, 4) | charCodeAt.call(hash, 5) << 8 | charCodeAt.call(hash, 6) << 16 | charCodeAt.call(hash, 7) << 24) >>> 0
      );
    };
    LongBits.prototype.toHash = function toHash() {
      return String.fromCharCode(
        this.lo & 255,
        this.lo >>> 8 & 255,
        this.lo >>> 16 & 255,
        this.lo >>> 24,
        this.hi & 255,
        this.hi >>> 8 & 255,
        this.hi >>> 16 & 255,
        this.hi >>> 24
      );
    };
    LongBits.prototype.zzEncode = function zzEncode() {
      var mask = this.hi >> 31;
      this.hi = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;
      this.lo = (this.lo << 1 ^ mask) >>> 0;
      return this;
    };
    LongBits.prototype.zzDecode = function zzDecode() {
      var mask = -(this.lo & 1);
      this.lo = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;
      this.hi = (this.hi >>> 1 ^ mask) >>> 0;
      return this;
    };
    LongBits.prototype.length = function length2() {
      var part0 = this.lo, part1 = (this.lo >>> 28 | this.hi << 4) >>> 0, part2 = this.hi >>> 24;
      return part2 === 0 ? part1 === 0 ? part0 < 16384 ? part0 < 128 ? 1 : 2 : part0 < 2097152 ? 3 : 4 : part1 < 16384 ? part1 < 128 ? 5 : 6 : part1 < 2097152 ? 7 : 8 : part2 < 128 ? 9 : 10;
    };
  }
});

// node_modules/protobufjs/src/util/minimal.js
var require_minimal = __commonJS({
  "node_modules/protobufjs/src/util/minimal.js"(exports2) {
    "use strict";
    var util = exports2;
    util.asPromise = require_aspromise();
    util.base64 = require_base64();
    util.EventEmitter = require_eventemitter();
    util.float = require_float();
    util.inquire = require_inquire();
    util.utf8 = require_utf8();
    util.pool = require_pool();
    util.LongBits = require_longbits();
    util.isNode = Boolean(typeof global !== "undefined" && global && global.process && global.process.versions && global.process.versions.node);
    util.global = util.isNode && global || typeof window !== "undefined" && window || typeof self !== "undefined" && self || exports2;
    util.emptyArray = Object.freeze ? Object.freeze([]) : (
      /* istanbul ignore next */
      []
    );
    util.emptyObject = Object.freeze ? Object.freeze({}) : (
      /* istanbul ignore next */
      {}
    );
    util.isInteger = Number.isInteger || /* istanbul ignore next */
    function isInteger2(value2) {
      return typeof value2 === "number" && isFinite(value2) && Math.floor(value2) === value2;
    };
    util.isString = function isString2(value2) {
      return typeof value2 === "string" || value2 instanceof String;
    };
    util.isObject = function isObject2(value2) {
      return value2 && typeof value2 === "object";
    };
    util.isset = /**
     * Checks if a property on a message is considered to be present.
     * @param {Object} obj Plain object or message instance
     * @param {string} prop Property name
     * @returns {boolean} `true` if considered to be present, otherwise `false`
     */
    util.isSet = function isSet2(obj, prop) {
      var value2 = obj[prop];
      if (value2 != null && obj.hasOwnProperty(prop))
        return typeof value2 !== "object" || (Array.isArray(value2) ? value2.length : Object.keys(value2).length) > 0;
      return false;
    };
    util.Buffer = function() {
      try {
        var Buffer2 = util.inquire("buffer").Buffer;
        return Buffer2.prototype.utf8Write ? Buffer2 : (
          /* istanbul ignore next */
          null
        );
      } catch (e9) {
        return null;
      }
    }();
    util._Buffer_from = null;
    util._Buffer_allocUnsafe = null;
    util.newBuffer = function newBuffer(sizeOrArray) {
      return typeof sizeOrArray === "number" ? util.Buffer ? util._Buffer_allocUnsafe(sizeOrArray) : new util.Array(sizeOrArray) : util.Buffer ? util._Buffer_from(sizeOrArray) : typeof Uint8Array === "undefined" ? sizeOrArray : new Uint8Array(sizeOrArray);
    };
    util.Array = typeof Uint8Array !== "undefined" ? Uint8Array : Array;
    util.Long = /* istanbul ignore next */
    util.global.dcodeIO && /* istanbul ignore next */
    util.global.dcodeIO.Long || /* istanbul ignore next */
    util.global.Long || util.inquire("long");
    util.key2Re = /^true|false|0|1$/;
    util.key32Re = /^-?(?:0|[1-9][0-9]*)$/;
    util.key64Re = /^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;
    util.longToHash = function longToHash(value2) {
      return value2 ? util.LongBits.from(value2).toHash() : util.LongBits.zeroHash;
    };
    util.longFromHash = function longFromHash(hash, unsigned) {
      var bits = util.LongBits.fromHash(hash);
      if (util.Long)
        return util.Long.fromBits(bits.lo, bits.hi, unsigned);
      return bits.toNumber(Boolean(unsigned));
    };
    function merge(dst, src, ifNotSet) {
      for (var keys = Object.keys(src), i11 = 0; i11 < keys.length; ++i11)
        if (dst[keys[i11]] === void 0 || !ifNotSet)
          dst[keys[i11]] = src[keys[i11]];
      return dst;
    }
    util.merge = merge;
    util.lcFirst = function lcFirst(str) {
      return str.charAt(0).toLowerCase() + str.substring(1);
    };
    function newError(name) {
      function CustomError(message, properties) {
        if (!(this instanceof CustomError))
          return new CustomError(message, properties);
        Object.defineProperty(this, "message", { get: function() {
          return message;
        } });
        if (Error.captureStackTrace)
          Error.captureStackTrace(this, CustomError);
        else
          Object.defineProperty(this, "stack", { value: new Error().stack || "" });
        if (properties)
          merge(this, properties);
      }
      CustomError.prototype = Object.create(Error.prototype, {
        constructor: {
          value: CustomError,
          writable: true,
          enumerable: false,
          configurable: true
        },
        name: {
          get: function get() {
            return name;
          },
          set: void 0,
          enumerable: false,
          // configurable: false would accurately preserve the behavior of
          // the original, but I'm guessing that was not intentional.
          // For an actual error subclass, this property would
          // be configurable.
          configurable: true
        },
        toString: {
          value: function value2() {
            return this.name + ": " + this.message;
          },
          writable: true,
          enumerable: false,
          configurable: true
        }
      });
      return CustomError;
    }
    util.newError = newError;
    util.ProtocolError = newError("ProtocolError");
    util.oneOfGetter = function getOneOf(fieldNames) {
      var fieldMap = {};
      for (var i11 = 0; i11 < fieldNames.length; ++i11)
        fieldMap[fieldNames[i11]] = 1;
      return function() {
        for (var keys = Object.keys(this), i12 = keys.length - 1; i12 > -1; --i12)
          if (fieldMap[keys[i12]] === 1 && this[keys[i12]] !== void 0 && this[keys[i12]] !== null)
            return keys[i12];
      };
    };
    util.oneOfSetter = function setOneOf(fieldNames) {
      return function(name) {
        for (var i11 = 0; i11 < fieldNames.length; ++i11)
          if (fieldNames[i11] !== name)
            delete this[fieldNames[i11]];
      };
    };
    util.toJSONOptions = {
      longs: String,
      enums: String,
      bytes: String,
      json: true
    };
    util._configure = function() {
      var Buffer2 = util.Buffer;
      if (!Buffer2) {
        util._Buffer_from = util._Buffer_allocUnsafe = null;
        return;
      }
      util._Buffer_from = Buffer2.from !== Uint8Array.from && Buffer2.from || /* istanbul ignore next */
      function Buffer_from(value2, encoding) {
        return new Buffer2(value2, encoding);
      };
      util._Buffer_allocUnsafe = Buffer2.allocUnsafe || /* istanbul ignore next */
      function Buffer_allocUnsafe(size) {
        return new Buffer2(size);
      };
    };
  }
});

// node_modules/protobufjs/src/writer.js
var require_writer = __commonJS({
  "node_modules/protobufjs/src/writer.js"(exports2, module2) {
    "use strict";
    module2.exports = Writer;
    var util = require_minimal();
    var BufferWriter;
    var LongBits = util.LongBits;
    var base64 = util.base64;
    var utf8 = util.utf8;
    function Op(fn, len, val2) {
      this.fn = fn;
      this.len = len;
      this.next = void 0;
      this.val = val2;
    }
    function noop() {
    }
    function State(writer) {
      this.head = writer.head;
      this.tail = writer.tail;
      this.len = writer.len;
      this.next = writer.states;
    }
    function Writer() {
      this.len = 0;
      this.head = new Op(noop, 0, 0);
      this.tail = this.head;
      this.states = null;
    }
    var create = function create2() {
      return util.Buffer ? function create_buffer_setup() {
        return (Writer.create = function create_buffer() {
          return new BufferWriter();
        })();
      } : function create_array() {
        return new Writer();
      };
    };
    Writer.create = create();
    Writer.alloc = function alloc(size) {
      return new util.Array(size);
    };
    if (util.Array !== Array)
      Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);
    Writer.prototype._push = function push(fn, len, val2) {
      this.tail = this.tail.next = new Op(fn, len, val2);
      this.len += len;
      return this;
    };
    function writeByte(val2, buf, pos) {
      buf[pos] = val2 & 255;
    }
    function writeVarint32(val2, buf, pos) {
      while (val2 > 127) {
        buf[pos++] = val2 & 127 | 128;
        val2 >>>= 7;
      }
      buf[pos] = val2;
    }
    function VarintOp(len, val2) {
      this.len = len;
      this.next = void 0;
      this.val = val2;
    }
    VarintOp.prototype = Object.create(Op.prototype);
    VarintOp.prototype.fn = writeVarint32;
    Writer.prototype.uint32 = function write_uint32(value2) {
      this.len += (this.tail = this.tail.next = new VarintOp(
        (value2 = value2 >>> 0) < 128 ? 1 : value2 < 16384 ? 2 : value2 < 2097152 ? 3 : value2 < 268435456 ? 4 : 5,
        value2
      )).len;
      return this;
    };
    Writer.prototype.int32 = function write_int32(value2) {
      return value2 < 0 ? this._push(writeVarint64, 10, LongBits.fromNumber(value2)) : this.uint32(value2);
    };
    Writer.prototype.sint32 = function write_sint32(value2) {
      return this.uint32((value2 << 1 ^ value2 >> 31) >>> 0);
    };
    function writeVarint64(val2, buf, pos) {
      while (val2.hi) {
        buf[pos++] = val2.lo & 127 | 128;
        val2.lo = (val2.lo >>> 7 | val2.hi << 25) >>> 0;
        val2.hi >>>= 7;
      }
      while (val2.lo > 127) {
        buf[pos++] = val2.lo & 127 | 128;
        val2.lo = val2.lo >>> 7;
      }
      buf[pos++] = val2.lo;
    }
    Writer.prototype.uint64 = function write_uint64(value2) {
      var bits = LongBits.from(value2);
      return this._push(writeVarint64, bits.length(), bits);
    };
    Writer.prototype.int64 = Writer.prototype.uint64;
    Writer.prototype.sint64 = function write_sint64(value2) {
      var bits = LongBits.from(value2).zzEncode();
      return this._push(writeVarint64, bits.length(), bits);
    };
    Writer.prototype.bool = function write_bool(value2) {
      return this._push(writeByte, 1, value2 ? 1 : 0);
    };
    function writeFixed32(val2, buf, pos) {
      buf[pos] = val2 & 255;
      buf[pos + 1] = val2 >>> 8 & 255;
      buf[pos + 2] = val2 >>> 16 & 255;
      buf[pos + 3] = val2 >>> 24;
    }
    Writer.prototype.fixed32 = function write_fixed32(value2) {
      return this._push(writeFixed32, 4, value2 >>> 0);
    };
    Writer.prototype.sfixed32 = Writer.prototype.fixed32;
    Writer.prototype.fixed64 = function write_fixed64(value2) {
      var bits = LongBits.from(value2);
      return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);
    };
    Writer.prototype.sfixed64 = Writer.prototype.fixed64;
    Writer.prototype.float = function write_float(value2) {
      return this._push(util.float.writeFloatLE, 4, value2);
    };
    Writer.prototype.double = function write_double(value2) {
      return this._push(util.float.writeDoubleLE, 8, value2);
    };
    var writeBytes = util.Array.prototype.set ? function writeBytes_set(val2, buf, pos) {
      buf.set(val2, pos);
    } : function writeBytes_for(val2, buf, pos) {
      for (var i11 = 0; i11 < val2.length; ++i11)
        buf[pos + i11] = val2[i11];
    };
    Writer.prototype.bytes = function write_bytes(value2) {
      var len = value2.length >>> 0;
      if (!len)
        return this._push(writeByte, 1, 0);
      if (util.isString(value2)) {
        var buf = Writer.alloc(len = base64.length(value2));
        base64.decode(value2, buf, 0);
        value2 = buf;
      }
      return this.uint32(len)._push(writeBytes, len, value2);
    };
    Writer.prototype.string = function write_string(value2) {
      var len = utf8.length(value2);
      return len ? this.uint32(len)._push(utf8.write, len, value2) : this._push(writeByte, 1, 0);
    };
    Writer.prototype.fork = function fork() {
      this.states = new State(this);
      this.head = this.tail = new Op(noop, 0, 0);
      this.len = 0;
      return this;
    };
    Writer.prototype.reset = function reset() {
      if (this.states) {
        this.head = this.states.head;
        this.tail = this.states.tail;
        this.len = this.states.len;
        this.states = this.states.next;
      } else {
        this.head = this.tail = new Op(noop, 0, 0);
        this.len = 0;
      }
      return this;
    };
    Writer.prototype.ldelim = function ldelim() {
      var head = this.head, tail = this.tail, len = this.len;
      this.reset().uint32(len);
      if (len) {
        this.tail.next = head.next;
        this.tail = tail;
        this.len += len;
      }
      return this;
    };
    Writer.prototype.finish = function finish() {
      var head = this.head.next, buf = this.constructor.alloc(this.len), pos = 0;
      while (head) {
        head.fn(head.val, buf, pos);
        pos += head.len;
        head = head.next;
      }
      return buf;
    };
    Writer._configure = function(BufferWriter_) {
      BufferWriter = BufferWriter_;
      Writer.create = create();
      BufferWriter._configure();
    };
  }
});

// node_modules/protobufjs/src/writer_buffer.js
var require_writer_buffer = __commonJS({
  "node_modules/protobufjs/src/writer_buffer.js"(exports2, module2) {
    "use strict";
    module2.exports = BufferWriter;
    var Writer = require_writer();
    (BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;
    var util = require_minimal();
    function BufferWriter() {
      Writer.call(this);
    }
    BufferWriter._configure = function() {
      BufferWriter.alloc = util._Buffer_allocUnsafe;
      BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === "set" ? function writeBytesBuffer_set(val2, buf, pos) {
        buf.set(val2, pos);
      } : function writeBytesBuffer_copy(val2, buf, pos) {
        if (val2.copy)
          val2.copy(buf, pos, 0, val2.length);
        else for (var i11 = 0; i11 < val2.length; )
          buf[pos++] = val2[i11++];
      };
    };
    BufferWriter.prototype.bytes = function write_bytes_buffer(value2) {
      if (util.isString(value2))
        value2 = util._Buffer_from(value2, "base64");
      var len = value2.length >>> 0;
      this.uint32(len);
      if (len)
        this._push(BufferWriter.writeBytesBuffer, len, value2);
      return this;
    };
    function writeStringBuffer(val2, buf, pos) {
      if (val2.length < 40)
        util.utf8.write(val2, buf, pos);
      else if (buf.utf8Write)
        buf.utf8Write(val2, pos);
      else
        buf.write(val2, pos);
    }
    BufferWriter.prototype.string = function write_string_buffer(value2) {
      var len = util.Buffer.byteLength(value2);
      this.uint32(len);
      if (len)
        this._push(writeStringBuffer, len, value2);
      return this;
    };
    BufferWriter._configure();
  }
});

// node_modules/protobufjs/src/reader.js
var require_reader = __commonJS({
  "node_modules/protobufjs/src/reader.js"(exports2, module2) {
    "use strict";
    module2.exports = Reader;
    var util = require_minimal();
    var BufferReader;
    var LongBits = util.LongBits;
    var utf8 = util.utf8;
    function indexOutOfRange(reader, writeLength) {
      return RangeError("index out of range: " + reader.pos + " + " + (writeLength || 1) + " > " + reader.len);
    }
    function Reader(buffer) {
      this.buf = buffer;
      this.pos = 0;
      this.len = buffer.length;
    }
    var create_array = typeof Uint8Array !== "undefined" ? function create_typed_array(buffer) {
      if (buffer instanceof Uint8Array || Array.isArray(buffer))
        return new Reader(buffer);
      throw Error("illegal buffer");
    } : function create_array2(buffer) {
      if (Array.isArray(buffer))
        return new Reader(buffer);
      throw Error("illegal buffer");
    };
    var create = function create2() {
      return util.Buffer ? function create_buffer_setup(buffer) {
        return (Reader.create = function create_buffer(buffer2) {
          return util.Buffer.isBuffer(buffer2) ? new BufferReader(buffer2) : create_array(buffer2);
        })(buffer);
      } : create_array;
    };
    Reader.create = create();
    Reader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */
    util.Array.prototype.slice;
    Reader.prototype.uint32 = /* @__PURE__ */ function read_uint32_setup() {
      var value2 = 4294967295;
      return function read_uint32() {
        value2 = (this.buf[this.pos] & 127) >>> 0;
        if (this.buf[this.pos++] < 128) return value2;
        value2 = (value2 | (this.buf[this.pos] & 127) << 7) >>> 0;
        if (this.buf[this.pos++] < 128) return value2;
        value2 = (value2 | (this.buf[this.pos] & 127) << 14) >>> 0;
        if (this.buf[this.pos++] < 128) return value2;
        value2 = (value2 | (this.buf[this.pos] & 127) << 21) >>> 0;
        if (this.buf[this.pos++] < 128) return value2;
        value2 = (value2 | (this.buf[this.pos] & 15) << 28) >>> 0;
        if (this.buf[this.pos++] < 128) return value2;
        if ((this.pos += 5) > this.len) {
          this.pos = this.len;
          throw indexOutOfRange(this, 10);
        }
        return value2;
      };
    }();
    Reader.prototype.int32 = function read_int32() {
      return this.uint32() | 0;
    };
    Reader.prototype.sint32 = function read_sint32() {
      var value2 = this.uint32();
      return value2 >>> 1 ^ -(value2 & 1) | 0;
    };
    function readLongVarint() {
      var bits = new LongBits(0, 0);
      var i11 = 0;
      if (this.len - this.pos > 4) {
        for (; i11 < 4; ++i11) {
          bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i11 * 7) >>> 0;
          if (this.buf[this.pos++] < 128)
            return bits;
        }
        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;
        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >> 4) >>> 0;
        if (this.buf[this.pos++] < 128)
          return bits;
        i11 = 0;
      } else {
        for (; i11 < 3; ++i11) {
          if (this.pos >= this.len)
            throw indexOutOfRange(this);
          bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i11 * 7) >>> 0;
          if (this.buf[this.pos++] < 128)
            return bits;
        }
        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i11 * 7) >>> 0;
        return bits;
      }
      if (this.len - this.pos > 4) {
        for (; i11 < 5; ++i11) {
          bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i11 * 7 + 3) >>> 0;
          if (this.buf[this.pos++] < 128)
            return bits;
        }
      } else {
        for (; i11 < 5; ++i11) {
          if (this.pos >= this.len)
            throw indexOutOfRange(this);
          bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i11 * 7 + 3) >>> 0;
          if (this.buf[this.pos++] < 128)
            return bits;
        }
      }
      throw Error("invalid varint encoding");
    }
    Reader.prototype.bool = function read_bool() {
      return this.uint32() !== 0;
    };
    function readFixed32_end(buf, end) {
      return (buf[end - 4] | buf[end - 3] << 8 | buf[end - 2] << 16 | buf[end - 1] << 24) >>> 0;
    }
    Reader.prototype.fixed32 = function read_fixed32() {
      if (this.pos + 4 > this.len)
        throw indexOutOfRange(this, 4);
      return readFixed32_end(this.buf, this.pos += 4);
    };
    Reader.prototype.sfixed32 = function read_sfixed32() {
      if (this.pos + 4 > this.len)
        throw indexOutOfRange(this, 4);
      return readFixed32_end(this.buf, this.pos += 4) | 0;
    };
    function readFixed64() {
      if (this.pos + 8 > this.len)
        throw indexOutOfRange(this, 8);
      return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));
    }
    Reader.prototype.float = function read_float() {
      if (this.pos + 4 > this.len)
        throw indexOutOfRange(this, 4);
      var value2 = util.float.readFloatLE(this.buf, this.pos);
      this.pos += 4;
      return value2;
    };
    Reader.prototype.double = function read_double() {
      if (this.pos + 8 > this.len)
        throw indexOutOfRange(this, 4);
      var value2 = util.float.readDoubleLE(this.buf, this.pos);
      this.pos += 8;
      return value2;
    };
    Reader.prototype.bytes = function read_bytes() {
      var length2 = this.uint32(), start = this.pos, end = this.pos + length2;
      if (end > this.len)
        throw indexOutOfRange(this, length2);
      this.pos += length2;
      if (Array.isArray(this.buf))
        return this.buf.slice(start, end);
      if (start === end) {
        var nativeBuffer = util.Buffer;
        return nativeBuffer ? nativeBuffer.alloc(0) : new this.buf.constructor(0);
      }
      return this._slice.call(this.buf, start, end);
    };
    Reader.prototype.string = function read_string() {
      var bytes = this.bytes();
      return utf8.read(bytes, 0, bytes.length);
    };
    Reader.prototype.skip = function skip(length2) {
      if (typeof length2 === "number") {
        if (this.pos + length2 > this.len)
          throw indexOutOfRange(this, length2);
        this.pos += length2;
      } else {
        do {
          if (this.pos >= this.len)
            throw indexOutOfRange(this);
        } while (this.buf[this.pos++] & 128);
      }
      return this;
    };
    Reader.prototype.skipType = function(wireType) {
      switch (wireType) {
        case 0:
          this.skip();
          break;
        case 1:
          this.skip(8);
          break;
        case 2:
          this.skip(this.uint32());
          break;
        case 3:
          while ((wireType = this.uint32() & 7) !== 4) {
            this.skipType(wireType);
          }
          break;
        case 5:
          this.skip(4);
          break;
        default:
          throw Error("invalid wire type " + wireType + " at offset " + this.pos);
      }
      return this;
    };
    Reader._configure = function(BufferReader_) {
      BufferReader = BufferReader_;
      Reader.create = create();
      BufferReader._configure();
      var fn = util.Long ? "toLong" : (
        /* istanbul ignore next */
        "toNumber"
      );
      util.merge(Reader.prototype, {
        int64: function read_int64() {
          return readLongVarint.call(this)[fn](false);
        },
        uint64: function read_uint64() {
          return readLongVarint.call(this)[fn](true);
        },
        sint64: function read_sint64() {
          return readLongVarint.call(this).zzDecode()[fn](false);
        },
        fixed64: function read_fixed64() {
          return readFixed64.call(this)[fn](true);
        },
        sfixed64: function read_sfixed64() {
          return readFixed64.call(this)[fn](false);
        }
      });
    };
  }
});

// node_modules/protobufjs/src/reader_buffer.js
var require_reader_buffer = __commonJS({
  "node_modules/protobufjs/src/reader_buffer.js"(exports2, module2) {
    "use strict";
    module2.exports = BufferReader;
    var Reader = require_reader();
    (BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;
    var util = require_minimal();
    function BufferReader(buffer) {
      Reader.call(this, buffer);
    }
    BufferReader._configure = function() {
      if (util.Buffer)
        BufferReader.prototype._slice = util.Buffer.prototype.slice;
    };
    BufferReader.prototype.string = function read_string_buffer() {
      var len = this.uint32();
      return this.buf.utf8Slice ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len)) : this.buf.toString("utf-8", this.pos, this.pos = Math.min(this.pos + len, this.len));
    };
    BufferReader._configure();
  }
});

// node_modules/protobufjs/src/rpc/service.js
var require_service = __commonJS({
  "node_modules/protobufjs/src/rpc/service.js"(exports2, module2) {
    "use strict";
    module2.exports = Service;
    var util = require_minimal();
    (Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;
    function Service(rpcImpl, requestDelimited, responseDelimited) {
      if (typeof rpcImpl !== "function")
        throw TypeError("rpcImpl must be a function");
      util.EventEmitter.call(this);
      this.rpcImpl = rpcImpl;
      this.requestDelimited = Boolean(requestDelimited);
      this.responseDelimited = Boolean(responseDelimited);
    }
    Service.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {
      if (!request)
        throw TypeError("request must be specified");
      var self2 = this;
      if (!callback)
        return util.asPromise(rpcCall, self2, method, requestCtor, responseCtor, request);
      if (!self2.rpcImpl) {
        setTimeout(function() {
          callback(Error("already ended"));
        }, 0);
        return void 0;
      }
      try {
        return self2.rpcImpl(
          method,
          requestCtor[self2.requestDelimited ? "encodeDelimited" : "encode"](request).finish(),
          function rpcCallback(err, response) {
            if (err) {
              self2.emit("error", err, method);
              return callback(err);
            }
            if (response === null) {
              self2.end(
                /* endedByRPC */
                true
              );
              return void 0;
            }
            if (!(response instanceof responseCtor)) {
              try {
                response = responseCtor[self2.responseDelimited ? "decodeDelimited" : "decode"](response);
              } catch (err2) {
                self2.emit("error", err2, method);
                return callback(err2);
              }
            }
            self2.emit("data", response, method);
            return callback(null, response);
          }
        );
      } catch (err) {
        self2.emit("error", err, method);
        setTimeout(function() {
          callback(err);
        }, 0);
        return void 0;
      }
    };
    Service.prototype.end = function end(endedByRPC) {
      if (this.rpcImpl) {
        if (!endedByRPC)
          this.rpcImpl(null, null, null);
        this.rpcImpl = null;
        this.emit("end").off();
      }
      return this;
    };
  }
});

// node_modules/protobufjs/src/rpc.js
var require_rpc = __commonJS({
  "node_modules/protobufjs/src/rpc.js"(exports2) {
    "use strict";
    var rpc = exports2;
    rpc.Service = require_service();
  }
});

// node_modules/protobufjs/src/roots.js
var require_roots = __commonJS({
  "node_modules/protobufjs/src/roots.js"(exports2, module2) {
    "use strict";
    module2.exports = {};
  }
});

// node_modules/protobufjs/src/index-minimal.js
var require_index_minimal = __commonJS({
  "node_modules/protobufjs/src/index-minimal.js"(exports2) {
    "use strict";
    var protobuf = exports2;
    protobuf.build = "minimal";
    protobuf.Writer = require_writer();
    protobuf.BufferWriter = require_writer_buffer();
    protobuf.Reader = require_reader();
    protobuf.BufferReader = require_reader_buffer();
    protobuf.util = require_minimal();
    protobuf.rpc = require_rpc();
    protobuf.roots = require_roots();
    protobuf.configure = configure;
    function configure() {
      protobuf.util._configure();
      protobuf.Writer._configure(protobuf.BufferWriter);
      protobuf.Reader._configure(protobuf.BufferReader);
    }
    configure();
  }
});

// node_modules/protobufjs/minimal.js
var require_minimal2 = __commonJS({
  "node_modules/protobufjs/minimal.js"(exports2, module2) {
    "use strict";
    module2.exports = require_index_minimal();
  }
});

// node_modules/ms/index.js
var require_ms = __commonJS({
  "node_modules/ms/index.js"(exports2, module2) {
    var s15 = 1e3;
    var m13 = s15 * 60;
    var h8 = m13 * 60;
    var d9 = h8 * 24;
    var w7 = d9 * 7;
    var y10 = d9 * 365.25;
    module2.exports = function(val2, options) {
      options = options || {};
      var type = typeof val2;
      if (type === "string" && val2.length > 0) {
        return parse4(val2);
      } else if (type === "number" && isFinite(val2)) {
        return options.long ? fmtLong(val2) : fmtShort(val2);
      }
      throw new Error(
        "val is not a non-empty string or a valid number. val=" + JSON.stringify(val2)
      );
    };
    function parse4(str) {
      str = String(str);
      if (str.length > 100) {
        return;
      }
      var match2 = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
        str
      );
      if (!match2) {
        return;
      }
      var n11 = parseFloat(match2[1]);
      var type = (match2[2] || "ms").toLowerCase();
      switch (type) {
        case "years":
        case "year":
        case "yrs":
        case "yr":
        case "y":
          return n11 * y10;
        case "weeks":
        case "week":
        case "w":
          return n11 * w7;
        case "days":
        case "day":
        case "d":
          return n11 * d9;
        case "hours":
        case "hour":
        case "hrs":
        case "hr":
        case "h":
          return n11 * h8;
        case "minutes":
        case "minute":
        case "mins":
        case "min":
        case "m":
          return n11 * m13;
        case "seconds":
        case "second":
        case "secs":
        case "sec":
        case "s":
          return n11 * s15;
        case "milliseconds":
        case "millisecond":
        case "msecs":
        case "msec":
        case "ms":
          return n11;
        default:
          return void 0;
      }
    }
    function fmtShort(ms2) {
      var msAbs = Math.abs(ms2);
      if (msAbs >= d9) {
        return Math.round(ms2 / d9) + "d";
      }
      if (msAbs >= h8) {
        return Math.round(ms2 / h8) + "h";
      }
      if (msAbs >= m13) {
        return Math.round(ms2 / m13) + "m";
      }
      if (msAbs >= s15) {
        return Math.round(ms2 / s15) + "s";
      }
      return ms2 + "ms";
    }
    function fmtLong(ms2) {
      var msAbs = Math.abs(ms2);
      if (msAbs >= d9) {
        return plural(ms2, msAbs, d9, "day");
      }
      if (msAbs >= h8) {
        return plural(ms2, msAbs, h8, "hour");
      }
      if (msAbs >= m13) {
        return plural(ms2, msAbs, m13, "minute");
      }
      if (msAbs >= s15) {
        return plural(ms2, msAbs, s15, "second");
      }
      return ms2 + " ms";
    }
    function plural(ms2, msAbs, n11, name) {
      var isPlural = msAbs >= n11 * 1.5;
      return Math.round(ms2 / n11) + " " + name + (isPlural ? "s" : "");
    }
  }
});

// node_modules/debug/src/common.js
var require_common = __commonJS({
  "node_modules/debug/src/common.js"(exports2, module2) {
    function setup(env2) {
      createDebug.debug = createDebug;
      createDebug.default = createDebug;
      createDebug.coerce = coerce;
      createDebug.disable = disable;
      createDebug.enable = enable;
      createDebug.enabled = enabled;
      createDebug.humanize = require_ms();
      createDebug.destroy = destroy;
      Object.keys(env2).forEach((key) => {
        createDebug[key] = env2[key];
      });
      createDebug.names = [];
      createDebug.skips = [];
      createDebug.formatters = {};
      function selectColor(namespace) {
        let hash = 0;
        for (let i11 = 0; i11 < namespace.length; i11++) {
          hash = (hash << 5) - hash + namespace.charCodeAt(i11);
          hash |= 0;
        }
        return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
      }
      createDebug.selectColor = selectColor;
      function createDebug(namespace) {
        let prevTime;
        let enableOverride = null;
        let namespacesCache;
        let enabledCache;
        function debug5(...args) {
          if (!debug5.enabled) {
            return;
          }
          const self2 = debug5;
          const curr = Number(/* @__PURE__ */ new Date());
          const ms2 = curr - (prevTime || curr);
          self2.diff = ms2;
          self2.prev = prevTime;
          self2.curr = curr;
          prevTime = curr;
          args[0] = createDebug.coerce(args[0]);
          if (typeof args[0] !== "string") {
            args.unshift("%O");
          }
          let index = 0;
          args[0] = args[0].replace(/%([a-zA-Z%])/g, (match2, format) => {
            if (match2 === "%%") {
              return "%";
            }
            index++;
            const formatter = createDebug.formatters[format];
            if (typeof formatter === "function") {
              const val2 = args[index];
              match2 = formatter.call(self2, val2);
              args.splice(index, 1);
              index--;
            }
            return match2;
          });
          createDebug.formatArgs.call(self2, args);
          const logFn = self2.log || createDebug.log;
          logFn.apply(self2, args);
        }
        debug5.namespace = namespace;
        debug5.useColors = createDebug.useColors();
        debug5.color = createDebug.selectColor(namespace);
        debug5.extend = extend;
        debug5.destroy = createDebug.destroy;
        Object.defineProperty(debug5, "enabled", {
          enumerable: true,
          configurable: false,
          get: () => {
            if (enableOverride !== null) {
              return enableOverride;
            }
            if (namespacesCache !== createDebug.namespaces) {
              namespacesCache = createDebug.namespaces;
              enabledCache = createDebug.enabled(namespace);
            }
            return enabledCache;
          },
          set: (v11) => {
            enableOverride = v11;
          }
        });
        if (typeof createDebug.init === "function") {
          createDebug.init(debug5);
        }
        return debug5;
      }
      function extend(namespace, delimiter) {
        const newDebug = createDebug(this.namespace + (typeof delimiter === "undefined" ? ":" : delimiter) + namespace);
        newDebug.log = this.log;
        return newDebug;
      }
      function enable(namespaces) {
        createDebug.save(namespaces);
        createDebug.namespaces = namespaces;
        createDebug.names = [];
        createDebug.skips = [];
        let i11;
        const split = (typeof namespaces === "string" ? namespaces : "").split(/[\s,]+/);
        const len = split.length;
        for (i11 = 0; i11 < len; i11++) {
          if (!split[i11]) {
            continue;
          }
          namespaces = split[i11].replace(/\*/g, ".*?");
          if (namespaces[0] === "-") {
            createDebug.skips.push(new RegExp("^" + namespaces.slice(1) + "$"));
          } else {
            createDebug.names.push(new RegExp("^" + namespaces + "$"));
          }
        }
      }
      function disable() {
        const namespaces = [
          ...createDebug.names.map(toNamespace),
          ...createDebug.skips.map(toNamespace).map((namespace) => "-" + namespace)
        ].join(",");
        createDebug.enable("");
        return namespaces;
      }
      function enabled(name) {
        if (name[name.length - 1] === "*") {
          return true;
        }
        let i11;
        let len;
        for (i11 = 0, len = createDebug.skips.length; i11 < len; i11++) {
          if (createDebug.skips[i11].test(name)) {
            return false;
          }
        }
        for (i11 = 0, len = createDebug.names.length; i11 < len; i11++) {
          if (createDebug.names[i11].test(name)) {
            return true;
          }
        }
        return false;
      }
      function toNamespace(regexp) {
        return regexp.toString().substring(2, regexp.toString().length - 2).replace(/\.\*\?$/, "*");
      }
      function coerce(val2) {
        if (val2 instanceof Error) {
          return val2.stack || val2.message;
        }
        return val2;
      }
      function destroy() {
        console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
      }
      createDebug.enable(createDebug.load());
      return createDebug;
    }
    module2.exports = setup;
  }
});

// node_modules/debug/src/browser.js
var require_browser = __commonJS({
  "node_modules/debug/src/browser.js"(exports2, module2) {
    exports2.formatArgs = formatArgs;
    exports2.save = save;
    exports2.load = load;
    exports2.useColors = useColors;
    exports2.storage = localstorage();
    exports2.destroy = /* @__PURE__ */ (() => {
      let warned = false;
      return () => {
        if (!warned) {
          warned = true;
          console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
        }
      };
    })();
    exports2.colors = [
      "#0000CC",
      "#0000FF",
      "#0033CC",
      "#0033FF",
      "#0066CC",
      "#0066FF",
      "#0099CC",
      "#0099FF",
      "#00CC00",
      "#00CC33",
      "#00CC66",
      "#00CC99",
      "#00CCCC",
      "#00CCFF",
      "#3300CC",
      "#3300FF",
      "#3333CC",
      "#3333FF",
      "#3366CC",
      "#3366FF",
      "#3399CC",
      "#3399FF",
      "#33CC00",
      "#33CC33",
      "#33CC66",
      "#33CC99",
      "#33CCCC",
      "#33CCFF",
      "#6600CC",
      "#6600FF",
      "#6633CC",
      "#6633FF",
      "#66CC00",
      "#66CC33",
      "#9900CC",
      "#9900FF",
      "#9933CC",
      "#9933FF",
      "#99CC00",
      "#99CC33",
      "#CC0000",
      "#CC0033",
      "#CC0066",
      "#CC0099",
      "#CC00CC",
      "#CC00FF",
      "#CC3300",
      "#CC3333",
      "#CC3366",
      "#CC3399",
      "#CC33CC",
      "#CC33FF",
      "#CC6600",
      "#CC6633",
      "#CC9900",
      "#CC9933",
      "#CCCC00",
      "#CCCC33",
      "#FF0000",
      "#FF0033",
      "#FF0066",
      "#FF0099",
      "#FF00CC",
      "#FF00FF",
      "#FF3300",
      "#FF3333",
      "#FF3366",
      "#FF3399",
      "#FF33CC",
      "#FF33FF",
      "#FF6600",
      "#FF6633",
      "#FF9900",
      "#FF9933",
      "#FFCC00",
      "#FFCC33"
    ];
    function useColors() {
      if (typeof window !== "undefined" && window.process && (window.process.type === "renderer" || window.process.__nwjs)) {
        return true;
      }
      if (typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
        return false;
      }
      let m13;
      return typeof document !== "undefined" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773
      typeof window !== "undefined" && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?
      // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
      typeof navigator !== "undefined" && navigator.userAgent && (m13 = navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)) && parseInt(m13[1], 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker
      typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
    }
    function formatArgs(args) {
      args[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + args[0] + (this.useColors ? "%c " : " ") + "+" + module2.exports.humanize(this.diff);
      if (!this.useColors) {
        return;
      }
      const c11 = "color: " + this.color;
      args.splice(1, 0, c11, "color: inherit");
      let index = 0;
      let lastC = 0;
      args[0].replace(/%[a-zA-Z%]/g, (match2) => {
        if (match2 === "%%") {
          return;
        }
        index++;
        if (match2 === "%c") {
          lastC = index;
        }
      });
      args.splice(lastC, 0, c11);
    }
    exports2.log = console.debug || console.log || (() => {
    });
    function save(namespaces) {
      try {
        if (namespaces) {
          exports2.storage.setItem("debug", namespaces);
        } else {
          exports2.storage.removeItem("debug");
        }
      } catch (error) {
      }
    }
    function load() {
      let r17;
      try {
        r17 = exports2.storage.getItem("debug");
      } catch (error) {
      }
      if (!r17 && typeof process !== "undefined" && "env" in process) {
        r17 = process.env.DEBUG;
      }
      return r17;
    }
    function localstorage() {
      try {
        return localStorage;
      } catch (error) {
      }
    }
    module2.exports = require_common()(exports2);
    var { formatters } = module2.exports;
    formatters.j = function(v11) {
      try {
        return JSON.stringify(v11);
      } catch (error) {
        return "[UnexpectedJSONParseError]: " + error.message;
      }
    };
  }
});

// node_modules/requires-port/index.js
var require_requires_port = __commonJS({
  "node_modules/requires-port/index.js"(exports2, module2) {
    "use strict";
    module2.exports = function required(port, protocol4) {
      protocol4 = protocol4.split(":")[0];
      port = +port;
      if (!port) return false;
      switch (protocol4) {
        case "http":
        case "ws":
          return port !== 80;
        case "https":
        case "wss":
          return port !== 443;
        case "ftp":
          return port !== 21;
        case "gopher":
          return port !== 70;
        case "file":
          return false;
      }
      return port !== 0;
    };
  }
});

// node_modules/querystringify/index.js
var require_querystringify = __commonJS({
  "node_modules/querystringify/index.js"(exports2) {
    "use strict";
    var has = Object.prototype.hasOwnProperty;
    var undef;
    function decode3(input) {
      try {
        return decodeURIComponent(input.replace(/\+/g, " "));
      } catch (e9) {
        return null;
      }
    }
    function encode3(input) {
      try {
        return encodeURIComponent(input);
      } catch (e9) {
        return null;
      }
    }
    function querystring(query) {
      var parser = /([^=?#&]+)=?([^&]*)/g, result = {}, part;
      while (part = parser.exec(query)) {
        var key = decode3(part[1]), value2 = decode3(part[2]);
        if (key === null || value2 === null || key in result) continue;
        result[key] = value2;
      }
      return result;
    }
    function querystringify(obj, prefix) {
      prefix = prefix || "";
      var pairs = [], value2, key;
      if ("string" !== typeof prefix) prefix = "?";
      for (key in obj) {
        if (has.call(obj, key)) {
          value2 = obj[key];
          if (!value2 && (value2 === null || value2 === undef || isNaN(value2))) {
            value2 = "";
          }
          key = encode3(key);
          value2 = encode3(value2);
          if (key === null || value2 === null) continue;
          pairs.push(key + "=" + value2);
        }
      }
      return pairs.length ? prefix + pairs.join("&") : "";
    }
    exports2.stringify = querystringify;
    exports2.parse = querystring;
  }
});

// node_modules/url-parse/index.js
var require_url_parse = __commonJS({
  "node_modules/url-parse/index.js"(exports2, module2) {
    "use strict";
    var required = require_requires_port();
    var qs = require_querystringify();
    var controlOrWhitespace = /^[\x00-\x20\u00a0\u1680\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]+/;
    var CRHTLF = /[\n\r\t]/g;
    var slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\/\//;
    var port = /:\d+$/;
    var protocolre = /^([a-z][a-z0-9.+-]*:)?(\/\/)?([\\/]+)?([\S\s]*)/i;
    var windowsDriveLetter = /^[a-zA-Z]:/;
    function trimLeft(str) {
      return (str ? str : "").toString().replace(controlOrWhitespace, "");
    }
    var rules = [
      ["#", "hash"],
      // Extract from the back.
      ["?", "query"],
      // Extract from the back.
      function sanitize(address, url2) {
        return isSpecial(url2.protocol) ? address.replace(/\\/g, "/") : address;
      },
      ["/", "pathname"],
      // Extract from the back.
      ["@", "auth", 1],
      // Extract from the front.
      [NaN, "host", void 0, 1, 1],
      // Set left over value.
      [/:(\d*)$/, "port", void 0, 1],
      // RegExp the back.
      [NaN, "hostname", void 0, 1, 1]
      // Set left over.
    ];
    var ignore = { hash: 1, query: 1 };
    function lolcation(loc) {
      var globalVar;
      if (typeof window !== "undefined") globalVar = window;
      else if (typeof global !== "undefined") globalVar = global;
      else if (typeof self !== "undefined") globalVar = self;
      else globalVar = {};
      var location2 = globalVar.location || {};
      loc = loc || location2;
      var finaldestination = {}, type = typeof loc, key;
      if ("blob:" === loc.protocol) {
        finaldestination = new Url(unescape(loc.pathname), {});
      } else if ("string" === type) {
        finaldestination = new Url(loc, {});
        for (key in ignore) delete finaldestination[key];
      } else if ("object" === type) {
        for (key in loc) {
          if (key in ignore) continue;
          finaldestination[key] = loc[key];
        }
        if (finaldestination.slashes === void 0) {
          finaldestination.slashes = slashes.test(loc.href);
        }
      }
      return finaldestination;
    }
    function isSpecial(scheme) {
      return scheme === "file:" || scheme === "ftp:" || scheme === "http:" || scheme === "https:" || scheme === "ws:" || scheme === "wss:";
    }
    function extractProtocol(address, location2) {
      address = trimLeft(address);
      address = address.replace(CRHTLF, "");
      location2 = location2 || {};
      var match2 = protocolre.exec(address);
      var protocol4 = match2[1] ? match2[1].toLowerCase() : "";
      var forwardSlashes = !!match2[2];
      var otherSlashes = !!match2[3];
      var slashesCount = 0;
      var rest;
      if (forwardSlashes) {
        if (otherSlashes) {
          rest = match2[2] + match2[3] + match2[4];
          slashesCount = match2[2].length + match2[3].length;
        } else {
          rest = match2[2] + match2[4];
          slashesCount = match2[2].length;
        }
      } else {
        if (otherSlashes) {
          rest = match2[3] + match2[4];
          slashesCount = match2[3].length;
        } else {
          rest = match2[4];
        }
      }
      if (protocol4 === "file:") {
        if (slashesCount >= 2) {
          rest = rest.slice(2);
        }
      } else if (isSpecial(protocol4)) {
        rest = match2[4];
      } else if (protocol4) {
        if (forwardSlashes) {
          rest = rest.slice(2);
        }
      } else if (slashesCount >= 2 && isSpecial(location2.protocol)) {
        rest = match2[4];
      }
      return {
        protocol: protocol4,
        slashes: forwardSlashes || isSpecial(protocol4),
        slashesCount,
        rest
      };
    }
    function resolve(relative, base) {
      if (relative === "") return base;
      var path = (base || "/").split("/").slice(0, -1).concat(relative.split("/")), i11 = path.length, last = path[i11 - 1], unshift = false, up = 0;
      while (i11--) {
        if (path[i11] === ".") {
          path.splice(i11, 1);
        } else if (path[i11] === "..") {
          path.splice(i11, 1);
          up++;
        } else if (up) {
          if (i11 === 0) unshift = true;
          path.splice(i11, 1);
          up--;
        }
      }
      if (unshift) path.unshift("");
      if (last === "." || last === "..") path.push("");
      return path.join("/");
    }
    function Url(address, location2, parser) {
      address = trimLeft(address);
      address = address.replace(CRHTLF, "");
      if (!(this instanceof Url)) {
        return new Url(address, location2, parser);
      }
      var relative, extracted, parse4, instruction, index, key, instructions = rules.slice(), type = typeof location2, url2 = this, i11 = 0;
      if ("object" !== type && "string" !== type) {
        parser = location2;
        location2 = null;
      }
      if (parser && "function" !== typeof parser) parser = qs.parse;
      location2 = lolcation(location2);
      extracted = extractProtocol(address || "", location2);
      relative = !extracted.protocol && !extracted.slashes;
      url2.slashes = extracted.slashes || relative && location2.slashes;
      url2.protocol = extracted.protocol || location2.protocol || "";
      address = extracted.rest;
      if (extracted.protocol === "file:" && (extracted.slashesCount !== 2 || windowsDriveLetter.test(address)) || !extracted.slashes && (extracted.protocol || extracted.slashesCount < 2 || !isSpecial(url2.protocol))) {
        instructions[3] = [/(.*)/, "pathname"];
      }
      for (; i11 < instructions.length; i11++) {
        instruction = instructions[i11];
        if (typeof instruction === "function") {
          address = instruction(address, url2);
          continue;
        }
        parse4 = instruction[0];
        key = instruction[1];
        if (parse4 !== parse4) {
          url2[key] = address;
        } else if ("string" === typeof parse4) {
          index = parse4 === "@" ? address.lastIndexOf(parse4) : address.indexOf(parse4);
          if (~index) {
            if ("number" === typeof instruction[2]) {
              url2[key] = address.slice(0, index);
              address = address.slice(index + instruction[2]);
            } else {
              url2[key] = address.slice(index);
              address = address.slice(0, index);
            }
          }
        } else if (index = parse4.exec(address)) {
          url2[key] = index[1];
          address = address.slice(0, index.index);
        }
        url2[key] = url2[key] || (relative && instruction[3] ? location2[key] || "" : "");
        if (instruction[4]) url2[key] = url2[key].toLowerCase();
      }
      if (parser) url2.query = parser(url2.query);
      if (relative && location2.slashes && url2.pathname.charAt(0) !== "/" && (url2.pathname !== "" || location2.pathname !== "")) {
        url2.pathname = resolve(url2.pathname, location2.pathname);
      }
      if (url2.pathname.charAt(0) !== "/" && isSpecial(url2.protocol)) {
        url2.pathname = "/" + url2.pathname;
      }
      if (!required(url2.port, url2.protocol)) {
        url2.host = url2.hostname;
        url2.port = "";
      }
      url2.username = url2.password = "";
      if (url2.auth) {
        index = url2.auth.indexOf(":");
        if (~index) {
          url2.username = url2.auth.slice(0, index);
          url2.username = encodeURIComponent(decodeURIComponent(url2.username));
          url2.password = url2.auth.slice(index + 1);
          url2.password = encodeURIComponent(decodeURIComponent(url2.password));
        } else {
          url2.username = encodeURIComponent(decodeURIComponent(url2.auth));
        }
        url2.auth = url2.password ? url2.username + ":" + url2.password : url2.username;
      }
      url2.origin = url2.protocol !== "file:" && isSpecial(url2.protocol) && url2.host ? url2.protocol + "//" + url2.host : "null";
      url2.href = url2.toString();
    }
    function set(part, value2, fn) {
      var url2 = this;
      switch (part) {
        case "query":
          if ("string" === typeof value2 && value2.length) {
            value2 = (fn || qs.parse)(value2);
          }
          url2[part] = value2;
          break;
        case "port":
          url2[part] = value2;
          if (!required(value2, url2.protocol)) {
            url2.host = url2.hostname;
            url2[part] = "";
          } else if (value2) {
            url2.host = url2.hostname + ":" + value2;
          }
          break;
        case "hostname":
          url2[part] = value2;
          if (url2.port) value2 += ":" + url2.port;
          url2.host = value2;
          break;
        case "host":
          url2[part] = value2;
          if (port.test(value2)) {
            value2 = value2.split(":");
            url2.port = value2.pop();
            url2.hostname = value2.join(":");
          } else {
            url2.hostname = value2;
            url2.port = "";
          }
          break;
        case "protocol":
          url2.protocol = value2.toLowerCase();
          url2.slashes = !fn;
          break;
        case "pathname":
        case "hash":
          if (value2) {
            var char = part === "pathname" ? "/" : "#";
            url2[part] = value2.charAt(0) !== char ? char + value2 : value2;
          } else {
            url2[part] = value2;
          }
          break;
        case "username":
        case "password":
          url2[part] = encodeURIComponent(value2);
          break;
        case "auth":
          var index = value2.indexOf(":");
          if (~index) {
            url2.username = value2.slice(0, index);
            url2.username = encodeURIComponent(decodeURIComponent(url2.username));
            url2.password = value2.slice(index + 1);
            url2.password = encodeURIComponent(decodeURIComponent(url2.password));
          } else {
            url2.username = encodeURIComponent(decodeURIComponent(value2));
          }
      }
      for (var i11 = 0; i11 < rules.length; i11++) {
        var ins = rules[i11];
        if (ins[4]) url2[ins[1]] = url2[ins[1]].toLowerCase();
      }
      url2.auth = url2.password ? url2.username + ":" + url2.password : url2.username;
      url2.origin = url2.protocol !== "file:" && isSpecial(url2.protocol) && url2.host ? url2.protocol + "//" + url2.host : "null";
      url2.href = url2.toString();
      return url2;
    }
    function toString2(stringify2) {
      if (!stringify2 || "function" !== typeof stringify2) stringify2 = qs.stringify;
      var query, url2 = this, host = url2.host, protocol4 = url2.protocol;
      if (protocol4 && protocol4.charAt(protocol4.length - 1) !== ":") protocol4 += ":";
      var result = protocol4 + (url2.protocol && url2.slashes || isSpecial(url2.protocol) ? "//" : "");
      if (url2.username) {
        result += url2.username;
        if (url2.password) result += ":" + url2.password;
        result += "@";
      } else if (url2.password) {
        result += ":" + url2.password;
        result += "@";
      } else if (url2.protocol !== "file:" && isSpecial(url2.protocol) && !host && url2.pathname !== "/") {
        result += "@";
      }
      if (host[host.length - 1] === ":" || port.test(url2.hostname) && !url2.port) {
        host += ":";
      }
      result += host + url2.pathname;
      query = "object" === typeof url2.query ? stringify2(url2.query) : url2.query;
      if (query) result += "?" !== query.charAt(0) ? "?" + query : query;
      if (url2.hash) result += url2.hash;
      return result;
    }
    Url.prototype = { set, toString: toString2 };
    Url.extractProtocol = extractProtocol;
    Url.location = lolcation;
    Url.trimLeft = trimLeft;
    Url.qs = qs;
    module2.exports = Url;
  }
});

// node_modules/@ckeditor/ckeditor5-collaboration-core/dist/index.js
var import_format = __toESM(require_format());
var import_parseISO = __toESM(require_parseISO());
var import_differenceInCalendarDays = __toESM(require_differenceInCalendarDays());
var o = class extends ContextPlugin {
  static get ["pluginName"]() {
    return "Permissions";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["setPermissions"](_0x34edef, _0x499f79) {
    let _0x4b8184;
    if (_0x499f79 || (_0x499f79 = this["context"]["config"]["get"]("collaboration.channelId")), this["context"]["config"]["get"]("collaboration.channelId") == _0x499f79 ? _0x4b8184 = this["context"] : "editors" in this["context"] && this["context"]["editors"] && (_0x4b8184 = this["context"]["editors"]["find"]((_0x7a09d0) => _0x7a09d0["config"]["get"]("collaboration.channelId") == _0x499f79)), !_0x4b8184) throw new CKEditorError("permissions-set-permissions-invalid-channel-id", null);
    const _0x20c59d = _0x4b8184["plugins"], _0x57130d = _0x20c59d["has"]("CommentsRepository") ? _0x20c59d["get"]("CommentsRepository") : void 0, _0xe8a416 = _0x20c59d["has"]("CommentsOnly") && _0x20c59d["get"]("CommentsOnly"), _0x56bf98 = _0x34edef["includes"]("document:write"), _0x478456 = _0x34edef["includes"]("comment:modify_all"), _0x19bd72 = _0x34edef["includes"]("comment:admin"), _0x54da13 = _0x34edef["includes"]("comment:write"), _0x4cb576 = _0x54da13 || _0x19bd72, _0x428fbc = _0x4cb576 || _0x478456, _0x48f1cf = _0x56bf98 || _0x4cb576;
    (_0xe8a416 && (_0xe8a416["isEnabled"] = !_0x56bf98 && _0x428fbc), _0x4b8184 instanceof Editor) && (!(_0x56bf98 || _0x428fbc && _0x57130d) ? _0x4b8184["enableReadOnlyMode"]("no-permissions") : _0x4b8184["disableReadOnlyMode"]("no-permissions"));
    if (_0x57130d) {
      _0x57130d["setPermissions"]({ "admin": _0x19bd72, "modifyAll": _0x478456, "write": _0x54da13, "resolve": _0x48f1cf }, _0x499f79);
      const _0x482676 = _0x4b8184 instanceof Editor && _0x4b8184["commands"]["get"]("addCommentThread");
      _0x482676 && (_0x4cb576 ? _0x482676["clearForceDisabled"]("noPermissions") : _0x482676["forceDisabled"]("noPermissions"));
    }
  }
};
function r(_0x5a9a79, _0x44ebba) {
  const t2 = _0x5a9a79["t"];
  switch (_0x44ebba) {
    case "Anonymous":
      return t2("Anonymous");
    case "Yes":
      return t2("Yes");
    case "No":
      return t2("No");
    case "Are you sure?":
      return t2("Are you sure?");
    default:
      return "";
  }
}
var l = class extends ContextPlugin {
  constructor(_0xe088db) {
    super(_0xe088db);
    __publicField(this, "users");
    __publicField(this, "_licenseKeyCheckInterval");
    __publicField(this, "_lastColor");
    __publicField(this, "_myId");
    __publicField(this, "_locale");
    this["context"]["config"]["define"]("users.anonymousUserId", "anonymous-user"), this["context"]["config"]["define"]("users.colorsCount", 8), this["users"] = new Collection(), this["_locale"] = _0xe088db["locale"], this["_licenseKeyCheckInterval"] = null, this["_lastColor"] = 0, this["_myId"] = null, this["decorate"]("getOperationAuthor");
  }
  static get ["pluginName"]() {
    return "Users";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  static get ["requires"]() {
    return [o];
  }
  ["init"]() {
    const _0x303b32 = this["context"];
    this["licenseKey"] = _0x303b32["config"]["get"]("licenseKey");
    const _0x24023d = ["licenseKeyTrial", "licenseKeyInvalid", "licenseKeyValid", "licenseKeyTrialLimit:operations", "licenseKeyTrialLimit:time", "licenseKeyTrialLimit:revisions"];
    this["_licenseKeyCheckInterval"] = setInterval(() => {
      let _0xce615b;
      for (const _0x51526c in _0x303b32) {
        const _0x3eb196 = _0x303b32[_0x51526c];
        if (_0x24023d["includes"](_0x3eb196)) {
          delete _0x303b32[_0x51526c], _0xce615b = _0x3eb196;
          break;
        }
      }
      if ("licenseKeyInvalid" === _0xce615b) throw clearInterval(this["_licenseKeyCheckInterval"]), new CKEditorError("invalid-license-key", null);
      if ("licenseKeyTrial" === _0xce615b && console["info"]("You are using the trial version of CKEditor 5 collaboration plugin with limited usage. Make sure you will not use it in the production environment."), "licenseKeyTrialLimit:operations" === _0xce615b) throw clearInterval(this["_licenseKeyCheckInterval"]), new CKEditorError("trial-license-key-reached-limit-changes", null);
      if ("licenseKeyTrialLimit:time" === _0xce615b) throw clearInterval(this["_licenseKeyCheckInterval"]), new CKEditorError("trial-license-key-reached-limit-time", null);
      if ("licenseKeyTrialLimit:revisions" === _0xce615b) throw clearInterval(this["_licenseKeyCheckInterval"]), new CKEditorError("trial-license-key-reached-limit-revisions", null);
      "licenseKeyValid" === _0xce615b && clearInterval(this["_licenseKeyCheckInterval"]);
    }, 1e3), this["_addAnonymousUser"]();
  }
  get ["me"]() {
    return null == this["_myId"] ? null : this["getUser"](this["_myId"]);
  }
  ["addUser"]({ id: _0x27db22, name: _0x52f4d9, ..._0x593780 }) {
    if (!_0x27db22 || "string" != typeof _0x27db22) throw new CKEditorError("users-add-invalid-id");
    if (this["users"]["has"](_0x27db22)) throw new CKEditorError("users-add-duplicated-id", null, { "id": _0x27db22 });
    const _0x436500 = { ..._0x593780, "id": _0x27db22, "name": u(this["_locale"], _0x52f4d9), "color": this["_getNextColor"]() };
    _0x436500["name"] = u(this["_locale"], _0x436500["name"]);
    const _0x46534c = new P(_0x436500);
    return this["users"]["add"](_0x46534c), _0x46534c;
  }
  ["getUser"](_0x24d45f) {
    return this["users"]["get"](_0x24d45f);
  }
  ["useAnonymousUser"]() {
    const _0x35b5a3 = this["context"]["config"]["get"]("users.anonymousUserId");
    this["_myId"] || this["defineMe"](_0x35b5a3);
  }
  ["defineMe"](_0x142a45) {
    if (this["_myId"]) throw new CKEditorError("users-me-already-defined", null);
    const _0x4c6b21 = this["getUser"](_0x142a45);
    if (!_0x4c6b21) throw new CKEditorError("users-me-missing-user", null);
    this["_myId"] = _0x142a45, _0x4c6b21["_isMe"] = true;
  }
  ["getOperationAuthor"]() {
    return this["me"];
  }
  ["destroy"]() {
    super["destroy"](), clearInterval(this["_licenseKeyCheckInterval"]);
  }
  ["_getNextColor"]() {
    const _0x1feff8 = this["context"]["config"]["get"]("users.colorsCount");
    return this["_lastColor"] >= _0x1feff8 && (this["_lastColor"] = 0), new a(this["_lastColor"]++);
  }
  ["_addAnonymousUser"]() {
    const _0x2b5554 = this["context"]["config"]["get"]("users.anonymousUserId");
    this["addUser"]({ "id": _0x2b5554, "name": r(this["_locale"], "Anonymous") })["_isAnonymous"] = true;
  }
};
var P = class {
  constructor(_0x4b78f1) {
    __publicField(this, "id");
    __publicField(this, "color");
    __publicField(this, "name");
    __publicField(this, "avatar");
    __publicField(this, "_isMe");
    __publicField(this, "_isAnonymous");
    this["id"] = _0x4b78f1["id"], this["color"] = _0x4b78f1["color"], this["name"] = _0x4b78f1["name"], this["avatar"] = _0x4b78f1["avatar"], this["_isAnonymous"] = false, this["_isMe"] = false;
  }
  get ["isAnonymous"]() {
    return this["_isAnonymous"];
  }
  get ["isMe"]() {
    return this["_isMe"];
  }
  get ["initials"]() {
    const _0x1e495b = this["name"]["split"](" ");
    return 1 === _0x1e495b["length"] ? this["_getInitial"](_0x1e495b[0]) : this["_getInitial"](_0x1e495b[0]) + this["_getInitial"](_0x1e495b[_0x1e495b["length"] - 1]);
  }
  ["_getInitial"](_0x32412e) {
    return _0x32412e["charAt"](0)["toUpperCase"]();
  }
};
function u(_0x5788b8, _0x35adfd = "") {
  return "" == (_0x35adfd = _0x35adfd["trim"]()) ? r(_0x5788b8, "Anonymous") : _0x35adfd;
}
var a = class {
  constructor(_0x214ee3) {
    __publicField(this, "_id");
    this["_id"] = _0x214ee3;
  }
  ["getBackgroundColorClass"]() {
    return "ck-user__bg-color--" + this["_id"];
  }
  ["getSelectionClass"]() {
    return "ck-user__selection--" + this["_id"];
  }
  ["getMarkerClass"]() {
    return "ck-user__marker--" + this["_id"];
  }
};
var H = class extends View {
  constructor(_0x2027f5, _0x169999, _0x491e9d) {
    super(_0x2027f5);
    __publicField(this, "name");
    __publicField(this, "notificationView");
    this["name"] = _0x169999["name"], this["notificationView"] = null;
    const _0x59cdee = ["ck", "ck-user"], _0x79db97 = ["ck", "ck-user__img"];
    if (_0x169999["isAnonymous"] && _0x79db97["push"]("ck-user__anonymous"), !_0x169999["isAnonymous"] && _0x169999["isMe"] && _0x59cdee["push"]("ck-user_me"), _0x169999["avatar"] && _0x79db97["push"]("ck-user__avatar"), _0x491e9d) {
      const _0x6a3caf = new IconView();
      _0x6a3caf["extendTemplate"]({ "attributes": { "class": ["ck-user__icon"] } }), _0x6a3caf["content"] = `<!--

 What you're currently looking at is the source code of a legally protected, proprietary software.
 CKEditor 5 Collaboration is licensed under a commercial license and protected by copyright law. Where not otherwise indicated,
 all CKEditor 5 Collaboration content is authored by CKSource engineers and consists of CKSource-owned intellectual property.

 Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.

!-->

<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm1 15H9v-2h2v2zm0-4H9V5h2v6z"/></svg>
`, this["notificationView"] = { "tag": "div", "attributes": { "class": ["ck", "ck-user__notification"], "data-cke-tooltip-position": "n", "data-cke-tooltip-text": _0x491e9d }, "children": [_0x6a3caf] };
    }
    const _0x41fdbb = [{ "tag": "div", "attributes": { "class": _0x79db97, "style": { "background-image": _0x169999["avatar"] ? "url('" + _0x169999["avatar"] + "')" : "" } } }, { "tag": "div", "attributes": { "class": _0x169999["avatar"] ? "ck ck-user__name ck-user__name--hidden" : "ck ck-user__name", "aria-label": _0x169999["name"] }, "children": [{ "text": _0x169999["initials"] }] }];
    this["notificationView"] && _0x41fdbb["push"](this["notificationView"]), this["setTemplate"]({ "tag": "div", "attributes": { "class": _0x59cdee, "data-user-id": _0x169999["id"] }, "children": _0x41fdbb });
  }
};
var J = class extends View {
  constructor(_0x237c0a, _0x4a2a1e) {
    super(_0x237c0a);
    __publicField(this, "id");
    this["id"] = "ck-aria-description-" + uid(), this["setTemplate"]({ "tag": "span", "attributes": { "class": ["ck", "ck-aria-description"], "id": this["id"] }, "children": [{ "text": _0x4a2a1e }] });
  }
};
var U = class extends ButtonView {
  ["render"]() {
    super["render"](), V(this);
  }
};
var Y = class extends DropdownButtonView {
  ["render"]() {
    super["render"](), V(this);
  }
};
function V(_0x32b87f) {
  _0x32b87f["listenTo"](_0x32b87f["element"], "mousedown", (_0x4a0dd2, _0x1c6e6e) => {
    _0x1c6e6e["stopPropagation"](), _0x1c6e6e["preventDefault"]();
  }), _0x32b87f["listenTo"](_0x32b87f["element"], "mouseup", () => {
    _0x32b87f["element"]["focus"]();
  });
}
function E(_0x313223 = {}) {
  if (void 0 !== _0x313223["dateTimeFormat"] && "function" != typeof _0x313223["dateTimeFormat"]) throw new CKEditorError("invalid-date-time-format");
  return (_0x22c8b7) => {
    const _0x5c0dc4 = "string" == typeof _0x22c8b7 ? (0, import_parseISO.default)(_0x22c8b7) : _0x22c8b7, _0x531df6 = /* @__PURE__ */ new Date(), _0x42ea74 = (0, import_differenceInCalendarDays.default)(_0x531df6, _0x5c0dc4);
    return _0x313223["dateTimeFormat"] ? _0x313223["dateTimeFormat"](_0x5c0dc4) : (0, import_format.default)(_0x5c0dc4, 0 === _0x42ea74 ? "'Today' hh:mma" : 1 === _0x42ea74 ? "'Yesterday' hh:mma" : _0x42ea74 < 7 ? "'Last' EEEE hh:mma" : "MM-dd-yyyy hh:mma");
  };
}
function g(_0x5b2f3d, _0xc49d64) {
  const _0x3a85c0 = _0x5b2f3d["mapper"]["markerNameToElements"](_0xc49d64["name"]);
  if (!_0x3a85c0) return null;
  const _0x22eb36 = first(_0x3a85c0["values"]());
  return _0x5b2f3d["view"]["domConverter"]["mapViewToDom"](_0x22eb36) || null;
}
function R(_0x4835bc, _0x16e12a) {
  if (0 === _0x16e12a["length"]) return null;
  const _0x5601f8 = [], _0x34e49e = _0x4835bc["view"]["domConverter"];
  for (const _0x554d6b of _0x16e12a) {
    const _0xdccede = _0x4835bc["mapper"]["markerNameToElements"](_0x554d6b["name"]);
    if (!_0xdccede) continue;
    const _0xbf3dad = Array["from"](_0xdccede)["map"]((_0x8597e3) => _0x34e49e["mapViewToDom"](_0x8597e3))["filter"]((_0x39bc9f) => !!_0x39bc9f);
    _0x5601f8["push"](..._0xbf3dad);
  }
  if (0 === _0x5601f8["length"]) return null;
  const _0x41e38d = [];
  for (const _0x8f348e of _0x5601f8) {
    const _0x555453 = _0x8f348e["getClientRects"]()["item"](0);
    _0x555453 && _0x41e38d["push"]({ "x": _0x555453["x"], "y": _0x555453["y"], "domElement": _0x8f348e });
  }
  return 0 === _0x41e38d["length"] ? null : (_0x41e38d["sort"]((_0x26cd76, _0x134ff1) => _0x26cd76["y"] - _0x134ff1["y"] || _0x26cd76["x"] - _0x134ff1["x"]), _0x41e38d["map"]((_0x39a0ac) => _0x39a0ac["domElement"]));
}
function Z(_0x4e8f34, { limit: _0x325ece, suffix: _0x169c56 = "..." }) {
  const _0x316a36 = [];
  let _0x220ae1 = 0;
  const _0x152c74 = _0x4e8f34["replace"](/</g, "\n<")["replace"](/>/g, ">\n")["replace"](/^\n/g, "")["replace"](/\n$/g, "")["split"]("\n");
  for (let _0x49a95b = 0; _0x49a95b < _0x152c74["length"]; _0x49a95b++) {
    let _0x3f00f9 = _0x152c74[_0x49a95b];
    const _0x4cf4ad = $(_0x3f00f9);
    if (_0x3f00f9["startsWith"]("<")) {
      if (_0x220ae1 >= _0x325ece) {
        const _0x3ea18c = _0x3f00f9["match"](/[a-zA-Z]+/);
        if (!_0x3ea18c) {
          _0x152c74[_0x49a95b] = "";
          continue;
        }
        const _0x44f396 = _0x3ea18c[0];
        _0x3f00f9["startsWith"]("</") ? (_0x316a36["length"] && (_0x3f00f9 = ""), _0x316a36["pop"]()) : (_0x316a36["push"](_0x44f396), _0x3f00f9 = "");
      }
    } else {
      if (_0x220ae1 >= _0x325ece) _0x3f00f9 = "";
      else {
        if (_0x220ae1 + _0x4cf4ad["length"] >= _0x325ece) {
          let _0x3dc99b = _0x325ece - _0x220ae1;
          if (" " === _0x4cf4ad[_0x3dc99b - 1]) _0x3dc99b--;
          else {
            const _0x537068 = _0x4cf4ad["slice"](_0x3dc99b)["indexOf"](" ");
            -1 !== _0x537068 ? _0x3dc99b += _0x537068 : _0x3dc99b = _0x3f00f9["length"];
          }
          _0x3f00f9 = _0x4cf4ad["slice"](0, _0x3dc99b)["join"]("") + _0x169c56, _0x220ae1 = _0x325ece;
        } else _0x220ae1 += _0x4cf4ad["length"];
      }
    }
    _0x152c74[_0x49a95b] = _0x3f00f9;
  }
  return _0x152c74["join"]("\n")["replace"](/\n/g, "");
}
function $(_0x160a76) {
  const _0xd98b1c = [];
  for (let _0x1184b1 = 0; _0x1184b1 < _0x160a76["length"]; _0x1184b1++) {
    const _0x36266b = _0x160a76["substring"](_0x1184b1)["match"](/^&[a-z0-9#]+;/);
    if (_0x36266b) {
      const _0x373a57 = _0x36266b[0];
      _0xd98b1c["push"](_0x373a57), _0x1184b1 += _0x373a57["length"] - 1;
    } else _0xd98b1c["push"](_0x160a76[_0x1184b1]);
  }
  return _0xd98b1c;
}
var h = class extends View {
  constructor(_0x4a46b2) {
    super(_0x4a46b2);
    __publicField(this, "submitView");
    __publicField(this, "cancelView");
    __publicField(this, "focusTracker");
    __publicField(this, "keystrokes");
    __publicField(this, "focusCycler");
    __publicField(this, "focusables");
    const _0x14d6c3 = this["bindTemplate"];
    this["set"]("message", r(_0x4a46b2, "Are you sure?")), this["submitView"] = this["_createButtonView"](_0x4a46b2, r(_0x4a46b2, "Yes"), icons["check"], "submit"), this["cancelView"] = this["_createButtonView"](_0x4a46b2, r(_0x4a46b2, "No"), icons["cancel"], "cancel"), this["focusables"] = this["createCollection"]([this["submitView"], this["cancelView"]]), this["focusTracker"] = new FocusTracker(), this["keystrokes"] = new KeystrokeHandler(), this["focusCycler"] = new FocusCycler({ "focusables": this["focusables"], "focusTracker": this["focusTracker"], "keystrokeHandler": this["keystrokes"], "actions": { "focusPrevious": "shift+tab", "focusNext": "tab" } }), this["setTemplate"]({ "tag": "div", "attributes": { "class": ["ck", "ck-thread__remove-confirm"], "tabindex": -1, "role": "alertdialog" }, "children": [{ "tag": "div", "attributes": { "class": "ck-thread__remove-confirm-inner", "role": "presentation" }, "children": [{ "tag": "p", "children": [{ "text": _0x14d6c3["to"]("message") }] }, { "tag": "div", "attributes": { "class": "ck-thread__remove-confirm-actions" }, "children": [this["submitView"], this["cancelView"]] }] }] });
  }
  ["render"]() {
    super["render"](), this["_setupKeyboardNavigation"]();
  }
  ["focus"]() {
    this["cancelView"]["element"]["focus"]({ "preventScroll": true });
  }
  ["_createButtonView"](_0x3c1902, _0x403230, _0x32b23b, _0x1be0e1) {
    const _0x2e5352 = new ButtonView(_0x3c1902);
    return _0x2e5352["label"] = _0x403230, _0x2e5352["icon"] = _0x32b23b, _0x2e5352["extendTemplate"]({ "attributes": { "class": "ck-thread__remove-confirm-" + _0x1be0e1 } }), _0x2e5352["on"]("execute", () => this["fire"](_0x1be0e1)), _0x2e5352;
  }
  ["_setupKeyboardNavigation"]() {
    this["focusables"]["forEach"]((_0x3baee0) => {
      this["keystrokes"]["listenTo"](_0x3baee0["element"]), this["focusTracker"]["add"](_0x3baee0["element"]);
    }), this["keystrokes"]["set"]("esc", (_0x29bccb, _0x31e5b9) => {
      this["fire"]("cancel"), _0x31e5b9();
    });
  }
};
function m(_0x5c9e5f) {
  return class extends _0x5c9e5f {
    ["showConfirm"](_0x3fbb00, _0x2286bc) {
      return this["confirmView"] = new h(this["locale"]), this["confirmView"]["render"](), this["confirmView"]["message"] = _0x3fbb00, this["confirmView"]["once"]("cancel", () => {
        this["_removeConfirm"]();
      }), this["confirmView"]["once"]("submit", () => {
        this["_removeConfirm"]();
      }), _0x2286bc["appendChild"](this["confirmView"]["element"]), this["registerChild"](this["confirmView"]), this["confirmView"]["focus"](), this["set"]("isConfirm", true), new Promise((_0x5874f8) => this["confirmView"]["on"]("submit", _0x5874f8));
    }
    ["cancelConfirm"]() {
      this["isConfirm"] && this["confirmView"]["fire"]("cancel");
    }
    ["_removeConfirm"]() {
      this["element"] && this["confirmView"] && this["confirmView"]["element"] && (this["element"]["focus"](), this["confirmView"]["element"]["remove"](), this["deregisterChild"](this["confirmView"]), this["isConfirm"] = false, this["fire"]("removeConfirm"), this["confirmView"]["destroy"](), this["confirmView"] = void 0);
    }
  };
}
function M(_0x2ac003) {
  let _0xc90c4b = 0, _0x5e2922 = 0;
  for (const _0x2e6a39 of q(_0x2ac003)) _0xc90c4b = (_0xc90c4b << 5) - _0xc90c4b + _0x2e6a39, _0xc90c4b |= 0, [_0xc90c4b, _0x5e2922] = [_0x5e2922, _0xc90c4b];
  return z(_0xc90c4b) + z(_0x5e2922);
}
function* O(_0x567f55) {
  null == _0x567f55 || null == _0x567f55 ? yield 314159265 : 0 === _0x567f55 || false === _0x567f55 ? yield 0 : 1 === _0x567f55 || 1 == _0x567f55 ? yield 1 : Array["isArray"](_0x567f55) ? yield* function* (_0x2d01e7) {
    for (const _0x226563 of _0x2d01e7) yield* O(_0x226563);
  }(_0x567f55) : "object" == typeof _0x567f55 ? yield* q(_0x567f55) : "string" == typeof _0x567f55 ? yield* v(_0x567f55) : "number" == typeof _0x567f55 && (yield _0x567f55);
}
function* q(_0x5b9cd5) {
  if (yield w("{"), _0x5b9cd5) {
    const _0x104ce0 = Object["keys"](_0x5b9cd5)["sort"]();
    for (const _0x395c66 of _0x104ce0) {
      yield* v(_0x395c66), yield w(":");
      const _0x3f06a8 = _0x5b9cd5[_0x395c66];
      yield* O(_0x3f06a8);
    }
  }
  yield w("}");
}
function* v(_0x58e95e) {
  yield w('"');
  for (const _0x1c2879 of _0x58e95e) yield w(_0x1c2879);
  yield w('"');
}
function w(_0x115f74) {
  return _0x115f74["charCodeAt"](0);
}
function z(_0x5f1290) {
  return (_0x5f1290 *= Math["sign"](_0x5f1290))["toString"](36);
}
var W = ["initialData", "context", "toolbar", "rootsAttributes"];
var D = ["WebSocketGateway", "RevisionTracker", "Autosave", "WordCount", "DocumentOutline", "WProofreader"];
function S(_0x5d2c5f, _0x47a3c1, _0x181d2d, _0x435cac = []) {
  const _0x2e4ce1 = "string" == typeof _0x5d2c5f ? _0x181d2d["get"](_0x5d2c5f)["constructor"] : _0x5d2c5f["prototype"]["constructor"];
  if (_0x47a3c1["has"](_0x2e4ce1)) return _0x47a3c1["get"](_0x2e4ce1);
  _0x47a3c1["set"](_0x2e4ce1, true);
  const _0x41ee88 = [...D, ..._0x435cac]["map"]((_0x335212) => {
    if (_0x181d2d["has"](_0x335212)) return _0x181d2d["get"](_0x335212)["constructor"];
  })["filter"]((_0xb58de) => _0xb58de);
  if (_0x2e4ce1 && _0x41ee88["includes"](_0x2e4ce1)) return _0x47a3c1["set"](_0x2e4ce1, false), false;
  if (!_0x2e4ce1["requires"]) return _0x47a3c1["set"](_0x2e4ce1, true), true;
  const _0xecd5d8 = _0x2e4ce1["requires"]["every"]((_0x5c7748) => S(_0x5c7748, _0x47a3c1, _0x181d2d, _0x435cac));
  return _0x47a3c1["set"](_0x2e4ce1, _0xecd5d8), _0xecd5d8;
}
function C(_0xba2d4b, _0x8af435) {
  const _0x513dbe = {};
  for (const _0x1f93d5 of _0xba2d4b["config"]["names"]()) W["includes"](_0x1f93d5) || (_0x513dbe[_0x1f93d5] = _0xba2d4b["config"]["get"](_0x1f93d5));
  const _0x2a37da = _0x513dbe["plugins"] || [], _0x3613bc = _0xba2d4b["constructor"]["builtinPlugins"] || [], _0x127010 = _0x2a37da["length"] ? _0x2a37da : _0x3613bc, _0xd19907 = _0x513dbe["extraPlugins"] || [];
  delete _0x513dbe["extraPlugins"];
  const _0x20990f = _0x513dbe["removePlugins"] || [];
  delete _0x513dbe["removePlugins"];
  const _0x259a99 = _0xba2d4b["_context"]["config"]["get"]("plugins") || [], _0x74f6d7 = _0x127010["concat"](_0xd19907)["concat"](_0x259a99)["map"]((_0x4acd3f) => "string" == typeof _0x4acd3f ? _0x3613bc["find"]((_0x157e5b) => _0x157e5b["pluginName"] == _0x4acd3f) : _0x4acd3f)["filter"]((_0x1fcb37) => !_0x20990f["includes"](_0x1fcb37) && !_0x20990f["includes"](_0x1fcb37["pluginName"])), _0x5907c3 = Array["from"](new Set(_0x74f6d7)), _0xef4f93 = /* @__PURE__ */ new Map();
  return _0x513dbe["plugins"] = _0x5907c3["filter"]((_0x1a5880) => S(_0x1a5880, _0xef4f93, _0xba2d4b["plugins"], _0x8af435)), _0x513dbe;
}
function B(_0x5bbcc0, _0x13c8ed) {
  const _0x459d74 = [];
  _0x5bbcc0["document"]["selection"]["on"]("change:range", () => {
    const _0x1f374f = function(_0x212b96, _0x5ab51e) {
      const _0x35fd71 = [];
      for (const _0x37798e of _0x212b96["markers"]) {
        const _0x5cdf41 = _0x37798e["getRange"]();
        (_0x5cdf41["containsPosition"](_0x5ab51e) || _0x5cdf41["start"]["isEqual"](_0x5ab51e) || _0x5cdf41["end"]["isEqual"](_0x5ab51e)) && _0x35fd71["push"](_0x37798e);
      }
      return _0x35fd71;
    }(_0x5bbcc0, _0x5bbcc0["document"]["selection"]["focus"]), _0x36bd90 = [], _0x353b44 = [], _0x90dab6 = [];
    for (const _0x3f91b7 of _0x459d74) _0x1f374f["includes"](_0x3f91b7) || _0x36bd90["push"](_0x3f91b7);
    for (const _0x423fce of _0x1f374f) _0x459d74["includes"](_0x423fce) || _0x353b44["push"](_0x423fce), _0x90dab6["push"](_0x423fce);
    (_0x36bd90["length"] || _0x353b44["length"]) && _0x13c8ed({ "left": _0x36bd90, "entered": _0x353b44 }), _0x459d74["length"] = 0, _0x459d74["push"](..._0x90dab6);
  });
}
var Q = "Ctrl+Shift+E";
function T(_0x596aa9, _0x4b092a) {
  const _0x5b9734 = _0x596aa9["element"];
  _0x596aa9["keystrokes"]["listenTo"](_0x5b9734);
  for (const _0x1ef3d of _0x4b092a) K(_0x596aa9, _0x1ef3d);
  _0x4b092a["on"]("change", (_0x20e7c6, _0x4369ae) => {
    for (const _0x5853ab of _0x4369ae["removed"]) _(_0x596aa9, _0x5853ab);
    for (const _0x5571e0 of Array["from"](_0x4369ae["added"])["reverse"]()) K(_0x596aa9, _0x5571e0);
  }), _0x596aa9["keystrokes"]["set"]("enter", (_0xb64411, _0x46e2f7) => {
    _0x5b9734 === _0xb64411["target"] && (_0x596aa9["focusCycler"]["focusFirst"](), _0x46e2f7());
  }, { "filter": (_0x552715) => _0x552715["target"] === _0x5b9734 }), _0x596aa9["keystrokes"]["set"]("esc", (_0x16b688, _0x24b043) => {
    _0x5b9734 !== _0x16b688["target"] ? _0x596aa9["focus"]() : _0x596aa9["fire"]("escape"), _0x24b043();
  }), _0x596aa9["keystrokes"]["set"]("arrowdown", (_0x2ac2d9, _0x24097a) => {
    _0x5b9734 === _0x2ac2d9["target"] && (_0x596aa9["fire"]("arrowdown"), _0x24097a());
  }), _0x596aa9["keystrokes"]["set"]("arrowup", (_0xf2defd, _0x899e84) => {
    _0x5b9734 === _0xf2defd["target"] && (_0x596aa9["fire"]("arrowup"), _0x899e84());
  });
}
function K(_0x1c7147, _0x26ee84) {
  _0x26ee84["isRendered"] && (_0x1c7147["focusTracker"]["add"](_0x26ee84["element"]), _0x1c7147["keystrokes"]["listenTo"](_0x26ee84["element"]), isViewWithFocusCycler(_0x26ee84) && function(_0x4638fb, _0x6b3438) {
    const _0x2ef615 = _0x4638fb["actions"], _0x544342 = _0x6b3438["actions"];
    for (const _0x534a0f of Object["keys"](_0x2ef615)) if (_0x534a0f in _0x544342 && _0x2ef615[_0x534a0f] !== _0x544342[_0x534a0f]) return false;
    return true;
  }(_0x1c7147["focusCycler"], _0x26ee84["focusCycler"]) && _0x1c7147["focusCycler"]["chain"](_0x26ee84["focusCycler"]));
}
function _(_0x510037, _0x597bfe) {
  _0x510037["focusTracker"]["remove"](_0x597bfe["element"]), _0x510037["keystrokes"]["stopListening"](_0x597bfe["element"]), isViewWithFocusCycler(_0x597bfe) && _0x510037["focusCycler"]["unchain"](_0x597bfe["focusCycler"]);
}

// node_modules/ckeditor5-collaboration/dist/index.js
var a2 = { "paintRoller": '<svg viewBox="0 0 20 20" width="20" height="20" xmlns="http://www.w3.org/2000/svg"><path d="M3 3a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V3Z"/><path d="M16 3.25a1.5 1.5 0 0 1 1.5 1.5v1.7a2.25 2.25 0 0 1-1.932 2.226l-4.424.632a.75.75 0 0 0-.644.743V11a1 1 0 0 1 1 1v5a1 1 0 0 1-1 1H9a1 1 0 0 1-1-1v-5a1 1 0 0 1 1-1v-.95a2.25 2.25 0 0 1 1.932-2.226l4.424-.632A.75.75 0 0 0 16 6.449V3.25Z"/></svg>\n', "robotPencil": '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M9.61 2.66a1.406 1.406 0 1 0-1.407 0v.891H3.28a2.11 2.11 0 0 0-2.11 2.11v10.312a2.11 2.11 0 0 0 2.11 2.109h5.684l-.054-1.157.18-.25H3.28a.703.703 0 0 1-.703-.702V5.66c0-.389.315-.704.703-.704h11.25c.388 0 .703.315.703.704v2.484l.358-.497a2.492 2.492 0 0 1 1.048-.84V5.66a2.11 2.11 0 0 0-2.11-2.11H9.61v-.89Z"/><path d="M5.625 10.817c.518 0 .937-.63.937-1.407 0-.776-.42-1.406-.937-1.406-.518 0-.938.63-.938 1.406 0 .777.42 1.407.938 1.407Z"/><path d="M13.125 9.41c0 .777-.42 1.407-.938 1.407s-.937-.63-.937-1.407c0-.776.42-1.406.937-1.406.518 0 .938.63.938 1.406Z"/><path d="M.937 8.004A.937.937 0 0 0 0 8.942v1.875c0 .517.42.937.937.937v-3.75Z"/><path d="M6.128 12.51a.782.782 0 0 1 1.085.216c.272.408.907.707 1.693.707s1.421-.3 1.693-.707a.782.782 0 0 1 1.302.868c-.666 1-1.906 1.403-2.995 1.403-1.089 0-2.329-.404-2.995-1.403a.782.782 0 0 1 .217-1.085Z"/><path d="m16.987 8.91-.622.864 2.879 2.074.622-.864a.71.71 0 0 0-.161-.99l-1.728-1.245a.71.71 0 0 0-.99.161Z"/><path d="M11.635 19.951a.355.355 0 0 1-.449-.31l-.214-2.38 4.978-6.911 2.88 2.074-4.978 6.91-2.217.617Z"/></svg>', "tableOfContents": '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M3 19a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v8.022a6.47 6.47 0 0 0-1.5-.709V2a.5.5 0 0 0-.5-.5H3a.5.5 0 0 0-.5.5v15a.5.5 0 0 0 .5.5h6.313c.173.534.412 1.037.709 1.5H3Z"/><path d="M9.174 14a6.489 6.489 0 0 0-.155 1H6v-1h3.174Z"/><path d="M10.022 12c-.202.316-.378.65-.524 1H4v-1h6.022Z"/><path d="M12.034 10c-.448.283-.86.62-1.224 1H6v-1h6.034Z"/><path d="M12 4v1H4V4h8Z"/><path d="M14 7V6H6v1h8Z"/><path d="M15 9V8H7v1h8Z"/><path clip-rule="evenodd" d="M20 15.5a4.5 4.5 0 1 1-9 0 4.5 4.5 0 0 1 9 0ZM15.5 13a.5.5 0 0 0-.5.5V15h-1.5a.5.5 0 0 0 0 1H15v1.5a.5.5 0 0 0 1 0V16h1.5a.5.5 0 0 0 0-1H16v-1.5a.5.5 0 0 0-.5-.5Z"/></svg>\n', "template": '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path clip-rule="evenodd" d="M8 0H3a2 2 0 0 0-2 2v15a2 2 0 0 0 2 2h5a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2ZM2.5 2a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5H3a.5.5 0 0 1-.5-.5V2Z"/><path clip-rule="evenodd" d="M13 0h5a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-5a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2Zm0 1.5a.5.5 0 0 0-.5.5v5a.5.5 0 0 0 .5.5h5a.5.5 0 0 0 .5-.5V2a.5.5 0 0 0-.5-.5h-5Z"/><path clip-rule="evenodd" d="M13 10h5a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-5a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2Zm0 1.5a.5.5 0 0 0-.5.5v5a.5.5 0 0 0 .5.5h5a.5.5 0 0 0 .5-.5v-5a.5.5 0 0 0-.5-.5h-5Z"/></svg>', "caseChange": '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M5.789 3 0 17h1.664l1.664-4.027h6.797l.227.548c.046-.172.112-.352.209-.545.217-.436.556-.609.898-.798L7.664 3H5.79Zm.938 1.758 2.777 6.715H3.949l2.778-6.715Z"/><path d="M15.956 7.5c-1.584-.02-3.226.824-3.843 2.882l1.495.106c.904-2.082 4.594-2.13 4.375.534-3.245 1.024-4.838.117-6.082 2.62-.208.418-.17 1.57.54 2.397.71.826 2.014 1.149 3.409.85 1.395-.299 2.24-1.386 2.24-1.386L18.205 17h1.493l-.059-1.72-.056-5.274C19.51 8.612 17.75 7.524 15.956 7.5Zm2.027 4.696s.641 2.453-1.528 3.27c-3.376 1.269-4.188-2.141-1.775-2.638 1.704-.352 1.873-.25 3.303-.632Z"/></svg>' };

// node_modules/@smithy/protocol-http/dist-es/extensions/httpExtensionConfiguration.js
var getHttpHandlerExtensionConfiguration = (runtimeConfig) => {
  let httpHandler = runtimeConfig.httpHandler;
  return {
    setHttpHandler(handler) {
      httpHandler = handler;
    },
    httpHandler() {
      return httpHandler;
    },
    updateHttpClientConfig(key, value2) {
      httpHandler.updateHttpClientConfig(key, value2);
    },
    httpHandlerConfigs() {
      return httpHandler.httpHandlerConfigs();
    }
  };
};
var resolveHttpHandlerRuntimeConfig = (httpHandlerExtensionConfiguration) => {
  return {
    httpHandler: httpHandlerExtensionConfiguration.httpHandler()
  };
};

// node_modules/@smithy/types/dist-es/auth/auth.js
var HttpAuthLocation;
(function(HttpAuthLocation2) {
  HttpAuthLocation2["HEADER"] = "header";
  HttpAuthLocation2["QUERY"] = "query";
})(HttpAuthLocation || (HttpAuthLocation = {}));

// node_modules/@smithy/types/dist-es/auth/HttpApiKeyAuth.js
var HttpApiKeyAuthLocation;
(function(HttpApiKeyAuthLocation2) {
  HttpApiKeyAuthLocation2["HEADER"] = "header";
  HttpApiKeyAuthLocation2["QUERY"] = "query";
})(HttpApiKeyAuthLocation || (HttpApiKeyAuthLocation = {}));

// node_modules/@smithy/types/dist-es/endpoint.js
var EndpointURLScheme;
(function(EndpointURLScheme2) {
  EndpointURLScheme2["HTTP"] = "http";
  EndpointURLScheme2["HTTPS"] = "https";
})(EndpointURLScheme || (EndpointURLScheme = {}));

// node_modules/@smithy/types/dist-es/extensions/checksum.js
var AlgorithmId;
(function(AlgorithmId2) {
  AlgorithmId2["MD5"] = "md5";
  AlgorithmId2["CRC32"] = "crc32";
  AlgorithmId2["CRC32C"] = "crc32c";
  AlgorithmId2["SHA1"] = "sha1";
  AlgorithmId2["SHA256"] = "sha256";
})(AlgorithmId || (AlgorithmId = {}));

// node_modules/@smithy/types/dist-es/http.js
var FieldPosition;
(function(FieldPosition2) {
  FieldPosition2[FieldPosition2["HEADER"] = 0] = "HEADER";
  FieldPosition2[FieldPosition2["TRAILER"] = 1] = "TRAILER";
})(FieldPosition || (FieldPosition = {}));

// node_modules/@smithy/types/dist-es/middleware.js
var SMITHY_CONTEXT_KEY = "__smithy_context";

// node_modules/@smithy/types/dist-es/profile.js
var IniSectionType;
(function(IniSectionType2) {
  IniSectionType2["PROFILE"] = "profile";
  IniSectionType2["SSO_SESSION"] = "sso-session";
  IniSectionType2["SERVICES"] = "services";
})(IniSectionType || (IniSectionType = {}));

// node_modules/@smithy/types/dist-es/transfer.js
var RequestHandlerProtocol;
(function(RequestHandlerProtocol2) {
  RequestHandlerProtocol2["HTTP_0_9"] = "http/0.9";
  RequestHandlerProtocol2["HTTP_1_0"] = "http/1.0";
  RequestHandlerProtocol2["TDS_8_0"] = "tds/8.0";
})(RequestHandlerProtocol || (RequestHandlerProtocol = {}));

// node_modules/@smithy/protocol-http/dist-es/httpRequest.js
var HttpRequest = class _HttpRequest {
  constructor(options) {
    this.method = options.method || "GET";
    this.hostname = options.hostname || "localhost";
    this.port = options.port;
    this.query = options.query || {};
    this.headers = options.headers || {};
    this.body = options.body;
    this.protocol = options.protocol ? options.protocol.slice(-1) !== ":" ? `${options.protocol}:` : options.protocol : "https:";
    this.path = options.path ? options.path.charAt(0) !== "/" ? `/${options.path}` : options.path : "/";
    this.username = options.username;
    this.password = options.password;
    this.fragment = options.fragment;
  }
  static clone(request) {
    const cloned = new _HttpRequest({
      ...request,
      headers: { ...request.headers }
    });
    if (cloned.query) {
      cloned.query = cloneQuery(cloned.query);
    }
    return cloned;
  }
  static isInstance(request) {
    if (!request) {
      return false;
    }
    const req = request;
    return "method" in req && "protocol" in req && "hostname" in req && "path" in req && typeof req["query"] === "object" && typeof req["headers"] === "object";
  }
  clone() {
    return _HttpRequest.clone(this);
  }
};
function cloneQuery(query) {
  return Object.keys(query).reduce((carry, paramName) => {
    const param = query[paramName];
    return {
      ...carry,
      [paramName]: Array.isArray(param) ? [...param] : param
    };
  }, {});
}

// node_modules/@smithy/protocol-http/dist-es/httpResponse.js
var HttpResponse = class {
  constructor(options) {
    this.statusCode = options.statusCode;
    this.reason = options.reason;
    this.headers = options.headers || {};
    this.body = options.body;
  }
  static isInstance(response) {
    if (!response)
      return false;
    const resp = response;
    return typeof resp.statusCode === "number" && typeof resp.headers === "object";
  }
};

// node_modules/@aws-sdk/middleware-host-header/dist-es/index.js
function resolveHostHeaderConfig(input) {
  return input;
}
var hostHeaderMiddleware = (options) => (next) => async (args) => {
  if (!HttpRequest.isInstance(args.request))
    return next(args);
  const { request } = args;
  const { handlerProtocol = "" } = options.requestHandler.metadata || {};
  if (handlerProtocol.indexOf("h2") >= 0 && !request.headers[":authority"]) {
    delete request.headers["host"];
    request.headers[":authority"] = request.hostname + (request.port ? ":" + request.port : "");
  } else if (!request.headers["host"]) {
    let host = request.hostname;
    if (request.port != null)
      host += `:${request.port}`;
    request.headers["host"] = host;
  }
  return next(args);
};
var hostHeaderMiddlewareOptions = {
  name: "hostHeaderMiddleware",
  step: "build",
  priority: "low",
  tags: ["HOST"],
  override: true
};
var getHostHeaderPlugin = (options) => ({
  applyToStack: (clientStack) => {
    clientStack.add(hostHeaderMiddleware(options), hostHeaderMiddlewareOptions);
  }
});

// node_modules/@aws-sdk/middleware-logger/dist-es/loggerMiddleware.js
var loggerMiddleware = () => (next, context) => async (args) => {
  var _a5, _b;
  try {
    const response = await next(args);
    const { clientName, commandName, logger: logger2, dynamoDbDocumentClientOptions = {} } = context;
    const { overrideInputFilterSensitiveLog, overrideOutputFilterSensitiveLog } = dynamoDbDocumentClientOptions;
    const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;
    const outputFilterSensitiveLog = overrideOutputFilterSensitiveLog ?? context.outputFilterSensitiveLog;
    const { $metadata, ...outputWithoutMetadata } = response.output;
    (_a5 = logger2 == null ? void 0 : logger2.info) == null ? void 0 : _a5.call(logger2, {
      clientName,
      commandName,
      input: inputFilterSensitiveLog(args.input),
      output: outputFilterSensitiveLog(outputWithoutMetadata),
      metadata: $metadata
    });
    return response;
  } catch (error) {
    const { clientName, commandName, logger: logger2, dynamoDbDocumentClientOptions = {} } = context;
    const { overrideInputFilterSensitiveLog } = dynamoDbDocumentClientOptions;
    const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;
    (_b = logger2 == null ? void 0 : logger2.error) == null ? void 0 : _b.call(logger2, {
      clientName,
      commandName,
      input: inputFilterSensitiveLog(args.input),
      error,
      metadata: error.$metadata
    });
    throw error;
  }
};
var loggerMiddlewareOptions = {
  name: "loggerMiddleware",
  tags: ["LOGGER"],
  step: "initialize",
  override: true
};
var getLoggerPlugin = (options) => ({
  applyToStack: (clientStack) => {
    clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);
  }
});

// node_modules/@aws-sdk/middleware-recursion-detection/dist-es/index.js
var TRACE_ID_HEADER_NAME = "X-Amzn-Trace-Id";
var ENV_LAMBDA_FUNCTION_NAME = "AWS_LAMBDA_FUNCTION_NAME";
var ENV_TRACE_ID = "_X_AMZN_TRACE_ID";
var recursionDetectionMiddleware = (options) => (next) => async (args) => {
  const { request } = args;
  if (!HttpRequest.isInstance(request) || options.runtime !== "node" || request.headers.hasOwnProperty(TRACE_ID_HEADER_NAME)) {
    return next(args);
  }
  const functionName = process.env[ENV_LAMBDA_FUNCTION_NAME];
  const traceId = process.env[ENV_TRACE_ID];
  const nonEmptyString = (str) => typeof str === "string" && str.length > 0;
  if (nonEmptyString(functionName) && nonEmptyString(traceId)) {
    request.headers[TRACE_ID_HEADER_NAME] = traceId;
  }
  return next({
    ...args,
    request
  });
};
var addRecursionDetectionMiddlewareOptions = {
  step: "build",
  tags: ["RECURSION_DETECTION"],
  name: "recursionDetectionMiddleware",
  override: true,
  priority: "low"
};
var getRecursionDetectionPlugin = (options) => ({
  applyToStack: (clientStack) => {
    clientStack.add(recursionDetectionMiddleware(options), addRecursionDetectionMiddlewareOptions);
  }
});

// node_modules/@aws-sdk/middleware-user-agent/dist-es/configurations.js
function resolveUserAgentConfig(input) {
  return {
    ...input,
    customUserAgent: typeof input.customUserAgent === "string" ? [[input.customUserAgent]] : input.customUserAgent
  };
}

// node_modules/@smithy/util-endpoints/dist-es/lib/isIpAddress.js
var IP_V4_REGEX = new RegExp(`^(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}$`);
var isIpAddress = (value2) => IP_V4_REGEX.test(value2) || value2.startsWith("[") && value2.endsWith("]");

// node_modules/@smithy/util-endpoints/dist-es/lib/isValidHostLabel.js
var VALID_HOST_LABEL_REGEX = new RegExp(`^(?!.*-$)(?!-)[a-zA-Z0-9-]{1,63}$`);
var isValidHostLabel = (value2, allowSubDomains = false) => {
  if (!allowSubDomains) {
    return VALID_HOST_LABEL_REGEX.test(value2);
  }
  const labels = value2.split(".");
  for (const label of labels) {
    if (!isValidHostLabel(label)) {
      return false;
    }
  }
  return true;
};

// node_modules/@smithy/util-endpoints/dist-es/utils/customEndpointFunctions.js
var customEndpointFunctions = {};

// node_modules/@smithy/util-endpoints/dist-es/debug/debugId.js
var debugId = "endpoints";

// node_modules/@smithy/util-endpoints/dist-es/debug/toDebugString.js
function toDebugString(input) {
  if (typeof input !== "object" || input == null) {
    return input;
  }
  if ("ref" in input) {
    return `$${toDebugString(input.ref)}`;
  }
  if ("fn" in input) {
    return `${input.fn}(${(input.argv || []).map(toDebugString).join(", ")})`;
  }
  return JSON.stringify(input, null, 2);
}

// node_modules/@smithy/util-endpoints/dist-es/types/EndpointError.js
var EndpointError = class extends Error {
  constructor(message) {
    super(message);
    this.name = "EndpointError";
  }
};

// node_modules/@smithy/util-endpoints/dist-es/lib/booleanEquals.js
var booleanEquals = (value1, value2) => value1 === value2;

// node_modules/@smithy/util-endpoints/dist-es/lib/getAttrPathList.js
var getAttrPathList = (path) => {
  const parts2 = path.split(".");
  const pathList = [];
  for (const part of parts2) {
    const squareBracketIndex = part.indexOf("[");
    if (squareBracketIndex !== -1) {
      if (part.indexOf("]") !== part.length - 1) {
        throw new EndpointError(`Path: '${path}' does not end with ']'`);
      }
      const arrayIndex = part.slice(squareBracketIndex + 1, -1);
      if (Number.isNaN(parseInt(arrayIndex))) {
        throw new EndpointError(`Invalid array index: '${arrayIndex}' in path: '${path}'`);
      }
      if (squareBracketIndex !== 0) {
        pathList.push(part.slice(0, squareBracketIndex));
      }
      pathList.push(arrayIndex);
    } else {
      pathList.push(part);
    }
  }
  return pathList;
};

// node_modules/@smithy/util-endpoints/dist-es/lib/getAttr.js
var getAttr = (value2, path) => getAttrPathList(path).reduce((acc, index) => {
  if (typeof acc !== "object") {
    throw new EndpointError(`Index '${index}' in '${path}' not found in '${JSON.stringify(value2)}'`);
  } else if (Array.isArray(acc)) {
    return acc[parseInt(index)];
  }
  return acc[index];
}, value2);

// node_modules/@smithy/util-endpoints/dist-es/lib/isSet.js
var isSet = (value2) => value2 != null;

// node_modules/@smithy/util-endpoints/dist-es/lib/not.js
var not = (value2) => !value2;

// node_modules/@smithy/util-endpoints/dist-es/lib/parseURL.js
var DEFAULT_PORTS = {
  [EndpointURLScheme.HTTP]: 80,
  [EndpointURLScheme.HTTPS]: 443
};
var parseURL = (value2) => {
  const whatwgURL = (() => {
    try {
      if (value2 instanceof URL) {
        return value2;
      }
      if (typeof value2 === "object" && "hostname" in value2) {
        const { hostname: hostname2, port, protocol: protocol5 = "", path = "", query = {} } = value2;
        const url2 = new URL(`${protocol5}//${hostname2}${port ? `:${port}` : ""}${path}`);
        url2.search = Object.entries(query).map(([k8, v11]) => `${k8}=${v11}`).join("&");
        return url2;
      }
      return new URL(value2);
    } catch (error) {
      return null;
    }
  })();
  if (!whatwgURL) {
    console.error(`Unable to parse ${JSON.stringify(value2)} as a whatwg URL.`);
    return null;
  }
  const urlString = whatwgURL.href;
  const { host, hostname, pathname, protocol: protocol4, search } = whatwgURL;
  if (search) {
    return null;
  }
  const scheme = protocol4.slice(0, -1);
  if (!Object.values(EndpointURLScheme).includes(scheme)) {
    return null;
  }
  const isIp = isIpAddress(hostname);
  const inputContainsDefaultPort = urlString.includes(`${host}:${DEFAULT_PORTS[scheme]}`) || typeof value2 === "string" && value2.includes(`${host}:${DEFAULT_PORTS[scheme]}`);
  const authority = `${host}${inputContainsDefaultPort ? `:${DEFAULT_PORTS[scheme]}` : ``}`;
  return {
    scheme,
    authority,
    path: pathname,
    normalizedPath: pathname.endsWith("/") ? pathname : `${pathname}/`,
    isIp
  };
};

// node_modules/@smithy/util-endpoints/dist-es/lib/stringEquals.js
var stringEquals = (value1, value2) => value1 === value2;

// node_modules/@smithy/util-endpoints/dist-es/lib/substring.js
var substring = (input, start, stop, reverse) => {
  if (start >= stop || input.length < stop) {
    return null;
  }
  if (!reverse) {
    return input.substring(start, stop);
  }
  return input.substring(input.length - stop, input.length - start);
};

// node_modules/@smithy/util-endpoints/dist-es/lib/uriEncode.js
var uriEncode = (value2) => encodeURIComponent(value2).replace(/[!*'()]/g, (c11) => `%${c11.charCodeAt(0).toString(16).toUpperCase()}`);

// node_modules/@smithy/util-endpoints/dist-es/utils/endpointFunctions.js
var endpointFunctions = {
  booleanEquals,
  getAttr,
  isSet,
  isValidHostLabel,
  not,
  parseURL,
  stringEquals,
  substring,
  uriEncode
};

// node_modules/@smithy/util-endpoints/dist-es/utils/evaluateTemplate.js
var evaluateTemplate = (template, options) => {
  const evaluatedTemplateArr = [];
  const templateContext = {
    ...options.endpointParams,
    ...options.referenceRecord
  };
  let currentIndex = 0;
  while (currentIndex < template.length) {
    const openingBraceIndex = template.indexOf("{", currentIndex);
    if (openingBraceIndex === -1) {
      evaluatedTemplateArr.push(template.slice(currentIndex));
      break;
    }
    evaluatedTemplateArr.push(template.slice(currentIndex, openingBraceIndex));
    const closingBraceIndex = template.indexOf("}", openingBraceIndex);
    if (closingBraceIndex === -1) {
      evaluatedTemplateArr.push(template.slice(openingBraceIndex));
      break;
    }
    if (template[openingBraceIndex + 1] === "{" && template[closingBraceIndex + 1] === "}") {
      evaluatedTemplateArr.push(template.slice(openingBraceIndex + 1, closingBraceIndex));
      currentIndex = closingBraceIndex + 2;
    }
    const parameterName = template.substring(openingBraceIndex + 1, closingBraceIndex);
    if (parameterName.includes("#")) {
      const [refName, attrName] = parameterName.split("#");
      evaluatedTemplateArr.push(getAttr(templateContext[refName], attrName));
    } else {
      evaluatedTemplateArr.push(templateContext[parameterName]);
    }
    currentIndex = closingBraceIndex + 1;
  }
  return evaluatedTemplateArr.join("");
};

// node_modules/@smithy/util-endpoints/dist-es/utils/getReferenceValue.js
var getReferenceValue = ({ ref }, options) => {
  const referenceRecord = {
    ...options.endpointParams,
    ...options.referenceRecord
  };
  return referenceRecord[ref];
};

// node_modules/@smithy/util-endpoints/dist-es/utils/evaluateExpression.js
var evaluateExpression = (obj, keyName, options) => {
  if (typeof obj === "string") {
    return evaluateTemplate(obj, options);
  } else if (obj["fn"]) {
    return callFunction(obj, options);
  } else if (obj["ref"]) {
    return getReferenceValue(obj, options);
  }
  throw new EndpointError(`'${keyName}': ${String(obj)} is not a string, function or reference.`);
};

// node_modules/@smithy/util-endpoints/dist-es/utils/callFunction.js
var callFunction = ({ fn, argv }, options) => {
  const evaluatedArgs = argv.map((arg) => ["boolean", "number"].includes(typeof arg) ? arg : evaluateExpression(arg, "arg", options));
  const fnSegments = fn.split(".");
  if (fnSegments[0] in customEndpointFunctions && fnSegments[1] != null) {
    return customEndpointFunctions[fnSegments[0]][fnSegments[1]](...evaluatedArgs);
  }
  return endpointFunctions[fn](...evaluatedArgs);
};

// node_modules/@smithy/util-endpoints/dist-es/utils/evaluateCondition.js
var evaluateCondition = ({ assign, ...fnArgs }, options) => {
  var _a5, _b;
  if (assign && assign in options.referenceRecord) {
    throw new EndpointError(`'${assign}' is already defined in Reference Record.`);
  }
  const value2 = callFunction(fnArgs, options);
  (_b = (_a5 = options.logger) == null ? void 0 : _a5.debug) == null ? void 0 : _b.call(_a5, `${debugId} evaluateCondition: ${toDebugString(fnArgs)} = ${toDebugString(value2)}`);
  return {
    result: value2 === "" ? true : !!value2,
    ...assign != null && { toAssign: { name: assign, value: value2 } }
  };
};

// node_modules/@smithy/util-endpoints/dist-es/utils/evaluateConditions.js
var evaluateConditions = (conditions = [], options) => {
  var _a5, _b;
  const conditionsReferenceRecord = {};
  for (const condition of conditions) {
    const { result, toAssign } = evaluateCondition(condition, {
      ...options,
      referenceRecord: {
        ...options.referenceRecord,
        ...conditionsReferenceRecord
      }
    });
    if (!result) {
      return { result };
    }
    if (toAssign) {
      conditionsReferenceRecord[toAssign.name] = toAssign.value;
      (_b = (_a5 = options.logger) == null ? void 0 : _a5.debug) == null ? void 0 : _b.call(_a5, `${debugId} assign: ${toAssign.name} := ${toDebugString(toAssign.value)}`);
    }
  }
  return { result: true, referenceRecord: conditionsReferenceRecord };
};

// node_modules/@smithy/util-endpoints/dist-es/utils/getEndpointHeaders.js
var getEndpointHeaders = (headers, options) => Object.entries(headers).reduce((acc, [headerKey, headerVal]) => ({
  ...acc,
  [headerKey]: headerVal.map((headerValEntry) => {
    const processedExpr = evaluateExpression(headerValEntry, "Header value entry", options);
    if (typeof processedExpr !== "string") {
      throw new EndpointError(`Header '${headerKey}' value '${processedExpr}' is not a string`);
    }
    return processedExpr;
  })
}), {});

// node_modules/@smithy/util-endpoints/dist-es/utils/getEndpointProperty.js
var getEndpointProperty = (property, options) => {
  if (Array.isArray(property)) {
    return property.map((propertyEntry) => getEndpointProperty(propertyEntry, options));
  }
  switch (typeof property) {
    case "string":
      return evaluateTemplate(property, options);
    case "object":
      if (property === null) {
        throw new EndpointError(`Unexpected endpoint property: ${property}`);
      }
      return getEndpointProperties(property, options);
    case "boolean":
      return property;
    default:
      throw new EndpointError(`Unexpected endpoint property type: ${typeof property}`);
  }
};

// node_modules/@smithy/util-endpoints/dist-es/utils/getEndpointProperties.js
var getEndpointProperties = (properties, options) => Object.entries(properties).reduce((acc, [propertyKey, propertyVal]) => ({
  ...acc,
  [propertyKey]: getEndpointProperty(propertyVal, options)
}), {});

// node_modules/@smithy/util-endpoints/dist-es/utils/getEndpointUrl.js
var getEndpointUrl = (endpointUrl, options) => {
  const expression = evaluateExpression(endpointUrl, "Endpoint URL", options);
  if (typeof expression === "string") {
    try {
      return new URL(expression);
    } catch (error) {
      console.error(`Failed to construct URL with ${expression}`, error);
      throw error;
    }
  }
  throw new EndpointError(`Endpoint URL must be a string, got ${typeof expression}`);
};

// node_modules/@smithy/util-endpoints/dist-es/utils/evaluateEndpointRule.js
var evaluateEndpointRule = (endpointRule, options) => {
  var _a5, _b;
  const { conditions, endpoint } = endpointRule;
  const { result, referenceRecord } = evaluateConditions(conditions, options);
  if (!result) {
    return;
  }
  const endpointRuleOptions = {
    ...options,
    referenceRecord: { ...options.referenceRecord, ...referenceRecord }
  };
  const { url: url2, properties, headers } = endpoint;
  (_b = (_a5 = options.logger) == null ? void 0 : _a5.debug) == null ? void 0 : _b.call(_a5, `${debugId} Resolving endpoint from template: ${toDebugString(endpoint)}`);
  return {
    ...headers != void 0 && {
      headers: getEndpointHeaders(headers, endpointRuleOptions)
    },
    ...properties != void 0 && {
      properties: getEndpointProperties(properties, endpointRuleOptions)
    },
    url: getEndpointUrl(url2, endpointRuleOptions)
  };
};

// node_modules/@smithy/util-endpoints/dist-es/utils/evaluateErrorRule.js
var evaluateErrorRule = (errorRule, options) => {
  const { conditions, error } = errorRule;
  const { result, referenceRecord } = evaluateConditions(conditions, options);
  if (!result) {
    return;
  }
  throw new EndpointError(evaluateExpression(error, "Error", {
    ...options,
    referenceRecord: { ...options.referenceRecord, ...referenceRecord }
  }));
};

// node_modules/@smithy/util-endpoints/dist-es/utils/evaluateTreeRule.js
var evaluateTreeRule = (treeRule, options) => {
  const { conditions, rules } = treeRule;
  const { result, referenceRecord } = evaluateConditions(conditions, options);
  if (!result) {
    return;
  }
  return evaluateRules(rules, {
    ...options,
    referenceRecord: { ...options.referenceRecord, ...referenceRecord }
  });
};

// node_modules/@smithy/util-endpoints/dist-es/utils/evaluateRules.js
var evaluateRules = (rules, options) => {
  for (const rule of rules) {
    if (rule.type === "endpoint") {
      const endpointOrUndefined = evaluateEndpointRule(rule, options);
      if (endpointOrUndefined) {
        return endpointOrUndefined;
      }
    } else if (rule.type === "error") {
      evaluateErrorRule(rule, options);
    } else if (rule.type === "tree") {
      const endpointOrUndefined = evaluateTreeRule(rule, options);
      if (endpointOrUndefined) {
        return endpointOrUndefined;
      }
    } else {
      throw new EndpointError(`Unknown endpoint rule: ${rule}`);
    }
  }
  throw new EndpointError(`Rules evaluation failed`);
};

// node_modules/@smithy/util-endpoints/dist-es/resolveEndpoint.js
var resolveEndpoint = (ruleSetObject, options) => {
  var _a5, _b, _c2, _d;
  const { endpointParams, logger: logger2 } = options;
  const { parameters, rules } = ruleSetObject;
  (_b = (_a5 = options.logger) == null ? void 0 : _a5.debug) == null ? void 0 : _b.call(_a5, `${debugId} Initial EndpointParams: ${toDebugString(endpointParams)}`);
  const paramsWithDefault = Object.entries(parameters).filter(([, v11]) => v11.default != null).map(([k8, v11]) => [k8, v11.default]);
  if (paramsWithDefault.length > 0) {
    for (const [paramKey, paramDefaultValue] of paramsWithDefault) {
      endpointParams[paramKey] = endpointParams[paramKey] ?? paramDefaultValue;
    }
  }
  const requiredParams = Object.entries(parameters).filter(([, v11]) => v11.required).map(([k8]) => k8);
  for (const requiredParam of requiredParams) {
    if (endpointParams[requiredParam] == null) {
      throw new EndpointError(`Missing required parameter: '${requiredParam}'`);
    }
  }
  const endpoint = evaluateRules(rules, { endpointParams, logger: logger2, referenceRecord: {} });
  (_d = (_c2 = options.logger) == null ? void 0 : _c2.debug) == null ? void 0 : _d.call(_c2, `${debugId} Resolved endpoint: ${toDebugString(endpoint)}`);
  return endpoint;
};

// node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/isVirtualHostableS3Bucket.js
var isVirtualHostableS3Bucket = (value2, allowSubDomains = false) => {
  if (allowSubDomains) {
    for (const label of value2.split(".")) {
      if (!isVirtualHostableS3Bucket(label)) {
        return false;
      }
    }
    return true;
  }
  if (!isValidHostLabel(value2)) {
    return false;
  }
  if (value2.length < 3 || value2.length > 63) {
    return false;
  }
  if (value2 !== value2.toLowerCase()) {
    return false;
  }
  if (isIpAddress(value2)) {
    return false;
  }
  return true;
};

// node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/parseArn.js
var parseArn = (value2) => {
  const segments = value2.split(":");
  if (segments.length < 6)
    return null;
  const [arn, partition2, service, region, accountId, ...resourceId] = segments;
  if (arn !== "arn" || partition2 === "" || service === "" || resourceId[0] === "")
    return null;
  return {
    partition: partition2,
    service,
    region,
    accountId,
    resourceId: resourceId[0].includes("/") ? resourceId[0].split("/") : resourceId
  };
};

// node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/partitions.json
var partitions_default = {
  partitions: [{
    id: "aws",
    outputs: {
      dnsSuffix: "amazonaws.com",
      dualStackDnsSuffix: "api.aws",
      implicitGlobalRegion: "us-east-1",
      name: "aws",
      supportsDualStack: true,
      supportsFIPS: true
    },
    regionRegex: "^(us|eu|ap|sa|ca|me|af|il)\\-\\w+\\-\\d+$",
    regions: {
      "af-south-1": {
        description: "Africa (Cape Town)"
      },
      "ap-east-1": {
        description: "Asia Pacific (Hong Kong)"
      },
      "ap-northeast-1": {
        description: "Asia Pacific (Tokyo)"
      },
      "ap-northeast-2": {
        description: "Asia Pacific (Seoul)"
      },
      "ap-northeast-3": {
        description: "Asia Pacific (Osaka)"
      },
      "ap-south-1": {
        description: "Asia Pacific (Mumbai)"
      },
      "ap-south-2": {
        description: "Asia Pacific (Hyderabad)"
      },
      "ap-southeast-1": {
        description: "Asia Pacific (Singapore)"
      },
      "ap-southeast-2": {
        description: "Asia Pacific (Sydney)"
      },
      "ap-southeast-3": {
        description: "Asia Pacific (Jakarta)"
      },
      "ap-southeast-4": {
        description: "Asia Pacific (Melbourne)"
      },
      "aws-global": {
        description: "AWS Standard global region"
      },
      "ca-central-1": {
        description: "Canada (Central)"
      },
      "ca-west-1": {
        description: "Canada West (Calgary)"
      },
      "eu-central-1": {
        description: "Europe (Frankfurt)"
      },
      "eu-central-2": {
        description: "Europe (Zurich)"
      },
      "eu-north-1": {
        description: "Europe (Stockholm)"
      },
      "eu-south-1": {
        description: "Europe (Milan)"
      },
      "eu-south-2": {
        description: "Europe (Spain)"
      },
      "eu-west-1": {
        description: "Europe (Ireland)"
      },
      "eu-west-2": {
        description: "Europe (London)"
      },
      "eu-west-3": {
        description: "Europe (Paris)"
      },
      "il-central-1": {
        description: "Israel (Tel Aviv)"
      },
      "me-central-1": {
        description: "Middle East (UAE)"
      },
      "me-south-1": {
        description: "Middle East (Bahrain)"
      },
      "sa-east-1": {
        description: "South America (Sao Paulo)"
      },
      "us-east-1": {
        description: "US East (N. Virginia)"
      },
      "us-east-2": {
        description: "US East (Ohio)"
      },
      "us-west-1": {
        description: "US West (N. California)"
      },
      "us-west-2": {
        description: "US West (Oregon)"
      }
    }
  }, {
    id: "aws-cn",
    outputs: {
      dnsSuffix: "amazonaws.com.cn",
      dualStackDnsSuffix: "api.amazonwebservices.com.cn",
      implicitGlobalRegion: "cn-northwest-1",
      name: "aws-cn",
      supportsDualStack: true,
      supportsFIPS: true
    },
    regionRegex: "^cn\\-\\w+\\-\\d+$",
    regions: {
      "aws-cn-global": {
        description: "AWS China global region"
      },
      "cn-north-1": {
        description: "China (Beijing)"
      },
      "cn-northwest-1": {
        description: "China (Ningxia)"
      }
    }
  }, {
    id: "aws-us-gov",
    outputs: {
      dnsSuffix: "amazonaws.com",
      dualStackDnsSuffix: "api.aws",
      implicitGlobalRegion: "us-gov-west-1",
      name: "aws-us-gov",
      supportsDualStack: true,
      supportsFIPS: true
    },
    regionRegex: "^us\\-gov\\-\\w+\\-\\d+$",
    regions: {
      "aws-us-gov-global": {
        description: "AWS GovCloud (US) global region"
      },
      "us-gov-east-1": {
        description: "AWS GovCloud (US-East)"
      },
      "us-gov-west-1": {
        description: "AWS GovCloud (US-West)"
      }
    }
  }, {
    id: "aws-iso",
    outputs: {
      dnsSuffix: "c2s.ic.gov",
      dualStackDnsSuffix: "c2s.ic.gov",
      implicitGlobalRegion: "us-iso-east-1",
      name: "aws-iso",
      supportsDualStack: false,
      supportsFIPS: true
    },
    regionRegex: "^us\\-iso\\-\\w+\\-\\d+$",
    regions: {
      "aws-iso-global": {
        description: "AWS ISO (US) global region"
      },
      "us-iso-east-1": {
        description: "US ISO East"
      },
      "us-iso-west-1": {
        description: "US ISO WEST"
      }
    }
  }, {
    id: "aws-iso-b",
    outputs: {
      dnsSuffix: "sc2s.sgov.gov",
      dualStackDnsSuffix: "sc2s.sgov.gov",
      implicitGlobalRegion: "us-isob-east-1",
      name: "aws-iso-b",
      supportsDualStack: false,
      supportsFIPS: true
    },
    regionRegex: "^us\\-isob\\-\\w+\\-\\d+$",
    regions: {
      "aws-iso-b-global": {
        description: "AWS ISOB (US) global region"
      },
      "us-isob-east-1": {
        description: "US ISOB East (Ohio)"
      }
    }
  }, {
    id: "aws-iso-e",
    outputs: {
      dnsSuffix: "cloud.adc-e.uk",
      dualStackDnsSuffix: "cloud.adc-e.uk",
      implicitGlobalRegion: "eu-isoe-west-1",
      name: "aws-iso-e",
      supportsDualStack: false,
      supportsFIPS: true
    },
    regionRegex: "^eu\\-isoe\\-\\w+\\-\\d+$",
    regions: {
      "eu-isoe-west-1": {
        description: "EU ISOE West"
      }
    }
  }, {
    id: "aws-iso-f",
    outputs: {
      dnsSuffix: "csp.hci.ic.gov",
      dualStackDnsSuffix: "csp.hci.ic.gov",
      implicitGlobalRegion: "us-isof-south-1",
      name: "aws-iso-f",
      supportsDualStack: false,
      supportsFIPS: true
    },
    regionRegex: "^us\\-isof\\-\\w+\\-\\d+$",
    regions: {}
  }],
  version: "1.1"
};

// node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/partition.js
var selectedPartitionsInfo = partitions_default;
var selectedUserAgentPrefix = "";
var partition = (value2) => {
  const { partitions } = selectedPartitionsInfo;
  for (const partition2 of partitions) {
    const { regions, outputs } = partition2;
    for (const [region, regionData] of Object.entries(regions)) {
      if (region === value2) {
        return {
          ...outputs,
          ...regionData
        };
      }
    }
  }
  for (const partition2 of partitions) {
    const { regionRegex, outputs } = partition2;
    if (new RegExp(regionRegex).test(value2)) {
      return {
        ...outputs
      };
    }
  }
  const DEFAULT_PARTITION = partitions.find((partition2) => partition2.id === "aws");
  if (!DEFAULT_PARTITION) {
    throw new Error("Provided region was not found in the partition array or regex, and default partition with id 'aws' doesn't exist.");
  }
  return {
    ...DEFAULT_PARTITION.outputs
  };
};
var getUserAgentPrefix = () => selectedUserAgentPrefix;

// node_modules/@aws-sdk/util-endpoints/dist-es/aws.js
var awsEndpointFunctions = {
  isVirtualHostableS3Bucket,
  parseArn,
  partition
};
customEndpointFunctions.aws = awsEndpointFunctions;

// node_modules/@aws-sdk/middleware-user-agent/dist-es/constants.js
var USER_AGENT = "user-agent";
var X_AMZ_USER_AGENT = "x-amz-user-agent";
var SPACE = " ";
var UA_NAME_SEPARATOR = "/";
var UA_NAME_ESCAPE_REGEX = /[^\!\$\%\&\'\*\+\-\.\^\_\`\|\~\d\w]/g;
var UA_VALUE_ESCAPE_REGEX = /[^\!\$\%\&\'\*\+\-\.\^\_\`\|\~\d\w\#]/g;
var UA_ESCAPE_CHAR = "-";

// node_modules/@aws-sdk/middleware-user-agent/dist-es/user-agent-middleware.js
var userAgentMiddleware = (options) => (next, context) => async (args) => {
  var _a5, _b;
  const { request } = args;
  if (!HttpRequest.isInstance(request))
    return next(args);
  const { headers } = request;
  const userAgent = ((_a5 = context == null ? void 0 : context.userAgent) == null ? void 0 : _a5.map(escapeUserAgent)) || [];
  const defaultUserAgent2 = (await options.defaultUserAgentProvider()).map(escapeUserAgent);
  const customUserAgent = ((_b = options == null ? void 0 : options.customUserAgent) == null ? void 0 : _b.map(escapeUserAgent)) || [];
  const prefix = getUserAgentPrefix();
  const sdkUserAgentValue = (prefix ? [prefix] : []).concat([...defaultUserAgent2, ...userAgent, ...customUserAgent]).join(SPACE);
  const normalUAValue = [
    ...defaultUserAgent2.filter((section) => section.startsWith("aws-sdk-")),
    ...customUserAgent
  ].join(SPACE);
  if (options.runtime !== "browser") {
    if (normalUAValue) {
      headers[X_AMZ_USER_AGENT] = headers[X_AMZ_USER_AGENT] ? `${headers[USER_AGENT]} ${normalUAValue}` : normalUAValue;
    }
    headers[USER_AGENT] = sdkUserAgentValue;
  } else {
    headers[X_AMZ_USER_AGENT] = sdkUserAgentValue;
  }
  return next({
    ...args,
    request
  });
};
var escapeUserAgent = (userAgentPair) => {
  var _a5;
  const name = userAgentPair[0].split(UA_NAME_SEPARATOR).map((part) => part.replace(UA_NAME_ESCAPE_REGEX, UA_ESCAPE_CHAR)).join(UA_NAME_SEPARATOR);
  const version2 = (_a5 = userAgentPair[1]) == null ? void 0 : _a5.replace(UA_VALUE_ESCAPE_REGEX, UA_ESCAPE_CHAR);
  const prefixSeparatorIndex = name.indexOf(UA_NAME_SEPARATOR);
  const prefix = name.substring(0, prefixSeparatorIndex);
  let uaName = name.substring(prefixSeparatorIndex + 1);
  if (prefix === "api") {
    uaName = uaName.toLowerCase();
  }
  return [prefix, uaName, version2].filter((item) => item && item.length > 0).reduce((acc, item, index) => {
    switch (index) {
      case 0:
        return item;
      case 1:
        return `${acc}/${item}`;
      default:
        return `${acc}#${item}`;
    }
  }, "");
};
var getUserAgentMiddlewareOptions = {
  name: "getUserAgentMiddleware",
  step: "build",
  priority: "low",
  tags: ["SET_USER_AGENT", "USER_AGENT"],
  override: true
};
var getUserAgentPlugin = (config) => ({
  applyToStack: (clientStack) => {
    clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);
  }
});

// node_modules/@smithy/util-config-provider/dist-es/types.js
var SelectorType;
(function(SelectorType2) {
  SelectorType2["ENV"] = "env";
  SelectorType2["CONFIG"] = "shared config entry";
})(SelectorType || (SelectorType = {}));

// node_modules/@smithy/config-resolver/dist-es/endpointsConfig/NodeUseDualstackEndpointConfigOptions.js
var DEFAULT_USE_DUALSTACK_ENDPOINT = false;

// node_modules/@smithy/config-resolver/dist-es/endpointsConfig/NodeUseFipsEndpointConfigOptions.js
var DEFAULT_USE_FIPS_ENDPOINT = false;

// node_modules/@smithy/util-middleware/dist-es/getSmithyContext.js
var getSmithyContext = (context) => context[SMITHY_CONTEXT_KEY] || (context[SMITHY_CONTEXT_KEY] = {});

// node_modules/@smithy/util-middleware/dist-es/normalizeProvider.js
var normalizeProvider = (input) => {
  if (typeof input === "function")
    return input;
  const promisified = Promise.resolve(input);
  return () => promisified;
};

// node_modules/@smithy/config-resolver/dist-es/regionConfig/isFipsRegion.js
var isFipsRegion = (region) => typeof region === "string" && (region.startsWith("fips-") || region.endsWith("-fips"));

// node_modules/@smithy/config-resolver/dist-es/regionConfig/getRealRegion.js
var getRealRegion = (region) => isFipsRegion(region) ? ["fips-aws-global", "aws-fips"].includes(region) ? "us-east-1" : region.replace(/fips-(dkr-|prod-)?|-fips/, "") : region;

// node_modules/@smithy/config-resolver/dist-es/regionConfig/resolveRegionConfig.js
var resolveRegionConfig = (input) => {
  const { region, useFipsEndpoint } = input;
  if (!region) {
    throw new Error("Region is missing");
  }
  return {
    ...input,
    region: async () => {
      if (typeof region === "string") {
        return getRealRegion(region);
      }
      const providedRegion = await region();
      return getRealRegion(providedRegion);
    },
    useFipsEndpoint: async () => {
      const providedRegion = typeof region === "string" ? region : await region();
      if (isFipsRegion(providedRegion)) {
        return true;
      }
      return typeof useFipsEndpoint !== "function" ? Promise.resolve(!!useFipsEndpoint) : useFipsEndpoint();
    }
  };
};

// node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/httpAuthSchemeMiddleware.js
function convertHttpAuthSchemesToMap(httpAuthSchemes) {
  const map3 = /* @__PURE__ */ new Map();
  for (const scheme of httpAuthSchemes) {
    map3.set(scheme.schemeId, scheme);
  }
  return map3;
}
var httpAuthSchemeMiddleware = (config, mwOptions) => (next, context) => async (args) => {
  var _a5;
  const options = config.httpAuthSchemeProvider(await mwOptions.httpAuthSchemeParametersProvider(config, context, args.input));
  const authSchemes = convertHttpAuthSchemesToMap(config.httpAuthSchemes);
  const smithyContext = getSmithyContext(context);
  const failureReasons = [];
  for (const option of options) {
    const scheme = authSchemes.get(option.schemeId);
    if (!scheme) {
      failureReasons.push(`HttpAuthScheme \`${option.schemeId}\` was not enabled for this service.`);
      continue;
    }
    const identityProvider = scheme.identityProvider(await mwOptions.identityProviderConfigProvider(config));
    if (!identityProvider) {
      failureReasons.push(`HttpAuthScheme \`${option.schemeId}\` did not have an IdentityProvider configured.`);
      continue;
    }
    const { identityProperties = {}, signingProperties = {} } = ((_a5 = option.propertiesExtractor) == null ? void 0 : _a5.call(option, config, context)) || {};
    option.identityProperties = Object.assign(option.identityProperties || {}, identityProperties);
    option.signingProperties = Object.assign(option.signingProperties || {}, signingProperties);
    smithyContext.selectedHttpAuthScheme = {
      httpAuthOption: option,
      identity: await identityProvider(option.identityProperties),
      signer: scheme.signer
    };
    break;
  }
  if (!smithyContext.selectedHttpAuthScheme) {
    throw new Error(failureReasons.join("\n"));
  }
  return next(args);
};

// node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/getHttpAuthSchemeEndpointRuleSetPlugin.js
var httpAuthSchemeEndpointRuleSetMiddlewareOptions = {
  step: "serialize",
  tags: ["HTTP_AUTH_SCHEME"],
  name: "httpAuthSchemeMiddleware",
  override: true,
  relation: "before",
  toMiddleware: "endpointV2Middleware"
};
var getHttpAuthSchemeEndpointRuleSetPlugin = (config, { httpAuthSchemeParametersProvider, identityProviderConfigProvider }) => ({
  applyToStack: (clientStack) => {
    clientStack.addRelativeTo(httpAuthSchemeMiddleware(config, {
      httpAuthSchemeParametersProvider,
      identityProviderConfigProvider
    }), httpAuthSchemeEndpointRuleSetMiddlewareOptions);
  }
});

// node_modules/@smithy/middleware-serde/dist-es/deserializerMiddleware.js
var deserializerMiddleware = (options, deserializer) => (next) => async (args) => {
  const { response } = await next(args);
  try {
    const parsed = await deserializer(response, options);
    return {
      response,
      output: parsed
    };
  } catch (error) {
    Object.defineProperty(error, "$response", {
      value: response
    });
    if (!("$metadata" in error)) {
      const hint = `Deserialization error: to see the raw response, inspect the hidden field {error}.$response on this object.`;
      error.message += "\n  " + hint;
      if (typeof error.$responseBodyText !== "undefined") {
        if (error.$response) {
          error.$response.body = error.$responseBodyText;
        }
      }
    }
    throw error;
  }
};

// node_modules/@smithy/middleware-serde/dist-es/serializerMiddleware.js
var serializerMiddleware = (options, serializer) => (next, context) => async (args) => {
  var _a5;
  const endpoint = ((_a5 = context.endpointV2) == null ? void 0 : _a5.url) && options.urlParser ? async () => options.urlParser(context.endpointV2.url) : options.endpoint;
  if (!endpoint) {
    throw new Error("No valid endpoint provider available.");
  }
  const request = await serializer(args.input, { ...options, endpoint });
  return next({
    ...args,
    request
  });
};

// node_modules/@smithy/middleware-serde/dist-es/serdePlugin.js
var deserializerMiddlewareOption = {
  name: "deserializerMiddleware",
  step: "deserialize",
  tags: ["DESERIALIZER"],
  override: true
};
var serializerMiddlewareOption = {
  name: "serializerMiddleware",
  step: "serialize",
  tags: ["SERIALIZER"],
  override: true
};
function getSerdePlugin(config, serializer, deserializer) {
  return {
    applyToStack: (commandStack) => {
      commandStack.add(deserializerMiddleware(config, deserializer), deserializerMiddlewareOption);
      commandStack.add(serializerMiddleware(config, serializer), serializerMiddlewareOption);
    }
  };
}

// node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/getHttpAuthSchemePlugin.js
var httpAuthSchemeMiddlewareOptions = {
  step: "serialize",
  tags: ["HTTP_AUTH_SCHEME"],
  name: "httpAuthSchemeMiddleware",
  override: true,
  relation: "before",
  toMiddleware: serializerMiddlewareOption.name
};

// node_modules/@smithy/core/dist-es/middleware-http-signing/httpSigningMiddleware.js
var defaultErrorHandler = (signingProperties) => (error) => {
  throw error;
};
var defaultSuccessHandler = (httpResponse, signingProperties) => {
};
var httpSigningMiddleware = (config) => (next, context) => async (args) => {
  if (!HttpRequest.isInstance(args.request)) {
    return next(args);
  }
  const smithyContext = getSmithyContext(context);
  const scheme = smithyContext.selectedHttpAuthScheme;
  if (!scheme) {
    throw new Error(`No HttpAuthScheme was selected: unable to sign request`);
  }
  const { httpAuthOption: { signingProperties = {} }, identity, signer } = scheme;
  const output = await next({
    ...args,
    request: await signer.sign(args.request, identity, signingProperties)
  }).catch((signer.errorHandler || defaultErrorHandler)(signingProperties));
  (signer.successHandler || defaultSuccessHandler)(output.response, signingProperties);
  return output;
};

// node_modules/@smithy/core/dist-es/middleware-http-signing/getHttpSigningMiddleware.js
var httpSigningMiddlewareOptions = {
  step: "finalizeRequest",
  tags: ["HTTP_SIGNING"],
  name: "httpSigningMiddleware",
  aliases: ["apiKeyMiddleware", "tokenMiddleware", "awsAuthMiddleware"],
  override: true,
  relation: "after",
  toMiddleware: "retryMiddleware"
};
var getHttpSigningPlugin = (config) => ({
  applyToStack: (clientStack) => {
    clientStack.addRelativeTo(httpSigningMiddleware(config), httpSigningMiddlewareOptions);
  }
});

// node_modules/@smithy/core/dist-es/normalizeProvider.js
var normalizeProvider2 = (input) => {
  if (typeof input === "function")
    return input;
  const promisified = Promise.resolve(input);
  return () => promisified;
};

// node_modules/@smithy/util-base64/dist-es/constants.browser.js
var alphabetByEncoding = {};
var alphabetByValue = new Array(64);
for (let i11 = 0, start = "A".charCodeAt(0), limit = "Z".charCodeAt(0); i11 + start <= limit; i11++) {
  const char = String.fromCharCode(i11 + start);
  alphabetByEncoding[char] = i11;
  alphabetByValue[i11] = char;
}
for (let i11 = 0, start = "a".charCodeAt(0), limit = "z".charCodeAt(0); i11 + start <= limit; i11++) {
  const char = String.fromCharCode(i11 + start);
  const index = i11 + 26;
  alphabetByEncoding[char] = index;
  alphabetByValue[index] = char;
}
for (let i11 = 0; i11 < 10; i11++) {
  alphabetByEncoding[i11.toString(10)] = i11 + 52;
  const char = i11.toString(10);
  const index = i11 + 52;
  alphabetByEncoding[char] = index;
  alphabetByValue[index] = char;
}
alphabetByEncoding["+"] = 62;
alphabetByValue[62] = "+";
alphabetByEncoding["/"] = 63;
alphabetByValue[63] = "/";
var bitsPerLetter = 6;
var bitsPerByte = 8;
var maxLetterValue = 63;

// node_modules/@smithy/util-base64/dist-es/fromBase64.browser.js
var fromBase64 = (input) => {
  let totalByteLength = input.length / 4 * 3;
  if (input.slice(-2) === "==") {
    totalByteLength -= 2;
  } else if (input.slice(-1) === "=") {
    totalByteLength--;
  }
  const out = new ArrayBuffer(totalByteLength);
  const dataView = new DataView(out);
  for (let i11 = 0; i11 < input.length; i11 += 4) {
    let bits = 0;
    let bitLength = 0;
    for (let j5 = i11, limit = i11 + 3; j5 <= limit; j5++) {
      if (input[j5] !== "=") {
        if (!(input[j5] in alphabetByEncoding)) {
          throw new TypeError(`Invalid character ${input[j5]} in base64 string.`);
        }
        bits |= alphabetByEncoding[input[j5]] << (limit - j5) * bitsPerLetter;
        bitLength += bitsPerLetter;
      } else {
        bits >>= bitsPerLetter;
      }
    }
    const chunkOffset = i11 / 4 * 3;
    bits >>= bitLength % bitsPerByte;
    const byteLength2 = Math.floor(bitLength / bitsPerByte);
    for (let k8 = 0; k8 < byteLength2; k8++) {
      const offset2 = (byteLength2 - k8 - 1) * bitsPerByte;
      dataView.setUint8(chunkOffset + k8, (bits & 255 << offset2) >> offset2);
    }
  }
  return new Uint8Array(out);
};

// node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js
var fromUtf8 = (input) => new TextEncoder().encode(input);

// node_modules/@smithy/util-utf8/dist-es/toUint8Array.js
var toUint8Array = (data) => {
  if (typeof data === "string") {
    return fromUtf8(data);
  }
  if (ArrayBuffer.isView(data)) {
    return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);
  }
  return new Uint8Array(data);
};

// node_modules/@smithy/util-utf8/dist-es/toUtf8.browser.js
var toUtf8 = (input) => {
  if (typeof input === "string") {
    return input;
  }
  if (typeof input !== "object" || typeof input.byteOffset !== "number" || typeof input.byteLength !== "number") {
    throw new Error("@smithy/util-utf8: toUtf8 encoder function only accepts string | Uint8Array.");
  }
  return new TextDecoder("utf-8").decode(input);
};

// node_modules/@smithy/util-base64/dist-es/toBase64.browser.js
function toBase64(_input) {
  let input;
  if (typeof _input === "string") {
    input = fromUtf8(_input);
  } else {
    input = _input;
  }
  const isArrayLike = typeof input === "object" && typeof input.length === "number";
  const isUint8Array = typeof input === "object" && typeof input.byteOffset === "number" && typeof input.byteLength === "number";
  if (!isArrayLike && !isUint8Array) {
    throw new Error("@smithy/util-base64: toBase64 encoder function only accepts string | Uint8Array.");
  }
  let str = "";
  for (let i11 = 0; i11 < input.length; i11 += 3) {
    let bits = 0;
    let bitLength = 0;
    for (let j5 = i11, limit = Math.min(i11 + 3, input.length); j5 < limit; j5++) {
      bits |= input[j5] << (limit - j5 - 1) * bitsPerByte;
      bitLength += bitsPerByte;
    }
    const bitClusterCount = Math.ceil(bitLength / bitsPerLetter);
    bits <<= bitClusterCount * bitsPerLetter - bitLength;
    for (let k8 = 1; k8 <= bitClusterCount; k8++) {
      const offset2 = (bitClusterCount - k8) * bitsPerLetter;
      str += alphabetByValue[(bits & maxLetterValue << offset2) >> offset2];
    }
    str += "==".slice(0, 4 - bitClusterCount);
  }
  return str;
}

// node_modules/@smithy/util-stream/dist-es/blob/transforms.js
function transformToString(payload, encoding = "utf-8") {
  if (encoding === "base64") {
    return toBase64(payload);
  }
  return toUtf8(payload);
}
function transformFromString(str, encoding) {
  if (encoding === "base64") {
    return Uint8ArrayBlobAdapter.mutate(fromBase64(str));
  }
  return Uint8ArrayBlobAdapter.mutate(fromUtf8(str));
}

// node_modules/@smithy/util-stream/dist-es/blob/Uint8ArrayBlobAdapter.js
var Uint8ArrayBlobAdapter = class _Uint8ArrayBlobAdapter extends Uint8Array {
  static fromString(source, encoding = "utf-8") {
    switch (typeof source) {
      case "string":
        return transformFromString(source, encoding);
      default:
        throw new Error(`Unsupported conversion from ${typeof source} to Uint8ArrayBlobAdapter.`);
    }
  }
  static mutate(source) {
    Object.setPrototypeOf(source, _Uint8ArrayBlobAdapter.prototype);
    return source;
  }
  transformToString(encoding = "utf-8") {
    return transformToString(this, encoding);
  }
};

// node_modules/@smithy/util-uri-escape/dist-es/escape-uri.js
var escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);
var hexEncode = (c11) => `%${c11.charCodeAt(0).toString(16).toUpperCase()}`;

// node_modules/@smithy/querystring-builder/dist-es/index.js
function buildQueryString(query) {
  const parts2 = [];
  for (let key of Object.keys(query).sort()) {
    const value2 = query[key];
    key = escapeUri(key);
    if (Array.isArray(value2)) {
      for (let i11 = 0, iLen = value2.length; i11 < iLen; i11++) {
        parts2.push(`${key}=${escapeUri(value2[i11])}`);
      }
    } else {
      let qsEntry = key;
      if (value2 || typeof value2 === "string") {
        qsEntry += `=${escapeUri(value2)}`;
      }
      parts2.push(qsEntry);
    }
  }
  return parts2.join("&");
}

// node_modules/@smithy/util-hex-encoding/dist-es/index.js
var SHORT_TO_HEX = {};
var HEX_TO_SHORT = {};
for (let i11 = 0; i11 < 256; i11++) {
  let encodedByte = i11.toString(16).toLowerCase();
  if (encodedByte.length === 1) {
    encodedByte = `0${encodedByte}`;
  }
  SHORT_TO_HEX[i11] = encodedByte;
  HEX_TO_SHORT[encodedByte] = i11;
}
function fromHex(encoded) {
  if (encoded.length % 2 !== 0) {
    throw new Error("Hex encoded strings must have an even number length");
  }
  const out = new Uint8Array(encoded.length / 2);
  for (let i11 = 0; i11 < encoded.length; i11 += 2) {
    const encodedByte = encoded.slice(i11, i11 + 2).toLowerCase();
    if (encodedByte in HEX_TO_SHORT) {
      out[i11 / 2] = HEX_TO_SHORT[encodedByte];
    } else {
      throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);
    }
  }
  return out;
}
function toHex(bytes) {
  let out = "";
  for (let i11 = 0; i11 < bytes.byteLength; i11++) {
    out += SHORT_TO_HEX[bytes[i11]];
  }
  return out;
}

// node_modules/@smithy/core/dist-es/submodules/protocols/collect-stream-body.js
var collectBody = async (streamBody = new Uint8Array(), context) => {
  if (streamBody instanceof Uint8Array) {
    return Uint8ArrayBlobAdapter.mutate(streamBody);
  }
  if (!streamBody) {
    return Uint8ArrayBlobAdapter.mutate(new Uint8Array());
  }
  const fromContext = context.streamCollector(streamBody);
  return Uint8ArrayBlobAdapter.mutate(await fromContext);
};

// node_modules/@smithy/core/dist-es/submodules/protocols/extended-encode-uri-component.js
function extendedEncodeURIComponent(str) {
  return encodeURIComponent(str).replace(/[!'()*]/g, function(c11) {
    return "%" + c11.charCodeAt(0).toString(16).toUpperCase();
  });
}

// node_modules/@smithy/core/dist-es/submodules/protocols/requestBuilder.js
function requestBuilder(input, context) {
  return new RequestBuilder(input, context);
}
var RequestBuilder = class {
  constructor(input, context) {
    this.input = input;
    this.context = context;
    this.query = {};
    this.method = "";
    this.headers = {};
    this.path = "";
    this.body = null;
    this.hostname = "";
    this.resolvePathStack = [];
  }
  async build() {
    const { hostname, protocol: protocol4 = "https", port, path: basePath } = await this.context.endpoint();
    this.path = basePath;
    for (const resolvePath of this.resolvePathStack) {
      resolvePath(this.path);
    }
    return new HttpRequest({
      protocol: protocol4,
      hostname: this.hostname || hostname,
      port,
      method: this.method,
      path: this.path,
      query: this.query,
      body: this.body,
      headers: this.headers
    });
  }
  hn(hostname) {
    this.hostname = hostname;
    return this;
  }
  bp(uriLabel) {
    this.resolvePathStack.push((basePath) => {
      this.path = `${(basePath == null ? void 0 : basePath.endsWith("/")) ? basePath.slice(0, -1) : basePath || ""}` + uriLabel;
    });
    return this;
  }
  p(memberName, labelValueProvider, uriLabel, isGreedyLabel) {
    this.resolvePathStack.push((path) => {
      this.path = resolvedPath(path, this.input, memberName, labelValueProvider, uriLabel, isGreedyLabel);
    });
    return this;
  }
  h(headers) {
    this.headers = headers;
    return this;
  }
  q(query) {
    this.query = query;
    return this;
  }
  b(body) {
    this.body = body;
    return this;
  }
  m(method) {
    this.method = method;
    return this;
  }
};

// node_modules/@smithy/core/dist-es/submodules/protocols/resolve-path.js
var resolvedPath = (resolvedPath2, input, memberName, labelValueProvider, uriLabel, isGreedyLabel) => {
  if (input != null && input[memberName] !== void 0) {
    const labelValue = labelValueProvider();
    if (labelValue.length <= 0) {
      throw new Error("Empty value provided for input HTTP label: " + memberName + ".");
    }
    resolvedPath2 = resolvedPath2.replace(uriLabel, isGreedyLabel ? labelValue.split("/").map((segment) => extendedEncodeURIComponent(segment)).join("/") : extendedEncodeURIComponent(labelValue));
  } else {
    throw new Error("No value provided for input HTTP label: " + memberName + ".");
  }
  return resolvedPath2;
};

// node_modules/@smithy/core/dist-es/setFeature.js
function setFeature(context, feature, value2) {
  if (!context.__smithy_context) {
    context.__smithy_context = {
      features: {}
    };
  } else if (!context.__smithy_context.features) {
    context.__smithy_context.features = {};
  }
  context.__smithy_context.features[feature] = value2;
}

// node_modules/@smithy/core/dist-es/util-identity-and-auth/DefaultIdentityProviderConfig.js
var DefaultIdentityProviderConfig = class {
  constructor(config) {
    this.authSchemes = /* @__PURE__ */ new Map();
    for (const [key, value2] of Object.entries(config)) {
      if (value2 !== void 0) {
        this.authSchemes.set(key, value2);
      }
    }
  }
  getIdentityProvider(schemeId) {
    return this.authSchemes.get(schemeId);
  }
};

// node_modules/@smithy/core/dist-es/util-identity-and-auth/memoizeIdentityProvider.js
var createIsIdentityExpiredFunction = (expirationMs) => (identity) => doesIdentityRequireRefresh(identity) && identity.expiration.getTime() - Date.now() < expirationMs;
var EXPIRATION_MS = 3e5;
var isIdentityExpired = createIsIdentityExpiredFunction(EXPIRATION_MS);
var doesIdentityRequireRefresh = (identity) => identity.expiration !== void 0;
var memoizeIdentityProvider = (provider, isExpired, requiresRefresh) => {
  if (provider === void 0) {
    return void 0;
  }
  const normalizedProvider = typeof provider !== "function" ? async () => Promise.resolve(provider) : provider;
  let resolved;
  let pending;
  let hasResult;
  let isConstant = false;
  const coalesceProvider = async (options) => {
    if (!pending) {
      pending = normalizedProvider(options);
    }
    try {
      resolved = await pending;
      hasResult = true;
      isConstant = false;
    } finally {
      pending = void 0;
    }
    return resolved;
  };
  if (isExpired === void 0) {
    return async (options) => {
      if (!hasResult || (options == null ? void 0 : options.forceRefresh)) {
        resolved = await coalesceProvider(options);
      }
      return resolved;
    };
  }
  return async (options) => {
    if (!hasResult || (options == null ? void 0 : options.forceRefresh)) {
      resolved = await coalesceProvider(options);
    }
    if (isConstant) {
      return resolved;
    }
    if (!requiresRefresh(resolved)) {
      isConstant = true;
      return resolved;
    }
    if (isExpired(resolved)) {
      await coalesceProvider(options);
      return resolved;
    }
    return resolved;
  };
};

// node_modules/@smithy/eventstream-serde-config-resolver/dist-es/EventStreamSerdeConfig.js
var resolveEventStreamSerdeConfig = (input) => ({
  ...input,
  eventStreamMarshaller: input.eventStreamSerdeProvider(input)
});

// node_modules/@smithy/middleware-content-length/dist-es/index.js
var CONTENT_LENGTH_HEADER = "content-length";
function contentLengthMiddleware(bodyLengthChecker) {
  return (next) => async (args) => {
    const request = args.request;
    if (HttpRequest.isInstance(request)) {
      const { body, headers } = request;
      if (body && Object.keys(headers).map((str) => str.toLowerCase()).indexOf(CONTENT_LENGTH_HEADER) === -1) {
        try {
          const length2 = bodyLengthChecker(body);
          request.headers = {
            ...request.headers,
            [CONTENT_LENGTH_HEADER]: String(length2)
          };
        } catch (error) {
        }
      }
    }
    return next({
      ...args,
      request
    });
  };
}
var contentLengthMiddlewareOptions = {
  step: "build",
  tags: ["SET_CONTENT_LENGTH", "CONTENT_LENGTH"],
  name: "contentLengthMiddleware",
  override: true
};
var getContentLengthPlugin = (options) => ({
  applyToStack: (clientStack) => {
    clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), contentLengthMiddlewareOptions);
  }
});

// node_modules/@smithy/middleware-endpoint/dist-es/service-customizations/s3.js
var resolveParamsForS3 = async (endpointParams) => {
  const bucket = (endpointParams == null ? void 0 : endpointParams.Bucket) || "";
  if (typeof endpointParams.Bucket === "string") {
    endpointParams.Bucket = bucket.replace(/#/g, encodeURIComponent("#")).replace(/\?/g, encodeURIComponent("?"));
  }
  if (isArnBucketName(bucket)) {
    if (endpointParams.ForcePathStyle === true) {
      throw new Error("Path-style addressing cannot be used with ARN buckets");
    }
  } else if (!isDnsCompatibleBucketName(bucket) || bucket.indexOf(".") !== -1 && !String(endpointParams.Endpoint).startsWith("http:") || bucket.toLowerCase() !== bucket || bucket.length < 3) {
    endpointParams.ForcePathStyle = true;
  }
  if (endpointParams.DisableMultiRegionAccessPoints) {
    endpointParams.disableMultiRegionAccessPoints = true;
    endpointParams.DisableMRAP = true;
  }
  return endpointParams;
};
var DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\.\-]{1,61}[a-z0-9]$/;
var IP_ADDRESS_PATTERN = /(\d+\.){3}\d+/;
var DOTS_PATTERN = /\.\./;
var isDnsCompatibleBucketName = (bucketName) => DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);
var isArnBucketName = (bucketName) => {
  const [arn, partition2, service, , , bucket] = bucketName.split(":");
  const isArn = arn === "arn" && bucketName.split(":").length >= 6;
  const isValidArn = Boolean(isArn && partition2 && service && bucket);
  if (isArn && !isValidArn) {
    throw new Error(`Invalid ARN: ${bucketName} was an invalid ARN.`);
  }
  return isValidArn;
};

// node_modules/@smithy/middleware-endpoint/dist-es/adaptors/createConfigValueProvider.js
var createConfigValueProvider = (configKey, canonicalEndpointParamKey, config) => {
  const configProvider = async () => {
    const configValue = config[configKey] ?? config[canonicalEndpointParamKey];
    if (typeof configValue === "function") {
      return configValue();
    }
    return configValue;
  };
  if (configKey === "credentialScope" || canonicalEndpointParamKey === "CredentialScope") {
    return async () => {
      const credentials = typeof config.credentials === "function" ? await config.credentials() : config.credentials;
      const configValue = (credentials == null ? void 0 : credentials.credentialScope) ?? (credentials == null ? void 0 : credentials.CredentialScope);
      return configValue;
    };
  }
  if (configKey === "accountId" || canonicalEndpointParamKey === "AccountId") {
    return async () => {
      const credentials = typeof config.credentials === "function" ? await config.credentials() : config.credentials;
      const configValue = (credentials == null ? void 0 : credentials.accountId) ?? (credentials == null ? void 0 : credentials.AccountId);
      return configValue;
    };
  }
  if (configKey === "endpoint" || canonicalEndpointParamKey === "endpoint") {
    return async () => {
      const endpoint = await configProvider();
      if (endpoint && typeof endpoint === "object") {
        if ("url" in endpoint) {
          return endpoint.url.href;
        }
        if ("hostname" in endpoint) {
          const { protocol: protocol4, hostname, port, path } = endpoint;
          return `${protocol4}//${hostname}${port ? ":" + port : ""}${path}`;
        }
      }
      return endpoint;
    };
  }
  return configProvider;
};

// node_modules/@smithy/middleware-endpoint/dist-es/adaptors/getEndpointFromConfig.browser.js
var getEndpointFromConfig = async (serviceId) => void 0;

// node_modules/@smithy/querystring-parser/dist-es/index.js
function parseQueryString(querystring) {
  const query = {};
  querystring = querystring.replace(/^\?/, "");
  if (querystring) {
    for (const pair of querystring.split("&")) {
      let [key, value2 = null] = pair.split("=");
      key = decodeURIComponent(key);
      if (value2) {
        value2 = decodeURIComponent(value2);
      }
      if (!(key in query)) {
        query[key] = value2;
      } else if (Array.isArray(query[key])) {
        query[key].push(value2);
      } else {
        query[key] = [query[key], value2];
      }
    }
  }
  return query;
}

// node_modules/@smithy/url-parser/dist-es/index.js
var parseUrl = (url2) => {
  if (typeof url2 === "string") {
    return parseUrl(new URL(url2));
  }
  const { hostname, pathname, port, protocol: protocol4, search } = url2;
  let query;
  if (search) {
    query = parseQueryString(search);
  }
  return {
    hostname,
    port: port ? parseInt(port) : void 0,
    protocol: protocol4,
    path: pathname,
    query
  };
};

// node_modules/@smithy/middleware-endpoint/dist-es/adaptors/toEndpointV1.js
var toEndpointV1 = (endpoint) => {
  if (typeof endpoint === "object") {
    if ("url" in endpoint) {
      return parseUrl(endpoint.url);
    }
    return endpoint;
  }
  return parseUrl(endpoint);
};

// node_modules/@smithy/middleware-endpoint/dist-es/adaptors/getEndpointFromInstructions.js
var getEndpointFromInstructions = async (commandInput, instructionsSupplier, clientConfig, context) => {
  if (!clientConfig.endpoint) {
    let endpointFromConfig;
    if (clientConfig.serviceConfiguredEndpoint) {
      endpointFromConfig = await clientConfig.serviceConfiguredEndpoint();
    } else {
      endpointFromConfig = await getEndpointFromConfig(clientConfig.serviceId);
    }
    if (endpointFromConfig) {
      clientConfig.endpoint = () => Promise.resolve(toEndpointV1(endpointFromConfig));
    }
  }
  const endpointParams = await resolveParams(commandInput, instructionsSupplier, clientConfig);
  if (typeof clientConfig.endpointProvider !== "function") {
    throw new Error("config.endpointProvider is not set.");
  }
  const endpoint = clientConfig.endpointProvider(endpointParams, context);
  return endpoint;
};
var resolveParams = async (commandInput, instructionsSupplier, clientConfig) => {
  var _a5;
  const endpointParams = {};
  const instructions = ((_a5 = instructionsSupplier == null ? void 0 : instructionsSupplier.getEndpointParameterInstructions) == null ? void 0 : _a5.call(instructionsSupplier)) || {};
  for (const [name, instruction] of Object.entries(instructions)) {
    switch (instruction.type) {
      case "staticContextParams":
        endpointParams[name] = instruction.value;
        break;
      case "contextParams":
        endpointParams[name] = commandInput[instruction.name];
        break;
      case "clientContextParams":
      case "builtInParams":
        endpointParams[name] = await createConfigValueProvider(instruction.name, name, clientConfig)();
        break;
      default:
        throw new Error("Unrecognized endpoint parameter instruction: " + JSON.stringify(instruction));
    }
  }
  if (Object.keys(instructions).length === 0) {
    Object.assign(endpointParams, clientConfig);
  }
  if (String(clientConfig.serviceId).toLowerCase() === "s3") {
    await resolveParamsForS3(endpointParams);
  }
  return endpointParams;
};

// node_modules/@smithy/middleware-endpoint/dist-es/endpointMiddleware.js
var endpointMiddleware = ({ config, instructions }) => {
  return (next, context) => async (args) => {
    var _a5, _b, _c2;
    if (config.endpoint) {
      setFeature(context, "ENDPOINT_OVERRIDE", "N");
    }
    const endpoint = await getEndpointFromInstructions(args.input, {
      getEndpointParameterInstructions() {
        return instructions;
      }
    }, { ...config }, context);
    context.endpointV2 = endpoint;
    context.authSchemes = (_a5 = endpoint.properties) == null ? void 0 : _a5.authSchemes;
    const authScheme = (_b = context.authSchemes) == null ? void 0 : _b[0];
    if (authScheme) {
      context["signing_region"] = authScheme.signingRegion;
      context["signing_service"] = authScheme.signingName;
      const smithyContext = getSmithyContext(context);
      const httpAuthOption = (_c2 = smithyContext == null ? void 0 : smithyContext.selectedHttpAuthScheme) == null ? void 0 : _c2.httpAuthOption;
      if (httpAuthOption) {
        httpAuthOption.signingProperties = Object.assign(httpAuthOption.signingProperties || {}, {
          signing_region: authScheme.signingRegion,
          signingRegion: authScheme.signingRegion,
          signing_service: authScheme.signingName,
          signingName: authScheme.signingName,
          signingRegionSet: authScheme.signingRegionSet
        }, authScheme.properties);
      }
    }
    return next({
      ...args
    });
  };
};

// node_modules/@smithy/middleware-endpoint/dist-es/getEndpointPlugin.js
var endpointMiddlewareOptions = {
  step: "serialize",
  tags: ["ENDPOINT_PARAMETERS", "ENDPOINT_V2", "ENDPOINT"],
  name: "endpointV2Middleware",
  override: true,
  relation: "before",
  toMiddleware: serializerMiddlewareOption.name
};
var getEndpointPlugin = (config, instructions) => ({
  applyToStack: (clientStack) => {
    clientStack.addRelativeTo(endpointMiddleware({
      config,
      instructions
    }), endpointMiddlewareOptions);
  }
});

// node_modules/@smithy/middleware-endpoint/dist-es/resolveEndpointConfig.js
var resolveEndpointConfig = (input) => {
  const tls = input.tls ?? true;
  const { endpoint } = input;
  const customEndpointProvider = endpoint != null ? async () => toEndpointV1(await normalizeProvider(endpoint)()) : void 0;
  const isCustomEndpoint = !!endpoint;
  const resolvedConfig = {
    ...input,
    endpoint: customEndpointProvider,
    tls,
    isCustomEndpoint,
    useDualstackEndpoint: normalizeProvider(input.useDualstackEndpoint ?? false),
    useFipsEndpoint: normalizeProvider(input.useFipsEndpoint ?? false)
  };
  let configuredEndpointPromise = void 0;
  resolvedConfig.serviceConfiguredEndpoint = async () => {
    if (input.serviceId && !configuredEndpointPromise) {
      configuredEndpointPromise = getEndpointFromConfig(input.serviceId);
    }
    return configuredEndpointPromise;
  };
  return resolvedConfig;
};

// node_modules/@smithy/util-retry/dist-es/config.js
var RETRY_MODES;
(function(RETRY_MODES2) {
  RETRY_MODES2["STANDARD"] = "standard";
  RETRY_MODES2["ADAPTIVE"] = "adaptive";
})(RETRY_MODES || (RETRY_MODES = {}));
var DEFAULT_MAX_ATTEMPTS = 3;
var DEFAULT_RETRY_MODE = RETRY_MODES.STANDARD;

// node_modules/@smithy/service-error-classification/dist-es/constants.js
var THROTTLING_ERROR_CODES = [
  "BandwidthLimitExceeded",
  "EC2ThrottledException",
  "LimitExceededException",
  "PriorRequestNotComplete",
  "ProvisionedThroughputExceededException",
  "RequestLimitExceeded",
  "RequestThrottled",
  "RequestThrottledException",
  "SlowDown",
  "ThrottledException",
  "Throttling",
  "ThrottlingException",
  "TooManyRequestsException",
  "TransactionInProgressException"
];
var TRANSIENT_ERROR_CODES = ["TimeoutError", "RequestTimeout", "RequestTimeoutException"];
var TRANSIENT_ERROR_STATUS_CODES = [500, 502, 503, 504];
var NODEJS_TIMEOUT_ERROR_CODES = ["ECONNRESET", "ECONNREFUSED", "EPIPE", "ETIMEDOUT"];

// node_modules/@smithy/service-error-classification/dist-es/index.js
var isClockSkewCorrectedError = (error) => {
  var _a5;
  return (_a5 = error.$metadata) == null ? void 0 : _a5.clockSkewCorrected;
};
var isThrottlingError = (error) => {
  var _a5, _b;
  return ((_a5 = error.$metadata) == null ? void 0 : _a5.httpStatusCode) === 429 || THROTTLING_ERROR_CODES.includes(error.name) || ((_b = error.$retryable) == null ? void 0 : _b.throttling) == true;
};
var isTransientError = (error) => {
  var _a5;
  return isClockSkewCorrectedError(error) || TRANSIENT_ERROR_CODES.includes(error.name) || NODEJS_TIMEOUT_ERROR_CODES.includes((error == null ? void 0 : error.code) || "") || TRANSIENT_ERROR_STATUS_CODES.includes(((_a5 = error.$metadata) == null ? void 0 : _a5.httpStatusCode) || 0);
};
var isServerError = (error) => {
  var _a5;
  if (((_a5 = error.$metadata) == null ? void 0 : _a5.httpStatusCode) !== void 0) {
    const statusCode = error.$metadata.httpStatusCode;
    if (500 <= statusCode && statusCode <= 599 && !isTransientError(error)) {
      return true;
    }
    return false;
  }
  return false;
};

// node_modules/@smithy/util-retry/dist-es/DefaultRateLimiter.js
var DefaultRateLimiter = class {
  constructor(options) {
    this.currentCapacity = 0;
    this.enabled = false;
    this.lastMaxRate = 0;
    this.measuredTxRate = 0;
    this.requestCount = 0;
    this.lastTimestamp = 0;
    this.timeWindow = 0;
    this.beta = (options == null ? void 0 : options.beta) ?? 0.7;
    this.minCapacity = (options == null ? void 0 : options.minCapacity) ?? 1;
    this.minFillRate = (options == null ? void 0 : options.minFillRate) ?? 0.5;
    this.scaleConstant = (options == null ? void 0 : options.scaleConstant) ?? 0.4;
    this.smooth = (options == null ? void 0 : options.smooth) ?? 0.8;
    const currentTimeInSeconds = this.getCurrentTimeInSeconds();
    this.lastThrottleTime = currentTimeInSeconds;
    this.lastTxRateBucket = Math.floor(this.getCurrentTimeInSeconds());
    this.fillRate = this.minFillRate;
    this.maxCapacity = this.minCapacity;
  }
  getCurrentTimeInSeconds() {
    return Date.now() / 1e3;
  }
  async getSendToken() {
    return this.acquireTokenBucket(1);
  }
  async acquireTokenBucket(amount) {
    if (!this.enabled) {
      return;
    }
    this.refillTokenBucket();
    if (amount > this.currentCapacity) {
      const delay = (amount - this.currentCapacity) / this.fillRate * 1e3;
      await new Promise((resolve) => setTimeout(resolve, delay));
    }
    this.currentCapacity = this.currentCapacity - amount;
  }
  refillTokenBucket() {
    const timestamp = this.getCurrentTimeInSeconds();
    if (!this.lastTimestamp) {
      this.lastTimestamp = timestamp;
      return;
    }
    const fillAmount = (timestamp - this.lastTimestamp) * this.fillRate;
    this.currentCapacity = Math.min(this.maxCapacity, this.currentCapacity + fillAmount);
    this.lastTimestamp = timestamp;
  }
  updateClientSendingRate(response) {
    let calculatedRate;
    this.updateMeasuredRate();
    if (isThrottlingError(response)) {
      const rateToUse = !this.enabled ? this.measuredTxRate : Math.min(this.measuredTxRate, this.fillRate);
      this.lastMaxRate = rateToUse;
      this.calculateTimeWindow();
      this.lastThrottleTime = this.getCurrentTimeInSeconds();
      calculatedRate = this.cubicThrottle(rateToUse);
      this.enableTokenBucket();
    } else {
      this.calculateTimeWindow();
      calculatedRate = this.cubicSuccess(this.getCurrentTimeInSeconds());
    }
    const newRate = Math.min(calculatedRate, 2 * this.measuredTxRate);
    this.updateTokenBucketRate(newRate);
  }
  calculateTimeWindow() {
    this.timeWindow = this.getPrecise(Math.pow(this.lastMaxRate * (1 - this.beta) / this.scaleConstant, 1 / 3));
  }
  cubicThrottle(rateToUse) {
    return this.getPrecise(rateToUse * this.beta);
  }
  cubicSuccess(timestamp) {
    return this.getPrecise(this.scaleConstant * Math.pow(timestamp - this.lastThrottleTime - this.timeWindow, 3) + this.lastMaxRate);
  }
  enableTokenBucket() {
    this.enabled = true;
  }
  updateTokenBucketRate(newRate) {
    this.refillTokenBucket();
    this.fillRate = Math.max(newRate, this.minFillRate);
    this.maxCapacity = Math.max(newRate, this.minCapacity);
    this.currentCapacity = Math.min(this.currentCapacity, this.maxCapacity);
  }
  updateMeasuredRate() {
    const t2 = this.getCurrentTimeInSeconds();
    const timeBucket = Math.floor(t2 * 2) / 2;
    this.requestCount++;
    if (timeBucket > this.lastTxRateBucket) {
      const currentRate = this.requestCount / (timeBucket - this.lastTxRateBucket);
      this.measuredTxRate = this.getPrecise(currentRate * this.smooth + this.measuredTxRate * (1 - this.smooth));
      this.requestCount = 0;
      this.lastTxRateBucket = timeBucket;
    }
  }
  getPrecise(num) {
    return parseFloat(num.toFixed(8));
  }
};

// node_modules/@smithy/util-retry/dist-es/constants.js
var DEFAULT_RETRY_DELAY_BASE = 100;
var MAXIMUM_RETRY_DELAY = 20 * 1e3;
var THROTTLING_RETRY_DELAY_BASE = 500;
var INITIAL_RETRY_TOKENS = 500;
var RETRY_COST = 5;
var TIMEOUT_RETRY_COST = 10;
var NO_RETRY_INCREMENT = 1;
var INVOCATION_ID_HEADER = "amz-sdk-invocation-id";
var REQUEST_HEADER = "amz-sdk-request";

// node_modules/@smithy/util-retry/dist-es/defaultRetryBackoffStrategy.js
var getDefaultRetryBackoffStrategy = () => {
  let delayBase = DEFAULT_RETRY_DELAY_BASE;
  const computeNextBackoffDelay = (attempts) => {
    return Math.floor(Math.min(MAXIMUM_RETRY_DELAY, Math.random() * 2 ** attempts * delayBase));
  };
  const setDelayBase = (delay) => {
    delayBase = delay;
  };
  return {
    computeNextBackoffDelay,
    setDelayBase
  };
};

// node_modules/@smithy/util-retry/dist-es/defaultRetryToken.js
var createDefaultRetryToken = ({ retryDelay, retryCount, retryCost }) => {
  const getRetryCount = () => retryCount;
  const getRetryDelay = () => Math.min(MAXIMUM_RETRY_DELAY, retryDelay);
  const getRetryCost = () => retryCost;
  return {
    getRetryCount,
    getRetryDelay,
    getRetryCost
  };
};

// node_modules/@smithy/util-retry/dist-es/StandardRetryStrategy.js
var StandardRetryStrategy = class {
  constructor(maxAttempts) {
    this.maxAttempts = maxAttempts;
    this.mode = RETRY_MODES.STANDARD;
    this.capacity = INITIAL_RETRY_TOKENS;
    this.retryBackoffStrategy = getDefaultRetryBackoffStrategy();
    this.maxAttemptsProvider = typeof maxAttempts === "function" ? maxAttempts : async () => maxAttempts;
  }
  async acquireInitialRetryToken(retryTokenScope) {
    return createDefaultRetryToken({
      retryDelay: DEFAULT_RETRY_DELAY_BASE,
      retryCount: 0
    });
  }
  async refreshRetryTokenForRetry(token, errorInfo) {
    const maxAttempts = await this.getMaxAttempts();
    if (this.shouldRetry(token, errorInfo, maxAttempts)) {
      const errorType = errorInfo.errorType;
      this.retryBackoffStrategy.setDelayBase(errorType === "THROTTLING" ? THROTTLING_RETRY_DELAY_BASE : DEFAULT_RETRY_DELAY_BASE);
      const delayFromErrorType = this.retryBackoffStrategy.computeNextBackoffDelay(token.getRetryCount());
      const retryDelay = errorInfo.retryAfterHint ? Math.max(errorInfo.retryAfterHint.getTime() - Date.now() || 0, delayFromErrorType) : delayFromErrorType;
      const capacityCost = this.getCapacityCost(errorType);
      this.capacity -= capacityCost;
      return createDefaultRetryToken({
        retryDelay,
        retryCount: token.getRetryCount() + 1,
        retryCost: capacityCost
      });
    }
    throw new Error("No retry token available");
  }
  recordSuccess(token) {
    this.capacity = Math.max(INITIAL_RETRY_TOKENS, this.capacity + (token.getRetryCost() ?? NO_RETRY_INCREMENT));
  }
  getCapacity() {
    return this.capacity;
  }
  async getMaxAttempts() {
    try {
      return await this.maxAttemptsProvider();
    } catch (error) {
      console.warn(`Max attempts provider could not resolve. Using default of ${DEFAULT_MAX_ATTEMPTS}`);
      return DEFAULT_MAX_ATTEMPTS;
    }
  }
  shouldRetry(tokenToRenew, errorInfo, maxAttempts) {
    const attempts = tokenToRenew.getRetryCount() + 1;
    return attempts < maxAttempts && this.capacity >= this.getCapacityCost(errorInfo.errorType) && this.isRetryableError(errorInfo.errorType);
  }
  getCapacityCost(errorType) {
    return errorType === "TRANSIENT" ? TIMEOUT_RETRY_COST : RETRY_COST;
  }
  isRetryableError(errorType) {
    return errorType === "THROTTLING" || errorType === "TRANSIENT";
  }
};

// node_modules/@smithy/util-retry/dist-es/AdaptiveRetryStrategy.js
var AdaptiveRetryStrategy = class {
  constructor(maxAttemptsProvider, options) {
    this.maxAttemptsProvider = maxAttemptsProvider;
    this.mode = RETRY_MODES.ADAPTIVE;
    const { rateLimiter } = options ?? {};
    this.rateLimiter = rateLimiter ?? new DefaultRateLimiter();
    this.standardRetryStrategy = new StandardRetryStrategy(maxAttemptsProvider);
  }
  async acquireInitialRetryToken(retryTokenScope) {
    await this.rateLimiter.getSendToken();
    return this.standardRetryStrategy.acquireInitialRetryToken(retryTokenScope);
  }
  async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {
    this.rateLimiter.updateClientSendingRate(errorInfo);
    return this.standardRetryStrategy.refreshRetryTokenForRetry(tokenToRenew, errorInfo);
  }
  recordSuccess(token) {
    this.rateLimiter.updateClientSendingRate({});
    this.standardRetryStrategy.recordSuccess(token);
  }
};

// node_modules/uuid/dist/esm-browser/rng.js
var getRandomValues;
var rnds8 = new Uint8Array(16);
function rng() {
  if (!getRandomValues) {
    getRandomValues = typeof crypto !== "undefined" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);
    if (!getRandomValues) {
      throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
    }
  }
  return getRandomValues(rnds8);
}

// node_modules/uuid/dist/esm-browser/regex.js
var regex_default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;

// node_modules/uuid/dist/esm-browser/validate.js
function validate(uuid) {
  return typeof uuid === "string" && regex_default.test(uuid);
}
var validate_default = validate;

// node_modules/uuid/dist/esm-browser/stringify.js
var byteToHex = [];
for (let i11 = 0; i11 < 256; ++i11) {
  byteToHex.push((i11 + 256).toString(16).slice(1));
}
function unsafeStringify(arr, offset2 = 0) {
  return byteToHex[arr[offset2 + 0]] + byteToHex[arr[offset2 + 1]] + byteToHex[arr[offset2 + 2]] + byteToHex[arr[offset2 + 3]] + "-" + byteToHex[arr[offset2 + 4]] + byteToHex[arr[offset2 + 5]] + "-" + byteToHex[arr[offset2 + 6]] + byteToHex[arr[offset2 + 7]] + "-" + byteToHex[arr[offset2 + 8]] + byteToHex[arr[offset2 + 9]] + "-" + byteToHex[arr[offset2 + 10]] + byteToHex[arr[offset2 + 11]] + byteToHex[arr[offset2 + 12]] + byteToHex[arr[offset2 + 13]] + byteToHex[arr[offset2 + 14]] + byteToHex[arr[offset2 + 15]];
}

// node_modules/uuid/dist/esm-browser/parse.js
function parse(uuid) {
  if (!validate_default(uuid)) {
    throw TypeError("Invalid UUID");
  }
  let v11;
  const arr = new Uint8Array(16);
  arr[0] = (v11 = parseInt(uuid.slice(0, 8), 16)) >>> 24;
  arr[1] = v11 >>> 16 & 255;
  arr[2] = v11 >>> 8 & 255;
  arr[3] = v11 & 255;
  arr[4] = (v11 = parseInt(uuid.slice(9, 13), 16)) >>> 8;
  arr[5] = v11 & 255;
  arr[6] = (v11 = parseInt(uuid.slice(14, 18), 16)) >>> 8;
  arr[7] = v11 & 255;
  arr[8] = (v11 = parseInt(uuid.slice(19, 23), 16)) >>> 8;
  arr[9] = v11 & 255;
  arr[10] = (v11 = parseInt(uuid.slice(24, 36), 16)) / 1099511627776 & 255;
  arr[11] = v11 / 4294967296 & 255;
  arr[12] = v11 >>> 24 & 255;
  arr[13] = v11 >>> 16 & 255;
  arr[14] = v11 >>> 8 & 255;
  arr[15] = v11 & 255;
  return arr;
}
var parse_default = parse;

// node_modules/uuid/dist/esm-browser/v35.js
function stringToBytes(str) {
  str = unescape(encodeURIComponent(str));
  const bytes = [];
  for (let i11 = 0; i11 < str.length; ++i11) {
    bytes.push(str.charCodeAt(i11));
  }
  return bytes;
}
var DNS = "6ba7b810-9dad-11d1-80b4-00c04fd430c8";
var URL2 = "6ba7b811-9dad-11d1-80b4-00c04fd430c8";
function v35(name, version2, hashfunc) {
  function generateUUID(value2, namespace, buf, offset2) {
    var _namespace;
    if (typeof value2 === "string") {
      value2 = stringToBytes(value2);
    }
    if (typeof namespace === "string") {
      namespace = parse_default(namespace);
    }
    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {
      throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");
    }
    let bytes = new Uint8Array(16 + value2.length);
    bytes.set(namespace);
    bytes.set(value2, namespace.length);
    bytes = hashfunc(bytes);
    bytes[6] = bytes[6] & 15 | version2;
    bytes[8] = bytes[8] & 63 | 128;
    if (buf) {
      offset2 = offset2 || 0;
      for (let i11 = 0; i11 < 16; ++i11) {
        buf[offset2 + i11] = bytes[i11];
      }
      return buf;
    }
    return unsafeStringify(bytes);
  }
  try {
    generateUUID.name = name;
  } catch (err) {
  }
  generateUUID.DNS = DNS;
  generateUUID.URL = URL2;
  return generateUUID;
}

// node_modules/uuid/dist/esm-browser/md5.js
function md5(bytes) {
  if (typeof bytes === "string") {
    const msg = unescape(encodeURIComponent(bytes));
    bytes = new Uint8Array(msg.length);
    for (let i11 = 0; i11 < msg.length; ++i11) {
      bytes[i11] = msg.charCodeAt(i11);
    }
  }
  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));
}
function md5ToHexEncodedArray(input) {
  const output = [];
  const length32 = input.length * 32;
  const hexTab = "0123456789abcdef";
  for (let i11 = 0; i11 < length32; i11 += 8) {
    const x6 = input[i11 >> 5] >>> i11 % 32 & 255;
    const hex = parseInt(hexTab.charAt(x6 >>> 4 & 15) + hexTab.charAt(x6 & 15), 16);
    output.push(hex);
  }
  return output;
}
function getOutputLength(inputLength8) {
  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;
}
function wordsToMd5(x6, len) {
  x6[len >> 5] |= 128 << len % 32;
  x6[getOutputLength(len) - 1] = len;
  let a15 = 1732584193;
  let b6 = -271733879;
  let c11 = -1732584194;
  let d9 = 271733878;
  for (let i11 = 0; i11 < x6.length; i11 += 16) {
    const olda = a15;
    const oldb = b6;
    const oldc = c11;
    const oldd = d9;
    a15 = md5ff(a15, b6, c11, d9, x6[i11], 7, -680876936);
    d9 = md5ff(d9, a15, b6, c11, x6[i11 + 1], 12, -389564586);
    c11 = md5ff(c11, d9, a15, b6, x6[i11 + 2], 17, 606105819);
    b6 = md5ff(b6, c11, d9, a15, x6[i11 + 3], 22, -1044525330);
    a15 = md5ff(a15, b6, c11, d9, x6[i11 + 4], 7, -176418897);
    d9 = md5ff(d9, a15, b6, c11, x6[i11 + 5], 12, 1200080426);
    c11 = md5ff(c11, d9, a15, b6, x6[i11 + 6], 17, -1473231341);
    b6 = md5ff(b6, c11, d9, a15, x6[i11 + 7], 22, -45705983);
    a15 = md5ff(a15, b6, c11, d9, x6[i11 + 8], 7, 1770035416);
    d9 = md5ff(d9, a15, b6, c11, x6[i11 + 9], 12, -1958414417);
    c11 = md5ff(c11, d9, a15, b6, x6[i11 + 10], 17, -42063);
    b6 = md5ff(b6, c11, d9, a15, x6[i11 + 11], 22, -1990404162);
    a15 = md5ff(a15, b6, c11, d9, x6[i11 + 12], 7, 1804603682);
    d9 = md5ff(d9, a15, b6, c11, x6[i11 + 13], 12, -40341101);
    c11 = md5ff(c11, d9, a15, b6, x6[i11 + 14], 17, -1502002290);
    b6 = md5ff(b6, c11, d9, a15, x6[i11 + 15], 22, 1236535329);
    a15 = md5gg(a15, b6, c11, d9, x6[i11 + 1], 5, -165796510);
    d9 = md5gg(d9, a15, b6, c11, x6[i11 + 6], 9, -1069501632);
    c11 = md5gg(c11, d9, a15, b6, x6[i11 + 11], 14, 643717713);
    b6 = md5gg(b6, c11, d9, a15, x6[i11], 20, -373897302);
    a15 = md5gg(a15, b6, c11, d9, x6[i11 + 5], 5, -701558691);
    d9 = md5gg(d9, a15, b6, c11, x6[i11 + 10], 9, 38016083);
    c11 = md5gg(c11, d9, a15, b6, x6[i11 + 15], 14, -660478335);
    b6 = md5gg(b6, c11, d9, a15, x6[i11 + 4], 20, -405537848);
    a15 = md5gg(a15, b6, c11, d9, x6[i11 + 9], 5, 568446438);
    d9 = md5gg(d9, a15, b6, c11, x6[i11 + 14], 9, -1019803690);
    c11 = md5gg(c11, d9, a15, b6, x6[i11 + 3], 14, -187363961);
    b6 = md5gg(b6, c11, d9, a15, x6[i11 + 8], 20, 1163531501);
    a15 = md5gg(a15, b6, c11, d9, x6[i11 + 13], 5, -1444681467);
    d9 = md5gg(d9, a15, b6, c11, x6[i11 + 2], 9, -51403784);
    c11 = md5gg(c11, d9, a15, b6, x6[i11 + 7], 14, 1735328473);
    b6 = md5gg(b6, c11, d9, a15, x6[i11 + 12], 20, -1926607734);
    a15 = md5hh(a15, b6, c11, d9, x6[i11 + 5], 4, -378558);
    d9 = md5hh(d9, a15, b6, c11, x6[i11 + 8], 11, -2022574463);
    c11 = md5hh(c11, d9, a15, b6, x6[i11 + 11], 16, 1839030562);
    b6 = md5hh(b6, c11, d9, a15, x6[i11 + 14], 23, -35309556);
    a15 = md5hh(a15, b6, c11, d9, x6[i11 + 1], 4, -1530992060);
    d9 = md5hh(d9, a15, b6, c11, x6[i11 + 4], 11, 1272893353);
    c11 = md5hh(c11, d9, a15, b6, x6[i11 + 7], 16, -155497632);
    b6 = md5hh(b6, c11, d9, a15, x6[i11 + 10], 23, -1094730640);
    a15 = md5hh(a15, b6, c11, d9, x6[i11 + 13], 4, 681279174);
    d9 = md5hh(d9, a15, b6, c11, x6[i11], 11, -358537222);
    c11 = md5hh(c11, d9, a15, b6, x6[i11 + 3], 16, -722521979);
    b6 = md5hh(b6, c11, d9, a15, x6[i11 + 6], 23, 76029189);
    a15 = md5hh(a15, b6, c11, d9, x6[i11 + 9], 4, -640364487);
    d9 = md5hh(d9, a15, b6, c11, x6[i11 + 12], 11, -421815835);
    c11 = md5hh(c11, d9, a15, b6, x6[i11 + 15], 16, 530742520);
    b6 = md5hh(b6, c11, d9, a15, x6[i11 + 2], 23, -995338651);
    a15 = md5ii(a15, b6, c11, d9, x6[i11], 6, -198630844);
    d9 = md5ii(d9, a15, b6, c11, x6[i11 + 7], 10, 1126891415);
    c11 = md5ii(c11, d9, a15, b6, x6[i11 + 14], 15, -1416354905);
    b6 = md5ii(b6, c11, d9, a15, x6[i11 + 5], 21, -57434055);
    a15 = md5ii(a15, b6, c11, d9, x6[i11 + 12], 6, 1700485571);
    d9 = md5ii(d9, a15, b6, c11, x6[i11 + 3], 10, -1894986606);
    c11 = md5ii(c11, d9, a15, b6, x6[i11 + 10], 15, -1051523);
    b6 = md5ii(b6, c11, d9, a15, x6[i11 + 1], 21, -2054922799);
    a15 = md5ii(a15, b6, c11, d9, x6[i11 + 8], 6, 1873313359);
    d9 = md5ii(d9, a15, b6, c11, x6[i11 + 15], 10, -30611744);
    c11 = md5ii(c11, d9, a15, b6, x6[i11 + 6], 15, -1560198380);
    b6 = md5ii(b6, c11, d9, a15, x6[i11 + 13], 21, 1309151649);
    a15 = md5ii(a15, b6, c11, d9, x6[i11 + 4], 6, -145523070);
    d9 = md5ii(d9, a15, b6, c11, x6[i11 + 11], 10, -1120210379);
    c11 = md5ii(c11, d9, a15, b6, x6[i11 + 2], 15, 718787259);
    b6 = md5ii(b6, c11, d9, a15, x6[i11 + 9], 21, -343485551);
    a15 = safeAdd(a15, olda);
    b6 = safeAdd(b6, oldb);
    c11 = safeAdd(c11, oldc);
    d9 = safeAdd(d9, oldd);
  }
  return [a15, b6, c11, d9];
}
function bytesToWords(input) {
  if (input.length === 0) {
    return [];
  }
  const length8 = input.length * 8;
  const output = new Uint32Array(getOutputLength(length8));
  for (let i11 = 0; i11 < length8; i11 += 8) {
    output[i11 >> 5] |= (input[i11 / 8] & 255) << i11 % 32;
  }
  return output;
}
function safeAdd(x6, y10) {
  const lsw = (x6 & 65535) + (y10 & 65535);
  const msw = (x6 >> 16) + (y10 >> 16) + (lsw >> 16);
  return msw << 16 | lsw & 65535;
}
function bitRotateLeft(num, cnt) {
  return num << cnt | num >>> 32 - cnt;
}
function md5cmn(q8, a15, b6, x6, s15, t2) {
  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a15, q8), safeAdd(x6, t2)), s15), b6);
}
function md5ff(a15, b6, c11, d9, x6, s15, t2) {
  return md5cmn(b6 & c11 | ~b6 & d9, a15, b6, x6, s15, t2);
}
function md5gg(a15, b6, c11, d9, x6, s15, t2) {
  return md5cmn(b6 & d9 | c11 & ~d9, a15, b6, x6, s15, t2);
}
function md5hh(a15, b6, c11, d9, x6, s15, t2) {
  return md5cmn(b6 ^ c11 ^ d9, a15, b6, x6, s15, t2);
}
function md5ii(a15, b6, c11, d9, x6, s15, t2) {
  return md5cmn(c11 ^ (b6 | ~d9), a15, b6, x6, s15, t2);
}
var md5_default = md5;

// node_modules/uuid/dist/esm-browser/v3.js
var v3 = v35("v3", 48, md5_default);

// node_modules/uuid/dist/esm-browser/native.js
var randomUUID = typeof crypto !== "undefined" && crypto.randomUUID && crypto.randomUUID.bind(crypto);
var native_default = {
  randomUUID
};

// node_modules/uuid/dist/esm-browser/v4.js
function v4(options, buf, offset2) {
  if (native_default.randomUUID && !buf && !options) {
    return native_default.randomUUID();
  }
  options = options || {};
  const rnds = options.random || (options.rng || rng)();
  rnds[6] = rnds[6] & 15 | 64;
  rnds[8] = rnds[8] & 63 | 128;
  if (buf) {
    offset2 = offset2 || 0;
    for (let i11 = 0; i11 < 16; ++i11) {
      buf[offset2 + i11] = rnds[i11];
    }
    return buf;
  }
  return unsafeStringify(rnds);
}
var v4_default = v4;

// node_modules/uuid/dist/esm-browser/sha1.js
function f(s15, x6, y10, z5) {
  switch (s15) {
    case 0:
      return x6 & y10 ^ ~x6 & z5;
    case 1:
      return x6 ^ y10 ^ z5;
    case 2:
      return x6 & y10 ^ x6 & z5 ^ y10 & z5;
    case 3:
      return x6 ^ y10 ^ z5;
  }
}
function ROTL(x6, n11) {
  return x6 << n11 | x6 >>> 32 - n11;
}
function sha1(bytes) {
  const K4 = [1518500249, 1859775393, 2400959708, 3395469782];
  const H8 = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];
  if (typeof bytes === "string") {
    const msg = unescape(encodeURIComponent(bytes));
    bytes = [];
    for (let i11 = 0; i11 < msg.length; ++i11) {
      bytes.push(msg.charCodeAt(i11));
    }
  } else if (!Array.isArray(bytes)) {
    bytes = Array.prototype.slice.call(bytes);
  }
  bytes.push(128);
  const l12 = bytes.length / 4 + 2;
  const N6 = Math.ceil(l12 / 16);
  const M3 = new Array(N6);
  for (let i11 = 0; i11 < N6; ++i11) {
    const arr = new Uint32Array(16);
    for (let j5 = 0; j5 < 16; ++j5) {
      arr[j5] = bytes[i11 * 64 + j5 * 4] << 24 | bytes[i11 * 64 + j5 * 4 + 1] << 16 | bytes[i11 * 64 + j5 * 4 + 2] << 8 | bytes[i11 * 64 + j5 * 4 + 3];
    }
    M3[i11] = arr;
  }
  M3[N6 - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);
  M3[N6 - 1][14] = Math.floor(M3[N6 - 1][14]);
  M3[N6 - 1][15] = (bytes.length - 1) * 8 & 4294967295;
  for (let i11 = 0; i11 < N6; ++i11) {
    const W5 = new Uint32Array(80);
    for (let t2 = 0; t2 < 16; ++t2) {
      W5[t2] = M3[i11][t2];
    }
    for (let t2 = 16; t2 < 80; ++t2) {
      W5[t2] = ROTL(W5[t2 - 3] ^ W5[t2 - 8] ^ W5[t2 - 14] ^ W5[t2 - 16], 1);
    }
    let a15 = H8[0];
    let b6 = H8[1];
    let c11 = H8[2];
    let d9 = H8[3];
    let e9 = H8[4];
    for (let t2 = 0; t2 < 80; ++t2) {
      const s15 = Math.floor(t2 / 20);
      const T7 = ROTL(a15, 5) + f(s15, b6, c11, d9) + e9 + K4[s15] + W5[t2] >>> 0;
      e9 = d9;
      d9 = c11;
      c11 = ROTL(b6, 30) >>> 0;
      b6 = a15;
      a15 = T7;
    }
    H8[0] = H8[0] + a15 >>> 0;
    H8[1] = H8[1] + b6 >>> 0;
    H8[2] = H8[2] + c11 >>> 0;
    H8[3] = H8[3] + d9 >>> 0;
    H8[4] = H8[4] + e9 >>> 0;
  }
  return [H8[0] >> 24 & 255, H8[0] >> 16 & 255, H8[0] >> 8 & 255, H8[0] & 255, H8[1] >> 24 & 255, H8[1] >> 16 & 255, H8[1] >> 8 & 255, H8[1] & 255, H8[2] >> 24 & 255, H8[2] >> 16 & 255, H8[2] >> 8 & 255, H8[2] & 255, H8[3] >> 24 & 255, H8[3] >> 16 & 255, H8[3] >> 8 & 255, H8[3] & 255, H8[4] >> 24 & 255, H8[4] >> 16 & 255, H8[4] >> 8 & 255, H8[4] & 255];
}
var sha1_default = sha1;

// node_modules/uuid/dist/esm-browser/v5.js
var v5 = v35("v5", 80, sha1_default);

// node_modules/@smithy/middleware-retry/dist-es/util.js
var asSdkError = (error) => {
  if (error instanceof Error)
    return error;
  if (error instanceof Object)
    return Object.assign(new Error(), error);
  if (typeof error === "string")
    return new Error(error);
  return new Error(`AWS SDK error wrapper for ${error}`);
};

// node_modules/@smithy/middleware-retry/dist-es/configurations.js
var resolveRetryConfig = (input) => {
  const { retryStrategy } = input;
  const maxAttempts = normalizeProvider(input.maxAttempts ?? DEFAULT_MAX_ATTEMPTS);
  return {
    ...input,
    maxAttempts,
    retryStrategy: async () => {
      if (retryStrategy) {
        return retryStrategy;
      }
      const retryMode = await normalizeProvider(input.retryMode)();
      if (retryMode === RETRY_MODES.ADAPTIVE) {
        return new AdaptiveRetryStrategy(maxAttempts);
      }
      return new StandardRetryStrategy(maxAttempts);
    }
  };
};

// node_modules/@smithy/middleware-stack/dist-es/MiddlewareStack.js
var getAllAliases = (name, aliases) => {
  const _aliases = [];
  if (name) {
    _aliases.push(name);
  }
  if (aliases) {
    for (const alias of aliases) {
      _aliases.push(alias);
    }
  }
  return _aliases;
};
var getMiddlewareNameWithAliases = (name, aliases) => {
  return `${name || "anonymous"}${aliases && aliases.length > 0 ? ` (a.k.a. ${aliases.join(",")})` : ""}`;
};
var constructStack = () => {
  let absoluteEntries = [];
  let relativeEntries = [];
  let identifyOnResolve = false;
  const entriesNameSet = /* @__PURE__ */ new Set();
  const sort = (entries) => entries.sort((a15, b6) => stepWeights[b6.step] - stepWeights[a15.step] || priorityWeights[b6.priority || "normal"] - priorityWeights[a15.priority || "normal"]);
  const removeByName = (toRemove) => {
    let isRemoved = false;
    const filterCb = (entry) => {
      const aliases = getAllAliases(entry.name, entry.aliases);
      if (aliases.includes(toRemove)) {
        isRemoved = true;
        for (const alias of aliases) {
          entriesNameSet.delete(alias);
        }
        return false;
      }
      return true;
    };
    absoluteEntries = absoluteEntries.filter(filterCb);
    relativeEntries = relativeEntries.filter(filterCb);
    return isRemoved;
  };
  const removeByReference = (toRemove) => {
    let isRemoved = false;
    const filterCb = (entry) => {
      if (entry.middleware === toRemove) {
        isRemoved = true;
        for (const alias of getAllAliases(entry.name, entry.aliases)) {
          entriesNameSet.delete(alias);
        }
        return false;
      }
      return true;
    };
    absoluteEntries = absoluteEntries.filter(filterCb);
    relativeEntries = relativeEntries.filter(filterCb);
    return isRemoved;
  };
  const cloneTo = (toStack) => {
    var _a5;
    absoluteEntries.forEach((entry) => {
      toStack.add(entry.middleware, { ...entry });
    });
    relativeEntries.forEach((entry) => {
      toStack.addRelativeTo(entry.middleware, { ...entry });
    });
    (_a5 = toStack.identifyOnResolve) == null ? void 0 : _a5.call(toStack, stack.identifyOnResolve());
    return toStack;
  };
  const expandRelativeMiddlewareList = (from) => {
    const expandedMiddlewareList = [];
    from.before.forEach((entry) => {
      if (entry.before.length === 0 && entry.after.length === 0) {
        expandedMiddlewareList.push(entry);
      } else {
        expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));
      }
    });
    expandedMiddlewareList.push(from);
    from.after.reverse().forEach((entry) => {
      if (entry.before.length === 0 && entry.after.length === 0) {
        expandedMiddlewareList.push(entry);
      } else {
        expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));
      }
    });
    return expandedMiddlewareList;
  };
  const getMiddlewareList = (debug5 = false) => {
    const normalizedAbsoluteEntries = [];
    const normalizedRelativeEntries = [];
    const normalizedEntriesNameMap = {};
    absoluteEntries.forEach((entry) => {
      const normalizedEntry = {
        ...entry,
        before: [],
        after: []
      };
      for (const alias of getAllAliases(normalizedEntry.name, normalizedEntry.aliases)) {
        normalizedEntriesNameMap[alias] = normalizedEntry;
      }
      normalizedAbsoluteEntries.push(normalizedEntry);
    });
    relativeEntries.forEach((entry) => {
      const normalizedEntry = {
        ...entry,
        before: [],
        after: []
      };
      for (const alias of getAllAliases(normalizedEntry.name, normalizedEntry.aliases)) {
        normalizedEntriesNameMap[alias] = normalizedEntry;
      }
      normalizedRelativeEntries.push(normalizedEntry);
    });
    normalizedRelativeEntries.forEach((entry) => {
      if (entry.toMiddleware) {
        const toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];
        if (toMiddleware === void 0) {
          if (debug5) {
            return;
          }
          throw new Error(`${entry.toMiddleware} is not found when adding ${getMiddlewareNameWithAliases(entry.name, entry.aliases)} middleware ${entry.relation} ${entry.toMiddleware}`);
        }
        if (entry.relation === "after") {
          toMiddleware.after.push(entry);
        }
        if (entry.relation === "before") {
          toMiddleware.before.push(entry);
        }
      }
    });
    const mainChain = sort(normalizedAbsoluteEntries).map(expandRelativeMiddlewareList).reduce((wholeList, expandedMiddlewareList) => {
      wholeList.push(...expandedMiddlewareList);
      return wholeList;
    }, []);
    return mainChain;
  };
  const stack = {
    add: (middleware, options = {}) => {
      const { name, override, aliases: _aliases } = options;
      const entry = {
        step: "initialize",
        priority: "normal",
        middleware,
        ...options
      };
      const aliases = getAllAliases(name, _aliases);
      if (aliases.length > 0) {
        if (aliases.some((alias) => entriesNameSet.has(alias))) {
          if (!override)
            throw new Error(`Duplicate middleware name '${getMiddlewareNameWithAliases(name, _aliases)}'`);
          for (const alias of aliases) {
            const toOverrideIndex = absoluteEntries.findIndex((entry2) => {
              var _a5;
              return entry2.name === alias || ((_a5 = entry2.aliases) == null ? void 0 : _a5.some((a15) => a15 === alias));
            });
            if (toOverrideIndex === -1) {
              continue;
            }
            const toOverride = absoluteEntries[toOverrideIndex];
            if (toOverride.step !== entry.step || entry.priority !== toOverride.priority) {
              throw new Error(`"${getMiddlewareNameWithAliases(toOverride.name, toOverride.aliases)}" middleware with ${toOverride.priority} priority in ${toOverride.step} step cannot be overridden by "${getMiddlewareNameWithAliases(name, _aliases)}" middleware with ${entry.priority} priority in ${entry.step} step.`);
            }
            absoluteEntries.splice(toOverrideIndex, 1);
          }
        }
        for (const alias of aliases) {
          entriesNameSet.add(alias);
        }
      }
      absoluteEntries.push(entry);
    },
    addRelativeTo: (middleware, options) => {
      const { name, override, aliases: _aliases } = options;
      const entry = {
        middleware,
        ...options
      };
      const aliases = getAllAliases(name, _aliases);
      if (aliases.length > 0) {
        if (aliases.some((alias) => entriesNameSet.has(alias))) {
          if (!override)
            throw new Error(`Duplicate middleware name '${getMiddlewareNameWithAliases(name, _aliases)}'`);
          for (const alias of aliases) {
            const toOverrideIndex = relativeEntries.findIndex((entry2) => {
              var _a5;
              return entry2.name === alias || ((_a5 = entry2.aliases) == null ? void 0 : _a5.some((a15) => a15 === alias));
            });
            if (toOverrideIndex === -1) {
              continue;
            }
            const toOverride = relativeEntries[toOverrideIndex];
            if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {
              throw new Error(`"${getMiddlewareNameWithAliases(toOverride.name, toOverride.aliases)}" middleware ${toOverride.relation} "${toOverride.toMiddleware}" middleware cannot be overridden by "${getMiddlewareNameWithAliases(name, _aliases)}" middleware ${entry.relation} "${entry.toMiddleware}" middleware.`);
            }
            relativeEntries.splice(toOverrideIndex, 1);
          }
        }
        for (const alias of aliases) {
          entriesNameSet.add(alias);
        }
      }
      relativeEntries.push(entry);
    },
    clone: () => cloneTo(constructStack()),
    use: (plugin) => {
      plugin.applyToStack(stack);
    },
    remove: (toRemove) => {
      if (typeof toRemove === "string")
        return removeByName(toRemove);
      else
        return removeByReference(toRemove);
    },
    removeByTag: (toRemove) => {
      let isRemoved = false;
      const filterCb = (entry) => {
        const { tags, name, aliases: _aliases } = entry;
        if (tags && tags.includes(toRemove)) {
          const aliases = getAllAliases(name, _aliases);
          for (const alias of aliases) {
            entriesNameSet.delete(alias);
          }
          isRemoved = true;
          return false;
        }
        return true;
      };
      absoluteEntries = absoluteEntries.filter(filterCb);
      relativeEntries = relativeEntries.filter(filterCb);
      return isRemoved;
    },
    concat: (from) => {
      var _a5;
      const cloned = cloneTo(constructStack());
      cloned.use(from);
      cloned.identifyOnResolve(identifyOnResolve || cloned.identifyOnResolve() || (((_a5 = from.identifyOnResolve) == null ? void 0 : _a5.call(from)) ?? false));
      return cloned;
    },
    applyToStack: cloneTo,
    identify: () => {
      return getMiddlewareList(true).map((mw) => {
        const step = mw.step ?? mw.relation + " " + mw.toMiddleware;
        return getMiddlewareNameWithAliases(mw.name, mw.aliases) + " - " + step;
      });
    },
    identifyOnResolve(toggle) {
      if (typeof toggle === "boolean")
        identifyOnResolve = toggle;
      return identifyOnResolve;
    },
    resolve: (handler, context) => {
      for (const middleware of getMiddlewareList().map((entry) => entry.middleware).reverse()) {
        handler = middleware(handler, context);
      }
      if (identifyOnResolve) {
        console.log(stack.identify());
      }
      return handler;
    }
  };
  return stack;
};
var stepWeights = {
  initialize: 5,
  serialize: 4,
  build: 3,
  finalizeRequest: 2,
  deserialize: 1
};
var priorityWeights = {
  high: 3,
  normal: 2,
  low: 1
};

// node_modules/@smithy/smithy-client/dist-es/client.js
var Client = class {
  constructor(config) {
    this.config = config;
    this.middlewareStack = constructStack();
  }
  send(command, optionsOrCb, cb) {
    const options = typeof optionsOrCb !== "function" ? optionsOrCb : void 0;
    const callback = typeof optionsOrCb === "function" ? optionsOrCb : cb;
    const useHandlerCache = options === void 0 && this.config.cacheMiddleware === true;
    let handler;
    if (useHandlerCache) {
      if (!this.handlers) {
        this.handlers = /* @__PURE__ */ new WeakMap();
      }
      const handlers = this.handlers;
      if (handlers.has(command.constructor)) {
        handler = handlers.get(command.constructor);
      } else {
        handler = command.resolveMiddleware(this.middlewareStack, this.config, options);
        handlers.set(command.constructor, handler);
      }
    } else {
      delete this.handlers;
      handler = command.resolveMiddleware(this.middlewareStack, this.config, options);
    }
    if (callback) {
      handler(command).then((result) => callback(null, result.output), (err) => callback(err)).catch(() => {
      });
    } else {
      return handler(command).then((result) => result.output);
    }
  }
  destroy() {
    var _a5, _b, _c2;
    (_c2 = (_b = (_a5 = this.config) == null ? void 0 : _a5.requestHandler) == null ? void 0 : _b.destroy) == null ? void 0 : _c2.call(_b);
    delete this.handlers;
  }
};

// node_modules/@smithy/smithy-client/dist-es/command.js
var Command2 = class {
  constructor() {
    this.middlewareStack = constructStack();
  }
  static classBuilder() {
    return new ClassBuilder();
  }
  resolveMiddlewareWithContext(clientStack, configuration, options, { middlewareFn, clientName, commandName, inputFilterSensitiveLog, outputFilterSensitiveLog, smithyContext, additionalContext, CommandCtor }) {
    for (const mw of middlewareFn.bind(this)(CommandCtor, clientStack, configuration, options)) {
      this.middlewareStack.use(mw);
    }
    const stack = clientStack.concat(this.middlewareStack);
    const { logger: logger2 } = configuration;
    const handlerExecutionContext = {
      logger: logger2,
      clientName,
      commandName,
      inputFilterSensitiveLog,
      outputFilterSensitiveLog,
      [SMITHY_CONTEXT_KEY]: {
        commandInstance: this,
        ...smithyContext
      },
      ...additionalContext
    };
    const { requestHandler } = configuration;
    return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);
  }
};
var ClassBuilder = class {
  constructor() {
    this._init = () => {
    };
    this._ep = {};
    this._middlewareFn = () => [];
    this._commandName = "";
    this._clientName = "";
    this._additionalContext = {};
    this._smithyContext = {};
    this._inputFilterSensitiveLog = (_5) => _5;
    this._outputFilterSensitiveLog = (_5) => _5;
    this._serializer = null;
    this._deserializer = null;
  }
  init(cb) {
    this._init = cb;
  }
  ep(endpointParameterInstructions) {
    this._ep = endpointParameterInstructions;
    return this;
  }
  m(middlewareSupplier) {
    this._middlewareFn = middlewareSupplier;
    return this;
  }
  s(service, operation, smithyContext = {}) {
    this._smithyContext = {
      service,
      operation,
      ...smithyContext
    };
    return this;
  }
  c(additionalContext = {}) {
    this._additionalContext = additionalContext;
    return this;
  }
  n(clientName, commandName) {
    this._clientName = clientName;
    this._commandName = commandName;
    return this;
  }
  f(inputFilter = (_5) => _5, outputFilter = (_5) => _5) {
    this._inputFilterSensitiveLog = inputFilter;
    this._outputFilterSensitiveLog = outputFilter;
    return this;
  }
  ser(serializer) {
    this._serializer = serializer;
    return this;
  }
  de(deserializer) {
    this._deserializer = deserializer;
    return this;
  }
  build() {
    const closure = this;
    let CommandRef;
    return CommandRef = class extends Command2 {
      static getEndpointParameterInstructions() {
        return closure._ep;
      }
      constructor(...[input]) {
        super();
        this.serialize = closure._serializer;
        this.deserialize = closure._deserializer;
        this.input = input ?? {};
        closure._init(this);
      }
      resolveMiddleware(stack, configuration, options) {
        return this.resolveMiddlewareWithContext(stack, configuration, options, {
          CommandCtor: CommandRef,
          middlewareFn: closure._middlewareFn,
          clientName: closure._clientName,
          commandName: closure._commandName,
          inputFilterSensitiveLog: closure._inputFilterSensitiveLog,
          outputFilterSensitiveLog: closure._outputFilterSensitiveLog,
          smithyContext: closure._smithyContext,
          additionalContext: closure._additionalContext
        });
      }
    };
  }
};

// node_modules/@smithy/smithy-client/dist-es/constants.js
var SENSITIVE_STRING = "***SensitiveInformation***";

// node_modules/@smithy/smithy-client/dist-es/create-aggregated-client.js
var createAggregatedClient = (commands2, Client2) => {
  for (const command of Object.keys(commands2)) {
    const CommandCtor = commands2[command];
    const methodImpl = async function(args, optionsOrCb, cb) {
      const command2 = new CommandCtor(args);
      if (typeof optionsOrCb === "function") {
        this.send(command2, optionsOrCb);
      } else if (typeof cb === "function") {
        if (typeof optionsOrCb !== "object")
          throw new Error(`Expected http options but got ${typeof optionsOrCb}`);
        this.send(command2, optionsOrCb || {}, cb);
      } else {
        return this.send(command2, optionsOrCb);
      }
    };
    const methodName = (command[0].toLowerCase() + command.slice(1)).replace(/Command$/, "");
    Client2.prototype[methodName] = methodImpl;
  }
};

// node_modules/@smithy/smithy-client/dist-es/parse-utils.js
var expectNumber = (value2) => {
  if (value2 === null || value2 === void 0) {
    return void 0;
  }
  if (typeof value2 === "string") {
    const parsed = parseFloat(value2);
    if (!Number.isNaN(parsed)) {
      if (String(parsed) !== String(value2)) {
        logger.warn(stackTraceWarning(`Expected number but observed string: ${value2}`));
      }
      return parsed;
    }
  }
  if (typeof value2 === "number") {
    return value2;
  }
  throw new TypeError(`Expected number, got ${typeof value2}: ${value2}`);
};
var MAX_FLOAT = Math.ceil(2 ** 127 * (2 - 2 ** -23));
var expectLong = (value2) => {
  if (value2 === null || value2 === void 0) {
    return void 0;
  }
  if (Number.isInteger(value2) && !Number.isNaN(value2)) {
    return value2;
  }
  throw new TypeError(`Expected integer, got ${typeof value2}: ${value2}`);
};
var expectInt32 = (value2) => expectSizedInt(value2, 32);
var expectSizedInt = (value2, size) => {
  const expected = expectLong(value2);
  if (expected !== void 0 && castInt(expected, size) !== expected) {
    throw new TypeError(`Expected ${size}-bit integer, got ${value2}`);
  }
  return expected;
};
var castInt = (value2, size) => {
  switch (size) {
    case 32:
      return Int32Array.of(value2)[0];
    case 16:
      return Int16Array.of(value2)[0];
    case 8:
      return Int8Array.of(value2)[0];
  }
};
var expectNonNull = (value2, location2) => {
  if (value2 === null || value2 === void 0) {
    if (location2) {
      throw new TypeError(`Expected a non-null value for ${location2}`);
    }
    throw new TypeError("Expected a non-null value");
  }
  return value2;
};
var expectObject = (value2) => {
  if (value2 === null || value2 === void 0) {
    return void 0;
  }
  if (typeof value2 === "object" && !Array.isArray(value2)) {
    return value2;
  }
  const receivedType = Array.isArray(value2) ? "array" : typeof value2;
  throw new TypeError(`Expected object, got ${receivedType}: ${value2}`);
};
var expectString = (value2) => {
  if (value2 === null || value2 === void 0) {
    return void 0;
  }
  if (typeof value2 === "string") {
    return value2;
  }
  if (["boolean", "number", "bigint"].includes(typeof value2)) {
    logger.warn(stackTraceWarning(`Expected string, got ${typeof value2}: ${value2}`));
    return String(value2);
  }
  throw new TypeError(`Expected string, got ${typeof value2}: ${value2}`);
};
var expectUnion = (value2) => {
  if (value2 === null || value2 === void 0) {
    return void 0;
  }
  const asObject = expectObject(value2);
  const setKeys = Object.entries(asObject).filter(([, v11]) => v11 != null).map(([k8]) => k8);
  if (setKeys.length === 0) {
    throw new TypeError(`Unions must have exactly one non-null member. None were found.`);
  }
  if (setKeys.length > 1) {
    throw new TypeError(`Unions must have exactly one non-null member. Keys ${setKeys} were not null.`);
  }
  return asObject;
};
var limitedParseDouble = (value2) => {
  if (typeof value2 == "string") {
    return parseFloatString(value2);
  }
  return expectNumber(value2);
};
var parseFloatString = (value2) => {
  switch (value2) {
    case "NaN":
      return NaN;
    case "Infinity":
      return Infinity;
    case "-Infinity":
      return -Infinity;
    default:
      throw new Error(`Unable to parse float value: ${value2}`);
  }
};
var stackTraceWarning = (message) => {
  return String(new TypeError(message).stack || message).split("\n").slice(0, 5).filter((s15) => !s15.includes("stackTraceWarning")).join("\n");
};
var logger = {
  warn: console.warn
};

// node_modules/@smithy/smithy-client/dist-es/date-utils.js
var RFC3339 = new RegExp(/^(\d{4})-(\d{2})-(\d{2})[tT](\d{2}):(\d{2}):(\d{2})(?:\.(\d+))?[zZ]$/);
var RFC3339_WITH_OFFSET = new RegExp(/^(\d{4})-(\d{2})-(\d{2})[tT](\d{2}):(\d{2}):(\d{2})(?:\.(\d+))?(([-+]\d{2}\:\d{2})|[zZ])$/);
var IMF_FIXDATE = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\d{2}) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\d{4}) (\d{1,2}):(\d{2}):(\d{2})(?:\.(\d+))? GMT$/);
var RFC_850_DATE = new RegExp(/^(?:Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\d{2})-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\d{2}) (\d{1,2}):(\d{2}):(\d{2})(?:\.(\d+))? GMT$/);
var ASC_TIME = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( [1-9]|\d{2}) (\d{1,2}):(\d{2}):(\d{2})(?:\.(\d+))? (\d{4})$/);
var FIFTY_YEARS_IN_MILLIS = 50 * 365 * 24 * 60 * 60 * 1e3;

// node_modules/@smithy/smithy-client/dist-es/exceptions.js
var ServiceException = class _ServiceException extends Error {
  constructor(options) {
    super(options.message);
    Object.setPrototypeOf(this, _ServiceException.prototype);
    this.name = options.name;
    this.$fault = options.$fault;
    this.$metadata = options.$metadata;
  }
};
var decorateServiceException = (exception, additions = {}) => {
  Object.entries(additions).filter(([, v11]) => v11 !== void 0).forEach(([k8, v11]) => {
    if (exception[k8] == void 0 || exception[k8] === "") {
      exception[k8] = v11;
    }
  });
  const message = exception.message || exception.Message || "UnknownError";
  exception.message = message;
  delete exception.Message;
  return exception;
};

// node_modules/@smithy/smithy-client/dist-es/default-error-handler.js
var throwDefaultError = ({ output, parsedBody, exceptionCtor, errorCode }) => {
  const $metadata = deserializeMetadata(output);
  const statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : void 0;
  const response = new exceptionCtor({
    name: (parsedBody == null ? void 0 : parsedBody.code) || (parsedBody == null ? void 0 : parsedBody.Code) || errorCode || statusCode || "UnknownError",
    $fault: "client",
    $metadata
  });
  throw decorateServiceException(response, parsedBody);
};
var withBaseException = (ExceptionCtor) => {
  return ({ output, parsedBody, errorCode }) => {
    throwDefaultError({ output, parsedBody, exceptionCtor: ExceptionCtor, errorCode });
  };
};
var deserializeMetadata = (output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
});

// node_modules/@smithy/smithy-client/dist-es/defaults-mode.js
var loadConfigsForDefaultMode = (mode) => {
  switch (mode) {
    case "standard":
      return {
        retryMode: "standard",
        connectionTimeout: 3100
      };
    case "in-region":
      return {
        retryMode: "standard",
        connectionTimeout: 1100
      };
    case "cross-region":
      return {
        retryMode: "standard",
        connectionTimeout: 3100
      };
    case "mobile":
      return {
        retryMode: "standard",
        connectionTimeout: 3e4
      };
    default:
      return {};
  }
};

// node_modules/@smithy/smithy-client/dist-es/extensions/checksum.js
var getChecksumConfiguration2 = (runtimeConfig) => {
  const checksumAlgorithms = [];
  for (const id in AlgorithmId) {
    const algorithmId = AlgorithmId[id];
    if (runtimeConfig[algorithmId] === void 0) {
      continue;
    }
    checksumAlgorithms.push({
      algorithmId: () => algorithmId,
      checksumConstructor: () => runtimeConfig[algorithmId]
    });
  }
  return {
    _checksumAlgorithms: checksumAlgorithms,
    addChecksumAlgorithm(algo) {
      this._checksumAlgorithms.push(algo);
    },
    checksumAlgorithms() {
      return this._checksumAlgorithms;
    }
  };
};
var resolveChecksumRuntimeConfig2 = (clientConfig) => {
  const runtimeConfig = {};
  clientConfig.checksumAlgorithms().forEach((checksumAlgorithm) => {
    runtimeConfig[checksumAlgorithm.algorithmId()] = checksumAlgorithm.checksumConstructor();
  });
  return runtimeConfig;
};

// node_modules/@smithy/smithy-client/dist-es/extensions/retry.js
var getRetryConfiguration = (runtimeConfig) => {
  let _retryStrategy = runtimeConfig.retryStrategy;
  return {
    setRetryStrategy(retryStrategy) {
      _retryStrategy = retryStrategy;
    },
    retryStrategy() {
      return _retryStrategy;
    }
  };
};
var resolveRetryRuntimeConfig = (retryStrategyConfiguration) => {
  const runtimeConfig = {};
  runtimeConfig.retryStrategy = retryStrategyConfiguration.retryStrategy();
  return runtimeConfig;
};

// node_modules/@smithy/smithy-client/dist-es/extensions/defaultExtensionConfiguration.js
var getDefaultExtensionConfiguration = (runtimeConfig) => {
  return {
    ...getChecksumConfiguration2(runtimeConfig),
    ...getRetryConfiguration(runtimeConfig)
  };
};
var resolveDefaultRuntimeConfig = (config) => {
  return {
    ...resolveChecksumRuntimeConfig2(config),
    ...resolveRetryRuntimeConfig(config)
  };
};

// node_modules/@smithy/smithy-client/dist-es/lazy-json.js
var StringWrapper = function() {
  const Class = Object.getPrototypeOf(this).constructor;
  const Constructor = Function.bind.apply(String, [null, ...arguments]);
  const instance = new Constructor();
  Object.setPrototypeOf(instance, Class.prototype);
  return instance;
};
StringWrapper.prototype = Object.create(String.prototype, {
  constructor: {
    value: StringWrapper,
    enumerable: false,
    writable: true,
    configurable: true
  }
});
Object.setPrototypeOf(StringWrapper, String);

// node_modules/@smithy/smithy-client/dist-es/NoOpLogger.js
var NoOpLogger = class {
  trace() {
  }
  debug() {
  }
  info() {
  }
  warn() {
  }
  error() {
  }
};

// node_modules/@smithy/smithy-client/dist-es/object-mapping.js
function map(arg0, arg1, arg2) {
  let target;
  let filter;
  let instructions;
  if (typeof arg1 === "undefined" && typeof arg2 === "undefined") {
    target = {};
    instructions = arg0;
  } else {
    target = arg0;
    if (typeof arg1 === "function") {
      filter = arg1;
      instructions = arg2;
      return mapWithFilter(target, filter, instructions);
    } else {
      instructions = arg1;
    }
  }
  for (const key of Object.keys(instructions)) {
    if (!Array.isArray(instructions[key])) {
      target[key] = instructions[key];
      continue;
    }
    applyInstruction(target, null, instructions, key);
  }
  return target;
}
var take = (source, instructions) => {
  const out = {};
  for (const key in instructions) {
    applyInstruction(out, source, instructions, key);
  }
  return out;
};
var mapWithFilter = (target, filter, instructions) => {
  return map(target, Object.entries(instructions).reduce((_instructions, [key, value2]) => {
    if (Array.isArray(value2)) {
      _instructions[key] = value2;
    } else {
      if (typeof value2 === "function") {
        _instructions[key] = [filter, value2()];
      } else {
        _instructions[key] = [filter, value2];
      }
    }
    return _instructions;
  }, {}));
};
var applyInstruction = (target, source, instructions, targetKey) => {
  if (source !== null) {
    let instruction = instructions[targetKey];
    if (typeof instruction === "function") {
      instruction = [, instruction];
    }
    const [filter2 = nonNullish, valueFn = pass, sourceKey = targetKey] = instruction;
    if (typeof filter2 === "function" && filter2(source[sourceKey]) || typeof filter2 !== "function" && !!filter2) {
      target[targetKey] = valueFn(source[sourceKey]);
    }
    return;
  }
  let [filter, value2] = instructions[targetKey];
  if (typeof value2 === "function") {
    let _value;
    const defaultFilterPassed = filter === void 0 && (_value = value2()) != null;
    const customFilterPassed = typeof filter === "function" && !!filter(void 0) || typeof filter !== "function" && !!filter;
    if (defaultFilterPassed) {
      target[targetKey] = _value;
    } else if (customFilterPassed) {
      target[targetKey] = value2();
    }
  } else {
    const defaultFilterPassed = filter === void 0 && value2 != null;
    const customFilterPassed = typeof filter === "function" && !!filter(value2) || typeof filter !== "function" && !!filter;
    if (defaultFilterPassed || customFilterPassed) {
      target[targetKey] = value2;
    }
  }
};
var nonNullish = (_5) => _5 != null;
var pass = (_5) => _5;

// node_modules/@smithy/smithy-client/dist-es/ser-utils.js
var serializeFloat = (value2) => {
  if (value2 !== value2) {
    return "NaN";
  }
  switch (value2) {
    case Infinity:
      return "Infinity";
    case -Infinity:
      return "-Infinity";
    default:
      return value2;
  }
};

// node_modules/@smithy/smithy-client/dist-es/serde-json.js
var _json = (obj) => {
  if (obj == null) {
    return {};
  }
  if (Array.isArray(obj)) {
    return obj.filter((_5) => _5 != null).map(_json);
  }
  if (typeof obj === "object") {
    const target = {};
    for (const key of Object.keys(obj)) {
      if (obj[key] == null) {
        continue;
      }
      target[key] = _json(obj[key]);
    }
    return target;
  }
  return obj;
};

// node_modules/@smithy/middleware-retry/dist-es/isStreamingPayload/isStreamingPayload.browser.js
var isStreamingPayload = (request) => (request == null ? void 0 : request.body) instanceof ReadableStream;

// node_modules/@smithy/middleware-retry/dist-es/retryMiddleware.js
var retryMiddleware = (options) => (next, context) => async (args) => {
  var _a5;
  let retryStrategy = await options.retryStrategy();
  const maxAttempts = await options.maxAttempts();
  if (isRetryStrategyV2(retryStrategy)) {
    retryStrategy = retryStrategy;
    let retryToken = await retryStrategy.acquireInitialRetryToken(context["partition_id"]);
    let lastError = new Error();
    let attempts = 0;
    let totalRetryDelay = 0;
    const { request } = args;
    const isRequest = HttpRequest.isInstance(request);
    if (isRequest) {
      request.headers[INVOCATION_ID_HEADER] = v4_default();
    }
    while (true) {
      try {
        if (isRequest) {
          request.headers[REQUEST_HEADER] = `attempt=${attempts + 1}; max=${maxAttempts}`;
        }
        const { response, output } = await next(args);
        retryStrategy.recordSuccess(retryToken);
        output.$metadata.attempts = attempts + 1;
        output.$metadata.totalRetryDelay = totalRetryDelay;
        return { response, output };
      } catch (e9) {
        const retryErrorInfo = getRetryErrorInfo(e9);
        lastError = asSdkError(e9);
        if (isRequest && isStreamingPayload(request)) {
          (_a5 = context.logger instanceof NoOpLogger ? console : context.logger) == null ? void 0 : _a5.warn("An error was encountered in a non-retryable streaming request.");
          throw lastError;
        }
        try {
          retryToken = await retryStrategy.refreshRetryTokenForRetry(retryToken, retryErrorInfo);
        } catch (refreshError) {
          if (!lastError.$metadata) {
            lastError.$metadata = {};
          }
          lastError.$metadata.attempts = attempts + 1;
          lastError.$metadata.totalRetryDelay = totalRetryDelay;
          throw lastError;
        }
        attempts = retryToken.getRetryCount();
        const delay = retryToken.getRetryDelay();
        totalRetryDelay += delay;
        await new Promise((resolve) => setTimeout(resolve, delay));
      }
    }
  } else {
    retryStrategy = retryStrategy;
    if (retryStrategy == null ? void 0 : retryStrategy.mode)
      context.userAgent = [...context.userAgent || [], ["cfg/retry-mode", retryStrategy.mode]];
    return retryStrategy.retry(next, args);
  }
};
var isRetryStrategyV2 = (retryStrategy) => typeof retryStrategy.acquireInitialRetryToken !== "undefined" && typeof retryStrategy.refreshRetryTokenForRetry !== "undefined" && typeof retryStrategy.recordSuccess !== "undefined";
var getRetryErrorInfo = (error) => {
  const errorInfo = {
    error,
    errorType: getRetryErrorType(error)
  };
  const retryAfterHint = getRetryAfterHint(error.$response);
  if (retryAfterHint) {
    errorInfo.retryAfterHint = retryAfterHint;
  }
  return errorInfo;
};
var getRetryErrorType = (error) => {
  if (isThrottlingError(error))
    return "THROTTLING";
  if (isTransientError(error))
    return "TRANSIENT";
  if (isServerError(error))
    return "SERVER_ERROR";
  return "CLIENT_ERROR";
};
var retryMiddlewareOptions = {
  name: "retryMiddleware",
  tags: ["RETRY"],
  step: "finalizeRequest",
  priority: "high",
  override: true
};
var getRetryPlugin = (options) => ({
  applyToStack: (clientStack) => {
    clientStack.add(retryMiddleware(options), retryMiddlewareOptions);
  }
});
var getRetryAfterHint = (response) => {
  if (!HttpResponse.isInstance(response))
    return;
  const retryAfterHeaderName = Object.keys(response.headers).find((key) => key.toLowerCase() === "retry-after");
  if (!retryAfterHeaderName)
    return;
  const retryAfter = response.headers[retryAfterHeaderName];
  const retryAfterSeconds = Number(retryAfter);
  if (!Number.isNaN(retryAfterSeconds))
    return new Date(retryAfterSeconds * 1e3);
  const retryAfterDate = new Date(retryAfter);
  return retryAfterDate;
};

// node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getDateHeader.js
var getDateHeader = (response) => {
  var _a5, _b;
  return HttpResponse.isInstance(response) ? ((_a5 = response.headers) == null ? void 0 : _a5.date) ?? ((_b = response.headers) == null ? void 0 : _b.Date) : void 0;
};

// node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getSkewCorrectedDate.js
var getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);

// node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/isClockSkewed.js
var isClockSkewed = (clockTime, systemClockOffset) => Math.abs(getSkewCorrectedDate(systemClockOffset).getTime() - clockTime) >= 3e5;

// node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getUpdatedSystemClockOffset.js
var getUpdatedSystemClockOffset = (clockTime, currentSystemClockOffset) => {
  const clockTimeInMs = Date.parse(clockTime);
  if (isClockSkewed(clockTimeInMs, currentSystemClockOffset)) {
    return clockTimeInMs - Date.now();
  }
  return currentSystemClockOffset;
};

// node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/AwsSdkSigV4Signer.js
var throwSigningPropertyError = (name, property) => {
  if (!property) {
    throw new Error(`Property \`${name}\` is not resolved for AWS SDK SigV4Auth`);
  }
  return property;
};
var validateSigningProperties = async (signingProperties) => {
  var _a5, _b, _c2;
  const context = throwSigningPropertyError("context", signingProperties.context);
  const config = throwSigningPropertyError("config", signingProperties.config);
  const authScheme = (_c2 = (_b = (_a5 = context.endpointV2) == null ? void 0 : _a5.properties) == null ? void 0 : _b.authSchemes) == null ? void 0 : _c2[0];
  const signerFunction = throwSigningPropertyError("signer", config.signer);
  const signer = await signerFunction(authScheme);
  const signingRegion = signingProperties == null ? void 0 : signingProperties.signingRegion;
  const signingName = signingProperties == null ? void 0 : signingProperties.signingName;
  return {
    config,
    signer,
    signingRegion,
    signingName
  };
};
var AwsSdkSigV4Signer = class {
  async sign(httpRequest, identity, signingProperties) {
    if (!HttpRequest.isInstance(httpRequest)) {
      throw new Error("The request is not an instance of `HttpRequest` and cannot be signed");
    }
    const { config, signer, signingRegion, signingName } = await validateSigningProperties(signingProperties);
    const signedRequest = await signer.sign(httpRequest, {
      signingDate: getSkewCorrectedDate(config.systemClockOffset),
      signingRegion,
      signingService: signingName
    });
    return signedRequest;
  }
  errorHandler(signingProperties) {
    return (error) => {
      const serverTime = error.ServerTime ?? getDateHeader(error.$response);
      if (serverTime) {
        const config = throwSigningPropertyError("config", signingProperties.config);
        const initialSystemClockOffset = config.systemClockOffset;
        config.systemClockOffset = getUpdatedSystemClockOffset(serverTime, config.systemClockOffset);
        const clockSkewCorrected = config.systemClockOffset !== initialSystemClockOffset;
        if (clockSkewCorrected && error.$metadata) {
          error.$metadata.clockSkewCorrected = true;
        }
      }
      throw error;
    };
  }
  successHandler(httpResponse, signingProperties) {
    const dateHeader = getDateHeader(httpResponse);
    if (dateHeader) {
      const config = throwSigningPropertyError("config", signingProperties.config);
      config.systemClockOffset = getUpdatedSystemClockOffset(dateHeader, config.systemClockOffset);
    }
  }
};

// node_modules/@smithy/signature-v4/dist-es/constants.js
var ALGORITHM_QUERY_PARAM = "X-Amz-Algorithm";
var CREDENTIAL_QUERY_PARAM = "X-Amz-Credential";
var AMZ_DATE_QUERY_PARAM = "X-Amz-Date";
var SIGNED_HEADERS_QUERY_PARAM = "X-Amz-SignedHeaders";
var EXPIRES_QUERY_PARAM = "X-Amz-Expires";
var SIGNATURE_QUERY_PARAM = "X-Amz-Signature";
var TOKEN_QUERY_PARAM = "X-Amz-Security-Token";
var AUTH_HEADER = "authorization";
var AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();
var DATE_HEADER = "date";
var GENERATED_HEADERS = [AUTH_HEADER, AMZ_DATE_HEADER, DATE_HEADER];
var SIGNATURE_HEADER = SIGNATURE_QUERY_PARAM.toLowerCase();
var SHA256_HEADER = "x-amz-content-sha256";
var TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();
var ALWAYS_UNSIGNABLE_HEADERS = {
  authorization: true,
  "cache-control": true,
  connection: true,
  expect: true,
  from: true,
  "keep-alive": true,
  "max-forwards": true,
  pragma: true,
  referer: true,
  te: true,
  trailer: true,
  "transfer-encoding": true,
  upgrade: true,
  "user-agent": true,
  "x-amzn-trace-id": true
};
var PROXY_HEADER_PATTERN = /^proxy-/;
var SEC_HEADER_PATTERN = /^sec-/;
var ALGORITHM_IDENTIFIER = "AWS4-HMAC-SHA256";
var EVENT_ALGORITHM_IDENTIFIER = "AWS4-HMAC-SHA256-PAYLOAD";
var UNSIGNED_PAYLOAD = "UNSIGNED-PAYLOAD";
var MAX_CACHE_SIZE = 50;
var KEY_TYPE_IDENTIFIER = "aws4_request";
var MAX_PRESIGNED_TTL = 60 * 60 * 24 * 7;

// node_modules/@smithy/signature-v4/dist-es/credentialDerivation.js
var signingKeyCache = {};
var cacheQueue = [];
var createScope = (shortDate, region, service) => `${shortDate}/${region}/${service}/${KEY_TYPE_IDENTIFIER}`;
var getSigningKey = async (sha256Constructor, credentials, shortDate, region, service) => {
  const credsHash = await hmac(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId);
  const cacheKey = `${shortDate}:${region}:${service}:${toHex(credsHash)}:${credentials.sessionToken}`;
  if (cacheKey in signingKeyCache) {
    return signingKeyCache[cacheKey];
  }
  cacheQueue.push(cacheKey);
  while (cacheQueue.length > MAX_CACHE_SIZE) {
    delete signingKeyCache[cacheQueue.shift()];
  }
  let key = `AWS4${credentials.secretAccessKey}`;
  for (const signable of [shortDate, region, service, KEY_TYPE_IDENTIFIER]) {
    key = await hmac(sha256Constructor, key, signable);
  }
  return signingKeyCache[cacheKey] = key;
};
var hmac = (ctor, secret, data) => {
  const hash = new ctor(secret);
  hash.update(toUint8Array(data));
  return hash.digest();
};

// node_modules/@smithy/signature-v4/dist-es/getCanonicalHeaders.js
var getCanonicalHeaders = ({ headers }, unsignableHeaders, signableHeaders) => {
  const canonical = {};
  for (const headerName of Object.keys(headers).sort()) {
    if (headers[headerName] == void 0) {
      continue;
    }
    const canonicalHeaderName = headerName.toLowerCase();
    if (canonicalHeaderName in ALWAYS_UNSIGNABLE_HEADERS || (unsignableHeaders == null ? void 0 : unsignableHeaders.has(canonicalHeaderName)) || PROXY_HEADER_PATTERN.test(canonicalHeaderName) || SEC_HEADER_PATTERN.test(canonicalHeaderName)) {
      if (!signableHeaders || signableHeaders && !signableHeaders.has(canonicalHeaderName)) {
        continue;
      }
    }
    canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\s+/g, " ");
  }
  return canonical;
};

// node_modules/@smithy/signature-v4/dist-es/getCanonicalQuery.js
var getCanonicalQuery = ({ query = {} }) => {
  const keys = [];
  const serialized = {};
  for (const key of Object.keys(query)) {
    if (key.toLowerCase() === SIGNATURE_HEADER) {
      continue;
    }
    const encodedKey = escapeUri(key);
    keys.push(encodedKey);
    const value2 = query[key];
    if (typeof value2 === "string") {
      serialized[encodedKey] = `${encodedKey}=${escapeUri(value2)}`;
    } else if (Array.isArray(value2)) {
      serialized[encodedKey] = value2.slice(0).reduce((encoded, value3) => encoded.concat([`${encodedKey}=${escapeUri(value3)}`]), []).sort().join("&");
    }
  }
  return keys.sort().map((key) => serialized[key]).filter((serialized2) => serialized2).join("&");
};

// node_modules/@smithy/is-array-buffer/dist-es/index.js
var isArrayBuffer = (arg) => typeof ArrayBuffer === "function" && arg instanceof ArrayBuffer || Object.prototype.toString.call(arg) === "[object ArrayBuffer]";

// node_modules/@smithy/signature-v4/dist-es/getPayloadHash.js
var getPayloadHash = async ({ headers, body }, hashConstructor) => {
  for (const headerName of Object.keys(headers)) {
    if (headerName.toLowerCase() === SHA256_HEADER) {
      return headers[headerName];
    }
  }
  if (body == void 0) {
    return "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855";
  } else if (typeof body === "string" || ArrayBuffer.isView(body) || isArrayBuffer(body)) {
    const hashCtor = new hashConstructor();
    hashCtor.update(toUint8Array(body));
    return toHex(await hashCtor.digest());
  }
  return UNSIGNED_PAYLOAD;
};

// node_modules/@smithy/signature-v4/dist-es/HeaderFormatter.js
var HeaderFormatter = class {
  format(headers) {
    const chunks = [];
    for (const headerName of Object.keys(headers)) {
      const bytes = fromUtf8(headerName);
      chunks.push(Uint8Array.from([bytes.byteLength]), bytes, this.formatHeaderValue(headers[headerName]));
    }
    const out = new Uint8Array(chunks.reduce((carry, bytes) => carry + bytes.byteLength, 0));
    let position = 0;
    for (const chunk of chunks) {
      out.set(chunk, position);
      position += chunk.byteLength;
    }
    return out;
  }
  formatHeaderValue(header) {
    switch (header.type) {
      case "boolean":
        return Uint8Array.from([header.value ? 0 : 1]);
      case "byte":
        return Uint8Array.from([2, header.value]);
      case "short":
        const shortView = new DataView(new ArrayBuffer(3));
        shortView.setUint8(0, 3);
        shortView.setInt16(1, header.value, false);
        return new Uint8Array(shortView.buffer);
      case "integer":
        const intView = new DataView(new ArrayBuffer(5));
        intView.setUint8(0, 4);
        intView.setInt32(1, header.value, false);
        return new Uint8Array(intView.buffer);
      case "long":
        const longBytes = new Uint8Array(9);
        longBytes[0] = 5;
        longBytes.set(header.value.bytes, 1);
        return longBytes;
      case "binary":
        const binView = new DataView(new ArrayBuffer(3 + header.value.byteLength));
        binView.setUint8(0, 6);
        binView.setUint16(1, header.value.byteLength, false);
        const binBytes = new Uint8Array(binView.buffer);
        binBytes.set(header.value, 3);
        return binBytes;
      case "string":
        const utf8Bytes = fromUtf8(header.value);
        const strView = new DataView(new ArrayBuffer(3 + utf8Bytes.byteLength));
        strView.setUint8(0, 7);
        strView.setUint16(1, utf8Bytes.byteLength, false);
        const strBytes = new Uint8Array(strView.buffer);
        strBytes.set(utf8Bytes, 3);
        return strBytes;
      case "timestamp":
        const tsBytes = new Uint8Array(9);
        tsBytes[0] = 8;
        tsBytes.set(Int64.fromNumber(header.value.valueOf()).bytes, 1);
        return tsBytes;
      case "uuid":
        if (!UUID_PATTERN.test(header.value)) {
          throw new Error(`Invalid UUID received: ${header.value}`);
        }
        const uuidBytes = new Uint8Array(17);
        uuidBytes[0] = 9;
        uuidBytes.set(fromHex(header.value.replace(/\-/g, "")), 1);
        return uuidBytes;
    }
  }
};
var HEADER_VALUE_TYPE;
(function(HEADER_VALUE_TYPE3) {
  HEADER_VALUE_TYPE3[HEADER_VALUE_TYPE3["boolTrue"] = 0] = "boolTrue";
  HEADER_VALUE_TYPE3[HEADER_VALUE_TYPE3["boolFalse"] = 1] = "boolFalse";
  HEADER_VALUE_TYPE3[HEADER_VALUE_TYPE3["byte"] = 2] = "byte";
  HEADER_VALUE_TYPE3[HEADER_VALUE_TYPE3["short"] = 3] = "short";
  HEADER_VALUE_TYPE3[HEADER_VALUE_TYPE3["integer"] = 4] = "integer";
  HEADER_VALUE_TYPE3[HEADER_VALUE_TYPE3["long"] = 5] = "long";
  HEADER_VALUE_TYPE3[HEADER_VALUE_TYPE3["byteArray"] = 6] = "byteArray";
  HEADER_VALUE_TYPE3[HEADER_VALUE_TYPE3["string"] = 7] = "string";
  HEADER_VALUE_TYPE3[HEADER_VALUE_TYPE3["timestamp"] = 8] = "timestamp";
  HEADER_VALUE_TYPE3[HEADER_VALUE_TYPE3["uuid"] = 9] = "uuid";
})(HEADER_VALUE_TYPE || (HEADER_VALUE_TYPE = {}));
var UUID_PATTERN = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;
var Int64 = class _Int64 {
  constructor(bytes) {
    this.bytes = bytes;
    if (bytes.byteLength !== 8) {
      throw new Error("Int64 buffers must be exactly 8 bytes");
    }
  }
  static fromNumber(number) {
    if (number > 9223372036854776e3 || number < -9223372036854776e3) {
      throw new Error(`${number} is too large (or, if negative, too small) to represent as an Int64`);
    }
    const bytes = new Uint8Array(8);
    for (let i11 = 7, remaining = Math.abs(Math.round(number)); i11 > -1 && remaining > 0; i11--, remaining /= 256) {
      bytes[i11] = remaining;
    }
    if (number < 0) {
      negate(bytes);
    }
    return new _Int64(bytes);
  }
  valueOf() {
    const bytes = this.bytes.slice(0);
    const negative = bytes[0] & 128;
    if (negative) {
      negate(bytes);
    }
    return parseInt(toHex(bytes), 16) * (negative ? -1 : 1);
  }
  toString() {
    return String(this.valueOf());
  }
};
function negate(bytes) {
  for (let i11 = 0; i11 < 8; i11++) {
    bytes[i11] ^= 255;
  }
  for (let i11 = 7; i11 > -1; i11--) {
    bytes[i11]++;
    if (bytes[i11] !== 0)
      break;
  }
}

// node_modules/@smithy/signature-v4/dist-es/headerUtil.js
var hasHeader = (soughtHeader, headers) => {
  soughtHeader = soughtHeader.toLowerCase();
  for (const headerName of Object.keys(headers)) {
    if (soughtHeader === headerName.toLowerCase()) {
      return true;
    }
  }
  return false;
};

// node_modules/@smithy/signature-v4/dist-es/moveHeadersToQuery.js
var moveHeadersToQuery = (request, options = {}) => {
  var _a5, _b;
  const { headers, query = {} } = HttpRequest.clone(request);
  for (const name of Object.keys(headers)) {
    const lname = name.toLowerCase();
    if (lname.slice(0, 6) === "x-amz-" && !((_a5 = options.unhoistableHeaders) == null ? void 0 : _a5.has(lname)) || ((_b = options.hoistableHeaders) == null ? void 0 : _b.has(lname))) {
      query[name] = headers[name];
      delete headers[name];
    }
  }
  return {
    ...request,
    headers,
    query
  };
};

// node_modules/@smithy/signature-v4/dist-es/prepareRequest.js
var prepareRequest = (request) => {
  request = HttpRequest.clone(request);
  for (const headerName of Object.keys(request.headers)) {
    if (GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {
      delete request.headers[headerName];
    }
  }
  return request;
};

// node_modules/@smithy/signature-v4/dist-es/utilDate.js
var iso8601 = (time) => toDate(time).toISOString().replace(/\.\d{3}Z$/, "Z");
var toDate = (time) => {
  if (typeof time === "number") {
    return new Date(time * 1e3);
  }
  if (typeof time === "string") {
    if (Number(time)) {
      return new Date(Number(time) * 1e3);
    }
    return new Date(time);
  }
  return time;
};

// node_modules/@smithy/signature-v4/dist-es/SignatureV4.js
var SignatureV4 = class {
  constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true }) {
    this.headerFormatter = new HeaderFormatter();
    this.service = service;
    this.sha256 = sha256;
    this.uriEscapePath = uriEscapePath;
    this.applyChecksum = typeof applyChecksum === "boolean" ? applyChecksum : true;
    this.regionProvider = normalizeProvider(region);
    this.credentialProvider = normalizeProvider(credentials);
  }
  async presign(originalRequest, options = {}) {
    const { signingDate = /* @__PURE__ */ new Date(), expiresIn = 3600, unsignableHeaders, unhoistableHeaders, signableHeaders, hoistableHeaders, signingRegion, signingService } = options;
    const credentials = await this.credentialProvider();
    this.validateResolvedCredentials(credentials);
    const region = signingRegion ?? await this.regionProvider();
    const { longDate, shortDate } = formatDate(signingDate);
    if (expiresIn > MAX_PRESIGNED_TTL) {
      return Promise.reject("Signature version 4 presigned URLs must have an expiration date less than one week in the future");
    }
    const scope = createScope(shortDate, region, signingService ?? this.service);
    const request = moveHeadersToQuery(prepareRequest(originalRequest), { unhoistableHeaders, hoistableHeaders });
    if (credentials.sessionToken) {
      request.query[TOKEN_QUERY_PARAM] = credentials.sessionToken;
    }
    request.query[ALGORITHM_QUERY_PARAM] = ALGORITHM_IDENTIFIER;
    request.query[CREDENTIAL_QUERY_PARAM] = `${credentials.accessKeyId}/${scope}`;
    request.query[AMZ_DATE_QUERY_PARAM] = longDate;
    request.query[EXPIRES_QUERY_PARAM] = expiresIn.toString(10);
    const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);
    request.query[SIGNED_HEADERS_QUERY_PARAM] = getCanonicalHeaderList(canonicalHeaders);
    request.query[SIGNATURE_QUERY_PARAM] = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, await getPayloadHash(originalRequest, this.sha256)));
    return request;
  }
  async sign(toSign, options) {
    if (typeof toSign === "string") {
      return this.signString(toSign, options);
    } else if (toSign.headers && toSign.payload) {
      return this.signEvent(toSign, options);
    } else if (toSign.message) {
      return this.signMessage(toSign, options);
    } else {
      return this.signRequest(toSign, options);
    }
  }
  async signEvent({ headers, payload }, { signingDate = /* @__PURE__ */ new Date(), priorSignature, signingRegion, signingService }) {
    const region = signingRegion ?? await this.regionProvider();
    const { shortDate, longDate } = formatDate(signingDate);
    const scope = createScope(shortDate, region, signingService ?? this.service);
    const hashedPayload = await getPayloadHash({ headers: {}, body: payload }, this.sha256);
    const hash = new this.sha256();
    hash.update(headers);
    const hashedHeaders = toHex(await hash.digest());
    const stringToSign = [
      EVENT_ALGORITHM_IDENTIFIER,
      longDate,
      scope,
      priorSignature,
      hashedHeaders,
      hashedPayload
    ].join("\n");
    return this.signString(stringToSign, { signingDate, signingRegion: region, signingService });
  }
  async signMessage(signableMessage, { signingDate = /* @__PURE__ */ new Date(), signingRegion, signingService }) {
    const promise = this.signEvent({
      headers: this.headerFormatter.format(signableMessage.message.headers),
      payload: signableMessage.message.body
    }, {
      signingDate,
      signingRegion,
      signingService,
      priorSignature: signableMessage.priorSignature
    });
    return promise.then((signature) => {
      return { message: signableMessage.message, signature };
    });
  }
  async signString(stringToSign, { signingDate = /* @__PURE__ */ new Date(), signingRegion, signingService } = {}) {
    const credentials = await this.credentialProvider();
    this.validateResolvedCredentials(credentials);
    const region = signingRegion ?? await this.regionProvider();
    const { shortDate } = formatDate(signingDate);
    const hash = new this.sha256(await this.getSigningKey(credentials, region, shortDate, signingService));
    hash.update(toUint8Array(stringToSign));
    return toHex(await hash.digest());
  }
  async signRequest(requestToSign, { signingDate = /* @__PURE__ */ new Date(), signableHeaders, unsignableHeaders, signingRegion, signingService } = {}) {
    const credentials = await this.credentialProvider();
    this.validateResolvedCredentials(credentials);
    const region = signingRegion ?? await this.regionProvider();
    const request = prepareRequest(requestToSign);
    const { longDate, shortDate } = formatDate(signingDate);
    const scope = createScope(shortDate, region, signingService ?? this.service);
    request.headers[AMZ_DATE_HEADER] = longDate;
    if (credentials.sessionToken) {
      request.headers[TOKEN_HEADER] = credentials.sessionToken;
    }
    const payloadHash = await getPayloadHash(request, this.sha256);
    if (!hasHeader(SHA256_HEADER, request.headers) && this.applyChecksum) {
      request.headers[SHA256_HEADER] = payloadHash;
    }
    const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);
    const signature = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, payloadHash));
    request.headers[AUTH_HEADER] = `${ALGORITHM_IDENTIFIER} Credential=${credentials.accessKeyId}/${scope}, SignedHeaders=${getCanonicalHeaderList(canonicalHeaders)}, Signature=${signature}`;
    return request;
  }
  createCanonicalRequest(request, canonicalHeaders, payloadHash) {
    const sortedHeaders = Object.keys(canonicalHeaders).sort();
    return `${request.method}
${this.getCanonicalPath(request)}
${getCanonicalQuery(request)}
${sortedHeaders.map((name) => `${name}:${canonicalHeaders[name]}`).join("\n")}

${sortedHeaders.join(";")}
${payloadHash}`;
  }
  async createStringToSign(longDate, credentialScope, canonicalRequest) {
    const hash = new this.sha256();
    hash.update(toUint8Array(canonicalRequest));
    const hashedRequest = await hash.digest();
    return `${ALGORITHM_IDENTIFIER}
${longDate}
${credentialScope}
${toHex(hashedRequest)}`;
  }
  getCanonicalPath({ path }) {
    if (this.uriEscapePath) {
      const normalizedPathSegments = [];
      for (const pathSegment of path.split("/")) {
        if ((pathSegment == null ? void 0 : pathSegment.length) === 0)
          continue;
        if (pathSegment === ".")
          continue;
        if (pathSegment === "..") {
          normalizedPathSegments.pop();
        } else {
          normalizedPathSegments.push(pathSegment);
        }
      }
      const normalizedPath = `${(path == null ? void 0 : path.startsWith("/")) ? "/" : ""}${normalizedPathSegments.join("/")}${normalizedPathSegments.length > 0 && (path == null ? void 0 : path.endsWith("/")) ? "/" : ""}`;
      const doubleEncoded = escapeUri(normalizedPath);
      return doubleEncoded.replace(/%2F/g, "/");
    }
    return path;
  }
  async getSignature(longDate, credentialScope, keyPromise, canonicalRequest) {
    const stringToSign = await this.createStringToSign(longDate, credentialScope, canonicalRequest);
    const hash = new this.sha256(await keyPromise);
    hash.update(toUint8Array(stringToSign));
    return toHex(await hash.digest());
  }
  getSigningKey(credentials, region, shortDate, service) {
    return getSigningKey(this.sha256, credentials, shortDate, region, service || this.service);
  }
  validateResolvedCredentials(credentials) {
    if (typeof credentials !== "object" || typeof credentials.accessKeyId !== "string" || typeof credentials.secretAccessKey !== "string") {
      throw new Error("Resolved credential object is not valid");
    }
  }
};
var formatDate = (now2) => {
  const longDate = iso8601(now2).replace(/[\-:]/g, "");
  return {
    longDate,
    shortDate: longDate.slice(0, 8)
  };
};
var getCanonicalHeaderList = (headers) => Object.keys(headers).sort().join(";");

// node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/resolveAwsSdkSigV4Config.js
var resolveAwsSdkSigV4Config = (config) => {
  let normalizedCreds;
  if (config.credentials) {
    normalizedCreds = memoizeIdentityProvider(config.credentials, isIdentityExpired, doesIdentityRequireRefresh);
  }
  if (!normalizedCreds) {
    if (config.credentialDefaultProvider) {
      normalizedCreds = normalizeProvider2(config.credentialDefaultProvider(Object.assign({}, config, {
        parentClientConfig: config
      })));
    } else {
      normalizedCreds = async () => {
        throw new Error("`credentials` is missing");
      };
    }
  }
  const { signingEscapePath = true, systemClockOffset = config.systemClockOffset || 0, sha256 } = config;
  let signer;
  if (config.signer) {
    signer = normalizeProvider2(config.signer);
  } else if (config.regionInfoProvider) {
    signer = () => normalizeProvider2(config.region)().then(async (region) => [
      await config.regionInfoProvider(region, {
        useFipsEndpoint: await config.useFipsEndpoint(),
        useDualstackEndpoint: await config.useDualstackEndpoint()
      }) || {},
      region
    ]).then(([regionInfo, region]) => {
      const { signingRegion, signingService } = regionInfo;
      config.signingRegion = config.signingRegion || signingRegion || region;
      config.signingName = config.signingName || signingService || config.serviceId;
      const params = {
        ...config,
        credentials: normalizedCreds,
        region: config.signingRegion,
        service: config.signingName,
        sha256,
        uriEscapePath: signingEscapePath
      };
      const SignerCtor = config.signerConstructor || SignatureV4;
      return new SignerCtor(params);
    });
  } else {
    signer = async (authScheme) => {
      authScheme = Object.assign({}, {
        name: "sigv4",
        signingName: config.signingName || config.defaultSigningName,
        signingRegion: await normalizeProvider2(config.region)(),
        properties: {}
      }, authScheme);
      const signingRegion = authScheme.signingRegion;
      const signingService = authScheme.signingName;
      config.signingRegion = config.signingRegion || signingRegion;
      config.signingName = config.signingName || signingService || config.serviceId;
      const params = {
        ...config,
        credentials: normalizedCreds,
        region: config.signingRegion,
        service: config.signingName,
        sha256,
        uriEscapePath: signingEscapePath
      };
      const SignerCtor = config.signerConstructor || SignatureV4;
      return new SignerCtor(params);
    };
  }
  return {
    ...config,
    systemClockOffset,
    signingEscapePath,
    credentials: normalizedCreds,
    signer
  };
};

// node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/awsExpectUnion.js
var awsExpectUnion = (value2) => {
  if (value2 == null) {
    return void 0;
  }
  if (typeof value2 === "object" && "__type" in value2) {
    delete value2.__type;
  }
  return expectUnion(value2);
};

// node_modules/@aws-sdk/core/dist-es/submodules/protocols/common.js
var collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));

// node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/parseJsonBody.js
var parseJsonBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {
  if (encoded.length) {
    try {
      return JSON.parse(encoded);
    } catch (e9) {
      if ((e9 == null ? void 0 : e9.name) === "SyntaxError") {
        Object.defineProperty(e9, "$responseBodyText", {
          value: encoded
        });
      }
      throw e9;
    }
  }
  return {};
});
var parseJsonErrorBody = async (errorBody, context) => {
  const value2 = await parseJsonBody(errorBody, context);
  value2.message = value2.message ?? value2.Message;
  return value2;
};
var loadRestJsonErrorCode = (output, data) => {
  const findKey = (object, key) => Object.keys(object).find((k8) => k8.toLowerCase() === key.toLowerCase());
  const sanitizeErrorCode = (rawValue) => {
    let cleanValue = rawValue;
    if (typeof cleanValue === "number") {
      cleanValue = cleanValue.toString();
    }
    if (cleanValue.indexOf(",") >= 0) {
      cleanValue = cleanValue.split(",")[0];
    }
    if (cleanValue.indexOf(":") >= 0) {
      cleanValue = cleanValue.split(":")[0];
    }
    if (cleanValue.indexOf("#") >= 0) {
      cleanValue = cleanValue.split("#")[1];
    }
    return cleanValue;
  };
  const headerKey = findKey(output.headers, "x-amzn-errortype");
  if (headerKey !== void 0) {
    return sanitizeErrorCode(output.headers[headerKey]);
  }
  if (data.code !== void 0) {
    return sanitizeErrorCode(data.code);
  }
  if (data["__type"] !== void 0) {
    return sanitizeErrorCode(data["__type"]);
  }
};

// node_modules/@aws-sdk/core/dist-es/submodules/protocols/xml/parseXmlBody.js
var import_fast_xml_parser = __toESM(require_fxp());

// node_modules/@aws-sdk/client-bedrock-runtime/dist-es/auth/httpAuthSchemeProvider.js
var defaultBedrockRuntimeHttpAuthSchemeParametersProvider = async (config, context, input) => {
  return {
    operation: getSmithyContext(context).operation,
    region: await normalizeProvider(config.region)() || (() => {
      throw new Error("expected `region` to be configured for `aws.auth#sigv4`");
    })()
  };
};
function createAwsAuthSigv4HttpAuthOption(authParameters) {
  return {
    schemeId: "aws.auth#sigv4",
    signingProperties: {
      name: "bedrock",
      region: authParameters.region
    },
    propertiesExtractor: (config, context) => ({
      signingProperties: {
        config,
        context
      }
    })
  };
}
var defaultBedrockRuntimeHttpAuthSchemeProvider = (authParameters) => {
  const options = [];
  switch (authParameters.operation) {
    default: {
      options.push(createAwsAuthSigv4HttpAuthOption(authParameters));
    }
  }
  return options;
};
var resolveHttpAuthSchemeConfig = (config) => {
  const config_0 = resolveAwsSdkSigV4Config(config);
  return {
    ...config_0
  };
};

// node_modules/@aws-sdk/client-bedrock-runtime/dist-es/endpoint/EndpointParameters.js
var resolveClientEndpointParameters = (options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "bedrock"
  };
};
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// node_modules/@aws-sdk/client-bedrock-runtime/package.json
var package_default = {
  name: "@aws-sdk/client-bedrock-runtime",
  description: "AWS SDK for JavaScript Bedrock Runtime Client for Node.js, Browser and React Native",
  version: "3.621.0",
  scripts: {
    build: "concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'",
    "build:cjs": "node ../../scripts/compilation/inline client-bedrock-runtime",
    "build:es": "tsc -p tsconfig.es.json",
    "build:include:deps": "lerna run --scope $npm_package_name --include-dependencies build",
    "build:types": "tsc -p tsconfig.types.json",
    "build:types:downlevel": "downlevel-dts dist-types dist-types/ts3.4",
    clean: "rimraf ./dist-* && rimraf *.tsbuildinfo",
    "extract:docs": "api-extractor run --local",
    "generate:client": "node ../../scripts/generate-clients/single-service --solo bedrock-runtime"
  },
  main: "./dist-cjs/index.js",
  types: "./dist-types/index.d.ts",
  module: "./dist-es/index.js",
  sideEffects: false,
  dependencies: {
    "@aws-crypto/sha256-browser": "5.2.0",
    "@aws-crypto/sha256-js": "5.2.0",
    "@aws-sdk/client-sso-oidc": "3.621.0",
    "@aws-sdk/client-sts": "3.621.0",
    "@aws-sdk/core": "3.621.0",
    "@aws-sdk/credential-provider-node": "3.621.0",
    "@aws-sdk/middleware-host-header": "3.620.0",
    "@aws-sdk/middleware-logger": "3.609.0",
    "@aws-sdk/middleware-recursion-detection": "3.620.0",
    "@aws-sdk/middleware-user-agent": "3.620.0",
    "@aws-sdk/region-config-resolver": "3.614.0",
    "@aws-sdk/types": "3.609.0",
    "@aws-sdk/util-endpoints": "3.614.0",
    "@aws-sdk/util-user-agent-browser": "3.609.0",
    "@aws-sdk/util-user-agent-node": "3.614.0",
    "@smithy/config-resolver": "^3.0.5",
    "@smithy/core": "^2.3.1",
    "@smithy/eventstream-serde-browser": "^3.0.5",
    "@smithy/eventstream-serde-config-resolver": "^3.0.3",
    "@smithy/eventstream-serde-node": "^3.0.4",
    "@smithy/fetch-http-handler": "^3.2.4",
    "@smithy/hash-node": "^3.0.3",
    "@smithy/invalid-dependency": "^3.0.3",
    "@smithy/middleware-content-length": "^3.0.5",
    "@smithy/middleware-endpoint": "^3.1.0",
    "@smithy/middleware-retry": "^3.0.13",
    "@smithy/middleware-serde": "^3.0.3",
    "@smithy/middleware-stack": "^3.0.3",
    "@smithy/node-config-provider": "^3.1.4",
    "@smithy/node-http-handler": "^3.1.4",
    "@smithy/protocol-http": "^4.1.0",
    "@smithy/smithy-client": "^3.1.11",
    "@smithy/types": "^3.3.0",
    "@smithy/url-parser": "^3.0.3",
    "@smithy/util-base64": "^3.0.0",
    "@smithy/util-body-length-browser": "^3.0.0",
    "@smithy/util-body-length-node": "^3.0.0",
    "@smithy/util-defaults-mode-browser": "^3.0.13",
    "@smithy/util-defaults-mode-node": "^3.0.13",
    "@smithy/util-endpoints": "^2.0.5",
    "@smithy/util-middleware": "^3.0.3",
    "@smithy/util-retry": "^3.0.3",
    "@smithy/util-stream": "^3.1.3",
    "@smithy/util-utf8": "^3.0.0",
    tslib: "^2.6.2"
  },
  devDependencies: {
    "@tsconfig/node16": "16.1.3",
    "@types/node": "^16.18.96",
    concurrently: "7.0.0",
    "downlevel-dts": "0.10.1",
    rimraf: "3.0.2",
    typescript: "~4.9.5"
  },
  engines: {
    node: ">=16.0.0"
  },
  typesVersions: {
    "<4.0": {
      "dist-types/*": [
        "dist-types/ts3.4/*"
      ]
    }
  },
  files: [
    "dist-*/**"
  ],
  author: {
    name: "AWS SDK for JavaScript Team",
    url: "https://aws.amazon.com/javascript/"
  },
  license: "Apache-2.0",
  browser: {
    "./dist-es/runtimeConfig": "./dist-es/runtimeConfig.browser"
  },
  "react-native": {
    "./dist-es/runtimeConfig": "./dist-es/runtimeConfig.native"
  },
  homepage: "https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-bedrock-runtime",
  repository: {
    type: "git",
    url: "https://github.com/aws/aws-sdk-js-v3.git",
    directory: "clients/client-bedrock-runtime"
  }
};

// node_modules/@aws-crypto/util/node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js
var fromUtf82 = (input) => new TextEncoder().encode(input);

// node_modules/@aws-crypto/util/build/module/convertToBuffer.js
var fromUtf83 = typeof Buffer !== "undefined" && Buffer.from ? function(input) {
  return Buffer.from(input, "utf8");
} : fromUtf82;
function convertToBuffer(data) {
  if (data instanceof Uint8Array)
    return data;
  if (typeof data === "string") {
    return fromUtf83(data);
  }
  if (ArrayBuffer.isView(data)) {
    return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);
  }
  return new Uint8Array(data);
}

// node_modules/@aws-crypto/util/build/module/isEmptyData.js
function isEmptyData(data) {
  if (typeof data === "string") {
    return data.length === 0;
  }
  return data.byteLength === 0;
}

// node_modules/@aws-crypto/util/build/module/numToUint8.js
function numToUint8(num) {
  return new Uint8Array([
    (num & 4278190080) >> 24,
    (num & 16711680) >> 16,
    (num & 65280) >> 8,
    num & 255
  ]);
}

// node_modules/@aws-crypto/util/build/module/uint32ArrayFrom.js
function uint32ArrayFrom(a_lookUpTable2) {
  if (!Uint32Array.from) {
    var return_array = new Uint32Array(a_lookUpTable2.length);
    var a_index = 0;
    while (a_index < a_lookUpTable2.length) {
      return_array[a_index] = a_lookUpTable2[a_index];
      a_index += 1;
    }
    return return_array;
  }
  return Uint32Array.from(a_lookUpTable2);
}

// node_modules/@aws-crypto/sha256-browser/build/module/constants.js
var SHA_256_HASH = { name: "SHA-256" };
var SHA_256_HMAC_ALGO = {
  name: "HMAC",
  hash: SHA_256_HASH
};
var EMPTY_DATA_SHA_256 = new Uint8Array([
  227,
  176,
  196,
  66,
  152,
  252,
  28,
  20,
  154,
  251,
  244,
  200,
  153,
  111,
  185,
  36,
  39,
  174,
  65,
  228,
  100,
  155,
  147,
  76,
  164,
  149,
  153,
  27,
  120,
  82,
  184,
  85
]);

// node_modules/@aws-sdk/util-locate-window/dist-es/index.js
var fallbackWindow = {};
function locateWindow() {
  if (typeof window !== "undefined") {
    return window;
  } else if (typeof self !== "undefined") {
    return self;
  }
  return fallbackWindow;
}

// node_modules/@aws-crypto/sha256-browser/build/module/webCryptoSha256.js
var Sha256 = (
  /** @class */
  function() {
    function Sha2564(secret) {
      this.toHash = new Uint8Array(0);
      this.secret = secret;
      this.reset();
    }
    Sha2564.prototype.update = function(data) {
      if (isEmptyData(data)) {
        return;
      }
      var update = convertToBuffer(data);
      var typedArray = new Uint8Array(this.toHash.byteLength + update.byteLength);
      typedArray.set(this.toHash, 0);
      typedArray.set(update, this.toHash.byteLength);
      this.toHash = typedArray;
    };
    Sha2564.prototype.digest = function() {
      var _this = this;
      if (this.key) {
        return this.key.then(function(key) {
          return locateWindow().crypto.subtle.sign(SHA_256_HMAC_ALGO, key, _this.toHash).then(function(data) {
            return new Uint8Array(data);
          });
        });
      }
      if (isEmptyData(this.toHash)) {
        return Promise.resolve(EMPTY_DATA_SHA_256);
      }
      return Promise.resolve().then(function() {
        return locateWindow().crypto.subtle.digest(SHA_256_HASH, _this.toHash);
      }).then(function(data) {
        return Promise.resolve(new Uint8Array(data));
      });
    };
    Sha2564.prototype.reset = function() {
      var _this = this;
      this.toHash = new Uint8Array(0);
      if (this.secret && this.secret !== void 0) {
        this.key = new Promise(function(resolve, reject) {
          locateWindow().crypto.subtle.importKey("raw", convertToBuffer(_this.secret), SHA_256_HMAC_ALGO, false, ["sign"]).then(resolve, reject);
        });
        this.key.catch(function() {
        });
      }
    };
    return Sha2564;
  }()
);

// node_modules/tslib/tslib.es6.mjs
function __awaiter(thisArg, _arguments, P8, generator) {
  function adopt(value2) {
    return value2 instanceof P8 ? value2 : new P8(function(resolve) {
      resolve(value2);
    });
  }
  return new (P8 || (P8 = Promise))(function(resolve, reject) {
    function fulfilled(value2) {
      try {
        step(generator.next(value2));
      } catch (e9) {
        reject(e9);
      }
    }
    function rejected(value2) {
      try {
        step(generator["throw"](value2));
      } catch (e9) {
        reject(e9);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _5 = { label: 0, sent: function() {
    if (t2[0] & 1) throw t2[1];
    return t2[1];
  }, trys: [], ops: [] }, f10, y10, t2, g10 = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
  return g10.next = verb(0), g10["throw"] = verb(1), g10["return"] = verb(2), typeof Symbol === "function" && (g10[Symbol.iterator] = function() {
    return this;
  }), g10;
  function verb(n11) {
    return function(v11) {
      return step([n11, v11]);
    };
  }
  function step(op) {
    if (f10) throw new TypeError("Generator is already executing.");
    while (g10 && (g10 = 0, op[0] && (_5 = 0)), _5) try {
      if (f10 = 1, y10 && (t2 = op[0] & 2 ? y10["return"] : op[0] ? y10["throw"] || ((t2 = y10["return"]) && t2.call(y10), 0) : y10.next) && !(t2 = t2.call(y10, op[1])).done) return t2;
      if (y10 = 0, t2) op = [op[0] & 2, t2.value];
      switch (op[0]) {
        case 0:
        case 1:
          t2 = op;
          break;
        case 4:
          _5.label++;
          return { value: op[1], done: false };
        case 5:
          _5.label++;
          y10 = op[1];
          op = [0];
          continue;
        case 7:
          op = _5.ops.pop();
          _5.trys.pop();
          continue;
        default:
          if (!(t2 = _5.trys, t2 = t2.length > 0 && t2[t2.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _5 = 0;
            continue;
          }
          if (op[0] === 3 && (!t2 || op[1] > t2[0] && op[1] < t2[3])) {
            _5.label = op[1];
            break;
          }
          if (op[0] === 6 && _5.label < t2[1]) {
            _5.label = t2[1];
            t2 = op;
            break;
          }
          if (t2 && _5.label < t2[2]) {
            _5.label = t2[2];
            _5.ops.push(op);
            break;
          }
          if (t2[2]) _5.ops.pop();
          _5.trys.pop();
          continue;
      }
      op = body.call(thisArg, _5);
    } catch (e9) {
      op = [6, e9];
      y10 = 0;
    } finally {
      f10 = t2 = 0;
    }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
function __values(o12) {
  var s15 = typeof Symbol === "function" && Symbol.iterator, m13 = s15 && o12[s15], i11 = 0;
  if (m13) return m13.call(o12);
  if (o12 && typeof o12.length === "number") return {
    next: function() {
      if (o12 && i11 >= o12.length) o12 = void 0;
      return { value: o12 && o12[i11++], done: !o12 };
    }
  };
  throw new TypeError(s15 ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

// node_modules/@aws-crypto/sha256-js/build/module/constants.js
var BLOCK_SIZE = 64;
var DIGEST_LENGTH = 32;
var KEY = new Uint32Array([
  1116352408,
  1899447441,
  3049323471,
  3921009573,
  961987163,
  1508970993,
  2453635748,
  2870763221,
  3624381080,
  310598401,
  607225278,
  1426881987,
  1925078388,
  2162078206,
  2614888103,
  3248222580,
  3835390401,
  4022224774,
  264347078,
  604807628,
  770255983,
  1249150122,
  1555081692,
  1996064986,
  2554220882,
  2821834349,
  2952996808,
  3210313671,
  3336571891,
  3584528711,
  113926993,
  338241895,
  666307205,
  773529912,
  1294757372,
  1396182291,
  1695183700,
  1986661051,
  2177026350,
  2456956037,
  2730485921,
  2820302411,
  3259730800,
  3345764771,
  3516065817,
  3600352804,
  4094571909,
  275423344,
  430227734,
  506948616,
  659060556,
  883997877,
  958139571,
  1322822218,
  1537002063,
  1747873779,
  1955562222,
  2024104815,
  2227730452,
  2361852424,
  2428436474,
  2756734187,
  3204031479,
  3329325298
]);
var INIT = [
  1779033703,
  3144134277,
  1013904242,
  2773480762,
  1359893119,
  2600822924,
  528734635,
  1541459225
];
var MAX_HASHABLE_LENGTH = Math.pow(2, 53) - 1;

// node_modules/@aws-crypto/sha256-js/build/module/RawSha256.js
var RawSha256 = (
  /** @class */
  function() {
    function RawSha2562() {
      this.state = Int32Array.from(INIT);
      this.temp = new Int32Array(64);
      this.buffer = new Uint8Array(64);
      this.bufferLength = 0;
      this.bytesHashed = 0;
      this.finished = false;
    }
    RawSha2562.prototype.update = function(data) {
      if (this.finished) {
        throw new Error("Attempted to update an already finished hash.");
      }
      var position = 0;
      var byteLength2 = data.byteLength;
      this.bytesHashed += byteLength2;
      if (this.bytesHashed * 8 > MAX_HASHABLE_LENGTH) {
        throw new Error("Cannot hash more than 2^53 - 1 bits");
      }
      while (byteLength2 > 0) {
        this.buffer[this.bufferLength++] = data[position++];
        byteLength2--;
        if (this.bufferLength === BLOCK_SIZE) {
          this.hashBuffer();
          this.bufferLength = 0;
        }
      }
    };
    RawSha2562.prototype.digest = function() {
      if (!this.finished) {
        var bitsHashed = this.bytesHashed * 8;
        var bufferView = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength);
        var undecoratedLength = this.bufferLength;
        bufferView.setUint8(this.bufferLength++, 128);
        if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {
          for (var i11 = this.bufferLength; i11 < BLOCK_SIZE; i11++) {
            bufferView.setUint8(i11, 0);
          }
          this.hashBuffer();
          this.bufferLength = 0;
        }
        for (var i11 = this.bufferLength; i11 < BLOCK_SIZE - 8; i11++) {
          bufferView.setUint8(i11, 0);
        }
        bufferView.setUint32(BLOCK_SIZE - 8, Math.floor(bitsHashed / 4294967296), true);
        bufferView.setUint32(BLOCK_SIZE - 4, bitsHashed);
        this.hashBuffer();
        this.finished = true;
      }
      var out = new Uint8Array(DIGEST_LENGTH);
      for (var i11 = 0; i11 < 8; i11++) {
        out[i11 * 4] = this.state[i11] >>> 24 & 255;
        out[i11 * 4 + 1] = this.state[i11] >>> 16 & 255;
        out[i11 * 4 + 2] = this.state[i11] >>> 8 & 255;
        out[i11 * 4 + 3] = this.state[i11] >>> 0 & 255;
      }
      return out;
    };
    RawSha2562.prototype.hashBuffer = function() {
      var _a5 = this, buffer = _a5.buffer, state = _a5.state;
      var state0 = state[0], state1 = state[1], state2 = state[2], state3 = state[3], state4 = state[4], state5 = state[5], state6 = state[6], state7 = state[7];
      for (var i11 = 0; i11 < BLOCK_SIZE; i11++) {
        if (i11 < 16) {
          this.temp[i11] = (buffer[i11 * 4] & 255) << 24 | (buffer[i11 * 4 + 1] & 255) << 16 | (buffer[i11 * 4 + 2] & 255) << 8 | buffer[i11 * 4 + 3] & 255;
        } else {
          var u9 = this.temp[i11 - 2];
          var t1_1 = (u9 >>> 17 | u9 << 15) ^ (u9 >>> 19 | u9 << 13) ^ u9 >>> 10;
          u9 = this.temp[i11 - 15];
          var t2_1 = (u9 >>> 7 | u9 << 25) ^ (u9 >>> 18 | u9 << 14) ^ u9 >>> 3;
          this.temp[i11] = (t1_1 + this.temp[i11 - 7] | 0) + (t2_1 + this.temp[i11 - 16] | 0);
        }
        var t1 = (((state4 >>> 6 | state4 << 26) ^ (state4 >>> 11 | state4 << 21) ^ (state4 >>> 25 | state4 << 7)) + (state4 & state5 ^ ~state4 & state6) | 0) + (state7 + (KEY[i11] + this.temp[i11] | 0) | 0) | 0;
        var t2 = ((state0 >>> 2 | state0 << 30) ^ (state0 >>> 13 | state0 << 19) ^ (state0 >>> 22 | state0 << 10)) + (state0 & state1 ^ state0 & state2 ^ state1 & state2) | 0;
        state7 = state6;
        state6 = state5;
        state5 = state4;
        state4 = state3 + t1 | 0;
        state3 = state2;
        state2 = state1;
        state1 = state0;
        state0 = t1 + t2 | 0;
      }
      state[0] += state0;
      state[1] += state1;
      state[2] += state2;
      state[3] += state3;
      state[4] += state4;
      state[5] += state5;
      state[6] += state6;
      state[7] += state7;
    };
    return RawSha2562;
  }()
);

// node_modules/@aws-crypto/sha256-js/build/module/jsSha256.js
var Sha2562 = (
  /** @class */
  function() {
    function Sha2564(secret) {
      this.secret = secret;
      this.hash = new RawSha256();
      this.reset();
    }
    Sha2564.prototype.update = function(toHash) {
      if (isEmptyData(toHash) || this.error) {
        return;
      }
      try {
        this.hash.update(convertToBuffer(toHash));
      } catch (e9) {
        this.error = e9;
      }
    };
    Sha2564.prototype.digestSync = function() {
      if (this.error) {
        throw this.error;
      }
      if (this.outer) {
        if (!this.outer.finished) {
          this.outer.update(this.hash.digest());
        }
        return this.outer.digest();
      }
      return this.hash.digest();
    };
    Sha2564.prototype.digest = function() {
      return __awaiter(this, void 0, void 0, function() {
        return __generator(this, function(_a5) {
          return [2, this.digestSync()];
        });
      });
    };
    Sha2564.prototype.reset = function() {
      this.hash = new RawSha256();
      if (this.secret) {
        this.outer = new RawSha256();
        var inner = bufferFromSecret(this.secret);
        var outer = new Uint8Array(BLOCK_SIZE);
        outer.set(inner);
        for (var i11 = 0; i11 < BLOCK_SIZE; i11++) {
          inner[i11] ^= 54;
          outer[i11] ^= 92;
        }
        this.hash.update(inner);
        this.outer.update(outer);
        for (var i11 = 0; i11 < inner.byteLength; i11++) {
          inner[i11] = 0;
        }
      }
    };
    return Sha2564;
  }()
);
function bufferFromSecret(secret) {
  var input = convertToBuffer(secret);
  if (input.byteLength > BLOCK_SIZE) {
    var bufferHash = new RawSha256();
    bufferHash.update(input);
    input = bufferHash.digest();
  }
  var buffer = new Uint8Array(BLOCK_SIZE);
  buffer.set(input);
  return buffer;
}

// node_modules/@aws-crypto/supports-web-crypto/build/module/supportsWebCrypto.js
var subtleCryptoMethods = [
  "decrypt",
  "digest",
  "encrypt",
  "exportKey",
  "generateKey",
  "importKey",
  "sign",
  "verify"
];
function supportsWebCrypto(window2) {
  if (supportsSecureRandom(window2) && typeof window2.crypto.subtle === "object") {
    var subtle = window2.crypto.subtle;
    return supportsSubtleCrypto(subtle);
  }
  return false;
}
function supportsSecureRandom(window2) {
  if (typeof window2 === "object" && typeof window2.crypto === "object") {
    var getRandomValues2 = window2.crypto.getRandomValues;
    return typeof getRandomValues2 === "function";
  }
  return false;
}
function supportsSubtleCrypto(subtle) {
  return subtle && subtleCryptoMethods.every(function(methodName) {
    return typeof subtle[methodName] === "function";
  });
}

// node_modules/@aws-crypto/sha256-browser/build/module/crossPlatformSha256.js
var Sha2563 = (
  /** @class */
  function() {
    function Sha2564(secret) {
      if (supportsWebCrypto(locateWindow())) {
        this.hash = new Sha256(secret);
      } else {
        this.hash = new Sha2562(secret);
      }
    }
    Sha2564.prototype.update = function(data, encoding) {
      this.hash.update(convertToBuffer(data));
    };
    Sha2564.prototype.digest = function() {
      return this.hash.digest();
    };
    Sha2564.prototype.reset = function() {
      this.hash.reset();
    };
    return Sha2564;
  }()
);

// node_modules/bowser/src/constants.js
var BROWSER_ALIASES_MAP = {
  "Amazon Silk": "amazon_silk",
  "Android Browser": "android",
  Bada: "bada",
  BlackBerry: "blackberry",
  Chrome: "chrome",
  Chromium: "chromium",
  Electron: "electron",
  Epiphany: "epiphany",
  Firefox: "firefox",
  Focus: "focus",
  Generic: "generic",
  "Google Search": "google_search",
  Googlebot: "googlebot",
  "Internet Explorer": "ie",
  "K-Meleon": "k_meleon",
  Maxthon: "maxthon",
  "Microsoft Edge": "edge",
  "MZ Browser": "mz",
  "NAVER Whale Browser": "naver",
  Opera: "opera",
  "Opera Coast": "opera_coast",
  PhantomJS: "phantomjs",
  Puffin: "puffin",
  QupZilla: "qupzilla",
  QQ: "qq",
  QQLite: "qqlite",
  Safari: "safari",
  Sailfish: "sailfish",
  "Samsung Internet for Android": "samsung_internet",
  SeaMonkey: "seamonkey",
  Sleipnir: "sleipnir",
  Swing: "swing",
  Tizen: "tizen",
  "UC Browser": "uc",
  Vivaldi: "vivaldi",
  "WebOS Browser": "webos",
  WeChat: "wechat",
  "Yandex Browser": "yandex",
  Roku: "roku"
};
var BROWSER_MAP = {
  amazon_silk: "Amazon Silk",
  android: "Android Browser",
  bada: "Bada",
  blackberry: "BlackBerry",
  chrome: "Chrome",
  chromium: "Chromium",
  electron: "Electron",
  epiphany: "Epiphany",
  firefox: "Firefox",
  focus: "Focus",
  generic: "Generic",
  googlebot: "Googlebot",
  google_search: "Google Search",
  ie: "Internet Explorer",
  k_meleon: "K-Meleon",
  maxthon: "Maxthon",
  edge: "Microsoft Edge",
  mz: "MZ Browser",
  naver: "NAVER Whale Browser",
  opera: "Opera",
  opera_coast: "Opera Coast",
  phantomjs: "PhantomJS",
  puffin: "Puffin",
  qupzilla: "QupZilla",
  qq: "QQ Browser",
  qqlite: "QQ Browser Lite",
  safari: "Safari",
  sailfish: "Sailfish",
  samsung_internet: "Samsung Internet for Android",
  seamonkey: "SeaMonkey",
  sleipnir: "Sleipnir",
  swing: "Swing",
  tizen: "Tizen",
  uc: "UC Browser",
  vivaldi: "Vivaldi",
  webos: "WebOS Browser",
  wechat: "WeChat",
  yandex: "Yandex Browser"
};
var PLATFORMS_MAP = {
  tablet: "tablet",
  mobile: "mobile",
  desktop: "desktop",
  tv: "tv"
};
var OS_MAP = {
  WindowsPhone: "Windows Phone",
  Windows: "Windows",
  MacOS: "macOS",
  iOS: "iOS",
  Android: "Android",
  WebOS: "WebOS",
  BlackBerry: "BlackBerry",
  Bada: "Bada",
  Tizen: "Tizen",
  Linux: "Linux",
  ChromeOS: "Chrome OS",
  PlayStation4: "PlayStation 4",
  Roku: "Roku"
};
var ENGINE_MAP = {
  EdgeHTML: "EdgeHTML",
  Blink: "Blink",
  Trident: "Trident",
  Presto: "Presto",
  Gecko: "Gecko",
  WebKit: "WebKit"
};

// node_modules/bowser/src/utils.js
var Utils = class _Utils {
  /**
   * Get first matched item for a string
   * @param {RegExp} regexp
   * @param {String} ua
   * @return {Array|{index: number, input: string}|*|boolean|string}
   */
  static getFirstMatch(regexp, ua) {
    const match2 = ua.match(regexp);
    return match2 && match2.length > 0 && match2[1] || "";
  }
  /**
   * Get second matched item for a string
   * @param regexp
   * @param {String} ua
   * @return {Array|{index: number, input: string}|*|boolean|string}
   */
  static getSecondMatch(regexp, ua) {
    const match2 = ua.match(regexp);
    return match2 && match2.length > 1 && match2[2] || "";
  }
  /**
   * Match a regexp and return a constant or undefined
   * @param {RegExp} regexp
   * @param {String} ua
   * @param {*} _const Any const that will be returned if regexp matches the string
   * @return {*}
   */
  static matchAndReturnConst(regexp, ua, _const) {
    if (regexp.test(ua)) {
      return _const;
    }
    return void 0;
  }
  static getWindowsVersionName(version2) {
    switch (version2) {
      case "NT":
        return "NT";
      case "XP":
        return "XP";
      case "NT 5.0":
        return "2000";
      case "NT 5.1":
        return "XP";
      case "NT 5.2":
        return "2003";
      case "NT 6.0":
        return "Vista";
      case "NT 6.1":
        return "7";
      case "NT 6.2":
        return "8";
      case "NT 6.3":
        return "8.1";
      case "NT 10.0":
        return "10";
      default:
        return void 0;
    }
  }
  /**
   * Get macOS version name
   *    10.5 - Leopard
   *    10.6 - Snow Leopard
   *    10.7 - Lion
   *    10.8 - Mountain Lion
   *    10.9 - Mavericks
   *    10.10 - Yosemite
   *    10.11 - El Capitan
   *    10.12 - Sierra
   *    10.13 - High Sierra
   *    10.14 - Mojave
   *    10.15 - Catalina
   *
   * @example
   *   getMacOSVersionName("10.14") // 'Mojave'
   *
   * @param  {string} version
   * @return {string} versionName
   */
  static getMacOSVersionName(version2) {
    const v11 = version2.split(".").splice(0, 2).map((s15) => parseInt(s15, 10) || 0);
    v11.push(0);
    if (v11[0] !== 10) return void 0;
    switch (v11[1]) {
      case 5:
        return "Leopard";
      case 6:
        return "Snow Leopard";
      case 7:
        return "Lion";
      case 8:
        return "Mountain Lion";
      case 9:
        return "Mavericks";
      case 10:
        return "Yosemite";
      case 11:
        return "El Capitan";
      case 12:
        return "Sierra";
      case 13:
        return "High Sierra";
      case 14:
        return "Mojave";
      case 15:
        return "Catalina";
      default:
        return void 0;
    }
  }
  /**
   * Get Android version name
   *    1.5 - Cupcake
   *    1.6 - Donut
   *    2.0 - Eclair
   *    2.1 - Eclair
   *    2.2 - Froyo
   *    2.x - Gingerbread
   *    3.x - Honeycomb
   *    4.0 - Ice Cream Sandwich
   *    4.1 - Jelly Bean
   *    4.4 - KitKat
   *    5.x - Lollipop
   *    6.x - Marshmallow
   *    7.x - Nougat
   *    8.x - Oreo
   *    9.x - Pie
   *
   * @example
   *   getAndroidVersionName("7.0") // 'Nougat'
   *
   * @param  {string} version
   * @return {string} versionName
   */
  static getAndroidVersionName(version2) {
    const v11 = version2.split(".").splice(0, 2).map((s15) => parseInt(s15, 10) || 0);
    v11.push(0);
    if (v11[0] === 1 && v11[1] < 5) return void 0;
    if (v11[0] === 1 && v11[1] < 6) return "Cupcake";
    if (v11[0] === 1 && v11[1] >= 6) return "Donut";
    if (v11[0] === 2 && v11[1] < 2) return "Eclair";
    if (v11[0] === 2 && v11[1] === 2) return "Froyo";
    if (v11[0] === 2 && v11[1] > 2) return "Gingerbread";
    if (v11[0] === 3) return "Honeycomb";
    if (v11[0] === 4 && v11[1] < 1) return "Ice Cream Sandwich";
    if (v11[0] === 4 && v11[1] < 4) return "Jelly Bean";
    if (v11[0] === 4 && v11[1] >= 4) return "KitKat";
    if (v11[0] === 5) return "Lollipop";
    if (v11[0] === 6) return "Marshmallow";
    if (v11[0] === 7) return "Nougat";
    if (v11[0] === 8) return "Oreo";
    if (v11[0] === 9) return "Pie";
    return void 0;
  }
  /**
   * Get version precisions count
   *
   * @example
   *   getVersionPrecision("1.10.3") // 3
   *
   * @param  {string} version
   * @return {number}
   */
  static getVersionPrecision(version2) {
    return version2.split(".").length;
  }
  /**
   * Calculate browser version weight
   *
   * @example
   *   compareVersions('1.10.2.1',  '1.8.2.1.90')    // 1
   *   compareVersions('1.010.2.1', '1.09.2.1.90');  // 1
   *   compareVersions('1.10.2.1',  '1.10.2.1');     // 0
   *   compareVersions('1.10.2.1',  '1.0800.2');     // -1
   *   compareVersions('1.10.2.1',  '1.10',  true);  // 0
   *
   * @param {String} versionA versions versions to compare
   * @param {String} versionB versions versions to compare
   * @param {boolean} [isLoose] enable loose comparison
   * @return {Number} comparison result: -1 when versionA is lower,
   * 1 when versionA is bigger, 0 when both equal
   */
  /* eslint consistent-return: 1 */
  static compareVersions(versionA, versionB, isLoose = false) {
    const versionAPrecision = _Utils.getVersionPrecision(versionA);
    const versionBPrecision = _Utils.getVersionPrecision(versionB);
    let precision = Math.max(versionAPrecision, versionBPrecision);
    let lastPrecision = 0;
    const chunks = _Utils.map([versionA, versionB], (version2) => {
      const delta = precision - _Utils.getVersionPrecision(version2);
      const _version = version2 + new Array(delta + 1).join(".0");
      return _Utils.map(_version.split("."), (chunk) => new Array(20 - chunk.length).join("0") + chunk).reverse();
    });
    if (isLoose) {
      lastPrecision = precision - Math.min(versionAPrecision, versionBPrecision);
    }
    precision -= 1;
    while (precision >= lastPrecision) {
      if (chunks[0][precision] > chunks[1][precision]) {
        return 1;
      }
      if (chunks[0][precision] === chunks[1][precision]) {
        if (precision === lastPrecision) {
          return 0;
        }
        precision -= 1;
      } else if (chunks[0][precision] < chunks[1][precision]) {
        return -1;
      }
    }
    return void 0;
  }
  /**
   * Array::map polyfill
   *
   * @param  {Array} arr
   * @param  {Function} iterator
   * @return {Array}
   */
  static map(arr, iterator) {
    const result = [];
    let i11;
    if (Array.prototype.map) {
      return Array.prototype.map.call(arr, iterator);
    }
    for (i11 = 0; i11 < arr.length; i11 += 1) {
      result.push(iterator(arr[i11]));
    }
    return result;
  }
  /**
   * Array::find polyfill
   *
   * @param  {Array} arr
   * @param  {Function} predicate
   * @return {Array}
   */
  static find(arr, predicate) {
    let i11;
    let l12;
    if (Array.prototype.find) {
      return Array.prototype.find.call(arr, predicate);
    }
    for (i11 = 0, l12 = arr.length; i11 < l12; i11 += 1) {
      const value2 = arr[i11];
      if (predicate(value2, i11)) {
        return value2;
      }
    }
    return void 0;
  }
  /**
   * Object::assign polyfill
   *
   * @param  {Object} obj
   * @param  {Object} ...objs
   * @return {Object}
   */
  static assign(obj, ...assigners) {
    const result = obj;
    let i11;
    let l12;
    if (Object.assign) {
      return Object.assign(obj, ...assigners);
    }
    for (i11 = 0, l12 = assigners.length; i11 < l12; i11 += 1) {
      const assigner = assigners[i11];
      if (typeof assigner === "object" && assigner !== null) {
        const keys = Object.keys(assigner);
        keys.forEach((key) => {
          result[key] = assigner[key];
        });
      }
    }
    return obj;
  }
  /**
   * Get short version/alias for a browser name
   *
   * @example
   *   getBrowserAlias('Microsoft Edge') // edge
   *
   * @param  {string} browserName
   * @return {string}
   */
  static getBrowserAlias(browserName) {
    return BROWSER_ALIASES_MAP[browserName];
  }
  /**
   * Get short version/alias for a browser name
   *
   * @example
   *   getBrowserAlias('edge') // Microsoft Edge
   *
   * @param  {string} browserAlias
   * @return {string}
   */
  static getBrowserTypeByAlias(browserAlias) {
    return BROWSER_MAP[browserAlias] || "";
  }
};

// node_modules/bowser/src/parser-browsers.js
var commonVersionIdentifier = /version\/(\d+(\.?_?\d+)+)/i;
var browsersList = [
  /* Googlebot */
  {
    test: [/googlebot/i],
    describe(ua) {
      const browser = {
        name: "Googlebot"
      };
      const version2 = Utils.getFirstMatch(/googlebot\/(\d+(\.\d+))/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  /* Opera < 13.0 */
  {
    test: [/opera/i],
    describe(ua) {
      const browser = {
        name: "Opera"
      };
      const version2 = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:opera)[\s/](\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  /* Opera > 13.0 */
  {
    test: [/opr\/|opios/i],
    describe(ua) {
      const browser = {
        name: "Opera"
      };
      const version2 = Utils.getFirstMatch(/(?:opr|opios)[\s/](\S+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/SamsungBrowser/i],
    describe(ua) {
      const browser = {
        name: "Samsung Internet for Android"
      };
      const version2 = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:SamsungBrowser)[\s/](\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/Whale/i],
    describe(ua) {
      const browser = {
        name: "NAVER Whale Browser"
      };
      const version2 = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:whale)[\s/](\d+(?:\.\d+)+)/i, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/MZBrowser/i],
    describe(ua) {
      const browser = {
        name: "MZ Browser"
      };
      const version2 = Utils.getFirstMatch(/(?:MZBrowser)[\s/](\d+(?:\.\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/focus/i],
    describe(ua) {
      const browser = {
        name: "Focus"
      };
      const version2 = Utils.getFirstMatch(/(?:focus)[\s/](\d+(?:\.\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/swing/i],
    describe(ua) {
      const browser = {
        name: "Swing"
      };
      const version2 = Utils.getFirstMatch(/(?:swing)[\s/](\d+(?:\.\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/coast/i],
    describe(ua) {
      const browser = {
        name: "Opera Coast"
      };
      const version2 = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:coast)[\s/](\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/opt\/\d+(?:.?_?\d+)+/i],
    describe(ua) {
      const browser = {
        name: "Opera Touch"
      };
      const version2 = Utils.getFirstMatch(/(?:opt)[\s/](\d+(\.?_?\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/yabrowser/i],
    describe(ua) {
      const browser = {
        name: "Yandex Browser"
      };
      const version2 = Utils.getFirstMatch(/(?:yabrowser)[\s/](\d+(\.?_?\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/ucbrowser/i],
    describe(ua) {
      const browser = {
        name: "UC Browser"
      };
      const version2 = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:ucbrowser)[\s/](\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/Maxthon|mxios/i],
    describe(ua) {
      const browser = {
        name: "Maxthon"
      };
      const version2 = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:Maxthon|mxios)[\s/](\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/epiphany/i],
    describe(ua) {
      const browser = {
        name: "Epiphany"
      };
      const version2 = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:epiphany)[\s/](\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/puffin/i],
    describe(ua) {
      const browser = {
        name: "Puffin"
      };
      const version2 = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:puffin)[\s/](\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/sleipnir/i],
    describe(ua) {
      const browser = {
        name: "Sleipnir"
      };
      const version2 = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:sleipnir)[\s/](\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/k-meleon/i],
    describe(ua) {
      const browser = {
        name: "K-Meleon"
      };
      const version2 = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:k-meleon)[\s/](\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/micromessenger/i],
    describe(ua) {
      const browser = {
        name: "WeChat"
      };
      const version2 = Utils.getFirstMatch(/(?:micromessenger)[\s/](\d+(\.?_?\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/qqbrowser/i],
    describe(ua) {
      const browser = {
        name: /qqbrowserlite/i.test(ua) ? "QQ Browser Lite" : "QQ Browser"
      };
      const version2 = Utils.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\d+(\.?_?\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/msie|trident/i],
    describe(ua) {
      const browser = {
        name: "Internet Explorer"
      };
      const version2 = Utils.getFirstMatch(/(?:msie |rv:)(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/\sedg\//i],
    describe(ua) {
      const browser = {
        name: "Microsoft Edge"
      };
      const version2 = Utils.getFirstMatch(/\sedg\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/edg([ea]|ios)/i],
    describe(ua) {
      const browser = {
        name: "Microsoft Edge"
      };
      const version2 = Utils.getSecondMatch(/edg([ea]|ios)\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/vivaldi/i],
    describe(ua) {
      const browser = {
        name: "Vivaldi"
      };
      const version2 = Utils.getFirstMatch(/vivaldi\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/seamonkey/i],
    describe(ua) {
      const browser = {
        name: "SeaMonkey"
      };
      const version2 = Utils.getFirstMatch(/seamonkey\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/sailfish/i],
    describe(ua) {
      const browser = {
        name: "Sailfish"
      };
      const version2 = Utils.getFirstMatch(/sailfish\s?browser\/(\d+(\.\d+)?)/i, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/silk/i],
    describe(ua) {
      const browser = {
        name: "Amazon Silk"
      };
      const version2 = Utils.getFirstMatch(/silk\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/phantom/i],
    describe(ua) {
      const browser = {
        name: "PhantomJS"
      };
      const version2 = Utils.getFirstMatch(/phantomjs\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/slimerjs/i],
    describe(ua) {
      const browser = {
        name: "SlimerJS"
      };
      const version2 = Utils.getFirstMatch(/slimerjs\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/blackberry|\bbb\d+/i, /rim\stablet/i],
    describe(ua) {
      const browser = {
        name: "BlackBerry"
      };
      const version2 = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/blackberry[\d]+\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/(web|hpw)[o0]s/i],
    describe(ua) {
      const browser = {
        name: "WebOS Browser"
      };
      const version2 = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/w(?:eb)?[o0]sbrowser\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/bada/i],
    describe(ua) {
      const browser = {
        name: "Bada"
      };
      const version2 = Utils.getFirstMatch(/dolfin\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/tizen/i],
    describe(ua) {
      const browser = {
        name: "Tizen"
      };
      const version2 = Utils.getFirstMatch(/(?:tizen\s?)?browser\/(\d+(\.?_?\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/qupzilla/i],
    describe(ua) {
      const browser = {
        name: "QupZilla"
      };
      const version2 = Utils.getFirstMatch(/(?:qupzilla)[\s/](\d+(\.?_?\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/firefox|iceweasel|fxios/i],
    describe(ua) {
      const browser = {
        name: "Firefox"
      };
      const version2 = Utils.getFirstMatch(/(?:firefox|iceweasel|fxios)[\s/](\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/electron/i],
    describe(ua) {
      const browser = {
        name: "Electron"
      };
      const version2 = Utils.getFirstMatch(/(?:electron)\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/MiuiBrowser/i],
    describe(ua) {
      const browser = {
        name: "Miui"
      };
      const version2 = Utils.getFirstMatch(/(?:MiuiBrowser)[\s/](\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/chromium/i],
    describe(ua) {
      const browser = {
        name: "Chromium"
      };
      const version2 = Utils.getFirstMatch(/(?:chromium)[\s/](\d+(\.?_?\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/chrome|crios|crmo/i],
    describe(ua) {
      const browser = {
        name: "Chrome"
      };
      const version2 = Utils.getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  {
    test: [/GSA/i],
    describe(ua) {
      const browser = {
        name: "Google Search"
      };
      const version2 = Utils.getFirstMatch(/(?:GSA)\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  /* Android Browser */
  {
    test(parser) {
      const notLikeAndroid = !parser.test(/like android/i);
      const butAndroid = parser.test(/android/i);
      return notLikeAndroid && butAndroid;
    },
    describe(ua) {
      const browser = {
        name: "Android Browser"
      };
      const version2 = Utils.getFirstMatch(commonVersionIdentifier, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  /* PlayStation 4 */
  {
    test: [/playstation 4/i],
    describe(ua) {
      const browser = {
        name: "PlayStation 4"
      };
      const version2 = Utils.getFirstMatch(commonVersionIdentifier, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  /* Safari */
  {
    test: [/safari|applewebkit/i],
    describe(ua) {
      const browser = {
        name: "Safari"
      };
      const version2 = Utils.getFirstMatch(commonVersionIdentifier, ua);
      if (version2) {
        browser.version = version2;
      }
      return browser;
    }
  },
  /* Something else */
  {
    test: [/.*/i],
    describe(ua) {
      const regexpWithoutDeviceSpec = /^(.*)\/(.*) /;
      const regexpWithDeviceSpec = /^(.*)\/(.*)[ \t]\((.*)/;
      const hasDeviceSpec = ua.search("\\(") !== -1;
      const regexp = hasDeviceSpec ? regexpWithDeviceSpec : regexpWithoutDeviceSpec;
      return {
        name: Utils.getFirstMatch(regexp, ua),
        version: Utils.getSecondMatch(regexp, ua)
      };
    }
  }
];
var parser_browsers_default = browsersList;

// node_modules/bowser/src/parser-os.js
var parser_os_default = [
  /* Roku */
  {
    test: [/Roku\/DVP/],
    describe(ua) {
      const version2 = Utils.getFirstMatch(/Roku\/DVP-(\d+\.\d+)/i, ua);
      return {
        name: OS_MAP.Roku,
        version: version2
      };
    }
  },
  /* Windows Phone */
  {
    test: [/windows phone/i],
    describe(ua) {
      const version2 = Utils.getFirstMatch(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i, ua);
      return {
        name: OS_MAP.WindowsPhone,
        version: version2
      };
    }
  },
  /* Windows */
  {
    test: [/windows /i],
    describe(ua) {
      const version2 = Utils.getFirstMatch(/Windows ((NT|XP)( \d\d?.\d)?)/i, ua);
      const versionName = Utils.getWindowsVersionName(version2);
      return {
        name: OS_MAP.Windows,
        version: version2,
        versionName
      };
    }
  },
  /* Firefox on iPad */
  {
    test: [/Macintosh(.*?) FxiOS(.*?)\//],
    describe(ua) {
      const result = {
        name: OS_MAP.iOS
      };
      const version2 = Utils.getSecondMatch(/(Version\/)(\d[\d.]+)/, ua);
      if (version2) {
        result.version = version2;
      }
      return result;
    }
  },
  /* macOS */
  {
    test: [/macintosh/i],
    describe(ua) {
      const version2 = Utils.getFirstMatch(/mac os x (\d+(\.?_?\d+)+)/i, ua).replace(/[_\s]/g, ".");
      const versionName = Utils.getMacOSVersionName(version2);
      const os3 = {
        name: OS_MAP.MacOS,
        version: version2
      };
      if (versionName) {
        os3.versionName = versionName;
      }
      return os3;
    }
  },
  /* iOS */
  {
    test: [/(ipod|iphone|ipad)/i],
    describe(ua) {
      const version2 = Utils.getFirstMatch(/os (\d+([_\s]\d+)*) like mac os x/i, ua).replace(/[_\s]/g, ".");
      return {
        name: OS_MAP.iOS,
        version: version2
      };
    }
  },
  /* Android */
  {
    test(parser) {
      const notLikeAndroid = !parser.test(/like android/i);
      const butAndroid = parser.test(/android/i);
      return notLikeAndroid && butAndroid;
    },
    describe(ua) {
      const version2 = Utils.getFirstMatch(/android[\s/-](\d+(\.\d+)*)/i, ua);
      const versionName = Utils.getAndroidVersionName(version2);
      const os3 = {
        name: OS_MAP.Android,
        version: version2
      };
      if (versionName) {
        os3.versionName = versionName;
      }
      return os3;
    }
  },
  /* WebOS */
  {
    test: [/(web|hpw)[o0]s/i],
    describe(ua) {
      const version2 = Utils.getFirstMatch(/(?:web|hpw)[o0]s\/(\d+(\.\d+)*)/i, ua);
      const os3 = {
        name: OS_MAP.WebOS
      };
      if (version2 && version2.length) {
        os3.version = version2;
      }
      return os3;
    }
  },
  /* BlackBerry */
  {
    test: [/blackberry|\bbb\d+/i, /rim\stablet/i],
    describe(ua) {
      const version2 = Utils.getFirstMatch(/rim\stablet\sos\s(\d+(\.\d+)*)/i, ua) || Utils.getFirstMatch(/blackberry\d+\/(\d+([_\s]\d+)*)/i, ua) || Utils.getFirstMatch(/\bbb(\d+)/i, ua);
      return {
        name: OS_MAP.BlackBerry,
        version: version2
      };
    }
  },
  /* Bada */
  {
    test: [/bada/i],
    describe(ua) {
      const version2 = Utils.getFirstMatch(/bada\/(\d+(\.\d+)*)/i, ua);
      return {
        name: OS_MAP.Bada,
        version: version2
      };
    }
  },
  /* Tizen */
  {
    test: [/tizen/i],
    describe(ua) {
      const version2 = Utils.getFirstMatch(/tizen[/\s](\d+(\.\d+)*)/i, ua);
      return {
        name: OS_MAP.Tizen,
        version: version2
      };
    }
  },
  /* Linux */
  {
    test: [/linux/i],
    describe() {
      return {
        name: OS_MAP.Linux
      };
    }
  },
  /* Chrome OS */
  {
    test: [/CrOS/],
    describe() {
      return {
        name: OS_MAP.ChromeOS
      };
    }
  },
  /* Playstation 4 */
  {
    test: [/PlayStation 4/],
    describe(ua) {
      const version2 = Utils.getFirstMatch(/PlayStation 4[/\s](\d+(\.\d+)*)/i, ua);
      return {
        name: OS_MAP.PlayStation4,
        version: version2
      };
    }
  }
];

// node_modules/bowser/src/parser-platforms.js
var parser_platforms_default = [
  /* Googlebot */
  {
    test: [/googlebot/i],
    describe() {
      return {
        type: "bot",
        vendor: "Google"
      };
    }
  },
  /* Huawei */
  {
    test: [/huawei/i],
    describe(ua) {
      const model = Utils.getFirstMatch(/(can-l01)/i, ua) && "Nova";
      const platform = {
        type: PLATFORMS_MAP.mobile,
        vendor: "Huawei"
      };
      if (model) {
        platform.model = model;
      }
      return platform;
    }
  },
  /* Nexus Tablet */
  {
    test: [/nexus\s*(?:7|8|9|10).*/i],
    describe() {
      return {
        type: PLATFORMS_MAP.tablet,
        vendor: "Nexus"
      };
    }
  },
  /* iPad */
  {
    test: [/ipad/i],
    describe() {
      return {
        type: PLATFORMS_MAP.tablet,
        vendor: "Apple",
        model: "iPad"
      };
    }
  },
  /* Firefox on iPad */
  {
    test: [/Macintosh(.*?) FxiOS(.*?)\//],
    describe() {
      return {
        type: PLATFORMS_MAP.tablet,
        vendor: "Apple",
        model: "iPad"
      };
    }
  },
  /* Amazon Kindle Fire */
  {
    test: [/kftt build/i],
    describe() {
      return {
        type: PLATFORMS_MAP.tablet,
        vendor: "Amazon",
        model: "Kindle Fire HD 7"
      };
    }
  },
  /* Another Amazon Tablet with Silk */
  {
    test: [/silk/i],
    describe() {
      return {
        type: PLATFORMS_MAP.tablet,
        vendor: "Amazon"
      };
    }
  },
  /* Tablet */
  {
    test: [/tablet(?! pc)/i],
    describe() {
      return {
        type: PLATFORMS_MAP.tablet
      };
    }
  },
  /* iPod/iPhone */
  {
    test(parser) {
      const iDevice = parser.test(/ipod|iphone/i);
      const likeIDevice = parser.test(/like (ipod|iphone)/i);
      return iDevice && !likeIDevice;
    },
    describe(ua) {
      const model = Utils.getFirstMatch(/(ipod|iphone)/i, ua);
      return {
        type: PLATFORMS_MAP.mobile,
        vendor: "Apple",
        model
      };
    }
  },
  /* Nexus Mobile */
  {
    test: [/nexus\s*[0-6].*/i, /galaxy nexus/i],
    describe() {
      return {
        type: PLATFORMS_MAP.mobile,
        vendor: "Nexus"
      };
    }
  },
  /* Mobile */
  {
    test: [/[^-]mobi/i],
    describe() {
      return {
        type: PLATFORMS_MAP.mobile
      };
    }
  },
  /* BlackBerry */
  {
    test(parser) {
      return parser.getBrowserName(true) === "blackberry";
    },
    describe() {
      return {
        type: PLATFORMS_MAP.mobile,
        vendor: "BlackBerry"
      };
    }
  },
  /* Bada */
  {
    test(parser) {
      return parser.getBrowserName(true) === "bada";
    },
    describe() {
      return {
        type: PLATFORMS_MAP.mobile
      };
    }
  },
  /* Windows Phone */
  {
    test(parser) {
      return parser.getBrowserName() === "windows phone";
    },
    describe() {
      return {
        type: PLATFORMS_MAP.mobile,
        vendor: "Microsoft"
      };
    }
  },
  /* Android Tablet */
  {
    test(parser) {
      const osMajorVersion = Number(String(parser.getOSVersion()).split(".")[0]);
      return parser.getOSName(true) === "android" && osMajorVersion >= 3;
    },
    describe() {
      return {
        type: PLATFORMS_MAP.tablet
      };
    }
  },
  /* Android Mobile */
  {
    test(parser) {
      return parser.getOSName(true) === "android";
    },
    describe() {
      return {
        type: PLATFORMS_MAP.mobile
      };
    }
  },
  /* desktop */
  {
    test(parser) {
      return parser.getOSName(true) === "macos";
    },
    describe() {
      return {
        type: PLATFORMS_MAP.desktop,
        vendor: "Apple"
      };
    }
  },
  /* Windows */
  {
    test(parser) {
      return parser.getOSName(true) === "windows";
    },
    describe() {
      return {
        type: PLATFORMS_MAP.desktop
      };
    }
  },
  /* Linux */
  {
    test(parser) {
      return parser.getOSName(true) === "linux";
    },
    describe() {
      return {
        type: PLATFORMS_MAP.desktop
      };
    }
  },
  /* PlayStation 4 */
  {
    test(parser) {
      return parser.getOSName(true) === "playstation 4";
    },
    describe() {
      return {
        type: PLATFORMS_MAP.tv
      };
    }
  },
  /* Roku */
  {
    test(parser) {
      return parser.getOSName(true) === "roku";
    },
    describe() {
      return {
        type: PLATFORMS_MAP.tv
      };
    }
  }
];

// node_modules/bowser/src/parser-engines.js
var parser_engines_default = [
  /* EdgeHTML */
  {
    test(parser) {
      return parser.getBrowserName(true) === "microsoft edge";
    },
    describe(ua) {
      const isBlinkBased = /\sedg\//i.test(ua);
      if (isBlinkBased) {
        return {
          name: ENGINE_MAP.Blink
        };
      }
      const version2 = Utils.getFirstMatch(/edge\/(\d+(\.?_?\d+)+)/i, ua);
      return {
        name: ENGINE_MAP.EdgeHTML,
        version: version2
      };
    }
  },
  /* Trident */
  {
    test: [/trident/i],
    describe(ua) {
      const engine = {
        name: ENGINE_MAP.Trident
      };
      const version2 = Utils.getFirstMatch(/trident\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        engine.version = version2;
      }
      return engine;
    }
  },
  /* Presto */
  {
    test(parser) {
      return parser.test(/presto/i);
    },
    describe(ua) {
      const engine = {
        name: ENGINE_MAP.Presto
      };
      const version2 = Utils.getFirstMatch(/presto\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        engine.version = version2;
      }
      return engine;
    }
  },
  /* Gecko */
  {
    test(parser) {
      const isGecko = parser.test(/gecko/i);
      const likeGecko = parser.test(/like gecko/i);
      return isGecko && !likeGecko;
    },
    describe(ua) {
      const engine = {
        name: ENGINE_MAP.Gecko
      };
      const version2 = Utils.getFirstMatch(/gecko\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        engine.version = version2;
      }
      return engine;
    }
  },
  /* Blink */
  {
    test: [/(apple)?webkit\/537\.36/i],
    describe() {
      return {
        name: ENGINE_MAP.Blink
      };
    }
  },
  /* WebKit */
  {
    test: [/(apple)?webkit/i],
    describe(ua) {
      const engine = {
        name: ENGINE_MAP.WebKit
      };
      const version2 = Utils.getFirstMatch(/webkit\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        engine.version = version2;
      }
      return engine;
    }
  }
];

// node_modules/bowser/src/parser.js
var Parser = class {
  /**
   * Create instance of Parser
   *
   * @param {String} UA User-Agent string
   * @param {Boolean} [skipParsing=false] parser can skip parsing in purpose of performance
   * improvements if you need to make a more particular parsing
   * like {@link Parser#parseBrowser} or {@link Parser#parsePlatform}
   *
   * @throw {Error} in case of empty UA String
   *
   * @constructor
   */
  constructor(UA, skipParsing = false) {
    if (UA === void 0 || UA === null || UA === "") {
      throw new Error("UserAgent parameter can't be empty");
    }
    this._ua = UA;
    this.parsedResult = {};
    if (skipParsing !== true) {
      this.parse();
    }
  }
  /**
   * Get UserAgent string of current Parser instance
   * @return {String} User-Agent String of the current <Parser> object
   *
   * @public
   */
  getUA() {
    return this._ua;
  }
  /**
   * Test a UA string for a regexp
   * @param {RegExp} regex
   * @return {Boolean}
   */
  test(regex) {
    return regex.test(this._ua);
  }
  /**
   * Get parsed browser object
   * @return {Object}
   */
  parseBrowser() {
    this.parsedResult.browser = {};
    const browserDescriptor = Utils.find(parser_browsers_default, (_browser) => {
      if (typeof _browser.test === "function") {
        return _browser.test(this);
      }
      if (_browser.test instanceof Array) {
        return _browser.test.some((condition) => this.test(condition));
      }
      throw new Error("Browser's test function is not valid");
    });
    if (browserDescriptor) {
      this.parsedResult.browser = browserDescriptor.describe(this.getUA());
    }
    return this.parsedResult.browser;
  }
  /**
   * Get parsed browser object
   * @return {Object}
   *
   * @public
   */
  getBrowser() {
    if (this.parsedResult.browser) {
      return this.parsedResult.browser;
    }
    return this.parseBrowser();
  }
  /**
   * Get browser's name
   * @return {String} Browser's name or an empty string
   *
   * @public
   */
  getBrowserName(toLowerCase) {
    if (toLowerCase) {
      return String(this.getBrowser().name).toLowerCase() || "";
    }
    return this.getBrowser().name || "";
  }
  /**
   * Get browser's version
   * @return {String} version of browser
   *
   * @public
   */
  getBrowserVersion() {
    return this.getBrowser().version;
  }
  /**
   * Get OS
   * @return {Object}
   *
   * @example
   * this.getOS();
   * {
   *   name: 'macOS',
   *   version: '10.11.12'
   * }
   */
  getOS() {
    if (this.parsedResult.os) {
      return this.parsedResult.os;
    }
    return this.parseOS();
  }
  /**
   * Parse OS and save it to this.parsedResult.os
   * @return {*|{}}
   */
  parseOS() {
    this.parsedResult.os = {};
    const os3 = Utils.find(parser_os_default, (_os) => {
      if (typeof _os.test === "function") {
        return _os.test(this);
      }
      if (_os.test instanceof Array) {
        return _os.test.some((condition) => this.test(condition));
      }
      throw new Error("Browser's test function is not valid");
    });
    if (os3) {
      this.parsedResult.os = os3.describe(this.getUA());
    }
    return this.parsedResult.os;
  }
  /**
   * Get OS name
   * @param {Boolean} [toLowerCase] return lower-cased value
   * @return {String} name of the OS — macOS, Windows, Linux, etc.
   */
  getOSName(toLowerCase) {
    const { name } = this.getOS();
    if (toLowerCase) {
      return String(name).toLowerCase() || "";
    }
    return name || "";
  }
  /**
   * Get OS version
   * @return {String} full version with dots ('10.11.12', '5.6', etc)
   */
  getOSVersion() {
    return this.getOS().version;
  }
  /**
   * Get parsed platform
   * @return {{}}
   */
  getPlatform() {
    if (this.parsedResult.platform) {
      return this.parsedResult.platform;
    }
    return this.parsePlatform();
  }
  /**
   * Get platform name
   * @param {Boolean} [toLowerCase=false]
   * @return {*}
   */
  getPlatformType(toLowerCase = false) {
    const { type } = this.getPlatform();
    if (toLowerCase) {
      return String(type).toLowerCase() || "";
    }
    return type || "";
  }
  /**
   * Get parsed platform
   * @return {{}}
   */
  parsePlatform() {
    this.parsedResult.platform = {};
    const platform = Utils.find(parser_platforms_default, (_platform) => {
      if (typeof _platform.test === "function") {
        return _platform.test(this);
      }
      if (_platform.test instanceof Array) {
        return _platform.test.some((condition) => this.test(condition));
      }
      throw new Error("Browser's test function is not valid");
    });
    if (platform) {
      this.parsedResult.platform = platform.describe(this.getUA());
    }
    return this.parsedResult.platform;
  }
  /**
   * Get parsed engine
   * @return {{}}
   */
  getEngine() {
    if (this.parsedResult.engine) {
      return this.parsedResult.engine;
    }
    return this.parseEngine();
  }
  /**
   * Get engines's name
   * @return {String} Engines's name or an empty string
   *
   * @public
   */
  getEngineName(toLowerCase) {
    if (toLowerCase) {
      return String(this.getEngine().name).toLowerCase() || "";
    }
    return this.getEngine().name || "";
  }
  /**
   * Get parsed platform
   * @return {{}}
   */
  parseEngine() {
    this.parsedResult.engine = {};
    const engine = Utils.find(parser_engines_default, (_engine) => {
      if (typeof _engine.test === "function") {
        return _engine.test(this);
      }
      if (_engine.test instanceof Array) {
        return _engine.test.some((condition) => this.test(condition));
      }
      throw new Error("Browser's test function is not valid");
    });
    if (engine) {
      this.parsedResult.engine = engine.describe(this.getUA());
    }
    return this.parsedResult.engine;
  }
  /**
   * Parse full information about the browser
   * @returns {Parser}
   */
  parse() {
    this.parseBrowser();
    this.parseOS();
    this.parsePlatform();
    this.parseEngine();
    return this;
  }
  /**
   * Get parsed result
   * @return {ParsedResult}
   */
  getResult() {
    return Utils.assign({}, this.parsedResult);
  }
  /**
   * Check if parsed browser matches certain conditions
   *
   * @param {Object} checkTree It's one or two layered object,
   * which can include a platform or an OS on the first layer
   * and should have browsers specs on the bottom-laying layer
   *
   * @returns {Boolean|undefined} Whether the browser satisfies the set conditions or not.
   * Returns `undefined` when the browser is no described in the checkTree object.
   *
   * @example
   * const browser = Bowser.getParser(window.navigator.userAgent);
   * if (browser.satisfies({chrome: '>118.01.1322' }))
   * // or with os
   * if (browser.satisfies({windows: { chrome: '>118.01.1322' } }))
   * // or with platforms
   * if (browser.satisfies({desktop: { chrome: '>118.01.1322' } }))
   */
  satisfies(checkTree) {
    const platformsAndOSes = {};
    let platformsAndOSCounter = 0;
    const browsers = {};
    let browsersCounter = 0;
    const allDefinitions = Object.keys(checkTree);
    allDefinitions.forEach((key) => {
      const currentDefinition = checkTree[key];
      if (typeof currentDefinition === "string") {
        browsers[key] = currentDefinition;
        browsersCounter += 1;
      } else if (typeof currentDefinition === "object") {
        platformsAndOSes[key] = currentDefinition;
        platformsAndOSCounter += 1;
      }
    });
    if (platformsAndOSCounter > 0) {
      const platformsAndOSNames = Object.keys(platformsAndOSes);
      const OSMatchingDefinition = Utils.find(platformsAndOSNames, (name) => this.isOS(name));
      if (OSMatchingDefinition) {
        const osResult = this.satisfies(platformsAndOSes[OSMatchingDefinition]);
        if (osResult !== void 0) {
          return osResult;
        }
      }
      const platformMatchingDefinition = Utils.find(
        platformsAndOSNames,
        (name) => this.isPlatform(name)
      );
      if (platformMatchingDefinition) {
        const platformResult = this.satisfies(platformsAndOSes[platformMatchingDefinition]);
        if (platformResult !== void 0) {
          return platformResult;
        }
      }
    }
    if (browsersCounter > 0) {
      const browserNames = Object.keys(browsers);
      const matchingDefinition = Utils.find(browserNames, (name) => this.isBrowser(name, true));
      if (matchingDefinition !== void 0) {
        return this.compareVersion(browsers[matchingDefinition]);
      }
    }
    return void 0;
  }
  /**
   * Check if the browser name equals the passed string
   * @param browserName The string to compare with the browser name
   * @param [includingAlias=false] The flag showing whether alias will be included into comparison
   * @returns {boolean}
   */
  isBrowser(browserName, includingAlias = false) {
    const defaultBrowserName = this.getBrowserName().toLowerCase();
    let browserNameLower = browserName.toLowerCase();
    const alias = Utils.getBrowserTypeByAlias(browserNameLower);
    if (includingAlias && alias) {
      browserNameLower = alias.toLowerCase();
    }
    return browserNameLower === defaultBrowserName;
  }
  compareVersion(version2) {
    let expectedResults = [0];
    let comparableVersion = version2;
    let isLoose = false;
    const currentBrowserVersion = this.getBrowserVersion();
    if (typeof currentBrowserVersion !== "string") {
      return void 0;
    }
    if (version2[0] === ">" || version2[0] === "<") {
      comparableVersion = version2.substr(1);
      if (version2[1] === "=") {
        isLoose = true;
        comparableVersion = version2.substr(2);
      } else {
        expectedResults = [];
      }
      if (version2[0] === ">") {
        expectedResults.push(1);
      } else {
        expectedResults.push(-1);
      }
    } else if (version2[0] === "=") {
      comparableVersion = version2.substr(1);
    } else if (version2[0] === "~") {
      isLoose = true;
      comparableVersion = version2.substr(1);
    }
    return expectedResults.indexOf(
      Utils.compareVersions(currentBrowserVersion, comparableVersion, isLoose)
    ) > -1;
  }
  isOS(osName) {
    return this.getOSName(true) === String(osName).toLowerCase();
  }
  isPlatform(platformType) {
    return this.getPlatformType(true) === String(platformType).toLowerCase();
  }
  isEngine(engineName) {
    return this.getEngineName(true) === String(engineName).toLowerCase();
  }
  /**
   * Is anything? Check if the browser is called "anything",
   * the OS called "anything" or the platform called "anything"
   * @param {String} anything
   * @param [includingAlias=false] The flag showing whether alias will be included into comparison
   * @returns {Boolean}
   */
  is(anything, includingAlias = false) {
    return this.isBrowser(anything, includingAlias) || this.isOS(anything) || this.isPlatform(anything);
  }
  /**
   * Check if any of the given values satisfies this.is(anything)
   * @param {String[]} anythings
   * @returns {Boolean}
   */
  some(anythings = []) {
    return anythings.some((anything) => this.is(anything));
  }
};
var parser_default = Parser;

// node_modules/bowser/src/bowser.js
var Bowser = class {
  /**
   * Creates a {@link Parser} instance
   *
   * @param {String} UA UserAgent string
   * @param {Boolean} [skipParsing=false] Will make the Parser postpone parsing until you ask it
   * explicitly. Same as `skipParsing` for {@link Parser}.
   * @returns {Parser}
   * @throws {Error} when UA is not a String
   *
   * @example
   * const parser = Bowser.getParser(window.navigator.userAgent);
   * const result = parser.getResult();
   */
  static getParser(UA, skipParsing = false) {
    if (typeof UA !== "string") {
      throw new Error("UserAgent should be a string");
    }
    return new parser_default(UA, skipParsing);
  }
  /**
   * Creates a {@link Parser} instance and runs {@link Parser.getResult} immediately
   *
   * @param UA
   * @return {ParsedResult}
   *
   * @example
   * const result = Bowser.parse(window.navigator.userAgent);
   */
  static parse(UA) {
    return new parser_default(UA).getResult();
  }
  static get BROWSER_MAP() {
    return BROWSER_MAP;
  }
  static get ENGINE_MAP() {
    return ENGINE_MAP;
  }
  static get OS_MAP() {
    return OS_MAP;
  }
  static get PLATFORMS_MAP() {
    return PLATFORMS_MAP;
  }
};
var bowser_default = Bowser;

// node_modules/@aws-sdk/util-user-agent-browser/dist-es/index.js
var defaultUserAgent = ({ serviceId, clientVersion }) => async () => {
  var _a5, _b, _c2, _d, _e2;
  const parsedUA = typeof window !== "undefined" && ((_a5 = window == null ? void 0 : window.navigator) == null ? void 0 : _a5.userAgent) ? bowser_default.parse(window.navigator.userAgent) : void 0;
  const sections = [
    ["aws-sdk-js", clientVersion],
    ["ua", "2.0"],
    [`os/${((_b = parsedUA == null ? void 0 : parsedUA.os) == null ? void 0 : _b.name) || "other"}`, (_c2 = parsedUA == null ? void 0 : parsedUA.os) == null ? void 0 : _c2.version],
    ["lang/js"],
    ["md/browser", `${((_d = parsedUA == null ? void 0 : parsedUA.browser) == null ? void 0 : _d.name) ?? "unknown"}_${((_e2 = parsedUA == null ? void 0 : parsedUA.browser) == null ? void 0 : _e2.version) ?? "unknown"}`]
  ];
  if (serviceId) {
    sections.push([`api/${serviceId}`, clientVersion]);
  }
  return sections;
};

// node_modules/@aws-crypto/crc32/build/module/aws_crc32.js
var AwsCrc32 = (
  /** @class */
  function() {
    function AwsCrc322() {
      this.crc32 = new Crc32();
    }
    AwsCrc322.prototype.update = function(toHash) {
      if (isEmptyData(toHash))
        return;
      this.crc32.update(convertToBuffer(toHash));
    };
    AwsCrc322.prototype.digest = function() {
      return __awaiter(this, void 0, void 0, function() {
        return __generator(this, function(_a5) {
          return [2, numToUint8(this.crc32.digest())];
        });
      });
    };
    AwsCrc322.prototype.reset = function() {
      this.crc32 = new Crc32();
    };
    return AwsCrc322;
  }()
);

// node_modules/@aws-crypto/crc32/build/module/index.js
var Crc32 = (
  /** @class */
  function() {
    function Crc322() {
      this.checksum = 4294967295;
    }
    Crc322.prototype.update = function(data) {
      var e_1, _a5;
      try {
        for (var data_1 = __values(data), data_1_1 = data_1.next(); !data_1_1.done; data_1_1 = data_1.next()) {
          var byte = data_1_1.value;
          this.checksum = this.checksum >>> 8 ^ lookupTable[(this.checksum ^ byte) & 255];
        }
      } catch (e_1_1) {
        e_1 = { error: e_1_1 };
      } finally {
        try {
          if (data_1_1 && !data_1_1.done && (_a5 = data_1.return)) _a5.call(data_1);
        } finally {
          if (e_1) throw e_1.error;
        }
      }
      return this;
    };
    Crc322.prototype.digest = function() {
      return (this.checksum ^ 4294967295) >>> 0;
    };
    return Crc322;
  }()
);
var a_lookUpTable = [
  0,
  1996959894,
  3993919788,
  2567524794,
  124634137,
  1886057615,
  3915621685,
  2657392035,
  249268274,
  2044508324,
  3772115230,
  2547177864,
  162941995,
  2125561021,
  3887607047,
  2428444049,
  498536548,
  1789927666,
  4089016648,
  2227061214,
  450548861,
  1843258603,
  4107580753,
  2211677639,
  325883990,
  1684777152,
  4251122042,
  2321926636,
  335633487,
  1661365465,
  4195302755,
  2366115317,
  997073096,
  1281953886,
  3579855332,
  2724688242,
  1006888145,
  1258607687,
  3524101629,
  2768942443,
  901097722,
  1119000684,
  3686517206,
  2898065728,
  853044451,
  1172266101,
  3705015759,
  2882616665,
  651767980,
  1373503546,
  3369554304,
  3218104598,
  565507253,
  1454621731,
  3485111705,
  3099436303,
  671266974,
  1594198024,
  3322730930,
  2970347812,
  795835527,
  1483230225,
  3244367275,
  3060149565,
  1994146192,
  31158534,
  2563907772,
  4023717930,
  1907459465,
  112637215,
  2680153253,
  3904427059,
  2013776290,
  251722036,
  2517215374,
  3775830040,
  2137656763,
  141376813,
  2439277719,
  3865271297,
  1802195444,
  476864866,
  2238001368,
  4066508878,
  1812370925,
  453092731,
  2181625025,
  4111451223,
  1706088902,
  314042704,
  2344532202,
  4240017532,
  1658658271,
  366619977,
  2362670323,
  4224994405,
  1303535960,
  984961486,
  2747007092,
  3569037538,
  1256170817,
  1037604311,
  2765210733,
  3554079995,
  1131014506,
  879679996,
  2909243462,
  3663771856,
  1141124467,
  855842277,
  2852801631,
  3708648649,
  1342533948,
  654459306,
  3188396048,
  3373015174,
  1466479909,
  544179635,
  3110523913,
  3462522015,
  1591671054,
  702138776,
  2966460450,
  3352799412,
  1504918807,
  783551873,
  3082640443,
  3233442989,
  3988292384,
  2596254646,
  62317068,
  1957810842,
  3939845945,
  2647816111,
  81470997,
  1943803523,
  3814918930,
  2489596804,
  225274430,
  2053790376,
  3826175755,
  2466906013,
  167816743,
  2097651377,
  4027552580,
  2265490386,
  503444072,
  1762050814,
  4150417245,
  2154129355,
  426522225,
  1852507879,
  4275313526,
  2312317920,
  282753626,
  1742555852,
  4189708143,
  2394877945,
  397917763,
  1622183637,
  3604390888,
  2714866558,
  953729732,
  1340076626,
  3518719985,
  2797360999,
  1068828381,
  1219638859,
  3624741850,
  2936675148,
  906185462,
  1090812512,
  3747672003,
  2825379669,
  829329135,
  1181335161,
  3412177804,
  3160834842,
  628085408,
  1382605366,
  3423369109,
  3138078467,
  570562233,
  1426400815,
  3317316542,
  2998733608,
  733239954,
  1555261956,
  3268935591,
  3050360625,
  752459403,
  1541320221,
  2607071920,
  3965973030,
  1969922972,
  40735498,
  2617837225,
  3943577151,
  1913087877,
  83908371,
  2512341634,
  3803740692,
  2075208622,
  213261112,
  2463272603,
  3855990285,
  2094854071,
  198958881,
  2262029012,
  4057260610,
  1759359992,
  534414190,
  2176718541,
  4139329115,
  1873836001,
  414664567,
  2282248934,
  4279200368,
  1711684554,
  285281116,
  2405801727,
  4167216745,
  1634467795,
  376229701,
  2685067896,
  3608007406,
  1308918612,
  956543938,
  2808555105,
  3495958263,
  1231636301,
  1047427035,
  2932959818,
  3654703836,
  1088359270,
  936918e3,
  2847714899,
  3736837829,
  1202900863,
  817233897,
  3183342108,
  3401237130,
  1404277552,
  615818150,
  3134207493,
  3453421203,
  1423857449,
  601450431,
  3009837614,
  3294710456,
  1567103746,
  711928724,
  3020668471,
  3272380065,
  1510334235,
  755167117
];
var lookupTable = uint32ArrayFrom(a_lookUpTable);

// node_modules/@smithy/eventstream-codec/dist-es/Int64.js
var Int642 = class _Int64 {
  constructor(bytes) {
    this.bytes = bytes;
    if (bytes.byteLength !== 8) {
      throw new Error("Int64 buffers must be exactly 8 bytes");
    }
  }
  static fromNumber(number) {
    if (number > 9223372036854776e3 || number < -9223372036854776e3) {
      throw new Error(`${number} is too large (or, if negative, too small) to represent as an Int64`);
    }
    const bytes = new Uint8Array(8);
    for (let i11 = 7, remaining = Math.abs(Math.round(number)); i11 > -1 && remaining > 0; i11--, remaining /= 256) {
      bytes[i11] = remaining;
    }
    if (number < 0) {
      negate2(bytes);
    }
    return new _Int64(bytes);
  }
  valueOf() {
    const bytes = this.bytes.slice(0);
    const negative = bytes[0] & 128;
    if (negative) {
      negate2(bytes);
    }
    return parseInt(toHex(bytes), 16) * (negative ? -1 : 1);
  }
  toString() {
    return String(this.valueOf());
  }
};
function negate2(bytes) {
  for (let i11 = 0; i11 < 8; i11++) {
    bytes[i11] ^= 255;
  }
  for (let i11 = 7; i11 > -1; i11--) {
    bytes[i11]++;
    if (bytes[i11] !== 0)
      break;
  }
}

// node_modules/@smithy/eventstream-codec/dist-es/HeaderMarshaller.js
var HeaderMarshaller = class {
  constructor(toUtf82, fromUtf84) {
    this.toUtf8 = toUtf82;
    this.fromUtf8 = fromUtf84;
  }
  format(headers) {
    const chunks = [];
    for (const headerName of Object.keys(headers)) {
      const bytes = this.fromUtf8(headerName);
      chunks.push(Uint8Array.from([bytes.byteLength]), bytes, this.formatHeaderValue(headers[headerName]));
    }
    const out = new Uint8Array(chunks.reduce((carry, bytes) => carry + bytes.byteLength, 0));
    let position = 0;
    for (const chunk of chunks) {
      out.set(chunk, position);
      position += chunk.byteLength;
    }
    return out;
  }
  formatHeaderValue(header) {
    switch (header.type) {
      case "boolean":
        return Uint8Array.from([header.value ? 0 : 1]);
      case "byte":
        return Uint8Array.from([2, header.value]);
      case "short":
        const shortView = new DataView(new ArrayBuffer(3));
        shortView.setUint8(0, 3);
        shortView.setInt16(1, header.value, false);
        return new Uint8Array(shortView.buffer);
      case "integer":
        const intView = new DataView(new ArrayBuffer(5));
        intView.setUint8(0, 4);
        intView.setInt32(1, header.value, false);
        return new Uint8Array(intView.buffer);
      case "long":
        const longBytes = new Uint8Array(9);
        longBytes[0] = 5;
        longBytes.set(header.value.bytes, 1);
        return longBytes;
      case "binary":
        const binView = new DataView(new ArrayBuffer(3 + header.value.byteLength));
        binView.setUint8(0, 6);
        binView.setUint16(1, header.value.byteLength, false);
        const binBytes = new Uint8Array(binView.buffer);
        binBytes.set(header.value, 3);
        return binBytes;
      case "string":
        const utf8Bytes = this.fromUtf8(header.value);
        const strView = new DataView(new ArrayBuffer(3 + utf8Bytes.byteLength));
        strView.setUint8(0, 7);
        strView.setUint16(1, utf8Bytes.byteLength, false);
        const strBytes = new Uint8Array(strView.buffer);
        strBytes.set(utf8Bytes, 3);
        return strBytes;
      case "timestamp":
        const tsBytes = new Uint8Array(9);
        tsBytes[0] = 8;
        tsBytes.set(Int642.fromNumber(header.value.valueOf()).bytes, 1);
        return tsBytes;
      case "uuid":
        if (!UUID_PATTERN2.test(header.value)) {
          throw new Error(`Invalid UUID received: ${header.value}`);
        }
        const uuidBytes = new Uint8Array(17);
        uuidBytes[0] = 9;
        uuidBytes.set(fromHex(header.value.replace(/\-/g, "")), 1);
        return uuidBytes;
    }
  }
  parse(headers) {
    const out = {};
    let position = 0;
    while (position < headers.byteLength) {
      const nameLength = headers.getUint8(position++);
      const name = this.toUtf8(new Uint8Array(headers.buffer, headers.byteOffset + position, nameLength));
      position += nameLength;
      switch (headers.getUint8(position++)) {
        case 0:
          out[name] = {
            type: BOOLEAN_TAG,
            value: true
          };
          break;
        case 1:
          out[name] = {
            type: BOOLEAN_TAG,
            value: false
          };
          break;
        case 2:
          out[name] = {
            type: BYTE_TAG,
            value: headers.getInt8(position++)
          };
          break;
        case 3:
          out[name] = {
            type: SHORT_TAG,
            value: headers.getInt16(position, false)
          };
          position += 2;
          break;
        case 4:
          out[name] = {
            type: INT_TAG,
            value: headers.getInt32(position, false)
          };
          position += 4;
          break;
        case 5:
          out[name] = {
            type: LONG_TAG,
            value: new Int642(new Uint8Array(headers.buffer, headers.byteOffset + position, 8))
          };
          position += 8;
          break;
        case 6:
          const binaryLength = headers.getUint16(position, false);
          position += 2;
          out[name] = {
            type: BINARY_TAG,
            value: new Uint8Array(headers.buffer, headers.byteOffset + position, binaryLength)
          };
          position += binaryLength;
          break;
        case 7:
          const stringLength = headers.getUint16(position, false);
          position += 2;
          out[name] = {
            type: STRING_TAG,
            value: this.toUtf8(new Uint8Array(headers.buffer, headers.byteOffset + position, stringLength))
          };
          position += stringLength;
          break;
        case 8:
          out[name] = {
            type: TIMESTAMP_TAG,
            value: new Date(new Int642(new Uint8Array(headers.buffer, headers.byteOffset + position, 8)).valueOf())
          };
          position += 8;
          break;
        case 9:
          const uuidBytes = new Uint8Array(headers.buffer, headers.byteOffset + position, 16);
          position += 16;
          out[name] = {
            type: UUID_TAG,
            value: `${toHex(uuidBytes.subarray(0, 4))}-${toHex(uuidBytes.subarray(4, 6))}-${toHex(uuidBytes.subarray(6, 8))}-${toHex(uuidBytes.subarray(8, 10))}-${toHex(uuidBytes.subarray(10))}`
          };
          break;
        default:
          throw new Error(`Unrecognized header type tag`);
      }
    }
    return out;
  }
};
var HEADER_VALUE_TYPE2;
(function(HEADER_VALUE_TYPE3) {
  HEADER_VALUE_TYPE3[HEADER_VALUE_TYPE3["boolTrue"] = 0] = "boolTrue";
  HEADER_VALUE_TYPE3[HEADER_VALUE_TYPE3["boolFalse"] = 1] = "boolFalse";
  HEADER_VALUE_TYPE3[HEADER_VALUE_TYPE3["byte"] = 2] = "byte";
  HEADER_VALUE_TYPE3[HEADER_VALUE_TYPE3["short"] = 3] = "short";
  HEADER_VALUE_TYPE3[HEADER_VALUE_TYPE3["integer"] = 4] = "integer";
  HEADER_VALUE_TYPE3[HEADER_VALUE_TYPE3["long"] = 5] = "long";
  HEADER_VALUE_TYPE3[HEADER_VALUE_TYPE3["byteArray"] = 6] = "byteArray";
  HEADER_VALUE_TYPE3[HEADER_VALUE_TYPE3["string"] = 7] = "string";
  HEADER_VALUE_TYPE3[HEADER_VALUE_TYPE3["timestamp"] = 8] = "timestamp";
  HEADER_VALUE_TYPE3[HEADER_VALUE_TYPE3["uuid"] = 9] = "uuid";
})(HEADER_VALUE_TYPE2 || (HEADER_VALUE_TYPE2 = {}));
var BOOLEAN_TAG = "boolean";
var BYTE_TAG = "byte";
var SHORT_TAG = "short";
var INT_TAG = "integer";
var LONG_TAG = "long";
var BINARY_TAG = "binary";
var STRING_TAG = "string";
var TIMESTAMP_TAG = "timestamp";
var UUID_TAG = "uuid";
var UUID_PATTERN2 = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;

// node_modules/@smithy/eventstream-codec/dist-es/splitMessage.js
var PRELUDE_MEMBER_LENGTH = 4;
var PRELUDE_LENGTH = PRELUDE_MEMBER_LENGTH * 2;
var CHECKSUM_LENGTH = 4;
var MINIMUM_MESSAGE_LENGTH = PRELUDE_LENGTH + CHECKSUM_LENGTH * 2;
function splitMessage({ byteLength: byteLength2, byteOffset, buffer }) {
  if (byteLength2 < MINIMUM_MESSAGE_LENGTH) {
    throw new Error("Provided message too short to accommodate event stream message overhead");
  }
  const view = new DataView(buffer, byteOffset, byteLength2);
  const messageLength = view.getUint32(0, false);
  if (byteLength2 !== messageLength) {
    throw new Error("Reported message length does not match received message length");
  }
  const headerLength = view.getUint32(PRELUDE_MEMBER_LENGTH, false);
  const expectedPreludeChecksum = view.getUint32(PRELUDE_LENGTH, false);
  const expectedMessageChecksum = view.getUint32(byteLength2 - CHECKSUM_LENGTH, false);
  const checksummer = new Crc32().update(new Uint8Array(buffer, byteOffset, PRELUDE_LENGTH));
  if (expectedPreludeChecksum !== checksummer.digest()) {
    throw new Error(`The prelude checksum specified in the message (${expectedPreludeChecksum}) does not match the calculated CRC32 checksum (${checksummer.digest()})`);
  }
  checksummer.update(new Uint8Array(buffer, byteOffset + PRELUDE_LENGTH, byteLength2 - (PRELUDE_LENGTH + CHECKSUM_LENGTH)));
  if (expectedMessageChecksum !== checksummer.digest()) {
    throw new Error(`The message checksum (${checksummer.digest()}) did not match the expected value of ${expectedMessageChecksum}`);
  }
  return {
    headers: new DataView(buffer, byteOffset + PRELUDE_LENGTH + CHECKSUM_LENGTH, headerLength),
    body: new Uint8Array(buffer, byteOffset + PRELUDE_LENGTH + CHECKSUM_LENGTH + headerLength, messageLength - headerLength - (PRELUDE_LENGTH + CHECKSUM_LENGTH + CHECKSUM_LENGTH))
  };
}

// node_modules/@smithy/eventstream-codec/dist-es/EventStreamCodec.js
var EventStreamCodec = class {
  constructor(toUtf82, fromUtf84) {
    this.headerMarshaller = new HeaderMarshaller(toUtf82, fromUtf84);
    this.messageBuffer = [];
    this.isEndOfStream = false;
  }
  feed(message) {
    this.messageBuffer.push(this.decode(message));
  }
  endOfStream() {
    this.isEndOfStream = true;
  }
  getMessage() {
    const message = this.messageBuffer.pop();
    const isEndOfStream = this.isEndOfStream;
    return {
      getMessage() {
        return message;
      },
      isEndOfStream() {
        return isEndOfStream;
      }
    };
  }
  getAvailableMessages() {
    const messages2 = this.messageBuffer;
    this.messageBuffer = [];
    const isEndOfStream = this.isEndOfStream;
    return {
      getMessages() {
        return messages2;
      },
      isEndOfStream() {
        return isEndOfStream;
      }
    };
  }
  encode({ headers: rawHeaders, body }) {
    const headers = this.headerMarshaller.format(rawHeaders);
    const length2 = headers.byteLength + body.byteLength + 16;
    const out = new Uint8Array(length2);
    const view = new DataView(out.buffer, out.byteOffset, out.byteLength);
    const checksum = new Crc32();
    view.setUint32(0, length2, false);
    view.setUint32(4, headers.byteLength, false);
    view.setUint32(8, checksum.update(out.subarray(0, 8)).digest(), false);
    out.set(headers, 12);
    out.set(body, headers.byteLength + 12);
    view.setUint32(length2 - 4, checksum.update(out.subarray(8, length2 - 4)).digest(), false);
    return out;
  }
  decode(message) {
    const { headers, body } = splitMessage(message);
    return { headers: this.headerMarshaller.parse(headers), body };
  }
  formatHeaders(rawHeaders) {
    return this.headerMarshaller.format(rawHeaders);
  }
};

// node_modules/@smithy/eventstream-codec/dist-es/MessageDecoderStream.js
var MessageDecoderStream = class {
  constructor(options) {
    this.options = options;
  }
  [Symbol.asyncIterator]() {
    return this.asyncIterator();
  }
  async *asyncIterator() {
    for await (const bytes of this.options.inputStream) {
      const decoded = this.options.decoder.decode(bytes);
      yield decoded;
    }
  }
};

// node_modules/@smithy/eventstream-codec/dist-es/MessageEncoderStream.js
var MessageEncoderStream = class {
  constructor(options) {
    this.options = options;
  }
  [Symbol.asyncIterator]() {
    return this.asyncIterator();
  }
  async *asyncIterator() {
    for await (const msg of this.options.messageStream) {
      const encoded = this.options.encoder.encode(msg);
      yield encoded;
    }
    if (this.options.includeEndFrame) {
      yield new Uint8Array(0);
    }
  }
};

// node_modules/@smithy/eventstream-codec/dist-es/SmithyMessageDecoderStream.js
var SmithyMessageDecoderStream = class {
  constructor(options) {
    this.options = options;
  }
  [Symbol.asyncIterator]() {
    return this.asyncIterator();
  }
  async *asyncIterator() {
    for await (const message of this.options.messageStream) {
      const deserialized = await this.options.deserializer(message);
      if (deserialized === void 0)
        continue;
      yield deserialized;
    }
  }
};

// node_modules/@smithy/eventstream-codec/dist-es/SmithyMessageEncoderStream.js
var SmithyMessageEncoderStream = class {
  constructor(options) {
    this.options = options;
  }
  [Symbol.asyncIterator]() {
    return this.asyncIterator();
  }
  async *asyncIterator() {
    for await (const chunk of this.options.inputStream) {
      const payloadBuf = this.options.serializer(chunk);
      yield payloadBuf;
    }
  }
};

// node_modules/@smithy/eventstream-serde-universal/dist-es/getChunkedStream.js
function getChunkedStream(source) {
  let currentMessageTotalLength = 0;
  let currentMessagePendingLength = 0;
  let currentMessage = null;
  let messageLengthBuffer = null;
  const allocateMessage = (size) => {
    if (typeof size !== "number") {
      throw new Error("Attempted to allocate an event message where size was not a number: " + size);
    }
    currentMessageTotalLength = size;
    currentMessagePendingLength = 4;
    currentMessage = new Uint8Array(size);
    const currentMessageView = new DataView(currentMessage.buffer);
    currentMessageView.setUint32(0, size, false);
  };
  const iterator = async function* () {
    const sourceIterator = source[Symbol.asyncIterator]();
    while (true) {
      const { value: value2, done } = await sourceIterator.next();
      if (done) {
        if (!currentMessageTotalLength) {
          return;
        } else if (currentMessageTotalLength === currentMessagePendingLength) {
          yield currentMessage;
        } else {
          throw new Error("Truncated event message received.");
        }
        return;
      }
      const chunkLength = value2.length;
      let currentOffset = 0;
      while (currentOffset < chunkLength) {
        if (!currentMessage) {
          const bytesRemaining = chunkLength - currentOffset;
          if (!messageLengthBuffer) {
            messageLengthBuffer = new Uint8Array(4);
          }
          const numBytesForTotal = Math.min(4 - currentMessagePendingLength, bytesRemaining);
          messageLengthBuffer.set(value2.slice(currentOffset, currentOffset + numBytesForTotal), currentMessagePendingLength);
          currentMessagePendingLength += numBytesForTotal;
          currentOffset += numBytesForTotal;
          if (currentMessagePendingLength < 4) {
            break;
          }
          allocateMessage(new DataView(messageLengthBuffer.buffer).getUint32(0, false));
          messageLengthBuffer = null;
        }
        const numBytesToWrite = Math.min(currentMessageTotalLength - currentMessagePendingLength, chunkLength - currentOffset);
        currentMessage.set(value2.slice(currentOffset, currentOffset + numBytesToWrite), currentMessagePendingLength);
        currentMessagePendingLength += numBytesToWrite;
        currentOffset += numBytesToWrite;
        if (currentMessageTotalLength && currentMessageTotalLength === currentMessagePendingLength) {
          yield currentMessage;
          currentMessage = null;
          currentMessageTotalLength = 0;
          currentMessagePendingLength = 0;
        }
      }
    }
  };
  return {
    [Symbol.asyncIterator]: iterator
  };
}

// node_modules/@smithy/eventstream-serde-universal/dist-es/getUnmarshalledStream.js
function getMessageUnmarshaller(deserializer, toUtf82) {
  return async function(message) {
    const { value: messageType } = message.headers[":message-type"];
    if (messageType === "error") {
      const unmodeledError = new Error(message.headers[":error-message"].value || "UnknownError");
      unmodeledError.name = message.headers[":error-code"].value;
      throw unmodeledError;
    } else if (messageType === "exception") {
      const code = message.headers[":exception-type"].value;
      const exception = { [code]: message };
      const deserializedException = await deserializer(exception);
      if (deserializedException.$unknown) {
        const error = new Error(toUtf82(message.body));
        error.name = code;
        throw error;
      }
      throw deserializedException[code];
    } else if (messageType === "event") {
      const event = {
        [message.headers[":event-type"].value]: message
      };
      const deserialized = await deserializer(event);
      if (deserialized.$unknown)
        return;
      return deserialized;
    } else {
      throw Error(`Unrecognizable event type: ${message.headers[":event-type"].value}`);
    }
  };
}

// node_modules/@smithy/eventstream-serde-universal/dist-es/EventStreamMarshaller.js
var EventStreamMarshaller = class {
  constructor({ utf8Encoder, utf8Decoder }) {
    this.eventStreamCodec = new EventStreamCodec(utf8Encoder, utf8Decoder);
    this.utfEncoder = utf8Encoder;
  }
  deserialize(body, deserializer) {
    const inputStream = getChunkedStream(body);
    return new SmithyMessageDecoderStream({
      messageStream: new MessageDecoderStream({ inputStream, decoder: this.eventStreamCodec }),
      deserializer: getMessageUnmarshaller(deserializer, this.utfEncoder)
    });
  }
  serialize(inputStream, serializer) {
    return new MessageEncoderStream({
      messageStream: new SmithyMessageEncoderStream({ inputStream, serializer }),
      encoder: this.eventStreamCodec,
      includeEndFrame: true
    });
  }
};

// node_modules/@smithy/eventstream-serde-browser/dist-es/utils.js
var readableStreamtoIterable = (readableStream) => ({
  [Symbol.asyncIterator]: async function* () {
    const reader = readableStream.getReader();
    try {
      while (true) {
        const { done, value: value2 } = await reader.read();
        if (done)
          return;
        yield value2;
      }
    } finally {
      reader.releaseLock();
    }
  }
});
var iterableToReadableStream = (asyncIterable) => {
  const iterator = asyncIterable[Symbol.asyncIterator]();
  return new ReadableStream({
    async pull(controller) {
      const { done, value: value2 } = await iterator.next();
      if (done) {
        return controller.close();
      }
      controller.enqueue(value2);
    }
  });
};

// node_modules/@smithy/eventstream-serde-browser/dist-es/EventStreamMarshaller.js
var EventStreamMarshaller2 = class {
  constructor({ utf8Encoder, utf8Decoder }) {
    this.universalMarshaller = new EventStreamMarshaller({
      utf8Decoder,
      utf8Encoder
    });
  }
  deserialize(body, deserializer) {
    const bodyIterable = isReadableStream2(body) ? readableStreamtoIterable(body) : body;
    return this.universalMarshaller.deserialize(bodyIterable, deserializer);
  }
  serialize(input, serializer) {
    const serialziedIterable = this.universalMarshaller.serialize(input, serializer);
    return typeof ReadableStream === "function" ? iterableToReadableStream(serialziedIterable) : serialziedIterable;
  }
};
var isReadableStream2 = (body) => typeof ReadableStream === "function" && body instanceof ReadableStream;

// node_modules/@smithy/eventstream-serde-browser/dist-es/provider.js
var eventStreamSerdeProvider = (options) => new EventStreamMarshaller2(options);

// node_modules/@smithy/fetch-http-handler/dist-es/request-timeout.js
function requestTimeout2(timeoutInMs = 0) {
  return new Promise((resolve, reject) => {
    if (timeoutInMs) {
      setTimeout(() => {
        const timeoutError = new Error(`Request did not complete within ${timeoutInMs} ms`);
        timeoutError.name = "TimeoutError";
        reject(timeoutError);
      }, timeoutInMs);
    }
  });
}

// node_modules/@smithy/fetch-http-handler/dist-es/fetch-http-handler.js
var keepAliveSupport = {
  supported: void 0
};
var FetchHttpHandler = class _FetchHttpHandler {
  static create(instanceOrOptions) {
    if (typeof (instanceOrOptions == null ? void 0 : instanceOrOptions.handle) === "function") {
      return instanceOrOptions;
    }
    return new _FetchHttpHandler(instanceOrOptions);
  }
  constructor(options) {
    if (typeof options === "function") {
      this.configProvider = options().then((opts) => opts || {});
    } else {
      this.config = options ?? {};
      this.configProvider = Promise.resolve(this.config);
    }
    if (keepAliveSupport.supported === void 0) {
      keepAliveSupport.supported = Boolean(typeof Request !== "undefined" && "keepalive" in new Request("https://[::1]"));
    }
  }
  destroy() {
  }
  async handle(request, { abortSignal } = {}) {
    var _a5;
    if (!this.config) {
      this.config = await this.configProvider;
    }
    const requestTimeoutInMs = this.config.requestTimeout;
    const keepAlive = this.config.keepAlive === true;
    const credentials = this.config.credentials;
    if (abortSignal == null ? void 0 : abortSignal.aborted) {
      const abortError = new Error("Request aborted");
      abortError.name = "AbortError";
      return Promise.reject(abortError);
    }
    let path = request.path;
    const queryString = buildQueryString(request.query || {});
    if (queryString) {
      path += `?${queryString}`;
    }
    if (request.fragment) {
      path += `#${request.fragment}`;
    }
    let auth = "";
    if (request.username != null || request.password != null) {
      const username = request.username ?? "";
      const password = request.password ?? "";
      auth = `${username}:${password}@`;
    }
    const { port, method } = request;
    const url2 = `${request.protocol}//${auth}${request.hostname}${port ? `:${port}` : ""}${path}`;
    const body = method === "GET" || method === "HEAD" ? void 0 : request.body;
    const requestOptions = {
      body,
      headers: new Headers(request.headers),
      method,
      credentials
    };
    if ((_a5 = this.config) == null ? void 0 : _a5.cache) {
      requestOptions.cache = this.config.cache;
    }
    if (body) {
      requestOptions.duplex = "half";
    }
    if (typeof AbortController !== "undefined") {
      requestOptions.signal = abortSignal;
    }
    if (keepAliveSupport.supported) {
      requestOptions.keepalive = keepAlive;
    }
    if (typeof this.config.requestInit === "function") {
      Object.assign(requestOptions, this.config.requestInit(request));
    }
    let removeSignalEventListener = () => {
    };
    const fetchRequest = new Request(url2, requestOptions);
    const raceOfPromises = [
      fetch(fetchRequest).then((response) => {
        const fetchHeaders = response.headers;
        const transformedHeaders = {};
        for (const pair of fetchHeaders.entries()) {
          transformedHeaders[pair[0]] = pair[1];
        }
        const hasReadableStream = response.body != void 0;
        if (!hasReadableStream) {
          return response.blob().then((body2) => ({
            response: new HttpResponse({
              headers: transformedHeaders,
              reason: response.statusText,
              statusCode: response.status,
              body: body2
            })
          }));
        }
        return {
          response: new HttpResponse({
            headers: transformedHeaders,
            reason: response.statusText,
            statusCode: response.status,
            body: response.body
          })
        };
      }),
      requestTimeout2(requestTimeoutInMs)
    ];
    if (abortSignal) {
      raceOfPromises.push(new Promise((resolve, reject) => {
        const onAbort = () => {
          const abortError = new Error("Request aborted");
          abortError.name = "AbortError";
          reject(abortError);
        };
        if (typeof abortSignal.addEventListener === "function") {
          const signal = abortSignal;
          signal.addEventListener("abort", onAbort, { once: true });
          removeSignalEventListener = () => signal.removeEventListener("abort", onAbort);
        } else {
          abortSignal.onabort = onAbort;
        }
      }));
    }
    return Promise.race(raceOfPromises).finally(removeSignalEventListener);
  }
  updateHttpClientConfig(key, value2) {
    this.config = void 0;
    this.configProvider = this.configProvider.then((config) => {
      config[key] = value2;
      return config;
    });
  }
  httpHandlerConfigs() {
    return this.config ?? {};
  }
};

// node_modules/@smithy/fetch-http-handler/dist-es/stream-collector.js
var streamCollector2 = (stream) => {
  if (typeof Blob === "function" && stream instanceof Blob) {
    return collectBlob(stream);
  }
  return collectStream(stream);
};
async function collectBlob(blob) {
  const base64 = await readToBase64(blob);
  const arrayBuffer = fromBase64(base64);
  return new Uint8Array(arrayBuffer);
}
async function collectStream(stream) {
  const chunks = [];
  const reader = stream.getReader();
  let isDone = false;
  let length2 = 0;
  while (!isDone) {
    const { done, value: value2 } = await reader.read();
    if (value2) {
      chunks.push(value2);
      length2 += value2.length;
    }
    isDone = done;
  }
  const collected = new Uint8Array(length2);
  let offset2 = 0;
  for (const chunk of chunks) {
    collected.set(chunk, offset2);
    offset2 += chunk.length;
  }
  return collected;
}
function readToBase64(blob) {
  return new Promise((resolve, reject) => {
    const reader = new FileReader();
    reader.onloadend = () => {
      if (reader.readyState !== 2) {
        return reject(new Error("Reader aborted too early"));
      }
      const result = reader.result ?? "";
      const commaIndex = result.indexOf(",");
      const dataOffset = commaIndex > -1 ? commaIndex + 1 : result.length;
      resolve(result.substring(dataOffset));
    };
    reader.onabort = () => reject(new Error("Read aborted"));
    reader.onerror = () => reject(reader.error);
    reader.readAsDataURL(blob);
  });
}

// node_modules/@smithy/invalid-dependency/dist-es/invalidProvider.js
var invalidProvider = (message) => () => Promise.reject(message);

// node_modules/@smithy/util-body-length-browser/dist-es/calculateBodyLength.js
var TEXT_ENCODER = typeof TextEncoder == "function" ? new TextEncoder() : null;
var calculateBodyLength = (body) => {
  if (typeof body === "string") {
    if (TEXT_ENCODER) {
      return TEXT_ENCODER.encode(body).byteLength;
    }
    let len = body.length;
    for (let i11 = len - 1; i11 >= 0; i11--) {
      const code = body.charCodeAt(i11);
      if (code > 127 && code <= 2047)
        len++;
      else if (code > 2047 && code <= 65535)
        len += 2;
      if (code >= 56320 && code <= 57343)
        i11--;
    }
    return len;
  } else if (typeof body.byteLength === "number") {
    return body.byteLength;
  } else if (typeof body.size === "number") {
    return body.size;
  }
  throw new Error(`Body Length computation failed for ${body}`);
};

// node_modules/@aws-sdk/client-bedrock-runtime/dist-es/endpoint/ruleset.js
var s = "required";
var t = "fn";
var u2 = "argv";
var v2 = "ref";
var a3 = true;
var b = "isSet";
var c = "booleanEquals";
var d = "error";
var e = "endpoint";
var f2 = "tree";
var g2 = "PartitionResult";
var h2 = { [s]: false, "type": "String" };
var i = { [s]: true, "default": false, "type": "Boolean" };
var j = { [v2]: "Endpoint" };
var k = { [t]: c, [u2]: [{ [v2]: "UseFIPS" }, true] };
var l2 = { [t]: c, [u2]: [{ [v2]: "UseDualStack" }, true] };
var m2 = {};
var n = { [t]: "getAttr", [u2]: [{ [v2]: g2 }, "supportsFIPS"] };
var o2 = { [t]: c, [u2]: [true, { [t]: "getAttr", [u2]: [{ [v2]: g2 }, "supportsDualStack"] }] };
var p = [k];
var q2 = [l2];
var r2 = [{ [v2]: "Region" }];
var _data = { version: "1.0", parameters: { Region: h2, UseDualStack: i, UseFIPS: i, Endpoint: h2 }, rules: [{ conditions: [{ [t]: b, [u2]: [j] }], rules: [{ conditions: p, error: "Invalid Configuration: FIPS and custom endpoint are not supported", type: d }, { rules: [{ conditions: q2, error: "Invalid Configuration: Dualstack and custom endpoint are not supported", type: d }, { endpoint: { url: j, properties: m2, headers: m2 }, type: e }], type: f2 }], type: f2 }, { rules: [{ conditions: [{ [t]: b, [u2]: r2 }], rules: [{ conditions: [{ [t]: "aws.partition", [u2]: r2, assign: g2 }], rules: [{ conditions: [k, l2], rules: [{ conditions: [{ [t]: c, [u2]: [a3, n] }, o2], rules: [{ rules: [{ endpoint: { url: "https://bedrock-runtime-fips.{Region}.{PartitionResult#dualStackDnsSuffix}", properties: m2, headers: m2 }, type: e }], type: f2 }], type: f2 }, { error: "FIPS and DualStack are enabled, but this partition does not support one or both", type: d }], type: f2 }, { conditions: p, rules: [{ conditions: [{ [t]: c, [u2]: [n, a3] }], rules: [{ rules: [{ endpoint: { url: "https://bedrock-runtime-fips.{Region}.{PartitionResult#dnsSuffix}", properties: m2, headers: m2 }, type: e }], type: f2 }], type: f2 }, { error: "FIPS is enabled but this partition does not support FIPS", type: d }], type: f2 }, { conditions: q2, rules: [{ conditions: [o2], rules: [{ rules: [{ endpoint: { url: "https://bedrock-runtime.{Region}.{PartitionResult#dualStackDnsSuffix}", properties: m2, headers: m2 }, type: e }], type: f2 }], type: f2 }, { error: "DualStack is enabled but this partition does not support DualStack", type: d }], type: f2 }, { rules: [{ endpoint: { url: "https://bedrock-runtime.{Region}.{PartitionResult#dnsSuffix}", properties: m2, headers: m2 }, type: e }], type: f2 }], type: f2 }], type: f2 }, { error: "Invalid Configuration: Missing Region", type: d }], type: f2 }] };
var ruleSet = _data;

// node_modules/@aws-sdk/client-bedrock-runtime/dist-es/endpoint/endpointResolver.js
var defaultEndpointResolver = (endpointParams, context = {}) => {
  return resolveEndpoint(ruleSet, {
    endpointParams,
    logger: context.logger
  });
};
customEndpointFunctions.aws = awsEndpointFunctions;

// node_modules/@aws-sdk/client-bedrock-runtime/dist-es/runtimeConfig.shared.js
var getRuntimeConfig = (config) => {
  return {
    apiVersion: "2023-09-30",
    base64Decoder: (config == null ? void 0 : config.base64Decoder) ?? fromBase64,
    base64Encoder: (config == null ? void 0 : config.base64Encoder) ?? toBase64,
    disableHostPrefix: (config == null ? void 0 : config.disableHostPrefix) ?? false,
    endpointProvider: (config == null ? void 0 : config.endpointProvider) ?? defaultEndpointResolver,
    extensions: (config == null ? void 0 : config.extensions) ?? [],
    httpAuthSchemeProvider: (config == null ? void 0 : config.httpAuthSchemeProvider) ?? defaultBedrockRuntimeHttpAuthSchemeProvider,
    httpAuthSchemes: (config == null ? void 0 : config.httpAuthSchemes) ?? [
      {
        schemeId: "aws.auth#sigv4",
        identityProvider: (ipc) => ipc.getIdentityProvider("aws.auth#sigv4"),
        signer: new AwsSdkSigV4Signer()
      }
    ],
    logger: (config == null ? void 0 : config.logger) ?? new NoOpLogger(),
    serviceId: (config == null ? void 0 : config.serviceId) ?? "Bedrock Runtime",
    urlParser: (config == null ? void 0 : config.urlParser) ?? parseUrl,
    utf8Decoder: (config == null ? void 0 : config.utf8Decoder) ?? fromUtf8,
    utf8Encoder: (config == null ? void 0 : config.utf8Encoder) ?? toUtf8
  };
};

// node_modules/@smithy/property-provider/dist-es/memoize.js
var memoize = (provider, isExpired, requiresRefresh) => {
  let resolved;
  let pending;
  let hasResult;
  let isConstant = false;
  const coalesceProvider = async () => {
    if (!pending) {
      pending = provider();
    }
    try {
      resolved = await pending;
      hasResult = true;
      isConstant = false;
    } finally {
      pending = void 0;
    }
    return resolved;
  };
  if (isExpired === void 0) {
    return async (options) => {
      if (!hasResult || (options == null ? void 0 : options.forceRefresh)) {
        resolved = await coalesceProvider();
      }
      return resolved;
    };
  }
  return async (options) => {
    if (!hasResult || (options == null ? void 0 : options.forceRefresh)) {
      resolved = await coalesceProvider();
    }
    if (isConstant) {
      return resolved;
    }
    if (requiresRefresh && !requiresRefresh(resolved)) {
      isConstant = true;
      return resolved;
    }
    if (isExpired(resolved)) {
      await coalesceProvider();
      return resolved;
    }
    return resolved;
  };
};

// node_modules/@smithy/util-defaults-mode-browser/dist-es/constants.js
var DEFAULTS_MODE_OPTIONS = ["in-region", "cross-region", "mobile", "standard", "legacy"];

// node_modules/@smithy/util-defaults-mode-browser/dist-es/resolveDefaultsModeConfig.js
var resolveDefaultsModeConfig = ({ defaultsMode } = {}) => memoize(async () => {
  const mode = typeof defaultsMode === "function" ? await defaultsMode() : defaultsMode;
  switch (mode == null ? void 0 : mode.toLowerCase()) {
    case "auto":
      return Promise.resolve(isMobileBrowser() ? "mobile" : "standard");
    case "mobile":
    case "in-region":
    case "cross-region":
    case "standard":
    case "legacy":
      return Promise.resolve(mode == null ? void 0 : mode.toLocaleLowerCase());
    case void 0:
      return Promise.resolve("legacy");
    default:
      throw new Error(`Invalid parameter for "defaultsMode", expect ${DEFAULTS_MODE_OPTIONS.join(", ")}, got ${mode}`);
  }
});
var isMobileBrowser = () => {
  var _a5, _b;
  const parsedUA = typeof window !== "undefined" && ((_a5 = window == null ? void 0 : window.navigator) == null ? void 0 : _a5.userAgent) ? bowser_default.parse(window.navigator.userAgent) : void 0;
  const platform = (_b = parsedUA == null ? void 0 : parsedUA.platform) == null ? void 0 : _b.type;
  return platform === "tablet" || platform === "mobile";
};

// node_modules/@aws-sdk/client-bedrock-runtime/dist-es/runtimeConfig.browser.js
var getRuntimeConfig2 = (config) => {
  const defaultsMode = resolveDefaultsModeConfig(config);
  const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);
  const clientSharedValues = getRuntimeConfig(config);
  return {
    ...clientSharedValues,
    ...config,
    runtime: "browser",
    defaultsMode,
    bodyLengthChecker: (config == null ? void 0 : config.bodyLengthChecker) ?? calculateBodyLength,
    credentialDefaultProvider: (config == null ? void 0 : config.credentialDefaultProvider) ?? ((_5) => () => Promise.reject(new Error("Credential is missing"))),
    defaultUserAgentProvider: (config == null ? void 0 : config.defaultUserAgentProvider) ?? defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: package_default.version }),
    eventStreamSerdeProvider: (config == null ? void 0 : config.eventStreamSerdeProvider) ?? eventStreamSerdeProvider,
    maxAttempts: (config == null ? void 0 : config.maxAttempts) ?? DEFAULT_MAX_ATTEMPTS,
    region: (config == null ? void 0 : config.region) ?? invalidProvider("Region is missing"),
    requestHandler: FetchHttpHandler.create((config == null ? void 0 : config.requestHandler) ?? defaultConfigProvider),
    retryMode: (config == null ? void 0 : config.retryMode) ?? (async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE),
    sha256: (config == null ? void 0 : config.sha256) ?? Sha2563,
    streamCollector: (config == null ? void 0 : config.streamCollector) ?? streamCollector2,
    useDualstackEndpoint: (config == null ? void 0 : config.useDualstackEndpoint) ?? (() => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT)),
    useFipsEndpoint: (config == null ? void 0 : config.useFipsEndpoint) ?? (() => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT))
  };
};

// node_modules/@aws-sdk/region-config-resolver/dist-es/extensions/index.js
var getAwsRegionExtensionConfiguration = (runtimeConfig) => {
  let runtimeConfigRegion = async () => {
    if (runtimeConfig.region === void 0) {
      throw new Error("Region is missing from runtimeConfig");
    }
    const region = runtimeConfig.region;
    if (typeof region === "string") {
      return region;
    }
    return region();
  };
  return {
    setRegion(region) {
      runtimeConfigRegion = region;
    },
    region() {
      return runtimeConfigRegion;
    }
  };
};
var resolveAwsRegionExtensionConfiguration = (awsRegionExtensionConfiguration) => {
  return {
    region: awsRegionExtensionConfiguration.region()
  };
};

// node_modules/@aws-sdk/client-bedrock-runtime/dist-es/auth/httpAuthExtensionConfiguration.js
var getHttpAuthExtensionConfiguration = (runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
};
var resolveHttpAuthRuntimeConfig = (config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
};

// node_modules/@aws-sdk/client-bedrock-runtime/dist-es/runtimeExtensions.js
var asPartial = (t2) => t2;
var resolveRuntimeExtensions = (runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial(getAwsRegionExtensionConfiguration(runtimeConfig)),
    ...asPartial(getDefaultExtensionConfiguration(runtimeConfig)),
    ...asPartial(getHttpHandlerExtensionConfiguration(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...resolveAwsRegionExtensionConfiguration(extensionConfiguration),
    ...resolveDefaultRuntimeConfig(extensionConfiguration),
    ...resolveHttpHandlerRuntimeConfig(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
};

// node_modules/@aws-sdk/client-bedrock-runtime/dist-es/BedrockRuntimeClient.js
var BedrockRuntimeClient = class extends Client {
  constructor(...[configuration]) {
    const _config_0 = getRuntimeConfig2(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = resolveRegionConfig(_config_1);
    const _config_3 = resolveEndpointConfig(_config_2);
    const _config_4 = resolveHostHeaderConfig(_config_3);
    const _config_5 = resolveUserAgentConfig(_config_4);
    const _config_6 = resolveRetryConfig(_config_5);
    const _config_7 = resolveEventStreamSerdeConfig(_config_6);
    const _config_8 = resolveHttpAuthSchemeConfig(_config_7);
    const _config_9 = resolveRuntimeExtensions(_config_8, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_9);
    this.config = _config_9;
    this.middlewareStack.use(getHostHeaderPlugin(this.config));
    this.middlewareStack.use(getLoggerPlugin(this.config));
    this.middlewareStack.use(getRecursionDetectionPlugin(this.config));
    this.middlewareStack.use(getUserAgentPlugin(this.config));
    this.middlewareStack.use(getRetryPlugin(this.config));
    this.middlewareStack.use(getContentLengthPlugin(this.config));
    this.middlewareStack.use(getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {
      httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
      identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
    }));
    this.middlewareStack.use(getHttpSigningPlugin(this.config));
  }
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return defaultBedrockRuntimeHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};

// node_modules/@aws-sdk/client-bedrock-runtime/dist-es/models/BedrockRuntimeServiceException.js
var BedrockRuntimeServiceException = class _BedrockRuntimeServiceException extends ServiceException {
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _BedrockRuntimeServiceException.prototype);
  }
};

// node_modules/@aws-sdk/client-bedrock-runtime/dist-es/models/models_0.js
var AccessDeniedException = class _AccessDeniedException extends BedrockRuntimeServiceException {
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    this.name = "AccessDeniedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
  }
};
var GuardrailContentBlock;
(function(GuardrailContentBlock2) {
  GuardrailContentBlock2.visit = (value2, visitor) => {
    if (value2.text !== void 0)
      return visitor.text(value2.text);
    return visitor._(value2.$unknown[0], value2.$unknown[1]);
  };
})(GuardrailContentBlock || (GuardrailContentBlock = {}));
var InternalServerException = class _InternalServerException extends BedrockRuntimeServiceException {
  constructor(opts) {
    super({
      name: "InternalServerException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServerException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalServerException.prototype);
  }
};
var ResourceNotFoundException = class _ResourceNotFoundException extends BedrockRuntimeServiceException {
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
  }
};
var ServiceQuotaExceededException = class _ServiceQuotaExceededException extends BedrockRuntimeServiceException {
  constructor(opts) {
    super({
      name: "ServiceQuotaExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "ServiceQuotaExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ServiceQuotaExceededException.prototype);
  }
};
var ThrottlingException = class _ThrottlingException extends BedrockRuntimeServiceException {
  constructor(opts) {
    super({
      name: "ThrottlingException",
      $fault: "client",
      ...opts
    });
    this.name = "ThrottlingException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ThrottlingException.prototype);
  }
};
var ValidationException = class _ValidationException extends BedrockRuntimeServiceException {
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    this.name = "ValidationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ValidationException.prototype);
  }
};
var DocumentSource;
(function(DocumentSource2) {
  DocumentSource2.visit = (value2, visitor) => {
    if (value2.bytes !== void 0)
      return visitor.bytes(value2.bytes);
    return visitor._(value2.$unknown[0], value2.$unknown[1]);
  };
})(DocumentSource || (DocumentSource = {}));
var GuardrailConverseContentBlock;
(function(GuardrailConverseContentBlock2) {
  GuardrailConverseContentBlock2.visit = (value2, visitor) => {
    if (value2.text !== void 0)
      return visitor.text(value2.text);
    return visitor._(value2.$unknown[0], value2.$unknown[1]);
  };
})(GuardrailConverseContentBlock || (GuardrailConverseContentBlock = {}));
var ImageSource;
(function(ImageSource2) {
  ImageSource2.visit = (value2, visitor) => {
    if (value2.bytes !== void 0)
      return visitor.bytes(value2.bytes);
    return visitor._(value2.$unknown[0], value2.$unknown[1]);
  };
})(ImageSource || (ImageSource = {}));
var ToolResultContentBlock;
(function(ToolResultContentBlock2) {
  ToolResultContentBlock2.visit = (value2, visitor) => {
    if (value2.json !== void 0)
      return visitor.json(value2.json);
    if (value2.text !== void 0)
      return visitor.text(value2.text);
    if (value2.image !== void 0)
      return visitor.image(value2.image);
    if (value2.document !== void 0)
      return visitor.document(value2.document);
    return visitor._(value2.$unknown[0], value2.$unknown[1]);
  };
})(ToolResultContentBlock || (ToolResultContentBlock = {}));
var ContentBlock;
(function(ContentBlock2) {
  ContentBlock2.visit = (value2, visitor) => {
    if (value2.text !== void 0)
      return visitor.text(value2.text);
    if (value2.image !== void 0)
      return visitor.image(value2.image);
    if (value2.document !== void 0)
      return visitor.document(value2.document);
    if (value2.toolUse !== void 0)
      return visitor.toolUse(value2.toolUse);
    if (value2.toolResult !== void 0)
      return visitor.toolResult(value2.toolResult);
    if (value2.guardContent !== void 0)
      return visitor.guardContent(value2.guardContent);
    return visitor._(value2.$unknown[0], value2.$unknown[1]);
  };
})(ContentBlock || (ContentBlock = {}));
var SystemContentBlock;
(function(SystemContentBlock2) {
  SystemContentBlock2.visit = (value2, visitor) => {
    if (value2.text !== void 0)
      return visitor.text(value2.text);
    if (value2.guardContent !== void 0)
      return visitor.guardContent(value2.guardContent);
    return visitor._(value2.$unknown[0], value2.$unknown[1]);
  };
})(SystemContentBlock || (SystemContentBlock = {}));
var ToolChoice;
(function(ToolChoice2) {
  ToolChoice2.visit = (value2, visitor) => {
    if (value2.auto !== void 0)
      return visitor.auto(value2.auto);
    if (value2.any !== void 0)
      return visitor.any(value2.any);
    if (value2.tool !== void 0)
      return visitor.tool(value2.tool);
    return visitor._(value2.$unknown[0], value2.$unknown[1]);
  };
})(ToolChoice || (ToolChoice = {}));
var ToolInputSchema;
(function(ToolInputSchema2) {
  ToolInputSchema2.visit = (value2, visitor) => {
    if (value2.json !== void 0)
      return visitor.json(value2.json);
    return visitor._(value2.$unknown[0], value2.$unknown[1]);
  };
})(ToolInputSchema || (ToolInputSchema = {}));
var Tool;
(function(Tool2) {
  Tool2.visit = (value2, visitor) => {
    if (value2.toolSpec !== void 0)
      return visitor.toolSpec(value2.toolSpec);
    return visitor._(value2.$unknown[0], value2.$unknown[1]);
  };
})(Tool || (Tool = {}));
var ConverseOutput;
(function(ConverseOutput2) {
  ConverseOutput2.visit = (value2, visitor) => {
    if (value2.message !== void 0)
      return visitor.message(value2.message);
    return visitor._(value2.$unknown[0], value2.$unknown[1]);
  };
})(ConverseOutput || (ConverseOutput = {}));
var ModelErrorException = class _ModelErrorException extends BedrockRuntimeServiceException {
  constructor(opts) {
    super({
      name: "ModelErrorException",
      $fault: "client",
      ...opts
    });
    this.name = "ModelErrorException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ModelErrorException.prototype);
    this.originalStatusCode = opts.originalStatusCode;
    this.resourceName = opts.resourceName;
  }
};
var ModelNotReadyException = class _ModelNotReadyException extends BedrockRuntimeServiceException {
  constructor(opts) {
    super({
      name: "ModelNotReadyException",
      $fault: "client",
      ...opts
    });
    this.name = "ModelNotReadyException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ModelNotReadyException.prototype);
  }
};
var ModelTimeoutException = class _ModelTimeoutException extends BedrockRuntimeServiceException {
  constructor(opts) {
    super({
      name: "ModelTimeoutException",
      $fault: "client",
      ...opts
    });
    this.name = "ModelTimeoutException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ModelTimeoutException.prototype);
  }
};
var ServiceUnavailableException = class _ServiceUnavailableException extends BedrockRuntimeServiceException {
  constructor(opts) {
    super({
      name: "ServiceUnavailableException",
      $fault: "server",
      ...opts
    });
    this.name = "ServiceUnavailableException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _ServiceUnavailableException.prototype);
  }
};
var ContentBlockDelta;
(function(ContentBlockDelta2) {
  ContentBlockDelta2.visit = (value2, visitor) => {
    if (value2.text !== void 0)
      return visitor.text(value2.text);
    if (value2.toolUse !== void 0)
      return visitor.toolUse(value2.toolUse);
    return visitor._(value2.$unknown[0], value2.$unknown[1]);
  };
})(ContentBlockDelta || (ContentBlockDelta = {}));
var ContentBlockStart;
(function(ContentBlockStart2) {
  ContentBlockStart2.visit = (value2, visitor) => {
    if (value2.toolUse !== void 0)
      return visitor.toolUse(value2.toolUse);
    return visitor._(value2.$unknown[0], value2.$unknown[1]);
  };
})(ContentBlockStart || (ContentBlockStart = {}));
var ModelStreamErrorException = class _ModelStreamErrorException extends BedrockRuntimeServiceException {
  constructor(opts) {
    super({
      name: "ModelStreamErrorException",
      $fault: "client",
      ...opts
    });
    this.name = "ModelStreamErrorException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ModelStreamErrorException.prototype);
    this.originalStatusCode = opts.originalStatusCode;
    this.originalMessage = opts.originalMessage;
  }
};
var ConverseStreamOutput;
(function(ConverseStreamOutput2) {
  ConverseStreamOutput2.visit = (value2, visitor) => {
    if (value2.messageStart !== void 0)
      return visitor.messageStart(value2.messageStart);
    if (value2.contentBlockStart !== void 0)
      return visitor.contentBlockStart(value2.contentBlockStart);
    if (value2.contentBlockDelta !== void 0)
      return visitor.contentBlockDelta(value2.contentBlockDelta);
    if (value2.contentBlockStop !== void 0)
      return visitor.contentBlockStop(value2.contentBlockStop);
    if (value2.messageStop !== void 0)
      return visitor.messageStop(value2.messageStop);
    if (value2.metadata !== void 0)
      return visitor.metadata(value2.metadata);
    if (value2.internalServerException !== void 0)
      return visitor.internalServerException(value2.internalServerException);
    if (value2.modelStreamErrorException !== void 0)
      return visitor.modelStreamErrorException(value2.modelStreamErrorException);
    if (value2.validationException !== void 0)
      return visitor.validationException(value2.validationException);
    if (value2.throttlingException !== void 0)
      return visitor.throttlingException(value2.throttlingException);
    if (value2.serviceUnavailableException !== void 0)
      return visitor.serviceUnavailableException(value2.serviceUnavailableException);
    return visitor._(value2.$unknown[0], value2.$unknown[1]);
  };
})(ConverseStreamOutput || (ConverseStreamOutput = {}));
var ResponseStream;
(function(ResponseStream2) {
  ResponseStream2.visit = (value2, visitor) => {
    if (value2.chunk !== void 0)
      return visitor.chunk(value2.chunk);
    if (value2.internalServerException !== void 0)
      return visitor.internalServerException(value2.internalServerException);
    if (value2.modelStreamErrorException !== void 0)
      return visitor.modelStreamErrorException(value2.modelStreamErrorException);
    if (value2.validationException !== void 0)
      return visitor.validationException(value2.validationException);
    if (value2.throttlingException !== void 0)
      return visitor.throttlingException(value2.throttlingException);
    if (value2.modelTimeoutException !== void 0)
      return visitor.modelTimeoutException(value2.modelTimeoutException);
    if (value2.serviceUnavailableException !== void 0)
      return visitor.serviceUnavailableException(value2.serviceUnavailableException);
    return visitor._(value2.$unknown[0], value2.$unknown[1]);
  };
})(ResponseStream || (ResponseStream = {}));
var ConverseStreamResponseFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.stream && { stream: "STREAMING_CONTENT" }
});
var InvokeModelRequestFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.body && { body: SENSITIVE_STRING }
});
var InvokeModelResponseFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.body && { body: SENSITIVE_STRING }
});
var InvokeModelWithResponseStreamRequestFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.body && { body: SENSITIVE_STRING }
});
var InvokeModelWithResponseStreamResponseFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.body && { body: "STREAMING_CONTENT" }
});

// node_modules/@aws-sdk/client-bedrock-runtime/dist-es/protocols/Aws_restJson1.js
var se_ApplyGuardrailCommand = async (input, context) => {
  const b6 = requestBuilder(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b6.bp("/guardrail/{guardrailIdentifier}/version/{guardrailVersion}/apply");
  b6.p("guardrailIdentifier", () => input.guardrailIdentifier, "{guardrailIdentifier}", false);
  b6.p("guardrailVersion", () => input.guardrailVersion, "{guardrailVersion}", false);
  let body;
  body = JSON.stringify(take(input, {
    content: (_5) => _json(_5),
    source: []
  }));
  b6.m("POST").h(headers).b(body);
  return b6.build();
};
var se_ConverseCommand = async (input, context) => {
  const b6 = requestBuilder(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b6.bp("/model/{modelId}/converse");
  b6.p("modelId", () => input.modelId, "{modelId}", false);
  let body;
  body = JSON.stringify(take(input, {
    additionalModelRequestFields: (_5) => se_Document(_5, context),
    additionalModelResponseFieldPaths: (_5) => _json(_5),
    guardrailConfig: (_5) => _json(_5),
    inferenceConfig: (_5) => se_InferenceConfiguration(_5, context),
    messages: (_5) => se_Messages(_5, context),
    system: (_5) => _json(_5),
    toolConfig: (_5) => se_ToolConfiguration(_5, context)
  }));
  b6.m("POST").h(headers).b(body);
  return b6.build();
};
var se_ConverseStreamCommand = async (input, context) => {
  const b6 = requestBuilder(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b6.bp("/model/{modelId}/converse-stream");
  b6.p("modelId", () => input.modelId, "{modelId}", false);
  let body;
  body = JSON.stringify(take(input, {
    additionalModelRequestFields: (_5) => se_Document(_5, context),
    additionalModelResponseFieldPaths: (_5) => _json(_5),
    guardrailConfig: (_5) => _json(_5),
    inferenceConfig: (_5) => se_InferenceConfiguration(_5, context),
    messages: (_5) => se_Messages(_5, context),
    system: (_5) => _json(_5),
    toolConfig: (_5) => se_ToolConfiguration(_5, context)
  }));
  b6.m("POST").h(headers).b(body);
  return b6.build();
};
var se_InvokeModelCommand = async (input, context) => {
  const b6 = requestBuilder(input, context);
  const headers = map({}, isSerializableHeaderValue, {
    [_ct]: input[_cT] || "application/octet-stream",
    [_a]: input[_a],
    [_xabt]: input[_t],
    [_xabg]: input[_gI],
    [_xabg_]: input[_gV]
  });
  b6.bp("/model/{modelId}/invoke");
  b6.p("modelId", () => input.modelId, "{modelId}", false);
  let body;
  if (input.body !== void 0) {
    body = input.body;
  }
  b6.m("POST").h(headers).b(body);
  return b6.build();
};
var se_InvokeModelWithResponseStreamCommand = async (input, context) => {
  const b6 = requestBuilder(input, context);
  const headers = map({}, isSerializableHeaderValue, {
    [_ct]: input[_cT] || "application/octet-stream",
    [_xaba]: input[_a],
    [_xabt]: input[_t],
    [_xabg]: input[_gI],
    [_xabg_]: input[_gV]
  });
  b6.bp("/model/{modelId}/invoke-with-response-stream");
  b6.p("modelId", () => input.modelId, "{modelId}", false);
  let body;
  if (input.body !== void 0) {
    body = input.body;
  }
  b6.m("POST").h(headers).b(body);
  return b6.build();
};
var de_ApplyGuardrailCommand = async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = map({
    $metadata: deserializeMetadata2(output)
  });
  const data = expectNonNull(expectObject(await parseJsonBody(output.body, context)), "body");
  const doc = take(data, {
    action: expectString,
    assessments: (_5) => de_GuardrailAssessmentList(_5, context),
    outputs: _json,
    usage: _json
  });
  Object.assign(contents, doc);
  return contents;
};
var de_ConverseCommand = async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = map({
    $metadata: deserializeMetadata2(output)
  });
  const data = expectNonNull(expectObject(await parseJsonBody(output.body, context)), "body");
  const doc = take(data, {
    additionalModelResponseFields: (_5) => de_Document(_5, context),
    metrics: _json,
    output: (_5) => de_ConverseOutput(awsExpectUnion(_5), context),
    stopReason: expectString,
    trace: (_5) => de_ConverseTrace(_5, context),
    usage: _json
  });
  Object.assign(contents, doc);
  return contents;
};
var de_ConverseStreamCommand = async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = map({
    $metadata: deserializeMetadata2(output)
  });
  const data = output.body;
  contents.stream = de_ConverseStreamOutput(data, context);
  return contents;
};
var de_InvokeModelCommand = async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = map({
    $metadata: deserializeMetadata2(output),
    [_cT]: [, output.headers[_ct]]
  });
  const data = await collectBody(output.body, context);
  contents.body = data;
  return contents;
};
var de_InvokeModelWithResponseStreamCommand = async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = map({
    $metadata: deserializeMetadata2(output),
    [_cT]: [, output.headers[_xabct]]
  });
  const data = output.body;
  contents.body = de_ResponseStream(data, context);
  return contents;
};
var de_CommandError = async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await parseJsonErrorBody(output.body, context)
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.bedrockruntime#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "InternalServerException":
    case "com.amazonaws.bedrockruntime#InternalServerException":
      throw await de_InternalServerExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.bedrockruntime#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "ServiceQuotaExceededException":
    case "com.amazonaws.bedrockruntime#ServiceQuotaExceededException":
      throw await de_ServiceQuotaExceededExceptionRes(parsedOutput, context);
    case "ThrottlingException":
    case "com.amazonaws.bedrockruntime#ThrottlingException":
      throw await de_ThrottlingExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.bedrockruntime#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    case "ModelErrorException":
    case "com.amazonaws.bedrockruntime#ModelErrorException":
      throw await de_ModelErrorExceptionRes(parsedOutput, context);
    case "ModelNotReadyException":
    case "com.amazonaws.bedrockruntime#ModelNotReadyException":
      throw await de_ModelNotReadyExceptionRes(parsedOutput, context);
    case "ModelTimeoutException":
    case "com.amazonaws.bedrockruntime#ModelTimeoutException":
      throw await de_ModelTimeoutExceptionRes(parsedOutput, context);
    case "ServiceUnavailableException":
    case "com.amazonaws.bedrockruntime#ServiceUnavailableException":
      throw await de_ServiceUnavailableExceptionRes(parsedOutput, context);
    case "ModelStreamErrorException":
    case "com.amazonaws.bedrockruntime#ModelStreamErrorException":
      throw await de_ModelStreamErrorExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError2({
        output,
        parsedBody,
        errorCode
      });
  }
};
var throwDefaultError2 = withBaseException(BedrockRuntimeServiceException);
var de_AccessDeniedExceptionRes = async (parsedOutput, context) => {
  const contents = map({});
  const data = parsedOutput.body;
  const doc = take(data, {
    message: expectString
  });
  Object.assign(contents, doc);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata2(parsedOutput),
    ...contents
  });
  return decorateServiceException(exception, parsedOutput.body);
};
var de_InternalServerExceptionRes = async (parsedOutput, context) => {
  const contents = map({});
  const data = parsedOutput.body;
  const doc = take(data, {
    message: expectString
  });
  Object.assign(contents, doc);
  const exception = new InternalServerException({
    $metadata: deserializeMetadata2(parsedOutput),
    ...contents
  });
  return decorateServiceException(exception, parsedOutput.body);
};
var de_ModelErrorExceptionRes = async (parsedOutput, context) => {
  const contents = map({});
  const data = parsedOutput.body;
  const doc = take(data, {
    message: expectString,
    originalStatusCode: expectInt32,
    resourceName: expectString
  });
  Object.assign(contents, doc);
  const exception = new ModelErrorException({
    $metadata: deserializeMetadata2(parsedOutput),
    ...contents
  });
  return decorateServiceException(exception, parsedOutput.body);
};
var de_ModelNotReadyExceptionRes = async (parsedOutput, context) => {
  const contents = map({});
  const data = parsedOutput.body;
  const doc = take(data, {
    message: expectString
  });
  Object.assign(contents, doc);
  const exception = new ModelNotReadyException({
    $metadata: deserializeMetadata2(parsedOutput),
    ...contents
  });
  return decorateServiceException(exception, parsedOutput.body);
};
var de_ModelStreamErrorExceptionRes = async (parsedOutput, context) => {
  const contents = map({});
  const data = parsedOutput.body;
  const doc = take(data, {
    message: expectString,
    originalMessage: expectString,
    originalStatusCode: expectInt32
  });
  Object.assign(contents, doc);
  const exception = new ModelStreamErrorException({
    $metadata: deserializeMetadata2(parsedOutput),
    ...contents
  });
  return decorateServiceException(exception, parsedOutput.body);
};
var de_ModelTimeoutExceptionRes = async (parsedOutput, context) => {
  const contents = map({});
  const data = parsedOutput.body;
  const doc = take(data, {
    message: expectString
  });
  Object.assign(contents, doc);
  const exception = new ModelTimeoutException({
    $metadata: deserializeMetadata2(parsedOutput),
    ...contents
  });
  return decorateServiceException(exception, parsedOutput.body);
};
var de_ResourceNotFoundExceptionRes = async (parsedOutput, context) => {
  const contents = map({});
  const data = parsedOutput.body;
  const doc = take(data, {
    message: expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata2(parsedOutput),
    ...contents
  });
  return decorateServiceException(exception, parsedOutput.body);
};
var de_ServiceQuotaExceededExceptionRes = async (parsedOutput, context) => {
  const contents = map({});
  const data = parsedOutput.body;
  const doc = take(data, {
    message: expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceQuotaExceededException({
    $metadata: deserializeMetadata2(parsedOutput),
    ...contents
  });
  return decorateServiceException(exception, parsedOutput.body);
};
var de_ServiceUnavailableExceptionRes = async (parsedOutput, context) => {
  const contents = map({});
  const data = parsedOutput.body;
  const doc = take(data, {
    message: expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceUnavailableException({
    $metadata: deserializeMetadata2(parsedOutput),
    ...contents
  });
  return decorateServiceException(exception, parsedOutput.body);
};
var de_ThrottlingExceptionRes = async (parsedOutput, context) => {
  const contents = map({});
  const data = parsedOutput.body;
  const doc = take(data, {
    message: expectString
  });
  Object.assign(contents, doc);
  const exception = new ThrottlingException({
    $metadata: deserializeMetadata2(parsedOutput),
    ...contents
  });
  return decorateServiceException(exception, parsedOutput.body);
};
var de_ValidationExceptionRes = async (parsedOutput, context) => {
  const contents = map({});
  const data = parsedOutput.body;
  const doc = take(data, {
    message: expectString
  });
  Object.assign(contents, doc);
  const exception = new ValidationException({
    $metadata: deserializeMetadata2(parsedOutput),
    ...contents
  });
  return decorateServiceException(exception, parsedOutput.body);
};
var de_ConverseStreamOutput = (output, context) => {
  return context.eventStreamMarshaller.deserialize(output, async (event) => {
    if (event["messageStart"] != null) {
      return {
        messageStart: await de_MessageStartEvent_event(event["messageStart"], context)
      };
    }
    if (event["contentBlockStart"] != null) {
      return {
        contentBlockStart: await de_ContentBlockStartEvent_event(event["contentBlockStart"], context)
      };
    }
    if (event["contentBlockDelta"] != null) {
      return {
        contentBlockDelta: await de_ContentBlockDeltaEvent_event(event["contentBlockDelta"], context)
      };
    }
    if (event["contentBlockStop"] != null) {
      return {
        contentBlockStop: await de_ContentBlockStopEvent_event(event["contentBlockStop"], context)
      };
    }
    if (event["messageStop"] != null) {
      return {
        messageStop: await de_MessageStopEvent_event(event["messageStop"], context)
      };
    }
    if (event["metadata"] != null) {
      return {
        metadata: await de_ConverseStreamMetadataEvent_event(event["metadata"], context)
      };
    }
    if (event["internalServerException"] != null) {
      return {
        internalServerException: await de_InternalServerException_event(event["internalServerException"], context)
      };
    }
    if (event["modelStreamErrorException"] != null) {
      return {
        modelStreamErrorException: await de_ModelStreamErrorException_event(event["modelStreamErrorException"], context)
      };
    }
    if (event["validationException"] != null) {
      return {
        validationException: await de_ValidationException_event(event["validationException"], context)
      };
    }
    if (event["throttlingException"] != null) {
      return {
        throttlingException: await de_ThrottlingException_event(event["throttlingException"], context)
      };
    }
    if (event["serviceUnavailableException"] != null) {
      return {
        serviceUnavailableException: await de_ServiceUnavailableException_event(event["serviceUnavailableException"], context)
      };
    }
    return { $unknown: output };
  });
};
var de_ResponseStream = (output, context) => {
  return context.eventStreamMarshaller.deserialize(output, async (event) => {
    if (event["chunk"] != null) {
      return {
        chunk: await de_PayloadPart_event(event["chunk"], context)
      };
    }
    if (event["internalServerException"] != null) {
      return {
        internalServerException: await de_InternalServerException_event(event["internalServerException"], context)
      };
    }
    if (event["modelStreamErrorException"] != null) {
      return {
        modelStreamErrorException: await de_ModelStreamErrorException_event(event["modelStreamErrorException"], context)
      };
    }
    if (event["validationException"] != null) {
      return {
        validationException: await de_ValidationException_event(event["validationException"], context)
      };
    }
    if (event["throttlingException"] != null) {
      return {
        throttlingException: await de_ThrottlingException_event(event["throttlingException"], context)
      };
    }
    if (event["modelTimeoutException"] != null) {
      return {
        modelTimeoutException: await de_ModelTimeoutException_event(event["modelTimeoutException"], context)
      };
    }
    if (event["serviceUnavailableException"] != null) {
      return {
        serviceUnavailableException: await de_ServiceUnavailableException_event(event["serviceUnavailableException"], context)
      };
    }
    return { $unknown: output };
  });
};
var de_ContentBlockDeltaEvent_event = async (output, context) => {
  const contents = {};
  const data = await parseJsonBody(output.body, context);
  Object.assign(contents, _json(data));
  return contents;
};
var de_ContentBlockStartEvent_event = async (output, context) => {
  const contents = {};
  const data = await parseJsonBody(output.body, context);
  Object.assign(contents, _json(data));
  return contents;
};
var de_ContentBlockStopEvent_event = async (output, context) => {
  const contents = {};
  const data = await parseJsonBody(output.body, context);
  Object.assign(contents, _json(data));
  return contents;
};
var de_ConverseStreamMetadataEvent_event = async (output, context) => {
  const contents = {};
  const data = await parseJsonBody(output.body, context);
  Object.assign(contents, de_ConverseStreamMetadataEvent(data, context));
  return contents;
};
var de_InternalServerException_event = async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await parseJsonBody(output.body, context)
  };
  return de_InternalServerExceptionRes(parsedOutput, context);
};
var de_MessageStartEvent_event = async (output, context) => {
  const contents = {};
  const data = await parseJsonBody(output.body, context);
  Object.assign(contents, _json(data));
  return contents;
};
var de_MessageStopEvent_event = async (output, context) => {
  const contents = {};
  const data = await parseJsonBody(output.body, context);
  Object.assign(contents, de_MessageStopEvent(data, context));
  return contents;
};
var de_ModelStreamErrorException_event = async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await parseJsonBody(output.body, context)
  };
  return de_ModelStreamErrorExceptionRes(parsedOutput, context);
};
var de_ModelTimeoutException_event = async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await parseJsonBody(output.body, context)
  };
  return de_ModelTimeoutExceptionRes(parsedOutput, context);
};
var de_PayloadPart_event = async (output, context) => {
  const contents = {};
  const data = await parseJsonBody(output.body, context);
  Object.assign(contents, de_PayloadPart(data, context));
  return contents;
};
var de_ServiceUnavailableException_event = async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await parseJsonBody(output.body, context)
  };
  return de_ServiceUnavailableExceptionRes(parsedOutput, context);
};
var de_ThrottlingException_event = async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await parseJsonBody(output.body, context)
  };
  return de_ThrottlingExceptionRes(parsedOutput, context);
};
var de_ValidationException_event = async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await parseJsonBody(output.body, context)
  };
  return de_ValidationExceptionRes(parsedOutput, context);
};
var se_ContentBlock = (input, context) => {
  return ContentBlock.visit(input, {
    document: (value2) => ({ document: se_DocumentBlock(value2, context) }),
    guardContent: (value2) => ({ guardContent: _json(value2) }),
    image: (value2) => ({ image: se_ImageBlock(value2, context) }),
    text: (value2) => ({ text: value2 }),
    toolResult: (value2) => ({ toolResult: se_ToolResultBlock(value2, context) }),
    toolUse: (value2) => ({ toolUse: se_ToolUseBlock(value2, context) }),
    _: (name, value2) => ({ name: value2 })
  });
};
var se_ContentBlocks = (input, context) => {
  return input.filter((e9) => e9 != null).map((entry) => {
    return se_ContentBlock(entry, context);
  });
};
var se_DocumentBlock = (input, context) => {
  return take(input, {
    format: [],
    name: [],
    source: (_5) => se_DocumentSource(_5, context)
  });
};
var se_DocumentSource = (input, context) => {
  return DocumentSource.visit(input, {
    bytes: (value2) => ({ bytes: context.base64Encoder(value2) }),
    _: (name, value2) => ({ name: value2 })
  });
};
var se_ImageBlock = (input, context) => {
  return take(input, {
    format: [],
    source: (_5) => se_ImageSource(_5, context)
  });
};
var se_ImageSource = (input, context) => {
  return ImageSource.visit(input, {
    bytes: (value2) => ({ bytes: context.base64Encoder(value2) }),
    _: (name, value2) => ({ name: value2 })
  });
};
var se_InferenceConfiguration = (input, context) => {
  return take(input, {
    maxTokens: [],
    stopSequences: _json,
    temperature: serializeFloat,
    topP: serializeFloat
  });
};
var se_Message = (input, context) => {
  return take(input, {
    content: (_5) => se_ContentBlocks(_5, context),
    role: []
  });
};
var se_Messages = (input, context) => {
  return input.filter((e9) => e9 != null).map((entry) => {
    return se_Message(entry, context);
  });
};
var se_Tool = (input, context) => {
  return Tool.visit(input, {
    toolSpec: (value2) => ({ toolSpec: se_ToolSpecification(value2, context) }),
    _: (name, value2) => ({ name: value2 })
  });
};
var se_ToolConfiguration = (input, context) => {
  return take(input, {
    toolChoice: _json,
    tools: (_5) => se_Tools(_5, context)
  });
};
var se_ToolInputSchema = (input, context) => {
  return ToolInputSchema.visit(input, {
    json: (value2) => ({ json: se_Document(value2, context) }),
    _: (name, value2) => ({ name: value2 })
  });
};
var se_ToolResultBlock = (input, context) => {
  return take(input, {
    content: (_5) => se_ToolResultContentBlocks(_5, context),
    status: [],
    toolUseId: []
  });
};
var se_ToolResultContentBlock = (input, context) => {
  return ToolResultContentBlock.visit(input, {
    document: (value2) => ({ document: se_DocumentBlock(value2, context) }),
    image: (value2) => ({ image: se_ImageBlock(value2, context) }),
    json: (value2) => ({ json: se_Document(value2, context) }),
    text: (value2) => ({ text: value2 }),
    _: (name, value2) => ({ name: value2 })
  });
};
var se_ToolResultContentBlocks = (input, context) => {
  return input.filter((e9) => e9 != null).map((entry) => {
    return se_ToolResultContentBlock(entry, context);
  });
};
var se_Tools = (input, context) => {
  return input.filter((e9) => e9 != null).map((entry) => {
    return se_Tool(entry, context);
  });
};
var se_ToolSpecification = (input, context) => {
  return take(input, {
    description: [],
    inputSchema: (_5) => se_ToolInputSchema(_5, context),
    name: []
  });
};
var se_ToolUseBlock = (input, context) => {
  return take(input, {
    input: (_5) => se_Document(_5, context),
    name: [],
    toolUseId: []
  });
};
var se_Document = (input, context) => {
  return input;
};
var de_ContentBlock = (output, context) => {
  if (output.document != null) {
    return {
      document: de_DocumentBlock(output.document, context)
    };
  }
  if (output.guardContent != null) {
    return {
      guardContent: _json(awsExpectUnion(output.guardContent))
    };
  }
  if (output.image != null) {
    return {
      image: de_ImageBlock(output.image, context)
    };
  }
  if (expectString(output.text) !== void 0) {
    return { text: expectString(output.text) };
  }
  if (output.toolResult != null) {
    return {
      toolResult: de_ToolResultBlock(output.toolResult, context)
    };
  }
  if (output.toolUse != null) {
    return {
      toolUse: de_ToolUseBlock(output.toolUse, context)
    };
  }
  return { $unknown: Object.entries(output)[0] };
};
var de_ContentBlocks = (output, context) => {
  const retVal = (output || []).filter((e9) => e9 != null).map((entry) => {
    return de_ContentBlock(awsExpectUnion(entry), context);
  });
  return retVal;
};
var de_ConverseOutput = (output, context) => {
  if (output.message != null) {
    return {
      message: de_Message(output.message, context)
    };
  }
  return { $unknown: Object.entries(output)[0] };
};
var de_ConverseStreamMetadataEvent = (output, context) => {
  return take(output, {
    metrics: _json,
    trace: (_5) => de_ConverseStreamTrace(_5, context),
    usage: _json
  });
};
var de_ConverseStreamTrace = (output, context) => {
  return take(output, {
    guardrail: (_5) => de_GuardrailTraceAssessment(_5, context)
  });
};
var de_ConverseTrace = (output, context) => {
  return take(output, {
    guardrail: (_5) => de_GuardrailTraceAssessment(_5, context)
  });
};
var de_DocumentBlock = (output, context) => {
  return take(output, {
    format: expectString,
    name: expectString,
    source: (_5) => de_DocumentSource(awsExpectUnion(_5), context)
  });
};
var de_DocumentSource = (output, context) => {
  if (output.bytes != null) {
    return {
      bytes: context.base64Decoder(output.bytes)
    };
  }
  return { $unknown: Object.entries(output)[0] };
};
var de_GuardrailAssessment = (output, context) => {
  return take(output, {
    contentPolicy: _json,
    contextualGroundingPolicy: (_5) => de_GuardrailContextualGroundingPolicyAssessment(_5, context),
    sensitiveInformationPolicy: _json,
    topicPolicy: _json,
    wordPolicy: _json
  });
};
var de_GuardrailAssessmentList = (output, context) => {
  const retVal = (output || []).filter((e9) => e9 != null).map((entry) => {
    return de_GuardrailAssessment(entry, context);
  });
  return retVal;
};
var de_GuardrailAssessmentListMap = (output, context) => {
  return Object.entries(output).reduce((acc, [key, value2]) => {
    if (value2 === null) {
      return acc;
    }
    acc[key] = de_GuardrailAssessmentList(value2, context);
    return acc;
  }, {});
};
var de_GuardrailAssessmentMap = (output, context) => {
  return Object.entries(output).reduce((acc, [key, value2]) => {
    if (value2 === null) {
      return acc;
    }
    acc[key] = de_GuardrailAssessment(value2, context);
    return acc;
  }, {});
};
var de_GuardrailContextualGroundingFilter = (output, context) => {
  return take(output, {
    action: expectString,
    score: limitedParseDouble,
    threshold: limitedParseDouble,
    type: expectString
  });
};
var de_GuardrailContextualGroundingFilters = (output, context) => {
  const retVal = (output || []).filter((e9) => e9 != null).map((entry) => {
    return de_GuardrailContextualGroundingFilter(entry, context);
  });
  return retVal;
};
var de_GuardrailContextualGroundingPolicyAssessment = (output, context) => {
  return take(output, {
    filters: (_5) => de_GuardrailContextualGroundingFilters(_5, context)
  });
};
var de_GuardrailTraceAssessment = (output, context) => {
  return take(output, {
    inputAssessment: (_5) => de_GuardrailAssessmentMap(_5, context),
    modelOutput: _json,
    outputAssessments: (_5) => de_GuardrailAssessmentListMap(_5, context)
  });
};
var de_ImageBlock = (output, context) => {
  return take(output, {
    format: expectString,
    source: (_5) => de_ImageSource(awsExpectUnion(_5), context)
  });
};
var de_ImageSource = (output, context) => {
  if (output.bytes != null) {
    return {
      bytes: context.base64Decoder(output.bytes)
    };
  }
  return { $unknown: Object.entries(output)[0] };
};
var de_Message = (output, context) => {
  return take(output, {
    content: (_5) => de_ContentBlocks(_5, context),
    role: expectString
  });
};
var de_MessageStopEvent = (output, context) => {
  return take(output, {
    additionalModelResponseFields: (_5) => de_Document(_5, context),
    stopReason: expectString
  });
};
var de_PayloadPart = (output, context) => {
  return take(output, {
    bytes: context.base64Decoder
  });
};
var de_ToolResultBlock = (output, context) => {
  return take(output, {
    content: (_5) => de_ToolResultContentBlocks(_5, context),
    status: expectString,
    toolUseId: expectString
  });
};
var de_ToolResultContentBlock = (output, context) => {
  if (output.document != null) {
    return {
      document: de_DocumentBlock(output.document, context)
    };
  }
  if (output.image != null) {
    return {
      image: de_ImageBlock(output.image, context)
    };
  }
  if (output.json != null) {
    return {
      json: de_Document(output.json, context)
    };
  }
  if (expectString(output.text) !== void 0) {
    return { text: expectString(output.text) };
  }
  return { $unknown: Object.entries(output)[0] };
};
var de_ToolResultContentBlocks = (output, context) => {
  const retVal = (output || []).filter((e9) => e9 != null).map((entry) => {
    return de_ToolResultContentBlock(awsExpectUnion(entry), context);
  });
  return retVal;
};
var de_ToolUseBlock = (output, context) => {
  return take(output, {
    input: (_5) => de_Document(_5, context),
    name: expectString,
    toolUseId: expectString
  });
};
var de_Document = (output, context) => {
  return output;
};
var deserializeMetadata2 = (output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
});
var isSerializableHeaderValue = (value2) => value2 !== void 0 && value2 !== null && value2 !== "" && (!Object.getOwnPropertyNames(value2).includes("length") || value2.length != 0) && (!Object.getOwnPropertyNames(value2).includes("size") || value2.size != 0);
var _a = "accept";
var _cT = "contentType";
var _ct = "content-type";
var _gI = "guardrailIdentifier";
var _gV = "guardrailVersion";
var _t = "trace";
var _xaba = "x-amzn-bedrock-accept";
var _xabct = "x-amzn-bedrock-content-type";
var _xabg = "x-amzn-bedrock-guardrailidentifier";
var _xabg_ = "x-amzn-bedrock-guardrailversion";
var _xabt = "x-amzn-bedrock-trace";

// node_modules/@aws-sdk/client-bedrock-runtime/dist-es/commands/ApplyGuardrailCommand.js
var ApplyGuardrailCommand = class extends Command2.classBuilder().ep({
  ...commonParams
}).m(function(Command3, cs3, config, o12) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command3.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockFrontendService", "ApplyGuardrail", {}).n("BedrockRuntimeClient", "ApplyGuardrailCommand").f(void 0, void 0).ser(se_ApplyGuardrailCommand).de(de_ApplyGuardrailCommand).build() {
};

// node_modules/@aws-sdk/client-bedrock-runtime/dist-es/commands/ConverseCommand.js
var ConverseCommand = class extends Command2.classBuilder().ep({
  ...commonParams
}).m(function(Command3, cs3, config, o12) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command3.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockFrontendService", "Converse", {}).n("BedrockRuntimeClient", "ConverseCommand").f(void 0, void 0).ser(se_ConverseCommand).de(de_ConverseCommand).build() {
};

// node_modules/@aws-sdk/client-bedrock-runtime/dist-es/commands/ConverseStreamCommand.js
var ConverseStreamCommand = class extends Command2.classBuilder().ep({
  ...commonParams
}).m(function(Command3, cs3, config, o12) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command3.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockFrontendService", "ConverseStream", {
  eventStream: {
    output: true
  }
}).n("BedrockRuntimeClient", "ConverseStreamCommand").f(void 0, ConverseStreamResponseFilterSensitiveLog).ser(se_ConverseStreamCommand).de(de_ConverseStreamCommand).build() {
};

// node_modules/@aws-sdk/client-bedrock-runtime/dist-es/commands/InvokeModelCommand.js
var InvokeModelCommand = class extends Command2.classBuilder().ep({
  ...commonParams
}).m(function(Command3, cs3, config, o12) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command3.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockFrontendService", "InvokeModel", {}).n("BedrockRuntimeClient", "InvokeModelCommand").f(InvokeModelRequestFilterSensitiveLog, InvokeModelResponseFilterSensitiveLog).ser(se_InvokeModelCommand).de(de_InvokeModelCommand).build() {
};

// node_modules/@aws-sdk/client-bedrock-runtime/dist-es/commands/InvokeModelWithResponseStreamCommand.js
var InvokeModelWithResponseStreamCommand = class extends Command2.classBuilder().ep({
  ...commonParams
}).m(function(Command3, cs3, config, o12) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command3.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockFrontendService", "InvokeModelWithResponseStream", {
  eventStream: {
    output: true
  }
}).n("BedrockRuntimeClient", "InvokeModelWithResponseStreamCommand").f(InvokeModelWithResponseStreamRequestFilterSensitiveLog, InvokeModelWithResponseStreamResponseFilterSensitiveLog).ser(se_InvokeModelWithResponseStreamCommand).de(de_InvokeModelWithResponseStreamCommand).build() {
};

// node_modules/@aws-sdk/client-bedrock-runtime/dist-es/BedrockRuntime.js
var commands = {
  ApplyGuardrailCommand,
  ConverseCommand,
  ConverseStreamCommand,
  InvokeModelCommand,
  InvokeModelWithResponseStreamCommand
};
var BedrockRuntime = class extends BedrockRuntimeClient {
};
createAggregatedClient(commands, BedrockRuntime);

// node_modules/@ckeditor/ckeditor5-ai/dist/index.js
var C2 = "_ungrouppedCommands";
function r3(_0x29f4ba, _0x3d8662) {
  const _0x1741b4 = (0, _0x3d8662["t"])("Other");
  return _0x29f4ba["length"] ? "groupId" in _0x29f4ba[0] ? _0x29f4ba : [{ "groupId": C2, "groupLabel": _0x1741b4, "order": 1 / 0, "commands": _0x29f4ba }] : [{ "groupId": C2, "groupLabel": _0x1741b4, "order": 1 / 0, "commands": [] }];
}
var c2 = "ai-ui";
var a4 = class extends Plugin {
  static get ["pluginName"]() {
    return "AIAssistantEditing";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    const { editor: _0x4ae827 } = this, _0x3ba39d = ["ck-fake-ai-selection"];
    _0x4ae827["config"]["get"]("ai.useTheme") && _0x3ba39d["push"]("ck-ai-assistant-ui_theme"), _0x4ae827["conversion"]["for"]("editingDowncast")["markerToHighlight"]({ "model": c2, "view": { "classes": _0x3ba39d, "priority": 12 } }), _0x4ae827["conversion"]["for"]("editingDowncast")["markerToElement"]({ "model": c2, "view": (_0x11bfec, { writer: _0x193665 }) => {
      if (!_0x11bfec["markerRange"]["isCollapsed"]) return null;
      const _0x113bbd = _0x193665["createUIElement"]("span");
      return _0x193665["addClass"](["ck-fake-ai-selection", "ck-fake-ai-selection_collapsed"], _0x113bbd), _0x113bbd;
    } });
  }
  ["showFakeVisualSelection"]() {
    const _0x49fa54 = this["editor"]["model"];
    _0x49fa54["change"]((_0x4baf55) => {
      const _0x106d7e = _0x49fa54["document"]["selection"]["getFirstRange"]();
      if (_0x49fa54["markers"]["has"](c2)) _0x4baf55["updateMarker"](c2, { "range": _0x106d7e });
      else {
        if (_0x106d7e["start"]["isAtEnd"]) {
          const _0x52154f = _0x106d7e["start"]["getLastMatchingPosition"](({ item: _0x46af6b }) => !_0x49fa54["schema"]["isContent"](_0x46af6b), { "boundaries": _0x106d7e });
          _0x4baf55["addMarker"](c2, { "usingOperation": false, "affectsData": false, "range": _0x4baf55["createRange"](_0x52154f, _0x106d7e["end"]) });
        } else _0x4baf55["addMarker"](c2, { "usingOperation": false, "affectsData": false, "range": _0x106d7e });
      }
    });
  }
  ["hideFakeVisualSelection"]() {
    const _0x1e5f1f = this["editor"]["model"];
    _0x1e5f1f["markers"]["has"](c2) && _0x1e5f1f["change"]((_0x46ac75) => {
      _0x46ac75["removeMarker"](c2);
    });
  }
  ["insertContent"](_0x138f1f, _0x569091) {
    const _0x561d8c = _0x569091 || this["editor"]["model"]["markers"]["get"](c2)["getRange"]();
    if (!this["editor"]["model"]["canEditAt"](_0x561d8c)) return;
    const _0x3f37fd = this["editor"]["data"]["processor"]["toView"](_0x138f1f), _0x332092 = this["editor"]["data"]["toModel"](_0x3f37fd);
    this["editor"]["model"]["change"]((_0x2757ba) => {
      this["hideFakeVisualSelection"]();
      const _0x4a3bbf = this["editor"]["model"]["insertContent"](_0x332092, _0x561d8c);
      _0x4a3bbf && _0x2757ba["setSelection"](_0x4a3bbf);
    });
  }
  ["insertContentBelow"](_0x2babe6) {
    const { model: _0x5c76fd } = this["editor"], _0x135b66 = Array["from"](_0x5c76fd["createSelection"](this["editor"]["model"]["markers"]["get"](c2)["getRange"]())["getSelectedBlocks"]()), _0x5f29b9 = _0x135b66["length"] ? _0x5c76fd["createPositionAfter"](_0x135b66["pop"]()) : _0x5c76fd["document"]["selection"]["getLastPosition"]();
    this["insertContent"](_0x2babe6, _0x5f29b9);
  }
};
var y = class extends Plugin {
  static get ["pluginName"]() {
    return "AIAdapter";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["afterInit"]() {
    if (!this["textAdapter"]) throw new CKEditorError("aiadapter-text-adapter-not-set", null);
  }
};
var R2 = class extends Error {
  constructor(_0x17e0d6) {
    super(_0x17e0d6), this["name"] = "AIRequestError";
  }
};
function o3(_0x1f0220, _0x407e68, _0x4867df) {
  const t2 = _0x1f0220["t"];
  switch (_0x407e68) {
    case "Edit or review":
      return t2("Edit or review");
    case "Improve writing":
      return t2("Improve writing");
    case "Make shorter":
      return t2("Make shorter");
    case "Make longer":
      return t2("Make longer");
    case "Simplify language":
      return t2("Simplify language");
    case "Generate from selection":
      return t2("Generate from selection");
    case "Summarize":
      return t2("Summarize");
    case "Continue":
      return t2("Continue");
    case "Change tone":
      return t2("Change tone");
    case "Professional":
      return t2("Professional");
    case "Casual":
      return t2("Casual");
    case "Direct":
      return t2("Direct");
    case "Confident":
      return t2("Confident");
    case "Friendly":
      return t2("Friendly");
    case "Change style":
      return t2("Change style");
    case "Business":
      return t2("Business");
    case "Legal":
      return t2("Legal");
    case "Journalism":
      return t2("Journalism");
    case "Poetic":
      return t2("Poetic");
    case "Translate":
      return t2("Translate");
    case "English":
      return t2("English");
    case "Spanish":
      return t2("Spanish");
    case "German":
      return t2("German");
    case "Portuguese":
      return t2("Portuguese");
    case "French":
      return t2("French");
    case "Simplified Chinese":
      return t2("Simplified Chinese");
    case "Hindi":
      return t2("Hindi");
    case "Arabic":
      return t2("Arabic");
    case "AI Assistant":
      return t2("AI Assistant");
    case "AI Commands":
      return t2("AI Commands");
    case "Ask AI to edit or generate":
      return t2("Ask AI to edit or generate");
    case "Ask AI to improve generated text":
      return t2("Ask AI to improve generated text");
    case "Copy":
      return t2("Copy");
    case "Submit":
      return t2("Submit");
    case "Insert below":
      return t2("Insert below");
    case "Try again":
      return t2("Try again");
    case "Stop":
      return t2("Stop");
    case "AI is writing...":
      return t2("AI is writing...");
    case "AI is writing":
      return t2("AI is writing");
    case "Generated content: %0":
      return t2("Generated content: %0", _0x4867df);
    case "Error during AI content generation: %0":
      return t2("Error during AI content generation: %0", _0x4867df);
    case "History":
      return t2("History");
    case "Empty history":
      return t2("Empty history");
    case "Ask AI and your prompts will be listed here for you to use later.":
      return t2("Ask AI and your prompts will be listed here for you to use later.");
    case "Prompt history":
      return t2("Prompt history");
    case "Clear":
      return t2("Clear");
    case "AI_REPLACE_CONTENT":
      return t2({ "id": "AI_REPLACE_CONTENT", "string": "Replace" });
    case "AI_INSERT_CONTENT":
      return t2({ "id": "AI_INSERT_CONTENT", "string": "Insert" });
    case "AI_ERROR_GET_HEADERS":
      return t2({ "id": "AI_ERROR_GET_HEADERS", "string": "Preparing request headers failed" });
    case "AI_ERROR_GET_PARAMETERS":
      return t2({ "id": "AI_ERROR_GET_PARAMETERS", "string": "Preparing request parameters failed" });
    case "AI_ERROR_UNSUPPORTED_MODEL":
      return t2({ "id": "AI_ERROR_UNSUPPORTED_MODEL", "string": 'The requested AI model ("%0") is not supported' }, _0x4867df);
    case "AI_ERROR_CONTEXT_LENGTH":
      return t2({ "id": "AI_ERROR_CONTEXT_LENGTH", "string": "Selected content is too long" });
    case "AI_ERROR_MODERATION":
      return t2({ "id": "AI_ERROR_MODERATION", "string": "Requested query does not pass moderation rules" });
    case "AI_ERROR_FAILED":
      return t2({ "id": "AI_ERROR_FAILED", "string": "Failed to communicate with the AI service" });
    default:
      return _0x407e68;
  }
}
var j2 = class extends Command {
  constructor(_0xee66be, _0x55810e) {
    super(_0xee66be);
    __publicField(this, "_commandDefinitions");
    this["_commandDefinitions"] = _0x55810e, this["set"]("enabledCommandsIds", []), this["on"]("change:_hasContext", (_0xa898e, _0x567ec9, _0x5c1bba) => {
      this["isEnabled"] && (this["enabledCommandsIds"] = G(this["_commandDefinitions"], _0x5c1bba));
    }), this["set"]("_hasContext", false), this["on"]("change:isEnabled", (_0x23b05d, _0x5ed4eb, _0x4ad381) => {
      this["enabledCommandsIds"] = _0x4ad381 ? G(this["_commandDefinitions"], this["_hasContext"]) : [];
    });
  }
  ["refresh"]() {
    const _0x2ddbe1 = this["editor"]["model"];
    this["_hasContext"] = function(_0x383b24) {
      const _0x3535b7 = _0x383b24["document"]["selection"];
      return _0x3535b7["isCollapsed"] ? 0 !== [..._0x3535b7["getSelectedBlocks"]()]["length"] && ![..._0x3535b7["getSelectedBlocks"]()][0]["isEmpty"] : !!_0x383b24["hasContent"](_0x3535b7["getFirstRange"]());
    }(_0x2ddbe1);
    const _0x56f38b = _0x2ddbe1["document"]["selection"], _0x12e4d4 = this["editor"]["config"]["get"]("ai.aiAssistant.disabledElements");
    for (const _0x3ba929 of _0x56f38b["getRanges"]()) for (const _0x4556d6 of _0x3ba929["getItems"]()) if (_0x4556d6["is"]("element") && _0x12e4d4["includes"](_0x4556d6["name"])) return void (this["isEnabled"] = false);
    this["isEnabled"] = true;
  }
  ["execute"](_0x4dff2c = "", _0x5afd7f = "", _0x3dda03 = "custom") {
    this["editor"]["plugins"]["get"](n2)["showUI"](_0x4dff2c, _0x5afd7f, _0x3dda03);
  }
};
function G(_0x567d79, _0x1ba798) {
  const _0x288cf2 = /* @__PURE__ */ new Set();
  for (const _0xc98fa of _0x567d79["values"]()) (_0x1ba798 || false === _0xc98fa["requiresContent"]) && _0x288cf2["add"](_0xc98fa["id"]);
  return Array["from"](_0x288cf2);
}
var Z2 = new RegExp(/^(.*?)<[a-zA-Z][a-zA-Z0-9_\-.]*[ >]/, "is");
var v6 = class extends ObservableMixin() {
  constructor(_0x196e2e, _0x1a9408, _0x4e6715) {
    super();
    __publicField(this, "editor");
    __publicField(this, "textAdapter");
    __publicField(this, "view");
    __publicField(this, "_sanitizationContainer");
    __publicField(this, "_domParser");
    __publicField(this, "_xmlSerializer");
    this["editor"] = _0x196e2e, this["textAdapter"] = _0x1a9408, this["_sanitizationContainer"] = document["createElement"]("div"), this["_domParser"] = new DOMParser(), this["_xmlSerializer"] = new XMLSerializer(), this["view"] = _0x4e6715, this["set"]({ "initialContext": "", "currentContext": "", "currentResponse": "", "previousContext": void 0, "previousQuery": void 0, "previousLabel": void 0, "isProcessing": false }), this["on"]("set:currentContext", (_0x6a2d6, _0xf914cd, _0x1eba2d) => {
      this["view"]["value"] = this["_sanitizeHTML"](_0x1eba2d);
    }), this["listenTo"](this["view"], "submitPrompt", (_0x2de78b, _0x56f4cd) => {
      const _0xf524e5 = this["currentContext"] || this["initialContext"];
      this["_handleQuery"](_0x56f4cd, _0xf524e5, "custom");
    }), this["listenTo"](this["view"], "tryAgainEvent", () => {
      this["view"]["prompt"] = this["previousLabel"], this["_handleQuery"](this["previousQuery"], this["previousContext"], this["previousActionId"], this["previousLabel"]);
    }), this["listenTo"](this["view"], "stopProcessing", () => {
      this["stopProcessing"]();
    });
  }
  ["destroy"]() {
    this["stopListening"]();
  }
  async ["updateView"]({ actionId: _0x17e69e, query: _0x5a0786, htmlContent: _0x40e0f9, label: _0x4de970, mainActionLabel: _0x50427c }) {
    this["view"]["prompt"] = _0x4de970, this["view"]["mainAction"] = _0x50427c, this["initialContext"] = _0x40e0f9, _0x5a0786 && (this["view"]["isRendered"] ? this["_handleQuery"](_0x5a0786, _0x40e0f9, _0x17e69e, _0x4de970) : this["view"]["once"]("render", () => {
      this["_handleQuery"](_0x5a0786, _0x40e0f9, _0x17e69e, _0x4de970);
    }));
  }
  ["stopProcessing"]() {
    this["isProcessing"] && (this["isProcessing"] = false, this["view"]["finishProcessing"](), this["textAdapter"]["abort"]());
  }
  ["reset"]() {
    this["initialContext"] = "", this["currentContext"] = "", this["currentResponse"] = "", this["previousContext"] = "", this["previousQuery"] = "", this["previousLabel"] = "", this["previousActionId"] = void 0, this["view"]["reset"](), this["stopProcessing"]();
  }
  async ["_handleQuery"](_0x224d46, _0x2f00c5, _0x526acd, _0x1df656) {
    return this["isProcessing"] = true, this["view"]["startProcessing"](), this["previousContext"] = _0x2f00c5, this["previousQuery"] = _0x224d46, this["previousLabel"] = _0x1df656 || _0x224d46, this["previousActionId"] = _0x526acd, new Promise((_0x3b053f) => {
      this["textAdapter"]["makeRequest"]({ "query": _0x224d46, "context": _0x2f00c5, "onData": (_0x1f0bee) => {
        this["currentResponse"] = _0x1f0bee, this["currentContext"] = this["_parseAndNormalizeContent"](this["currentResponse"]);
      }, "actionId": _0x526acd })["then"](() => {
        !this["currentContext"] && this["currentResponse"] && (this["currentContext"] = this["_parseAndNormalizeContent"](this["currentResponse"], true));
      })["catch"]((_0x514af4) => {
        _0x514af4 instanceof R2 ? this["view"]["handleError"](_0x514af4["message"]) : this["view"]["handleError"](), _0x3b053f();
      })["finally"](() => {
        this["stopProcessing"](), _0x3b053f();
      });
    });
  }
  ["_parseAndNormalizeContent"](_0x1466d9, _0xb1a2a6 = false) {
    const _0x2365d7 = Z2["exec"](_0x1466d9);
    _0x1466d9 = _0x2365d7 ? _0x1466d9["substring"](_0x2365d7[1]["length"]) : _0x1466d9["length"] < 100 && !_0xb1a2a6 ? "" : this["_stripMarkdownSyntax"](_0x1466d9);
    const _0x1ec5b7 = this["_domParser"]["parseFromString"](_0x1466d9, "text/html");
    if (_0x2365d7) {
      const _0x15ebdd = Array["from"](_0x1ec5b7["body"]["childNodes"]);
      _0x15ebdd["reverse"]();
      for (const _0xc85d3a of _0x15ebdd) {
        if (_0xc85d3a["nodeType"] == Node["ELEMENT_NODE"]) break;
        _0xc85d3a["remove"]();
      }
    }
    const _0x5b642e = this["editor"]["data"]["processor"]["toView"](this["_xmlSerializer"]["serializeToString"](_0x1ec5b7["body"]));
    return this["_isH1TagSupportEnabled"]() || this["_normalizeResponseHeadings"](_0x5b642e), this["editor"]["data"]["stringify"](this["editor"]["data"]["toModel"](_0x5b642e));
  }
  ["_normalizeResponseHeadings"](_0x94bbca) {
    const _0x3196fd = new UpcastWriter(this["editor"]["editing"]["view"]["document"]), _0x8696dc = new Matcher({ "name": /^h[1-5]$/ }), _0xf3e584 = [];
    let _0x2ab6ce = false;
    for (const _0xae2a3a of _0x94bbca) _0xae2a3a["is"]("element") && _0x8696dc["match"](_0xae2a3a) && (_0xf3e584["push"](_0xae2a3a), "h1" == _0xae2a3a["name"] && (_0x2ab6ce = true));
    if (_0x2ab6ce) {
      for (const _0x58d3da of _0xf3e584) _0x3196fd["rename"]("h" + (parseInt(_0x58d3da["name"][1]) + 1), _0x58d3da);
    }
  }
  ["_isH1TagSupportEnabled"]() {
    const { data: _0x2a9c75, editing: _0x5077bb } = this["editor"], _0x4203ed = _0x2a9c75["htmlProcessor"]["toView"]("<h1></h1>"), _0x21fe0 = _0x2a9c75["toView"](_0x2a9c75["toModel"](_0x4203ed));
    return !!_0x5077bb["view"]["domConverter"]["viewToDom"](_0x21fe0)["querySelector"]("h1");
  }
  ["_sanitizeHTML"](_0x133f89) {
    return this["editor"]["editing"]["view"]["domConverter"]["setContentOf"](this["_sanitizationContainer"], _0x133f89), this["_sanitizationContainer"]["innerHTML"];
  }
  ["_stripMarkdownSyntax"](_0x51f35c) {
    const _0x31abbb = _0x51f35c["trim"]();
    return _0x31abbb["startsWith"]("```html") ? _0x31abbb["endsWith"]("```") ? _0x31abbb["substring"](7, _0x31abbb["length"] - 3) : _0x31abbb["substring"](7) : _0x51f35c;
  }
};
var x = { "REPLACE": "replace", "INSERT": "insert" };
var nt = class extends ToolbarView {
  constructor(_0x27de56) {
    super(_0x27de56), this["set"]("isVisible", false), this["set"]("mainAction", x["REPLACE"]), this["replaceButton"] = this["_createButton"]("", "ck-button-action"), this["replaceButton"]["bind"]("label")["to"](this, "mainAction", (_0x37f071) => o3(_0x27de56, "AI_" + _0x37f071["toUpperCase"]() + "_CONTENT")), this["insertButton"] = this["_createButton"](o3(_0x27de56, "Insert below")), this["tryAgainButton"] = this["_createButton"](o3(_0x27de56, "Try again")), this["stopButton"] = this["_createButton"](o3(_0x27de56, "Stop"));
    const _0x56b926 = this["bindTemplate"];
    this["extendTemplate"]({ "attributes": { "class": ["ck-ai-form__toolbar", _0x56b926["if"]("isVisible", "ck-hidden", (_0x405d76) => !_0x405d76)] } }), this["items"]["addMany"]([this["replaceButton"], this["insertButton"], this["tryAgainButton"], this["stopButton"]]);
  }
  ["_createButton"](_0x557307, _0x35f2bf) {
    const _0x305037 = new ButtonView(this["locale"]);
    return _0x305037["set"]({ "label": _0x557307, "class": _0x35f2bf || "", "isVisible": true, "withText": true }), _0x305037;
  }
};
var K2 = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M5 2.801a.7.7 0 0 0-.7.7v11.5a.8.8 0 0 1-1.6 0v-11.5a2.3 2.3 0 0 1 2.3-2.3h6.5a.8.8 0 0 1 0 1.6H5Zm.7 3.7a2.3 2.3 0 0 1 2.3-2.3h7a2.3 2.3 0 0 1 2.3 2.3v10a2.3 2.3 0 0 1-2.3 2.3H8a2.3 2.3 0 0 1-2.3-2.3v-10Zm2.3-.7a.7.7 0 0 0-.7.7v10a.7.7 0 0 0 .7.7h7a.7.7 0 0 0 .7-.7v-10a.7.7 0 0 0-.7-.7H8Z"/></svg>';
var W2 = class extends View {
  constructor(_0x171528, _0x4286ed = "") {
    super(_0x171528);
    __publicField(this, "contentFieldView");
    __publicField(this, "copyButtonView");
    this["set"]({ "value": null, "isVisible": false, "isProcessing": false });
    const _0x41108b = this["bindTemplate"];
    this["contentFieldView"] = new ct(_0x171528, _0x4286ed), this["copyButtonView"] = this["_createCopyButton"](), this["setTemplate"]({ "tag": "div", "attributes": { "class": ["ck", "ck-ai-form__content-area-wrapper", _0x41108b["if"]("isVisible", "ck-hidden", (_0x4af43f) => !_0x4af43f)], "tabindex": "-1" }, "children": [{ "tag": "div", "attributes": { "class": ["ck", "ck-ai-form__content-area", _0x41108b["if"]("isProcessing", "ck-ai-form__content-area--processing")] }, "children": [this["contentFieldView"], { "tag": "div", "attributes": { "class": ["ck", "ck-ai-form__copy-button-wrapper"] }, "children": [this["copyButtonView"]] }] }] });
  }
  ["render"]() {
    super["render"](), this["value"] && this["contentFieldView"]["setContent"](this["value"]);
    let _0x196e56 = false;
    this["on"]("change:value", (_0x19859a, _0x2f667a, _0x2faeb7) => {
      const _0x521bf7 = !this["contentFieldView"]["element"]["querySelector"](".ck-ai-form__loader");
      this["contentFieldView"]["setContent"](_0x2faeb7), this["isProcessing"] && _0x521bf7 && !_0x196e56 && this["element"]["scrollTo"]({ "top": this["element"]["scrollHeight"], "behavior": "smooth" });
    }), this["on"]("change:isProcessing", (_0x2c892a, _0x2321bf, _0x54acfa) => {
      _0x196e56 = false, _0x54acfa ? (this["value"] = null, this["contentFieldView"]["appendLoader"]()) : this["value"] || this["contentFieldView"]["setContent"]("");
    }), this["listenTo"](this["element"], "wheel", () => {
      _0x196e56 = true;
    }), this["listenTo"](this["element"], "mousedown", () => {
      _0x196e56 = true;
    });
  }
  ["focus"]() {
    this["element"]["focus"]();
  }
  ["_createCopyButton"]() {
    const _0x395336 = this["locale"], _0x14412d = new ButtonView(this["locale"]), _0x1e1406 = "ck-ai-form__copy-button";
    return _0x14412d["set"]({ "label": o3(_0x395336, "Copy"), "icon": K2, "class": _0x1e1406, "tooltip": true }), _0x14412d["bind"]("isVisible")["to"](this, "value", (_0x109f51) => !!_0x109f51), _0x14412d["bind"]("isEnabled")["to"](this, "isProcessing", (_0xb97a1e) => !_0xb97a1e), _0x14412d["on"]("execute", () => {
      this["_copyHTMLToClipboard"](this["contentFieldView"]["element"]), _0x14412d["icon"] = icons["check"], _0x14412d["class"] = _0x1e1406 + " ck-ai-form__copy-button--copied", this["focus"](), setTimeout(() => {
        _0x14412d["icon"] = K2, _0x14412d["class"] = _0x1e1406;
      }, 1e3);
    }), _0x14412d;
  }
  ["_copyHTMLToClipboard"](_0x3d1ba1) {
    const { window: _0x23a868, document: _0x22cda6 } = global2;
    if (_0x23a868["ClipboardItem"]) {
      const { Blob: _0x44f281, ClipboardItem: _0x575abf } = _0x23a868, _0x39c17a = [new _0x575abf({ "text/html": new _0x44f281([_0x3d1ba1["innerHTML"]], { "type": "text/html" }), "text/plain": new _0x44f281([_0x3d1ba1["textContent"] || ""], { "type": "text/plain" }) })];
      navigator["clipboard"]["write"](_0x39c17a);
    } else {
      const _0x4d5038 = _0x22cda6["createElement"]("div");
      _0x4d5038["style"]["position"] = "absolute", _0x4d5038["style"]["left"] = "-9999px", _0x4d5038["innerHTML"] = "<span>[</span>" + _0x3d1ba1["innerHTML"] + "<span>]</span>", _0x22cda6["body"]["appendChild"](_0x4d5038);
      const _0x1c8c7e = _0x22cda6["createRange"]();
      _0x1c8c7e["setStartAfter"](_0x4d5038["firstElementChild"]), _0x1c8c7e["setEndBefore"](_0x4d5038["lastElementChild"]);
      const _0x155bfe = _0x23a868["getSelection"]();
      _0x155bfe["removeAllRanges"](), _0x155bfe["addRange"](_0x1c8c7e), _0x22cda6["execCommand"]("copy"), _0x4d5038["remove"]();
    }
  }
};
var ct = class extends View {
  constructor(_0x35399c, _0x4bbfdc = "") {
    super(_0x35399c), this["loaderView"] = this["_createLoader"](), this["setTemplate"]({ "tag": "div", "attributes": { "class": ["ck", "ck-content", _0x4bbfdc, "ck-reset_all-excluded", "ck-ai-form__content-field"] } });
  }
  ["setContent"](_0x10f69c) {
    this["element"]["innerHTML"] = _0x10f69c;
  }
  ["appendLoader"]() {
    this["element"]["appendChild"](this["loaderView"]["element"]);
  }
  ["_createLoader"]() {
    const _0x5e934b = new View(), _0x21f9f0 = this["locale"], _0x47c12e = new SpinnerView();
    return _0x47c12e["isVisible"] = true, _0x5e934b["setTemplate"]({ "tag": "div", "attributes": { "class": ["ck", "ck-ai-form__loader"] }, "children": [_0x47c12e, { "text": o3(_0x21f9f0, "AI is writing...") }] }), _0x5e934b["render"](), _0x5e934b;
  }
};
var tt = class extends View {
  constructor(_0x303dac, _0xf56fc3 = "") {
    super(_0x303dac);
    const _0x56c626 = new IconView(), _0x462935 = this["bindTemplate"];
    this["set"]("text", _0xf56fc3), _0x56c626["content"] = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path clip-rule="evenodd" d="M9.9 4.385a1.2 1.2 0 0 0-.44.44h.002l-5.284 9.15a1.2 1.2 0 0 0 1.04 1.8h10.564a1.2 1.2 0 0 0 1.04-1.8l-5.282-9.15a1.2 1.2 0 0 0-1.64-.44Zm.05 8.363a.301.301 0 0 1 .115-.023h.9a.301.301 0 0 1 .3.3v.9a.3.3 0 0 1-.3.3h-.9a.3.3 0 0 1-.3-.3v-.9a.3.3 0 0 1 .185-.277Zm-.185-4.723a.3.3 0 0 1 .3-.3h.9a.3.3 0 0 1 .3.3v3.4a.3.3 0 0 1-.3.3h-.9a.301.301 0 0 1-.3-.3v-3.4Z"/></svg>\n', this["setTemplate"]({ "tag": "div", "attributes": { "class": ["ck", "ck-ai-form__error"] }, "children": [_0x56c626, { "text": _0x462935["to"]("text") }] });
  }
};
var ht = class extends AutocompleteView {
  constructor(_0x33261f, _0xa2bda) {
    super(_0x33261f, _0xa2bda);
    __publicField(this, "submitButtonView");
    __publicField(this, "showHistoryButtonView");
    this["queryView"]["fieldView"]["minRows"] = 1, this["queryView"]["fieldView"]["maxRows"] = 3, this["submitButtonView"] = this["_createSubmitButton"](), this["showHistoryButtonView"] = this["_createShowHistoryButton"](), this["focusableChildren"]["add"](this["showHistoryButtonView"], 1), this["focusableChildren"]["add"](this["submitButtonView"]);
  }
  ["render"]() {
    super["render"](), this["queryView"]["fieldWrapperChildren"]["add"](this["showHistoryButtonView"]), this["children"]["add"](this["submitButtonView"]), this["keystrokes"]["set"]("enter", (_0x2514e5, _0xf81f6a) => {
      _0x2514e5["target"] == this["queryView"]["fieldView"]["element"] && (this["submit"](), _0xf81f6a());
    });
  }
  ["_createSubmitButton"]() {
    const _0x1ee4e7 = new ButtonView(this["locale"]), _0x57c8bc = this["locale"];
    return _0x1ee4e7["set"]({ "icon": '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M15.875 4.419a.75.75 0 0 0-1.5 0v7.25H6.818l2.33-1.955a.75.75 0 0 0-.963-1.15l-3.792 3.182a.75.75 0 0 0-.17.945c.046.11.118.208.21.284l3.788 3.18a.75.75 0 1 0 .965-1.149l-2.19-1.837h7.629c.69 0 1.25-.56 1.25-1.25v-7.5Z"/></svg>', "label": o3(_0x57c8bc, "Submit"), "isVisible": true, "tooltip": true, "class": "ck-ai-form__submit" }), _0x1ee4e7["on"]("execute", () => {
      this["submit"]();
    }), _0x1ee4e7["bind"]("isEnabled")["to"](this["queryView"]["fieldView"], "isEmpty", this, "isEnabled", (_0x35b445, _0x236de3) => !_0x35b445 && _0x236de3), _0x1ee4e7;
  }
  ["_createShowHistoryButton"]() {
    const _0x531e00 = new ButtonView(this["locale"]), _0x2a73ba = this["resultsView"], _0x519dd1 = this["locale"];
    _0x531e00["set"]({ "label": o3(_0x519dd1, "History"), "withText": false, "icon": icons["history"], "tooltip": true, "tooltipPosition": "sw", "class": "ck-ai-form__toggle-history" }), _0x531e00["bind"]("isOn")["to"](_0x2a73ba, "isVisible"), _0x531e00["bind"]("isEnabled")["to"](this, "isEnabled"), _0x531e00["on"]("execute", () => {
      _0x2a73ba["isVisible"] = !_0x2a73ba["isVisible"], _0x2a73ba["isVisible"] ? this["filteredView"]["focus"]() : this["focus"]();
    });
    const _0x57073c = () => {
      global2["window"]["requestAnimationFrame"](() => {
        if (isVisible(this["element"])) {
          const _0x31cf82 = new Rect(this["queryView"]["fieldView"]["element"]), _0x30ad89 = _0x31cf82["width"], _0xab89b5 = "rtl" === _0x519dd1["uiLanguageDirection"] ? "left" : "right";
          _0x31cf82["excludeScrollbarsAndBorders"](), _0x531e00["element"]["style"][_0xab89b5] = _0x30ad89 - _0x31cf82["width"] + 1 + "px";
        }
      });
    };
    return this["queryView"]["fieldView"]["on"]("update", _0x57073c), this["on"]("render", _0x57073c), _0x531e00;
  }
  ["submit"]() {
    const _0x2e6e0d = this["queryView"]["fieldView"]["element"]["value"];
    this["fire"]("submit", _0x2e6e0d);
  }
  ["focus"](_0x28c29c) {
    -1 === _0x28c29c ? this["focusCycler"]["focusLast"]() : this["focusCycler"]["focusFirst"]();
  }
};
var rs = class extends ListView {
  constructor(_0x2cc012) {
    super(_0x2cc012);
    __publicField(this, "historyGroupView");
    __publicField(this, "clearHistoryButton");
    this["clearHistoryButton"] = this["_createClearHistoryButton"](), this["historyGroupView"] = new ListItemGroupView(), this["historyGroupView"]["children"]["add"](this["clearHistoryButton"], 1), this["historyGroupView"]["label"] = o3(_0x2cc012, "Prompt history"), this["historyGroupView"]["items"]["delegate"]("execute")["to"](this), this["items"]["add"](this["historyGroupView"]);
  }
  ["filter"]() {
    let _0xcd1568 = 0;
    for (const _0x3ba462 of this["items"]) _0xcd1568 += _0x3ba462["items"]["length"];
    return { "resultsCount": _0xcd1568, "totalItemsCount": _0xcd1568 };
  }
  ["_createClearHistoryButton"]() {
    const _0x5430ad = this["locale"], _0x12c546 = new ButtonView(this["locale"]);
    return _0x12c546["set"]({ "label": "(" + o3(_0x5430ad, "Clear") + ")", "withText": true }), _0x12c546["on"]("execute", () => this["fire"]("clearHistory")), _0x12c546;
  }
};
var hs = class extends ListItemView {
  constructor(_0x206830) {
    super();
    const _0x5de997 = new ButtonLabelView(), _0x5d9056 = new ButtonView(this["locale"], _0x5de997);
    this["children"]["add"](_0x5d9056), _0x5d9056["set"]({ "label": _0x206830["prompt"], "withText": true }), _0x5d9056["on"]("execute", () => {
      this["fire"]("execute", { "value": unescape_default(_0x206830["prompt"]) });
    });
  }
};
var cs = "CKEditor/AIFormView/PromptHistory";
var os = class extends Collection {
  constructor() {
    super(), this["_loadFromSessionStorage"](), this["on"]("add", (_0x59062b, _0xf5e13d) => {
      const _0x735c79 = Ss(_0xf5e13d["prompt"]);
      for (const _0xf81faf of this) if (_0xf81faf != _0xf5e13d && Ss(_0xf81faf["prompt"]) === _0x735c79) {
        this["remove"](_0xf81faf);
        break;
      }
      this["length"] > 20 && this["remove"](this["last"]), this["_saveToSessionStorage"]();
    }), this["on"]("remove", () => {
      this["_saveToSessionStorage"]();
    });
  }
  ["_loadFromSessionStorage"]() {
    const _0x341b13 = sessionStorage["getItem"](cs) || "[]";
    this["addMany"](JSON["parse"](_0x341b13));
  }
  ["_saveToSessionStorage"]() {
    sessionStorage["setItem"](cs, JSON["stringify"](this["map"]((_0x25bc49) => _0x25bc49)));
  }
};
function Ss(_0x1eb58b) {
  return _0x1eb58b["toLowerCase"]()["trim"]();
}
var k2 = class extends View {
  constructor(_0x3a02fe, _0x5bdb82, _0x21198e = "") {
    super(_0x3a02fe);
    __publicField(this, "focusTracker");
    __publicField(this, "keystrokes");
    __publicField(this, "contentArea");
    __publicField(this, "toolbar");
    __publicField(this, "promptView");
    __publicField(this, "errorView");
    __publicField(this, "_focusables");
    __publicField(this, "focusCycler");
    __publicField(this, "_promptHistory");
    this["set"]("isEnabled", true), this["set"]("isProcessing", false), this["set"]("prompt", ""), this["set"]("value", ""), this["set"]("isError", false), this["set"]("mainAction", x["REPLACE"]), this["_promptHistory"] = new os(), this["errorView"] = new tt(_0x3a02fe), this["contentArea"] = new W2(_0x3a02fe, _0x21198e), this["contentArea"]["bind"]("isProcessing")["to"](this), this["contentArea"]["bind"]("value")["to"](this), this["toolbar"] = this["_createToolbar"](), this["toolbar"]["bind"]("mainAction")["to"](this), this["promptView"] = this["_createPromptView"](), this["focusTracker"] = new FocusTracker(), this["keystrokes"] = new KeystrokeHandler(), this["_focusables"] = this["createCollection"]([this["contentArea"], this["contentArea"]["copyButtonView"], this["toolbar"], this["promptView"]]), this["focusCycler"] = new FocusCycler({ "focusables": this["_focusables"], "focusTracker": this["focusTracker"], "keystrokeHandler": this["keystrokes"], "actions": { "focusPrevious": "shift + tab", "focusNext": "tab" } }), this["focusCycler"]["chain"](this["promptView"]["focusCycler"]), this["promptView"]["queryView"]["fieldView"]["bind"]("value")["to"](this, "prompt");
    const _0x5946b7 = this["bindTemplate"];
    this["setTemplate"]({ "tag": "div", "attributes": { "class": ["ck", "ck-ai-form", _0x5bdb82], "tabindex": "-1" }, "children": [{ "tag": "div", "attributes": { "class": ["ck", "ck-ai-form-content"] }, "children": [{ "tag": "div", "attributes": { "class": [_0x5946b7["if"]("isError", "ck-hidden", (_0x9fd394) => !_0x9fd394)] }, "children": [this["errorView"]] }, this["contentArea"], this["toolbar"], this["promptView"]] }] });
  }
  ["render"]() {
    super["render"](), this["focusTracker"]["add"](this["contentArea"]["element"]), this["focusTracker"]["add"](this["contentArea"]["copyButtonView"]["element"]), this["focusTracker"]["add"](this["toolbar"]["element"]), this["focusTracker"]["add"](this["promptView"]["element"]), this["keystrokes"]["listenTo"](this["element"]);
  }
  ["focus"](_0x4069c2 = 1) {
    -1 === _0x4069c2 ? this["focusCycler"]["focusLast"]() : this["focusCycler"]["focusFirst"]();
  }
  ["reset"]() {
    this["prompt"] = "", this["value"] = "", this["isError"] = false, this["promptView"]["reset"](), this["contentArea"]["isVisible"] = false, this["toolbar"]["isVisible"] = false;
  }
  ["_createPromptView"]() {
    const _0x213b01 = this["locale"], _0x27659e = new ht(_0x213b01, { "queryView": { "label": o3(_0x213b01, "Ask AI to edit or generate"), "creator": createLabeledTextarea, "showIcon": false, "showResetButton": false }, "infoView": { "text": { "noSearchableItems": { "primary": o3(_0x213b01, "Empty history"), "secondary": o3(_0x213b01, "Ask AI and your prompts will be listed here for you to use later.") } } }, "filteredView": this["_createHistoryView"](), "queryMinChars": 1 / 0, "resetOnBlur": false });
    return _0x27659e["bind"]("isEnabled")["to"](this, "isEnabled", this, "isProcessing", (_0x72ad39, _0x3aa050) => _0x72ad39 && !_0x3aa050), this["listenTo"](_0x27659e, "submit", (_0x10a427, _0x539378) => {
      this["prompt"] = _0x539378;
      const _0x1158e6 = escape_default(_0x539378);
      this["fire"]("submitPrompt", _0x1158e6), _0x539378["trim"]() && this["_promptHistory"]["add"]({ "prompt": _0x1158e6 }, 0);
    }, { "priority": "high" }), _0x27659e;
  }
  ["_createHistoryView"]() {
    const _0x771a46 = new rs(this["locale"]);
    return _0x771a46["historyGroupView"]["items"]["bindTo"](this["_promptHistory"])["as"](hs), _0x771a46["on"]("clearHistory", () => {
      this["_promptHistory"]["clear"](), this["promptView"]["search"](""), this["promptView"]["focus"]();
    }), _0x771a46;
  }
  ["_createToolbar"]() {
    const _0x7a14ee = new nt(this["locale"]);
    return _0x7a14ee["replaceButton"]["bind"]("isEnabled")["to"](this, "isEnabled", this, "isProcessing", this, "value", (_0x299474, _0x4c664d, _0xc26532) => _0x299474 && !_0x4c664d && !!_0xc26532), _0x7a14ee["replaceButton"]["delegate"]("execute")["to"](this, "replaceContent"), _0x7a14ee["insertButton"]["bind"]("isEnabled")["to"](this, "isEnabled", this, "isProcessing", this, "value", (_0x53e0fd, _0x167728, _0x4e427f) => _0x53e0fd && !_0x167728 && !!_0x4e427f), _0x7a14ee["insertButton"]["delegate"]("execute")["to"](this, "insertContentBelow"), _0x7a14ee["tryAgainButton"]["bind"]("isEnabled")["to"](this, "isEnabled", this, "isProcessing", (_0x427fae, _0x4ed264) => _0x427fae && !_0x4ed264), _0x7a14ee["tryAgainButton"]["delegate"]("execute")["to"](this, "tryAgainEvent"), _0x7a14ee["stopButton"]["bind"]("isEnabled")["to"](this, "isProcessing"), _0x7a14ee["stopButton"]["delegate"]("execute")["to"](this, "stopProcessing"), _0x7a14ee;
  }
  ["startProcessing"]() {
    this["value"] = "", this["isError"] = false, this["isProcessing"] = true, this["contentArea"]["isVisible"] = true, this["toolbar"]["isVisible"] = true, this["contentArea"]["focus"]();
  }
  ["finishProcessing"]() {
    const _0xcec6e3 = this["locale"];
    this["isProcessing"] = false, this["prompt"] = "", this["promptView"]["reset"](), this["value"] && (this["promptView"]["queryView"]["label"] = o3(_0xcec6e3, "Ask AI to improve generated text"));
  }
  ["handleError"](_0x42cf33) {
    const _0x4ad205 = this["locale"];
    this["finishProcessing"](), this["isError"] = true, this["errorView"]["text"] = _0x42cf33 || o3(_0x4ad205, "AI_ERROR_FAILED"), this["value"] || (this["contentArea"]["isVisible"] = false);
  }
};
var E2 = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M15.346 9.422a.151.151 0 0 1 .284 0l.548 1.484a.152.152 0 0 0 .09.089l1.483.549a.151.151 0 0 1 0 .284l-1.483.548a.151.151 0 0 0-.09.09l-.548 1.483a.152.152 0 0 1-.142.1.151.151 0 0 1-.142-.1l-.549-1.483a.15.15 0 0 0-.09-.09l-1.483-.548a.15.15 0 0 1 0-.284l1.484-.549a.152.152 0 0 0 .089-.09l.549-1.483Z"/><path d="M16.306 1.742a.151.151 0 0 1 .284 0l.549 1.483a.15.15 0 0 0 .089.09l1.483.548a.151.151 0 0 1 .072.229.151.151 0 0 1-.072.055l-1.483.549a.15.15 0 0 0-.09.09l-.548 1.482a.151.151 0 0 1-.284 0l-.549-1.483a.15.15 0 0 0-.09-.09l-1.483-.548a.151.151 0 0 1 0-.284l1.484-.549a.152.152 0 0 0 .09-.089l.548-1.483Z"/><path d="M7.665 1.742a.151.151 0 0 1 .284 0l.549 1.483a.151.151 0 0 0 .09.09l1.482.548a.151.151 0 0 1 .072.229.151.151 0 0 1-.072.055l-1.483.549a.151.151 0 0 0-.09.09L7.95 6.267a.151.151 0 0 1-.284 0l-.549-1.483a.151.151 0 0 0-.089-.09l-1.483-.548a.151.151 0 0 1 0-.284l1.483-.549a.151.151 0 0 0 .09-.089l.548-1.483-.001.001Z"/><path d="M14.72 7.946a.848.848 0 0 0 .25-.591.824.824 0 0 0-.241-.588l-1.943-1.938a.812.812 0 0 0-.588-.241.838.838 0 0 0-.591.25l-1.545 1.539 3.115 3.115 1.542-1.546h.001Z"/><path clip-rule="evenodd" d="M1.19 15.636a.96.96 0 0 1 .281-.679l7.835-7.834 3.121 3.12-7.834 7.835a.959.959 0 0 1-1.358 0l-1.764-1.764a.96.96 0 0 1-.28-.678Zm9.22-5.391-1.121-1.12-6.479 6.478 1.121 1.121 6.479-6.479Z"/></svg>';
var U2 = globalThis["DataTransfer"];
var n2 = class extends Plugin {
  constructor(_0x5a772a) {
    super(_0x5a772a);
    __publicField(this, "_dialog");
    __publicField(this, "_formView");
    __publicField(this, "_aiAdapter");
    __publicField(this, "_aiAssistantController");
    __publicField(this, "_uiCssClasses", "");
    _0x5a772a["config"]["define"]("ai.aiAssistant.disabledElements", ["media", "rawHtml", "tableOfContents"]), _0x5a772a["config"]["define"]("ai.aiAssistant.contentAreaCssClass", ""), _0x5a772a["config"]["define"]("ai.useTheme", true), this["_uiCssClasses"] = "ck-ai-assistant-ui" + (_0x5a772a["config"]["get"]("ai.useTheme") ? " ck-ai-assistant-ui_theme" : "");
  }
  static get ["pluginName"]() {
    return "AIAssistantUI";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  static get ["requires"]() {
    return [ClipboardMarkersUtils, a4, y, Dialog];
  }
  ["init"]() {
    const { editor: _0x5dc06f } = this;
    this["_aiAdapter"] = _0x5dc06f["plugins"]["get"](y), this["_dialog"] = _0x5dc06f["plugins"]["get"](Dialog), this["_formView"] = null, this["_commandDefinitions"] = this["_getResolvedCommandsDefinitions"]();
    const _0x11a7ad = new j2(_0x5dc06f, Array["from"](this["_commandDefinitions"]["values"]()));
    _0x5dc06f["commands"]["add"]("showAIAssistant", _0x11a7ad), _0x5dc06f["ui"]["componentFactory"]["add"]("aiCommands", (_0x3e9c12) => {
      const _0x33f42a = createDropdown(_0x3e9c12);
      return _0x33f42a["set"]({ "class": "ck-ai-commands-dropdown " + this["_uiCssClasses"] }), _0x33f42a["buttonView"]["set"]({ "label": o3(_0x3e9c12, "AI Commands"), "icon": E2, "tooltip": true }), _0x33f42a["on"]("execute", (_0x57672d) => this["_onExecute"](_0x57672d["source"]["id"])), addMenuToDropdown(_0x33f42a, _0x5dc06f["ui"]["view"]["body"], function(_0x34e75d) {
        const _0x3dc379 = r3(_0x34e75d["config"]["get"]("ai.aiAssistant.commands"), _0x34e75d["locale"]), _0x1e180c = N(_0x34e75d, _0x3dc379)["filter"]((_0x16e693) => _0x16e693["commands"]["length"]);
        if (1 === _0x1e180c["length"]) return N(_0x34e75d, _0x1e180c[0]["commands"])["map"]((_0x6755eb) => ({ "id": _0x6755eb["id"], "label": _0x6755eb["label"] }));
        return _0x1e180c["map"]((_0x47122e) => {
          const { groupId: _0x314eef, groupLabel: _0x3e5d85, commands: _0x1c3a32 } = _0x47122e, _0x4301be = N(_0x34e75d, _0x1c3a32)["map"]((_0x53541c) => ({ "id": _0x53541c["id"], "label": _0x53541c["label"] }));
          return { "id": _0x314eef, "menu": _0x3e5d85 || _0x314eef, "children": _0x4301be };
        });
      }(_0x5dc06f), { "ariaLabel": o3(_0x3e9c12, "AI Commands") }), _0x33f42a["menuView"]["menuPanelClass"] = "ck-ai-commands-dropdown " + this["_uiCssClasses"], _0x11a7ad["on"]("change:enabledCommandsIds", _0x2d1359), _0x33f42a["menuView"]["once"]("render", _0x2d1359), _0x33f42a;
      function _0x2d1359() {
        _0x33f42a["isEnabled"] = _0x11a7ad["enabledCommandsIds"]["length"] > 0;
        for (const _0xb0928 of _0x33f42a["menuView"]["buttons"]) _0xb0928["isEnabled"] = _0x11a7ad["enabledCommandsIds"]["includes"](_0xb0928["id"]);
      }
    }), _0x5dc06f["ui"]["componentFactory"]["add"]("menuBar:aiCommands", (_0x8cbfc1) => {
      const _0x2c629e = new MenuBarMenuView(_0x8cbfc1);
      _0x2c629e["buttonView"]["set"]({ "label": o3(_0x8cbfc1, "AI Commands"), "icon": E2 }), _0x2c629e["bind"]("isEnabled")["to"](_0x11a7ad, "enabledCommandsIds", (_0x3c1ead) => _0x3c1ead["length"] > 0);
      const _0x553ab5 = r3(_0x5dc06f["config"]["get"]("ai.aiAssistant.commands"), _0x8cbfc1);
      return this["_populateMenuBarMenu"](_0x11a7ad, _0x2c629e, _0x553ab5, (_0x45de23) => this["_onExecute"](_0x45de23)), _0x2c629e;
    }), _0x5dc06f["ui"]["componentFactory"]["add"]("aiAssistant", () => {
      const _0x551bc6 = this["_createAIAssistantUIButton"](ButtonView);
      return _0x551bc6["set"]({ "tooltip": true, "class": "ck-ai-assistant-button " + this["_uiCssClasses"] }), _0x551bc6;
    }), _0x5dc06f["ui"]["componentFactory"]["add"]("menuBar:aiAssistant", () => {
      const _0x1465f1 = this["_createAIAssistantUIButton"](MenuBarMenuListItemButtonView);
      return _0x1465f1["set"]({ "role": "menuitemcheckbox" }), _0x1465f1;
    });
  }
  ["afterInit"]() {
    !function(_0x3e6726) {
      function _0x31e4b1(_0x106937, _0x5e2bb5, _0x1306a5) {
        const _0x25f595 = {};
        _0x25f595[_0x4244ab([110, 117, 109, 98, 101, 114, 79, 102, 82, 111, 117, 110, 100, 115])] = { 16: 10, 24: 12, 32: 14 }, _0x25f595[_0x4244ab([114, 99, 111, 110])] = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145], _0x25f595[_0x4244ab([83])] = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], _0x25f595[_0x4244ab([84, 49])] = [3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474, 1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738, 597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420, 3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577, 605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627, 2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520, 3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205, 2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474, 1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309, 3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720, 2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771, 1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243, 3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470, 1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977, 2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737, 1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754, 361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755, 697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986], _0x25f595[_0x4244ab([84, 50])] = [2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899, 2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108, 4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129, 2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848, 1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043, 1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914, 1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139, 2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658, 3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324, 3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385, 3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499, 1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572, 2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810, 3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411, 3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753, 2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487, 550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313, 2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766], _0x25f595[_0x4244ab([84, 51])] = [1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099, 1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188, 2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329, 1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768, 3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283, 3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114, 3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739, 2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538, 2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324, 1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865, 1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296, 844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713, 3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050, 2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131, 3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513, 2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927, 3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905, 2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126], _0x25f595[_0x4244ab([84, 52])] = [1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549, 1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243, 2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529, 1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963, 3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198, 3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564, 3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214, 2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143, 2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699, 1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945, 1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771, 842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818, 3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340, 2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126, 3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473, 2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917, 3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930, 2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436], _0x25f595[_0x4244ab([85, 49])] = [0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795], _0x25f595[_0x4244ab([85, 50])] = [0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459, 2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537, 3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535, 77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884, 3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824, 3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622, 507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216, 3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879, 129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469, 3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175, 1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921, 2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127, 3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560, 1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387, 2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037, 4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148, 692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663, 2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855], _0x25f595[_0x4244ab([85, 51])] = [0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639, 3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557, 2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032, 3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201, 344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239, 532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878, 3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771, 4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744, 671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199, 4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366, 492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798, 2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695, 3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569, 4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702, 3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217, 1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635, 1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009, 3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150], _0x25f595[_0x4244ab([85, 52])] = [0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874, 2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222, 4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595, 1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591, 4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837, 923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127, 2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424, 2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110, 4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469, 4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481, 1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243, 3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604, 2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802, 585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166, 4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912, 1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703, 3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213, 2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925];
        const _0x27740e = new Uint8Array(16);
        for (let _0x2f94ab = 15; _0x2f94ab >= 0; --_0x2f94ab) _0x27740e[_0x2f94ab] = _0x1306a5 % 256, _0x1306a5 = parseInt(_0x1306a5 / 256);
        let _0x422320 = null, _0x2516f1 = 16;
        const _0x3c7cdb = new Uint8Array(_0x5e2bb5), _0x167031 = [], _0x4d64ad = [];
        _0x1bdfa1();
        for (let _0x518990 = 0; _0x518990 < _0x106937[_0x4244ab([108, 101, 110, 103, 116, 104])]; _0x518990++) 16 === _0x2516f1 && (_0x422320 = _0x759e59(_0x27740e), _0x2516f1 = 0, _0x41d50f(_0x27740e)), _0x106937[_0x518990] ^= _0x422320[_0x2516f1++];
        return _0x106937;
        function _0x4fd12d(_0x3c1816) {
          const _0xd74c49 = [];
          for (let _0x3e1c36 = 0; _0x3e1c36 < _0x3c1816[_0x4244ab([108, 101, 110, 103, 116, 104])]; _0x3e1c36 += 4) _0xd74c49[_0x4244ab([112, 117, 115, 104])](_0x3c1816[_0x3e1c36] << 24 | _0x3c1816[_0x3e1c36 + 1] << 16 | _0x3c1816[_0x3e1c36 + 2] << 8 | _0x3c1816[_0x3e1c36 + 3]);
          return _0xd74c49;
        }
        function _0x41d50f(_0x1dc4ba) {
          for (let _0x37e2cb = 15; _0x37e2cb >= 0; _0x37e2cb--) {
            if (255 !== _0x1dc4ba[_0x37e2cb]) {
              _0x1dc4ba[_0x37e2cb]++;
              break;
            }
            _0x1dc4ba[_0x37e2cb] = 0;
          }
        }
        function _0x759e59(_0x24c0b7) {
          const _0x283eb8 = _0x167031[_0x4244ab([108, 101, 110, 103, 116, 104])] - 1, _0x1c3d2b = [0, 0, 0, 0];
          let t2 = _0x4fd12d(_0x24c0b7);
          for (let _0x212ffd = 0; _0x212ffd < 4; _0x212ffd++) t2[_0x212ffd] ^= _0x167031[0][_0x212ffd];
          for (let _0x424b57 = 1; _0x424b57 < _0x283eb8; _0x424b57++) {
            for (let _0x38776d = 0; _0x38776d < 4; _0x38776d++) _0x1c3d2b[_0x38776d] = _0x25f595[_0x4244ab([84, 49])][t2[_0x38776d] >> 24 & 255] ^ _0x25f595[_0x4244ab([84, 50])][t2[(_0x38776d + 1) % 4] >> 16 & 255] ^ _0x25f595[_0x4244ab([84, 51])][t2[(_0x38776d + 2) % 4] >> 8 & 255] ^ _0x25f595[_0x4244ab([84, 52])][255 & t2[(_0x38776d + 3) % 4]] ^ _0x167031[_0x424b57][_0x38776d];
            t2 = _0x1c3d2b[_0x4244ab([115, 108, 105, 99, 101])]();
          }
          const _0x4ceee0 = new Uint8Array(16);
          let _0x3a7c70;
          for (let _0x305f45 = 0; _0x305f45 < 4; _0x305f45++) _0x3a7c70 = _0x167031[_0x283eb8][_0x305f45], _0x4ceee0[4 * _0x305f45] = 255 & (_0x25f595[_0x4244ab([83])][t2[_0x305f45] >> 24 & 255] ^ _0x3a7c70 >> 24), _0x4ceee0[4 * _0x305f45 + 1] = 255 & (_0x25f595[_0x4244ab([83])][t2[(_0x305f45 + 1) % 4] >> 16 & 255] ^ _0x3a7c70 >> 16), _0x4ceee0[4 * _0x305f45 + 2] = 255 & (_0x25f595[_0x4244ab([83])][t2[(_0x305f45 + 2) % 4] >> 8 & 255] ^ _0x3a7c70 >> 8), _0x4ceee0[4 * _0x305f45 + 3] = 255 & (_0x25f595[_0x4244ab([83])][255 & t2[(_0x305f45 + 3) % 4]] ^ _0x3a7c70);
          return _0x4ceee0;
        }
        function _0x1bdfa1() {
          const _0x2cc7d6 = _0x25f595[_0x4244ab([110, 117, 109, 98, 101, 114, 79, 102, 82, 111, 117, 110, 100, 115])][_0x3c7cdb[_0x4244ab([108, 101, 110, 103, 116, 104])]];
          for (let _0x1ead35 = 0; _0x1ead35 <= _0x2cc7d6; _0x1ead35++) _0x167031[_0x4244ab([112, 117, 115, 104])]([0, 0, 0, 0]), _0x4d64ad[_0x4244ab([112, 117, 115, 104])]([0, 0, 0, 0]);
          const _0x39162b = 4 * (_0x2cc7d6 + 1), _0x1cd6df = _0x3c7cdb[_0x4244ab([108, 101, 110, 103, 116, 104])] / 4, _0x29da52 = _0x4fd12d(_0x3c7cdb);
          let _0x516535;
          for (let _0x2373c0 = 0; _0x2373c0 < _0x1cd6df; _0x2373c0++) _0x516535 = _0x2373c0 >> 2, _0x167031[_0x516535][_0x2373c0 % 4] = _0x29da52[_0x2373c0], _0x4d64ad[_0x2cc7d6 - _0x516535][_0x2373c0 % 4] = _0x29da52[_0x2373c0];
          let _0x29a22d, _0x31bc8e = 0, t2 = _0x1cd6df;
          for (; t2 < _0x39162b; ) {
            _0x29a22d = _0x29da52[_0x1cd6df - 1], _0x29da52[0] ^= _0x25f595[_0x4244ab([83])][_0x29a22d >> 16 & 255] << 24 ^ _0x25f595[_0x4244ab([83])][_0x29a22d >> 8 & 255] << 16 ^ _0x25f595[_0x4244ab([83])][255 & _0x29a22d] << 8 ^ _0x25f595[_0x4244ab([83])][_0x29a22d >> 24 & 255] ^ _0x25f595[_0x4244ab([114, 99, 111, 110])][_0x31bc8e] << 24, _0x31bc8e += 1;
            for (let _0x47d3a1 = 1; _0x47d3a1 < _0x1cd6df / 2; _0x47d3a1++) _0x29da52[_0x47d3a1] ^= _0x29da52[_0x47d3a1 - 1];
            _0x29a22d = _0x29da52[_0x1cd6df / 2 - 1], _0x29da52[_0x1cd6df / 2] ^= _0x25f595[_0x4244ab([83])][255 & _0x29a22d] ^ _0x25f595[_0x4244ab([83])][_0x29a22d >> 8 & 255] << 8 ^ _0x25f595[_0x4244ab([83])][_0x29a22d >> 16 & 255] << 16 ^ _0x25f595[_0x4244ab([83])][_0x29a22d >> 24 & 255] << 24;
            for (let _0x5211b3 = _0x1cd6df / 2 + 1; _0x5211b3 < _0x1cd6df; _0x5211b3++) _0x29da52[_0x5211b3] ^= _0x29da52[_0x5211b3 - 1];
            let _0x20a403, _0x5b38ca, _0x5d9a84 = 0;
            for (; _0x5d9a84 < _0x1cd6df && t2 < _0x39162b; ) _0x20a403 = t2 >> 2, _0x5b38ca = t2 % 4, _0x167031[_0x20a403][_0x5b38ca] = _0x29da52[_0x5d9a84], _0x4d64ad[_0x2cc7d6 - _0x20a403][_0x5b38ca] = _0x29da52[_0x5d9a84++], t2++;
          }
          for (let _0x372750 = 1; _0x372750 < _0x2cc7d6; _0x372750++) for (let _0x483e58 = 0; _0x483e58 < 4; _0x483e58++) _0x29a22d = _0x4d64ad[_0x372750][_0x483e58], _0x4d64ad[_0x372750][_0x483e58] = _0x25f595[_0x4244ab([85, 49])][_0x29a22d >> 24 & 255] ^ _0x25f595[_0x4244ab([85, 50])][_0x29a22d >> 16 & 255] ^ _0x25f595[_0x4244ab([85, 51])][_0x29a22d >> 8 & 255] ^ _0x25f595[_0x4244ab([85, 52])][255 & _0x29a22d];
        }
      }
      function _0x4244ab(_0x26dc95) {
        return _0x26dc95["map"]((_0xd332ba) => String["fromCharCode"](_0xd332ba))["join"]("");
      }
      ((_0x1059b1) => {
        function _0x3c8e5d() {
          const _0x3b3fcd = [{ [_0x4244ab([105, 100])]: 1, [_0x4244ab([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4244ab([67, 111, 109, 109, 101, 110, 116, 115]), [_0x4244ab([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4244ab([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]), [_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4244ab([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4244ab([104, 97, 110, 100, 108, 101, 114])]: _0x4244ab([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x4244ab([99, 104, 101, 99, 107, 65, 108, 115, 111])]: [{ [_0x4244ab([105, 100])]: 2, [_0x4244ab([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4244ab([84, 114, 97, 99, 107, 32, 67, 104, 97, 110, 103, 101, 115]), [_0x4244ab([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4244ab([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103]), [_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4244ab([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4244ab([104, 97, 110, 100, 108, 101, 114])]: _0x4244ab([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115]), [_0x4244ab([111, 112, 116, 105, 111, 110, 115])]: { [_0x4244ab([97, 105, 119, 115, 103, 105, 99])]: true, [_0x4244ab([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x4244ab([97, 105, 114, 118, 105, 105, 108])]: true } }], [_0x4244ab([111, 112, 116, 105, 111, 110, 115])]: { [_0x4244ab([97, 105, 119, 115, 103, 105, 99])]: true, [_0x4244ab([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x4244ab([97, 105, 114, 118, 105, 105, 108])]: true } }, { [_0x4244ab([105, 100])]: 3, [_0x4244ab([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4244ab([80, 97, 103, 105, 110, 97, 116, 105, 111, 110]), [_0x4244ab([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4244ab([80, 97, 103, 105, 110, 97, 116, 105, 111, 110, 76, 111, 111, 107, 117, 112]), [_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4244ab([112, 97, 103, 105, 110, 97, 116, 105, 111, 110, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4244ab([104, 97, 110, 100, 108, 101, 114])]: _0x4244ab([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x4244ab([105, 100])]: 4, [_0x4244ab([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4244ab([82, 101, 118, 105, 115, 105, 111, 110, 32, 72, 105, 115, 116, 111, 114, 121]), [_0x4244ab([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4244ab([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]), [_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4244ab([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4244ab([104, 97, 110, 100, 108, 101, 114])]: _0x4244ab([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 82, 101, 118, 105, 115, 105, 111, 110, 72, 105, 115, 116, 111, 114, 121]), [_0x4244ab([111, 112, 116, 105, 111, 110, 115])]: { [_0x4244ab([97, 105, 119, 115, 103, 105, 99])]: true, [_0x4244ab([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x4244ab([97, 105, 114, 118, 105, 105, 108])]: true } }, { [_0x4244ab([105, 100])]: 5, [_0x4244ab([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4244ab([68, 111, 99, 117, 109, 101, 110, 116, 32, 79, 117, 116, 108, 105, 110, 101]), [_0x4244ab([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4244ab([68, 111, 99, 117, 109, 101, 110, 116, 79, 117, 116, 108, 105, 110, 101, 85, 73]), [_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4244ab([100, 111, 99, 117, 109, 101, 110, 116, 79, 117, 116, 108, 105, 110, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4244ab([104, 97, 110, 100, 108, 101, 114])]: _0x4244ab([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x4244ab([111, 112, 116, 105, 111, 110, 115])]: { [_0x4244ab([102, 103, 105])]: [12] } }, { [_0x4244ab([105, 100])]: 6, [_0x4244ab([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4244ab([70, 111, 114, 109, 97, 116, 32, 80, 97, 105, 110, 116, 101, 114]), [_0x4244ab([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4244ab([70, 111, 114, 109, 97, 116, 80, 97, 105, 110, 116, 101, 114, 85, 73]), [_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4244ab([102, 111, 114, 109, 97, 116, 80, 97, 105, 110, 116, 101, 114, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4244ab([104, 97, 110, 100, 108, 101, 114])]: _0x4244ab([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x4244ab([111, 112, 116, 105, 111, 110, 115])]: { [_0x4244ab([102, 103, 105])]: [12] } }, { [_0x4244ab([105, 100])]: 7, [_0x4244ab([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4244ab([83, 108, 97, 115, 104, 32, 67, 111, 109, 109, 97, 110, 100]), [_0x4244ab([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4244ab([83, 108, 97, 115, 104, 67, 111, 109, 109, 97, 110, 100, 85, 73]), [_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4244ab([115, 108, 97, 115, 104, 67, 111, 109, 109, 97, 110, 100, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4244ab([104, 97, 110, 100, 108, 101, 114])]: _0x4244ab([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x4244ab([111, 112, 116, 105, 111, 110, 115])]: { [_0x4244ab([102, 103, 105])]: [12] } }, { [_0x4244ab([105, 100])]: 8, [_0x4244ab([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4244ab([84, 97, 98, 108, 101, 32, 111, 102, 32, 67, 111, 110, 116, 101, 110, 116, 115]), [_0x4244ab([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4244ab([84, 97, 98, 108, 101, 79, 102, 67, 111, 110, 116, 101, 110, 116, 115, 69, 100, 105, 116, 105, 110, 103]), [_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4244ab([116, 97, 98, 108, 101, 79, 102, 67, 111, 110, 116, 101, 110, 116, 115, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4244ab([104, 97, 110, 100, 108, 101, 114])]: _0x4244ab([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x4244ab([111, 112, 116, 105, 111, 110, 115])]: { [_0x4244ab([102, 103, 105])]: [12] } }, { [_0x4244ab([105, 100])]: 9, [_0x4244ab([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4244ab([84, 101, 109, 112, 108, 97, 116, 101]), [_0x4244ab([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4244ab([84, 101, 109, 112, 108, 97, 116, 101, 85, 73]), [_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4244ab([116, 101, 109, 112, 108, 97, 116, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4244ab([104, 97, 110, 100, 108, 101, 114])]: _0x4244ab([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x4244ab([111, 112, 116, 105, 111, 110, 115])]: { [_0x4244ab([102, 103, 105])]: [12, 14] } }, { [_0x4244ab([105, 100])]: 10, [_0x4244ab([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4244ab([80, 97, 115, 116, 101, 32, 102, 114, 111, 109, 32, 79, 102, 102, 105, 99, 101, 32, 69, 110, 104, 97, 110, 99, 101, 100]), [_0x4244ab([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4244ab([80, 97, 115, 116, 101, 70, 114, 111, 109, 79, 102, 102, 105, 99, 101, 69, 110, 104, 97, 110, 99, 101, 100, 73, 110, 108, 105, 110, 101, 114]), [_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4244ab([112, 97, 115, 116, 101, 70, 114, 111, 109, 79, 102, 102, 105, 99, 101, 69, 110, 104, 97, 110, 99, 101, 100, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4244ab([104, 97, 110, 100, 108, 101, 114])]: _0x4244ab([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x4244ab([111, 112, 116, 105, 111, 110, 115])]: { [_0x4244ab([102, 103, 105])]: [12] } }, { [_0x4244ab([105, 100])]: 11, [_0x4244ab([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4244ab([65, 73, 32, 65, 115, 115, 105, 115, 116, 97, 110, 116]), [_0x4244ab([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4244ab([65, 73, 65, 115, 115, 105, 115, 116, 97, 110, 116, 85, 73]), [_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4244ab([97, 105, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4244ab([104, 97, 110, 100, 108, 101, 114])]: _0x4244ab([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x4244ab([105, 100])]: 12, [_0x4244ab([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4244ab([80, 114, 111, 100, 117, 99, 116, 105, 118, 105, 116, 121, 32, 112, 97, 99, 107]) }, { [_0x4244ab([105, 100])]: 13, [_0x4244ab([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4244ab([67, 97, 115, 101, 32, 67, 104, 97, 110, 103, 101]), [_0x4244ab([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4244ab([67, 97, 115, 101, 67, 104, 97, 110, 103, 101, 85, 73]), [_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4244ab([99, 97, 115, 101, 67, 104, 97, 110, 103, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4244ab([104, 97, 110, 100, 108, 101, 114])]: _0x4244ab([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x4244ab([111, 112, 116, 105, 111, 110, 115])]: { [_0x4244ab([102, 103, 105])]: [12] } }, { [_0x4244ab([105, 100])]: 14, [_0x4244ab([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4244ab([68, 114, 117, 112, 97, 108, 32, 112, 97, 99, 107]), [_0x4244ab([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114])]: _0x4244ab([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114, 70, 111, 114, 68, 114, 117, 112, 97, 108]) }, { [_0x4244ab([105, 100])]: 15, [_0x4244ab([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4244ab([77, 117, 108, 116, 105, 32, 76, 101, 118, 101, 108, 32, 76, 105, 115, 116]), [_0x4244ab([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4244ab([77, 117, 108, 116, 105, 76, 101, 118, 101, 108, 76, 105, 115, 116, 69, 100, 105, 116, 105, 110, 103]), [_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4244ab([109, 117, 108, 116, 105, 76, 101, 118, 101, 108, 76, 105, 115, 116, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4244ab([104, 97, 110, 100, 108, 101, 114])]: _0x4244ab([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x4244ab([105, 100])]: 16, [_0x4244ab([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4244ab([77, 101, 114, 103, 101, 32, 70, 105, 101, 108, 100, 115]), [_0x4244ab([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4244ab([77, 101, 114, 103, 101, 70, 105, 101, 108, 100, 115, 85, 73]), [_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4244ab([109, 101, 114, 103, 101, 70, 105, 101, 108, 100, 115, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4244ab([104, 97, 110, 100, 108, 101, 114])]: _0x4244ab([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x4244ab([111, 112, 116, 105, 111, 110, 115])]: { [_0x4244ab([102, 103, 105])]: [12] } }];
          return _0x1bf64b(_0x3b3fcd), _0x3b3fcd;
          function _0x178ac1(_0x14c45f) {
            return 1 << _0x14c45f - 1;
          }
          function _0x1bf64b(_0x2c990c) {
            _0x2c990c[_0x4244ab([102, 111, 114, 69, 97, 99, 104])]((_0x4f41eb) => {
              _0x4f41eb[_0x4244ab([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])] = _0x178ac1(_0x4f41eb[_0x4244ab([105, 100])]), _0x167d0e(_0x4f41eb) && _0x4f41eb[_0x4244ab([99, 104, 101, 99, 107, 65, 108, 115, 111])] && _0x1bf64b(_0x4f41eb[_0x4244ab([99, 104, 101, 99, 107, 65, 108, 115, 111])]);
            });
          }
        }
        function _0x167d0e(_0xa2a01c) {
          return _0x4244ab([112, 108, 117, 103, 105, 110, 78, 97, 109, 101]) in _0xa2a01c;
        }
        const _0x45be5c = [1, 85, 78, 115, 198, 255, 50, 112, 83, 87, 161], _0x1cd4cf = [127, 34, 6, 211, 167, 86, 146, 199, 132, 160, 18];
        function _0x3f6866(_0x4f0b6b) {
          const _0x2109aa = [29, 221, 175, 90, 231, 133, 239, 240, 75, 180];
          return _0x480d52(_0x4f0b6b, new Uint8Array([..._0x45be5c, ..._0x2109aa, ..._0x1cd4cf]));
        }
        function _0x480d52(_0x5a7acb, _0x21d212) {
          const _0xb19471 = _0x22f052(_0x5a7acb), _0x14094 = Array[_0x4244ab([102, 114, 111, 109])](_0x440d9b(_0xb19471)), _0x29cd4a = _0x14094[_0x4244ab([112, 111, 112])](), _0x6177a3 = _0x14094[_0x4244ab([112, 111, 112])]();
          return _0x150277(_0x31e4b1(_0x14094, _0x21d212, _0x6177a3 + 256 * _0x29cd4a));
        }
        function _0x22f052(_0x29f991) {
          const _0xa494b4 = atob(_0x29f991), [_0x3f0e93, _0x41bdcc] = _0xa494b4[_0x4244ab([115, 112, 108, 105, 116])](_0x4244ab([45]));
          try {
            if (atob(_0x41bdcc)) return atob(_0x3f0e93);
          } catch (_0x2277af) {
          }
          return _0xa494b4;
        }
        function _0x54b590(_0x515cee) {
          try {
            const _0x28076d = _0x3f6866(_0x515cee), _0x25c9c4 = JSON[_0x4244ab([112, 97, 114, 115, 101])](_0x28076d), _0x434721 = parseInt(_0x25c9c4[_0x4244ab([49])]), _0x3e27d3 = _0x25c9c4[_0x4244ab([50])] || "", _0x376fdc = parseInt(_0x25c9c4[_0x4244ab([51])]), _0x1b3535 = parseInt(_0x25c9c4[_0x4244ab([52])]) || 0, _0x5e23fa = parseInt(_0x25c9c4[_0x4244ab([53])]) || 0;
            return { [_0x4244ab([112, 114, 111, 100, 117, 99, 116, 78, 97, 109, 101])]: _0x3e27d3, [_0x4244ab([97, 108, 108, 111, 119, 101, 100, 80, 108, 117, 103, 105, 110, 115])]: _0x1b3535, [_0x4244ab([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])]: _0x434721, [_0x4244ab([105, 115, 84, 114, 105, 97, 108])]: _0x376fdc, [_0x4244ab([105, 115, 73, 110, 116, 101, 114, 110, 97, 108])]: _0x5e23fa };
          } catch (_0x32cfdd) {
            return null;
          }
        }
        const _0x27964d = _0x3c8e5d(), _0x5a714c = { [_0x4244ab([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101])]: _0xa1c9a9, [_0x4244ab([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115])]: _0x2ebd94, [_0x4244ab([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 82, 101, 118, 105, 115, 105, 111, 110, 72, 105, 115, 116, 111, 114, 121])]: _0x5645d3 }, _0x132083 = _0x1059b1[_0x4244ab([99, 111, 110, 115, 116, 114, 117, 99, 116, 111, 114])][_0x4244ab([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])], _0x58dd1d = _0x4244ab([99, 111, 110, 116, 101, 120, 116]) in _0x1059b1 ? _0x1059b1["context"] : _0x1059b1["editor"], _0x2043fa = _0x4244ab([52, 48, 52, 56, 50, 50, 49, 50]), _0x4df4b6 = _0x4244ab([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]), _0x1bd698 = _0x58dd1d["config"]["get"](_0x4244ab([108, 105, 99, 101, 110, 115, 101, 75, 101, 121])), _0x3048a3 = _0x27964d[_0x4244ab([102, 105, 108, 116, 101, 114])](_0x167d0e)[_0x4244ab([102, 105, 110, 100])]((_0x246f91) => _0x246f91[_0x4244ab([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])] === _0x132083);
        function _0x221fbd(_0x4cb180, _0x2581e7) {
          _0x5a714c[_0x2581e7[_0x4244ab([104, 97, 110, 100, 108, 101, 114])]](_0x4cb180, _0x2581e7), _0x2581e7[_0x4244ab([99, 104, 101, 99, 107, 65, 108, 115, 111])] && _0x2581e7[_0x4244ab([99, 104, 101, 99, 107, 65, 108, 115, 111])][_0x4244ab([102, 105, 108, 116, 101, 114])]((_0x207208) => _0x525603(_0x58dd1d, _0x207208[_0x4244ab([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]))[_0x4244ab([102, 111, 114, 69, 97, 99, 104])]((_0x5cf5c3) => _0x221fbd(_0x4cb180, _0x5cf5c3));
        }
        function _0xa1c9a9(_0x479dcf, _0x32120b) {
          _0x3c1e9e(_0x306843(_0x479dcf, _0x32120b), _0x32120b);
        }
        function _0x2ebd94(_0x5962a3, _0x33d698) {
          function _0x502856(_0x48e8df, _0x464489) {
            try {
              if (_0x525603(_0x58dd1d, _0x4244ab([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103])) && _0x48e8df) {
                const _0xd8b55c = _0x3d817a(_0x58dd1d, _0x4244ab([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103]))[_0x4244ab([95, 101, 120, 101, 99, 117, 116, 101, 83, 117, 103, 103, 101, 115, 116, 105, 111, 110])];
                if (parseInt(_0xd8b55c) / 2 > _0x48e8df[_0x4244ab([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])]) return _0x328164(_0x464489[_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4244ab([73, 110, 118, 97, 108, 105, 100]));
              }
              return _0x306843(_0x48e8df, _0x464489);
            } catch (_0x456b99) {
              return _0x328164(_0x464489[_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4244ab([73, 110, 118, 97, 108, 105, 100]));
            }
          }
          _0x3c1e9e(_0x502856(_0x5962a3, _0x33d698), _0x33d698);
        }
        function _0x5645d3(_0x3c1432, _0x20e5fc) {
          const _0x1bdf6c = _0x1cd4cf[0] * _0x45be5c[1], _0x11ba5a = _0x1cd4cf[0] * _0x45be5c[2], _0x575987 = _0x1cd4cf[2] * _0x45be5c[2];
          _0x525603(_0x58dd1d, _0x4244ab([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121])) && _0x3d817a(_0x58dd1d, _0x4244ab([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121]))[_0x4244ab([115, 116, 97, 116, 101])] == _0x4244ab([99, 111, 110, 110, 101, 99, 116, 101, 100]) && (window[_0xa772f1()] = _0x575987);
          function _0x393d85(_0x113496, _0x40ac77) {
            try {
              return _0x139d0d() ? _0x328164(_0x40ac77[_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4244ab([86, 97, 108, 105, 100])) : _0x306843(_0x113496, _0x40ac77);
            } catch (_0x200a9c) {
              return _0x328164(_0x40ac77[_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4244ab([73, 110, 118, 97, 108, 105, 100]));
            }
          }
          function _0x8f0cbe(_0x307928, _0x55def1) {
            const _0x333a64 = 7;
            if (_0x307928 == _0x55def1[_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4244ab([73, 110, 118, 97, 108, 105, 100])) _0x52e6e3();
            else {
              if (_0x307928 == _0x55def1[_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4244ab([84, 114, 105, 97, 108])) {
                const _0x5722c8 = _0x569822();
                _0x5722c8 && _0x66e076(_0x5722c8, _0x55def1[_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                const _0x42ae61 = _0x58bde1();
                window[_0x4244ab([115, 101, 116, 84, 105, 109, 101, 111, 117, 116])](() => {
                  _0x66e076(_0x4244ab([116, 105, 109, 101]), _0x55def1[_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                }, _0x42ae61);
                const _0x2a7909 = _0x3d817a(_0x58dd1d, _0x4244ab([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x4244ab([95, 114, 101, 118, 105, 115, 105, 111, 110, 115])];
                _0x2a7909[_0x4244ab([108, 101, 110, 103, 116, 104])] >= _0x333a64 ? _0x66e076(_0x4244ab([114, 101, 118, 105, 115, 105, 111, 110, 115]), _0x55def1[_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]) : _0x2a7909["on"](_0x4244ab([97, 100, 100]), () => {
                  _0x2a7909[_0x4244ab([108, 101, 110, 103, 116, 104])] >= _0x333a64 && _0x66e076(_0x4244ab([114, 101, 118, 105, 115, 105, 111, 110, 115]), _0x55def1[_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                });
              }
            }
          }
          function _0x569822() {
            if (!_0x525603(_0x58dd1d, _0x4244ab([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) return false;
            for (const _0x8c0faa in window) if (Number["isNaN"](Number(_0x8c0faa))) {
              if (window[_0x8c0faa] === _0x1bdf6c) return _0x4244ab([116, 105, 109, 101]);
              if (window[_0x8c0faa] === _0x11ba5a) return _0x4244ab([114, 101, 118, 105, 115, 105, 111, 110, 115]);
            }
            return false;
          }
          function _0x139d0d() {
            if (!_0x525603(_0x58dd1d, _0x4244ab([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) return false;
            for (const _0x4c5688 in window) if (Number["isNaN"](Number(_0x4c5688)) && window[_0x4c5688] === _0x575987) return true;
            return false;
          }
          function _0x66e076(_0x537165, _0x519b83) {
            _0x52e6e3(), _0x328164(_0x519b83 + _0x4244ab([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58]) + _0x537165), window[_0xa772f1()] = _0x537165 === _0x4244ab([116, 105, 109, 101]) ? _0x1bdf6c : _0x11ba5a;
          }
          function _0x58bde1() {
            let _0x4c3168 = _0x1cd4cf[6] * _0x45be5c[8] * _0x45be5c[6];
            return _0x525603(_0x58dd1d, _0x4244ab([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114])) && (_0x4c3168 /= 10), _0x4c3168;
          }
          function _0x52e6e3() {
            const _0x154e7b = _0x58dd1d;
            function _0x411368() {
              _0x525603(_0x154e7b, _0x4244ab([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114])) && (_0x3d817a(_0x154e7b, _0x4244ab([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x4244ab([117, 110, 98, 105, 110, 100])](_0x4244ab([105, 115, 69, 110, 97, 98, 108, 101, 100])), _0x3d817a(_0x154e7b, _0x4244ab([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x4244ab([105, 115, 69, 110, 97, 98, 108, 101, 100])] = false, _0x3d817a(_0x154e7b, _0x4244ab([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x4244ab([117, 112, 100, 97, 116, 101])] = _0x3c6f94, _0x3d817a(_0x154e7b, _0x4244ab([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x4244ab([115, 97, 118, 101, 82, 101, 118, 105, 115, 105, 111, 110])] = _0x3c6f94, _0x154e7b[_0x4244ab([109, 111, 100, 101, 108])][_0x4244ab([99, 104, 97, 110, 103, 101])] = _0x3c6f94, _0x154e7b[_0x4244ab([109, 111, 100, 101, 108])][_0x4244ab([101, 110, 113, 117, 101, 117, 101, 67, 104, 97, 110, 103, 101])] = _0x3c6f94, _0x154e7b[_0x4244ab([101, 110, 97, 98, 108, 101, 82, 101, 97, 100, 79, 110, 108, 121, 77, 111, 100, 101])](_0x4244ab([109, 111, 100, 101, 108]))), _0x525603(_0x154e7b, _0x4244ab([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114])) && (_0x3d817a(_0x154e7b, _0x4244ab([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x4244ab([117, 110, 98, 105, 110, 100])](_0x4244ab([105, 115, 69, 110, 97, 98, 108, 101, 100])), _0x3d817a(_0x154e7b, _0x4244ab([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x4244ab([105, 115, 69, 110, 97, 98, 108, 101, 100])] = false, _0x3d817a(_0x154e7b, _0x4244ab([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x4244ab([99, 111, 109, 112, 97, 114, 101])] = _0x3c6f94, _0x3d817a(_0x154e7b, _0x4244ab([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x4244ab([95, 103, 101, 116, 68, 105, 102, 102])] = _0x3c6f94);
            }
            _0x154e7b[_0x4244ab([115, 116, 97, 116, 101])] == _0x4244ab([114, 101, 97, 100, 121]) ? _0x411368() : _0x154e7b[_0x4244ab([111, 110, 99, 101])](_0x4244ab([114, 101, 97, 100, 121]), () => {
              if (_0x525603(_0x154e7b, _0x4244ab([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114])) && _0x411368(), _0x525603(_0x154e7b, _0x4244ab([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) {
                const _0x23b649 = _0x3d817a(_0x154e7b, _0x4244ab([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121])), _0x4a3edc = _0x23b649["getRevision"](0), _0x52f08c = _0x23b649["getEarlierVisibleRevision"](_0x4a3edc[_0x4244ab([105, 100])]);
                _0x3d817a(_0x154e7b, _0x4244ab([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x4244ab([99, 111, 109, 112, 97, 114, 101])](_0x4a3edc[_0x4244ab([105, 100])], _0x52f08c ? _0x52f08c[_0x4244ab([105, 100])] : null, 1)["then"](() => _0x411368());
              }
            });
          }
          _0x8f0cbe(_0x393d85(_0x3c1432, _0x20e5fc), _0x20e5fc);
        }
        function _0x306843(_0x30bb03, _0x27ff0d) {
          try {
            return _0x1dd9f5(_0x27ff0d) ? _0x328164(_0x27ff0d[_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4244ab([86, 97, 108, 105, 100])) : _0x30bb03 && _0xc12771(_0x30bb03[_0x4244ab([97, 108, 108, 111, 119, 101, 100, 80, 108, 117, 103, 105, 110, 115])], _0x27ff0d) ? _0x30bb03[_0x4244ab([105, 115, 73, 110, 116, 101, 114, 110, 97, 108])] && !window[_0x4244ab([111, 112, 101, 110])][_0x4244ab([99, 108, 111, 115, 101, 100])] || parseInt(_0x2043fa) / 2 > _0x30bb03[_0x4244ab([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])] ? _0x328164(_0x27ff0d[_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4244ab([73, 110, 118, 97, 108, 105, 100])) : _0x30bb03[_0x4244ab([105, 115, 84, 114, 105, 97, 108])] ? _0x328164(_0x27ff0d[_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4244ab([84, 114, 105, 97, 108])) : _0x328164(_0x27ff0d[_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4244ab([86, 97, 108, 105, 100])) : _0x328164(_0x27ff0d[_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4244ab([73, 110, 118, 97, 108, 105, 100]));
          } catch (_0xa4136f) {
            return _0x328164(_0x27ff0d[_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4244ab([73, 110, 118, 97, 108, 105, 100]));
          }
        }
        function _0x3c1e9e(_0x2df74e, _0x1f6a72) {
          if (_0x58dd1d instanceof Context) {
            const _0x264fd9 = _0x58dd1d;
            _0x2df74e == _0x1f6a72[_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4244ab([73, 110, 118, 97, 108, 105, 100]) ? _0x212a49(_0x264fd9) : _0x2df74e == _0x1f6a72[_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4244ab([84, 114, 105, 97, 108]) && window[_0x4244ab([115, 101, 116, 84, 105, 109, 101, 111, 117, 116])](() => {
              _0x212a49(_0x264fd9), _0x328164(_0x1f6a72[_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4244ab([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 116, 105, 109, 101]));
            }, _0x1cd4cf[6] * _0x45be5c[8] * _0x45be5c[6]), _0x264fd9[_0x4244ab([101, 100, 105, 116, 111, 114, 115])][_0x4244ab([111, 110])](_0x4244ab([97, 100, 100]), (_0x1cfc49, _0xbcb64e) => {
              _0x2df74e != _0x1f6a72[_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4244ab([73, 110, 118, 97, 108, 105, 100]) && _0x2df74e != _0x1f6a72[_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4244ab([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 116, 105, 109, 101]) && _0x2df74e != _0x1f6a72[_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4244ab([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 111, 112, 101, 114, 97, 116, 105, 111, 110, 115]) || _0x3239da(_0xbcb64e);
            });
          } else {
            const _0x3b3e67 = _0x58dd1d;
            _0x2df74e == _0x1f6a72[_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4244ab([73, 110, 118, 97, 108, 105, 100]) ? _0x3239da(_0x3b3e67) : _0x2df74e == _0x1f6a72[_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4244ab([84, 114, 105, 97, 108]) && _0x3b3e67[_0x4244ab([111, 110])](_0x4244ab([114, 101, 97, 100, 121]), () => {
              let _0x4d0eb0 = 0;
              _0x3b3e67[_0x4244ab([109, 111, 100, 101, 108])][_0x4244ab([111, 110])](_0x4244ab([97, 112, 112, 108, 121, 79, 112, 101, 114, 97, 116, 105, 111, 110]), (_0x193e1b, _0x548bcf) => {
                _0x548bcf[0][_0x4244ab([105, 115, 68, 111, 99, 117, 109, 101, 110, 116, 79, 112, 101, 114, 97, 116, 105, 111, 110])] && _0x4d0eb0++, 504 === _0x4d0eb0 && (_0x3239da(_0x3b3e67), _0x328164(_0x1f6a72[_0x4244ab([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4244ab([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 111, 112, 101, 114, 97, 116, 105, 111, 110, 115])), _0x193e1b[_0x4244ab([111, 102, 102])]());
              }, { "priority": _0x4244ab([104, 105, 103, 104, 101, 115, 116]) });
            });
          }
        }
        function _0x328164(_0x5efc53) {
          const _0x2ad7d6 = _0xa772f1();
          return _0x58dd1d[_0x2ad7d6] = _0x5efc53, _0x5efc53;
        }
        function _0xa772f1() {
          const _0x57655b = String(window[_0x4244ab([112, 101, 114, 102, 111, 114, 109, 97, 110, 99, 101])][_0x4244ab([110, 111, 119])]())[_0x4244ab([114, 101, 112, 108, 97, 99, 101])](_0x4244ab([46]), "");
          let _0x2f4981 = "";
          for (let _0x531d87 = 0; _0x531d87 < _0x57655b[_0x4244ab([108, 101, 110, 103, 116, 104])]; _0x531d87 += 2) {
            let _0x28fdd4 = parseInt(_0x57655b[_0x4244ab([115, 117, 98, 115, 116, 114, 105, 110, 103])](_0x531d87, _0x531d87 + 2));
            _0x28fdd4 >= _0x4df4b6[_0x4244ab([108, 101, 110, 103, 116, 104])] && (_0x28fdd4 -= _0x4df4b6[_0x4244ab([108, 101, 110, 103, 116, 104])]), _0x2f4981 += _0x4df4b6[_0x28fdd4];
          }
          return _0x2f4981;
        }
        function _0x212a49(_0x2a0c66) {
          for (const _0x64d37d of _0x2a0c66[_0x4244ab([101, 100, 105, 116, 111, 114, 115])]) _0x3239da(_0x64d37d);
          _0x3d817a(_0x2a0c66, _0x4244ab([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x4244ab([115, 119, 105, 116, 99, 104, 82, 101, 97, 100, 79, 110, 108, 121])](true), _0x3d817a(_0x2a0c66, _0x4244ab([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x4244ab([115, 119, 105, 116, 99, 104, 82, 101, 97, 100, 79, 110, 108, 121])] = _0x3c6f94;
        }
        function _0x3239da(_0x5bbdd0) {
          function _0x3bbf6a() {
            _0x5bbdd0[_0x4244ab([109, 111, 100, 101, 108])][_0x4244ab([99, 104, 97, 110, 103, 101])] = _0x3c6f94, _0x5bbdd0[_0x4244ab([109, 111, 100, 101, 108])][_0x4244ab([101, 110, 113, 117, 101, 117, 101, 67, 104, 97, 110, 103, 101])] = _0x3c6f94, _0x5bbdd0[_0x4244ab([101, 110, 97, 98, 108, 101, 82, 101, 97, 100, 79, 110, 108, 121, 77, 111, 100, 101])](_0x4244ab([109, 111, 100, 101, 108]));
          }
          _0x5bbdd0[_0x4244ab([115, 116, 97, 116, 101])] == _0x4244ab([114, 101, 97, 100, 121]) ? _0x3bbf6a() : _0x5bbdd0[_0x4244ab([111, 110, 99, 101])](_0x4244ab([114, 101, 97, 100, 121]), () => _0x3bbf6a());
        }
        function _0x3c6f94() {
          return null;
        }
        function _0xc12771(_0x140579, _0x51f609) {
          const _0x540c3c = !!(_0x140579 & _0x51f609[_0x4244ab([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])]), _0x5425a4 = _0x272cdc(_0x140579, _0x51f609);
          return _0x540c3c || _0x5425a4;
        }
        function _0x272cdc(_0x2595ba, _0x1b208f) {
          const _0x452bb4 = (_0x1b208f[_0x4244ab([111, 112, 116, 105, 111, 110, 115])] || {})[_0x4244ab([102, 103, 105])] || null;
          return !!_0x452bb4 && _0x27964d[_0x4244ab([102, 105, 108, 116, 101, 114])]((_0xfe47fe) => _0x452bb4[_0x4244ab([105, 110, 99, 108, 117, 100, 101, 115])](_0xfe47fe[_0x4244ab([105, 100])]))[_0x4244ab([102, 105, 108, 116, 101, 114])]((_0x26413c) => !_0x29950e(_0x26413c))[_0x4244ab([115, 111, 109, 101])]((_0x421e3a) => !!(_0x2595ba & _0x421e3a[_0x4244ab([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])]));
        }
        function _0x29950e(_0x59ad81) {
          const _0x413ef0 = { [_0x4244ab([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114, 70, 111, 114, 68, 114, 117, 112, 97, 108])]: _0x48259f };
          return !!_0x59ad81["forbiddenHandler"] && _0x413ef0[_0x59ad81["forbiddenHandler"]]();
        }
        function _0x48259f() {
          return !window[_0x4244ab([68, 114, 117, 112, 97, 108])] || !_0x525603(_0x58dd1d, _0x4244ab([100, 114, 117, 112, 97, 108, 80, 111, 119, 101, 114, 101, 100, 66, 121]));
        }
        function _0x1dd9f5(_0x7064e1) {
          if (!_0x525603(_0x58dd1d, _0x7064e1[_0x4244ab([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])])) return true;
          const _0x5449cf = _0x7064e1[_0x4244ab([111, 112, 116, 105, 111, 110, 115])] || {}, _0x2f1383 = _0x5449cf[_0x4244ab([97, 105, 119, 115, 103, 105, 99])] || false, _0x3f1a9e = _0x5449cf[_0x4244ab([97, 105, 116, 99, 100, 103, 105, 108])] || false, _0x4d7c25 = _0x5449cf[_0x4244ab([97, 105, 114, 118, 105, 105, 108])] || false;
          if (_0x525603(_0x58dd1d, _0x4244ab([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121])) && _0x3d817a(_0x58dd1d, _0x4244ab([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121]))[_0x4244ab([115, 116, 97, 116, 101])] == _0x4244ab([99, 111, 110, 110, 101, 99, 116, 101, 100]) && _0x2f1383) return true;
          if (_0x525603(_0x58dd1d, _0x4244ab([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 68, 97, 116, 97, 71, 101, 116, 116, 101, 114])) && _0x3d817a(_0x58dd1d, _0x4244ab([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 68, 97, 116, 97, 71, 101, 116, 116, 101, 114]))[_0x4244ab([114, 101, 115, 117, 108, 116])] == _0x4244ab([101, 110, 100]) && _0x3f1a9e) return true;
          return !(!_0x525603(_0x58dd1d, _0x4244ab([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114, 73, 110, 116, 101, 103, 114, 97, 116, 105, 111, 110])) || _0x3d817a(_0x58dd1d, _0x4244ab([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114, 73, 110, 116, 101, 103, 114, 97, 116, 105, 111, 110]))[_0x4244ab([114, 101, 115, 117, 108, 116])] != _0x4244ab([101, 110, 100]) || !_0x4d7c25);
        }
        function _0x525603(_0x9d63cc, _0x13b791) {
          return _0x9d63cc[_0x4244ab([112, 108, 117, 103, 105, 110, 115])][_0x4244ab([104, 97, 115])](_0x13b791);
        }
        function _0x3d817a(_0x3cf334, _0x3fafcd) {
          return _0x3cf334[_0x4244ab([112, 108, 117, 103, 105, 110, 115])][_0x4244ab([103, 101, 116])](_0x3fafcd);
        }
        function _0x150277(_0x4ac2d9) {
          let _0x3124d2 = "";
          for (const _0x12a63e of _0x4ac2d9) _0x3124d2 += String[_0x4244ab([102, 114, 111, 109, 67, 104, 97, 114, 67, 111, 100, 101])](_0x12a63e);
          return _0x3124d2;
        }
        function _0x440d9b(_0x3cadf6) {
          const _0x3ad58f = new Uint8Array(_0x3cadf6[_0x4244ab([108, 101, 110, 103, 116, 104])]);
          for (let _0x21f24d = 0; _0x21f24d < _0x3cadf6[_0x4244ab([108, 101, 110, 103, 116, 104])]; _0x21f24d++) _0x3ad58f[_0x21f24d] = _0x3cadf6[_0x4244ab([99, 104, 97, 114, 67, 111, 100, 101, 65, 116])](_0x21f24d);
          return _0x3ad58f;
        }
        _0x3048a3 && _0x221fbd(_0x54b590(_0x1bd698), _0x3048a3);
      })(_0x3e6726);
    }(this);
  }
  ["showUI"](_0x496cde = "", _0x465855 = "", _0x33dcbc = "custom") {
    const _0x16311a = this["editor"], _0x2c3abe = _0x16311a["editing"]["view"], _0x3422ed = _0x16311a["plugins"]["get"](a4), _0x2362c3 = _0x16311a["plugins"]["get"](ClipboardMarkersUtils);
    _0x3422ed["showFakeVisualSelection"]();
    const _0x3abae2 = new U2(), _0x190637 = new ClipboardEvent("copy", { "clipboardData": _0x3abae2 }), _0x5b8ecb = new DataTransfer2(_0x3abae2), _0x1d3852 = new DomEventData(_0x2c3abe, _0x190637, { "dataTransfer": _0x5b8ecb });
    _0x2362c3["_forceMarkersCopy"]("comment", () => {
      _0x2c3abe["document"]["fire"]("copy", _0x1d3852);
    }), this["_formView"] || (this["_initView"](), this["_aiAssistantController"] = new v6(_0x16311a, this["_aiAdapter"]["textAdapter"], this["_formView"]));
    let _0x258663 = _0x5b8ecb["getData"]("text/html");
    const _0x4a92ae = _0x16311a["model"]["document"]["selection"], _0x43195e = Array["from"](_0x4a92ae["getRanges"]());
    1 === _0x43195e["length"] && _0x43195e[0]["isFlat"] && !_0x4a92ae["getSelectedElement"]() && "" !== _0x258663["replace"](/&nbsp;/g, "")["trim"]() && (_0x258663 = "<p>" + _0x258663 + "</p>"), this["_aiAssistantController"]["updateView"]({ "actionId": _0x33dcbc, "query": _0x496cde, "htmlContent": _0x258663, "label": _0x465855, "mainActionLabel": x[_0x16311a["model"]["document"]["selection"]["isCollapsed"] ? "INSERT" : "REPLACE"] }), "aiAssistant" !== this["_dialog"]["id"] ? this["_dialog"]["show"]({ "id": "aiAssistant", "icon": a2["robotPencil"], "title": o3(this["editor"]["locale"], "AI Assistant"), "content": this["_formView"], "position": DialogViewPosition["EDITOR_TOP_SIDE"], "onShow": () => {
      this["_formView"]["focus"]();
    }, "onHide": () => {
      this["_aiAssistantController"]["reset"](), _0x3422ed["hideFakeVisualSelection"]();
    } }) : this["_dialog"]["view"]["wasMoved"] || this["_dialog"]["view"]["updatePosition"]();
  }
  ["hideUI"]() {
    this["_dialog"]["hide"]();
  }
  ["_getResolvedCommandsDefinitions"]() {
    const _0x392ed8 = /* @__PURE__ */ new Map(), _0x5aa62e = r3(this["editor"]["config"]["get"]("ai.aiAssistant.commands"), this["editor"]["locale"]);
    for (const _0x57494c of _0x5aa62e) for (const _0x3135b9 of _0x57494c["commands"]) _0x392ed8["set"](_0x3135b9["id"], { ..._0x3135b9, "groupId": _0x57494c["groupId"], "groupLabel": _0x57494c["groupLabel"] || _0x57494c["groupId"] });
    return _0x392ed8;
  }
  ["_createAIAssistantUIButton"](_0x406362) {
    const _0x260c60 = this["editor"], _0x3c0cc2 = _0x260c60["commands"]["get"]("showAIAssistant"), _0xacfe8 = new _0x406362(_0x260c60["locale"]);
    return _0xacfe8["set"]({ "label": o3(_0x260c60["locale"], "AI Assistant"), "icon": a2["robotPencil"], "isToggleable": true }), _0xacfe8["bind"]("isEnabled")["to"](_0x3c0cc2), _0xacfe8["bind"]("isOn")["to"](this["_dialog"], "id", (_0x31d10e) => "aiAssistant" === _0x31d10e), this["listenTo"](_0xacfe8, "execute", () => {
      _0xacfe8["isOn"] ? this["hideUI"]() : _0x3c0cc2["execute"]();
    }), _0xacfe8;
  }
  ["_initView"]() {
    const _0x188ac3 = this["editor"]["plugins"]["get"](a4);
    this["_formView"] = new k2(this["editor"]["locale"], this["_uiCssClasses"], this["editor"]["config"]["get"]("ai.aiAssistant.contentAreaCssClass")), this["_formView"]["on"]("change:value", () => {
      this["_dialog"]["view"]["wasMoved"] || this["_dialog"]["view"]["updatePosition"]();
    }), this["_formView"]["promptView"]["queryView"]["fieldView"]["on"]("update", () => {
      this["_dialog"]["view"]["wasMoved"] || this["_dialog"]["view"]["updatePosition"]();
    }), this["listenTo"](this["_formView"], "replaceContent", () => {
      _0x188ac3["insertContent"](this["_aiAssistantController"]["currentContext"]), this["hideUI"]();
    }), this["listenTo"](this["_formView"], "insertContentBelow", () => {
      _0x188ac3["insertContentBelow"](this["_aiAssistantController"]["currentContext"]), this["hideUI"]();
    }), this["_initAriaAiStatusChangeAnnouncements"]();
  }
  ["_initAriaAiStatusChangeAnnouncements"]() {
    const { locale: _0xbcc8ee, ui: { ariaLiveAnnouncer: _0x1f108d } } = this["editor"];
    this["_formView"]["contentArea"]["on"]("change:isProcessing", (_0x434724, _0x25eb63, _0x574f1f) => {
      const _0x9fa9d = this["_aiAssistantController"]["currentContext"];
      _0x574f1f ? _0x1f108d["announce"](o3(_0xbcc8ee, "AI is writing")) : _0x9fa9d && _0x1f108d["announce"](o3(_0xbcc8ee, "Generated content: %0", _0x9fa9d), { "politeness": "polite", "isUnsafeHTML": true });
    }), this["_formView"]["on"]("change:isError", (_0x2b32f8, _0x52c3bd, _0x343f42) => {
      if (_0x343f42) {
        const _0x5562ba = this["_formView"]["errorView"]["text"];
        _0x1f108d["announce"](o3(_0xbcc8ee, "Error during AI content generation: %0", _0x5562ba));
      }
    });
  }
  ["_onExecute"](_0x4a8a6a) {
    const _0x2c1d36 = this["_commandDefinitions"]["get"](_0x4a8a6a), _0x3037af = this["editor"], _0x354489 = _0x3037af["model"]["document"]["selection"], _0x414fc9 = _0x3037af["commands"]["get"]("showAIAssistant"), _0x52d1b6 = _0x3037af["plugins"]["get"](a4), _0x444c75 = (_0x2c1d36["groupId"] !== C2 ? _0x2c1d36["groupLabel"] + ": " : "") + _0x2c1d36["label"];
    if (false !== _0x2c1d36["requiresContent"] && _0x354489["isCollapsed"]) {
      const _0x2138fe = first(_0x354489["getSelectedBlocks"]()) || _0x3037af["model"]["schema"]["getLimitElement"](_0x354489);
      _0x3037af["model"]["change"]((_0x256246) => {
        _0x256246["setSelection"](_0x2138fe, "in");
      });
    }
    _0x52d1b6["showFakeVisualSelection"](), _0x414fc9["execute"](_0x2c1d36["prompt"], _0x444c75, "command:" + _0x4a8a6a);
  }
  ["_populateMenuBarMenu"](_0x10f8ca, _0x380102, _0x5d6fb3, _0x56f170) {
    const _0x2b77ef = this["editor"], _0x5ab8a1 = _0x2b77ef["locale"], _0x42222d = new MenuBarMenuListView(_0x5ab8a1), _0x5b233b = N(_0x2b77ef, _0x5d6fb3)["filter"]((_0x243270) => _0x243270["commands"]["length"]);
    1 === _0x5b233b["length"] ? this["_getMenuBarGroupButtons"]({ "command": _0x10f8ca, "commands": _0x5b233b[0]["commands"], "parentMenuView": _0x380102, "onExecute": _0x56f170 })["forEach"]((_0x4a7c85) => _0x42222d["items"]["add"](_0x4a7c85)) : _0x5b233b["forEach"](({ groupId: _0xdfd93d, groupLabel: _0x2af4df, commands: _0x425200 }) => {
      const _0x5c320b = new MenuBarMenuListItemView(_0x5ab8a1, _0x380102), _0x309220 = new MenuBarMenuView(_0x5ab8a1), _0xc4dbfb = new MenuBarMenuListView(_0x5ab8a1), _0x273722 = this["_getMenuBarGroupButtons"]({ "command": _0x10f8ca, "commands": _0x425200, "parentMenuView": _0x309220, "onExecute": _0x56f170 });
      _0x309220["buttonView"]["set"]({ "label": _0x2af4df || _0xdfd93d }), _0x309220["delegate"]("execute")["to"](_0x380102), _0xc4dbfb["items"]["addMany"](_0x273722), _0x309220["panelView"]["children"]["add"](_0xc4dbfb), _0x5c320b["children"]["add"](_0x309220), _0x42222d["items"]["add"](_0x5c320b);
    }), _0x380102["panelView"]["children"]["add"](_0x42222d);
  }
  ["_getMenuBarGroupButtons"]({ command: _0x18045b, commands: _0x5ba221, parentMenuView: _0x46a36e, onExecute: _0x343a86 }) {
    const _0x555baa = this["editor"], _0x28f0c4 = _0x555baa["locale"];
    return N(_0x555baa, _0x5ba221)["map"]((_0x43038c) => {
      const _0x341f6e = new MenuBarMenuListItemView(_0x28f0c4, _0x46a36e), _0x3588cd = new MenuBarMenuListItemButtonView(_0x28f0c4);
      return _0x3588cd["set"]({ "label": _0x43038c["label"] }), _0x3588cd["delegate"]("execute")["to"](_0x46a36e), _0x3588cd["on"]("execute", () => _0x343a86(_0x43038c["id"])), _0x3588cd["bind"]("isEnabled")["to"](_0x18045b, "enabledCommandsIds", (_0x908a8f) => _0x908a8f["includes"](_0x43038c["id"])), _0x341f6e["children"]["add"](_0x3588cd), _0x341f6e;
    });
  }
};
function L(_0x36af60, _0x586e75) {
  return void 0 !== _0x36af60["order"] && void 0 === _0x586e75["order"] ? 1 : void 0 === _0x36af60["order"] && void 0 !== _0x586e75["order"] ? -1 : void 0 !== _0x36af60["order"] && void 0 !== _0x586e75["order"] ? _0x36af60["order"] - _0x586e75["order"] : 0;
}
function N(_0x35d8ea, _0x28ed1f) {
  _0x28ed1f["sort"](L);
  const _0x3727a4 = {}, _0x52d5b1 = [];
  for (const _0x57a12c of _0x28ed1f) if (void 0 !== _0x57a12c["order"]) {
    if (_0x57a12c["order"] in _0x3727a4) throw new CKEditorError("ai-commands-config-order-collision", _0x35d8ea, { "conflictingDefinitions": [_0x57a12c, _0x3727a4[_0x57a12c["order"]]] });
    _0x3727a4[_0x57a12c["order"]] = _0x57a12c, _0x52d5b1["splice"](_0x57a12c["order"], 0, _0x57a12c);
  } else _0x52d5b1["push"](_0x57a12c);
  return _0x52d5b1;
}
var s2 = class extends Plugin {
  static get ["requires"]() {
    return [n2, a4];
  }
  static get ["pluginName"]() {
    return "AIAssistant";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  constructor(_0x18d21f) {
    super(_0x18d21f);
    const _0x5a276a = _0x18d21f["config"], _0x1eb34c = _0x18d21f["locale"];
    _0x5a276a["define"]("ai.aiAssistant.commands", function(_0x116337) {
      return [{ "groupId": "editOrReview", "groupLabel": o3(_0x116337, "Edit or review"), "commands": [{ "id": "improveWriting", "label": o3(_0x116337, "Improve writing"), "prompt": "Fix spelling mistakes, use proper grammar and apply good writing practices. Do not lose the original meaning." }, { "id": "makeShorter", "label": o3(_0x116337, "Make shorter"), "prompt": "Remove any repetitive, redundant, or non-essential writing in this content without changing the meaning or losing any key information." }, { "id": "makeLonger", "label": o3(_0x116337, "Make longer"), "prompt": "Improve this content by using descriptive language and inserting more information and more detailed explanations." }, { "id": "simplifyLanguage", "label": o3(_0x116337, "Simplify language"), "prompt": "Simplify the writing style of this content and reduce the complexity, so that the content is easy to understand." }] }, { "groupId": "generate", "groupLabel": o3(_0x116337, "Generate from selection"), "commands": [{ "id": "summarize", "label": o3(_0x116337, "Summarize"), "prompt": "Summarize this content into one paragraph of text. Include only the key ideas and conclusions. Keep it short. Do not keep original text formatting." }, { "id": "continue", "label": o3(_0x116337, "Continue"), "prompt": "Start with the provided content and write at the end of it continuing this topic. Keep the added part short." }] }, { "groupId": "changeTone", "groupLabel": o3(_0x116337, "Change tone"), "commands": [{ "id": "professional", "label": o3(_0x116337, "Professional"), "prompt": "Improve using polished, formal, and respectful language to convey professional expertise and competence." }, { "id": "casual", "label": o3(_0x116337, "Casual"), "prompt": "Improve using casual, informal language to convey a casual conversation with a real person." }, { "id": "direct", "label": o3(_0x116337, "Direct"), "prompt": "Improve using direct language, using only the essential information." }, { "id": "confident", "label": o3(_0x116337, "Confident"), "prompt": "Improve using compelling, optimistic language to convey confidence in the writing." }, { "id": "friendly", "label": o3(_0x116337, "Friendly"), "prompt": "Improve using friendly, comforting language, to convey understanding and empathy." }] }, { "groupId": "changeStyle", "groupLabel": o3(_0x116337, "Change style"), "commands": [{ "id": "business", "label": o3(_0x116337, "Business"), "prompt": "Rewrite this content as a business professional with formal language." }, { "id": "legal", "label": o3(_0x116337, "Legal"), "prompt": "Rewrite this content as a legal professional using valid legal terminology." }, { "id": "journalism", "label": o3(_0x116337, "Journalism"), "prompt": "Rewrite this content as a journalist using engaging language to convey the importance of the information." }, { "id": "poetic", "label": o3(_0x116337, "Poetic"), "prompt": "Rewrite this content as a poem using poetic techniques without losing the original meaning." }] }, { "groupId": "translate", "groupLabel": o3(_0x116337, "Translate"), "commands": [{ "id": "translateEnglish", "label": o3(_0x116337, "English"), "prompt": "Translate the content to English language." }, { "id": "translateSpanish", "label": o3(_0x116337, "Spanish"), "prompt": "Translate the content to Spanish language." }, { "id": "translatePortuguese", "label": o3(_0x116337, "Portuguese"), "prompt": "Translate the content to Portuguese language." }, { "id": "translateGerman", "label": o3(_0x116337, "German"), "prompt": "Translate the content to German language." }, { "id": "translateFrench", "label": o3(_0x116337, "French"), "prompt": "Translate the content to French language." }, { "id": "translateChinese", "label": o3(_0x116337, "Simplified Chinese"), "prompt": "Translate the content to Simplified Chinese language." }, { "id": "translateHindi", "label": o3(_0x116337, "Hindi"), "prompt": "Translate the content to Hindi language." }, { "id": "translateArabic", "label": o3(_0x116337, "Arabic"), "prompt": "Translate the content to Arabic language." }] }];
    }(_0x1eb34c)), _0x5a276a["define"]("ai.aiAssistant.extraCommandGroups", []), _0x5a276a["define"]("ai.aiAssistant.removeCommands", []);
    const _0x49f247 = r3(_0x5a276a["get"]("ai.aiAssistant.commands"), _0x1eb34c), _0x1dcfce = _0x5a276a["get"]("ai.aiAssistant.extraCommandGroups"), _0xc5d239 = _0x5a276a["get"]("ai.aiAssistant.removeCommands");
    _0x1dcfce["forEach"]((_0x13f24a) => {
      const _0x7fbe6d = _0x49f247["find"]((_0x2611aa) => _0x2611aa["groupId"] === _0x13f24a["groupId"]);
      _0x7fbe6d ? _0x7fbe6d["commands"] = _0x7fbe6d["commands"]["concat"](_0x13f24a["commands"]) : _0x49f247["push"](_0x13f24a);
    }), _0x49f247["forEach"]((_0x20755b) => {
      _0x20755b["commands"] = _0x20755b["commands"]["filter"]((_0x22d7d5) => !_0xc5d239["includes"](_0x22d7d5["id"]));
    }), _0x5a276a["set"]("ai.aiAssistant.commands", _0x49f247);
  }
  ["init"]() {
    const _0x3b6d79 = this["editor"];
    this["licenseKey"] = _0x3b6d79["config"]["get"]("licenseKey"), this["_licenseKeyCheckInterval"] = setInterval(() => {
      let _0x4b7977;
      for (const _0x124c9d in _0x3b6d79) {
        const _0x1c125d = _0x124c9d, _0x233d47 = _0x3b6d79[_0x1c125d];
        if ("aiLicenseKeyTrial" === _0x233d47 || "aiLicenseKeyInvalid" === _0x233d47 || "aiLicenseKeyValid" === _0x233d47 || "aiLicenseKeyTrialLimit:operations" === _0x233d47) {
          delete _0x3b6d79[_0x1c125d], _0x4b7977 = _0x233d47;
          break;
        }
      }
      if ("aiLicenseKeyInvalid" === _0x4b7977) throw clearInterval(this["_licenseKeyCheckInterval"]), new CKEditorError("ai-invalid-license-key", null);
      if ("aiLicenseKeyTrial" === _0x4b7977 && console["info"]("You are using the trial version of CKEditor 5 ai plugin with limited usage. Make sure you will not use it in the production environment."), "aiLicenseKeyTrialLimit:operations" === _0x4b7977) throw clearInterval(this["_licenseKeyCheckInterval"]), new CKEditorError("ai-trial-license-key-reached-limit-changes", null);
      "aiLicenseKeyValid" === _0x4b7977 && clearInterval(this["_licenseKeyCheckInterval"]);
    }, 1e3);
  }
  ["destroy"]() {
    this["_licenseKeyCheckInterval"] && clearInterval(this["_licenseKeyCheckInterval"]);
  }
};
var P2 = class extends Plugin {
  constructor(_0x3a1871) {
    super(_0x3a1871);
    __publicField(this, "abortController");
    this["abortController"] = new AbortController();
  }
  static get ["requires"]() {
    return [y];
  }
  ["init"]() {
    this["editor"]["plugins"]["get"](y)["textAdapter"] = this;
  }
  ["abort"]() {
    this["abortController"]["signal"]["aborted"] || (this["abortController"]["abort"](), this["abortController"] = new AbortController());
  }
  async ["makeRequest"](_0x5aebc4) {
    return this["sendRequest"](_0x5aebc4)["catch"]((_0x20d88b) => {
      if (_0x20d88b instanceof R2) return Promise["reject"](_0x20d88b);
      if ("AbortError" == _0x20d88b["name"]) return Promise["resolve"]();
      throw console["error"](_0x20d88b), new CKEditorError("aitextadapter-send-request-failed", null);
    });
  }
  async ["_prepareRequestHeaders"](_0x452150, _0x137992) {
    const _0x12c7eb = this["editor"]["locale"], _0x401c92 = { "Content-Type": "application/json" };
    if ("object" == typeof _0x452150) Object["assign"](_0x401c92, _0x452150);
    else {
      if (_0x452150) try {
        const _0x53cefc = await _0x452150(_0x137992);
        Object["assign"](_0x401c92, _0x53cefc);
      } catch (_0x39d9a9) {
        return Promise["reject"](new R2(o3(_0x12c7eb, "AI_ERROR_GET_HEADERS")));
      }
    }
    return _0x401c92;
  }
  async ["_prepareRequestParameters"](_0x186fee, _0x1c70ed) {
    const _0x52fb38 = this["editor"]["locale"];
    if ("object" == typeof _0x186fee) return _0x186fee;
    try {
      return await _0x186fee(_0x1c70ed);
    } catch (_0x526cf2) {
      return Promise["reject"](new R2(o3(_0x52fb38, "AI_ERROR_GET_PARAMETERS")));
    }
  }
};
var H2 = class extends P2 {
  constructor(_0x1a82ed) {
    super(_0x1a82ed);
    __publicField(this, "_apiUrl");
    __publicField(this, "_requestHeaders");
    __publicField(this, "_requestParameters");
    _0x1a82ed["config"]["define"]("ai.openAI.apiUrl", "https://api.openai.com/v1/chat/completions"), _0x1a82ed["config"]["get"]("ai.openAI.requestParameters") || _0x1a82ed["config"]["define"]("ai.openAI.requestParameters", { "model": "gpt-3.5-turbo", "max_tokens": 2e3, "temperature": 1, "top_p": 1, "stream": true }), this["_apiUrl"] = _0x1a82ed["config"]["get"]("ai.openAI.apiUrl"), this["_requestHeaders"] = _0x1a82ed["config"]["get"]("ai.openAI.requestHeaders") || {}, this["_requestParameters"] = _0x1a82ed["config"]["get"]("ai.openAI.requestParameters");
  }
  static get ["pluginName"]() {
    return "OpenAITextAdapter";
  }
  async ["sendRequest"]({ query: _0x9cd623, context: _0x42bf66, onData: _0x1db0c9, actionId: _0x21fcd3 }) {
    const _0x37857c = this["editor"]["locale"], _0x47cb0a = await this["prepareMessages"](_0x9cd623, _0x42bf66, _0x21fcd3), _0x9ba058 = await this["_prepareRequestHeaders"](this["_requestHeaders"], _0x21fcd3), _0x12563d = await this["_prepareRequestParameters"](this["_requestParameters"], _0x21fcd3), _0xd77dc9 = { "messages": _0x47cb0a, ..._0x12563d }, _0x391169 = { "method": "POST", "headers": _0x9ba058, "body": JSON["stringify"](_0xd77dc9), "signal": this["abortController"]["signal"] }, _0x1fef38 = await fetch(this["_apiUrl"], _0x391169);
    if (_0x1fef38["ok"]) return _0x12563d["stream"] ? await this["_readStreamableResponse"](_0x1fef38, _0x1db0c9) : await this["_readStaticResponse"](_0x1fef38, _0x1db0c9), Promise["resolve"]();
    {
      const _0x13a87e = await _0x1fef38["text"]();
      return _0x13a87e["includes"]("context_length_exceeded") ? Promise["reject"](new R2(o3(_0x37857c, "AI_ERROR_CONTEXT_LENGTH"))) : _0x13a87e["includes"]("Moderation") ? Promise["reject"](new R2(o3(_0x37857c, "AI_ERROR_MODERATION"))) : Promise["reject"](new Error(_0x13a87e));
    }
  }
  async ["prepareMessages"](_0x4177db, _0x1f8d52, _0x3b3e99) {
    let _0x64633a, _0x2cd841;
    return _0x1f8d52 ? (_0x64633a = "Your task is to execute the instruction using the provided HTML content. Follow the instruction closely. Your answer must be a properly formatted HTML code. Do not add any additional remarks or notes. Do not act like a chatbot or a real person.", _0x2cd841 = "Instruction:\n" + _0x4177db + "\nYou must keep the text formatting.\n\nContent:\n" + _0x1f8d52) : (_0x64633a = "Your task is to generate HTML content accordingly to the given instruction. Never include <img> tag in your response even if asked for. Your answer must be a well-structured and properly formatted HTML code. Answer only with the generated HTML content. Do not add any additional remarks or notes. Do not act like a chatbot or a real person.", _0x2cd841 = _0x4177db), [{ "role": "system", "content": _0x64633a }, { "role": "user", "content": _0x2cd841 }];
  }
  async ["_readStreamableResponse"](_0x5be936, _0x1aeea5) {
    const _0x5b9dd8 = _0x5be936["body"]["getReader"](), _0x5486fd = new TextDecoder();
    let _0x1754fc = "", _0x376dee = "", _0x5cd82f = "", _0x54b7a8 = false;
    for (; !_0x54b7a8; ) {
      const { done: _0xcbd6da, value: _0x436629 } = await _0x5b9dd8["read"](), _0x170ba8 = _0x1754fc + _0x5486fd["decode"](_0x436629);
      let _0x4af0a6 = "";
      _0x54b7a8 = _0xcbd6da;
      try {
        _0x4af0a6 = this["_cleanUpData"](_0x170ba8), _0x1754fc = "";
      } catch (_0x343ca9) {
        _0x1754fc = _0x170ba8;
        continue;
      }
      _0x376dee += _0x4af0a6, !_0x54b7a8 && this["_isBufferIncomplete"](_0x376dee) || _0x376dee && (_0x5cd82f += _0x376dee, _0x376dee = "", _0x1aeea5(_0x5cd82f));
    }
    return Promise["resolve"]();
  }
  async ["_readStaticResponse"](_0x16990c, _0x2876d3) {
    return _0x2876d3((await _0x16990c["json"]())["choices"][0]["message"]["content"]), Promise["resolve"]();
  }
  ["_isBufferIncomplete"](_0x3c10fa) {
    const _0x2b5817 = _0x3c10fa["split"]("<")["length"] !== _0x3c10fa["split"](">")["length"], _0x204fc6 = _0x3c10fa["length"] < 30;
    return _0x2b5817 && _0x204fc6;
  }
  ["_cleanUpData"](_0x1a2ed5) {
    return _0x1a2ed5["split"](/\n(?![^{]*\})/g)["map"]((_0x2e67a2) => _0x2e67a2["replace"]("data: ", ""))["filter"]((_0x146b76) => _0x146b76 && _0x146b76["length"] > 0 && "[DONE]" !== _0x146b76)["map"]((_0x4f341d) => {
      const { choices: _0x3b8fc0 } = JSON["parse"](_0x4f341d);
      if (_0x3b8fc0[0] && _0x3b8fc0[0]["delta"] && _0x3b8fc0[0]["delta"]["content"]) return _0x3b8fc0[0]["delta"]["content"];
    })["filter"]((_0x7f3722) => _0x7f3722)["join"]("");
  }
};
var O2 = class extends P2 {
  constructor(_0x10bf11) {
    super(_0x10bf11);
    __publicField(this, "_apiUrl");
    __publicField(this, "_requestHeaders");
    __publicField(this, "_bedrockClientConfig");
    __publicField(this, "_requestParameters");
    _0x10bf11["config"]["get"]("ai.aws.requestParameters") || _0x10bf11["config"]["define"]("ai.aws.requestParameters", { "model": "anthropic.claude-v2", "max_tokens_to_sample": 2e3, "temperature": 1, "top_p": 1, "top_k": 250, "anthropic_version": "bedrock-2023-05-31", "stream": true }), this["_apiUrl"] = _0x10bf11["config"]["get"]("ai.aws.apiUrl"), this["_bedrockClientConfig"] = _0x10bf11["config"]["get"]("ai.aws.bedrockClientConfig"), this["_requestHeaders"] = _0x10bf11["config"]["get"]("ai.aws.requestHeaders"), this["_requestParameters"] = _0x10bf11["config"]["get"]("ai.aws.requestParameters");
  }
  static get ["pluginName"]() {
    return "AWSTextAdapter";
  }
  async ["sendRequest"]({ query: _0x52f209, context: _0x409f4f, onData: _0x2e974e, actionId: _0x242c16 }) {
    const { model: _0x44ff67, stream: _0x49d066, ..._0x1b4873 } = await this["_prepareRequestParameters"](this["_requestParameters"], _0x242c16), _0x346249 = { "prompt": await this["preparePrompt"](_0x52f209, _0x409f4f, _0x44ff67, _0x242c16), ..._0x1b4873 };
    this["_apiUrl"] ? await this["_processProxyRequest"](_0x346249, _0x44ff67, _0x49d066, _0x2e974e, _0x242c16) : await this["_processAWSRequest"](_0x346249, _0x44ff67, _0x49d066, _0x2e974e);
  }
  async ["preparePrompt"](_0x100d64, _0x54d512, _0x20bec2, _0x47ed16) {
    let _0x51b609, _0x102799;
    return _0x54d512 ? (_0x51b609 = "Your task is to execute the instruction using the provided HTML content. Follow the instruction closely. Your answer must be a properly formatted HTML code. Do not add any additional remarks or notes. Do not act like a chatbot or a real person.", _0x102799 = "Instruction:\n" + _0x100d64 + "\nYou must keep the text formatting.\n\nContent:\n" + _0x54d512) : (_0x51b609 = "Your task is to generate HTML content accordingly to the given instruction. Never include <img> tag in your response even if asked for. Your answer must be a well-structured and properly formatted HTML code. Answer only with the generated HTML content. Do not add any additional remarks or notes. Do not act like a chatbot or a real person.", _0x102799 = _0x100d64), "meta.llama" == this["getModelFamily"](_0x20bec2) ? "<<SYS>>\n" + _0x51b609 + "\n<</SYS>>\n[INST]\n" + _0x102799 + "\n[/INST]" : "Human:\n" + _0x51b609 + "\n" + _0x102799 + "\n\nAssistant:";
  }
  ["getModelFamily"](_0x3cb9a3) {
    if (/^anthropic\.claude/["test"](_0x3cb9a3)) return "anthropic.claude";
    if (/^ai21\.j2/["test"](_0x3cb9a3)) return "ai21.j2";
    if (/^cohere\.command/["test"](_0x3cb9a3)) return "cohere.command";
    if (/^meta\.llama/["test"](_0x3cb9a3)) return "meta.llama";
    throw new R2(o3(this["editor"]["locale"], "AI_ERROR_UNSUPPORTED_MODEL", _0x3cb9a3));
  }
  async ["_processProxyRequest"](_0x54da48, _0x1c1375, _0x4f6d93, _0x1c1186, _0x525328) {
    const _0x219b24 = { "method": "POST", "headers": await this["_prepareRequestHeaders"](this["_requestHeaders"], _0x525328), "body": JSON["stringify"]({ ..._0x54da48, "model": _0x1c1375, "stream": _0x4f6d93 }), "signal": this["abortController"]["signal"] }, _0x2ee130 = await fetch(this["_apiUrl"], _0x219b24);
    _0x4f6d93 ? await this["_readStreamableResponse"](_0x2ee130, _0x1c1375, _0x1c1186) : await this["_readStaticResponse"](_0x2ee130, _0x1c1375, _0x1c1186);
  }
  async ["_processAWSRequest"](_0x27b7da, _0x49e96b, _0x25a8a9, _0x13739e) {
    const _0x1d8895 = new BedrockRuntimeClient(this["_bedrockClientConfig"]), _0x5c555a = { "body": JSON["stringify"](_0x27b7da), "contentType": "application/json", "accept": "application/json", "modelId": _0x49e96b };
    let _0x3f2121;
    if (_0x25a8a9) {
      const _0x2b8fab = new InvokeModelWithResponseStreamCommand(_0x5c555a);
      _0x3f2121 = await _0x1d8895["send"](_0x2b8fab, { "abortSignal": this["abortController"]["signal"] }), await this["_readAsyncIterableResponse"](_0x3f2121, _0x49e96b, _0x13739e);
    } else {
      const _0x5d8468 = new InvokeModelCommand(_0x5c555a);
      _0x3f2121 = await _0x1d8895["send"](_0x5d8468, { "abortSignal": this["abortController"]["signal"] }), await this["_readStaticResponse"](_0x3f2121, _0x49e96b, _0x13739e);
    }
  }
  async ["_readAsyncIterableResponse"](_0x904576, _0x211cad, _0xc3499a) {
    const _0x44ff78 = _0x904576["body"], _0x83fe8d = new TextDecoder("utf-8");
    let _0x51a93d = "";
    for await (const _0x43d1cf of _0x44ff78) if (_0x43d1cf["chunk"]) {
      const _0x2bad96 = _0x83fe8d["decode"](_0x43d1cf["chunk"]["bytes"]), _0x8f1902 = JSON["parse"](_0x2bad96);
      _0x51a93d += this["_getGeneratedText"](_0x8f1902, _0x211cad), _0xc3499a(_0x51a93d);
    }
    return Promise["resolve"]();
  }
  async ["_readStreamableResponse"](_0x111532, _0x46404e, _0x183440) {
    const _0x3df478 = _0x111532["body"], _0x22e9e9 = new TextDecoder("utf-8"), _0x4af01a = _0x3df478["getReader"]();
    let _0x2b61d3 = "", _0x2a5ff2 = "", _0x20cb5b = false;
    for (; !_0x20cb5b; ) {
      const { done: _0x41bd5d, value: _0x58ff43 } = await _0x4af01a["read"]();
      if (_0x20cb5b = _0x41bd5d, _0x20cb5b) break;
      const _0x3c5c12 = (_0x2b61d3 + _0x22e9e9["decode"](_0x58ff43))["split"]("\n")["map"]((_0x226770) => {
        try {
          return _0x2b61d3 = "", JSON["parse"](_0x226770);
        } catch (_0x2526d9) {
          return _0x2b61d3 = _0x226770, null;
        }
      })["filter"]((_0x3b23ee) => null !== _0x3b23ee);
      _0x3c5c12["length"] && (_0x2a5ff2 += _0x3c5c12["map"]((_0x308109) => this["_getGeneratedText"](_0x308109, _0x46404e))["join"](""), _0x183440(_0x2a5ff2));
    }
    return Promise["resolve"]();
  }
  async ["_readStaticResponse"](_0x3794d1, _0x3aebe0, _0x1d0f0b) {
    let _0x207650;
    return _0x207650 = _0x3794d1 instanceof Response ? await _0x3794d1["json"]() : JSON["parse"](Buffer["from"](_0x3794d1["body"])["toString"]("utf8")), _0x1d0f0b(this["_getGeneratedText"](_0x207650, _0x3aebe0)), Promise["resolve"]();
  }
  ["_getGeneratedText"](_0x187bec, _0x15f1b9) {
    switch (this["getModelFamily"](_0x15f1b9)) {
      case "anthropic.claude":
        return _0x187bec["completion"];
      case "ai21.j2":
        return _0x187bec["completions"][0]["data"]["text"];
      case "cohere.command":
        return _0x187bec["generations"][0]["text"];
      case "meta.llama":
        return _0x187bec["generation"];
    }
  }
};

// node_modules/@ckeditor/ckeditor5-case-change/dist/index.js
var r4 = class extends Command {
  constructor(_0x4b07ee, _0x35b75c) {
    super(_0x4b07ee);
    __publicField(this, "_transformCallback");
    this["_transformCallback"] = _0x35b75c;
  }
  ["execute"]() {
    const _0x3a0259 = this["editor"]["model"], _0x1b451c = Array["from"](this["_getAffectedRanges"]()), _0x3172a8 = Array["from"](_0x3a0259["document"]["selection"]["getRanges"]());
    _0x3a0259["change"]((_0x2fccd6) => {
      for (const _0x4ee8ce of _0x1b451c) this["_modifyContent"](_0x4ee8ce, _0x2fccd6);
      _0x2fccd6["setSelection"](_0x3172a8);
    });
  }
  ["refresh"]() {
    for (const _0x4b1087 of this["_getAffectedRanges"]()) for (const _0x3654b6 of _0x4b1087) if (_0x3654b6["item"]["is"]("$textProxy")) return void (this["isEnabled"] = true);
    this["isEnabled"] = false;
  }
  ["_getAffectedRanges"]() {
    const _0x5dd796 = this["editor"]["model"], _0x22fe50 = _0x5dd796["document"]["selection"];
    if (_0x22fe50["isCollapsed"]) {
      const _0x2d0ba9 = this["_findAncestorTextBlock"](_0x22fe50["getFirstPosition"]()["parent"]);
      return _0x2d0ba9 ? [_0x5dd796["createRangeIn"](_0x2d0ba9)] : [];
    }
    return _0x22fe50["getRanges"]();
  }
  ["_modifyContent"](_0x3caca4, _0x4c3465) {
    for (const _0x47883a of this["_getElementsAllowingText"](_0x3caca4)) {
      const _0x520d37 = this["_getElementTextContent"](_0x47883a), _0x2eb80d = this["_transformCallback"](_0x520d37);
      for (const _0xed7539 of this["_getTextNodesRangeLimited"](_0x47883a, _0x3caca4)) this["_replaceTextNodeData"](_0xed7539, _0x2eb80d, _0x4c3465);
    }
  }
  ["_findAncestorTextBlock"](_0x190947) {
    const _0x8d4a98 = this["editor"]["model"]["schema"];
    if (_0x190947["is"]("element") && _0x8d4a98["checkChild"](_0x190947, "$text")) return _0x190947;
    const _0x2e746d = _0x190947["parent"];
    return !_0x2e746d || _0x8d4a98["isLimit"](_0x190947) ? null : this["_findAncestorTextBlock"](_0x2e746d);
  }
  *["_getElementsAllowingText"](_0x2eec7e) {
    const _0x37d84c = /* @__PURE__ */ new Set();
    for (const { item: _0x4d8748 } of _0x2eec7e["getWalker"]()) {
      const _0x4edd30 = this["_findAncestorTextBlock"](_0x4d8748);
      _0x4edd30 && !_0x37d84c["has"](_0x4edd30) && (_0x37d84c["add"](_0x4edd30), yield _0x4edd30);
    }
  }
  ["_getElementTextContent"](_0x2a41b7) {
    return Array["from"](_0x2a41b7["getChildren"]())["reduce"]((_0x1b0ea7, _0x267977) => _0x1b0ea7 + (_0x267977["is"]("$text") ? _0x267977["data"] : " "), "");
  }
  *["_getTextNodesRangeLimited"](_0x484638, _0x16ab2c) {
    const _0x22cef8 = _0x16ab2c["getIntersection"](this["editor"]["model"]["createRangeIn"](_0x484638));
    if (_0x22cef8) {
      for (const _0x901b84 of _0x22cef8["getItems"]()) _0x901b84["is"]("$textProxy") && _0x901b84["parent"] == _0x484638 && (yield _0x901b84);
    }
  }
  ["_replaceTextNodeData"](_0x1de24a, _0x39e59a, _0x55b20b) {
    const _0x1b9f08 = _0x39e59a["substring"](_0x1de24a["startOffset"], _0x1de24a["endOffset"]);
    if (_0x1b9f08 === _0x1de24a["data"]) return;
    const _0x11ff80 = _0x1de24a["getAttributes"]();
    this["editor"]["model"]["insertContent"](_0x55b20b["createText"](_0x1b9f08, _0x11ff80), _0x55b20b["createSelection"](_0x55b20b["createRangeOn"](_0x1de24a)));
  }
};
function c3(_0x3c69ae, _0x299112, ..._0x221d88) {
  const t2 = _0x3c69ae["t"];
  switch (_0x299112) {
    case "Case change":
      return t2("Case change");
    case "UPPERCASE":
      return t2("UPPERCASE");
    case "lowercase":
      return t2("lowercase");
    case "Title Case":
      return t2("Title Case");
    case "Change text case":
      return t2("Change text case");
    case "Changed case to %0":
      return t2("Changed case to %0", ..._0x221d88);
    default:
      return _0x299112;
  }
}
var s3 = class extends Plugin {
  constructor() {
    super(...arguments);
    __publicField(this, "_currentCommandIndex", 0);
  }
  static get ["pluginName"]() {
    return "CaseChangeEditing";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    const _0x166664 = this["editor"], _0xeca690 = _0x166664["locale"]["contentLanguage"], _0x579463 = /* @__PURE__ */ function(_0x3c73f3 = []) {
      return "function" == typeof _0x3c73f3 ? _0x3c73f3 : (_0x5c6019, { wordIndex: _0xf1c0bb }) => _0xf1c0bb > 0 && _0x3c73f3["includes"](_0x5c6019);
    }(_0x166664["config"]["get"]("caseChange.titleCase.excludeWords")), _0xb1dcf9 = { "changeCaseUpper": new r4(_0x166664, (_0x5cd7c5) => _0x5cd7c5["toLocaleUpperCase"](_0xeca690)), "changeCaseLower": new r4(_0x166664, (_0xb2ef66) => _0xb2ef66["toLocaleLowerCase"](_0xeca690)), "changeCaseTitle": new r4(_0x166664, (_0x5aadb5) => function(_0x44bc3e, _0x5f0e2a, _0x3c71fc) {
      return function(_0x50c970, _0x4799a9) {
        let _0x524f17 = "", _0x583cc5 = 0, _0x5c5fe1 = 0;
        for (const _0x87e766 of _0x50c970["matchAll"](/ +/g)) {
          const _0x51efeb = _0x87e766["index"], _0x56c5d4 = _0x50c970["substring"](_0x583cc5, _0x51efeb);
          _0x56c5d4["length"] && (_0x524f17 += _0x4799a9(_0x56c5d4, _0x583cc5, _0x5c5fe1++)), _0x524f17 += _0x87e766[0], _0x583cc5 = _0x51efeb + _0x87e766[0]["length"];
        }
        const _0x499309 = _0x50c970["substring"](_0x583cc5);
        return _0x499309["length"] && (_0x524f17 += _0x4799a9(_0x499309, _0x583cc5, _0x5c5fe1)), _0x524f17;
      }(_0x44bc3e, (_0x16f75c, _0x50d484, _0x54f1ff) => {
        const _0x3b5340 = _0x16f75c["toLocaleLowerCase"](_0x3c71fc);
        return _0x5f0e2a(_0x3b5340, { "charOffset": _0x50d484, "wordIndex": _0x54f1ff, "blockText": _0x44bc3e }) ? _0x3b5340 : _0x3b5340["replace"](new RegExp("(?:^|[^\\p{L}\\d'])\\p{L}", "gu"), (_0xac3e18) => _0xac3e18["toLocaleUpperCase"](_0x3c71fc));
      });
    }(_0x5aadb5, _0x579463, _0xeca690)) };
    for (const [_0x142374, _0x3cc986] of Object["entries"](_0xb1dcf9)) _0x166664["commands"]["add"](_0x142374, _0x3cc986), _0x3cc986["on"]("execute", () => {
      this["_announceCaseChangeOperation"](_0x142374);
    });
    this["listenTo"](_0x166664["editing"]["view"]["document"], "selectionChange", () => {
      this["_currentCommandIndex"] = 0;
    }), _0x166664["keystrokes"]["set"]("shift+f3", (_0x386f9e, _0x382ba9) => {
      const _0xc4b9e2 = y2(this["editor"]["locale"]), _0x3f96c6 = _0xc4b9e2[this["_currentCommandIndex"] % _0xc4b9e2["length"]]["commandName"];
      _0x166664["execute"](_0x3f96c6), this["_currentCommandIndex"]++, _0x382ba9();
    });
  }
  ["_announceCaseChangeOperation"](_0x302d47) {
    const { ui: _0x3b372d, locale: _0x3e9f95 } = this["editor"], _0x5a8b12 = y2(_0x3e9f95)["find"]((_0xac8a31) => _0xac8a31["commandName"] === _0x302d47)["label"]["toLowerCase"]();
    _0x3b372d["ariaLiveAnnouncer"]["announce"](c3(_0x3e9f95, "Changed case to %0", _0x5a8b12));
  }
};
function y2(_0xf8c1d4) {
  return [{ "label": c3(_0xf8c1d4, "UPPERCASE"), "commandName": "changeCaseUpper" }, { "label": c3(_0xf8c1d4, "lowercase"), "commandName": "changeCaseLower" }, { "label": c3(_0xf8c1d4, "Title Case"), "commandName": "changeCaseTitle" }];
}
var n3 = class extends Plugin {
  static get ["pluginName"]() {
    return "CaseChangeUI";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    const _0x1c7ef9 = this["editor"];
    this["_registerComponents"](), _0x1c7ef9["accessibility"]["addKeystrokeInfos"]({ "keystrokes": [{ "label": c3(_0x1c7ef9["locale"], "Change text case"), "keystroke": "Shift+f3", "mayRequireFn": true }] });
  }
  ["afterInit"]() {
    !function(_0xeb1f00) {
      function _0x1932ef(_0x1434cd, _0x5715b6, _0x36e1c6) {
        const _0xbb66e2 = {};
        _0xbb66e2[_0x1b46da([110, 117, 109, 98, 101, 114, 79, 102, 82, 111, 117, 110, 100, 115])] = { 16: 10, 24: 12, 32: 14 }, _0xbb66e2[_0x1b46da([114, 99, 111, 110])] = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145], _0xbb66e2[_0x1b46da([83])] = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], _0xbb66e2[_0x1b46da([84, 49])] = [3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474, 1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738, 597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420, 3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577, 605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627, 2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520, 3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205, 2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474, 1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309, 3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720, 2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771, 1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243, 3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470, 1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977, 2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737, 1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754, 361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755, 697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986], _0xbb66e2[_0x1b46da([84, 50])] = [2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899, 2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108, 4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129, 2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848, 1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043, 1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914, 1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139, 2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658, 3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324, 3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385, 3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499, 1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572, 2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810, 3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411, 3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753, 2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487, 550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313, 2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766], _0xbb66e2[_0x1b46da([84, 51])] = [1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099, 1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188, 2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329, 1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768, 3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283, 3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114, 3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739, 2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538, 2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324, 1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865, 1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296, 844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713, 3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050, 2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131, 3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513, 2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927, 3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905, 2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126], _0xbb66e2[_0x1b46da([84, 52])] = [1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549, 1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243, 2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529, 1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963, 3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198, 3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564, 3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214, 2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143, 2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699, 1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945, 1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771, 842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818, 3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340, 2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126, 3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473, 2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917, 3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930, 2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436], _0xbb66e2[_0x1b46da([85, 49])] = [0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795], _0xbb66e2[_0x1b46da([85, 50])] = [0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459, 2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537, 3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535, 77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884, 3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824, 3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622, 507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216, 3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879, 129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469, 3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175, 1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921, 2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127, 3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560, 1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387, 2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037, 4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148, 692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663, 2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855], _0xbb66e2[_0x1b46da([85, 51])] = [0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639, 3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557, 2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032, 3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201, 344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239, 532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878, 3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771, 4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744, 671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199, 4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366, 492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798, 2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695, 3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569, 4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702, 3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217, 1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635, 1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009, 3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150], _0xbb66e2[_0x1b46da([85, 52])] = [0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874, 2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222, 4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595, 1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591, 4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837, 923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127, 2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424, 2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110, 4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469, 4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481, 1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243, 3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604, 2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802, 585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166, 4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912, 1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703, 3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213, 2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925];
        const _0x177efe = new Uint8Array(16);
        for (let _0x38a8fc = 15; _0x38a8fc >= 0; --_0x38a8fc) _0x177efe[_0x38a8fc] = _0x36e1c6 % 256, _0x36e1c6 = parseInt(_0x36e1c6 / 256);
        let _0x571ace = null, _0x3b53ba = 16;
        const _0x3afff3 = new Uint8Array(_0x5715b6), _0x184b5a = [], _0x1eac5f = [];
        _0x2df957();
        for (let _0x3c9ae9 = 0; _0x3c9ae9 < _0x1434cd[_0x1b46da([108, 101, 110, 103, 116, 104])]; _0x3c9ae9++) 16 === _0x3b53ba && (_0x571ace = _0x297087(_0x177efe), _0x3b53ba = 0, _0x3b4c91(_0x177efe)), _0x1434cd[_0x3c9ae9] ^= _0x571ace[_0x3b53ba++];
        return _0x1434cd;
        function _0xcaf3d8(_0x5e1a06) {
          const _0xa59bcc = [];
          for (let _0x37857f = 0; _0x37857f < _0x5e1a06[_0x1b46da([108, 101, 110, 103, 116, 104])]; _0x37857f += 4) _0xa59bcc[_0x1b46da([112, 117, 115, 104])](_0x5e1a06[_0x37857f] << 24 | _0x5e1a06[_0x37857f + 1] << 16 | _0x5e1a06[_0x37857f + 2] << 8 | _0x5e1a06[_0x37857f + 3]);
          return _0xa59bcc;
        }
        function _0x3b4c91(_0x507685) {
          for (let _0x114d9f = 15; _0x114d9f >= 0; _0x114d9f--) {
            if (255 !== _0x507685[_0x114d9f]) {
              _0x507685[_0x114d9f]++;
              break;
            }
            _0x507685[_0x114d9f] = 0;
          }
        }
        function _0x297087(_0x53865a) {
          const _0x43a77d = _0x184b5a[_0x1b46da([108, 101, 110, 103, 116, 104])] - 1, _0x108a2a = [0, 0, 0, 0];
          let t2 = _0xcaf3d8(_0x53865a);
          for (let _0x201d91 = 0; _0x201d91 < 4; _0x201d91++) t2[_0x201d91] ^= _0x184b5a[0][_0x201d91];
          for (let _0x5086ea = 1; _0x5086ea < _0x43a77d; _0x5086ea++) {
            for (let _0x508544 = 0; _0x508544 < 4; _0x508544++) _0x108a2a[_0x508544] = _0xbb66e2[_0x1b46da([84, 49])][t2[_0x508544] >> 24 & 255] ^ _0xbb66e2[_0x1b46da([84, 50])][t2[(_0x508544 + 1) % 4] >> 16 & 255] ^ _0xbb66e2[_0x1b46da([84, 51])][t2[(_0x508544 + 2) % 4] >> 8 & 255] ^ _0xbb66e2[_0x1b46da([84, 52])][255 & t2[(_0x508544 + 3) % 4]] ^ _0x184b5a[_0x5086ea][_0x508544];
            t2 = _0x108a2a[_0x1b46da([115, 108, 105, 99, 101])]();
          }
          const _0x1a6cbd = new Uint8Array(16);
          let _0x1276ca;
          for (let _0x5aa3fd = 0; _0x5aa3fd < 4; _0x5aa3fd++) _0x1276ca = _0x184b5a[_0x43a77d][_0x5aa3fd], _0x1a6cbd[4 * _0x5aa3fd] = 255 & (_0xbb66e2[_0x1b46da([83])][t2[_0x5aa3fd] >> 24 & 255] ^ _0x1276ca >> 24), _0x1a6cbd[4 * _0x5aa3fd + 1] = 255 & (_0xbb66e2[_0x1b46da([83])][t2[(_0x5aa3fd + 1) % 4] >> 16 & 255] ^ _0x1276ca >> 16), _0x1a6cbd[4 * _0x5aa3fd + 2] = 255 & (_0xbb66e2[_0x1b46da([83])][t2[(_0x5aa3fd + 2) % 4] >> 8 & 255] ^ _0x1276ca >> 8), _0x1a6cbd[4 * _0x5aa3fd + 3] = 255 & (_0xbb66e2[_0x1b46da([83])][255 & t2[(_0x5aa3fd + 3) % 4]] ^ _0x1276ca);
          return _0x1a6cbd;
        }
        function _0x2df957() {
          const _0x1ce762 = _0xbb66e2[_0x1b46da([110, 117, 109, 98, 101, 114, 79, 102, 82, 111, 117, 110, 100, 115])][_0x3afff3[_0x1b46da([108, 101, 110, 103, 116, 104])]];
          for (let _0x59d362 = 0; _0x59d362 <= _0x1ce762; _0x59d362++) _0x184b5a[_0x1b46da([112, 117, 115, 104])]([0, 0, 0, 0]), _0x1eac5f[_0x1b46da([112, 117, 115, 104])]([0, 0, 0, 0]);
          const _0x21d5c1 = 4 * (_0x1ce762 + 1), _0x409e9e = _0x3afff3[_0x1b46da([108, 101, 110, 103, 116, 104])] / 4, _0x4a3c40 = _0xcaf3d8(_0x3afff3);
          let _0x2b8815;
          for (let _0x2f88b1 = 0; _0x2f88b1 < _0x409e9e; _0x2f88b1++) _0x2b8815 = _0x2f88b1 >> 2, _0x184b5a[_0x2b8815][_0x2f88b1 % 4] = _0x4a3c40[_0x2f88b1], _0x1eac5f[_0x1ce762 - _0x2b8815][_0x2f88b1 % 4] = _0x4a3c40[_0x2f88b1];
          let _0x3f81ef, _0x16a1da = 0, t2 = _0x409e9e;
          for (; t2 < _0x21d5c1; ) {
            _0x3f81ef = _0x4a3c40[_0x409e9e - 1], _0x4a3c40[0] ^= _0xbb66e2[_0x1b46da([83])][_0x3f81ef >> 16 & 255] << 24 ^ _0xbb66e2[_0x1b46da([83])][_0x3f81ef >> 8 & 255] << 16 ^ _0xbb66e2[_0x1b46da([83])][255 & _0x3f81ef] << 8 ^ _0xbb66e2[_0x1b46da([83])][_0x3f81ef >> 24 & 255] ^ _0xbb66e2[_0x1b46da([114, 99, 111, 110])][_0x16a1da] << 24, _0x16a1da += 1;
            for (let _0x1165eb = 1; _0x1165eb < _0x409e9e / 2; _0x1165eb++) _0x4a3c40[_0x1165eb] ^= _0x4a3c40[_0x1165eb - 1];
            _0x3f81ef = _0x4a3c40[_0x409e9e / 2 - 1], _0x4a3c40[_0x409e9e / 2] ^= _0xbb66e2[_0x1b46da([83])][255 & _0x3f81ef] ^ _0xbb66e2[_0x1b46da([83])][_0x3f81ef >> 8 & 255] << 8 ^ _0xbb66e2[_0x1b46da([83])][_0x3f81ef >> 16 & 255] << 16 ^ _0xbb66e2[_0x1b46da([83])][_0x3f81ef >> 24 & 255] << 24;
            for (let _0x4ffb83 = _0x409e9e / 2 + 1; _0x4ffb83 < _0x409e9e; _0x4ffb83++) _0x4a3c40[_0x4ffb83] ^= _0x4a3c40[_0x4ffb83 - 1];
            let _0x524e46, _0x3eabad, _0x5f8065 = 0;
            for (; _0x5f8065 < _0x409e9e && t2 < _0x21d5c1; ) _0x524e46 = t2 >> 2, _0x3eabad = t2 % 4, _0x184b5a[_0x524e46][_0x3eabad] = _0x4a3c40[_0x5f8065], _0x1eac5f[_0x1ce762 - _0x524e46][_0x3eabad] = _0x4a3c40[_0x5f8065++], t2++;
          }
          for (let _0x4e0eff = 1; _0x4e0eff < _0x1ce762; _0x4e0eff++) for (let _0x34a57b = 0; _0x34a57b < 4; _0x34a57b++) _0x3f81ef = _0x1eac5f[_0x4e0eff][_0x34a57b], _0x1eac5f[_0x4e0eff][_0x34a57b] = _0xbb66e2[_0x1b46da([85, 49])][_0x3f81ef >> 24 & 255] ^ _0xbb66e2[_0x1b46da([85, 50])][_0x3f81ef >> 16 & 255] ^ _0xbb66e2[_0x1b46da([85, 51])][_0x3f81ef >> 8 & 255] ^ _0xbb66e2[_0x1b46da([85, 52])][255 & _0x3f81ef];
        }
      }
      function _0x1b46da(_0x1758c1) {
        return _0x1758c1["map"]((_0x5b289a) => String["fromCharCode"](_0x5b289a))["join"]("");
      }
      ((_0x426d42) => {
        function _0x5e4da1() {
          const _0x62863 = [{ [_0x1b46da([105, 100])]: 1, [_0x1b46da([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x1b46da([67, 111, 109, 109, 101, 110, 116, 115]), [_0x1b46da([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x1b46da([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]), [_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x1b46da([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x1b46da([104, 97, 110, 100, 108, 101, 114])]: _0x1b46da([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x1b46da([99, 104, 101, 99, 107, 65, 108, 115, 111])]: [{ [_0x1b46da([105, 100])]: 2, [_0x1b46da([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x1b46da([84, 114, 97, 99, 107, 32, 67, 104, 97, 110, 103, 101, 115]), [_0x1b46da([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x1b46da([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103]), [_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x1b46da([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x1b46da([104, 97, 110, 100, 108, 101, 114])]: _0x1b46da([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115]), [_0x1b46da([111, 112, 116, 105, 111, 110, 115])]: { [_0x1b46da([97, 105, 119, 115, 103, 105, 99])]: true, [_0x1b46da([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x1b46da([97, 105, 114, 118, 105, 105, 108])]: true } }], [_0x1b46da([111, 112, 116, 105, 111, 110, 115])]: { [_0x1b46da([97, 105, 119, 115, 103, 105, 99])]: true, [_0x1b46da([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x1b46da([97, 105, 114, 118, 105, 105, 108])]: true } }, { [_0x1b46da([105, 100])]: 3, [_0x1b46da([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x1b46da([80, 97, 103, 105, 110, 97, 116, 105, 111, 110]), [_0x1b46da([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x1b46da([80, 97, 103, 105, 110, 97, 116, 105, 111, 110, 76, 111, 111, 107, 117, 112]), [_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x1b46da([112, 97, 103, 105, 110, 97, 116, 105, 111, 110, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x1b46da([104, 97, 110, 100, 108, 101, 114])]: _0x1b46da([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x1b46da([105, 100])]: 4, [_0x1b46da([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x1b46da([82, 101, 118, 105, 115, 105, 111, 110, 32, 72, 105, 115, 116, 111, 114, 121]), [_0x1b46da([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x1b46da([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]), [_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x1b46da([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x1b46da([104, 97, 110, 100, 108, 101, 114])]: _0x1b46da([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 82, 101, 118, 105, 115, 105, 111, 110, 72, 105, 115, 116, 111, 114, 121]), [_0x1b46da([111, 112, 116, 105, 111, 110, 115])]: { [_0x1b46da([97, 105, 119, 115, 103, 105, 99])]: true, [_0x1b46da([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x1b46da([97, 105, 114, 118, 105, 105, 108])]: true } }, { [_0x1b46da([105, 100])]: 5, [_0x1b46da([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x1b46da([68, 111, 99, 117, 109, 101, 110, 116, 32, 79, 117, 116, 108, 105, 110, 101]), [_0x1b46da([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x1b46da([68, 111, 99, 117, 109, 101, 110, 116, 79, 117, 116, 108, 105, 110, 101, 85, 73]), [_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x1b46da([100, 111, 99, 117, 109, 101, 110, 116, 79, 117, 116, 108, 105, 110, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x1b46da([104, 97, 110, 100, 108, 101, 114])]: _0x1b46da([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x1b46da([111, 112, 116, 105, 111, 110, 115])]: { [_0x1b46da([102, 103, 105])]: [12] } }, { [_0x1b46da([105, 100])]: 6, [_0x1b46da([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x1b46da([70, 111, 114, 109, 97, 116, 32, 80, 97, 105, 110, 116, 101, 114]), [_0x1b46da([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x1b46da([70, 111, 114, 109, 97, 116, 80, 97, 105, 110, 116, 101, 114, 85, 73]), [_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x1b46da([102, 111, 114, 109, 97, 116, 80, 97, 105, 110, 116, 101, 114, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x1b46da([104, 97, 110, 100, 108, 101, 114])]: _0x1b46da([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x1b46da([111, 112, 116, 105, 111, 110, 115])]: { [_0x1b46da([102, 103, 105])]: [12] } }, { [_0x1b46da([105, 100])]: 7, [_0x1b46da([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x1b46da([83, 108, 97, 115, 104, 32, 67, 111, 109, 109, 97, 110, 100]), [_0x1b46da([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x1b46da([83, 108, 97, 115, 104, 67, 111, 109, 109, 97, 110, 100, 85, 73]), [_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x1b46da([115, 108, 97, 115, 104, 67, 111, 109, 109, 97, 110, 100, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x1b46da([104, 97, 110, 100, 108, 101, 114])]: _0x1b46da([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x1b46da([111, 112, 116, 105, 111, 110, 115])]: { [_0x1b46da([102, 103, 105])]: [12] } }, { [_0x1b46da([105, 100])]: 8, [_0x1b46da([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x1b46da([84, 97, 98, 108, 101, 32, 111, 102, 32, 67, 111, 110, 116, 101, 110, 116, 115]), [_0x1b46da([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x1b46da([84, 97, 98, 108, 101, 79, 102, 67, 111, 110, 116, 101, 110, 116, 115, 69, 100, 105, 116, 105, 110, 103]), [_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x1b46da([116, 97, 98, 108, 101, 79, 102, 67, 111, 110, 116, 101, 110, 116, 115, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x1b46da([104, 97, 110, 100, 108, 101, 114])]: _0x1b46da([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x1b46da([111, 112, 116, 105, 111, 110, 115])]: { [_0x1b46da([102, 103, 105])]: [12] } }, { [_0x1b46da([105, 100])]: 9, [_0x1b46da([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x1b46da([84, 101, 109, 112, 108, 97, 116, 101]), [_0x1b46da([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x1b46da([84, 101, 109, 112, 108, 97, 116, 101, 85, 73]), [_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x1b46da([116, 101, 109, 112, 108, 97, 116, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x1b46da([104, 97, 110, 100, 108, 101, 114])]: _0x1b46da([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x1b46da([111, 112, 116, 105, 111, 110, 115])]: { [_0x1b46da([102, 103, 105])]: [12, 14] } }, { [_0x1b46da([105, 100])]: 10, [_0x1b46da([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x1b46da([80, 97, 115, 116, 101, 32, 102, 114, 111, 109, 32, 79, 102, 102, 105, 99, 101, 32, 69, 110, 104, 97, 110, 99, 101, 100]), [_0x1b46da([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x1b46da([80, 97, 115, 116, 101, 70, 114, 111, 109, 79, 102, 102, 105, 99, 101, 69, 110, 104, 97, 110, 99, 101, 100, 73, 110, 108, 105, 110, 101, 114]), [_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x1b46da([112, 97, 115, 116, 101, 70, 114, 111, 109, 79, 102, 102, 105, 99, 101, 69, 110, 104, 97, 110, 99, 101, 100, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x1b46da([104, 97, 110, 100, 108, 101, 114])]: _0x1b46da([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x1b46da([111, 112, 116, 105, 111, 110, 115])]: { [_0x1b46da([102, 103, 105])]: [12] } }, { [_0x1b46da([105, 100])]: 11, [_0x1b46da([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x1b46da([65, 73, 32, 65, 115, 115, 105, 115, 116, 97, 110, 116]), [_0x1b46da([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x1b46da([65, 73, 65, 115, 115, 105, 115, 116, 97, 110, 116, 85, 73]), [_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x1b46da([97, 105, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x1b46da([104, 97, 110, 100, 108, 101, 114])]: _0x1b46da([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x1b46da([105, 100])]: 12, [_0x1b46da([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x1b46da([80, 114, 111, 100, 117, 99, 116, 105, 118, 105, 116, 121, 32, 112, 97, 99, 107]) }, { [_0x1b46da([105, 100])]: 13, [_0x1b46da([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x1b46da([67, 97, 115, 101, 32, 67, 104, 97, 110, 103, 101]), [_0x1b46da([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x1b46da([67, 97, 115, 101, 67, 104, 97, 110, 103, 101, 85, 73]), [_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x1b46da([99, 97, 115, 101, 67, 104, 97, 110, 103, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x1b46da([104, 97, 110, 100, 108, 101, 114])]: _0x1b46da([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x1b46da([111, 112, 116, 105, 111, 110, 115])]: { [_0x1b46da([102, 103, 105])]: [12] } }, { [_0x1b46da([105, 100])]: 14, [_0x1b46da([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x1b46da([68, 114, 117, 112, 97, 108, 32, 112, 97, 99, 107]), [_0x1b46da([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114])]: _0x1b46da([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114, 70, 111, 114, 68, 114, 117, 112, 97, 108]) }, { [_0x1b46da([105, 100])]: 15, [_0x1b46da([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x1b46da([77, 117, 108, 116, 105, 32, 76, 101, 118, 101, 108, 32, 76, 105, 115, 116]), [_0x1b46da([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x1b46da([77, 117, 108, 116, 105, 76, 101, 118, 101, 108, 76, 105, 115, 116, 69, 100, 105, 116, 105, 110, 103]), [_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x1b46da([109, 117, 108, 116, 105, 76, 101, 118, 101, 108, 76, 105, 115, 116, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x1b46da([104, 97, 110, 100, 108, 101, 114])]: _0x1b46da([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x1b46da([105, 100])]: 16, [_0x1b46da([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x1b46da([77, 101, 114, 103, 101, 32, 70, 105, 101, 108, 100, 115]), [_0x1b46da([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x1b46da([77, 101, 114, 103, 101, 70, 105, 101, 108, 100, 115, 85, 73]), [_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x1b46da([109, 101, 114, 103, 101, 70, 105, 101, 108, 100, 115, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x1b46da([104, 97, 110, 100, 108, 101, 114])]: _0x1b46da([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x1b46da([111, 112, 116, 105, 111, 110, 115])]: { [_0x1b46da([102, 103, 105])]: [12] } }];
          return _0x353f54(_0x62863), _0x62863;
          function _0x57d87b(_0x1331db) {
            return 1 << _0x1331db - 1;
          }
          function _0x353f54(_0xc30c96) {
            _0xc30c96[_0x1b46da([102, 111, 114, 69, 97, 99, 104])]((_0x46f072) => {
              _0x46f072[_0x1b46da([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])] = _0x57d87b(_0x46f072[_0x1b46da([105, 100])]), _0x51d4b7(_0x46f072) && _0x46f072[_0x1b46da([99, 104, 101, 99, 107, 65, 108, 115, 111])] && _0x353f54(_0x46f072[_0x1b46da([99, 104, 101, 99, 107, 65, 108, 115, 111])]);
            });
          }
        }
        function _0x51d4b7(_0x1b3b80) {
          return _0x1b46da([112, 108, 117, 103, 105, 110, 78, 97, 109, 101]) in _0x1b3b80;
        }
        const _0x38c31b = [1, 85, 78, 115, 198, 255, 50, 112, 83, 87, 161], _0x2ef6c8 = [127, 34, 6, 211, 167, 86, 146, 199, 132, 160, 18];
        function _0x5aecd7(_0x1cebd6) {
          const _0x13b770 = [29, 221, 175, 90, 231, 133, 239, 240, 75, 180];
          return _0x177aae(_0x1cebd6, new Uint8Array([..._0x38c31b, ..._0x13b770, ..._0x2ef6c8]));
        }
        function _0x177aae(_0x2cc9d2, _0x568748) {
          const _0x102d6a = _0x31ff60(_0x2cc9d2), _0x39eab5 = Array[_0x1b46da([102, 114, 111, 109])](_0xa704(_0x102d6a)), _0x7f6504 = _0x39eab5[_0x1b46da([112, 111, 112])](), _0x297704 = _0x39eab5[_0x1b46da([112, 111, 112])]();
          return _0x57e02b(_0x1932ef(_0x39eab5, _0x568748, _0x297704 + 256 * _0x7f6504));
        }
        function _0x31ff60(_0x31772d) {
          const _0x14e820 = atob(_0x31772d), [_0x9c0279, _0x3431be] = _0x14e820[_0x1b46da([115, 112, 108, 105, 116])](_0x1b46da([45]));
          try {
            if (atob(_0x3431be)) return atob(_0x9c0279);
          } catch (_0x20971f) {
          }
          return _0x14e820;
        }
        function _0x51eadf(_0x169e63) {
          try {
            const _0x38ca97 = _0x5aecd7(_0x169e63), _0x24a903 = JSON[_0x1b46da([112, 97, 114, 115, 101])](_0x38ca97), _0x4f34fe = parseInt(_0x24a903[_0x1b46da([49])]), _0x588b70 = _0x24a903[_0x1b46da([50])] || "", _0x4b1bb0 = parseInt(_0x24a903[_0x1b46da([51])]), _0x12b050 = parseInt(_0x24a903[_0x1b46da([52])]) || 0, _0x569230 = parseInt(_0x24a903[_0x1b46da([53])]) || 0;
            return { [_0x1b46da([112, 114, 111, 100, 117, 99, 116, 78, 97, 109, 101])]: _0x588b70, [_0x1b46da([97, 108, 108, 111, 119, 101, 100, 80, 108, 117, 103, 105, 110, 115])]: _0x12b050, [_0x1b46da([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])]: _0x4f34fe, [_0x1b46da([105, 115, 84, 114, 105, 97, 108])]: _0x4b1bb0, [_0x1b46da([105, 115, 73, 110, 116, 101, 114, 110, 97, 108])]: _0x569230 };
          } catch (_0x57df93) {
            return null;
          }
        }
        const _0x371cb0 = _0x5e4da1(), _0x4c69fa = { [_0x1b46da([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101])]: _0x225865, [_0x1b46da([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115])]: _0x3def28, [_0x1b46da([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 82, 101, 118, 105, 115, 105, 111, 110, 72, 105, 115, 116, 111, 114, 121])]: _0x436576 }, _0x2b6622 = _0x426d42[_0x1b46da([99, 111, 110, 115, 116, 114, 117, 99, 116, 111, 114])][_0x1b46da([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])], _0x146d77 = _0x1b46da([99, 111, 110, 116, 101, 120, 116]) in _0x426d42 ? _0x426d42["context"] : _0x426d42["editor"], _0x5cfb40 = _0x1b46da([52, 48, 52, 56, 50, 50, 49, 50]), _0x194be7 = _0x1b46da([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]), _0x19ee4a = _0x146d77["config"]["get"](_0x1b46da([108, 105, 99, 101, 110, 115, 101, 75, 101, 121])), _0x55e769 = _0x371cb0[_0x1b46da([102, 105, 108, 116, 101, 114])](_0x51d4b7)[_0x1b46da([102, 105, 110, 100])]((_0x3992f9) => _0x3992f9[_0x1b46da([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])] === _0x2b6622);
        function _0x57df24(_0x30cda3, _0x149e81) {
          _0x4c69fa[_0x149e81[_0x1b46da([104, 97, 110, 100, 108, 101, 114])]](_0x30cda3, _0x149e81), _0x149e81[_0x1b46da([99, 104, 101, 99, 107, 65, 108, 115, 111])] && _0x149e81[_0x1b46da([99, 104, 101, 99, 107, 65, 108, 115, 111])][_0x1b46da([102, 105, 108, 116, 101, 114])]((_0x4184de) => _0x520890(_0x146d77, _0x4184de[_0x1b46da([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]))[_0x1b46da([102, 111, 114, 69, 97, 99, 104])]((_0x1a9ea3) => _0x57df24(_0x30cda3, _0x1a9ea3));
        }
        function _0x225865(_0x4373cb, _0x49ec20) {
          _0x49c7d4(_0x164fe4(_0x4373cb, _0x49ec20), _0x49ec20);
        }
        function _0x3def28(_0x5fb851, _0x4c074e) {
          function _0x52295e(_0x341eba, _0x54fe29) {
            try {
              if (_0x520890(_0x146d77, _0x1b46da([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103])) && _0x341eba) {
                const _0x172708 = _0x586728(_0x146d77, _0x1b46da([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103]))[_0x1b46da([95, 101, 120, 101, 99, 117, 116, 101, 83, 117, 103, 103, 101, 115, 116, 105, 111, 110])];
                if (parseInt(_0x172708) / 2 > _0x341eba[_0x1b46da([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])]) return _0x289cb1(_0x54fe29[_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x1b46da([73, 110, 118, 97, 108, 105, 100]));
              }
              return _0x164fe4(_0x341eba, _0x54fe29);
            } catch (_0x44be2f) {
              return _0x289cb1(_0x54fe29[_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x1b46da([73, 110, 118, 97, 108, 105, 100]));
            }
          }
          _0x49c7d4(_0x52295e(_0x5fb851, _0x4c074e), _0x4c074e);
        }
        function _0x436576(_0xf62b2c, _0x5efb84) {
          const _0x1ab83b = _0x2ef6c8[0] * _0x38c31b[1], _0x4ecf91 = _0x2ef6c8[0] * _0x38c31b[2], _0x4829c8 = _0x2ef6c8[2] * _0x38c31b[2];
          _0x520890(_0x146d77, _0x1b46da([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121])) && _0x586728(_0x146d77, _0x1b46da([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121]))[_0x1b46da([115, 116, 97, 116, 101])] == _0x1b46da([99, 111, 110, 110, 101, 99, 116, 101, 100]) && (window[_0x58ccdc()] = _0x4829c8);
          function _0x511b32(_0x346f08, _0x3aa547) {
            try {
              return _0x5f4474() ? _0x289cb1(_0x3aa547[_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x1b46da([86, 97, 108, 105, 100])) : _0x164fe4(_0x346f08, _0x3aa547);
            } catch (_0x283b7c) {
              return _0x289cb1(_0x3aa547[_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x1b46da([73, 110, 118, 97, 108, 105, 100]));
            }
          }
          function _0x377556(_0x4a496d, _0x3fa69) {
            const _0x2a8c70 = 7;
            if (_0x4a496d == _0x3fa69[_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x1b46da([73, 110, 118, 97, 108, 105, 100])) _0x3a2853();
            else {
              if (_0x4a496d == _0x3fa69[_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x1b46da([84, 114, 105, 97, 108])) {
                const _0x189031 = _0x41669c();
                _0x189031 && _0x12524d(_0x189031, _0x3fa69[_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                const _0x192053 = _0x429c2d();
                window[_0x1b46da([115, 101, 116, 84, 105, 109, 101, 111, 117, 116])](() => {
                  _0x12524d(_0x1b46da([116, 105, 109, 101]), _0x3fa69[_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                }, _0x192053);
                const _0x473c8d = _0x586728(_0x146d77, _0x1b46da([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x1b46da([95, 114, 101, 118, 105, 115, 105, 111, 110, 115])];
                _0x473c8d[_0x1b46da([108, 101, 110, 103, 116, 104])] >= _0x2a8c70 ? _0x12524d(_0x1b46da([114, 101, 118, 105, 115, 105, 111, 110, 115]), _0x3fa69[_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]) : _0x473c8d["on"](_0x1b46da([97, 100, 100]), () => {
                  _0x473c8d[_0x1b46da([108, 101, 110, 103, 116, 104])] >= _0x2a8c70 && _0x12524d(_0x1b46da([114, 101, 118, 105, 115, 105, 111, 110, 115]), _0x3fa69[_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                });
              }
            }
          }
          function _0x41669c() {
            if (!_0x520890(_0x146d77, _0x1b46da([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) return false;
            for (const _0x23892c in window) if (Number["isNaN"](Number(_0x23892c))) {
              if (window[_0x23892c] === _0x1ab83b) return _0x1b46da([116, 105, 109, 101]);
              if (window[_0x23892c] === _0x4ecf91) return _0x1b46da([114, 101, 118, 105, 115, 105, 111, 110, 115]);
            }
            return false;
          }
          function _0x5f4474() {
            if (!_0x520890(_0x146d77, _0x1b46da([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) return false;
            for (const _0x28e14e in window) if (Number["isNaN"](Number(_0x28e14e)) && window[_0x28e14e] === _0x4829c8) return true;
            return false;
          }
          function _0x12524d(_0x5d218f, _0x1654f6) {
            _0x3a2853(), _0x289cb1(_0x1654f6 + _0x1b46da([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58]) + _0x5d218f), window[_0x58ccdc()] = _0x5d218f === _0x1b46da([116, 105, 109, 101]) ? _0x1ab83b : _0x4ecf91;
          }
          function _0x429c2d() {
            let _0x53e87b = _0x2ef6c8[6] * _0x38c31b[8] * _0x38c31b[6];
            return _0x520890(_0x146d77, _0x1b46da([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114])) && (_0x53e87b /= 10), _0x53e87b;
          }
          function _0x3a2853() {
            const _0x3e2454 = _0x146d77;
            function _0x1dcaa7() {
              _0x520890(_0x3e2454, _0x1b46da([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114])) && (_0x586728(_0x3e2454, _0x1b46da([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x1b46da([117, 110, 98, 105, 110, 100])](_0x1b46da([105, 115, 69, 110, 97, 98, 108, 101, 100])), _0x586728(_0x3e2454, _0x1b46da([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x1b46da([105, 115, 69, 110, 97, 98, 108, 101, 100])] = false, _0x586728(_0x3e2454, _0x1b46da([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x1b46da([117, 112, 100, 97, 116, 101])] = _0xedff47, _0x586728(_0x3e2454, _0x1b46da([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x1b46da([115, 97, 118, 101, 82, 101, 118, 105, 115, 105, 111, 110])] = _0xedff47, _0x3e2454[_0x1b46da([109, 111, 100, 101, 108])][_0x1b46da([99, 104, 97, 110, 103, 101])] = _0xedff47, _0x3e2454[_0x1b46da([109, 111, 100, 101, 108])][_0x1b46da([101, 110, 113, 117, 101, 117, 101, 67, 104, 97, 110, 103, 101])] = _0xedff47, _0x3e2454[_0x1b46da([101, 110, 97, 98, 108, 101, 82, 101, 97, 100, 79, 110, 108, 121, 77, 111, 100, 101])](_0x1b46da([109, 111, 100, 101, 108]))), _0x520890(_0x3e2454, _0x1b46da([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114])) && (_0x586728(_0x3e2454, _0x1b46da([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x1b46da([117, 110, 98, 105, 110, 100])](_0x1b46da([105, 115, 69, 110, 97, 98, 108, 101, 100])), _0x586728(_0x3e2454, _0x1b46da([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x1b46da([105, 115, 69, 110, 97, 98, 108, 101, 100])] = false, _0x586728(_0x3e2454, _0x1b46da([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x1b46da([99, 111, 109, 112, 97, 114, 101])] = _0xedff47, _0x586728(_0x3e2454, _0x1b46da([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x1b46da([95, 103, 101, 116, 68, 105, 102, 102])] = _0xedff47);
            }
            _0x3e2454[_0x1b46da([115, 116, 97, 116, 101])] == _0x1b46da([114, 101, 97, 100, 121]) ? _0x1dcaa7() : _0x3e2454[_0x1b46da([111, 110, 99, 101])](_0x1b46da([114, 101, 97, 100, 121]), () => {
              if (_0x520890(_0x3e2454, _0x1b46da([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114])) && _0x1dcaa7(), _0x520890(_0x3e2454, _0x1b46da([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) {
                const _0xba8cad = _0x586728(_0x3e2454, _0x1b46da([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121])), _0x2b3d49 = _0xba8cad["getRevision"](0), _0x321f12 = _0xba8cad["getEarlierVisibleRevision"](_0x2b3d49[_0x1b46da([105, 100])]);
                _0x586728(_0x3e2454, _0x1b46da([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x1b46da([99, 111, 109, 112, 97, 114, 101])](_0x2b3d49[_0x1b46da([105, 100])], _0x321f12 ? _0x321f12[_0x1b46da([105, 100])] : null, 1)["then"](() => _0x1dcaa7());
              }
            });
          }
          _0x377556(_0x511b32(_0xf62b2c, _0x5efb84), _0x5efb84);
        }
        function _0x164fe4(_0x18a534, _0x492c3e) {
          try {
            return _0x855d64(_0x492c3e) ? _0x289cb1(_0x492c3e[_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x1b46da([86, 97, 108, 105, 100])) : _0x18a534 && _0x42f427(_0x18a534[_0x1b46da([97, 108, 108, 111, 119, 101, 100, 80, 108, 117, 103, 105, 110, 115])], _0x492c3e) ? _0x18a534[_0x1b46da([105, 115, 73, 110, 116, 101, 114, 110, 97, 108])] && !window[_0x1b46da([111, 112, 101, 110])][_0x1b46da([99, 108, 111, 115, 101, 100])] || parseInt(_0x5cfb40) / 2 > _0x18a534[_0x1b46da([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])] ? _0x289cb1(_0x492c3e[_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x1b46da([73, 110, 118, 97, 108, 105, 100])) : _0x18a534[_0x1b46da([105, 115, 84, 114, 105, 97, 108])] ? _0x289cb1(_0x492c3e[_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x1b46da([84, 114, 105, 97, 108])) : _0x289cb1(_0x492c3e[_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x1b46da([86, 97, 108, 105, 100])) : _0x289cb1(_0x492c3e[_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x1b46da([73, 110, 118, 97, 108, 105, 100]));
          } catch (_0x1d1726) {
            return _0x289cb1(_0x492c3e[_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x1b46da([73, 110, 118, 97, 108, 105, 100]));
          }
        }
        function _0x49c7d4(_0x33a3fd, _0x24d443) {
          if (_0x146d77 instanceof Context) {
            const _0x23aad6 = _0x146d77;
            _0x33a3fd == _0x24d443[_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x1b46da([73, 110, 118, 97, 108, 105, 100]) ? _0x4f3e0c(_0x23aad6) : _0x33a3fd == _0x24d443[_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x1b46da([84, 114, 105, 97, 108]) && window[_0x1b46da([115, 101, 116, 84, 105, 109, 101, 111, 117, 116])](() => {
              _0x4f3e0c(_0x23aad6), _0x289cb1(_0x24d443[_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x1b46da([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 116, 105, 109, 101]));
            }, _0x2ef6c8[6] * _0x38c31b[8] * _0x38c31b[6]), _0x23aad6[_0x1b46da([101, 100, 105, 116, 111, 114, 115])][_0x1b46da([111, 110])](_0x1b46da([97, 100, 100]), (_0x5be27a, _0x190ac0) => {
              _0x33a3fd != _0x24d443[_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x1b46da([73, 110, 118, 97, 108, 105, 100]) && _0x33a3fd != _0x24d443[_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x1b46da([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 116, 105, 109, 101]) && _0x33a3fd != _0x24d443[_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x1b46da([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 111, 112, 101, 114, 97, 116, 105, 111, 110, 115]) || _0x1062c1(_0x190ac0);
            });
          } else {
            const _0x3c1855 = _0x146d77;
            _0x33a3fd == _0x24d443[_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x1b46da([73, 110, 118, 97, 108, 105, 100]) ? _0x1062c1(_0x3c1855) : _0x33a3fd == _0x24d443[_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x1b46da([84, 114, 105, 97, 108]) && _0x3c1855[_0x1b46da([111, 110])](_0x1b46da([114, 101, 97, 100, 121]), () => {
              let _0x5152f6 = 0;
              _0x3c1855[_0x1b46da([109, 111, 100, 101, 108])][_0x1b46da([111, 110])](_0x1b46da([97, 112, 112, 108, 121, 79, 112, 101, 114, 97, 116, 105, 111, 110]), (_0xfdfddc, _0x524c23) => {
                _0x524c23[0][_0x1b46da([105, 115, 68, 111, 99, 117, 109, 101, 110, 116, 79, 112, 101, 114, 97, 116, 105, 111, 110])] && _0x5152f6++, 504 === _0x5152f6 && (_0x1062c1(_0x3c1855), _0x289cb1(_0x24d443[_0x1b46da([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x1b46da([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 111, 112, 101, 114, 97, 116, 105, 111, 110, 115])), _0xfdfddc[_0x1b46da([111, 102, 102])]());
              }, { "priority": _0x1b46da([104, 105, 103, 104, 101, 115, 116]) });
            });
          }
        }
        function _0x289cb1(_0x176aad) {
          const _0x1569b7 = _0x58ccdc();
          return _0x146d77[_0x1569b7] = _0x176aad, _0x176aad;
        }
        function _0x58ccdc() {
          const _0x3a6dc4 = String(window[_0x1b46da([112, 101, 114, 102, 111, 114, 109, 97, 110, 99, 101])][_0x1b46da([110, 111, 119])]())[_0x1b46da([114, 101, 112, 108, 97, 99, 101])](_0x1b46da([46]), "");
          let _0x952af0 = "";
          for (let _0x4fc92a = 0; _0x4fc92a < _0x3a6dc4[_0x1b46da([108, 101, 110, 103, 116, 104])]; _0x4fc92a += 2) {
            let _0xdf3018 = parseInt(_0x3a6dc4[_0x1b46da([115, 117, 98, 115, 116, 114, 105, 110, 103])](_0x4fc92a, _0x4fc92a + 2));
            _0xdf3018 >= _0x194be7[_0x1b46da([108, 101, 110, 103, 116, 104])] && (_0xdf3018 -= _0x194be7[_0x1b46da([108, 101, 110, 103, 116, 104])]), _0x952af0 += _0x194be7[_0xdf3018];
          }
          return _0x952af0;
        }
        function _0x4f3e0c(_0x36dfcb) {
          for (const _0x5eb9de of _0x36dfcb[_0x1b46da([101, 100, 105, 116, 111, 114, 115])]) _0x1062c1(_0x5eb9de);
          _0x586728(_0x36dfcb, _0x1b46da([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x1b46da([115, 119, 105, 116, 99, 104, 82, 101, 97, 100, 79, 110, 108, 121])](true), _0x586728(_0x36dfcb, _0x1b46da([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x1b46da([115, 119, 105, 116, 99, 104, 82, 101, 97, 100, 79, 110, 108, 121])] = _0xedff47;
        }
        function _0x1062c1(_0xbbd2c3) {
          function _0xa3aa39() {
            _0xbbd2c3[_0x1b46da([109, 111, 100, 101, 108])][_0x1b46da([99, 104, 97, 110, 103, 101])] = _0xedff47, _0xbbd2c3[_0x1b46da([109, 111, 100, 101, 108])][_0x1b46da([101, 110, 113, 117, 101, 117, 101, 67, 104, 97, 110, 103, 101])] = _0xedff47, _0xbbd2c3[_0x1b46da([101, 110, 97, 98, 108, 101, 82, 101, 97, 100, 79, 110, 108, 121, 77, 111, 100, 101])](_0x1b46da([109, 111, 100, 101, 108]));
          }
          _0xbbd2c3[_0x1b46da([115, 116, 97, 116, 101])] == _0x1b46da([114, 101, 97, 100, 121]) ? _0xa3aa39() : _0xbbd2c3[_0x1b46da([111, 110, 99, 101])](_0x1b46da([114, 101, 97, 100, 121]), () => _0xa3aa39());
        }
        function _0xedff47() {
          return null;
        }
        function _0x42f427(_0x51cd0c, _0x22f492) {
          const _0x477de3 = !!(_0x51cd0c & _0x22f492[_0x1b46da([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])]), _0x3b4309 = _0x3c4995(_0x51cd0c, _0x22f492);
          return _0x477de3 || _0x3b4309;
        }
        function _0x3c4995(_0x16412c, _0x3d5aa9) {
          const _0x9089fa = (_0x3d5aa9[_0x1b46da([111, 112, 116, 105, 111, 110, 115])] || {})[_0x1b46da([102, 103, 105])] || null;
          return !!_0x9089fa && _0x371cb0[_0x1b46da([102, 105, 108, 116, 101, 114])]((_0x577e1b) => _0x9089fa[_0x1b46da([105, 110, 99, 108, 117, 100, 101, 115])](_0x577e1b[_0x1b46da([105, 100])]))[_0x1b46da([102, 105, 108, 116, 101, 114])]((_0x1752ee) => !_0x43ef65(_0x1752ee))[_0x1b46da([115, 111, 109, 101])]((_0x16e803) => !!(_0x16412c & _0x16e803[_0x1b46da([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])]));
        }
        function _0x43ef65(_0xd7c1b6) {
          const _0x33627b = { [_0x1b46da([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114, 70, 111, 114, 68, 114, 117, 112, 97, 108])]: _0x5ef6b6 };
          return !!_0xd7c1b6["forbiddenHandler"] && _0x33627b[_0xd7c1b6["forbiddenHandler"]]();
        }
        function _0x5ef6b6() {
          return !window[_0x1b46da([68, 114, 117, 112, 97, 108])] || !_0x520890(_0x146d77, _0x1b46da([100, 114, 117, 112, 97, 108, 80, 111, 119, 101, 114, 101, 100, 66, 121]));
        }
        function _0x855d64(_0x3c900d) {
          if (!_0x520890(_0x146d77, _0x3c900d[_0x1b46da([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])])) return true;
          const _0x291853 = _0x3c900d[_0x1b46da([111, 112, 116, 105, 111, 110, 115])] || {}, _0x2f316d = _0x291853[_0x1b46da([97, 105, 119, 115, 103, 105, 99])] || false, _0x29f34c = _0x291853[_0x1b46da([97, 105, 116, 99, 100, 103, 105, 108])] || false, _0x569670 = _0x291853[_0x1b46da([97, 105, 114, 118, 105, 105, 108])] || false;
          if (_0x520890(_0x146d77, _0x1b46da([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121])) && _0x586728(_0x146d77, _0x1b46da([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121]))[_0x1b46da([115, 116, 97, 116, 101])] == _0x1b46da([99, 111, 110, 110, 101, 99, 116, 101, 100]) && _0x2f316d) return true;
          if (_0x520890(_0x146d77, _0x1b46da([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 68, 97, 116, 97, 71, 101, 116, 116, 101, 114])) && _0x586728(_0x146d77, _0x1b46da([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 68, 97, 116, 97, 71, 101, 116, 116, 101, 114]))[_0x1b46da([114, 101, 115, 117, 108, 116])] == _0x1b46da([101, 110, 100]) && _0x29f34c) return true;
          return !(!_0x520890(_0x146d77, _0x1b46da([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114, 73, 110, 116, 101, 103, 114, 97, 116, 105, 111, 110])) || _0x586728(_0x146d77, _0x1b46da([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114, 73, 110, 116, 101, 103, 114, 97, 116, 105, 111, 110]))[_0x1b46da([114, 101, 115, 117, 108, 116])] != _0x1b46da([101, 110, 100]) || !_0x569670);
        }
        function _0x520890(_0x201842, _0x167cd8) {
          return _0x201842[_0x1b46da([112, 108, 117, 103, 105, 110, 115])][_0x1b46da([104, 97, 115])](_0x167cd8);
        }
        function _0x586728(_0xc10e78, _0x2ab575) {
          return _0xc10e78[_0x1b46da([112, 108, 117, 103, 105, 110, 115])][_0x1b46da([103, 101, 116])](_0x2ab575);
        }
        function _0x57e02b(_0x21a2c7) {
          let _0x2074b7 = "";
          for (const _0xbf0240 of _0x21a2c7) _0x2074b7 += String[_0x1b46da([102, 114, 111, 109, 67, 104, 97, 114, 67, 111, 100, 101])](_0xbf0240);
          return _0x2074b7;
        }
        function _0xa704(_0x1ddfb3) {
          const _0x4fa324 = new Uint8Array(_0x1ddfb3[_0x1b46da([108, 101, 110, 103, 116, 104])]);
          for (let _0x3989a4 = 0; _0x3989a4 < _0x1ddfb3[_0x1b46da([108, 101, 110, 103, 116, 104])]; _0x3989a4++) _0x4fa324[_0x3989a4] = _0x1ddfb3[_0x1b46da([99, 104, 97, 114, 67, 111, 100, 101, 65, 116])](_0x3989a4);
          return _0x4fa324;
        }
        _0x55e769 && _0x57df24(_0x51eadf(_0x19ee4a), _0x55e769);
      })(_0xeb1f00);
    }(this);
  }
  ["_registerComponents"]() {
    const _0x5055e2 = this["editor"], { itemDefinitions: _0x53c94c, commands: _0x1185d6 } = this["_getListItemDefinitionsAndCommands"]();
    _0x5055e2["ui"]["componentFactory"]["add"]("caseChange", () => this["_createDropdownView"](_0x53c94c, _0x1185d6)), _0x5055e2["ui"]["componentFactory"]["add"]("menuBar:caseChange", () => this["_createMenuBarMenuView"](_0x53c94c, _0x1185d6));
  }
  ["_createMenuBarMenuView"](_0x1a48e7, _0x1ce2a4) {
    const _0x56104b = this["editor"], _0x200dcc = _0x56104b["locale"], _0x5622d3 = new MenuBarMenuView(_0x200dcc), _0x537efc = new MenuBarMenuListView(_0x200dcc);
    _0x537efc["set"]({ "ariaLabel": c3(_0x200dcc, "Case change"), "role": "menu" }), this["_setButtonProperties"](_0x5622d3["buttonView"]), _0x5622d3["bind"]("isEnabled")["toMany"](_0x1ce2a4, "isEnabled", (..._0x445edc) => _0x445edc["some"]((_0x32f844) => _0x32f844));
    for (const _0x503714 of _0x1a48e7) {
      const _0x4ffe93 = new MenuBarMenuListItemView(_0x200dcc, _0x5622d3), _0x1da1fb = new MenuBarMenuListItemButtonView(_0x200dcc);
      _0x1da1fb["delegate"]("execute")["to"](_0x5622d3), _0x1da1fb["bind"](...Object["keys"](_0x503714["model"]))["to"](_0x503714["model"]), _0x1da1fb["on"]("execute", () => {
        _0x56104b["execute"](_0x503714["model"]["commandName"]), _0x56104b["editing"]["view"]["focus"]();
      }), _0x4ffe93["children"]["add"](_0x1da1fb), _0x537efc["items"]["add"](_0x4ffe93);
    }
    return _0x5622d3["panelView"]["children"]["add"](_0x537efc), _0x5622d3;
  }
  ["_createDropdownView"](_0x71c95, _0x1364b1) {
    const _0x3aa605 = this["editor"], _0x1cb9ab = createDropdown(_0x3aa605["locale"]);
    return this["_setButtonProperties"](_0x1cb9ab["buttonView"]), _0x1cb9ab["buttonView"]["set"]({ "tooltip": true }), _0x1cb9ab["extendTemplate"]({ "attributes": { "class": ["ck-case-change-dropdown"] } }), addListToDropdown(_0x1cb9ab, _0x71c95, { "ariaLabel": c3(_0x3aa605["locale"], "Case change"), "role": "menu" }), _0x1cb9ab["bind"]("isEnabled")["toMany"](_0x1364b1, "isEnabled", (..._0x8226ec) => _0x8226ec["some"]((_0x1d1db4) => _0x1d1db4)), this["listenTo"](_0x1cb9ab, "execute", (_0x291970) => {
      _0x3aa605["execute"](_0x291970["source"]["commandName"]), _0x3aa605["editing"]["view"]["focus"]();
    }), _0x1cb9ab;
  }
  ["_setButtonProperties"](_0xa55dc4) {
    const _0x390aba = this["editor"];
    _0xa55dc4["set"]({ "label": c3(_0x390aba["locale"], "Case change"), "icon": a2["caseChange"], "keystroke": "Shift+F3" });
  }
  ["_getListItemDefinitionsAndCommands"]() {
    const _0x503242 = new Collection(), _0x2c7849 = [];
    for (const _0x29d775 of y2(this["editor"]["locale"])) {
      const _0x48d2a2 = this["editor"]["commands"]["get"](_0x29d775["commandName"]), _0x5257d4 = new Model({ "commandName": _0x29d775["commandName"], "label": _0x29d775["label"], "role": "menuitemradio", "withText": true });
      _0x5257d4["bind"]("isEnabled")["to"](_0x48d2a2, "isEnabled"), _0x503242["add"]({ "type": "button", "model": _0x5257d4 }), _0x2c7849["push"](_0x48d2a2);
    }
    return { "itemDefinitions": _0x503242, "commands": _0x2c7849 };
  }
};
var a5 = class extends Plugin {
  constructor(_0x4e43d9) {
    super(_0x4e43d9);
    __publicField(this, "_licenseKeyCheckInterval");
    this["_licenseKeyCheckInterval"] = null;
  }
  static get ["requires"]() {
    return [s3, n3];
  }
  static get ["pluginName"]() {
    return "CaseChange";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    const _0x47c09e = this["editor"];
    this["licenseKey"] = _0x47c09e["config"]["get"]("licenseKey");
    const _0x399bdd = this["editor"];
    this["_licenseKeyCheckInterval"] = setInterval(() => {
      let _0xbcd6ba;
      for (const _0xb92c57 in _0x399bdd) {
        const _0x3370da = _0xb92c57, _0x4eb314 = _0x399bdd[_0x3370da];
        if ("caseChangeLicenseKeyTrial" === _0x4eb314 || "caseChangeLicenseKeyInvalid" === _0x4eb314 || "caseChangeLicenseKeyValid" === _0x4eb314 || "caseChangeLicenseKeyTrialLimit:operations" === _0x4eb314) {
          delete _0x399bdd[_0x3370da], _0xbcd6ba = _0x4eb314;
          break;
        }
      }
      if ("caseChangeLicenseKeyInvalid" === _0xbcd6ba) throw clearInterval(this["_licenseKeyCheckInterval"]), new CKEditorError("case-change-invalid-license-key", null);
      if ("caseChangeLicenseKeyTrial" === _0xbcd6ba && console["info"]("You are using the trial version of CKEditor 5 case change plugin with limited usage. Make sure you will not use it in the production environment."), "caseChangeLicenseKeyTrialLimit:operations" === _0xbcd6ba) throw clearInterval(this["_licenseKeyCheckInterval"]), new CKEditorError("case-change-trial-license-key-reached-limit-changes", null);
      "caseChangeLicenseKeyValid" === _0xbcd6ba && clearInterval(this["_licenseKeyCheckInterval"]);
    }, 1e3);
  }
  ["destroy"]() {
    this["_licenseKeyCheckInterval"] && clearInterval(this["_licenseKeyCheckInterval"]);
  }
};

// node_modules/@ckeditor/ckeditor5-comments/dist/index.js
var At = class extends ObservableMixin() {
  constructor(_0x1ffcb1, _0x47f2b5) {
    super();
    __publicField(this, "model");
    __publicField(this, "view");
    this["model"] = _0x1ffcb1, this["model"]["_isAttached"] = true, this["view"] = _0x47f2b5, this["listenTo"](_0x47f2b5, "submitCommentThread", () => this["submit"]()), this["listenTo"](_0x47f2b5, "removeCommentThread", () => this["remove"]()), this["listenTo"](_0x47f2b5, "resolveCommentThread", () => this["resolve"]()), this["listenTo"](_0x47f2b5, "reopenCommentThread", () => this["reopen"]()), this["listenTo"](_0x47f2b5, "addComment", (_0x4bce39, _0x5e132c) => this["addComment"](_0x5e132c)), this["listenTo"](_0x47f2b5, "updateComment", (_0x10ba43, _0x2c823b, _0x417494) => this["updateComment"](_0x2c823b, _0x417494)), this["listenTo"](_0x47f2b5, "removeComment", (_0x3356ff, _0x44006c) => this["removeComment"](_0x44006c));
  }
  ["submit"]() {
    this["model"]["submit"]();
  }
  ["remove"]() {
    this["model"]["remove"]();
  }
  ["resolve"]() {
    this["model"]["isResolved"] || this["model"]["resolve"]();
  }
  ["reopen"]() {
    this["model"]["isResolved"] && this["model"]["reopen"]();
  }
  ["addComment"](_0x3dca8f) {
    this["model"]["addComment"]({ "content": _0x3dca8f, "authorId": this["view"]["_localUser"]["id"] });
  }
  ["updateComment"](_0x5f47ca, _0x539135) {
    this["model"]["getComment"](_0x5f47ca)["update"]({ "content": _0x539135 });
  }
  ["removeComment"](_0x3bc7ec) {
    this["model"]["getComment"](_0x3bc7ec)["remove"]();
  }
  ["destroy"]() {
    this["stopListening"](), this["model"]["_isAttached"] = false;
  }
};
function S2(_0x4f9bea, _0x3cdc0d, _0x4ffd04) {
  const t2 = _0x4f9bea["t"];
  switch (_0x3cdc0d) {
    case "PENDING_ACTION_COMMENT_THREAD":
      return t2({ "string": "Unsaved change in comment thread.", "id": "PENDING_ACTION_COMMENT_THREAD" });
    case "Comment":
      return t2("Comment");
    case "Reply...":
      return t2("Reply...");
    case "Reply to reopen discussion...":
      return t2("Reply to reopen discussion...");
    case "Write a comment...":
      return t2("Write a comment...");
    case "Comment was made on an element":
      return t2("Comment was made on an element");
    case "Comment editor":
      return t2("Comment editor");
    case "Delete comment thread?":
      return t2("Delete comment thread?");
    case "Delete comment?":
      return t2("Delete comment?");
    case "Marked as resolved":
      return t2("Marked as resolved");
    case "Show more items":
      return t2("Show more items");
    case "Cancel":
      return t2("Cancel");
    case "Edit":
      return t2("Edit");
    case "Resolve":
      return t2("Resolve");
    case "Reopen":
      return t2("Reopen");
    case "Remove":
      return t2("Remove");
    case "Reply":
      return t2("Reply");
    case "Save":
      return t2("Save");
    case "Annotations sidebar":
      return t2("Annotations sidebar");
    case "Annotations list":
      return t2("Annotations list");
    case "Thread comments":
      return t2("Thread comments");
    case "THREAD_CONTEXT_LABEL":
      return t2({ "string": "Thread context: %0", "id": "THREAD_CONTEXT_LABEL" }, _0x4ffd04);
    case "COMMENT_THREAD_LABEL":
      return t2({ "string": "Comment thread by %1. %1 reply.", "plural": "Comment thread by %1. %0 replies.", "id": "COMMENT_THREAD_LABEL" }, _0x4ffd04);
    case "COMMENT_THREAD_DESCRIPTION":
      return t2({ "string": "Press Enter for more options. Press Escape to exit.", "id": "COMMENT_THREAD_DESCRIPTION" });
    case "COMMENT_ARIA_LABEL":
      return t2({ "string": "Comment by %0. Created on %1. %2. %3", "id": "COMMENT_ARIA_LABEL" }, _0x4ffd04);
    case "LEAVE_COMMENT_ANNOUNCEMENT":
      return t2({ "string": "Leaving a content with comments.", "id": "LEAVE_COMMENT_ANNOUNCEMENT" });
    case "ENTER_COMMENT_ANNOUNCEMENT":
      return t2({ "string": "Entering a content with comments. Press %0 to go to the discussion.", "id": "ENTER_COMMENT_ANNOUNCEMENT" }, _0x4ffd04);
    case "NUMBER_OF_COMMENTS":
      return t2({ "string": "%0 Comment", "plural": "%0 Comments", "id": "NUMBER_OF_COMMENTS" }, _0x4ffd04);
    case "TOO_LONG_COMMENT_ALERT":
      return t2({ "string": "Comment content is too long. Your comment has %0 characters but the limit is %1 characters.", "id": "TOO_LONG_COMMENT_ALERT" }, _0x4ffd04);
    case "EXTERNAL_COMMENT":
      return t2({ "string": "This comment comes from an external source.", "id": "EXTERNAL_COMMENT" });
    case "EXTERNAL_IMPORT_WORD_COMMENT":
      return t2({ "string": "This comment comes from an imported Word file.", "id": "EXTERNAL_IMPORT_WORD_COMMENT" });
    case "EXTERNAL_AVATAR":
      return t2({ "string": "Displayed author name comes from external source (added by %0)", "id": "EXTERNAL_AVATAR" }, _0x4ffd04);
    case "EXTERNAL_IMPORT_WORD_AVATAR":
      return t2({ "string": "Displayed author name comes from a Word document imported by %0", "id": "EXTERNAL_IMPORT_WORD_AVATAR" }, _0x4ffd04);
    case "COMMENTS_ARCHIVE":
      return t2({ "string": "Comments archive", "id": "COMMENTS_ARCHIVE" });
    case "EMPTY_COMMENTS_ARCHIVE":
      return t2({ "string": "There are no archived comment threads.", "id": "EMPTY_COMMENTS_ARCHIVE" });
    case "COMMENTS_ARCHIVE_LIST_LABEL":
      return t2({ "string": "List of comments", "id": "COMMENTS_ARCHIVE_LIST_LABEL" });
    case "ACCESSIBILITY_HELP_ANNOTATIONS_GROUP":
      return t2({ "string": "Keystrokes for interacting with annotation threads (e.g. comments, track changes suggestions)", "id": "ACCESSIBILITY_HELP_ANNOTATIONS_GROUP" });
    case "ACCESSIBILITY_HELP_ANNOTATIONS_MOVE_TO":
      return t2({ "string": "Move focus to the thread when the selection is anchored in its marker", "id": "ACCESSIBILITY_HELP_ANNOTATIONS_MOVE_TO" });
    case "ACCESSIBILITY_HELP_ANNOTATIONS_EXIT":
      return t2({ "string": "Exit the annotation and move focus back to the edited content", "id": "ACCESSIBILITY_HELP_ANNOTATIONS_EXIT" });
    case "ACCESSIBILITY_HELP_ANNOTATIONS_ENTER":
      return t2({ "string": "Browse the focused annotation thread or thread comment", "id": "ACCESSIBILITY_HELP_ANNOTATIONS_ENTER" });
    case "ACCESSIBILITY_HELP_ANNOTATIONS_BROWSE_GROUPS":
      return t2({ "string": "Move across internals of the annotation thread", "id": "ACCESSIBILITY_HELP_ANNOTATIONS_BROWSE_GROUPS" });
    case "ACCESSIBILITY_HELP_ANNOTATIONS_SUBMIT_COMMENT":
      return t2({ "string": "Submit the reply while writing a comment", "id": "ACCESSIBILITY_HELP_ANNOTATIONS_SUBMIT_COMMENT" });
    case "ACCESSIBILITY_HELP_ANNOTATIONS_NAVIGATE_THREADS":
      return t2({ "string": "Move to the previous or next thread in the annotations sidebar or comments archive", "id": "ACCESSIBILITY_HELP_ANNOTATIONS_NAVIGATE_THREADS" });
    default:
      return "";
  }
}
var Zt = class extends EditorUIView {
  constructor(_0x17e0a8, _0x4a9cec) {
    super(_0x17e0a8);
    __publicField(this, "main");
    __publicField(this, "editable");
    const _0x489acc = uid();
    this["main"] = this["createCollection"](), this["editable"] = new InlineEditableUIView(_0x17e0a8, _0x4a9cec, void 0, { "label": () => S2(_0x17e0a8, "Comment editor") }), this["setTemplate"]({ "tag": "div", "attributes": { "class": ["ck-reset", "ck-editor", "ck-rounded-corners", "ck-comment__input"], "dir": _0x17e0a8["uiLanguageDirection"], "lang": _0x17e0a8["uiLanguage"], "aria-labelledby": "cke-editor__aria-label_" + _0x489acc }, "children": [{ "tag": "div", "attributes": { "class": "ck-editor__main", "role": "presentation" }, "children": this["main"] }] });
  }
  ["render"]() {
    super["render"](), this["main"]["add"](this["editable"]);
  }
  ["focus"]() {
    this["editable"]["element"]["focus"]();
  }
};
var Ot = class extends EditorUI {
  constructor(_0x4dcfe6) {
    super(_0x4dcfe6);
    __publicField(this, "view");
    this["view"] = new Zt(_0x4dcfe6["locale"], _0x4dcfe6["editing"]["view"]);
  }
  get ["element"]() {
    return this["view"]["element"];
  }
  ["init"]() {
    const _0x59ed65 = this["editor"]["editing"]["view"], _0x49e7df = this["view"]["editable"], _0x527b12 = _0x59ed65["document"]["getRoot"]();
    _0x49e7df["name"] = _0x527b12["rootName"], this["view"]["render"]();
    const _0x288e84 = _0x49e7df["element"];
    this["setEditableElement"](_0x49e7df["name"], _0x288e84), this["view"]["editable"]["bind"]("isFocused")["to"](this["focusTracker"]), _0x59ed65["attachDomRoot"](_0x288e84), this["fire"]("ready");
  }
  ["destroy"]() {
    super["destroy"](), this["view"]["destroy"]();
  }
};
var Vt = [Clipboard, Enter, ShiftEnter, SelectAll, Typing, Undo, Paragraph];
var _Xt = class _Xt extends ObservableMixin(Editor) {
  constructor(_0x1ef422 = {}) {
    (_0x1ef422 = Object["assign"]({}, _0x1ef422))["plugins"] || (_0x1ef422["plugins"] = _Xt["defaultPlugins"]), super(_0x1ef422), this["ui"] = new Ot(this), this["set"]("placeholder", ""), this["model"]["document"]["on"]("change", () => this["_updatePlaceholder"](), { "priority": "low" }), this["on"]("change:placeholder", () => this["_updatePlaceholder"]()), this["model"]["document"]["createRoot"]();
  }
  ["create"]() {
    const _0x4ee7ca = this["config"]["get"]("initialData") || "";
    return this["initPlugins"]()["then"](() => this["ui"]["init"]())["then"](() => this["data"]["init"](_0x4ee7ca))["then"](() => this["fire"]("ready"));
  }
  ["destroy"]() {
    return super["destroy"]()["then"](() => this["ui"]["destroy"]());
  }
  ["focus"]() {
    this["model"]["change"]((_0x568580) => {
      const _0x46c29d = this["model"]["document"]["getRoot"](), _0x2d0c10 = _0x46c29d && _0x46c29d["getChild"](_0x46c29d["childCount"] - 1);
      _0x568580["setSelection"](_0x2d0c10, "end"), this["editing"]["view"]["focus"]();
    });
  }
  ["_updatePlaceholder"]() {
    const _0x4b370a = this["editing"]["view"], _0xe1267 = _0x4b370a["document"]["getRoot"](), _0x210bd3 = _0xe1267["getChild"](0);
    _0xe1267["childCount"] > 1 || !_0x210bd3 || "p" != _0x210bd3["name"] ? this["placeholderElement"] && this["placeholderElement"]["placeholder"] && (disablePlaceholder(_0x4b370a, this["placeholderElement"]), this["placeholderElement"] = void 0) : (this["placeholder"] && (_0x210bd3["placeholder"] = this["placeholder"]), enablePlaceholder({ "view": _0x4b370a, "element": _0x210bd3, "keepOnFocus": true }), this["placeholderElement"] = _0x210bd3);
  }
};
__publicField(_Xt, "defaultPlugins", /* @__PURE__ */ (() => Vt)());
var Xt = _Xt;
var rs2 = class extends View {
  constructor(_0x570183, _0x5777d8 = {}) {
    super(_0x570183);
    __publicField(this, "keystrokes");
    __publicField(this, "focusTracker");
    __publicField(this, "focusables");
    __publicField(this, "focusCycler");
    __publicField(this, "submitButtonView");
    __publicField(this, "cancelButtonView");
    __publicField(this, "_editorConfig");
    this["editor"] = null, this["_editorConfig"] = _0x5777d8, this["set"]("value", _0x5777d8["initialData"] || ""), this["set"]("disabledSubmit", false), this["set"]("showButtons", true), this["set"]("placeholder", S2(_0x570183, "Reply...")), this["set"]("submitLabel", S2(_0x570183, "Reply")), this["submitButtonView"] = this["_createSubmitButton"](), this["cancelButtonView"] = this["_createCancelButton"](), this["focusables"] = this["createCollection"]([this["submitButtonView"], this["cancelButtonView"]]), this["keystrokes"] = new KeystrokeHandler(), this["focusTracker"] = new FocusTracker(), this["focusCycler"] = new FocusCycler({ "focusables": this["focusables"], "focusTracker": this["focusTracker"], "keystrokeHandler": this["keystrokes"], "actions": { "focusPrevious": "shift+tab", "focusNext": "tab" } }), this["setTemplate"]({ "tag": "div", "attributes": { "class": ["ck-comment__input-wrapper"] }, "children": [{ "tag": "div", "attributes": { "class": ["ck-comment__input-actions", this["bindTemplate"]["if"]("showButtons", "ck-comment__input-actions--active")] }, "children": [this["submitButtonView"], this["cancelButtonView"]] }] }), this["keystrokes"]["set"]("Esc", (_0x2fc58e, _0x30e212) => {
      this["cancelButtonView"]["fire"]("execute"), _0x30e212();
    }), this["keystrokes"]["set"]("Ctrl+Enter", (_0x365590, _0x3a6288) => {
      this["submitButtonView"]["isEnabled"] && (this["submitButtonView"]["fire"]("execute"), _0x3a6288());
    }), this["on"]("submit", (_0xf9f7c0, _0x1eaabb) => {
      _0x1eaabb["length"] > 65e3 ? (alert(S2(_0x570183, "TOO_LONG_COMMENT_ALERT", [_0x1eaabb["length"], 65e3])), _0xf9f7c0["stop"]()) : this["editor"]["setData"]("");
    }, { "priority": "high" });
  }
  ["render"]() {
    super["render"](), this["_setupKeyboardNavigation"]();
  }
  ["createEditor"]() {
    return this["editor"] || (this["editor"] = new Xt(this["_editorConfig"]), this["_editorCreationPromise"] = this["editor"]["create"]()["then"](() => {
      if (this["_isDestroyed"]) return;
      const _0x459823 = this["editor"];
      this["element"]["insertBefore"](_0x459823["ui"]["element"], this["element"]["firstChild"]), _0x459823["model"]["document"]["on"]("change", () => this["value"] = _0x459823["getData"]()), _0x459823["bind"]("placeholder")["to"](this), this["focusables"]["add"](_0x459823["ui"]["view"], 0), this["fire"]("editorReady", this["editor"]);
    })), this["_editorCreationPromise"];
  }
  ["focus"](_0x158581) {
    -1 === _0x158581 ? (this["focusCycler"]["focusFirst"](), this["focusCycler"]["focusLast"]()) : this["focusCycler"]["focusFirst"]();
  }
  async ["destroy"]() {
    this["_isDestroyed"] || (this["_isDestroyed"] = true, this["editor"] && (await this["_editorCreationPromise"], await this["editor"]["destroy"](), this["fire"]("editorDestroyed", this["editor"])), await super["destroy"]());
  }
  ["_createSubmitButton"]() {
    const { locale: _0x3842d8 } = this, _0x2cbf85 = new ButtonView(_0x3842d8);
    return _0x2cbf85["extendTemplate"]({ "attributes": { "class": ["ck-comment__input-actions--submit"] } }), _0x2cbf85["withText"] = true, _0x2cbf85["bind"]("label")["to"](this, "submitLabel"), _0x2cbf85["on"]("execute", () => {
      this["fire"]("submit", this["value"]);
    }), _0x2cbf85["bind"]("isEnabled")["to"](this, "value", this, "disabledSubmit", (_0x18ccf1, _0x731e67) => !_0x731e67 && !!_0x18ccf1["trim"]()), _0x2cbf85;
  }
  ["_createCancelButton"]() {
    const { locale: _0xbcb6b1 } = this, _0x10a883 = new ButtonView(_0xbcb6b1);
    return _0x10a883["extendTemplate"]({ "attributes": { "class": ["ck-comment__input-actions--cancel"] } }), _0x10a883["label"] = S2(_0xbcb6b1, "Cancel"), _0x10a883["withText"] = true, _0x10a883["on"]("execute", () => {
      this["editor"]["setData"](""), this["fire"]("cancel");
    }), _0x10a883;
  }
  ["_setupKeyboardNavigation"]() {
    this["keystrokes"]["listenTo"](this["element"]), this["focusables"]["forEach"]((_0x39ea62) => {
      this["focusTracker"]["add"](_0x39ea62["element"]);
    }), this["focusables"]["on"]("change", (_0x41b604, _0x4fe318) => {
      for (const _0x2f6a24 of Array["from"](_0x4fe318["added"])["reverse"]()) this["focusTracker"]["add"](_0x2f6a24["element"]);
    });
  }
};
var Pt = class extends View {
  constructor(_0x55c5b1, _0x12d3f4, _0x51be09) {
    super(_0x55c5b1), this["commentInputView"] = new rs2(_0x55c5b1, _0x51be09), this["focusCycler"] = this["commentInputView"]["focusCycler"], this["commentInputView"]["bind"]("showButtons")["to"](this["commentInputView"]["focusTracker"], "isFocused", this["commentInputView"], "value", (_0x1e335c, _0x22e340) => _0x1e335c || !!_0x22e340), this["set"]("showInput", false), this["on"]("change:showInput", () => {
      this["showInput"] && !this["commentInputView"]["editor"] && this["commentInputView"]["createEditor"]();
    }), this["commentInputView"]["delegate"]("editorReady")["to"](this), this["commentInputView"]["delegate"]("editorDestroyed")["to"](this), this["userView"] = new H(_0x55c5b1, _0x12d3f4), this["userView"]["extendTemplate"]({ "attributes": { "class": "ck-thread__user", "aria-hidden": true } }), this["commentInputView"]["extendTemplate"]({ "attributes": { "class": "ck-thread__input" } }), this["setTemplate"]({ "tag": "div", "attributes": { "class": ["ck-comment__input-container", this["bindTemplate"]["if"]("showInput", "ck-comment__input-container--active")] }, "children": [this["userView"], this["commentInputView"]] });
  }
  ["render"]() {
    super["render"](), this["_focusOnNonInteractiveMouseDown"]();
  }
  ["destroy"]() {
    return this["commentInputView"]["destroy"]()["then"](() => super["destroy"]());
  }
  ["focus"](_0x1712a3) {
    this["commentInputView"]["focus"](_0x1712a3);
  }
  ["_focusOnNonInteractiveMouseDown"]() {
    this["listenTo"](this["element"], "mousedown", (_0x39c881, _0x2be8a7) => {
      const { submitButtonView: _0x4dfc42, cancelButtonView: _0x2b225e, editor: _0x5d92c2 } = this["commentInputView"];
      [_0x4dfc42["element"], _0x2b225e["element"], _0x5d92c2 ? _0x5d92c2["editing"]["view"]["getDomRoot"]() : null]["filter"]((_0x32c206) => _0x32c206)["some"]((_0x195247) => _0x195247["contains"](_0x2be8a7["target"])) || (this["focus"](), _0x2be8a7["preventDefault"]());
    });
  }
};
var cs2 = class extends View {
  constructor(_0x2ddbec) {
    super(_0x2ddbec);
    const _0x472f62 = this["bindTemplate"];
    this["set"]("count", void 0), this["setTemplate"]({ "tag": "li", "attributes": { "class": "ck-thread__comment-count" }, "children": [{ "text": _0x472f62["to"]("count", (_0x3c10fe) => S2(_0x2ddbec, "NUMBER_OF_COMMENTS", _0x3c10fe)) }] });
  }
};
var xt = class extends View {
  constructor(_0xbd9baf, _0x1fd924, _0x3f69fa) {
    super(_0xbd9baf);
    __publicField(this, "commentViews");
    __publicField(this, "resolvedCommentView");
    __publicField(this, "focusTracker");
    __publicField(this, "keystrokes");
    __publicField(this, "focusCycler");
    __publicField(this, "_model");
    __publicField(this, "_config");
    __publicField(this, "_collapsedCommentsView");
    const _0xfe9f42 = this["bindTemplate"];
    this["set"]("hasDirtyComment", false), this["set"]("length", _0x1fd924["comments"]["length"]), this["set"]("isActive", false), this["_model"] = _0x1fd924, this["_config"] = _0x3f69fa, this["commentViews"] = this["createCollection"](), this["visibleViews"] = this["createCollection"](), this["resolvedCommentView"] = null, this["focusTracker"] = new FocusTracker(), this["keystrokes"] = new KeystrokeHandler(), this["focusCycler"] = new FocusCycler({ "focusables": this["commentViews"], "focusTracker": this["focusTracker"], "keystrokeHandler": this["keystrokes"], "keystrokeHandlerOptions": { "filter": (_0x1ac3cf) => this["commentViews"]["map"]((_0x7824d4) => _0x7824d4["element"])["includes"](_0x1ac3cf["target"]) }, "actions": { "focusPrevious": "arrowup", "focusNext": "arrowdown" } }), this["_collapsedCommentsView"] = new cs2(_0xbd9baf), this["_collapsedCommentsView"]["bind"]("count")["to"](this, "length", (_0x42617a) => _0x42617a - this["_config"]["maxCommentsWhenCollapsed"]);
    for (const _0x358d9d of _0x1fd924["comments"]) this["_handleNewCommentModel"](_0x358d9d);
    this["_handleInfoComment"](), this["listenTo"](_0x1fd924["comments"], "add", (_0x252e7c, _0xb56e3d) => {
      const _0x47718e = this["_calculatePosition"](_0xb56e3d);
      this["length"]++, this["_handleNewCommentModel"](_0xb56e3d, _0x47718e), this["refreshVisibleViews"]();
    }), this["listenTo"](_0x1fd924["comments"], "remove", (_0x465ba7, _0x124035) => {
      this["length"]--, this["_handleRemoveCommentModel"](_0x124035), this["refreshVisibleViews"]();
    }), this["listenTo"](_0x1fd924, "commentUpdated", () => this["refreshVisibleViews"]()), this["listenTo"](_0x1fd924, "change:isResolved", () => this["_handleInfoComment"]()), this["on"]("change:isActive", () => this["refreshVisibleViews"]()), this["on"]("change:hasDirtyComment", () => this["refreshVisibleViews"]()), this["setTemplate"]({ "tag": "ul", "attributes": { "class": ["ck-thread__comments", _0xfe9f42["if"]("length", "ck-hidden", (_0x565268) => !_0x565268)], "aria-label": S2(_0xbd9baf, "Thread comments") }, "children": this["visibleViews"] });
  }
  get ["_shouldCollapse"]() {
    return this["_model"]["weight"] > this["_config"]["maxThreadTotalWeight"] && !this["isActive"] && !this["hasDirtyComment"];
  }
  ["render"]() {
    super["render"](), this["refreshVisibleViews"](), this["_setupKeyboardNavigation"]();
  }
  ["focus"](_0x51f798) {
    -1 === _0x51f798 ? this["focusCycler"]["focusLast"]() : this["focusCycler"]["focusFirst"]();
  }
  ["destroy"]() {
    this["_collapsedCommentsView"]["destroy"]();
    for (const _0x4e6150 of this["commentViews"]) _0x4e6150["destroy"]();
    super["destroy"]();
  }
  ["refreshVisibleViews"]() {
    this["_shouldCollapse"] ? this["_rearrangeCollapse"]() : this["_rearrangeExpand"]();
  }
  ["_handleNewCommentModel"](_0x4a3aec, _0x1524ba) {
    const _0x416762 = new this["_config"]["CommentView"](this["locale"], _0x4a3aec, { "maxCommentCharsWhenCollapsed": this["_config"]["maxCommentCharsWhenCollapsed"], "formatDateTime": this["_config"]["formatDateTime"], "editorConfig": this["_config"]["editorConfig"] });
    _0x416762["viewUid"] = _0x4a3aec["id"], _0x416762["delegate"]("removeComment")["to"](this), _0x416762["delegate"]("updateComment")["to"](this), _0x416762["delegate"]("resolveCommentThread")["to"](this), _0x416762["delegate"]("editorReady")["to"](this), _0x416762["delegate"]("editorDestroyed")["to"](this), this["listenTo"](_0x416762, "change:isEditMode", () => this["_updateHasDirtyComment"]()), this["commentViews"]["add"](_0x416762, _0x1524ba);
  }
  ["_calculatePosition"](_0x5b22fd) {
    const _0x25614e = this["_model"]["_findOptimalIndex"](_0x5b22fd);
    return this["resolvedCommentView"] ? this["resolvedCommentView"]["authoredAt"] > _0x5b22fd["authoredAt"] ? _0x25614e - 1 : _0x25614e : _0x25614e - 1;
  }
  ["_handleInfoComment"]() {
    if (this["_model"]["resolvedBy"] && this["_model"]["resolvedAt"]) {
      const _0x3b66e8 = { "id": "resolved", "author": this["_model"]["resolvedBy"], "authoredAt": this["_model"]["resolvedAt"], "content": S2(this["locale"], "Marked as resolved"), "attributes": {} };
      this["resolvedCommentView"] = new this["_config"]["CommentView"](this["locale"], _0x3b66e8, { "maxCommentCharsWhenCollapsed": this["_config"]["maxCommentCharsWhenCollapsed"], "formatDateTime": this["_config"]["formatDateTime"], "editorConfig": this["_config"]["editorConfig"], "isSystemComment": true }), this["commentViews"]["add"](this["resolvedCommentView"], this["_model"]["_findOptimalIndex"](_0x3b66e8));
    } else this["resolvedCommentView"] && (this["commentViews"]["remove"](this["resolvedCommentView"]), this["resolvedCommentView"]["destroy"](), this["resolvedCommentView"] = null);
    this["refreshVisibleViews"]();
  }
  ["_handleRemoveCommentModel"](_0x292f81) {
    const _0x1640ad = this["commentViews"]["remove"](_0x292f81["id"]);
    this["stopListening"](_0x1640ad), _0x1640ad["isEditMode"] && this["_updateHasDirtyComment"](), _0x1640ad["destroy"]();
  }
  ["_updateHasDirtyComment"]() {
    this["hasDirtyComment"] = Array["from"](this["commentViews"])["some"]((_0x2c0035) => _0x2c0035["isEditMode"]);
  }
  ["_rearrangeCollapse"]() {
    const _0x49ff70 = function(_0x5c1ca5) {
      const _0x1457ee = new Collection();
      for (const _0x4694bc of _0x5c1ca5) _0x1457ee["add"](_0x4694bc);
      return _0x1457ee;
    }(this["commentViews"]), _0x36d318 = this["_collapsedCommentsView"]["count"];
    for (let _0x30a450 = 1; _0x30a450 <= _0x36d318; _0x30a450++) _0x49ff70["remove"](1);
    for (const _0x5d5f3d of _0x49ff70) _0x5d5f3d["collapse"]();
    _0x36d318 > 0 && _0x49ff70["add"](this["_collapsedCommentsView"], 1), ms(diff(Array["from"](this["visibleViews"]), Array["from"](_0x49ff70)), this["visibleViews"], _0x49ff70);
  }
  ["_rearrangeExpand"]() {
    ms(diff(Array["from"](this["visibleViews"]), Array["from"](this["commentViews"])), this["visibleViews"], this["commentViews"]);
    for (const _0x282674 of this["visibleViews"]) _0x282674["expand"]();
  }
  ["_setupKeyboardNavigation"]() {
    this["commentViews"]["forEach"]((_0x28aaf9) => {
      this["focusTracker"]["add"](_0x28aaf9["element"]), this["keystrokes"]["listenTo"](_0x28aaf9["element"]);
    }), this["commentViews"]["on"]("change", (_0x178c5f, _0x191247) => {
      for (const _0x52b3c6 of _0x191247["removed"]) this["focusTracker"]["remove"](_0x52b3c6["element"]), this["keystrokes"]["stopListening"](_0x52b3c6["element"]);
      for (const _0x262462 of Array["from"](_0x191247["added"])["reverse"]()) this["focusTracker"]["add"](_0x262462["element"]), this["keystrokes"]["listenTo"](_0x262462["element"]);
    });
  }
};
function ms(_0x475eaa, _0x471bbc, _0x548b55) {
  let _0x4652c7 = 0;
  for (const _0x263356 of _0x475eaa) switch (_0x263356) {
    case "insert":
      _0x471bbc["add"](_0x548b55["get"](_0x4652c7), _0x4652c7), _0x4652c7++;
      break;
    case "delete":
      _0x471bbc["remove"](_0x4652c7);
      break;
    case "equal":
      _0x4652c7++;
  }
}
var ls = class extends View {
  constructor(_0x12c98e) {
    super(_0x12c98e);
    const _0x4a04a2 = this["bindTemplate"];
    this["set"]("contextValue", ""), this["setTemplate"]({ "tag": "span", "attributes": { "class": ["ck", "ck-context__value"], "aria-label": _0x4a04a2["to"]("contextValue", (_0x2cacd2) => S2(_0x12c98e, "THREAD_CONTEXT_LABEL", _0x2cacd2)), "tabindex": -1 }, "children": [{ "text": _0x4a04a2["to"]("contextValue") }] });
  }
  ["focus"]() {
    this["element"]["focus"]();
  }
};
var ts = class extends View {
  constructor(_0xb8e4d, _0x1c84bc) {
    super(_0xb8e4d);
    __publicField(this, "_model");
    __publicField(this, "reopenButtonView");
    __publicField(this, "contextView");
    __publicField(this, "focusables");
    __publicField(this, "focusTracker");
    __publicField(this, "keystrokes");
    __publicField(this, "focusCycler");
    const _0x1dec89 = this["bindTemplate"];
    this["_model"] = _0x1c84bc, this["reopenButtonView"] = this["_createReopenButton"](), this["contextView"] = this["_createContextView"](), this["focusables"] = this["createCollection"]([this["contextView"], this["reopenButtonView"]]), this["focusTracker"] = new FocusTracker(), this["keystrokes"] = new KeystrokeHandler(), this["focusCycler"] = new FocusCycler({ "focusables": this["focusables"], "focusTracker": this["focusTracker"], "keystrokeHandler": this["keystrokes"], "actions": { "focusPrevious": "shift+tab", "focusNext": "tab" } }), this["bind"]("hasContext")["to"](this["_model"], "context", (_0x279912) => !!_0x279912), this["bind"]("contextValue")["to"](this["_model"], "context", (_0x87e9db) => _0x87e9db && _0x87e9db["value"] ? this["_trimContextValue"](_0x87e9db["value"]) : S2(this["locale"], "Comment was made on an element")), this["setTemplate"]({ "tag": "div", "attributes": { "class": ["ck-thread__header"] }, "children": [{ "tag": "div", "attributes": { "class": ["ck-context-wrapper"] }, "children": [{ "tag": "div", "attributes": { "class": ["ck-context", _0x1dec89["if"]("hasContext", "ck-context--quotes")] }, "children": [this["contextView"]] }] }, { "tag": "div", "attributes": { "class": ["ck-annotation__actions"] }, "children": [this["reopenButtonView"]] }] });
  }
  ["render"]() {
    super["render"](), this["_attachContextActions"](), this["_setupKeyboardNavigation"]();
  }
  ["focus"]() {
    this["focusCycler"]["focusFirst"]();
  }
  ["_createReopenButton"]() {
    const _0x41f8e9 = new ButtonView(this["locale"]);
    return _0x41f8e9["label"] = S2(this["locale"], "Reopen"), _0x41f8e9["tooltip"] = S2(this["locale"], "Reopen"), _0x41f8e9["icon"] = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="m5.042 9.367 2.189 1.837a.75.75 0 0 1-.965 1.149l-3.788-3.18a.747.747 0 0 1-.21-.284.75.75 0 0 1 .17-.945L6.23 4.762a.75.75 0 1 1 .964 1.15L4.863 7.866h8.917A.75.75 0 0 1 14 7.9a4 4 0 1 1-1.477 7.718l.344-1.489a2.5 2.5 0 1 0 1.094-4.73l.008-.032H5.042z"/></svg>', _0x41f8e9["bind"]("isEnabled")["to"](this["_model"], "isReadOnly", (_0x417a74) => !_0x417a74), _0x41f8e9["bind"]("isVisible")["to"](this["_model"], "isResolvable", this["_model"], "isResolved", (_0x5d8d40, _0x5bf837) => _0x5d8d40 && _0x5bf837), _0x41f8e9["on"]("execute", () => {
      this["fire"]("reopenCommentThread", this["_model"]["id"]);
    }), _0x41f8e9;
  }
  ["_trimContextValue"](_0x55fb31) {
    if (_0x55fb31["length"] < 150) return _0x55fb31;
    const _0x4e53df = _0x55fb31["lastIndexOf"](" ", 147);
    return _0x55fb31["substring"](0, _0x4e53df > -1 ? _0x4e53df : 147) + "...";
  }
  ["_attachContextActions"]() {
    const _0x168017 = this["element"]["querySelector"](".ck-context"), _0x70062 = _0x168017["querySelector"](".ck-context__value");
    this["listenTo"](_0x168017, "mouseenter", () => {
      _0x70062["offsetWidth"] < _0x70062["scrollWidth"] && _0x168017["classList"]["add"]("overlay");
    }), this["listenTo"](_0x168017, "mouseleave", () => {
      _0x168017["classList"]["remove"]("overlay");
    });
  }
  ["_setupKeyboardNavigation"]() {
    this["keystrokes"]["listenTo"](this["element"]);
    for (const _0x177c8c of this["focusables"]) this["focusTracker"]["add"](_0x177c8c["element"]), this["keystrokes"]["listenTo"](_0x177c8c["element"]);
  }
  ["_createContextView"]() {
    const _0x4d8337 = new ls(this["locale"]);
    return _0x4d8337["bind"]("contextValue")["to"](this), _0x4d8337;
  }
};
var es = class extends View {
  constructor(_0x45fe84, _0x33bb02, _0x188eaf, _0x41b613) {
    super(_0x45fe84);
    __publicField(this, "_model");
    __publicField(this, "_config");
    __publicField(this, "commentThreadHeaderView");
    __publicField(this, "commentThreadInputView");
    __publicField(this, "ariaDescriptionView");
    __publicField(this, "focusables");
    __publicField(this, "focusTracker");
    __publicField(this, "keystrokes");
    __publicField(this, "focusCycler");
    this["set"]("isActive", false), this["set"]("isDirty", false), this["_model"] = _0x33bb02, this["_localUser"] = _0x188eaf, this["_config"] = _0x41b613, this["commentThreadHeaderView"] = new ts(_0x45fe84, _0x33bb02), this["commentThreadHeaderView"]["delegate"]("reopenCommentThread")["to"](this), this["ariaDescriptionView"] = new J(_0x45fe84, S2(_0x45fe84, "COMMENT_THREAD_DESCRIPTION")), this["listenTo"](this, "reopenCommentThread", () => {
      this["focus"]();
    }), this["commentsListView"] = new xt(_0x45fe84, _0x33bb02, Object["assign"]({ "CommentView": this["_config"]["CommentView"] }, _0x41b613)), this["commentsListView"]["delegate"]("removeComment")["to"](this), this["commentsListView"]["delegate"]("updateComment")["to"](this), this["commentsListView"]["delegate"]("resolveCommentThread")["to"](this), this["commentsListView"]["delegate"]("editorReady")["to"](this), this["commentsListView"]["delegate"]("editorDestroyed")["to"](this), this["commentsListView"]["bind"]("isActive")["to"](this), this["listenTo"](this, "resolveCommentThread", () => {
      this["focus"]();
    }), this["set"]("length", this["commentsListView"]["length"]), this["bind"]("length")["to"](this["commentsListView"], "length"), this["commentThreadInputView"] = this["_createCommentThreadInputView"](), this["commentThreadInputView"]["delegate"]("editorReady")["to"](this), this["commentThreadInputView"]["delegate"]("editorDestroyed")["to"](this), this["on"]("removeComment", () => this["focus"]()), this["bind"]("isDirty")["to"](this["commentsListView"], "hasDirtyComment", this["commentThreadInputView"]["commentInputView"], "value", (_0x8c3e68, _0x405ed2) => _0x8c3e68 || !!_0x405ed2), this["bind"]("isUnlinked")["to"](_0x33bb02, "unlinkedAt", (_0x7d4e8c) => !!_0x7d4e8c), this["bind"]("ariaLabel")["to"](this, "length", (_0x59ff05) => {
      const _0xa0dc65 = this["_model"]["comments"]["first"] ? this["_model"]["comments"]["first"]["author"]["name"] : this["_localUser"]["name"];
      return S2(this["locale"], "COMMENT_THREAD_LABEL", [_0x59ff05, _0xa0dc65]);
    }), this["focusables"] = this["createCollection"]([this["commentsListView"], this["commentThreadInputView"]]), this["focusTracker"] = new FocusTracker(), this["keystrokes"] = new KeystrokeHandler(), this["focusCycler"] = new FocusCycler({ "focusables": this["focusables"], "focusTracker": this["focusTracker"], "keystrokeHandler": this["keystrokes"], "keystrokeHandlerOptions": { "filter": (_0x37adb3) => _0x37adb3["target"] !== this["element"] }, "actions": { "focusPrevious": "shift+tab", "focusNext": "tab" } });
  }
  ["focus"]() {
    this["element"]["focus"]();
  }
  ["render"]() {
    super["render"](), T(this, this["focusables"]);
  }
  async ["destroy"]() {
    this["isDirty"] = false, this["commentsListView"]["destroy"](), await this["commentThreadInputView"]["destroy"](), super["destroy"]();
  }
  ["_createCommentThreadInputView"]() {
    const _0x27280b = new Pt(this["locale"], this["_localUser"], this["_config"]["editorConfig"]), _0x51ea99 = _0x27280b["commentInputView"];
    return _0x27280b["bind"]("showInput")["to"](this, "isActive", this["_model"], "isReadOnly", this["_model"], "canComment", this["_model"], "archivedAt", _0x51ea99, "value", (_0x5c4c82, _0x41a29f, _0x565bc0, _0x4dca88, _0x5abc39) => !!_0x5abc39 || !!_0x4dca88 && _0x565bc0 && !_0x41a29f || _0x5c4c82 && _0x565bc0 && !_0x41a29f), _0x51ea99["bind"]("placeholder")["to"](this, "length", this["_model"], "isResolvable", this["_model"], "isResolved", (_0x3067b2, _0x2c00e9, _0x111712) => {
      let _0x109d56;
      return _0x109d56 = _0x111712 && _0x2c00e9 ? "Reply to reopen discussion..." : _0x3067b2 ? "Reply..." : "Write a comment...", S2(this["locale"], _0x109d56);
    }), _0x51ea99["bind"]("submitLabel")["to"](this, "length", (_0x474874) => S2(this["locale"], _0x474874 ? "Reply" : "Comment")), _0x51ea99["on"]("submit", (_0x521f78, _0x5cad42) => {
      this["fire"]("addComment", _0x5cad42), this["_model"]["isResolved"] && this["_model"]["isResolvable"] && this["fire"]("reopenCommentThread", this["_model"]["id"]), this["_model"]["isSubmitted"] || this["fire"]("submitCommentThread");
    }), _0x51ea99["on"]("cancel", () => {
      this["focus"]();
    }), _0x51ea99["bind"]("disabledSubmit")["to"](this["_model"], "isReadOnly"), _0x51ea99["on"]("cancel", (_0x273a94) => {
      0 == this["length"] && (this["fire"]("removeCommentThread"), _0x273a94["stop"]());
    }), this["on"]("change:isActive", (_0x41ad2e, _0x4b9c02, _0x11083a) => {
      _0x11083a || this["length"] || _0x51ea99["value"] || this["fire"]("removeCommentThread");
    }), _0x27280b;
  }
};
var Ct = class extends m(es) {
  constructor(_0x5834cb, _0x190994, _0x27ee84, _0x1a7f0f) {
    super(_0x5834cb, _0x190994, _0x27ee84, _0x1a7f0f);
    __publicField(this, "commentThreadChildren");
    __publicField(this, "containerElement");
    __publicField(this, "resolveButton");
    __publicField(this, "_boundFirstCommentView");
    this["commentThreadChildren"] = this["createCollection"]([this["commentsListView"], this["commentThreadInputView"], this["ariaDescriptionView"]]), this["set"]("actionIndicator", null), this["containerElement"] = null, this["_boundFirstCommentView"] = null, this["locale"] = _0x5834cb, this["resolveButton"] = this["_createResolveButton"](), this["setTemplate"](this["getTemplate"]()), this["on"]("change:isActive", (_0x267c33, _0x396220, _0x230f5a) => {
      _0x230f5a || this["_cancelAllConfirms"]();
    }), this["listenTo"](this["_model"], "change:isReadOnly", (_0x2cde13, _0x94d7d1, _0x1b34b3) => {
      _0x1b34b3 && this["_cancelAllConfirms"]();
    }), this["length"] > 0 && this["_bindFirstCommentView"](), this["listenTo"](this["commentsListView"]["commentViews"], "add", () => {
      this["_bindFirstCommentView"]();
    });
  }
  ["getTemplate"]() {
    const _0x33ff11 = this["bindTemplate"];
    return { "tag": "div", "attributes": { "class": ["ck", "ck-thread", "ck-reset_all-excluded", "ck-rounded-corners", _0x33ff11["if"]("isActive", "ck-thread--active"), _0x33ff11["if"]("isUnlinked", "ck-thread--unlinked"), _0x33ff11["if"]("isConfirm", "ck-thread--remove-confirmation"), _0x33ff11["to"]("actionIndicator", (_0x436170) => _0x436170 ? "ck-thread--" + _0x436170 : "")], "data-thread-id": this["_model"]["id"], "tabindex": 0, "role": "listitem", "aria-label": _0x33ff11["to"]("ariaLabel"), "aria-describedby": this["ariaDescriptionView"]["id"] }, "children": [{ "tag": "div", "attributes": { "class": "ck-thread__container" }, "children": this["commentThreadChildren"] }] };
  }
  ["render"]() {
    super["render"](), this["containerElement"] = this["element"]["querySelector"](".ck-thread__container"), this["_model"]["on"]("change:archivedAt", () => {
      this["_updateArchivedThreadHeader"]();
    }), this["_updateArchivedThreadHeader"]();
  }
  ["_cancelAllConfirms"]() {
    this["cancelConfirm"]();
    for (const _0x45da47 of this["commentsListView"]["commentViews"]) _0x45da47["cancelConfirm"]();
  }
  ["_bindFirstCommentView"]() {
    const { locale: _0x487a0c } = this, _0x121708 = this["commentsListView"]["commentViews"]["get"](0);
    _0x121708 === this["_boundFirstCommentView"] || _0x121708["isSystemComment"] || (this["_boundFirstCommentView"] = _0x121708, this["unbind"]("actionIndicator"), this["bind"]("actionIndicator")["to"](_0x121708, "actionIndicator", (_0x2b8556) => "remove" === _0x2b8556 ? "remove" : null), _0x121708["placeholder"] = S2(_0x487a0c, "Write a comment..."), _0x121708["removeButton"]["on"]("execute", (_0x511f1f) => {
      _0x511f1f["stop"](), this["showConfirm"](S2(_0x487a0c, "Delete comment thread?"), this["containerElement"])["then"](() => {
        this["fire"]("removeCommentThread");
      });
    }, { "priority": "high" }), this["on"]("removeConfirm", () => {
      _0x121708["focus"]();
    }), _0x121708["actionBar"]["add"](this["resolveButton"], 0), _0x121708["focusables"]["add"](this["resolveButton"], 0));
  }
  ["_createResolveButton"]() {
    const _0x103886 = new U(this["locale"]);
    return _0x103886["label"] = S2(this["locale"], "Resolve"), _0x103886["tooltip"] = S2(this["locale"], "Resolve"), _0x103886["icon"] = icons["check"], _0x103886["extendTemplate"]({ "attributes": { "class": "ck-comment--resolve" } }), _0x103886["bind"]("isEnabled")["to"](this["_model"], "isReadOnly", (_0x4d59d0) => !_0x4d59d0), _0x103886["bind"]("isVisible")["to"](this["_model"], "isResolvable", this["_model"], "isResolved", (_0x39b0f1, _0x7dbf1d) => _0x39b0f1 && !_0x7dbf1d), _0x103886["on"]("execute", () => {
      this["fire"]("resolveCommentThread", this["_model"]["id"]);
    }), _0x103886;
  }
  ["_updateArchivedThreadHeader"]() {
    this["_model"]["archivedAt"] ? this["commentThreadChildren"]["has"](this["commentThreadHeaderView"]) || (this["commentThreadChildren"]["add"](this["commentThreadHeaderView"], 0), this["focusables"]["add"](this["commentThreadHeaderView"], 0)) : this["commentThreadChildren"]["has"](this["commentThreadHeaderView"]) && (this["commentThreadChildren"]["remove"](this["commentThreadHeaderView"]), this["focusables"]["remove"](this["commentThreadHeaderView"]));
  }
};
var os2 = class extends View {
  constructor(_0x2d7410) {
    super(_0x2d7410), this["set"]("content", ""), this["setTemplate"]({ "tag": "div", "attributes": { "class": ["ck-content", "ck-comment__content", "ck-annotation__content"] } });
  }
  ["render"]() {
    super["render"](), this["on"]("change:content", (_0x348568, _0xa0f803, _0x4d3518) => {
      this["element"]["innerHTML"] = _0x4d3518;
    }), this["element"]["innerHTML"] = this["content"];
  }
};
var ns = class extends View {
  constructor(_0x37e6e7, _0x55364, _0x533946) {
    super(_0x37e6e7);
    __publicField(this, "visibleView");
    __publicField(this, "ariaDescriptionView");
    __publicField(this, "focusables");
    __publicField(this, "focusTracker");
    __publicField(this, "keystrokes");
    __publicField(this, "focusCycler");
    __publicField(this, "_model");
    __publicField(this, "_config");
    this["_model"] = _0x55364, this["_config"] = _0x533946, this["isSystemComment"] = !!this["_config"]["isSystemComment"], this["set"]("isEditMode", false), this["set"]("isCollapsed", true), this["bind"]("ariaLabel")["to"](_0x55364, "content", _0x55364, "authoredAt", (_0x39f535, _0x56a580) => S2(_0x37e6e7, "COMMENT_ARIA_LABEL", [_0x55364["author"]["name"], _0x533946["formatDateTime"](_0x56a580), new DOMParser()["parseFromString"](_0x39f535, "text/html")["body"]["textContent"], _0x55364["isExternal"] ? this["getExternalCommentNote"]() : ""])), this["ariaDescriptionView"] = new J(_0x37e6e7, S2(_0x37e6e7, "COMMENT_THREAD_DESCRIPTION")), this["visibleView"] = this["createCollection"](), this["visibleView"]["add"](this["_createCommentContentView"]()), this["focusables"] = new ViewCollection(), this["focusTracker"] = new FocusTracker(), this["keystrokes"] = new KeystrokeHandler(), this["focusCycler"] = new FocusCycler({ "focusables": this["focusables"], "focusTracker": this["focusTracker"], "keystrokeHandler": this["keystrokes"], "keystrokeHandlerOptions": { "filter": (_0x560174) => _0x560174["target"] !== this["element"] }, "actions": { "focusPrevious": "shift+tab", "focusNext": "tab" } });
  }
  ["expand"]() {
    this["isCollapsed"] = false;
  }
  ["collapse"]() {
    this["isEditMode"] || (this["isCollapsed"] = true);
  }
  ["focus"]() {
    this["element"]["focus"]();
  }
  ["render"]() {
    super["render"](), this["_setupKeyboardNavigation"]();
  }
  async ["destroy"]() {
    await this["visibleView"]["get"](0)["destroy"](), super["destroy"]();
  }
  ["switchToEditMode"]() {
    this["isEditMode"] || (this["isEditMode"] = true, this["visibleView"]["remove"](0)["destroy"](), this["visibleView"]["add"](this["_createCommentInputView"]()));
  }
  ["switchToDisplayMode"]() {
    this["isEditMode"] && (this["isEditMode"] = false, this["visibleView"]["remove"](0)["destroy"](), this["visibleView"]["add"](this["_createCommentContentView"]()));
  }
  ["getExternalCommentNote"]() {
    return "importWord" === this["_model"]["attributes"]["@external"]["source"] ? S2(this["locale"], "EXTERNAL_IMPORT_WORD_COMMENT") : S2(this["locale"], "EXTERNAL_COMMENT");
  }
  ["getUserViewNotificationText"]() {
    return this["_model"]["isExternal"] ? "importWord" === this["_model"]["attributes"]["@external"]["source"] ? S2(this["locale"], "EXTERNAL_IMPORT_WORD_AVATAR", this["_model"]["creator"]["name"]) : S2(this["locale"], "EXTERNAL_AVATAR", this["_model"]["creator"]["name"]) : null;
  }
  ["_createCommentContentView"]() {
    const _0x4da521 = new os2(this["locale"]);
    return _0x4da521["bind"]("content")["to"](this["_model"], "content", this, "isCollapsed", (_0x502abf, _0x284065) => _0x284065 ? Z(_0x502abf, { "limit": this["_config"]["maxCommentCharsWhenCollapsed"] }) : _0x502abf), _0x4da521;
  }
  ["_createCommentInputView"]() {
    this["_config"]["editorConfig"] || (this["_config"]["editorConfig"] = {}), this["_config"]["editorConfig"]["initialData"] = this["_model"]["content"];
    const _0x355eb5 = new rs2(this["locale"], this["_config"]["editorConfig"]);
    return _0x355eb5["value"] = this["_model"]["content"], _0x355eb5["bind"]("disabledSubmit")["to"](this["_model"], "isReadOnly"), _0x355eb5["submitLabel"] = S2(this["locale"], "Save"), _0x355eb5["on"]("submit", (_0x1d4298, _0x3e4fc9) => {
      this["fire"]("updateComment", this["_model"]["id"], _0x3e4fc9), this["switchToDisplayMode"](), this["focus"]();
    }), _0x355eb5["on"]("cancel", () => {
      this["switchToDisplayMode"](), this["focus"]();
    }), _0x355eb5["once"]("editorReady", () => {
      _0x355eb5["focus"]();
    }), _0x355eb5["createEditor"](), _0x355eb5["delegate"]("editorReady")["to"](this), _0x355eb5["delegate"]("editorDestroyed")["to"](this), _0x355eb5;
  }
  ["_setupKeyboardNavigation"]() {
    const _0x350a8f = this["element"];
    this["keystrokes"]["listenTo"](_0x350a8f);
    for (const _0x206828 of this["focusables"]) this["focusTracker"]["add"](_0x206828["element"]), this["keystrokes"]["listenTo"](_0x206828["element"]);
    this["focusables"]["on"]("change", (_0x29e569, _0x431590) => {
      for (const _0x38eee8 of _0x431590["removed"]) this["focusTracker"]["remove"](_0x38eee8["element"]), this["keystrokes"]["stopListening"](_0x38eee8["element"]);
      for (const _0x4fde71 of _0x431590["added"]) this["focusTracker"]["add"](_0x4fde71["element"]), this["keystrokes"]["listenTo"](_0x4fde71["element"]);
    }), this["keystrokes"]["set"]("enter", (_0x43d8b0, _0x2299b9) => {
      _0x350a8f === _0x43d8b0["target"] && (this["focusCycler"]["focusFirst"](), _0x2299b9());
    }), this["keystrokes"]["set"]("esc", (_0x3244cb, _0x519977) => {
      _0x350a8f !== _0x3244cb["target"] && (this["focus"](), _0x519977());
    });
  }
};
var vt = class extends m(ns) {
  constructor(_0x270f1a, _0x2e01df, _0x373cb7) {
    super(_0x270f1a, _0x2e01df, _0x373cb7);
    __publicField(this, "actionBar");
    __publicField(this, "userView");
    this["set"]("actionIndicator", null), this["set"]("placeholder", S2(_0x270f1a, "Reply...")), this["bind"]("authoredAt")["to"](_0x2e01df), this["bind"]("resolvedAt")["to"](_0x2e01df), this["actionBar"] = this["createCollection"](), this["isSystemComment"] || (this["editButton"] = this["_createEditButton"](), this["removeButton"] = this["_createRemoveButton"](), this["items"] = this["createCollection"](), this["items"]["addMany"]([this["editButton"], this["removeButton"]]), this["dropdown"] = this["_createDropdown"](), this["actionBar"]["add"](this["dropdown"]), this["focusables"]["add"](this["dropdown"])), this["userView"] = new H(_0x270f1a, _0x2e01df["author"], this["getUserViewNotificationText"]()), this["userView"]["extendTemplate"]({ "attributes": { "class": ["ck-comment__user", "ck-annotation__user"], "aria-hidden": true } }), this["listenTo"](_0x2e01df, "change:isRemovable", () => this["cancelConfirm"]()), this["setTemplate"](this["getTemplate"]());
  }
  ["getTemplate"]() {
    const _0x4ed61b = this["bindTemplate"], _0x12a56f = [{ "tag": "div", "attributes": { "class": ["ck-comment__info", "ck-annotation__info"] }, "children": [{ "tag": "span", "children": [{ "text": this["userView"]["name"] }], "attributes": { "class": ["ck-comment__info-name", "ck-annotation__info-name"] } }, { "tag": "time", "attributes": { "datetime": _0x4ed61b["to"]("authoredAt"), "class": ["ck-comment__info-time", "ck-annotation__info-time"] }, "children": [{ "text": _0x4ed61b["to"]("authoredAt", (_0x37693e) => this["_config"]["formatDateTime"](_0x37693e)) }] }] }, { "tag": "div", "attributes": { "class": ["ck-comment__actions", "ck-annotation__actions", _0x4ed61b["if"]("isEditMode", "ck-comment__actions--hidden"), _0x4ed61b["if"]("isEditMode", "ck-annotation__actions--hidden")] }, "children": this["actionBar"] }, { "tag": "div", "attributes": { "class": ["ck-annotation__content-wrapper"] }, "children": this["visibleView"] }, this["ariaDescriptionView"]];
    return this["_model"]["isExternal"] && _0x12a56f["push"]({ "tag": "div", "attributes": { "class": ["ck-comment__external"] }, "children": [{ "text": this["getExternalCommentNote"]() }] }), { "tag": "li", "attributes": { "class": ["ck-comment__wrapper", _0x4ed61b["if"]("isConfirm", "ck-comment--remove-confirmation")], "tabindex": -1, "aria-label": _0x4ed61b["to"]("ariaLabel"), "aria-describedby": this["ariaDescriptionView"]["id"], "role": "listitem" }, "children": [{ "tag": "div", "attributes": { "class": ["ck-comment", "ck-annotation", _0x4ed61b["if"]("isEditMode", "ck-comment--edit"), _0x4ed61b["if"]("isSystemComment", "ck-comment--info"), _0x4ed61b["to"]("actionIndicator", (_0x48cbc7) => _0x48cbc7 ? "ck-comment--" + _0x48cbc7 : "")], "data-author-id": this["_model"]["author"]["id"], "data-comment-id": this["_model"]["id"], "role": "group" }, "children": [this["userView"], { "tag": "div", "attributes": { "class": ["ck-comment__main", "ck-annotation__main"] }, "children": _0x12a56f }] }] };
  }
  ["_createEditButton"]() {
    const _0x2ca875 = new ButtonView(this["locale"]);
    return _0x2ca875["label"] = S2(this["locale"], "Edit"), _0x2ca875["icon"] = icons["pencil"], _0x2ca875["withText"] = true, _0x2ca875["extendTemplate"]({ "attributes": { "class": "ck-comment--edit" } }), _0x2ca875["bind"]("isEnabled")["to"](this["_model"], "isReadOnly", (_0x21f801) => !_0x21f801), _0x2ca875["bind"]("isVisible")["to"](this["_model"], "isEditable"), _0x2ca875["on"]("execute", () => this["switchToEditMode"]()), _0x2ca875;
  }
  ["_createRemoveButton"]() {
    const _0x5024ab = new ButtonView(this["locale"]);
    return _0x5024ab["label"] = S2(this["locale"], "Remove"), _0x5024ab["icon"] = `<!--

 What you're currently looking at is the source code of a legally protected, proprietary software.
 CKEditor 5 Collaboration is licensed under a commercial license and protected by copyright law. Where not otherwise indicated,
 all CKEditor 5 Collaboration content is authored by CKSource engineers and consists of CKSource-owned intellectual property.

 Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.

!-->

<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M5.2 7h9.2c.6 0 1 .4 1 1v9.9c0 .5-.4 1-1 1H5.2a1 1 0 0 1-1-1V8c0-.6.4-1 1-1zm1 1.5c-.3 0-.5.2-.5.5v8c0 .3.2.5.5.5h.5c.2 0 .5-.2.5-.5V9c0-.3-.3-.5-.5-.5h-.5zm3.2 0c-.2 0-.5.2-.5.5v8c0 .3.3.5.5.5h.5c.3 0 .5-.2.5-.5V9c0-.3-.2-.5-.5-.5h-.4zm3.5 0c-.2 0-.5.2-.5.5v8c0 .3.3.5.5.5h.5c.3 0 .5-.2.5-.5V9c0-.3-.2-.5-.5-.5h-.5zm-1.4-7.1H8.3L6.5 3.6H3.8c-.5 0-.7.3-.7.8s.2.7.7.7h12c.6 0 .9-.2.9-.7 0-.5-.3-.8-1-.8h-2.4l-1.8-2.2z"/></svg>
`, _0x5024ab["withText"] = true, _0x5024ab["extendTemplate"]({ "attributes": { "class": "ck-comment--remove" } }), _0x5024ab["bind"]("isEnabled")["to"](this["_model"], "isReadOnly", (_0x3620f5) => !_0x3620f5), _0x5024ab["bind"]("isVisible")["to"](this["_model"], "isRemovable"), _0x5024ab["on"]("execute", () => {
      this["showConfirm"](S2(this["locale"], "Delete comment?"), this["element"])["then"](() => {
        this["fire"]("removeComment", this["_model"]["id"]);
      });
    }), _0x5024ab;
  }
  ["_createDropdown"]() {
    const _0x51d01c = createDropdown(this["locale"], Y), _0x4f421e = _0x51d01c["panelView"]["children"], _0x5ca967 = new ListView(this["locale"]), _0x5d3716 = _0x51d01c["bindTemplate"];
    focusChildOnDropdownOpen(_0x51d01c, () => this["items"]["find"]((_0x3b86db) => _0x3b86db["isVisible"])), _0x51d01c["extendTemplate"]({ "attributes": { "class": [_0x5d3716["if"]("isVisible", "ck-hidden", (_0x2c6d37) => !_0x2c6d37)] } });
    const _0x4a0788 = (_0x5eb47e, _0x297e6f = -1) => {
      const _0x548d27 = new ListItemView(this["locale"]);
      _0x548d27["children"]["add"](_0x5eb47e);
      const _0x53d451 = _0x297e6f > -1 ? _0x297e6f : _0x5ca967["items"]["length"];
      _0x5ca967["items"]["add"](_0x548d27, _0x53d451);
      const _0x348bac = Array["from"](this["items"]);
      _0x51d01c["unbind"]("isEnabled", "isVisible"), _0x51d01c["bind"]("isEnabled")["toMany"](_0x348bac, "isEnabled", (..._0x400dca) => _0x400dca["some"]((_0x597b1b) => _0x597b1b)), _0x51d01c["bind"]("isVisible")["toMany"](_0x348bac, "isVisible", (..._0x1060db) => _0x1060db["some"]((_0xf1d9ab) => _0xf1d9ab));
    };
    _0x51d01c["panelPosition"] = "sw", _0x51d01c["buttonView"]["set"]({ "label": S2(this["locale"], "Show more items"), "icon": icons["threeVerticalDots"] });
    for (const _0x254fde of this["items"]) _0x4a0788(_0x254fde);
    return _0x4f421e["add"](_0x5ca967), _0x51d01c["listenTo"](this["items"], "add", (_0x185a94, _0x52606f, _0x436c8e) => {
      _0x4a0788(_0x52606f, _0x436c8e);
    }), _0x51d01c["listenTo"](this["items"], "remove", (_0x535dc5, _0x27386e, _0x4dd0da) => {
      _0x5ca967["items"]["remove"](_0x4dd0da);
    }), _0x51d01c;
  }
  ["_attachActions"](_0x322f4b, _0x52a61b) {
    const _0x2fc0c4 = _0x322f4b && _0x322f4b["element"];
    _0x2fc0c4 && (this["listenTo"](_0x2fc0c4, "mouseenter", () => this["actionIndicator"] = _0x52a61b), this["listenTo"](_0x2fc0c4, "focus", () => this["actionIndicator"] = _0x52a61b), this["listenTo"](_0x2fc0c4, "mouseleave", () => this["actionIndicator"] = null), this["listenTo"](_0x2fc0c4, "blur", () => this["actionIndicator"] = null));
  }
  ["_createCommentInputView"]() {
    const _0x28d153 = super["_createCommentInputView"]();
    return _0x28d153["bind"]("placeholder")["to"](this), _0x28d153;
  }
  ["render"]() {
    super["render"](), this["_attachActions"](this["editButton"], "edit"), this["_attachActions"](this["removeButton"], "remove");
  }
};
function Lt(_0x637116) {
  const _0x1addf2 = throttle_default(_0x637116, 30), _0x166dec = new MutationObserver((_0x41fc7a) => {
    for (const _0x40444e of _0x41fc7a) ("attributes" == _0x40444e["type"] && "class" == _0x40444e["attributeName"] || "childList" == _0x40444e["type"] || "characterData" == _0x40444e["type"]) && _0x1addf2();
  });
  return { "attach"(_0x204091) {
    _0x166dec["observe"](_0x204091, { "attributes": true, "childList": true, "subtree": true, "characterData": true });
  }, "detach"() {
    _0x166dec["disconnect"](), _0x1addf2["cancel"]();
  } };
}
var T2 = class extends View {
  constructor(_0x4ca761, _0xf9ba57) {
    super(_0x4ca761);
    __publicField(this, "focusTracker");
    __publicField(this, "id");
    __publicField(this, "keystrokes");
    __publicField(this, "content");
    __publicField(this, "mainView");
    __publicField(this, "_mutationObserver");
    this["id"] = uid(), this["focusTracker"] = new FocusTracker(), this["keystrokes"] = new KeystrokeHandler(), this["keystrokes"]["set"]("Esc", (_0x23abac, _0x49dde) => this["fire"]("Esc", _0x49dde)), this["set"]("targetRect", { "top": 0, "right": 0, "bottom": 0, "left": 0 }), this["set"]("height", 0), this["set"]("isActive", false), this["set"]("isDirty", false), this["set"]("length", 0), this["set"]("type", ""), this["_mutationObserver"] = Lt(() => this["_updateHeight"]()), this["content"] = this["createCollection"](), this["content"]["delegate"]("arrowup", "arrowdown")["to"](this), this["content"]["add"](_0xf9ba57), this["mainView"] = _0xf9ba57;
    const _0x33126e = this["bindTemplate"];
    this["setTemplate"]({ "tag": "div", "attributes": { "class": ["ck", "ck-annotation-wrapper", "ck-rounded-corners", _0x33126e["if"]("isActive", "ck-annotation-wrapper--active")], "role": "presentation" }, "children": this["content"] });
  }
  ["render"]() {
    super["render"](), this["focusTracker"]["add"](this["element"]), this["keystrokes"]["listenTo"](this["element"]), this["_mutationObserver"]["attach"](this["element"]);
  }
  ["destroy"]() {
    this["content"]["clear"](), this["keystrokes"]["destroy"](), this["focusTracker"]["destroy"](), this["_mutationObserver"]["detach"](), super["destroy"]();
  }
  ["focus"]() {
    this["content"]["first"] && this["content"]["first"]["focus"]();
  }
  ["_updateHeight"]() {
    const _0x5b2a7f = this["element"]["clientHeight"];
    _0x5b2a7f && (this["height"] = _0x5b2a7f);
  }
};
var d2 = class _d extends ObservableMixin() {
  constructor({ view: _0x1703e8, target: _0x286b7d, type: _0xa37040, isVisible: _0x2d5c3e = true }) {
    super();
    __publicField(this, "view");
    __publicField(this, "focusableElements");
    __publicField(this, "_type");
    __publicField(this, "_target");
    this["view"] = _0x1703e8, this["view"]["element"] || this["view"]["render"](), this["_type"] = _0xa37040, this["_target"] = _0x286b7d, _d["_assertCorrectTarget"](this["_getNormalizedTarget"]()), this["focusableElements"] = new Collection([this["view"]["element"]], { "idProperty": "_id" }), this["focusableElements"]["on"]("add", (_0x1739d, _0x4420e2) => {
      this["view"]["focusTracker"]["add"](_0x4420e2);
    }), this["focusableElements"]["on"]("remove", (_0x17c5c4, _0x543f60) => {
      this["view"]["focusTracker"]["remove"](_0x543f60);
    }), this["set"]("isVisible", _0x2d5c3e);
  }
  get ["type"]() {
    return "function" == typeof this["_type"] ? this["_type"]() : this["_type"];
  }
  get ["innerView"]() {
    return this["view"]["mainView"];
  }
  get ["target"]() {
    const _0x42dcc0 = this["_getNormalizedTarget"]();
    return _d["_assertCorrectTarget"](_0x42dcc0), _0x42dcc0;
  }
  get ["targetRect"]() {
    const _0x4afd80 = this["target"];
    if (null === _0x4afd80) return null;
    if (_0x4afd80 instanceof Rect) return _0x4afd80;
    const _0x39d3c0 = _0x4afd80["filter"]((_0x4d0e5f) => function(_0x2236c7) {
      const _0x5a5354 = _0x2236c7["offsetParent"];
      if (_0x5a5354) return true;
      const _0x54e2a6 = _0x2236c7["getClientRects"]()["item"](0);
      return !!_0x54e2a6;
    }(_0x4d0e5f));
    return 0 === _0x39d3c0["length"] ? null : new Rect(_0x39d3c0[0]["getClientRects"]()["item"](0));
  }
  get ["isActive"]() {
    return this["view"]["isActive"];
  }
  set ["isActive"](_0x12d145) {
    this["view"]["isActive"] = _0x12d145, this["view"]["mainView"]["isActive"] = _0x12d145;
  }
  ["updateTargetRect"]() {
    this["view"]["targetRect"] = this["targetRect"];
  }
  ["destroy"]() {
    this["focusableElements"]["stopListening"](), this["focusableElements"]["clear"](), this["stopListening"]();
  }
  ["refreshVisibility"]() {
    this["isVisible"] = !!this["targetRect"];
  }
  static ["_assertCorrectTarget"](_0x37e740) {
    if (!(null === _0x37e740 || _0x37e740 instanceof Rect || Array["isArray"](_0x37e740) && _0x37e740["every"]((_0x46bfe8) => ee(_0x46bfe8)))) throw new CKEditorError("annotation-invalid-target", null, { "target": _0x37e740 });
  }
  ["_getNormalizedTarget"]() {
    const _0x235493 = "function" == typeof this["_target"] ? this["_target"]() : this["_target"];
    return ee(_0x235493) ? [_0x235493] : _0x235493;
  }
};
function ee(_0x50ce52) {
  return null !== _0x50ce52 && "object" == typeof _0x50ce52 && "nodeType" in _0x50ce52 && 1 === _0x50ce52["nodeType"];
}
var x2 = class extends Collection {
  constructor(_0x415804 = []) {
    super();
    __publicField(this, "_innerViewToAnnotation");
    __publicField(this, "_viewToAnnotation");
    __publicField(this, "_focusTracker");
    this["_innerViewToAnnotation"] = /* @__PURE__ */ new Map(), this["_viewToAnnotation"] = /* @__PURE__ */ new Map(), this["_focusTracker"] = new FocusTracker(), this["_focusTracker"]["on"]("change:isFocused", (_0x5443aa, _0x2018a4, _0x468bd2) => {
      _0x468bd2 || this["fire"]("blur");
    });
    for (const _0x257c8d of _0x415804) this["add"](_0x257c8d);
  }
  get ["isFocused"]() {
    return this["_focusTracker"]["isFocused"];
  }
  ["add"](_0x5b8176) {
    if (this["has"](_0x5b8176)) throw new CKEditorError("annotationcollection-duplicated-item", null);
    this["_innerViewToAnnotation"]["set"](_0x5b8176["innerView"], _0x5b8176), this["_viewToAnnotation"]["set"](_0x5b8176["view"], _0x5b8176);
    for (const _0xea101 of _0x5b8176["focusableElements"]) this["_focusTracker"]["add"](_0xea101);
    this["listenTo"](_0x5b8176["focusableElements"], "add", (_0x553c69, _0x4df00e) => {
      this["_focusTracker"]["add"](_0x4df00e);
    }), this["listenTo"](_0x5b8176["focusableElements"], "remove", (_0x436a2e, _0x2c9c9e) => {
      this["_focusTracker"]["remove"](_0x2c9c9e);
    }), this["listenTo"](_0x5b8176["view"]["focusTracker"], "change:isFocused", (_0x30be99, _0x363371, _0x3329d9) => {
      _0x3329d9 && this["fire"]("focus", _0x5b8176);
    }), _0x5b8176["updateTargetRect"]();
    const _0x316ab5 = this["_getOrderInContent"](_0x5b8176["view"]["targetRect"]);
    return super["add"](_0x5b8176, _0x316ab5);
  }
  ["remove"](_0xffcfb) {
    if (!this["has"](_0xffcfb)) throw new CKEditorError("annotationcollection-not-existing-item", null);
    this["stopListening"](_0xffcfb["view"]["focusTracker"]), this["stopListening"](_0xffcfb["focusableElements"]);
    for (const _0x5ab802 of _0xffcfb["focusableElements"]) this["_focusTracker"]["remove"](_0x5ab802);
    return this["_viewToAnnotation"]["delete"](_0xffcfb["view"]), this["_innerViewToAnnotation"]["delete"](_0xffcfb["innerView"]), super["remove"](_0xffcfb);
  }
  ["getByInnerView"](_0x52ed05) {
    return this["_innerViewToAnnotation"]["get"](_0x52ed05);
  }
  ["getByView"](_0xcb0221) {
    return this["_viewToAnnotation"]["get"](_0xcb0221);
  }
  ["destroy"]() {
    super["clear"](), this["stopListening"](), this["_innerViewToAnnotation"]["clear"](), this["_viewToAnnotation"]["clear"](), this["_focusTracker"]["destroy"]();
  }
  ["refreshPositioning"]() {
    for (const _0x5c435d of this) _0x5c435d["updateTargetRect"]();
    this["_sort"]();
  }
  ["_sort"]() {
    const _0x157cf3 = Array["from"](this)["sort"]((_0x319f4e, _0x1c17b8) => v7(_0x319f4e["view"]["targetRect"], _0x1c17b8["view"]["targetRect"]));
    for (let _0x5a760c = _0x157cf3["length"] - 1; _0x5a760c > 0; _0x5a760c--) {
      const _0x35d153 = _0x157cf3[_0x5a760c];
      _0x5a760c !== this["getIndex"](_0x35d153) && (this["remove"](_0x35d153), this["add"](_0x35d153));
    }
  }
  ["_getOrderInContent"](_0x3a55ed) {
    let _0x4cc19b = 0;
    if (!_0x3a55ed) return this["length"];
    for (const _0x26b32d of this) {
      const _0x27b04d = _0x26b32d["view"]["targetRect"];
      if (_0x27b04d) {
        if (v7(_0x3a55ed, _0x27b04d) < 0) return _0x4cc19b;
        _0x4cc19b++;
      }
    }
    return _0x4cc19b;
  }
};
function v7(_0x3ad85b, _0x583466) {
  if (null === _0x3ad85b && null === _0x583466) return 0;
  if (null === _0x3ad85b) return -1;
  if (null === _0x583466) return 1;
  const _0x50b7b6 = _0x3ad85b["top"] - _0x583466["top"];
  return 0 == _0x50b7b6 ? _0x3ad85b["left"] - _0x583466["left"] : _0x50b7b6;
}
var N2 = class extends ContextPlugin {
  constructor(_0x383e88) {
    super(_0x383e88);
    __publicField(this, "collection");
    __publicField(this, "_visibleAnnotations");
    if (this["collection"] = new x2(), this["_visibleAnnotations"] = new x2(), this["set"]("activeAnnotations", /* @__PURE__ */ new Set()), this["_bindAnnotationsToVisibleAnnotations"](), _0x383e88 instanceof Editor) {
      const _0x1ea5d0 = _0x383e88["locale"];
      _0x383e88["accessibility"]["addKeystrokeInfoGroup"]({ "id": "annotations", "label": S2(_0x1ea5d0, "ACCESSIBILITY_HELP_ANNOTATIONS_GROUP"), "keystrokes": [{ "label": S2(_0x1ea5d0, "ACCESSIBILITY_HELP_ANNOTATIONS_MOVE_TO"), "keystroke": "Ctrl+Shift+E" }, { "label": S2(_0x1ea5d0, "ACCESSIBILITY_HELP_ANNOTATIONS_EXIT"), "keystroke": "Esc" }, { "label": S2(_0x1ea5d0, "ACCESSIBILITY_HELP_ANNOTATIONS_ENTER"), "keystroke": "Enter" }, { "label": S2(_0x1ea5d0, "ACCESSIBILITY_HELP_ANNOTATIONS_BROWSE_GROUPS"), "keystroke": [["Tab"], ["Shift+Tab"]] }, { "label": S2(_0x1ea5d0, "ACCESSIBILITY_HELP_ANNOTATIONS_SUBMIT_COMMENT"), "keystroke": ["Ctrl+Enter"] }, { "label": S2(_0x1ea5d0, "ACCESSIBILITY_HELP_ANNOTATIONS_NAVIGATE_THREADS"), "keystroke": [["Arrowup"], ["Arrowdown"]] }] });
    }
    this["_setupEnterAnnotationKeystroke"](), this["_setupEscapeAnnotationHandling"]();
  }
  static get ["pluginName"]() {
    return "Annotations";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["add"](_0x22cc60) {
    this["collection"]["add"](_0x22cc60);
  }
  ["remove"](_0x924405) {
    this["collection"]["remove"](_0x924405), _0x924405["destroy"]();
  }
  ["refreshVisibility"]() {
    for (const _0x3d1a68 of this["collection"]) _0x3d1a68["refreshVisibility"]();
  }
  ["refreshPositioning"]() {
    this["_visibleAnnotations"]["refreshPositioning"]();
  }
  ["getByInnerView"](_0x23a694) {
    return this["collection"]["getByInnerView"](_0x23a694);
  }
  ["deactivateAll"]() {
    this["fire"]("_deactivateAllAnnotations");
  }
  ["destroy"]() {
    for (const _0xfa34e3 of this["collection"]) _0xfa34e3["destroy"]();
    this["_visibleAnnotations"]["destroy"](), this["collection"]["destroy"](), super["destroy"]();
  }
  ["activate"](_0x52a509) {
    this["fire"]("_activateAnnotation", _0x52a509);
  }
  ["createAnnotation"](_0x1dbc62) {
    return new d2(_0x1dbc62);
  }
  ["createAnnotationView"](_0x47d696, _0xc1c909) {
    return new T2(_0x47d696, _0xc1c909);
  }
  ["_addActiveAnnotation"](_0xa69ed1) {
    const _0x2a43b0 = new Set(this["activeAnnotations"]);
    _0x2a43b0["add"](_0xa69ed1), this["activeAnnotations"] = _0x2a43b0;
  }
  ["_removeActiveAnnotation"](_0x455a66) {
    const _0x47daaf = new Set(this["activeAnnotations"]);
    _0x47daaf["delete"](_0x455a66), this["activeAnnotations"] = _0x47daaf;
  }
  ["_bindAnnotationsToVisibleAnnotations"]() {
    const _0x44721e = this["collection"], _0x40660b = this["_visibleAnnotations"];
    function _0x17ed7f(_0x470256) {
      const _0x5f5b94 = _0x470256["source"];
      _0x5f5b94["isVisible"] && !_0x40660b["has"](_0x5f5b94) ? _0x40660b["add"](_0x5f5b94) : !_0x5f5b94["isVisible"] && _0x40660b["has"](_0x5f5b94) && _0x40660b["remove"](_0x5f5b94), _0x5f5b94["view"]["focusTracker"]["remove"](_0x5f5b94["view"]["element"]), _0x5f5b94["view"]["focusTracker"]["add"](_0x5f5b94["view"]["element"]);
    }
    this["listenTo"](_0x44721e, "add", (_0x34dbfe, _0x1bb630) => {
      _0x1bb630["isVisible"] && _0x40660b["add"](_0x1bb630), this["listenTo"](_0x1bb630, "change:isVisible", _0x17ed7f);
    }), this["listenTo"](_0x44721e, "remove", (_0x4c9b60, _0x4c4cc9) => {
      _0x40660b["has"](_0x4c4cc9) && _0x40660b["remove"](_0x4c4cc9), this["stopListening"](_0x4c4cc9, "change:isVisible", _0x17ed7f);
    });
  }
  ["_setupEnterAnnotationKeystroke"]() {
    const _0x11ca4b = (_0x9db7d4) => {
      _0x9db7d4["on"]("ready", () => {
        _0x9db7d4["keystrokes"]["set"](Q, (_0x28ecc2, _0x1f58ee) => {
          const _0x1c5d28 = first(this["activeAnnotations"]["values"]());
          _0x1c5d28 && (_0x1c5d28["view"]["focus"](), _0x1f58ee());
        });
      });
    };
    this["context"] instanceof Editor ? _0x11ca4b(this["context"]) : this["context"]["editors"] && this["context"]["editors"]["on"]("add", (_0x1a20e5, _0xb28806) => {
      _0x11ca4b(_0xb28806);
    });
  }
  ["_setupEscapeAnnotationHandling"]() {
    const _0x511305 = (_0x327896) => {
      const _0x8026dd = _0x327896["source"], _0x5c4b7e = [];
      let _0x4d3eee;
      if (Array["isArray"](_0x8026dd["target"])) {
        _0x4d3eee = _0x8026dd["target"][0], this["context"] instanceof Editor ? _0x5c4b7e["push"](this["context"]) : this["context"]["editors"] && _0x5c4b7e["push"](...this["context"]["editors"]);
        for (const _0x57d2b7 of _0x5c4b7e) for (const _0x5f1dcb of _0x57d2b7["editing"]["view"]["domRoots"]["values"]()) if (_0x5f1dcb["contains"](_0x4d3eee)) return void _0x57d2b7["editing"]["view"]["focus"]();
        _0x4d3eee["focus"]();
      }
    };
    this["listenTo"](this["collection"], "add", (_0x4be628, _0x21f6b7) => {
      this["listenTo"](_0x21f6b7, "escape", _0x511305, { "priority": "low" });
    }), this["listenTo"](this["collection"], "remove", (_0x3c9146, _0x52e76f) => {
      this["stopListening"](_0x52e76f, "escape", _0x511305);
    });
  }
};
var gt = Symbol("noChannel");
var Tt = { "admin": true, "modifyAll": false, "write": true, "resolve": true };
var o4 = class extends ContextPlugin {
  constructor(_0x5ae82b) {
    super(_0x5ae82b);
    __publicField(this, "licenseKey");
    __publicField(this, "_threads");
    __publicField(this, "_threadToController");
    __publicField(this, "_viewToController");
    this["_threads"] = /* @__PURE__ */ new Map(), this["_threadToController"] = /* @__PURE__ */ new Map(), this["_viewToController"] = /* @__PURE__ */ new Map(), this["set"]("_readOnlyChannels", /* @__PURE__ */ new Set()), this["set"]("_permissions", /* @__PURE__ */ new Map()), this["licenseKey"] = this["context"]["config"]["get"]("licenseKey");
    const _0x1b8809 = this["context"]["config"];
    _0x1b8809["define"]("comments.maxCommentsWhenCollapsed", 2), _0x1b8809["define"]("comments.maxThreadTotalWeight", 500), _0x1b8809["define"]("comments.maxCommentCharsWhenCollapsed", 140), _0x1b8809["define"]("comments.CommentThreadView", Ct), _0x1b8809["define"]("comments.CommentView", vt), _0x1b8809["get"]("comments.editorConfig") || console["warn"]("Missing comments editor configuration (`comments.editorConfig`). Default configuration will be used instead.");
  }
  static get ["requires"]() {
    return [N2, PendingActions, l];
  }
  static get ["pluginName"]() {
    return "CommentsRepository";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    const _0x369254 = this["context"]["plugins"]["get"](N2);
    this["set"]("activeCommentThread", null), this["on"]("addCommentThread", (_0x23ba1f, _0x44aea6) => this["_addCommentThread"](_0x44aea6)), this["on"]("submitCommentThread", (_0x1a2966, _0xbc8386) => this["_submitCommentThread"](_0xbc8386)), this["on"]("resolveCommentThread", (_0x325405, _0x226753) => this["_resolveCommentThread"](_0x226753)), this["on"]("resolveCommentThread", (_0x550413, _0x542f08) => this["_updateActiveAnnotation"](_0x542f08), { "priority": "lowest" }), this["on"]("reopenCommentThread", (_0x205137, _0x35e8ef) => this["_reopenCommentThread"](_0x35e8ef)), this["on"]("reopenCommentThread", (_0x3c61ae, _0xd8084) => this["_updateActiveAnnotation"](_0xd8084), { "priority": "lowest" }), this["on"]("removeCommentThread", (_0x3a15af, _0x483499) => this["_removeCommentThread"](_0x483499)), this["on"]("updateCommentThread", (_0x3485f, _0x45a88c) => this["_updateCommentThread"](_0x45a88c)), this["on"]("updateCommentThread", (_0x2eef6e, _0x41929c) => this["_updateActiveAnnotation"](_0x41929c), { "priority": "lowest" }), this["on"]("addComment", (_0x3e22f6, _0xd2e73b) => this["_addComment"](_0xd2e73b)), this["on"]("updateComment", (_0x496003, _0x5b352e) => this["_updateComment"](_0x5b352e)), this["on"]("removeComment", (_0x55d4cd, _0x128b2c) => this["_removeComment"](_0x128b2c)), this["on"]("addComment", (_0x464d34, { threadId: _0x3e23af, isFromAdapter: _0x5e6e34 }) => {
      if (_0x5e6e34) return;
      const _0x1b83ac = this["getCommentThread"](_0x3e23af), _0x4bee7a = _0x1b83ac && this["_threadToController"]["get"](_0x1b83ac);
      _0x4bee7a && _0x4bee7a["view"]["commentsListView"]["focus"](-1);
    }, { "priority": "lowest" }), this["listenTo"](_0x369254, "change:activeAnnotations", (_0x114ccb, _0x2431b4, _0x2ccceb) => {
      const _0x35b4b4 = Array["from"](_0x2ccceb)["map"]((_0x50c8c3) => this["_viewToController"]["get"](_0x50c8c3["innerView"]))["filter"](Boolean)[0];
      this["activeCommentThread"] = _0x35b4b4 ? _0x35b4b4["model"] : null;
    });
  }
  ["afterInit"]() {
    !function(_0x1923ac) {
      function _0x5a3299(_0x4aabf3, _0x3e3be5, _0x55c83c) {
        const _0x450e5b = {};
        _0x450e5b[_0x5a67dd([110, 117, 109, 98, 101, 114, 79, 102, 82, 111, 117, 110, 100, 115])] = { 16: 10, 24: 12, 32: 14 }, _0x450e5b[_0x5a67dd([114, 99, 111, 110])] = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145], _0x450e5b[_0x5a67dd([83])] = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], _0x450e5b[_0x5a67dd([84, 49])] = [3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474, 1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738, 597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420, 3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577, 605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627, 2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520, 3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205, 2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474, 1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309, 3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720, 2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771, 1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243, 3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470, 1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977, 2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737, 1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754, 361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755, 697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986], _0x450e5b[_0x5a67dd([84, 50])] = [2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899, 2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108, 4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129, 2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848, 1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043, 1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914, 1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139, 2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658, 3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324, 3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385, 3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499, 1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572, 2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810, 3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411, 3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753, 2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487, 550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313, 2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766], _0x450e5b[_0x5a67dd([84, 51])] = [1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099, 1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188, 2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329, 1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768, 3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283, 3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114, 3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739, 2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538, 2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324, 1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865, 1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296, 844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713, 3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050, 2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131, 3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513, 2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927, 3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905, 2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126], _0x450e5b[_0x5a67dd([84, 52])] = [1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549, 1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243, 2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529, 1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963, 3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198, 3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564, 3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214, 2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143, 2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699, 1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945, 1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771, 842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818, 3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340, 2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126, 3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473, 2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917, 3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930, 2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436], _0x450e5b[_0x5a67dd([85, 49])] = [0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795], _0x450e5b[_0x5a67dd([85, 50])] = [0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459, 2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537, 3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535, 77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884, 3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824, 3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622, 507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216, 3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879, 129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469, 3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175, 1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921, 2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127, 3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560, 1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387, 2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037, 4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148, 692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663, 2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855], _0x450e5b[_0x5a67dd([85, 51])] = [0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639, 3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557, 2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032, 3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201, 344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239, 532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878, 3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771, 4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744, 671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199, 4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366, 492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798, 2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695, 3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569, 4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702, 3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217, 1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635, 1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009, 3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150], _0x450e5b[_0x5a67dd([85, 52])] = [0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874, 2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222, 4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595, 1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591, 4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837, 923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127, 2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424, 2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110, 4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469, 4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481, 1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243, 3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604, 2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802, 585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166, 4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912, 1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703, 3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213, 2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925];
        const _0x8334ae = new Uint8Array(16);
        for (let _0x25a2fa = 15; _0x25a2fa >= 0; --_0x25a2fa) _0x8334ae[_0x25a2fa] = _0x55c83c % 256, _0x55c83c = parseInt(_0x55c83c / 256);
        let _0x204c87 = null, _0x16e669 = 16;
        const _0x1d19f6 = new Uint8Array(_0x3e3be5), _0x37f8f4 = [], _0x14dbbe = [];
        _0x144ddb();
        for (let _0x3a931c = 0; _0x3a931c < _0x4aabf3[_0x5a67dd([108, 101, 110, 103, 116, 104])]; _0x3a931c++) 16 === _0x16e669 && (_0x204c87 = _0x1a4df8(_0x8334ae), _0x16e669 = 0, _0x4d46b5(_0x8334ae)), _0x4aabf3[_0x3a931c] ^= _0x204c87[_0x16e669++];
        return _0x4aabf3;
        function _0xb8e351(_0x27c096) {
          const _0x24050d = [];
          for (let _0x40c258 = 0; _0x40c258 < _0x27c096[_0x5a67dd([108, 101, 110, 103, 116, 104])]; _0x40c258 += 4) _0x24050d[_0x5a67dd([112, 117, 115, 104])](_0x27c096[_0x40c258] << 24 | _0x27c096[_0x40c258 + 1] << 16 | _0x27c096[_0x40c258 + 2] << 8 | _0x27c096[_0x40c258 + 3]);
          return _0x24050d;
        }
        function _0x4d46b5(_0x980b02) {
          for (let _0x34f19c = 15; _0x34f19c >= 0; _0x34f19c--) {
            if (255 !== _0x980b02[_0x34f19c]) {
              _0x980b02[_0x34f19c]++;
              break;
            }
            _0x980b02[_0x34f19c] = 0;
          }
        }
        function _0x1a4df8(_0x3617bf) {
          const _0x43f23b = _0x37f8f4[_0x5a67dd([108, 101, 110, 103, 116, 104])] - 1, _0x862a26 = [0, 0, 0, 0];
          let t2 = _0xb8e351(_0x3617bf);
          for (let _0x15d833 = 0; _0x15d833 < 4; _0x15d833++) t2[_0x15d833] ^= _0x37f8f4[0][_0x15d833];
          for (let _0x22a86b = 1; _0x22a86b < _0x43f23b; _0x22a86b++) {
            for (let _0x1aad20 = 0; _0x1aad20 < 4; _0x1aad20++) _0x862a26[_0x1aad20] = _0x450e5b[_0x5a67dd([84, 49])][t2[_0x1aad20] >> 24 & 255] ^ _0x450e5b[_0x5a67dd([84, 50])][t2[(_0x1aad20 + 1) % 4] >> 16 & 255] ^ _0x450e5b[_0x5a67dd([84, 51])][t2[(_0x1aad20 + 2) % 4] >> 8 & 255] ^ _0x450e5b[_0x5a67dd([84, 52])][255 & t2[(_0x1aad20 + 3) % 4]] ^ _0x37f8f4[_0x22a86b][_0x1aad20];
            t2 = _0x862a26[_0x5a67dd([115, 108, 105, 99, 101])]();
          }
          const _0x411e92 = new Uint8Array(16);
          let _0x54844e;
          for (let _0x575552 = 0; _0x575552 < 4; _0x575552++) _0x54844e = _0x37f8f4[_0x43f23b][_0x575552], _0x411e92[4 * _0x575552] = 255 & (_0x450e5b[_0x5a67dd([83])][t2[_0x575552] >> 24 & 255] ^ _0x54844e >> 24), _0x411e92[4 * _0x575552 + 1] = 255 & (_0x450e5b[_0x5a67dd([83])][t2[(_0x575552 + 1) % 4] >> 16 & 255] ^ _0x54844e >> 16), _0x411e92[4 * _0x575552 + 2] = 255 & (_0x450e5b[_0x5a67dd([83])][t2[(_0x575552 + 2) % 4] >> 8 & 255] ^ _0x54844e >> 8), _0x411e92[4 * _0x575552 + 3] = 255 & (_0x450e5b[_0x5a67dd([83])][255 & t2[(_0x575552 + 3) % 4]] ^ _0x54844e);
          return _0x411e92;
        }
        function _0x144ddb() {
          const _0x47ccb6 = _0x450e5b[_0x5a67dd([110, 117, 109, 98, 101, 114, 79, 102, 82, 111, 117, 110, 100, 115])][_0x1d19f6[_0x5a67dd([108, 101, 110, 103, 116, 104])]];
          for (let _0x5e5c89 = 0; _0x5e5c89 <= _0x47ccb6; _0x5e5c89++) _0x37f8f4[_0x5a67dd([112, 117, 115, 104])]([0, 0, 0, 0]), _0x14dbbe[_0x5a67dd([112, 117, 115, 104])]([0, 0, 0, 0]);
          const _0x4784f5 = 4 * (_0x47ccb6 + 1), _0x55831a = _0x1d19f6[_0x5a67dd([108, 101, 110, 103, 116, 104])] / 4, _0x449083 = _0xb8e351(_0x1d19f6);
          let _0x4ed7a0;
          for (let _0x2de90a = 0; _0x2de90a < _0x55831a; _0x2de90a++) _0x4ed7a0 = _0x2de90a >> 2, _0x37f8f4[_0x4ed7a0][_0x2de90a % 4] = _0x449083[_0x2de90a], _0x14dbbe[_0x47ccb6 - _0x4ed7a0][_0x2de90a % 4] = _0x449083[_0x2de90a];
          let _0x4d9e9a, _0xbe246a = 0, t2 = _0x55831a;
          for (; t2 < _0x4784f5; ) {
            _0x4d9e9a = _0x449083[_0x55831a - 1], _0x449083[0] ^= _0x450e5b[_0x5a67dd([83])][_0x4d9e9a >> 16 & 255] << 24 ^ _0x450e5b[_0x5a67dd([83])][_0x4d9e9a >> 8 & 255] << 16 ^ _0x450e5b[_0x5a67dd([83])][255 & _0x4d9e9a] << 8 ^ _0x450e5b[_0x5a67dd([83])][_0x4d9e9a >> 24 & 255] ^ _0x450e5b[_0x5a67dd([114, 99, 111, 110])][_0xbe246a] << 24, _0xbe246a += 1;
            for (let _0x1a653d = 1; _0x1a653d < _0x55831a / 2; _0x1a653d++) _0x449083[_0x1a653d] ^= _0x449083[_0x1a653d - 1];
            _0x4d9e9a = _0x449083[_0x55831a / 2 - 1], _0x449083[_0x55831a / 2] ^= _0x450e5b[_0x5a67dd([83])][255 & _0x4d9e9a] ^ _0x450e5b[_0x5a67dd([83])][_0x4d9e9a >> 8 & 255] << 8 ^ _0x450e5b[_0x5a67dd([83])][_0x4d9e9a >> 16 & 255] << 16 ^ _0x450e5b[_0x5a67dd([83])][_0x4d9e9a >> 24 & 255] << 24;
            for (let _0xd0e928 = _0x55831a / 2 + 1; _0xd0e928 < _0x55831a; _0xd0e928++) _0x449083[_0xd0e928] ^= _0x449083[_0xd0e928 - 1];
            let _0x460fd8, _0x93922a, _0x1d6b87 = 0;
            for (; _0x1d6b87 < _0x55831a && t2 < _0x4784f5; ) _0x460fd8 = t2 >> 2, _0x93922a = t2 % 4, _0x37f8f4[_0x460fd8][_0x93922a] = _0x449083[_0x1d6b87], _0x14dbbe[_0x47ccb6 - _0x460fd8][_0x93922a] = _0x449083[_0x1d6b87++], t2++;
          }
          for (let _0x543cda = 1; _0x543cda < _0x47ccb6; _0x543cda++) for (let _0x1ac895 = 0; _0x1ac895 < 4; _0x1ac895++) _0x4d9e9a = _0x14dbbe[_0x543cda][_0x1ac895], _0x14dbbe[_0x543cda][_0x1ac895] = _0x450e5b[_0x5a67dd([85, 49])][_0x4d9e9a >> 24 & 255] ^ _0x450e5b[_0x5a67dd([85, 50])][_0x4d9e9a >> 16 & 255] ^ _0x450e5b[_0x5a67dd([85, 51])][_0x4d9e9a >> 8 & 255] ^ _0x450e5b[_0x5a67dd([85, 52])][255 & _0x4d9e9a];
        }
      }
      function _0x5a67dd(_0x2e203f) {
        return _0x2e203f["map"]((_0x137047) => String["fromCharCode"](_0x137047))["join"]("");
      }
      ((_0x7e9c4a) => {
        function _0x29499b() {
          const _0xc97e4b = [{ [_0x5a67dd([105, 100])]: 1, [_0x5a67dd([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5a67dd([67, 111, 109, 109, 101, 110, 116, 115]), [_0x5a67dd([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x5a67dd([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]), [_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x5a67dd([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x5a67dd([104, 97, 110, 100, 108, 101, 114])]: _0x5a67dd([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x5a67dd([99, 104, 101, 99, 107, 65, 108, 115, 111])]: [{ [_0x5a67dd([105, 100])]: 2, [_0x5a67dd([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5a67dd([84, 114, 97, 99, 107, 32, 67, 104, 97, 110, 103, 101, 115]), [_0x5a67dd([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x5a67dd([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103]), [_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x5a67dd([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x5a67dd([104, 97, 110, 100, 108, 101, 114])]: _0x5a67dd([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115]), [_0x5a67dd([111, 112, 116, 105, 111, 110, 115])]: { [_0x5a67dd([97, 105, 119, 115, 103, 105, 99])]: true, [_0x5a67dd([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x5a67dd([97, 105, 114, 118, 105, 105, 108])]: true } }], [_0x5a67dd([111, 112, 116, 105, 111, 110, 115])]: { [_0x5a67dd([97, 105, 119, 115, 103, 105, 99])]: true, [_0x5a67dd([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x5a67dd([97, 105, 114, 118, 105, 105, 108])]: true } }, { [_0x5a67dd([105, 100])]: 3, [_0x5a67dd([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5a67dd([80, 97, 103, 105, 110, 97, 116, 105, 111, 110]), [_0x5a67dd([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x5a67dd([80, 97, 103, 105, 110, 97, 116, 105, 111, 110, 76, 111, 111, 107, 117, 112]), [_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x5a67dd([112, 97, 103, 105, 110, 97, 116, 105, 111, 110, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x5a67dd([104, 97, 110, 100, 108, 101, 114])]: _0x5a67dd([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x5a67dd([105, 100])]: 4, [_0x5a67dd([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5a67dd([82, 101, 118, 105, 115, 105, 111, 110, 32, 72, 105, 115, 116, 111, 114, 121]), [_0x5a67dd([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x5a67dd([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]), [_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x5a67dd([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x5a67dd([104, 97, 110, 100, 108, 101, 114])]: _0x5a67dd([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 82, 101, 118, 105, 115, 105, 111, 110, 72, 105, 115, 116, 111, 114, 121]), [_0x5a67dd([111, 112, 116, 105, 111, 110, 115])]: { [_0x5a67dd([97, 105, 119, 115, 103, 105, 99])]: true, [_0x5a67dd([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x5a67dd([97, 105, 114, 118, 105, 105, 108])]: true } }, { [_0x5a67dd([105, 100])]: 5, [_0x5a67dd([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5a67dd([68, 111, 99, 117, 109, 101, 110, 116, 32, 79, 117, 116, 108, 105, 110, 101]), [_0x5a67dd([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x5a67dd([68, 111, 99, 117, 109, 101, 110, 116, 79, 117, 116, 108, 105, 110, 101, 85, 73]), [_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x5a67dd([100, 111, 99, 117, 109, 101, 110, 116, 79, 117, 116, 108, 105, 110, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x5a67dd([104, 97, 110, 100, 108, 101, 114])]: _0x5a67dd([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x5a67dd([111, 112, 116, 105, 111, 110, 115])]: { [_0x5a67dd([102, 103, 105])]: [12] } }, { [_0x5a67dd([105, 100])]: 6, [_0x5a67dd([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5a67dd([70, 111, 114, 109, 97, 116, 32, 80, 97, 105, 110, 116, 101, 114]), [_0x5a67dd([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x5a67dd([70, 111, 114, 109, 97, 116, 80, 97, 105, 110, 116, 101, 114, 85, 73]), [_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x5a67dd([102, 111, 114, 109, 97, 116, 80, 97, 105, 110, 116, 101, 114, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x5a67dd([104, 97, 110, 100, 108, 101, 114])]: _0x5a67dd([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x5a67dd([111, 112, 116, 105, 111, 110, 115])]: { [_0x5a67dd([102, 103, 105])]: [12] } }, { [_0x5a67dd([105, 100])]: 7, [_0x5a67dd([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5a67dd([83, 108, 97, 115, 104, 32, 67, 111, 109, 109, 97, 110, 100]), [_0x5a67dd([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x5a67dd([83, 108, 97, 115, 104, 67, 111, 109, 109, 97, 110, 100, 85, 73]), [_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x5a67dd([115, 108, 97, 115, 104, 67, 111, 109, 109, 97, 110, 100, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x5a67dd([104, 97, 110, 100, 108, 101, 114])]: _0x5a67dd([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x5a67dd([111, 112, 116, 105, 111, 110, 115])]: { [_0x5a67dd([102, 103, 105])]: [12] } }, { [_0x5a67dd([105, 100])]: 8, [_0x5a67dd([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5a67dd([84, 97, 98, 108, 101, 32, 111, 102, 32, 67, 111, 110, 116, 101, 110, 116, 115]), [_0x5a67dd([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x5a67dd([84, 97, 98, 108, 101, 79, 102, 67, 111, 110, 116, 101, 110, 116, 115, 69, 100, 105, 116, 105, 110, 103]), [_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x5a67dd([116, 97, 98, 108, 101, 79, 102, 67, 111, 110, 116, 101, 110, 116, 115, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x5a67dd([104, 97, 110, 100, 108, 101, 114])]: _0x5a67dd([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x5a67dd([111, 112, 116, 105, 111, 110, 115])]: { [_0x5a67dd([102, 103, 105])]: [12] } }, { [_0x5a67dd([105, 100])]: 9, [_0x5a67dd([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5a67dd([84, 101, 109, 112, 108, 97, 116, 101]), [_0x5a67dd([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x5a67dd([84, 101, 109, 112, 108, 97, 116, 101, 85, 73]), [_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x5a67dd([116, 101, 109, 112, 108, 97, 116, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x5a67dd([104, 97, 110, 100, 108, 101, 114])]: _0x5a67dd([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x5a67dd([111, 112, 116, 105, 111, 110, 115])]: { [_0x5a67dd([102, 103, 105])]: [12, 14] } }, { [_0x5a67dd([105, 100])]: 10, [_0x5a67dd([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5a67dd([80, 97, 115, 116, 101, 32, 102, 114, 111, 109, 32, 79, 102, 102, 105, 99, 101, 32, 69, 110, 104, 97, 110, 99, 101, 100]), [_0x5a67dd([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x5a67dd([80, 97, 115, 116, 101, 70, 114, 111, 109, 79, 102, 102, 105, 99, 101, 69, 110, 104, 97, 110, 99, 101, 100, 73, 110, 108, 105, 110, 101, 114]), [_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x5a67dd([112, 97, 115, 116, 101, 70, 114, 111, 109, 79, 102, 102, 105, 99, 101, 69, 110, 104, 97, 110, 99, 101, 100, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x5a67dd([104, 97, 110, 100, 108, 101, 114])]: _0x5a67dd([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x5a67dd([111, 112, 116, 105, 111, 110, 115])]: { [_0x5a67dd([102, 103, 105])]: [12] } }, { [_0x5a67dd([105, 100])]: 11, [_0x5a67dd([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5a67dd([65, 73, 32, 65, 115, 115, 105, 115, 116, 97, 110, 116]), [_0x5a67dd([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x5a67dd([65, 73, 65, 115, 115, 105, 115, 116, 97, 110, 116, 85, 73]), [_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x5a67dd([97, 105, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x5a67dd([104, 97, 110, 100, 108, 101, 114])]: _0x5a67dd([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x5a67dd([105, 100])]: 12, [_0x5a67dd([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5a67dd([80, 114, 111, 100, 117, 99, 116, 105, 118, 105, 116, 121, 32, 112, 97, 99, 107]) }, { [_0x5a67dd([105, 100])]: 13, [_0x5a67dd([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5a67dd([67, 97, 115, 101, 32, 67, 104, 97, 110, 103, 101]), [_0x5a67dd([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x5a67dd([67, 97, 115, 101, 67, 104, 97, 110, 103, 101, 85, 73]), [_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x5a67dd([99, 97, 115, 101, 67, 104, 97, 110, 103, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x5a67dd([104, 97, 110, 100, 108, 101, 114])]: _0x5a67dd([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x5a67dd([111, 112, 116, 105, 111, 110, 115])]: { [_0x5a67dd([102, 103, 105])]: [12] } }, { [_0x5a67dd([105, 100])]: 14, [_0x5a67dd([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5a67dd([68, 114, 117, 112, 97, 108, 32, 112, 97, 99, 107]), [_0x5a67dd([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114])]: _0x5a67dd([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114, 70, 111, 114, 68, 114, 117, 112, 97, 108]) }, { [_0x5a67dd([105, 100])]: 15, [_0x5a67dd([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5a67dd([77, 117, 108, 116, 105, 32, 76, 101, 118, 101, 108, 32, 76, 105, 115, 116]), [_0x5a67dd([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x5a67dd([77, 117, 108, 116, 105, 76, 101, 118, 101, 108, 76, 105, 115, 116, 69, 100, 105, 116, 105, 110, 103]), [_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x5a67dd([109, 117, 108, 116, 105, 76, 101, 118, 101, 108, 76, 105, 115, 116, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x5a67dd([104, 97, 110, 100, 108, 101, 114])]: _0x5a67dd([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x5a67dd([105, 100])]: 16, [_0x5a67dd([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5a67dd([77, 101, 114, 103, 101, 32, 70, 105, 101, 108, 100, 115]), [_0x5a67dd([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x5a67dd([77, 101, 114, 103, 101, 70, 105, 101, 108, 100, 115, 85, 73]), [_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x5a67dd([109, 101, 114, 103, 101, 70, 105, 101, 108, 100, 115, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x5a67dd([104, 97, 110, 100, 108, 101, 114])]: _0x5a67dd([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x5a67dd([111, 112, 116, 105, 111, 110, 115])]: { [_0x5a67dd([102, 103, 105])]: [12] } }];
          return _0x5a4061(_0xc97e4b), _0xc97e4b;
          function _0x26fddd(_0xbada5b) {
            return 1 << _0xbada5b - 1;
          }
          function _0x5a4061(_0x2e7eb4) {
            _0x2e7eb4[_0x5a67dd([102, 111, 114, 69, 97, 99, 104])]((_0x425bce) => {
              _0x425bce[_0x5a67dd([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])] = _0x26fddd(_0x425bce[_0x5a67dd([105, 100])]), _0x3dbbcd(_0x425bce) && _0x425bce[_0x5a67dd([99, 104, 101, 99, 107, 65, 108, 115, 111])] && _0x5a4061(_0x425bce[_0x5a67dd([99, 104, 101, 99, 107, 65, 108, 115, 111])]);
            });
          }
        }
        function _0x3dbbcd(_0xa5a31d) {
          return _0x5a67dd([112, 108, 117, 103, 105, 110, 78, 97, 109, 101]) in _0xa5a31d;
        }
        const _0x5a9b57 = [1, 85, 78, 115, 198, 255, 50, 112, 83, 87, 161], _0x163172 = [127, 34, 6, 211, 167, 86, 146, 199, 132, 160, 18];
        function _0x5d975d(_0x27fc90) {
          const _0x262a55 = [29, 221, 175, 90, 231, 133, 239, 240, 75, 180];
          return _0x543d2d(_0x27fc90, new Uint8Array([..._0x5a9b57, ..._0x262a55, ..._0x163172]));
        }
        function _0x543d2d(_0x12b5a8, _0x45bcb8) {
          const _0x66de49 = _0x11f5d8(_0x12b5a8), _0x22adb4 = Array[_0x5a67dd([102, 114, 111, 109])](_0x3a3029(_0x66de49)), _0x194b55 = _0x22adb4[_0x5a67dd([112, 111, 112])](), _0x566f74 = _0x22adb4[_0x5a67dd([112, 111, 112])]();
          return _0x4bfb16(_0x5a3299(_0x22adb4, _0x45bcb8, _0x566f74 + 256 * _0x194b55));
        }
        function _0x11f5d8(_0x2b3cef) {
          const _0x30418a = atob(_0x2b3cef), [_0x71d47d, _0xc7db38] = _0x30418a[_0x5a67dd([115, 112, 108, 105, 116])](_0x5a67dd([45]));
          try {
            if (atob(_0xc7db38)) return atob(_0x71d47d);
          } catch (_0x1df870) {
          }
          return _0x30418a;
        }
        function _0x3eac9b(_0x7cd5a8) {
          try {
            const _0x3d70a9 = _0x5d975d(_0x7cd5a8), _0x15ae23 = JSON[_0x5a67dd([112, 97, 114, 115, 101])](_0x3d70a9), _0x358b9c = parseInt(_0x15ae23[_0x5a67dd([49])]), _0x2945d3 = _0x15ae23[_0x5a67dd([50])] || "", _0x401511 = parseInt(_0x15ae23[_0x5a67dd([51])]), _0xd963fb = parseInt(_0x15ae23[_0x5a67dd([52])]) || 0, _0x212737 = parseInt(_0x15ae23[_0x5a67dd([53])]) || 0;
            return { [_0x5a67dd([112, 114, 111, 100, 117, 99, 116, 78, 97, 109, 101])]: _0x2945d3, [_0x5a67dd([97, 108, 108, 111, 119, 101, 100, 80, 108, 117, 103, 105, 110, 115])]: _0xd963fb, [_0x5a67dd([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])]: _0x358b9c, [_0x5a67dd([105, 115, 84, 114, 105, 97, 108])]: _0x401511, [_0x5a67dd([105, 115, 73, 110, 116, 101, 114, 110, 97, 108])]: _0x212737 };
          } catch (_0x5a3153) {
            return null;
          }
        }
        const _0x3001e2 = _0x29499b(), _0xa63dd3 = { [_0x5a67dd([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101])]: _0x4f9f82, [_0x5a67dd([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115])]: _0x457a16, [_0x5a67dd([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 82, 101, 118, 105, 115, 105, 111, 110, 72, 105, 115, 116, 111, 114, 121])]: _0x340819 }, _0x4aa0b5 = _0x7e9c4a[_0x5a67dd([99, 111, 110, 115, 116, 114, 117, 99, 116, 111, 114])][_0x5a67dd([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])], _0x41dd6e = _0x5a67dd([99, 111, 110, 116, 101, 120, 116]) in _0x7e9c4a ? _0x7e9c4a["context"] : _0x7e9c4a["editor"], _0x4fef9d = _0x5a67dd([52, 48, 52, 56, 50, 50, 49, 50]), _0x580e23 = _0x5a67dd([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]), _0x4438df = _0x41dd6e["config"]["get"](_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 75, 101, 121])), _0x249ffb = _0x3001e2[_0x5a67dd([102, 105, 108, 116, 101, 114])](_0x3dbbcd)[_0x5a67dd([102, 105, 110, 100])]((_0x57f801) => _0x57f801[_0x5a67dd([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])] === _0x4aa0b5);
        function _0x1d670a(_0x500f64, _0x10e216) {
          _0xa63dd3[_0x10e216[_0x5a67dd([104, 97, 110, 100, 108, 101, 114])]](_0x500f64, _0x10e216), _0x10e216[_0x5a67dd([99, 104, 101, 99, 107, 65, 108, 115, 111])] && _0x10e216[_0x5a67dd([99, 104, 101, 99, 107, 65, 108, 115, 111])][_0x5a67dd([102, 105, 108, 116, 101, 114])]((_0x49fd19) => _0x59f785(_0x41dd6e, _0x49fd19[_0x5a67dd([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]))[_0x5a67dd([102, 111, 114, 69, 97, 99, 104])]((_0x3e1e67) => _0x1d670a(_0x500f64, _0x3e1e67));
        }
        function _0x4f9f82(_0x26d1dd, _0x218ab9) {
          _0x254996(_0x4749d3(_0x26d1dd, _0x218ab9), _0x218ab9);
        }
        function _0x457a16(_0x1660d1, _0x4380c3) {
          function _0x314585(_0x1c3e2b, _0x34471c) {
            try {
              if (_0x59f785(_0x41dd6e, _0x5a67dd([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103])) && _0x1c3e2b) {
                const _0x5d3be8 = _0x23617b(_0x41dd6e, _0x5a67dd([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103]))[_0x5a67dd([95, 101, 120, 101, 99, 117, 116, 101, 83, 117, 103, 103, 101, 115, 116, 105, 111, 110])];
                if (parseInt(_0x5d3be8) / 2 > _0x1c3e2b[_0x5a67dd([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])]) return _0x4f7d47(_0x34471c[_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5a67dd([73, 110, 118, 97, 108, 105, 100]));
              }
              return _0x4749d3(_0x1c3e2b, _0x34471c);
            } catch (_0x580f92) {
              return _0x4f7d47(_0x34471c[_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5a67dd([73, 110, 118, 97, 108, 105, 100]));
            }
          }
          _0x254996(_0x314585(_0x1660d1, _0x4380c3), _0x4380c3);
        }
        function _0x340819(_0x5ad37c, _0xec3b1c) {
          const _0xae597c = _0x163172[0] * _0x5a9b57[1], _0x8ea88a = _0x163172[0] * _0x5a9b57[2], _0x276fed = _0x163172[2] * _0x5a9b57[2];
          _0x59f785(_0x41dd6e, _0x5a67dd([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121])) && _0x23617b(_0x41dd6e, _0x5a67dd([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121]))[_0x5a67dd([115, 116, 97, 116, 101])] == _0x5a67dd([99, 111, 110, 110, 101, 99, 116, 101, 100]) && (window[_0x39c6d9()] = _0x276fed);
          function _0x3cfe6a(_0x277c55, _0x3a690c) {
            try {
              return _0x53a718() ? _0x4f7d47(_0x3a690c[_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5a67dd([86, 97, 108, 105, 100])) : _0x4749d3(_0x277c55, _0x3a690c);
            } catch (_0x33a1c7) {
              return _0x4f7d47(_0x3a690c[_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5a67dd([73, 110, 118, 97, 108, 105, 100]));
            }
          }
          function _0x1d1805(_0xd39ce3, _0x245aea) {
            const _0x18d81f = 7;
            if (_0xd39ce3 == _0x245aea[_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5a67dd([73, 110, 118, 97, 108, 105, 100])) _0x38cdf5();
            else {
              if (_0xd39ce3 == _0x245aea[_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5a67dd([84, 114, 105, 97, 108])) {
                const _0xbfab80 = _0xdc038e();
                _0xbfab80 && _0x217052(_0xbfab80, _0x245aea[_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                const _0x468491 = _0x513bac();
                window[_0x5a67dd([115, 101, 116, 84, 105, 109, 101, 111, 117, 116])](() => {
                  _0x217052(_0x5a67dd([116, 105, 109, 101]), _0x245aea[_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                }, _0x468491);
                const _0x568fa9 = _0x23617b(_0x41dd6e, _0x5a67dd([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x5a67dd([95, 114, 101, 118, 105, 115, 105, 111, 110, 115])];
                _0x568fa9[_0x5a67dd([108, 101, 110, 103, 116, 104])] >= _0x18d81f ? _0x217052(_0x5a67dd([114, 101, 118, 105, 115, 105, 111, 110, 115]), _0x245aea[_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]) : _0x568fa9["on"](_0x5a67dd([97, 100, 100]), () => {
                  _0x568fa9[_0x5a67dd([108, 101, 110, 103, 116, 104])] >= _0x18d81f && _0x217052(_0x5a67dd([114, 101, 118, 105, 115, 105, 111, 110, 115]), _0x245aea[_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                });
              }
            }
          }
          function _0xdc038e() {
            if (!_0x59f785(_0x41dd6e, _0x5a67dd([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) return false;
            for (const _0x2c67ae in window) if (Number["isNaN"](Number(_0x2c67ae))) {
              if (window[_0x2c67ae] === _0xae597c) return _0x5a67dd([116, 105, 109, 101]);
              if (window[_0x2c67ae] === _0x8ea88a) return _0x5a67dd([114, 101, 118, 105, 115, 105, 111, 110, 115]);
            }
            return false;
          }
          function _0x53a718() {
            if (!_0x59f785(_0x41dd6e, _0x5a67dd([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) return false;
            for (const _0x264b2e in window) if (Number["isNaN"](Number(_0x264b2e)) && window[_0x264b2e] === _0x276fed) return true;
            return false;
          }
          function _0x217052(_0x27391d, _0x2cbf42) {
            _0x38cdf5(), _0x4f7d47(_0x2cbf42 + _0x5a67dd([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58]) + _0x27391d), window[_0x39c6d9()] = _0x27391d === _0x5a67dd([116, 105, 109, 101]) ? _0xae597c : _0x8ea88a;
          }
          function _0x513bac() {
            let _0x2541b9 = _0x163172[6] * _0x5a9b57[8] * _0x5a9b57[6];
            return _0x59f785(_0x41dd6e, _0x5a67dd([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114])) && (_0x2541b9 /= 10), _0x2541b9;
          }
          function _0x38cdf5() {
            const _0xdfffe0 = _0x41dd6e;
            function _0x53c1c8() {
              _0x59f785(_0xdfffe0, _0x5a67dd([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114])) && (_0x23617b(_0xdfffe0, _0x5a67dd([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x5a67dd([117, 110, 98, 105, 110, 100])](_0x5a67dd([105, 115, 69, 110, 97, 98, 108, 101, 100])), _0x23617b(_0xdfffe0, _0x5a67dd([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x5a67dd([105, 115, 69, 110, 97, 98, 108, 101, 100])] = false, _0x23617b(_0xdfffe0, _0x5a67dd([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x5a67dd([117, 112, 100, 97, 116, 101])] = _0x5a2e1c, _0x23617b(_0xdfffe0, _0x5a67dd([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x5a67dd([115, 97, 118, 101, 82, 101, 118, 105, 115, 105, 111, 110])] = _0x5a2e1c, _0xdfffe0[_0x5a67dd([109, 111, 100, 101, 108])][_0x5a67dd([99, 104, 97, 110, 103, 101])] = _0x5a2e1c, _0xdfffe0[_0x5a67dd([109, 111, 100, 101, 108])][_0x5a67dd([101, 110, 113, 117, 101, 117, 101, 67, 104, 97, 110, 103, 101])] = _0x5a2e1c, _0xdfffe0[_0x5a67dd([101, 110, 97, 98, 108, 101, 82, 101, 97, 100, 79, 110, 108, 121, 77, 111, 100, 101])](_0x5a67dd([109, 111, 100, 101, 108]))), _0x59f785(_0xdfffe0, _0x5a67dd([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114])) && (_0x23617b(_0xdfffe0, _0x5a67dd([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x5a67dd([117, 110, 98, 105, 110, 100])](_0x5a67dd([105, 115, 69, 110, 97, 98, 108, 101, 100])), _0x23617b(_0xdfffe0, _0x5a67dd([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x5a67dd([105, 115, 69, 110, 97, 98, 108, 101, 100])] = false, _0x23617b(_0xdfffe0, _0x5a67dd([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x5a67dd([99, 111, 109, 112, 97, 114, 101])] = _0x5a2e1c, _0x23617b(_0xdfffe0, _0x5a67dd([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x5a67dd([95, 103, 101, 116, 68, 105, 102, 102])] = _0x5a2e1c);
            }
            _0xdfffe0[_0x5a67dd([115, 116, 97, 116, 101])] == _0x5a67dd([114, 101, 97, 100, 121]) ? _0x53c1c8() : _0xdfffe0[_0x5a67dd([111, 110, 99, 101])](_0x5a67dd([114, 101, 97, 100, 121]), () => {
              if (_0x59f785(_0xdfffe0, _0x5a67dd([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114])) && _0x53c1c8(), _0x59f785(_0xdfffe0, _0x5a67dd([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) {
                const _0xfc6dc1 = _0x23617b(_0xdfffe0, _0x5a67dd([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121])), _0x1dd16a = _0xfc6dc1["getRevision"](0), _0x3ec402 = _0xfc6dc1["getEarlierVisibleRevision"](_0x1dd16a[_0x5a67dd([105, 100])]);
                _0x23617b(_0xdfffe0, _0x5a67dd([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x5a67dd([99, 111, 109, 112, 97, 114, 101])](_0x1dd16a[_0x5a67dd([105, 100])], _0x3ec402 ? _0x3ec402[_0x5a67dd([105, 100])] : null, 1)["then"](() => _0x53c1c8());
              }
            });
          }
          _0x1d1805(_0x3cfe6a(_0x5ad37c, _0xec3b1c), _0xec3b1c);
        }
        function _0x4749d3(_0x5ba1b0, _0x573bbd) {
          try {
            return _0x1bda77(_0x573bbd) ? _0x4f7d47(_0x573bbd[_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5a67dd([86, 97, 108, 105, 100])) : _0x5ba1b0 && _0x5a27cf(_0x5ba1b0[_0x5a67dd([97, 108, 108, 111, 119, 101, 100, 80, 108, 117, 103, 105, 110, 115])], _0x573bbd) ? _0x5ba1b0[_0x5a67dd([105, 115, 73, 110, 116, 101, 114, 110, 97, 108])] && !window[_0x5a67dd([111, 112, 101, 110])][_0x5a67dd([99, 108, 111, 115, 101, 100])] || parseInt(_0x4fef9d) / 2 > _0x5ba1b0[_0x5a67dd([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])] ? _0x4f7d47(_0x573bbd[_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5a67dd([73, 110, 118, 97, 108, 105, 100])) : _0x5ba1b0[_0x5a67dd([105, 115, 84, 114, 105, 97, 108])] ? _0x4f7d47(_0x573bbd[_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5a67dd([84, 114, 105, 97, 108])) : _0x4f7d47(_0x573bbd[_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5a67dd([86, 97, 108, 105, 100])) : _0x4f7d47(_0x573bbd[_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5a67dd([73, 110, 118, 97, 108, 105, 100]));
          } catch (_0x26a17a) {
            return _0x4f7d47(_0x573bbd[_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5a67dd([73, 110, 118, 97, 108, 105, 100]));
          }
        }
        function _0x254996(_0x2b8be3, _0x34d802) {
          if (_0x41dd6e instanceof Context) {
            const _0x28294a = _0x41dd6e;
            _0x2b8be3 == _0x34d802[_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5a67dd([73, 110, 118, 97, 108, 105, 100]) ? _0x3552f1(_0x28294a) : _0x2b8be3 == _0x34d802[_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5a67dd([84, 114, 105, 97, 108]) && window[_0x5a67dd([115, 101, 116, 84, 105, 109, 101, 111, 117, 116])](() => {
              _0x3552f1(_0x28294a), _0x4f7d47(_0x34d802[_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5a67dd([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 116, 105, 109, 101]));
            }, _0x163172[6] * _0x5a9b57[8] * _0x5a9b57[6]), _0x28294a[_0x5a67dd([101, 100, 105, 116, 111, 114, 115])][_0x5a67dd([111, 110])](_0x5a67dd([97, 100, 100]), (_0x2a8d55, _0x43af20) => {
              _0x2b8be3 != _0x34d802[_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5a67dd([73, 110, 118, 97, 108, 105, 100]) && _0x2b8be3 != _0x34d802[_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5a67dd([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 116, 105, 109, 101]) && _0x2b8be3 != _0x34d802[_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5a67dd([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 111, 112, 101, 114, 97, 116, 105, 111, 110, 115]) || _0x5558c0(_0x43af20);
            });
          } else {
            const _0x31cf21 = _0x41dd6e;
            _0x2b8be3 == _0x34d802[_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5a67dd([73, 110, 118, 97, 108, 105, 100]) ? _0x5558c0(_0x31cf21) : _0x2b8be3 == _0x34d802[_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5a67dd([84, 114, 105, 97, 108]) && _0x31cf21[_0x5a67dd([111, 110])](_0x5a67dd([114, 101, 97, 100, 121]), () => {
              let _0x4684c3 = 0;
              _0x31cf21[_0x5a67dd([109, 111, 100, 101, 108])][_0x5a67dd([111, 110])](_0x5a67dd([97, 112, 112, 108, 121, 79, 112, 101, 114, 97, 116, 105, 111, 110]), (_0x28bb0f, _0x145c66) => {
                _0x145c66[0][_0x5a67dd([105, 115, 68, 111, 99, 117, 109, 101, 110, 116, 79, 112, 101, 114, 97, 116, 105, 111, 110])] && _0x4684c3++, 504 === _0x4684c3 && (_0x5558c0(_0x31cf21), _0x4f7d47(_0x34d802[_0x5a67dd([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5a67dd([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 111, 112, 101, 114, 97, 116, 105, 111, 110, 115])), _0x28bb0f[_0x5a67dd([111, 102, 102])]());
              }, { "priority": _0x5a67dd([104, 105, 103, 104, 101, 115, 116]) });
            });
          }
        }
        function _0x4f7d47(_0x574e3f) {
          const _0x3d1cd6 = _0x39c6d9();
          return _0x41dd6e[_0x3d1cd6] = _0x574e3f, _0x574e3f;
        }
        function _0x39c6d9() {
          const _0xe73227 = String(window[_0x5a67dd([112, 101, 114, 102, 111, 114, 109, 97, 110, 99, 101])][_0x5a67dd([110, 111, 119])]())[_0x5a67dd([114, 101, 112, 108, 97, 99, 101])](_0x5a67dd([46]), "");
          let _0x5bb9bf = "";
          for (let _0x1c0b2f = 0; _0x1c0b2f < _0xe73227[_0x5a67dd([108, 101, 110, 103, 116, 104])]; _0x1c0b2f += 2) {
            let _0x105da3 = parseInt(_0xe73227[_0x5a67dd([115, 117, 98, 115, 116, 114, 105, 110, 103])](_0x1c0b2f, _0x1c0b2f + 2));
            _0x105da3 >= _0x580e23[_0x5a67dd([108, 101, 110, 103, 116, 104])] && (_0x105da3 -= _0x580e23[_0x5a67dd([108, 101, 110, 103, 116, 104])]), _0x5bb9bf += _0x580e23[_0x105da3];
          }
          return _0x5bb9bf;
        }
        function _0x3552f1(_0x4f3a63) {
          for (const _0x3d122f of _0x4f3a63[_0x5a67dd([101, 100, 105, 116, 111, 114, 115])]) _0x5558c0(_0x3d122f);
          _0x23617b(_0x4f3a63, _0x5a67dd([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x5a67dd([115, 119, 105, 116, 99, 104, 82, 101, 97, 100, 79, 110, 108, 121])](true), _0x23617b(_0x4f3a63, _0x5a67dd([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x5a67dd([115, 119, 105, 116, 99, 104, 82, 101, 97, 100, 79, 110, 108, 121])] = _0x5a2e1c;
        }
        function _0x5558c0(_0x3c26b2) {
          function _0x2ff75b() {
            _0x3c26b2[_0x5a67dd([109, 111, 100, 101, 108])][_0x5a67dd([99, 104, 97, 110, 103, 101])] = _0x5a2e1c, _0x3c26b2[_0x5a67dd([109, 111, 100, 101, 108])][_0x5a67dd([101, 110, 113, 117, 101, 117, 101, 67, 104, 97, 110, 103, 101])] = _0x5a2e1c, _0x3c26b2[_0x5a67dd([101, 110, 97, 98, 108, 101, 82, 101, 97, 100, 79, 110, 108, 121, 77, 111, 100, 101])](_0x5a67dd([109, 111, 100, 101, 108]));
          }
          _0x3c26b2[_0x5a67dd([115, 116, 97, 116, 101])] == _0x5a67dd([114, 101, 97, 100, 121]) ? _0x2ff75b() : _0x3c26b2[_0x5a67dd([111, 110, 99, 101])](_0x5a67dd([114, 101, 97, 100, 121]), () => _0x2ff75b());
        }
        function _0x5a2e1c() {
          return null;
        }
        function _0x5a27cf(_0x27c2d4, _0x55d520) {
          const _0x21589d = !!(_0x27c2d4 & _0x55d520[_0x5a67dd([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])]), _0x47e33f = _0x38df77(_0x27c2d4, _0x55d520);
          return _0x21589d || _0x47e33f;
        }
        function _0x38df77(_0x496f02, _0x248934) {
          const _0x2d160f = (_0x248934[_0x5a67dd([111, 112, 116, 105, 111, 110, 115])] || {})[_0x5a67dd([102, 103, 105])] || null;
          return !!_0x2d160f && _0x3001e2[_0x5a67dd([102, 105, 108, 116, 101, 114])]((_0x433b1e) => _0x2d160f[_0x5a67dd([105, 110, 99, 108, 117, 100, 101, 115])](_0x433b1e[_0x5a67dd([105, 100])]))[_0x5a67dd([102, 105, 108, 116, 101, 114])]((_0x595c37) => !_0x79dca9(_0x595c37))[_0x5a67dd([115, 111, 109, 101])]((_0xef2ab2) => !!(_0x496f02 & _0xef2ab2[_0x5a67dd([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])]));
        }
        function _0x79dca9(_0x36a69) {
          const _0x3f0ccd = { [_0x5a67dd([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114, 70, 111, 114, 68, 114, 117, 112, 97, 108])]: _0x243d71 };
          return !!_0x36a69["forbiddenHandler"] && _0x3f0ccd[_0x36a69["forbiddenHandler"]]();
        }
        function _0x243d71() {
          return !window[_0x5a67dd([68, 114, 117, 112, 97, 108])] || !_0x59f785(_0x41dd6e, _0x5a67dd([100, 114, 117, 112, 97, 108, 80, 111, 119, 101, 114, 101, 100, 66, 121]));
        }
        function _0x1bda77(_0x2886eb) {
          if (!_0x59f785(_0x41dd6e, _0x2886eb[_0x5a67dd([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])])) return true;
          const _0x3486a1 = _0x2886eb[_0x5a67dd([111, 112, 116, 105, 111, 110, 115])] || {}, _0xeef6a8 = _0x3486a1[_0x5a67dd([97, 105, 119, 115, 103, 105, 99])] || false, _0x4e1bd0 = _0x3486a1[_0x5a67dd([97, 105, 116, 99, 100, 103, 105, 108])] || false, _0x2f5a26 = _0x3486a1[_0x5a67dd([97, 105, 114, 118, 105, 105, 108])] || false;
          if (_0x59f785(_0x41dd6e, _0x5a67dd([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121])) && _0x23617b(_0x41dd6e, _0x5a67dd([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121]))[_0x5a67dd([115, 116, 97, 116, 101])] == _0x5a67dd([99, 111, 110, 110, 101, 99, 116, 101, 100]) && _0xeef6a8) return true;
          if (_0x59f785(_0x41dd6e, _0x5a67dd([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 68, 97, 116, 97, 71, 101, 116, 116, 101, 114])) && _0x23617b(_0x41dd6e, _0x5a67dd([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 68, 97, 116, 97, 71, 101, 116, 116, 101, 114]))[_0x5a67dd([114, 101, 115, 117, 108, 116])] == _0x5a67dd([101, 110, 100]) && _0x4e1bd0) return true;
          return !(!_0x59f785(_0x41dd6e, _0x5a67dd([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114, 73, 110, 116, 101, 103, 114, 97, 116, 105, 111, 110])) || _0x23617b(_0x41dd6e, _0x5a67dd([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114, 73, 110, 116, 101, 103, 114, 97, 116, 105, 111, 110]))[_0x5a67dd([114, 101, 115, 117, 108, 116])] != _0x5a67dd([101, 110, 100]) || !_0x2f5a26);
        }
        function _0x59f785(_0x38672a, _0x51ed0c) {
          return _0x38672a[_0x5a67dd([112, 108, 117, 103, 105, 110, 115])][_0x5a67dd([104, 97, 115])](_0x51ed0c);
        }
        function _0x23617b(_0x5367c8, _0x419915) {
          return _0x5367c8[_0x5a67dd([112, 108, 117, 103, 105, 110, 115])][_0x5a67dd([103, 101, 116])](_0x419915);
        }
        function _0x4bfb16(_0x266d8e) {
          let _0x5ae7c1 = "";
          for (const _0x43810c of _0x266d8e) _0x5ae7c1 += String[_0x5a67dd([102, 114, 111, 109, 67, 104, 97, 114, 67, 111, 100, 101])](_0x43810c);
          return _0x5ae7c1;
        }
        function _0x3a3029(_0x597681) {
          const _0x288cea = new Uint8Array(_0x597681[_0x5a67dd([108, 101, 110, 103, 116, 104])]);
          for (let _0x289b47 = 0; _0x289b47 < _0x597681[_0x5a67dd([108, 101, 110, 103, 116, 104])]; _0x289b47++) _0x288cea[_0x289b47] = _0x597681[_0x5a67dd([99, 104, 97, 114, 67, 111, 100, 101, 65, 116])](_0x289b47);
          return _0x288cea;
        }
        _0x249ffb && _0x1d670a(_0x3eac9b(_0x4438df), _0x249ffb);
      })(_0x1923ac);
    }(this);
  }
  set ["adapter"](_0x2c5c98) {
    if (this["_adapter"]) throw new CKEditorError("commentsrepository-adapter-already-set");
    this["_adapter"] = _0x2c5c98;
  }
  get ["adapter"]() {
    return this["_adapter"];
  }
  ["addCommentThread"]({ channelId: _0x2cfbcc = gt, threadId: _0x28aaaf = uid(), comments: _0x45e1b8 = [], unlinkedAt: _0x537e7c = null, resolvedAt: _0x4c6b8e = null, resolvedBy: _0x557e27 = null, target: _0x112842 = null, context: _0x58e0a1 = null, attributes: _0x1baa5c = {}, isResolvable: _0x4010b0 = true, isSubmitted: _0xb3b663 = false, isFromAdapter: _0x53dc8e = false } = {}) {
    return this["fire"](bt("addCommentThread", _0x2cfbcc), { "channelId": _0x2cfbcc, "threadId": _0x28aaaf, "comments": _0x45e1b8, "unlinkedAt": _0x537e7c, "resolvedAt": _0x4c6b8e, "resolvedBy": _0x557e27, "target": _0x112842, "context": _0x58e0a1, "attributes": _0x1baa5c, "isFromAdapter": _0x53dc8e, "isResolvable": _0x4010b0, "isSubmitted": _0xb3b663 }), this["getCommentThread"](_0x28aaaf);
  }
  ["openNewCommentThread"]({ channelId: _0x46e141 = gt, threadId: _0x52a481 = uid(), target: _0x174f90, context: _0x243ee6 = null, isResolvable: _0x5c01d1 = true }) {
    if (this["_readOnlyChannels"]["has"](_0x46e141) || this["_readOnlyChannels"]["has"](void 0)) return null;
    if (!_0x174f90) throw new CKEditorError("commentsrepository-missing-target");
    const _0xbb22f6 = this["addCommentThread"]({ "channelId": _0x46e141, "threadId": _0x52a481, "target": _0x174f90, "context": _0x243ee6, "isResolvable": _0x5c01d1 });
    if (!_0xbb22f6) return null;
    const _0xbd10fc = this["_threadToController"]["get"](_0xbb22f6), _0x5ce338 = _0xbd10fc["view"]["commentThreadInputView"]["commentInputView"], _0x446e73 = this["context"]["plugins"]["get"](N2), _0x1483b1 = _0x446e73["getByInnerView"](_0xbd10fc["view"]);
    return _0x446e73["activate"](_0x1483b1), _0x5ce338["once"]("editorReady", () => _0x5ce338["focus"]()), _0xbb22f6;
  }
  ["hasCommentThread"](_0x3cf7df) {
    if ("string" != typeof _0x3cf7df) throw new CKEditorError("commentsrepository-invalid-comment-thread-id");
    return this["_threads"]["has"](_0x3cf7df);
  }
  ["updateCommentThread"]({ channelId: _0x9f6bd = gt, threadId: _0x304e38, context: _0x1d39a6, unlinkedAt: _0x2bb1e8, attributes: _0x876070, isFromAdapter: _0x3276a6 = false }) {
    return this["fire"](bt("updateCommentThread", _0x9f6bd), { "channelId": _0x9f6bd, "threadId": _0x304e38, "context": _0x1d39a6, "unlinkedAt": _0x2bb1e8, "attributes": _0x876070, "isFromAdapter": _0x3276a6 }), this["getCommentThread"](_0x304e38);
  }
  ["getCommentThread"](_0x5e7864) {
    if ("string" != typeof _0x5e7864) throw new CKEditorError("commentsrepository-invalid-comment-thread-id");
    return this["_threads"]["get"](_0x5e7864);
  }
  ["fetchCommentThread"]({ channelId: _0x512059, threadId: _0x568e81 } = {}) {
    const _0x967221 = this["getCommentThread"](_0x568e81);
    if (_0x967221) return Promise["resolve"](_0x967221);
    if (!this["adapter"]) return Promise["resolve"](void 0);
    if ("function" != typeof this["adapter"]["getCommentThread"]) throw new CKEditorError("commentsrepository-missing-thread-and-adapter-method", this["context"]);
    return this["adapter"]["getCommentThread"]({ "channelId": _0x512059, "threadId": _0x568e81 })["then"]((_0x3fa8d6) => this["hasCommentThread"](_0x568e81) ? this["getCommentThread"](_0x568e81) : _0x3fa8d6 ? this["addCommentThread"](Object["assign"]({ "isFromAdapter": true, "channelId": _0x512059 }, _0x3fa8d6)) : void 0)["catch"]((_0x6685b2) => {
      throw console["error"](_0x6685b2), new CKEditorError("commentsrepository-fetch-comment-thread", this["context"]);
    });
  }
  ["getCommentThreads"]({ channelId: _0x1227be, skipNotAttached: _0x43b13c = false, skipEmpty: _0x306db0 = false, toJSON: _0x52561e = false } = {}) {
    const _0x6d88bc = [];
    for (const _0x4b807e of this["_threads"]["values"]()) _0x1227be && _0x4b807e["channelId"] !== _0x1227be || _0x43b13c && !_0x4b807e["isAttached"] || _0x306db0 && 0 === _0x4b807e["length"] || _0x6d88bc["push"](_0x4b807e);
    return _0x52561e ? _0x6d88bc["map"]((_0x1394d8) => _0x1394d8["toJSON"]()) : _0x6d88bc;
  }
  ["setActiveCommentThread"](_0xc1f52a) {
    const _0x5e03ba = this["context"]["plugins"]["get"](N2);
    if (!_0xc1f52a) return void (this["activeCommentThread"] && _0x5e03ba["deactivateAll"]());
    const _0x4ef6f9 = this["getCommentThread"](_0xc1f52a);
    if (!_0x4ef6f9) throw new CKEditorError("commentsrepository-active-missing-comment-thread", null, { "threadId": _0xc1f52a });
    if (!this["_threadToController"]["has"](_0x4ef6f9)) throw new CKEditorError("commentsrepository-active-not-attached", null, { "threadId": _0xc1f52a });
    const _0x500b89 = _0x5e03ba["getByInnerView"](this["_threadToController"]["get"](_0x4ef6f9)["view"]);
    _0x5e03ba["activate"](_0x500b89);
  }
  ["switchReadOnly"](_0x1756a7, _0x5b71ae) {
    _0x1756a7 ? this["_readOnlyChannels"]["add"](_0x5b71ae) : this["_readOnlyChannels"]["delete"](_0x5b71ae), this["fire"]("change:_readOnlyChannels", "_readOnlyChannels", this["_readOnlyChannels"], this["_readOnlyChannels"]);
  }
  ["isReadOnly"](_0x36bcc5) {
    return this["_readOnlyChannels"]["has"](_0x36bcc5) || this["_readOnlyChannels"]["has"](void 0);
  }
  ["createCommentThreadController"](_0x15c87f, _0x3981db) {
    return new At(_0x15c87f, _0x3981db);
  }
  ["setPermissions"](_0x18fc6a, _0x23a1b9 = gt) {
    this["_permissions"]["set"](_0x23a1b9, _0x18fc6a), this["fire"]("change:_permissions", "_permissions", this["_permissions"], this["_permissions"]);
  }
  ["getPermissions"](_0x1fd47d = gt) {
    return this["_permissions"]["has"](_0x1fd47d) ? this["_permissions"]["get"](_0x1fd47d) : Tt;
  }
  ["_addCommentThread"]({ channelId: _0x1e716b, threadId: _0xe08337, comments: _0x4eaf92, unlinkedAt: _0x4b185e, resolvedAt: _0x50e41d, resolvedBy: _0x20f0ba, target: _0x5ef736, context: _0x45ef01, attributes: _0x595ae1, isFromAdapter: _0x3da988, isResolvable: _0x4b801c, isSubmitted: _0x581a64 }) {
    if ("string" != typeof _0xe08337) throw new CKEditorError("commentsrepository-invalid-comment-thread-id", null, { "threadId": _0xe08337 });
    if (this["hasCommentThread"](_0xe08337)) throw new CKEditorError("commentsrepository-duplicated-comment-thread-id", null, { "threadId": _0xe08337 });
    const _0x54f5e5 = new ie(this, { "channelId": _0x1e716b, "id": _0xe08337, "context": _0x45ef01, "attributes": _0x595ae1, "unlinkedAt": _0x4b185e, "resolvedAt": _0x50e41d, "resolvedBy": _0x20f0ba ? this["context"]["plugins"]["get"](l)["getUser"](_0x20f0ba) : null, "isResolvable": _0x4b801c, "isSubmitted": _0x581a64 || _0x3da988 });
    this["_threads"]["set"](_0xe08337, _0x54f5e5);
    for (const _0x4feaa8 of _0x4eaf92) _0x54f5e5["_add"](this["_createNewComment"]({ "threadId": _0xe08337, ..._0x4feaa8 }));
    return _0x5ef736 && _0x54f5e5["attachTo"](_0x5ef736), _0x3da988 || !_0x54f5e5["length"] ? Promise["resolve"]() : this["_submitCommentThread"]({ "channelId": _0x1e716b, "threadId": _0xe08337 });
  }
  ["_submitCommentThread"]({ channelId: _0x8244aa, threadId: _0x24e5f4 }) {
    if (!this["hasCommentThread"](_0x24e5f4)) throw new CKEditorError("commentsrepository-missing-comment-thread", this);
    const _0x30ec53 = this["getCommentThread"](_0x24e5f4);
    if (_0x30ec53["_isSubmitted"] = true, !this["adapter"] || "function" != typeof this["adapter"]["addCommentThread"]) return Promise["resolve"]();
    const { id: _0x32e45b, comments: _0x2c97eb, resolvedAt: _0x7e4826, resolvedBy: _0x4b0f6e, context: _0x23dc68, attributes: _0x144deb } = _0x30ec53, _0xc79cf3 = this["context"]["plugins"]["get"]("PendingActions"), _0xa38c5e = _0xc79cf3["add"](S2(this["context"]["locale"], "PENDING_ACTION_COMMENT_THREAD"));
    return this["adapter"]["addCommentThread"]({ "channelId": _0x8244aa, "threadId": _0x32e45b, "comments": _0x2c97eb["map"]((_0x2d90c1) => _0x2d90c1["toJSON"]()), "resolvedAt": _0x7e4826, "resolvedBy": _0x4b0f6e ? _0x4b0f6e["id"] : _0x4b0f6e, "context": _0x23dc68, "attributes": _0x144deb })["then"](({ comments: _0x33e543 }) => {
      _0xc79cf3["remove"](_0xa38c5e);
      for (const _0x194575 of _0x33e543) this["_updateComment"]({ "channelId": _0x8244aa, "threadId": _0x24e5f4, "commentId": _0x194575["commentId"], "createdAt": _0x194575["createdAt"], "isFromAdapter": true });
    })["catch"]((_0x143e5f) => {
      throw console["error"](_0x143e5f), new CKEditorError("commentsrepository-add-comment-thread-internal-error", this);
    });
  }
  ["_attachCommentThread"]({ threadId: _0x4223b3, target: _0x1903f2 }) {
    const _0x2da36e = this["getCommentThread"](_0x4223b3);
    if (!_0x2da36e) throw new CKEditorError("commentsrepository-attach-missing-comment-thread", this);
    const _0x1f6599 = this["context"]["plugins"]["get"]("PendingActions"), _0x3a458a = this["context"]["plugins"]["get"](N2), _0x4bed66 = this["_createCommentThreadView"](_0x2da36e), _0x1451df = new At(_0x2da36e, _0x4bed66);
    let _0x10fd1c = null;
    _0x4bed66["on"]("change:isDirty", (_0x5b33b4, _0x49601e, _0x16c5ad) => {
      _0x16c5ad ? _0x10fd1c = _0x1f6599["add"](S2(this["context"]["locale"], "PENDING_ACTION_COMMENT_THREAD")) : _0x10fd1c && (_0x1f6599["remove"](_0x10fd1c), _0x10fd1c = null);
    }), this["_threadToController"]["set"](_0x2da36e, _0x1451df), this["_viewToController"]["set"](_0x4bed66, _0x1451df);
    const _0x38a856 = new T2(this["context"]["locale"], _0x4bed66);
    _0x38a856["bind"]("length")["to"](_0x4bed66), _0x38a856["bind"]("isDirty")["to"](_0x4bed66, "isDirty", _0x4bed66, "length", (_0x414989, _0x4a10aa) => _0x414989 || !_0x4a10aa), _0x38a856["bind"]("isActive")["to"](_0x4bed66), _0x38a856["type"] = "comment";
    const _0x3d8620 = new d2({ "view": _0x38a856, "target": _0x1903f2, "type": "comment", "isVisible": !_0x2da36e["isResolved"] });
    return _0x4bed66["on"]("escape", () => {
      _0x3d8620["fire"]("escape");
    }), this["_bindAnnotationToEditors"](_0x4bed66, _0x3d8620), _0x3a458a["add"](_0x3d8620), _0x3d8620;
  }
  ["_bindAnnotationToEditors"](_0x1dab32, _0x25508c) {
    this["listenTo"](_0x1dab32, "editorReady", (_0x23e084, _0x3a9fbd) => {
      const _0x2ee3f0 = _0x3a9fbd["ui"]["view"]["body"]["bodyCollectionContainer"];
      _0x25508c["focusableElements"]["add"](_0x2ee3f0), this["context"] instanceof Editor && this["context"]["ui"]["focusTracker"]["add"](_0x2ee3f0);
    }, { "priority": "highest" }), this["listenTo"](_0x1dab32, "editorDestroyed", (_0x2d7038, _0x31024f) => {
      const _0x46e73a = _0x31024f["ui"]["view"]["body"]["bodyCollectionContainer"];
      _0x25508c["focusableElements"]["has"](_0x46e73a) && _0x25508c["focusableElements"]["remove"](_0x46e73a), this["context"] instanceof Editor && this["context"]["ui"]["focusTracker"]["remove"](_0x46e73a);
    });
  }
  ["_unbindEditors"](_0x3cc90b) {
    this["stopListening"](_0x3cc90b, "editorReady"), this["stopListening"](_0x3cc90b, "editorDestroyed");
  }
  ["_createCommentThreadView"](_0x170e7c) {
    const _0x262f54 = this["context"]["plugins"]["get"](l), { config: _0x407a1d, locale: _0x393fa9 } = this["context"], _0x255353 = E(_0x407a1d["get"]("locale"));
    return new (0, _0x407a1d["get"]("comments")["CommentThreadView"])(_0x393fa9, _0x170e7c, _0x262f54["me"], { "editorConfig": { ..._0x407a1d["get"]("comments.editorConfig"), "licenseKey": this["context"]["config"]["get"]("licenseKey") }, "copyMarkers": _0x407a1d["get"]("comments.copyMarkers"), "maxCommentsWhenCollapsed": _0x407a1d["get"]("comments.maxCommentsWhenCollapsed"), "maxThreadTotalWeight": _0x407a1d["get"]("comments.maxThreadTotalWeight"), "maxCommentCharsWhenCollapsed": _0x407a1d["get"]("comments.maxCommentCharsWhenCollapsed"), "formatDateTime": _0x255353, "CommentView": _0x407a1d["get"]("comments")["CommentView"] });
  }
  ["_resolveCommentThread"]({ threadId: _0x18282b, channelId: _0x40329d, resolvedAt: _0x4a963a, resolvedBy: _0x140b05, isFromAdapter: _0x247ffc }) {
    if (!this["hasCommentThread"](_0x18282b)) throw new CKEditorError("commentsrepository-missing-comment-thread", null, { "threadId": _0x18282b });
    const _0x4bef08 = this["getCommentThread"](_0x18282b);
    if (_0x4bef08["isResolved"]) throw new CKEditorError("commentsrepository-resolved-comment-thread", null, { "threadId": _0x18282b });
    const _0x24ac6b = this["context"]["plugins"]["get"](l);
    if (_0x4bef08["resolvedBy"] = _0x24ac6b["getUser"](_0x140b05), _0x4bef08["resolvedAt"] = _0x4a963a, _0x247ffc || !this["adapter"] || "function" != typeof this["adapter"]["resolveCommentThread"]) return Promise["resolve"]();
    const _0x308746 = this["context"]["plugins"]["get"]("PendingActions"), _0x32e3b0 = _0x308746["add"](S2(this["context"]["locale"], "PENDING_ACTION_COMMENT_THREAD"));
    return this["adapter"]["resolveCommentThread"]({ "channelId": _0x40329d, "threadId": _0x18282b })["then"](({ resolvedAt: _0x5ba86b, resolvedBy: _0x398a5f }) => {
      _0x308746["remove"](_0x32e3b0), _0x4bef08["resolvedBy"]["id"] !== _0x398a5f && (_0x4bef08["resolvedBy"] = _0x24ac6b["getUser"](_0x398a5f)), _0x4bef08["resolvedAt"] = _0x5ba86b;
    })["catch"]((_0x2afa40) => {
      throw console["error"](_0x2afa40), new CKEditorError("commentsrepository-resolve-comment-thread-internal-error", this);
    });
  }
  ["_reopenCommentThread"]({ threadId: _0x173ad2, channelId: _0x536033, isFromAdapter: _0x8acbe8 }) {
    if (!this["hasCommentThread"](_0x173ad2)) throw new CKEditorError("commentsrepository-missing-comment-thread", null, { "threadId": _0x173ad2 });
    const _0x132b1f = this["getCommentThread"](_0x173ad2);
    if (!_0x132b1f["isResolved"]) throw new CKEditorError("commentsrepository-reopen-comment-thread", null, { "threadId": _0x173ad2 });
    if (_0x132b1f["resolvedBy"] = null, _0x132b1f["resolvedAt"] = null, _0x8acbe8 || !this["adapter"] || "function" != typeof this["adapter"]["reopenCommentThread"]) return Promise["resolve"]();
    const _0x108da2 = this["context"]["plugins"]["get"]("PendingActions"), _0x10c434 = _0x108da2["add"](S2(this["context"]["locale"], "PENDING_ACTION_COMMENT_THREAD"));
    return this["adapter"]["reopenCommentThread"]({ "channelId": _0x536033, "threadId": _0x173ad2 })["then"](() => _0x108da2["remove"](_0x10c434))["catch"]((_0x2e08a2) => {
      throw console["error"](_0x2e08a2), new CKEditorError("commentsrepository-reopen-comment-thread-internal-error", this);
    });
  }
  ["_removeCommentThread"]({ threadId: _0x397f79, isFromAdapter: _0x8b340b }) {
    const _0x28bc3b = this["getCommentThread"](_0x397f79);
    if (!_0x28bc3b) throw new CKEditorError("commentsrepository-remove-missing-comment-thread", this);
    if (this["_detachCommentThread"](_0x397f79), this["_threads"]["delete"](_0x397f79), !_0x28bc3b["isSubmitted"] || _0x8b340b || !this["adapter"] || "function" != typeof this["adapter"]["removeCommentThread"]) return Promise["resolve"]();
    const _0x72dd20 = this["context"]["plugins"]["get"]("PendingActions"), { channelId: _0x1dc4b5 } = _0x28bc3b, _0x46f4e8 = _0x72dd20["add"](S2(this["context"]["locale"], "PENDING_ACTION_COMMENT_THREAD"));
    return this["adapter"]["removeCommentThread"]({ "channelId": _0x1dc4b5, "threadId": _0x397f79 })["then"](() => _0x72dd20["remove"](_0x46f4e8))["catch"]((_0x1053ee) => {
      throw console["error"](_0x1053ee), new CKEditorError("commentsrepository-remove-comment-thread-internal-error", this);
    });
  }
  ["_updateCommentThread"]({ threadId: _0x1d3768, unlinkedAt: _0x436dc1, context: _0x2321ed, attributes: _0x4469a5, isFromAdapter: _0x451092 }) {
    if ("string" != typeof _0x1d3768) throw new CKEditorError("commentsrepository-invalid-comment-thread-id", null, { "threadId": _0x1d3768 });
    if (!this["hasCommentThread"](_0x1d3768)) throw new CKEditorError("commentsrepository-missing-comment-thread", null, { "threadId": _0x1d3768 });
    const _0x492def = this["getCommentThread"](_0x1d3768);
    let _0x493f23 = false;
    if (void 0 !== _0x2321ed && _0x492def["context"] !== _0x2321ed && (_0x492def["context"] = _0x2321ed, _0x493f23 = true), void 0 !== _0x436dc1 && _0x492def["unlinkedAt"] !== _0x436dc1 && (_0x492def["unlinkedAt"] = _0x436dc1, _0x493f23 = true), _0x4469a5 && !isEqual_default(_0x4469a5, _0x492def["attributes"]) && (_0x492def["attributes"] = _0x4469a5, _0x493f23 = true), !_0x493f23) return Promise["resolve"]();
    if (!_0x492def["isSubmitted"] || _0x451092 || !this["adapter"] || "function" != typeof this["adapter"]["updateCommentThread"]) return Promise["resolve"]();
    const _0x913c2 = this["context"]["plugins"]["get"]("PendingActions"), { channelId: _0x444491 } = _0x492def, _0x46c238 = _0x913c2["add"](S2(this["context"]["locale"], "PENDING_ACTION_COMMENT_THREAD"));
    return this["adapter"]["updateCommentThread"]({ "channelId": _0x444491, "threadId": _0x1d3768, "context": _0x2321ed, "unlinkedAt": _0x436dc1, "attributes": _0x4469a5 })["then"](() => _0x913c2["remove"](_0x46c238))["catch"]((_0x2a965a) => {
      throw console["error"](_0x2a965a), new CKEditorError("commentsrepository-update-comment-thread-internal-error", this);
    });
  }
  ["_detachCommentThread"](_0x3013e0) {
    const _0x4fc090 = this["context"]["plugins"]["get"](N2), _0x4d4c7f = this["getCommentThread"](_0x3013e0);
    if (this["_threadToController"]["has"](_0x4d4c7f)) {
      const _0x160277 = this["_threadToController"]["get"](_0x4d4c7f), _0x3e89cc = _0x160277["view"], _0x19fdc5 = _0x4fc090["getByInnerView"](_0x3e89cc);
      this["_threadToController"]["delete"](_0x4d4c7f), this["_viewToController"]["delete"](_0x3e89cc), _0x19fdc5 && _0x4fc090["remove"](_0x19fdc5), _0x160277["destroy"](), _0x3e89cc["destroy"]()["then"](() => {
        this["_unbindEditors"](_0x3e89cc);
      });
    }
  }
  ["_updateActiveAnnotation"]({ threadId: _0x7f2328, resolvedAt: _0x325eaa }) {
    const _0x7ba68c = !!_0x325eaa, _0x2ef99e = this["context"]["plugins"]["get"](N2), _0x19a3a5 = this["getCommentThread"](_0x7f2328);
    if (this["_threadToController"]["has"](_0x19a3a5)) {
      const _0x43fad9 = this["_threadToController"]["get"](_0x19a3a5)["view"], _0xf8e1d5 = _0x2ef99e["getByInnerView"](_0x43fad9);
      _0xf8e1d5 && (_0x7ba68c && _0x2ef99e["_removeActiveAnnotation"](_0xf8e1d5), _0xf8e1d5["refreshVisibility"]());
    }
  }
  ["_getExternalAuthor"](_0x4059de) {
    const _0x19033b = this["context"]["plugins"]["get"](l), _0x51cd0a = M("external:" + _0x4059de), _0x3f7bb6 = _0x19033b["getUser"](_0x51cd0a);
    return _0x3f7bb6 || _0x19033b["addUser"]({ "id": _0x51cd0a, "name": _0x4059de });
  }
  ["_createNewComment"]({ threadId: _0x2888a9, commentId: _0x35fc2f = uid(), content: _0xf74f26, authorId: _0x456802, createdAt: _0x50301b, attributes: _0x107bc7 }) {
    if ("string" != typeof _0x35fc2f) throw new CKEditorError("commentsrepository-invalid-commentid");
    if ("string" != typeof _0x456802) throw new CKEditorError("commentsrepository-invalid-comment-authorid");
    if ("string" != typeof _0xf74f26 || !_0xf74f26["trim"]()) throw new CKEditorError("commentsrepository-invalid-comment-content");
    const _0x4e8c50 = this["context"]["plugins"]["get"](l)["getUser"](_0x456802);
    if (!_0x4e8c50) throw new CKEditorError("commentsrepository-add-comment-user-not-exists", null, { "authorId": _0x456802 });
    let _0x10a75a = null, _0x2531b4 = _0x50301b;
    return _0x107bc7 && _0x107bc7["@external"] && (_0x10a75a = this["_getExternalAuthor"](_0x107bc7["@external"]["authorName"]), _0x2531b4 = new Date(_0x107bc7["@external"]["createdAt"])), new se(this, { "threadId": _0x2888a9, "id": _0x35fc2f, "author": _0x10a75a || _0x4e8c50, "creator": _0x4e8c50, "content": _0xf74f26, "createdAt": _0x50301b, "authoredAt": _0x2531b4, "attributes": _0x107bc7 });
  }
  ["_addComment"](_0x5befee) {
    let { threadId: _0x3addd4, content: _0x1b8af6, attributes: _0x29c49e, isFromAdapter: _0x516664 } = _0x5befee;
    const _0x4bc29e = this["getCommentThread"](_0x5befee["threadId"]);
    if (!_0x4bc29e) throw new CKEditorError("commentsrepository-add-comment-to-missing-comment-thread", this);
    const _0x6fa3c9 = this["_createNewComment"](_0x5befee), { id: _0x1dae5d } = _0x6fa3c9;
    if (_0x4bc29e["_add"](_0x6fa3c9), _0x516664 || !this["adapter"] || "function" != typeof this["adapter"]["addComment"] || !_0x4bc29e["isSubmitted"]) return Promise["resolve"]();
    const _0x442b19 = this["context"]["plugins"]["get"]("PendingActions"), { channelId: _0x4f0bed } = _0x4bc29e, _0x28b9cd = _0x442b19["add"](S2(this["context"]["locale"], "PENDING_ACTION_COMMENT_THREAD"));
    return _0x29c49e || (_0x29c49e = {}), this["adapter"]["addComment"]({ "channelId": _0x4f0bed, "threadId": _0x3addd4, "commentId": _0x1dae5d, "content": _0x1b8af6, "attributes": _0x29c49e })["then"]((_0x4bdcfa) => {
      _0x442b19["remove"](_0x28b9cd), _0x4bdcfa && this["_updateComment"]({ "channelId": _0x4f0bed, "threadId": _0x3addd4, "commentId": _0x1dae5d, "createdAt": _0x4bdcfa["createdAt"], "isFromAdapter": true });
    })["catch"]((_0x56626f) => {
      throw console["error"](_0x56626f), new CKEditorError("commentsrepository-add-comment-internal-error", this);
    });
  }
  ["_updateComment"]({ threadId: _0x24c7b3, commentId: _0x47582f, content: _0x86762, createdAt: _0xabd188, attributes: _0x418a1d, isFromAdapter: _0x2c7e6a }) {
    if (void 0 !== _0x86762 && ("string" != typeof _0x86762 || !_0x86762["trim"]()["length"])) throw new CKEditorError("commentsrepository-update-comment-invalid-content");
    const _0x279ada = this["getCommentThread"](_0x24c7b3), _0xed3009 = _0x279ada["getComment"](_0x47582f);
    if (!_0xed3009) throw new CKEditorError("commentsrepository-update-missing-comment", this);
    let _0x1126f9 = false;
    if (_0x86762 && _0x86762 !== _0xed3009["content"] && (_0xed3009["isEditable"] || _0x2c7e6a) && (_0xed3009["content"] = _0x86762, _0x1126f9 = true), _0xabd188 && _0xabd188 !== _0xed3009["createdAt"] && (_0xed3009["createdAt"] = _0xabd188, _0xed3009["attributes"] && _0xed3009["attributes"]["@external"] || (_0xed3009["authoredAt"] = _0xabd188), _0x1126f9 = true), _0x418a1d && !isEqual_default(_0x418a1d, _0xed3009["attributes"]) && (_0xed3009["attributes"] = _0x418a1d, _0x1126f9 = true), !_0x1126f9) return Promise["resolve"]();
    if (_0x279ada["fire"]("commentUpdated"), _0x2c7e6a || !this["adapter"] || "function" != typeof this["adapter"]["updateComment"]) return Promise["resolve"]();
    const _0x49b12a = this["context"]["plugins"]["get"]("PendingActions"), { channelId: _0x47f288 } = this["getCommentThread"](_0xed3009["threadId"]), _0x25e83e = _0x49b12a["add"](S2(this["context"]["locale"], "PENDING_ACTION_COMMENT_THREAD"));
    return this["adapter"]["updateComment"]({ "channelId": _0x47f288, "threadId": _0x24c7b3, "commentId": _0x47582f, "content": _0x86762, "attributes": _0x418a1d })["then"](() => _0x49b12a["remove"](_0x25e83e))["catch"]((_0x1cadd0) => {
      throw console["error"](_0x1cadd0), new CKEditorError("commentsrepository-update-comment-internal-error", this);
    });
  }
  ["_removeComment"]({ threadId: _0x4c6d57, commentId: _0x5b52a3, isFromAdapter: _0x18162a }) {
    const _0x430615 = this["getCommentThread"](_0x4c6d57), _0x574589 = _0x430615["getComment"](_0x5b52a3);
    if (!_0x574589) throw new CKEditorError("commentsrepository-remove-missing-comment", this);
    if (_0x430615["_remove"](_0x574589), _0x18162a || !this["adapter"] || "function" != typeof this["adapter"]["removeComment"]) return Promise["resolve"]();
    const _0x2bc61f = this["context"]["plugins"]["get"]("PendingActions"), { channelId: _0x35f71c } = _0x430615, _0x1386ac = _0x2bc61f["add"](S2(this["context"]["locale"], "PENDING_ACTION_COMMENT_THREAD"));
    return this["adapter"]["removeComment"]({ "channelId": _0x35f71c, "threadId": _0x4c6d57, "commentId": _0x5b52a3 })["then"](() => _0x2bc61f["remove"](_0x1386ac))["catch"]((_0x126f66) => {
      throw console["error"](_0x126f66), new CKEditorError("commentsrepository-remove-comment-internal-error", this);
    });
  }
};
var ie = class extends ObservableMixin() {
  constructor(_0x19e9d7, _0x459d5b) {
    super();
    __publicField(this, "channelId");
    __publicField(this, "id");
    __publicField(this, "_isAttached");
    __publicField(this, "_isSubmitted");
    __publicField(this, "comments");
    __publicField(this, "_repository");
    const _0x2599c2 = _0x459d5b["isResolvable"];
    this["channelId"] = _0x459d5b["channelId"], this["id"] = _0x459d5b["id"], this["comments"] = new Collection(), this["_repository"] = _0x19e9d7, this["_isAttached"] = false, this["_isSubmitted"] = _0x459d5b["isSubmitted"], this["set"]("_hasTargetInContent", true), this["bind"]("isReadOnly")["to"](_0x19e9d7, "_permissions", _0x19e9d7, "_readOnlyChannels", () => _0x19e9d7["isReadOnly"](this["channelId"])), this["bind"]("isRemovable")["to"](_0x19e9d7, "_permissions", () => _0x19e9d7["getPermissions"](this["channelId"])["admin"]), this["bind"]("canComment")["to"](_0x19e9d7, "_permissions", () => {
      const _0xe44c6 = _0x19e9d7["getPermissions"](this["channelId"]);
      return _0xe44c6["write"] || _0xe44c6["admin"];
    }), this["bind"]("isResolvable")["to"](_0x19e9d7, "_permissions", () => _0x2599c2 && _0x19e9d7["getPermissions"](this["channelId"])["resolve"]), this["set"]("context", _0x459d5b["context"]), this["bind"]("archivedAt")["to"](this, "resolvedAt", this, "unlinkedAt", (_0x4dc2e8, _0x57bc65) => _0x4dc2e8 ? _0x57bc65 ? _0x4dc2e8 < _0x57bc65 ? _0x4dc2e8 : _0x57bc65 : _0x4dc2e8 : _0x57bc65), this["set"]("unlinkedAt", _0x459d5b["unlinkedAt"] || null), this["set"]("resolvedAt", _0x459d5b["resolvedAt"] || null), this["set"]("resolvedBy", _0x459d5b["resolvedBy"] || null), this["bind"]("isResolved")["to"](this, "resolvedAt", (_0x5e841e) => !!_0x5e841e), this["set"]("attributes", _0x459d5b["attributes"] || {});
  }
  get ["weight"]() {
    return Array["from"](this["comments"])["reduce"]((_0x3d0ad9, _0x445627) => _0x3d0ad9 + _0x445627["weight"], 0);
  }
  get ["length"]() {
    return this["comments"]["length"];
  }
  get ["isAttached"]() {
    return this["_isAttached"];
  }
  get ["isSubmitted"]() {
    return this["_isSubmitted"];
  }
  ["submit"]() {
    const { channelId: _0x46e7b6, id: _0x523fec } = this;
    this["_repository"]["fire"](bt("submitCommentThread", _0x46e7b6), { "channelId": _0x46e7b6, "threadId": _0x523fec });
  }
  ["setUnlinkedAt"](_0x176782) {
    this["_update"]({ "unlinkedAt": _0x176782 });
  }
  ["resolve"]({ resolvedAt: _0x4220f8 = /* @__PURE__ */ new Date(), resolvedBy: _0x1ae586 = null, isFromAdapter: _0x34f448 = false } = {}) {
    const _0x5ea015 = this["_repository"]["context"]["plugins"]["get"](l)["me"], { channelId: _0x318f27, id: _0xbfecae } = this;
    this["_repository"]["fire"](bt("resolveCommentThread", _0x318f27), { "channelId": _0x318f27, "threadId": _0xbfecae, "resolvedAt": _0x4220f8, "resolvedBy": _0x1ae586 || _0x5ea015["id"], "isFromAdapter": _0x34f448 });
  }
  ["reopen"]({ isFromAdapter: _0x35bb27 = false } = {}) {
    const { channelId: _0x4b6b54, id: _0x48a614 } = this;
    this["_repository"]["fire"](bt("reopenCommentThread", _0x4b6b54), { "channelId": _0x4b6b54, "threadId": _0x48a614, "isFromAdapter": _0x35bb27 });
  }
  ["setContext"](_0x37d169) {
    this["context"] || this["_update"]({ "context": _0x37d169 });
  }
  ["setAttribute"](_0x53426e, _0x583fa9) {
    const _0x46ab3f = cloneDeep_default(this["attributes"]);
    set_default(_0x46ab3f, _0x53426e, _0x583fa9), this["_update"]({ "attributes": _0x46ab3f });
  }
  ["removeAttribute"](_0x48d67f) {
    const _0xc40929 = cloneDeep_default(this["attributes"]);
    unset_default(_0xc40929, _0x48d67f), this["_update"]({ "attributes": _0xc40929 });
  }
  ["remove"]({ isFromAdapter: _0x34596e = false } = {}) {
    const { channelId: _0x1b39f7, id: _0x1d35fc } = this;
    this["_repository"]["fire"](bt("removeCommentThread", _0x1b39f7), { "channelId": _0x1b39f7, "threadId": _0x1d35fc, "isFromAdapter": _0x34596e });
  }
  ["attachTo"](_0xc93945) {
    return this["_repository"]["_attachCommentThread"]({ "threadId": this["id"], "target": _0xc93945 });
  }
  ["addComment"](_0x3f5927) {
    const { channelId: _0x1142a5, id: _0x1d9a43 } = this;
    this["_repository"]["fire"](bt("addComment", _0x1142a5, _0x1d9a43), Object["assign"]({ "channelId": _0x1142a5, "threadId": _0x1d9a43 }, _0x3f5927));
  }
  ["getComment"](_0x1d9c9b) {
    if ("string" != typeof _0x1d9c9b) throw new CKEditorError("commentsrepository-get-comment-invalid-id", null, { "commentId": _0x1d9c9b });
    return this["comments"]["get"](_0x1d9c9b);
  }
  ["toJSON"]() {
    return { "threadId": this["id"], "context": this["context"], "unlinkedAt": this["unlinkedAt"], "resolvedAt": this["resolvedAt"], "resolvedBy": this["resolvedBy"] ? this["resolvedBy"]["id"] : null, "archivedAt": this["archivedAt"], "comments": this["comments"]["map"]((_0x160fa4) => _0x160fa4["toJSON"]()), "attributes": this["attributes"] };
  }
  ["_add"](_0x12ccdd) {
    return this["listenTo"](_0x12ccdd, "change:authoredAt", () => {
      const _0x5bc569 = this["_findOptimalIndex"](_0x12ccdd), _0x3c4167 = this["comments"];
      _0x5bc569 - 1 != _0x3c4167["getIndex"](_0x12ccdd) && _0x5bc569 + 1 != _0x3c4167["getIndex"](_0x12ccdd) && (this["_remove"](_0x12ccdd), this["_add"](_0x12ccdd));
    }), this["comments"]["add"](_0x12ccdd, this["_findOptimalIndex"](_0x12ccdd));
  }
  ["_update"](_0x33d308) {
    const { channelId: _0x5d68f1, id: _0x455ef5 } = this;
    this["_repository"]["fire"](bt("updateCommentThread", _0x5d68f1), { ..._0x33d308, "channelId": _0x5d68f1, "threadId": _0x455ef5 });
  }
  ["_remove"](_0x42dac6) {
    return this["stopListening"](_0x42dac6), _0x42dac6["destroy"](), this["comments"]["remove"](_0x42dac6);
  }
  ["_findOptimalIndex"](_0x1661c9) {
    const _0x5e2884 = this["comments"]["find"]((_0x7008f7) => new Date(_0x7008f7["authoredAt"])["getTime"]() > new Date(_0x1661c9["authoredAt"])["getTime"]());
    return _0x5e2884 ? this["comments"]["getIndex"](_0x5e2884) : this["length"];
  }
};
var se = class extends ObservableMixin() {
  constructor(_0x16022c, _0x5b6108) {
    super();
    __publicField(this, "id");
    __publicField(this, "threadId");
    __publicField(this, "author");
    __publicField(this, "creator");
    __publicField(this, "isExternal");
    __publicField(this, "createdAt");
    __publicField(this, "_repository");
    const _0x3f77d4 = _0x16022c["context"]["plugins"]["get"](l)["me"], _0x368a64 = _0x16022c["getCommentThread"](_0x5b6108["threadId"]), _0x5c801d = 0 === _0x368a64["comments"]["length"], _0x1714a9 = _0x3f77d4 === _0x5b6108["author"];
    this["id"] = _0x5b6108["id"], this["threadId"] = _0x5b6108["threadId"], this["author"] = _0x5b6108["author"], this["creator"] = _0x5b6108["creator"], this["isExternal"] = Boolean(_0x5b6108["attributes"] && _0x5b6108["attributes"]["@external"]), this["set"]("content", _0x5b6108["content"]), this["createdAt"] = _0x5b6108["createdAt"] || /* @__PURE__ */ new Date(), this["set"]("authoredAt", _0x5b6108["authoredAt"] || /* @__PURE__ */ new Date()), this["bind"]("resolvedAt")["to"](_0x368a64, "resolvedAt"), this["set"]("attributes", _0x5b6108["attributes"] || {}), this["bind"]("isEditable")["to"](_0x16022c, "_permissions", () => {
      const _0x33189f = _0x16022c["getPermissions"](_0x368a64["channelId"])["write"], _0x27fc7e = _0x16022c["getPermissions"](_0x368a64["channelId"])["modifyAll"];
      return _0x1714a9 && _0x33189f || !_0x1714a9 && _0x27fc7e;
    }), this["bind"]("isRemovable")["to"](_0x368a64, "isRemovable", _0x16022c, "_permissions", (_0x9f6d1) => {
      const _0x3419e9 = _0x16022c["getPermissions"](_0x368a64["channelId"])["write"], _0x51e8df = _0x16022c["getPermissions"](_0x368a64["channelId"])["modifyAll"];
      return _0x1714a9 && _0x3419e9 || _0x9f6d1 && _0x5c801d || !_0x1714a9 && _0x51e8df && !_0x5c801d;
    }), this["bind"]("isReadOnly")["to"](_0x368a64, "isReadOnly"), this["_repository"] = _0x16022c;
  }
  get ["weight"]() {
    return Math["max"](function(_0x39858c) {
      const _0x1d6ba6 = document["createElement"]("div");
      return _0x1d6ba6["innerHTML"] = _0x39858c, _0x1d6ba6["textContent"]["length"];
    }(this["content"]), 200);
  }
  ["update"](_0x39cf7e) {
    const { threadId: _0xf2d717, id: _0x134476 } = this;
    if (!this["_repository"]["hasCommentThread"](_0xf2d717)) throw new CKEditorError("commentsrepository-update-comment-missing-comment-thread", this);
    const { channelId: _0x49e528 } = this["_repository"]["getCommentThread"](_0xf2d717);
    this["_repository"]["fire"](bt("updateComment", _0x49e528, _0xf2d717), { "channelId": _0x49e528, "threadId": _0xf2d717, "commentId": _0x134476, ..._0x39cf7e });
  }
  ["setAttribute"](_0x34dbcd, _0x596748) {
    const _0x35e48b = cloneDeep_default(this["attributes"]);
    set_default(_0x35e48b, _0x34dbcd, _0x596748), this["update"]({ "attributes": _0x35e48b });
  }
  ["removeAttribute"](_0x298b3d) {
    const _0x4a12b5 = cloneDeep_default(this["attributes"]);
    unset_default(_0x4a12b5, _0x298b3d), this["update"]({ "attributes": _0x4a12b5 });
  }
  ["remove"](_0x1fea42 = {}) {
    if (!_0x1fea42["isFromAdapter"] && !this["isRemovable"]) return;
    const { threadId: _0x50cc0b, id: _0x59e3f9 } = this;
    if (!this["_repository"]["hasCommentThread"](_0x50cc0b)) throw new CKEditorError("commentsrepository-remove-comment-missing-comment-thread", this);
    const { channelId: _0x1aa0ef } = this["_repository"]["getCommentThread"](_0x50cc0b);
    this["_repository"]["fire"](bt("removeComment", _0x1aa0ef, _0x50cc0b), { "channelId": _0x1aa0ef, "threadId": _0x50cc0b, "commentId": _0x59e3f9, ..._0x1fea42 });
  }
  ["toJSON"]() {
    return { "commentId": this["id"], "content": this["content"], "createdAt": this["createdAt"], "authorId": this["creator"]["id"], "attributes": this["attributes"] };
  }
  ["destroy"]() {
    this["stopListening"]();
  }
};
function bt(_0x2734fc, ..._0x2a3494) {
  for (const _0x4c0058 of _0x2a3494) void 0 !== _0x4c0058 && (_0x2734fc += ":" + String(_0x4c0058));
  return _0x2734fc;
}
var J2 = class extends Command {
  ["refresh"]() {
    const _0x5bbff6 = this["editor"]["model"]["document"]["selection"];
    for (const _0x482cec of _0x5bbff6["getRanges"]()) if (this["_hasContent"](_0x482cec)) return void (this["isEnabled"] = true);
    this["isEnabled"] = false;
  }
  ["execute"]({ threadId: _0x541db7 = uid() } = {}) {
    const _0x4676ce = this["editor"]["model"], _0x4e9ab9 = [];
    for (const _0x4a4ac2 of _0x4676ce["document"]["selection"]["getRanges"]()) this["_hasContent"](_0x4a4ac2) && _0x4e9ab9["push"](this["_trimToContent"](_0x4a4ac2));
    _0x4676ce["change"]((_0x4a3fb3) => {
      for (const _0x1f614c of _0x4e9ab9) {
        const _0x1a728a = uid()["substr"](1, 5), _0x5df521 = "comment:" + _0x541db7 + ":" + _0x1a728a;
        _0x4a3fb3["addMarker"](_0x5df521, { "range": _0x1f614c, "usingOperation": false, "affectsData": false });
      }
    });
  }
  ["_hasContent"](_0x1fbe27) {
    for (const _0x4d6294 of _0x1fbe27["getItems"]()) if (this["_itemIsContent"](_0x4d6294)) return true;
    return false;
  }
  ["_itemIsContent"](_0xe0c5e7) {
    return _0xe0c5e7["is"]("$textProxy") || this["editor"]["model"]["schema"]["isObject"](_0xe0c5e7) && !_0xe0c5e7["is"]("element", "tableCell");
  }
  ["_trimToContent"](_0xde2105) {
    const _0x2dc466 = (_0xa31a41) => !this["_itemIsContent"](_0xa31a41["item"]), _0x265b99 = _0xde2105["start"]["getLastMatchingPosition"](_0x2dc466), _0x4ee79f = _0xde2105["end"]["getLastMatchingPosition"](_0x2dc466, { "direction": "backward" });
    return this["editor"]["model"]["createRange"](_0x265b99, _0x4ee79f);
  }
};
var P3 = class extends Plugin {
  constructor(_0x3a2053) {
    super(_0x3a2053);
    __publicField(this, "_dataCollectors");
    __publicField(this, "_editorAnnotations");
    this["_dataCollectors"] = /* @__PURE__ */ new Set(), this["_editorAnnotations"] = /* @__PURE__ */ new Set();
  }
  static get ["requires"]() {
    return [N2];
  }
  static get ["pluginName"]() {
    return "EditorAnnotations";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    const _0x4852d5 = this["editor"], _0x53e742 = _0x4852d5["model"]["document"]["selection"], _0x580829 = debounce_default(() => this["refreshSelectedViews"](), 10);
    _0x53e742["on"]("change:range", (_0x2f87c0, _0x4226e4) => {
      _0x4226e4["directChange"] && (_0x580829["cancel"](), this["refreshSelectedViews"]());
    }), this["listenTo"](_0x4852d5["editing"]["view"]["document"], "change:isFocused", (_0x119b60, _0x815ef7, _0x1b366d) => {
      _0x1b366d && _0x580829();
    }), this["listenTo"](_0x4852d5["ui"]["focusTracker"], "change:isFocused", (_0x382e88, _0x34b38f, _0x2c33c3) => {
      _0x2c33c3 || _0x4852d5["isReadOnly"] || this["fire"]("blur", { "isAnnotationTracked": (_0x1f0e55) => this["_editorAnnotationsData"]["has"](_0x1f0e55["innerView"]) });
    }), this["listenTo"](this["editor"]["ui"], "update", () => this["fire"]("uiUpdate"));
  }
  ["registerAnnotation"](_0x5992e5) {
    if (this["_editorAnnotations"]["has"](_0x5992e5["view"])) return;
    this["_editorAnnotations"]["add"](_0x5992e5["view"]), this["editor"]["ui"]["focusTracker"]["add"](_0x5992e5["view"]["element"]);
    const _0x85f878 = this["editor"]["plugins"]["get"](N2);
    this["listenTo"](_0x85f878["collection"], "remove", (_0x29c4de, _0xb3759b) => {
      this["editor"]["ui"]["focusTracker"]["remove"](_0xb3759b["view"]["element"]), this["_editorAnnotations"]["delete"](_0xb3759b["view"]);
    });
  }
  ["hasDomSelection"]() {
    return this["editor"]["editing"]["view"]["hasDomSelection"];
  }
  ["addSourceCollector"](_0x41ec09) {
    if ("function" != typeof _0x41ec09) throw new CKEditorError("editorannotations-invalid-source-callback");
    this["_dataCollectors"]["add"](_0x41ec09);
  }
  ["refreshSelectedViews"]() {
    this["fire"]("refresh");
  }
  ["getOrderedSelectedAnnotations"]({ activeAnnotation: _0x3c28fa, annotations: _0x43d7c2 }) {
    const _0x586a8e = [], _0x1b1246 = this["editor"]["model"]["document"]["selection"], _0x553749 = Array["from"](_0x1b1246["getRanges"]());
    for (const [_0x5dac1d, _0x3272f9] of this["_editorAnnotationsData"]) {
      const _0x38dc31 = _0x20062e(_0x3272f9), _0xd5583c = _0x43d7c2["getByInnerView"](_0x5dac1d);
      _0x38dc31 && _0xd5583c && _0x586a8e["push"]({ "annotation": _0xd5583c, "range": _0x38dc31 });
    }
    function _0x20062e(_0x3d8498) {
      for (const _0x5c5d9f of _0x3d8498) for (const _0x38b5ec of _0x553749) if (_0x5c5d9f["containsRange"](_0x38b5ec, !_0x1b1246["isCollapsed"])) return _0x5c5d9f;
      return null;
    }
    return _0x586a8e["sort"]((_0x2e98b2, _0x3628ae) => {
      const _0x3ebd5f = _0x2e98b2["range"], _0x206880 = _0x3628ae["range"];
      if (!_0x3ebd5f["isEqual"](_0x206880)) {
        if (_0x3ebd5f["containsRange"](_0x206880, true)) return 1;
        if (_0x206880["containsRange"](_0x3ebd5f, true)) return -1;
      }
      return _0x2e98b2["annotation"] == _0x3c28fa ? -1 : _0x3628ae["annotation"] == _0x3c28fa ? 1 : 0;
    })["map"]((_0x5f2170) => _0x5f2170["annotation"]);
  }
  get ["_editorAnnotationsData"]() {
    const _0x3fb3ea = /* @__PURE__ */ new Map();
    for (const _0x1fb43d of Array["from"](this["_dataCollectors"])) for (const [_0x59cf15, _0x4a6898] of _0x1fb43d()) _0x3fb3ea["set"](_0x59cf15, _0x4a6898);
    return _0x3fb3ea;
  }
};
var st = class extends Plugin {
  ["afterInit"]() {
    const _0x5ea372 = this["editor"];
    if (!_0x5ea372["plugins"]["has"]("RestrictedEditingModeEditing")) return;
    _0x5ea372["plugins"]["get"]("RestrictedEditingModeEditing")["enableCommand"]("addCommentThread");
  }
};
var at = class extends Plugin {
  constructor(_0x5764f8) {
    super(_0x5764f8), this["editor"]["config"]["define"]("importWord.formatting.comments", "basic");
  }
  ["afterInit"]() {
    const _0x564709 = this["editor"], _0x1e9369 = _0x564709["commands"]["get"]("importWord"), _0x20ee73 = _0x564709["plugins"]["get"](l);
    _0x1e9369 && (_0x1e9369["on"]("execute", (_0x119558, [, _0x26fb3c]) => {
      _0x26fb3c["collaboration_features"] = { "comments": true, "user_id": _0x20ee73["me"]["id"] };
    }, { "priority": priorities["high"] + 10 }), this["listenTo"](_0x1e9369, "dataInsert", this["_handleImportedData"]));
  }
  ["_handleImportedData"](_0x34436a, _0x21033a) {
    const { comment_threads: _0x41e4c4 } = _0x21033a;
    _0x41e4c4 && _0x41e4c4["forEach"](({ thread_id: _0x33eda2, comments: _0x56f525, is_resolved: _0x388beb }) => {
      const _0x51c11c = /* @__PURE__ */ new Date(), _0x447a4b = _0x56f525["map"](({ author: _0xb0020a, content: _0x1b8471, created_at: _0x4bdc8d }) => ({ "content": _0x1b8471, "authorId": this["editor"]["plugins"]["get"](l)["me"]["id"], "createdAt": _0x51c11c, "attributes": { "@external": { "authorName": _0xb0020a, "createdAt": _0x4bdc8d ? new Date(_0x4bdc8d) : /* @__PURE__ */ new Date(), "source": "importWord" } } })), _0x159ffc = this["editor"]["config"]["get"]("collaboration.channelId");
      this["editor"]["plugins"]["get"](o4)["addCommentThread"]({ "channelId": _0x159ffc, "threadId": _0x33eda2, "comments": _0x447a4b, "resolvedAt": _0x388beb ? _0x51c11c : null });
    });
  }
};
var ct2 = class extends Plugin {
  constructor(_0x56e7f8) {
    super(_0x56e7f8), this["editor"]["config"]["define"]("comments.copyMarkers", "default");
  }
  static get ["requires"]() {
    return [ClipboardMarkersUtils, ClipboardPipeline];
  }
  ["afterInit"]() {
    const _0x2fe177 = this["editor"]["plugins"]["get"]("ClipboardPipeline");
    this["_registerMarkerInClipboardPipeline"](), this["listenTo"](_0x2fe177, "contentInsertion", (_0x29693c, _0x3bcf2a) => this["_removeMarkersWithoutThreads"](_0x3bcf2a["content"]["markers"]), { "priority": "highest" });
  }
  ["_removeMarkersWithoutThreads"](_0x471a6f) {
    if (!this["editor"]["plugins"]["has"]("CommentsRepository")) return _0x471a6f;
    const _0x4e4003 = this["editor"]["plugins"]["get"]("CommentsRepository");
    for (const _0x59f08a of _0x471a6f["keys"]()) {
      const [_0x19d484, _0xb69704] = _0x59f08a["split"](":");
      "comment" != _0x19d484 || _0x4e4003["hasCommentThread"](_0xb69704) || _0x471a6f["delete"](_0x59f08a);
    }
    return _0x471a6f;
  }
  ["_registerMarkerInClipboardPipeline"]() {
    const _0x1ed59f = this["editor"]["plugins"]["get"]("ClipboardMarkersUtils"), _0x2af021 = this["_mapCommentsCopyConfigToRegisterConfiguration"](this["editor"]["config"]["get"]("comments.copyMarkers"));
    _0x2af021 && _0x1ed59f["_registerMarkerToCopy"]("comment", _0x2af021);
  }
  ["_mapCommentsCopyConfigToRegisterConfiguration"](_0x3d8260) {
    switch (_0x3d8260) {
      case "always":
        return { "allowedActions": "all", "copyPartiallySelected": false, "duplicateOnPaste": true };
      case "default":
        return { "allowedActions": ["cut", "dragstart"], "copyPartiallySelected": false, "duplicateOnPaste": false };
      default:
        return null;
    }
  }
};
var r5 = class extends Plugin {
  static get ["requires"]() {
    return [o4, P3, l, st, at, ct2];
  }
  static get ["pluginName"]() {
    return "CommentsEditing";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  constructor(_0x1490b1) {
    super(_0x1490b1), this["set"]("isThreadsLoadingPaused", true), _0x1490b1["data"]["once"]("ready", () => this["isThreadsLoadingPaused"] = false), this["set"]("activeMarker", null), this["on"]("change:activeMarker", (_0x5af0f5, _0x58aa52, _0x52612f, _0x4691dc) => {
      const _0x5e0646 = _0x52612f ? ne(_0x52612f)["id"] : null;
      if (_0x1490b1["model"]["change"](() => {
        if (_0x5e0646) {
          const _0x1722a1 = this["getAllMarkersForId"](_0x5e0646);
          for (const _0xa6f277 of _0x1722a1) _0x1490b1["editing"]["reconvertMarker"](_0xa6f277);
        }
        if (_0x4691dc) {
          const { id: _0x4a9faa } = ne(_0x4691dc), _0x49dc16 = this["getAllMarkersForId"](_0x4a9faa);
          for (const _0x5a8534 of _0x49dc16) _0x1490b1["editing"]["reconvertMarker"](_0x5a8534);
        }
      }), _0x5e0646) {
        const _0x3cbb86 = _0x1490b1["plugins"]["get"](o4)["getCommentThread"](_0x5e0646);
        _0x3cbb86 && _0x3cbb86["isResolved"] && this["scrollToThreadMarker"](_0x5e0646);
      }
    }), this["_initAriaMarkerChangeAnnouncements"]();
  }
  ["init"]() {
    const _0x260560 = this["editor"], _0x6ac8ed = _0x260560["plugins"]["get"](o4), _0x32380f = _0x260560["config"]["get"]("collaboration.channelId");
    _0x260560["commands"]["add"]("addCommentThread", new J2(_0x260560)), this["listenTo"](_0x260560, "change:isReadOnly", (_0x20ef46, _0x11c413, _0x10e026) => {
      _0x6ac8ed["switchReadOnly"](_0x10e026, _0x260560["config"]["get"]("collaboration.channelId"));
    }), this["listenTo"](_0x6ac8ed, mt("addCommentThread", _0x32380f), (_0x23ba55, { threadId: _0x14dbaf }) => {
      const _0x2dcaf8 = this["editor"]["plugins"]["get"](o4)["getCommentThread"](_0x14dbaf);
      _0x2dcaf8 && _0x2dcaf8["unlinkedAt"] && this["_attachArchivedThread"](_0x14dbaf);
    }), this["listenTo"](_0x6ac8ed, mt("removeCommentThread", _0x32380f), (_0x261842, { threadId: _0x9844bd }) => {
      _0x260560["model"]["enqueueChange"]({ "isUndoable": false }, (_0x161760) => {
        const _0x3f141c = this["getAllMarkersForId"](_0x9844bd);
        for (const _0x1a05e8 of _0x3f141c) _0x161760["removeMarker"](_0x1a05e8);
      });
    }), this["listenTo"](_0x6ac8ed, mt("resolveCommentThread", _0x32380f), (_0x18f2eb, { threadId: _0x46fee8 }) => {
      (this["_reconvertMarkers"](_0x46fee8), this["editor"]["editing"]["view"]["hasDomSelection"]) && (this["editor"]["plugins"]["get"](o4)["getCommentThread"](_0x46fee8)["unlinkedAt"] || this["editor"]["editing"]["view"]["focus"]());
    }, { "priority": "low" }), this["listenTo"](_0x6ac8ed, mt("reopenCommentThread", _0x32380f), (_0x45e70b, { threadId: _0x5dc58d }) => {
      this["_reconvertMarkers"](_0x5dc58d);
    }, { "priority": "low" }), this["listenTo"](_0x6ac8ed, mt("addComment", _0x32380f), (_0x15ceb5, { threadId: _0x257f41, isFromAdapter: _0x560e9f }) => {
      const _0xbcb079 = this["getAllMarkersForId"](_0x257f41);
      if (_0x560e9f || 0 == _0xbcb079["length"] || !_0x6ac8ed["hasCommentThread"](_0x257f41)) return;
      1 === _0x6ac8ed["getCommentThread"](_0x257f41)["length"] && _0x260560["model"]["enqueueChange"]({ "isUndoable": false }, (_0x309eda) => {
        for (const _0x5f4878 of _0xbcb079) _0x309eda["updateMarker"](_0x5f4878, { "usingOperation": true, "affectsData": true });
      });
    }, { "priority": "low" }), this["_initializeMarkerConverters"](), this["_handleMarkerAddAndRemove"]();
  }
  ["destroy"]() {
    const _0x1a6c24 = this["editor"]["plugins"]["get"](o4), _0x37855d = this["editor"]["config"]["get"]("collaboration.channelId");
    for (const _0x4ec9db of _0x1a6c24["getCommentThreads"]({ "channelId": _0x37855d })) _0x1a6c24["_detachCommentThread"](_0x4ec9db["id"]), _0x1a6c24["_threads"]["delete"](_0x4ec9db["id"]);
    super["destroy"]();
  }
  ["hasMarkerForId"](_0x39301d) {
    return this["getAllMarkersForId"](_0x39301d)["length"] > 0;
  }
  ["getAllMarkersForId"](_0x261f02) {
    const _0x4a9035 = [];
    for (const _0x4900c8 of this["editor"]["model"]["markers"]) _0x4900c8["name"]["startsWith"]("comment:" + _0x261f02) && _0x4a9035["push"](_0x4900c8);
    return _0x4a9035;
  }
  ["scrollToThreadMarker"](_0x53e679) {
    const _0x3edd4e = this["_getTargetForId"](_0x53e679);
    _0x3edd4e && setTimeout(() => {
      this["activeMarker"] && ne(this["activeMarker"])["id"] === _0x53e679 && scrollViewportToShowTarget({ "target": _0x3edd4e[0], "viewportOffset": 100, "alignToTop": true });
    }, 50);
  }
  ["_reconvertMarkers"](_0x8a3a07) {
    this["editor"]["model"]["change"](() => {
      for (const _0x28ce92 of this["getAllMarkersForId"](_0x8a3a07)) this["editor"]["editing"]["reconvertMarker"](_0x28ce92);
    });
  }
  ["_attachArchivedThread"](_0x3b1131) {
    const _0x4b9bc6 = this["editor"]["plugins"]["get"](o4), _0x317f80 = this["editor"]["plugins"]["get"](P3), _0x10c17e = _0x4b9bc6["getCommentThread"](_0x3b1131);
    if (!_0x10c17e["isAttached"]) {
      const _0x3a434d = _0x10c17e["attachTo"](() => this["_getTargetForId"](_0x10c17e["id"]));
      _0x317f80["registerAnnotation"](_0x3a434d), _0x10c17e["_hasTargetInContent"] = false;
    }
  }
  ["_initializeMarkerConverters"]() {
    const _0x26b4ac = this["editor"], _0x27ac79 = _0x26b4ac["plugins"]["get"](l);
    _0x26b4ac["conversion"]["for"]("editingDowncast")["markerToHighlight"]({ "model": "comment", "view": (_0xcd2f14, _0x570cc5) => {
      const { id: _0x2a5252 } = ne(_0xcd2f14["markerName"]), _0x408169 = _0x26b4ac["plugins"]["get"](o4)["getCommentThread"](_0x2a5252), _0xbc9853 = this["activeMarker"] && ne(this["activeMarker"])["id"] === _0x2a5252;
      let _0x4d1b3e;
      if (_0x408169 && _0x408169["isResolved"] && !_0xbc9853 && _0xcd2f14["item"]) return _0x570cc5["consumable"]["consume"](_0xcd2f14["item"], "addMarker:" + _0xcd2f14["markerName"]), _0x570cc5["consumable"]["consume"](_0xcd2f14["item"], "removeMarker:" + _0xcd2f14["markerName"]), null;
      const _0x47c180 = ["ck-comment-marker"];
      return _0xbc9853 && _0x47c180["push"]("ck-comment-marker--active"), _0x4d1b3e = _0x408169 && _0x408169["length"] ? _0x408169["comments"]["first"]["author"]["id"] : _0x27ac79["me"]["id"], { "classes": _0x47c180, "attributes": { "data-comment": _0x2a5252, "data-author-id": _0x4d1b3e } };
    } }), _0x26b4ac["conversion"]["for"]("dataDowncast")["markerToData"]({ "model": "comment", "view": (_0x45fd8c, { options: _0x26b265 }) => {
      const _0x4ad9d8 = _0x26b4ac["plugins"]["get"](o4), _0x161b75 = _0x26b4ac["model"]["markers"]["get"](_0x45fd8c), { id: _0x41789c, part: _0x21910e } = ne(_0x45fd8c);
      if (_0x161b75 && !_0x161b75["affectsData"]) return null;
      if (_0x26b265["ignoreResolvedComments"]) {
        const _0x296878 = _0x4ad9d8["getCommentThread"](_0x41789c);
        if (_0x296878 && _0x296878["isResolved"]) return null;
      }
      return { "group": "comment", "name": _0x21910e ? _0x41789c + ":" + _0x21910e : _0x41789c };
    } }), _0x26b4ac["conversion"]["for"]("upcast")["elementToElement"]({ "view": { "name": "comment", "attributes": { "id": /^\w/ } }, "model": (_0x171bee, { writer: _0x20ee5a }) => _0x20ee5a["createElement"]("$marker", { "data-name": "comment:" + _0x171bee["getAttribute"]("id") }) }), _0x26b4ac["conversion"]["for"]("upcast")["dataToMarker"]({ "view": "comment" });
  }
  ["_handleMarkerAddAndRemove"]() {
    const _0x186e77 = this["editor"], _0x32720f = _0x186e77["plugins"]["get"](o4), _0x12d578 = /* @__PURE__ */ new Set(), _0x3413e2 = /* @__PURE__ */ new Set();
    _0x186e77["model"]["document"]["registerPostFixer"]((_0x59d8c6) => {
      let _0x48413e = false;
      for (const { name: _0x4f8ae9, data: _0x1b8b69 } of _0x186e77["model"]["document"]["differ"]["getChangedMarkers"]()) {
        const { group: _0x75be2c, id: _0x2ec82a } = ne(_0x4f8ae9);
        let _0x119766 = _0x1b8b69["newRange"];
        if ("comment" !== _0x75be2c || !_0x119766) continue;
        const _0x1d1473 = "$graveyard" === _0x119766["root"]["rootName"];
        _0x1d1473 || (_0x119766 = dt(_0x119766, _0x186e77["model"]), !_0x119766 || _0x119766["isCollapsed"] || !_0x1b8b69["newRange"] || _0x119766["isEqual"](_0x1b8b69["newRange"])) ? _0x186e77["model"]["hasContent"](_0x119766) && !_0x1d1473 ? this["isThreadsLoadingPaused"] ? _0x12d578["add"](_0x4f8ae9) : this["_handleThreadMarker"](_0x4f8ae9, _0x2ec82a) : (_0x3413e2["add"](_0x4f8ae9), _0x12d578["delete"](_0x4f8ae9), _0x59d8c6["removeMarker"](_0x4f8ae9), _0x48413e = true) : (_0x59d8c6["updateMarker"](_0x4f8ae9, { "range": _0x119766 }), _0x48413e = true);
      }
      return _0x48413e;
    }), this["on"]("change:isThreadsLoadingPaused", (_0x3c05a9, _0x1f52d8, _0x36b25f) => {
      if (!_0x36b25f && _0x12d578["size"]) for (const _0x16d9f2 of _0x12d578) {
        const { id: _0x34bbde } = ne(_0x16d9f2);
        _0x12d578["delete"](_0x16d9f2), _0x186e77["model"]["markers"]["get"](_0x16d9f2) && this["_handleThreadMarker"](_0x16d9f2, _0x34bbde);
      }
    }), this["listenTo"](_0x186e77["model"]["document"], "change", (_0x2f241f, _0x3bd322) => {
      for (const { name: _0x37af2a, data: { newRange: _0x133192 } } of _0x186e77["model"]["document"]["differ"]["getChangedMarkers"]()) {
        const { group: _0xd736b8, id: _0x39082e } = ne(_0x37af2a);
        if ("comment" !== _0xd736b8) continue;
        const _0x5ed506 = _0x32720f["getCommentThread"](_0x39082e), _0x4d09b9 = this["hasMarkerForId"](_0x39082e);
        _0x5ed506 && (!_0x5ed506["_hasTargetInContent"] && _0x133192 && _0x186e77["editing"]["view"]["once"]("render", () => {
          const _0x6bb58f = _0x186e77["plugins"]["get"](N2), _0x1c5d98 = _0x32720f["_threadToController"]["get"](_0x5ed506)["view"];
          _0x6bb58f["getByInnerView"](_0x1c5d98)["refreshVisibility"]();
        }, { "priority": "low" }), _0x5ed506["_hasTargetInContent"] = _0x4d09b9 || !!_0x133192), _0x133192 || (_0x3413e2["add"](_0x37af2a), _0x12d578["delete"](_0x37af2a));
      }
      if (_0x3bd322["isLocal"]) for (const _0x4f8add of _0x3413e2) {
        const { id: _0x183f90 } = ne(_0x4f8add), _0x36db05 = _0x32720f["getCommentThread"](_0x183f90), _0x4ad052 = this["hasMarkerForId"](_0x183f90);
        _0x12d578["delete"](_0x4f8add), !_0x36db05 || _0x4ad052 || _0x36db05["unlinkedAt"] || _0x36db05["setUnlinkedAt"](/* @__PURE__ */ new Date());
      }
      _0x3413e2["clear"]();
    });
  }
  ["_getTargetForId"](_0x3bd8e6) {
    const _0x75a2b3 = this["editor"], _0x420b82 = this["getAllMarkersForId"](_0x3bd8e6);
    return R(_0x75a2b3["editing"], _0x420b82);
  }
  ["_getTextContext"](_0x490d5c) {
    const _0x1ca384 = this["getAllMarkersForId"](_0x490d5c);
    let _0x26e0d2 = "", _0x1feb97 = false;
    for (const _0x525616 of _0x1ca384) {
      const _0x4366cb = _0x525616["getRange"]();
      for (const _0x867c0c of Array["from"](_0x4366cb["getItems"]())) _0x867c0c["is"]("$textProxy") ? (_0x26e0d2 && _0x1feb97 && (_0x26e0d2 += " ", _0x1feb97 = false), _0x26e0d2 += _0x867c0c["data"]) : _0x1feb97 = true;
      _0x1feb97 = true;
    }
    return _0x26e0d2["substring"](0, 150);
  }
  ["_attachMarkerToThread"](_0x5e5b94, _0x30105b) {
    const _0x11da19 = this["editor"], _0x45ae7e = _0x11da19["plugins"]["get"](o4);
    let _0x57d591 = _0x45ae7e["getCommentThread"](_0x30105b);
    const _0x482af5 = _0x11da19["config"]["get"]("collaboration.channelId"), _0x29efd5 = _0x11da19["plugins"]["get"](P3);
    if (_0x57d591 && (_0x57d591["unlinkedAt"] && _0x57d591["setUnlinkedAt"](null), _0x57d591["isAttached"])) return _0x57d591;
    return !this["getAllMarkersForId"](_0x30105b)[0]["managedUsingOperations"] ? _0x11da19["editing"]["view"]["once"]("render", () => {
      if (_0x45ae7e["getCommentThread"](_0x30105b)) return;
      const _0x15c2d6 = _0x11da19["plugins"]["get"](N2);
      _0x57d591 = _0x45ae7e["openNewCommentThread"]({ "channelId": _0x482af5, "threadId": _0x30105b, "target": () => this["_getTargetForId"](_0x30105b), "context": { "type": "text", "value": this["_getTextContext"](_0x30105b) } });
      const _0x38a665 = _0x45ae7e["_threadToController"]["get"](_0x57d591)["view"], _0x64095d = _0x15c2d6["getByInnerView"](_0x38a665);
      _0x64095d && _0x29efd5["registerAnnotation"](_0x64095d);
    }, { "priority": "low" }) : _0x45ae7e["fetchCommentThread"]({ "channelId": _0x482af5, "threadId": _0x30105b })["then"]((_0x19e413) => {
      if ("destroyed" !== _0x11da19["state"]) {
        if (_0x57d591 = _0x19e413, _0x57d591 && !_0x57d591["isAttached"]) {
          const _0x27b382 = _0x57d591["attachTo"](() => this["_getTargetForId"](_0x30105b));
          _0x29efd5["registerAnnotation"](_0x27b382), _0x57d591["isResolved"] && this["_reconvertMarkers"](_0x30105b);
        } else {
          if (!_0x57d591) {
            const _0x467b04 = this["getAllMarkersForId"](_0x30105b);
            _0x11da19["model"]["change"]((_0x4ce679) => {
              for (const _0xd190b5 of _0x467b04) _0x4ce679["removeMarker"](_0xd190b5);
            });
          }
        }
      }
    }), _0x57d591;
  }
  ["_handleThreadMarker"](_0x495b48, _0x451a15) {
    const _0x49a943 = this["_attachMarkerToThread"](_0x495b48, _0x451a15);
    _0x49a943 && !_0x49a943["context"] && _0x49a943["setContext"]({ "type": "text", "value": this["_getTextContext"](_0x451a15) });
  }
  ["_initAriaMarkerChangeAnnouncements"]() {
    const _0x296fbb = this["editor"];
    B(_0x296fbb["model"], ({ left: _0x4800cf, entered: _0xa7db9d }) => {
      for (const _0x2bab81 of _0x4800cf) if (ht2(_0x2bab81)) {
        _0x296fbb["ui"]["ariaLiveAnnouncer"]["announce"](S2(_0x296fbb["locale"], "LEAVE_COMMENT_ANNOUNCEMENT"));
        break;
      }
      for (const _0x577960 of _0xa7db9d) if (ht2(_0x577960)) {
        _0x296fbb["ui"]["ariaLiveAnnouncer"]["announce"](S2(_0x296fbb["locale"], "ENTER_COMMENT_ANNOUNCEMENT", getEnvKeystrokeText(Q)));
        break;
      }
    });
  }
};
function mt(_0xc170d6, _0x70051f) {
  return _0x70051f ? _0xc170d6 + ":" + _0x70051f : _0xc170d6;
}
function ne(_0x14b495) {
  const _0x311322 = _0x14b495["split"](":");
  return { "group": _0x311322[0], "id": _0x311322[1], "part": _0x311322[2] };
}
function dt(_0x161fc5, _0x1144f1) {
  const _0x52b1a6 = _0x1144f1["schema"], _0x2390d6 = _0x1144f1["createRange"](_0x161fc5["start"]);
  for (const _0xaeb3b8 of _0x161fc5["getWalker"]()) {
    const { type: _0x37768c, item: _0x3c9514, nextPosition: _0xd50504 } = _0xaeb3b8;
    if ("text" === _0x37768c || _0x52b1a6["isObject"](_0x3c9514)) {
      const _0xb1b7ee = _0x1144f1["createPositionBefore"](_0x3c9514);
      _0x2390d6["isCollapsed"] && (_0x2390d6["start"] = _0xb1b7ee), _0x2390d6["end"] = _0xd50504;
    }
  }
  return _0x2390d6;
}
function ht2(_0x1bd6e5) {
  return "comment" === ne(_0x1bd6e5["name"])["group"];
}
var kt = `<!--

 What you're currently looking at is the source code of a legally protected, proprietary software.
 CKEditor 5 Collaboration is licensed under a commercial license and protected by copyright law. Where not otherwise indicated,
 all CKEditor 5 Collaboration content is authored by CKSource engineers and consists of CKSource-owned intellectual property.

 Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.

!-->

<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M4 1.5h12A3.5 3.5 0 0 1 19.5 5v8l-.005.192a3.5 3.5 0 0 1-2.927 3.262l-.062.008v1.813a1.5 1.5 0 0 1-2.193 1.33l-.371-.193-.38-.212a13.452 13.452 0 0 1-3.271-2.63l-.062-.07H4A3.5 3.5 0 0 1 .5 13V5A3.5 3.5 0 0 1 4 1.5ZM4 3a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h6.924a11.917 11.917 0 0 0 3.71 3.081l.372.194v-3.268L14.962 15H16a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2H4Z"/><path d="M9.75 5a.75.75 0 0 0-.75.75v2.5H6.5a.75.75 0 0 0 0 1.5H9v2.5a.75.75 0 0 0 1.5 0v-2.5H13a.75.75 0 0 0 0-1.5h-2.5v-2.5A.75.75 0 0 0 9.75 5Z"/></svg>
`;
var i2 = class extends Plugin {
  static get ["pluginName"]() {
    return "CommentsUI";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  static get ["requires"]() {
    return [o4, r5, P3, N2];
  }
  get ["CommentsListView"]() {
    return xt;
  }
  get ["CommentThreadInputView"]() {
    return Pt;
  }
  ["init"]() {
    const _0x4707db = this["editor"], _0x5d2b46 = _0x4707db["plugins"]["get"](o4), _0x17af76 = _0x4707db["plugins"]["get"](r5), _0x49d5d0 = _0x4707db["plugins"]["get"](N2), _0x5b11a3 = _0x4707db["plugins"]["get"](P3);
    _0x4707db["ui"]["componentFactory"]["add"]("comment", () => {
      const _0x39c0fb = this["_createUIButton"](ButtonView);
      return _0x39c0fb["tooltip"] = true, _0x39c0fb;
    }), _0x4707db["ui"]["componentFactory"]["add"]("menuBar:comment", () => this["_createUIButton"](MenuBarMenuListItemButtonView)), _0x5b11a3["addSourceCollector"](() => {
      const _0x1a72d3 = [];
      for (const [_0x41a4e0, _0x547859] of _0x5d2b46["_threadToController"]) {
        const _0x49282c = _0x17af76["getAllMarkersForId"](_0x41a4e0["id"]), _0x4361a0 = _0x49282c["map"]((_0x5e376e) => _0x5e376e["getRange"]());
        _0x49282c["length"] > 0 && _0x1a72d3["push"]([_0x547859["view"], _0x4361a0]);
      }
      return _0x1a72d3;
    }), this["listenTo"](_0x49d5d0, "change:activeAnnotations", (_0x141a81, _0x41604a, _0x57d2f0) => {
      const _0x16e96f = Array["from"](_0x57d2f0)["map"]((_0x334833) => _0x334833["innerView"])["find"]((_0x3c5702) => _0x5d2b46["_viewToController"]["has"](_0x3c5702));
      if (!_0x16e96f) return void (_0x17af76["activeMarker"] = null);
      const _0x443064 = _0x5d2b46["_viewToController"]["get"](_0x16e96f)["model"]["id"], _0x5a051b = "comment:" + _0x443064;
      _0x443064 && _0x17af76["hasMarkerForId"](_0x443064) ? _0x17af76["activeMarker"] = _0x5a051b : _0x17af76["activeMarker"] && (_0x17af76["activeMarker"] = null);
    }), this["listenTo"](_0x5d2b46, "removeCommentThread", (_0x691e69, { threadId: _0x3de5dc, isFromAdapter: _0x49d530 }) => {
      !_0x49d530 && _0x4707db["ui"]["focusTracker"]["isFocused"] && _0x17af76["hasMarkerForId"](_0x3de5dc) && _0x4707db["editing"]["view"]["focus"]();
    }, { "priority": "highest" }), this["listenTo"](_0x5d2b46, "addComment", (_0xde9282, { threadId: _0x28aea0, isFromAdapter: _0x4da5a2 }) => {
      if (_0x4da5a2 || !_0x17af76["hasMarkerForId"](_0x28aea0) || !_0x5d2b46["hasCommentThread"](_0x28aea0)) return;
      1 === _0x5d2b46["getCommentThread"](_0x28aea0)["length"] && (_0x4707db["editing"]["view"]["focus"](), _0xde9282["stop"]());
    }, { "priority": "low" });
  }
  ["_createUIButton"](_0x4fa52c) {
    const _0x1a6110 = this["editor"], _0x73990f = new _0x4fa52c(_0x1a6110["locale"]), _0xe36251 = _0x1a6110["commands"]["get"]("addCommentThread");
    return _0x73990f["set"]({ "label": S2(_0x1a6110["locale"], "Comment"), "icon": kt }), _0x73990f["bind"]("isEnabled")["to"](_0xe36251), this["listenTo"](_0x73990f, "execute", () => _0xe36251["execute"]()), _0x73990f;
  }
};
var s4 = class extends Plugin {
  static get ["pluginName"]() {
    return "CommentsOnly";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  static get ["requires"]() {
    return [r5];
  }
  constructor(_0x3653c0) {
    super(_0x3653c0), this["set"]("isEnabled", false), this["on"]("change:isEnabled", (_0x3fc805, _0x21f771, _0x38c6f7) => {
      _0x38c6f7 ? this["_enableCommentsOnlyMode"]() : this["_disableCommentsOnlyMode"]();
    });
  }
  ["afterInit"]() {
    !this["isEnabled"] && this["editor"]["config"]["get"]("commentsOnly") && (this["isEnabled"] = true);
  }
  ["_enableCommentsOnlyMode"]() {
    for (const [_0x4ded60, _0x331471] of this["editor"]["commands"]) _0x331471["affectsData"] && "addCommentThread" !== _0x4ded60 && _0x331471["forceDisabled"]("commentsOnlyMode");
    this["editor"]["plugins"]["has"]("DragDrop") && this["editor"]["plugins"]["get"]("DragDrop")["forceDisabled"]("commentsOnlyMode");
    const _0xa7b105 = this["editor"]["editing"]["view"]["document"];
    this["listenTo"](_0xa7b105, "cut", (_0x2dfe4a) => _0x2dfe4a["stop"](), { "priority": "highest" }), this["listenTo"](_0xa7b105, "clipboardInput", (_0xf165fe) => _0xf165fe["stop"](), { "priority": "highest" }), this["listenTo"](_0xa7b105, "delete", (_0x4870e8) => _0x4870e8["stop"](), { "priority": "highest" });
  }
  ["_disableCommentsOnlyMode"]() {
    for (const [_0x1345de, _0x115ed3] of this["editor"]["commands"]) _0x115ed3["affectsData"] && "addCommentThread" !== _0x1345de && _0x115ed3["clearForceDisabled"]("commentsOnlyMode");
    this["stopListening"](this["editor"]["editing"]["view"]["document"]);
  }
};
var M2 = class extends ContextPlugin {
  constructor(_0x4805ff) {
    super(_0x4805ff);
    __publicField(this, "activeUIs");
    __publicField(this, "_uis");
    __publicField(this, "_uisData");
    this["activeUIs"] = /* @__PURE__ */ new Set(), this["_uis"] = /* @__PURE__ */ new Map(), this["_uisData"] = /* @__PURE__ */ new Map();
  }
  static get ["requires"]() {
    return [N2];
  }
  static get ["pluginName"]() {
    return "AnnotationsUIs";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    const _0x31267e = this["context"]["plugins"]["get"](N2);
    this["listenTo"](_0x31267e, "_activateAnnotation", (_0x1db9cd, _0x28c579) => {
      for (const _0x37d5b7 of this["activeUIs"]) {
        const _0x3548ed = this["_uis"]["get"](_0x37d5b7);
        (0, this["_uisData"]["get"](_0x37d5b7)["filter"])(_0x28c579) && _0x3548ed["setActiveAnnotation"](_0x28c579);
      }
    }), this["listenTo"](_0x31267e, "_deactivateAllAnnotations", () => {
      for (const _0x54c983 of this["activeUIs"]) {
        this["_uis"]["get"](_0x54c983)["setActiveAnnotation"](null);
      }
    }), this["listenTo"](_0x31267e["_visibleAnnotations"], "add", (_0x22c49f, _0x483eed) => {
      this["_assertAnnotationDoesNotBelongToMultipleUIs"](_0x483eed);
    });
  }
  ["hasActive"]() {
    return this["activeUIs"]["size"] > 0;
  }
  ["isActive"](_0x325682) {
    return this["activeUIs"]["has"](_0x325682);
  }
  ["activate"](_0x266a4d, _0x49587d = () => true) {
    const _0x37c95a = this["context"]["plugins"]["get"](N2);
    if (!this["_uis"]["has"](_0x266a4d)) throw new CKEditorError("annotationsuis-missing-ui", this, { "uiName": _0x266a4d });
    this["isActive"](_0x266a4d) && this["deactivate"](_0x266a4d), this["activeUIs"]["add"](_0x266a4d);
    const _0x1eb4b8 = new x2();
    !function({ source: _0x5d3c07, target: _0x28bfbc, filter: _0xd5d625 }) {
      for (const _0x5f2fb5 of _0x5d3c07) _0xd5d625(_0x5f2fb5) && _0x28bfbc["add"](_0x5f2fb5);
      _0x28bfbc["listenTo"](_0x5d3c07, "add", (_0x1bfe61, _0x2e6cb9) => {
        _0xd5d625(_0x2e6cb9) && _0x28bfbc["add"](_0x2e6cb9);
      }), _0x28bfbc["listenTo"](_0x5d3c07, "remove", (_0x46d8eb, _0xcd3eeb) => {
        _0x28bfbc["has"](_0xcd3eeb) && _0x28bfbc["remove"](_0xcd3eeb);
      });
    }({ "source": _0x37c95a["_visibleAnnotations"], "target": _0x1eb4b8, "filter": _0x49587d }), this["_uisData"]["set"](_0x266a4d, { "collection": _0x1eb4b8, "filter": _0x49587d });
    const _0x456764 = this["_uis"]["get"](_0x266a4d);
    _0x456764["attach"](_0x1eb4b8), this["listenTo"](_0x456764, "change:activeAnnotation", (_0x1572e1, _0x339b9e, _0x225598, _0x4599b5) => {
      _0x4599b5 && _0x37c95a["_removeActiveAnnotation"](_0x4599b5), _0x225598 && _0x37c95a["_addActiveAnnotation"](_0x225598);
    });
  }
  ["deactivate"](_0x5b9a51) {
    if (this["activeUIs"]["delete"](_0x5b9a51), !this["_uis"]["has"](_0x5b9a51)) throw new CKEditorError("annotationsuis-missing-ui", this, { "uiName": _0x5b9a51 });
    const _0x377514 = this["_uis"]["get"](_0x5b9a51);
    _0x377514["detach"](), this["stopListening"](_0x377514), this["_uisData"]["get"](_0x5b9a51)["collection"]["destroy"](), this["_uisData"]["delete"](_0x5b9a51);
  }
  ["switchTo"](_0x390fd0) {
    if (!this["_uis"]["has"](_0x390fd0)) throw new CKEditorError("annotationsuis-missing-ui", this, { "uiName": _0x390fd0 });
    const _0xaf5e6b = this["context"]["plugins"]["get"](N2), _0x254aac = Array["from"](_0xaf5e6b["activeAnnotations"])[0] || null;
    this["deactivateAll"](), this["activate"](_0x390fd0);
    const _0x1b4f7b = this["_uis"]["get"](_0x390fd0);
    _0x1b4f7b["setActiveAnnotation"](_0x254aac), _0x1b4f7b["_setSelectedAnnotations"] && _0x254aac && _0x1b4f7b["_setSelectedAnnotations"]([_0x254aac]);
  }
  ["deactivateAll"]() {
    for (const _0x325109 of this["activeUIs"]) this["deactivate"](_0x325109);
  }
  ["register"](_0x56f714, _0x32a6f7) {
    if (this["_uis"]["has"](_0x56f714)) throw new CKEditorError("annotationsuis-register-already-registered");
    if ("function" != typeof _0x32a6f7["attach"] || "function" != typeof _0x32a6f7["detach"] || "function" != typeof _0x32a6f7["setActiveAnnotation"]) throw new CKEditorError("annotationsuis-register-invalid-interface", null);
    this["_uis"]["set"](_0x56f714, _0x32a6f7);
  }
  ["refilterAnnotations"]() {
    const _0x61b031 = this["context"]["plugins"]["get"](N2)["collection"], _0x2d4386 = /* @__PURE__ */ new Map(), _0x3843f5 = Array["from"](this["activeUIs"]);
    for (const _0x1de41d of this["activeUIs"]) {
      const _0x48ce94 = this["_uisData"]["get"](_0x1de41d)["collection"];
      for (const _0x17df64 of _0x48ce94) _0x2d4386["set"](_0x17df64, _0x1de41d);
    }
    for (const _0x411a69 of _0x61b031) {
      const _0x57333d = _0x2d4386["get"](_0x411a69);
      this["_assertAnnotationDoesNotBelongToMultipleUIs"](_0x411a69);
      const _0x5eedb8 = _0x3843f5["find"]((_0x14b756) => this["_uisData"]["get"](_0x14b756)["filter"](_0x411a69));
      _0x57333d !== _0x5eedb8 && (_0x57333d && this["_uisData"]["get"](_0x57333d)["collection"]["remove"](_0x411a69), _0x5eedb8 && this["_uisData"]["get"](_0x5eedb8)["collection"]["add"](_0x411a69));
    }
  }
  ["destroy"]() {
    this["deactivateAll"](), super["destroy"]();
  }
  ["_assertAnnotationDoesNotBelongToMultipleUIs"](_0x5054c5) {
    const _0x29a6ed = [];
    for (const _0x39815d of this["activeUIs"]) {
      (0, this["_uisData"]["get"](_0x39815d)["filter"])(_0x5054c5) && _0x29a6ed["push"](_0x39815d);
    }
    if (_0x29a6ed["length"] > 1) throw new CKEditorError("annotationsuis-annotation-mismatch", null, { "matchedUIs": _0x29a6ed, "annotationType": _0x5054c5["type"] });
  }
};
var oe = toUnit("px");
var V2 = class extends View {
  constructor(_0x516edb) {
    super(_0x516edb);
    __publicField(this, "list");
    __publicField(this, "focusables");
    __publicField(this, "focusTracker");
    __publicField(this, "focusCycler");
    const _0x7cd4ec = this["bindTemplate"];
    this["set"]("minHeight", 0), this["set"]("class", ""), this["list"] = this["createCollection"](), this["focusables"] = this["createCollection"](), this["list"]["delegate"]("arrowup", "arrowdown")["to"](this), this["focusTracker"] = new FocusTracker(), this["focusCycler"] = new FocusCycler({ "focusables": this["focusables"], "focusTracker": this["focusTracker"] }), this["setTemplate"]({ "tag": "div", "attributes": { "class": ["ck", "ck-sidebar", "ck-reset", _0x7cd4ec["to"]("class")], "style": { "minHeight": _0x7cd4ec["to"]("minHeight", (_0x779f9e) => "number" == typeof _0x779f9e ? oe(_0x779f9e + 10) : null) }, "dir": _0x516edb["uiLanguageDirection"], "role": "application", "aria-label": S2(_0x516edb, "Annotations sidebar"), "tabindex": 0 }, "children": [{ "tag": "div", "attributes": { "role": "list", "aria-label": S2(_0x516edb, "Annotations list") }, "children": this["list"] }] });
  }
  ["render"]() {
    super["render"](), this["_setupKeyboardNavigation"]();
  }
  ["focus"]() {
    this["focusCycler"]["focusFirst"]();
  }
  ["_setupKeyboardNavigation"]() {
    this["list"]["delegate"]("change:top")["to"](this), this["on"]("change:top", (_0x507ace) => {
      this["_updateItemPositionInFocusables"](_0x507ace["source"]);
    }), this["list"]["forEach"]((_0x54cd48) => {
      this["focusTracker"]["add"](_0x54cd48["element"]), this["_updateItemPositionInFocusables"](_0x54cd48);
    }), this["list"]["on"]("change", (_0xa83a0d, _0x18eb1e) => {
      for (const _0xa9ac54 of _0x18eb1e["removed"]) this["focusTracker"]["remove"](_0xa9ac54["element"]), this["focusables"]["remove"](_0xa9ac54);
      for (const _0xe6fc7d of _0x18eb1e["added"]) this["focusTracker"]["add"](_0xe6fc7d["element"]), this["_updateItemPositionInFocusables"](_0xe6fc7d);
    }), this["on"]("arrowup", () => {
      this["focusCycler"]["focusPrevious"]();
    }), this["on"]("arrowdown", () => {
      this["focusCycler"]["focusNext"]();
    }), this["listenTo"](this["element"], "focus", () => {
      this["focus"]();
    });
  }
  ["_updateItemPositionInFocusables"](_0x2af5f9) {
    const _0x56dfb6 = this["focusables"]["getIndex"](_0x2af5f9);
    let _0x273a60, _0x1d9b1f;
    for (const _0x50bb42 of this["focusables"]) if (_0x2af5f9["top"] < _0x50bb42["top"]) {
      _0x273a60 = _0x50bb42;
      break;
    }
    if (_0x1d9b1f = _0x273a60 ? this["focusables"]["getIndex"](_0x273a60) : this["focusables"]["length"], -1 !== _0x56dfb6) {
      if (_0x56dfb6 === _0x1d9b1f - 1) return;
      this["focusables"]["remove"](_0x2af5f9), _0x1d9b1f = _0x273a60 ? this["focusables"]["getIndex"](_0x273a60) : this["focusables"]["length"];
    }
    this["focusables"]["add"](_0x2af5f9, _0x1d9b1f);
  }
};
var qt = toUnit("px");
var H3 = class extends View {
  constructor(_0x3bf38b) {
    super(_0x3bf38b);
    __publicField(this, "content");
    __publicField(this, "_targetTop");
    __publicField(this, "_mutationObserver");
    this["set"]("top", 0), this["set"]("height", 0), this["bind"]("bottom")["to"](this, "top", this, "height", (_0x266bc4, _0x24c9aa) => _0x266bc4 + _0x24c9aa), this["set"]("isAnimationDisabled", false), this["_mutationObserver"] = Lt(() => this["updateHeight"]()), this["_targetTop"] = null, this["content"] = this["createCollection"](), this["content"]["delegate"]("arrowup", "arrowdown")["to"](this);
    const _0x30a395 = this["bindTemplate"];
    this["setTemplate"]({ "tag": "div", "attributes": { "class": ["ck-sidebar-item", _0x30a395["to"]("isAnimationDisabled", (_0x420ee8) => _0x420ee8 ? "ck-sidebar-item--no-animation" : "")], "style": { "top": _0x30a395["to"]("top", (_0x1701cf) => qt(_0x1701cf)) }, "role": "presentation" }, "children": this["content"] });
  }
  ["render"]() {
    super["render"](), this["_mutationObserver"]["attach"](this["element"]);
  }
  ["focus"]() {
    this["content"]["first"] && this["content"]["first"]["focus"]();
  }
  ["updateHeight"]() {
    const _0x58b4d6 = this["element"]["clientHeight"];
    _0x58b4d6 && (this["height"] = _0x58b4d6);
  }
  ["destroy"]() {
    this["content"]["clear"](), this["_mutationObserver"]["detach"](), super["destroy"]();
  }
};
var z2 = class extends ContextPlugin {
  constructor(_0x24eaca) {
    super(_0x24eaca);
    __publicField(this, "view");
    __publicField(this, "_activeAnnotation");
    __publicField(this, "_annotations");
    __publicField(this, "_spaceBetweenItems");
    __publicField(this, "_sidebarItemViewToAnnotation");
    __publicField(this, "_annotationToSidebarItemView");
    __publicField(this, "_recalculateBuffer");
    this["set"]("_lastItem", void 0), this["view"] = this["_createSidebarView"](), this["set"]("container", null), this["_spaceBetweenItems"] = 25, this["_sidebarItemViewToAnnotation"] = /* @__PURE__ */ new Map(), this["_annotationToSidebarItemView"] = /* @__PURE__ */ new Map(), this["context"]["config"]["define"]("sidebar.preventScrollOutOfView", false), this["_annotations"] = null, this["_activeAnnotation"] = null, this["_recalculateBuffer"] = [];
  }
  static get ["pluginName"]() {
    return "Sidebar";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    const _0x59a395 = this["context"]["config"]["get"]("sidebar.container");
    _0x59a395 && this["setContainer"](_0x59a395);
  }
  ["setContainer"](_0xd23557) {
    if (!y3(_0xd23557)) throw new CKEditorError("sidebar-setcontainer-invalid-element");
    this["container"] = _0xd23557;
  }
  ["_attachToContainer"]({ viewClass: _0x9f9b12 = "", spaceBetweenItems: _0x25e9e6 = 25 } = {}) {
    if (!y3(this["container"])) throw new CKEditorError("sidebar-attachtocontainer-missing-container", this);
    this["container"]["appendChild"](this["view"]["element"]), this["view"]["class"] = _0x9f9b12, this["_spaceBetweenItems"] = _0x25e9e6;
  }
  ["rearrange"]({ removedAnnotation: _0x1929a5, previousAnnotation: _0x4cd0bf, nextAnnotation: _0x546772 }) {
    const _0x131e65 = this["getSidebarItemView"](_0x1929a5);
    this["view"]["list"]["remove"](_0x131e65), this["_destroySidebarItemView"](_0x1929a5), _0x4cd0bf && this["_alignToTargetRect"](this["getSidebarItemView"](_0x4cd0bf)), _0x546772 && this["_alignToTargetRect"](this["getSidebarItemView"](_0x546772)), this["_updateLastItem"]();
  }
  ["refresh"]({ blurredAnnotation: _0x55c0a1, activatedAnnotation: _0x574a98, disableAnimationOnActivatedAnnotation: _0x5844e3 }) {
    if (this["_activeAnnotation"] = _0x574a98, _0x55c0a1) {
      _0x55c0a1["isActive"] = false;
      const _0x500be2 = this["getSidebarItemView"](_0x55c0a1);
      _0x500be2 && _0x5844e3 && (_0x500be2["isAnimationDisabled"] = false);
    }
    if (_0x574a98) {
      const _0x3d713e = this["getSidebarItemView"](_0x574a98);
      _0x3d713e && (_0x574a98["isActive"] = true, _0x5844e3 && (_0x3d713e["isAnimationDisabled"] = true, _0x3d713e["top"] += 1), this["_alignToTargetRect"](_0x3d713e));
    }
  }
  ["_detachFromContainer"](_0x56ab58) {
    if (this["view"]["element"]["remove"](), _0x56ab58) {
      for (const _0x560f01 of _0x56ab58) this["_destroySidebarItemView"](_0x560f01);
    }
    this["view"]["list"]["clear"](), this["view"]["class"] = "", this["_lastItem"] = null;
  }
  ["addAnnotation"](_0x108067, _0x349342) {
    _0x349342 || (_0x349342 = _0x108067["view"]);
    const _0x1dd600 = new H3(this["context"]["locale"]);
    this["_sidebarItemViewToAnnotation"]["set"](_0x1dd600, _0x108067), this["_annotationToSidebarItemView"]["set"](_0x108067, _0x1dd600), _0x1dd600["content"]["add"](_0x349342), this["listenTo"](_0x108067["view"], "change:targetRect", (_0x40bce7, _0x5f69a6, _0x26c5ad) => {
      const _0x53e4a2 = this["_getTargetTop"](_0x108067, _0x26c5ad);
      _0x1dd600["_targetTop"] != _0x53e4a2 && (_0x1dd600["_targetTop"] = _0x53e4a2, this["_setItemTop"](_0x1dd600, _0x53e4a2));
    }), this["listenTo"](_0x1dd600, "change:top", () => {
      this["_recalculate"](_0x1dd600, "top");
    }), this["listenTo"](_0x1dd600, "change:bottom", () => {
      this["_recalculate"](_0x1dd600, "bottom");
    }), this["_alignToTargetRect"](_0x1dd600);
    const _0x55a495 = this["_getItemBefore"](_0x1dd600);
    if (_0x55a495) this["_alignAfterItem"](_0x55a495, _0x1dd600) || this["_alignToTargetRect"](_0x1dd600);
    else this["_alignToTargetRect"](_0x1dd600);
    return this["_updateLastItem"](), this["view"]["list"]["add"](_0x1dd600), _0x1dd600;
  }
  ["_alignForTopChange"](_0x3e6d36) {
    if (!_0x3e6d36["content"]["length"]) return;
    const _0x56c07a = this["_getItemBefore"](_0x3e6d36);
    if (!_0x56c07a) return;
    const _0x4610bc = this["_sidebarItemViewToAnnotation"]["get"](_0x56c07a), _0x8c78ff = this["_activeAnnotation"];
    _0x8c78ff && _0x8c78ff === _0x4610bc ? this["_alignAfterItem"](_0x56c07a, _0x3e6d36) : this["_alignBeforeItem"](_0x3e6d36, _0x56c07a);
  }
  ["_alignForBottomChange"](_0x30e63d) {
    if (!_0x30e63d["content"]["length"]) return;
    const _0x338baf = this["_getItemAfter"](_0x30e63d);
    if (!_0x338baf) return;
    const _0x38667b = this["_sidebarItemViewToAnnotation"]["get"](_0x338baf), _0x2b9cc0 = this["context"]["config"]["get"]("sidebar.preventScrollOutOfView"), _0x75ffe3 = this["_activeAnnotation"];
    _0x75ffe3 && _0x75ffe3 === _0x38667b && _0x2b9cc0 ? (this["_alignBeforeItem"](_0x338baf, _0x30e63d), this["_alignAfterItem"](_0x30e63d, _0x338baf)) : _0x75ffe3 && _0x75ffe3 === _0x38667b ? this["_alignBeforeItem"](_0x338baf, _0x30e63d) : this["_alignAfterItem"](_0x30e63d, _0x338baf);
  }
  ["_recalculate"](_0x507c42, _0xbe23d) {
    0 === this["_recalculateBuffer"]["length"] && setTimeout(() => {
      for (const { sidebarItemView: _0x61f1e7, changedProp: _0x44155f } of this["_recalculateBuffer"]) "top" === _0x44155f ? this["_alignForTopChange"](_0x61f1e7) : this["_alignForBottomChange"](_0x61f1e7);
      this["_recalculateBuffer"] = [];
    }, 10), this["_recalculateBuffer"]["push"]({ "sidebarItemView": _0x507c42, "changedProp": _0xbe23d });
  }
  ["getSidebarItemView"](_0x17ad66) {
    return this["_annotationToSidebarItemView"]["get"](_0x17ad66);
  }
  ["destroy"]() {
    this["stopListening"](), this["view"]["destroy"]();
  }
  ["_destroySidebarItemView"](_0x27185f) {
    const _0x5f3599 = this["getSidebarItemView"](_0x27185f);
    this["stopListening"](_0x5f3599), this["stopListening"](_0x27185f["view"]), _0x5f3599["destroy"](), this["_annotationToSidebarItemView"]["delete"](_0x27185f), this["_sidebarItemViewToAnnotation"]["delete"](_0x5f3599);
  }
  ["_createSidebarView"]() {
    const _0x931276 = new V2(this["context"]["locale"]);
    return _0x931276["render"](), this["on"]("change:_lastItem", (_0x874c8b, _0x2a6148, _0x680e59, _0x284266) => {
      _0x284266 && _0x931276["unbind"]("minHeight"), _0x680e59 ? _0x931276["bind"]("minHeight")["to"](_0x680e59, "bottom") : _0x931276["minHeight"] = null;
    }), _0x931276;
  }
  ["_updateLastItem"]() {
    var _a5;
    this["_lastItem"] = ((_a5 = this["_annotations"]) == null ? void 0 : _a5["last"]) ? this["getSidebarItemView"](this["_annotations"]["last"]) : null;
  }
  ["_getItemBefore"](_0xc09028) {
    var _a5;
    const _0x17eda6 = this["_sidebarItemViewToAnnotation"]["get"](_0xc09028), _0x52cbd0 = _0x17eda6 && ((_a5 = this["_annotations"]) == null ? void 0 : _a5["get"](this["_annotations"]["getIndex"](_0x17eda6) - 1));
    return _0x52cbd0 && this["getSidebarItemView"](_0x52cbd0) || null;
  }
  ["_getItemAfter"](_0x29ed5d) {
    var _a5;
    const _0x41a2d9 = this["_sidebarItemViewToAnnotation"]["get"](_0x29ed5d), _0x6df59e = _0x41a2d9 && ((_a5 = this["_annotations"]) == null ? void 0 : _a5["get"](this["_annotations"]["getIndex"](_0x41a2d9) + 1));
    return _0x6df59e && this["getSidebarItemView"](_0x6df59e) || null;
  }
  ["_alignBeforeItem"](_0x1eae6b, _0x2634c2) {
    _0x1eae6b["updateHeight"]();
    const _0x4c418e = R3(_0x2634c2["bottom"] + this["_spaceBetweenItems"], _0x1eae6b["top"]);
    return !!_0x4c418e && (this["_setItemTop"](_0x2634c2, _0x2634c2["top"] - _0x4c418e), true);
  }
  ["_alignAfterItem"](_0x46051c, _0x11631b) {
    _0x46051c["updateHeight"]();
    const _0x185383 = R3(_0x46051c["bottom"] + this["_spaceBetweenItems"], _0x11631b["top"]);
    return !!_0x185383 && (this["_setItemTop"](_0x11631b, _0x11631b["top"] + _0x185383, false), true);
  }
  ["_alignToTargetRect"](_0x1f492c) {
    const _0x2771aa = this["_sidebarItemViewToAnnotation"]["get"](_0x1f492c);
    if (!_0x2771aa || !_0x2771aa["target"] || !_0x2771aa["targetRect"]) return;
    const _0x1a2c75 = this["_getTargetTop"](_0x2771aa, _0x2771aa["targetRect"]);
    this["_setItemTop"](_0x1f492c, _0x1a2c75);
  }
  ["_getTargetTop"](_0x56b676, _0x3d22c6) {
    if (null === _0x3d22c6) return 0;
    if (_0x56b676["target"] instanceof Rect) return _0x3d22c6["top"];
    {
      const _0x1ad475 = new Rect(this["view"]["element"])["top"];
      return _0x3d22c6["top"] - _0x1ad475;
    }
  }
  ["_setItemTop"](_0x5abbd4, _0x2417e8, _0x58a876 = this["context"]["config"]["get"]("sidebar.preventScrollOutOfView")) {
    _0x58a876 && (_0x2417e8 = Math["max"](_0x2417e8, this["_getMaxAvailableTop"](_0x5abbd4))), _0x5abbd4["top"] = _0x2417e8;
  }
  ["_getMaxAvailableTop"](_0x44de82) {
    let _0x1d65f8 = this["_getItemBefore"](_0x44de82), _0xf388d = 0;
    for (; _0x1d65f8; ) _0x1d65f8["updateHeight"](), _0xf388d += this["_spaceBetweenItems"] + _0x1d65f8["height"], _0x1d65f8 = this["_getItemBefore"](_0x1d65f8);
    return _0xf388d;
  }
};
function R3(_0xc8c18d, _0x22b05b) {
  return Math["max"](_0xc8c18d - _0x22b05b, 0);
}
function y3(_0x203388) {
  return null !== _0x203388 && "object" == typeof _0x203388 && 1 === _0x203388["nodeType"];
}
var e2 = class extends ContextPlugin {
  constructor(_0x110c1b) {
    super(_0x110c1b);
    __publicField(this, "isAttached");
    __publicField(this, "annotations");
    __publicField(this, "_editorAnnotations");
    __publicField(this, "_refreshPositioningDebounced");
    this["isAttached"] = false, this["set"]("activeAnnotation", null), this["annotations"] = null, this["_editorAnnotations"] = new Collection(), this["_refreshPositioningDebounced"] = debounce_default(() => {
      this["annotations"]["refreshPositioning"]();
    }, 250, { "leading": false });
  }
  static get ["requires"]() {
    return [z2, M2];
  }
  static get ["pluginName"]() {
    return "WideSidebar";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    const _0x533cb6 = this["context"]["plugins"]["get"](M2), _0x10b072 = this["context"]["plugins"]["get"](z2);
    _0x533cb6["register"]("wideSidebar", this), _0x10b072["container"] && _0x533cb6["switchTo"]("wideSidebar");
  }
  ["setActiveAnnotation"](_0x45695f) {
    if (_0x45695f === this["activeAnnotation"]) return;
    const _0x189030 = this["context"]["plugins"]["get"](z2);
    _0x189030["_activeAnnotation"] = _0x45695f;
    const _0x5fa1ad = this["activeAnnotation"];
    this["activeAnnotation"] = _0x45695f, _0x189030["refresh"]({ "blurredAnnotation": _0x5fa1ad, "activatedAnnotation": this["activeAnnotation"] });
  }
  ["attach"](_0x363408) {
    this["annotations"] = _0x363408;
    const _0xe65fb3 = this["context"]["plugins"]["get"](z2);
    if (_0xe65fb3["_annotations"] = _0x363408, this["isAttached"]) throw new CKEditorError("widesidebar-attach-already-attached", this);
    this["isAttached"] = true, this["listenTo"](_0xe65fb3, "set:container", () => {
      this["detach"](), this["listenTo"](_0xe65fb3, "change:container", (_0xfeb6f5) => {
        _0xfeb6f5["off"](), this["attach"](_0x363408);
      });
    }), _0xe65fb3["_attachToContainer"]({ "viewClass": "ck-sidebar--wide" });
    const _0x39e8eb = (_0xe5299f) => {
      _0xe5299f["updateTargetRect"](), _0xe65fb3["addAnnotation"](_0xe5299f);
    };
    for (const _0x154744 of _0x363408) _0x39e8eb(_0x154744);
    this["listenTo"](_0x363408, "add", (_0x230745, _0x2888bb) => {
      _0x39e8eb(_0x2888bb);
    }), this["listenTo"](_0x363408, "remove", (_0x269866, _0x5488aa, _0xdbf0e5) => {
      _0xe65fb3["rearrange"]({ "removedAnnotation": _0x5488aa, "previousAnnotation": _0x363408["get"](_0xdbf0e5 - 1), "nextAnnotation": _0x363408["get"](_0xdbf0e5 + 1) }), _0x5488aa === this["activeAnnotation"] && this["setActiveAnnotation"](null);
    }, { "priority": "high" }), this["listenTo"](_0x363408, "focus", (_0x4a5687, _0x1613e2) => {
      this["setActiveAnnotation"](_0x1613e2);
    }), this["listenTo"](_0x363408, "blur", () => {
      this["setActiveAnnotation"](null);
    });
    const _0x4cbd0d = this["context"] instanceof Context ? this["context"]["editors"] : new Collection([this["context"]]);
    for (const _0x19bf42 of _0x4cbd0d) this["_integrateWithEditorAnnotations"](_0x19bf42);
    this["listenTo"](_0x4cbd0d, "add", (_0x103421, _0x5564bf) => {
      this["listenTo"](_0x5564bf, "ready", () => {
        this["_integrateWithEditorAnnotations"](_0x5564bf);
      });
    }), this["listenTo"](_0x4cbd0d, "remove", (_0x1553d7, _0x30a03d) => {
      _0x30a03d["plugins"]["has"]("EditorAnnotations") && this["_destroyEditorAnnotationsIntegration"](_0x30a03d["plugins"]["get"]("EditorAnnotations"));
    }), window["addEventListener"]("resize", this["_refreshPositioningDebounced"]), this["annotations"]["refreshPositioning"]();
  }
  ["detach"]() {
    if (!this["isAttached"]) throw new CKEditorError("widesidebar-detach-not-attached", this);
    this["setActiveAnnotation"](null);
    const _0x26a3dc = this["context"]["plugins"]["get"](z2);
    _0x26a3dc["_detachFromContainer"](this["annotations"]), this["stopListening"](_0x26a3dc), this["stopListening"](this["annotations"]), this["context"] instanceof Context && this["stopListening"](this["context"]["editors"]);
    for (const _0x1bc952 of Array["from"](this["_editorAnnotations"])) this["_destroyEditorAnnotationsIntegration"](_0x1bc952);
    window["removeEventListener"]("resize", this["_refreshPositioningDebounced"]), this["_refreshPositioningDebounced"]["cancel"](), this["activeAnnotation"] = null, this["isAttached"] = false, this["annotations"] = null;
  }
  ["destroy"]() {
    this["isAttached"] && this["detach"]();
  }
  ["_integrateWithEditorAnnotations"](_0x350e7d) {
    if (!_0x350e7d["plugins"]["has"]("EditorAnnotations")) return;
    const _0x3d7edd = _0x350e7d["plugins"]["get"]("EditorAnnotations"), _0x1e2f30 = () => {
      const _0x2e5ad2 = _0x3d7edd["getOrderedSelectedAnnotations"]({ "annotations": this["annotations"], "activeAnnotation": this["activeAnnotation"] });
      this["setActiveAnnotation"](_0x2e5ad2[0] || null);
    };
    this["listenTo"](_0x3d7edd, "refresh", _0x1e2f30), this["listenTo"](_0x3d7edd, "blur", (_0x29145c, { isAnnotationTracked: _0x2c8296 }) => {
      this["activeAnnotation"] && _0x2c8296(this["activeAnnotation"]) && this["setActiveAnnotation"](null);
    }), this["listenTo"](_0x3d7edd, "uiUpdate", () => {
      this["_refreshPositioningDebounced"]();
    }), this["listenTo"](this["annotations"], "blur", (_0x41407a) => {
      _0x3d7edd["hasDomSelection"]() && (_0x1e2f30(), _0x41407a["stop"]());
    }, { "priority": "high" }), this["_editorAnnotations"]["add"](_0x3d7edd);
  }
  ["_destroyEditorAnnotationsIntegration"](_0x318681) {
    this["stopListening"](_0x318681), this["_editorAnnotations"]["remove"](_0x318681);
  }
};
var D2 = class extends ButtonView {
  constructor(_0xa59784) {
    super(_0xa59784);
    __publicField(this, "counterView");
    const _0x3d0cc5 = this["bindTemplate"];
    this["set"]("isDirty", false), this["set"]("number", 0), this["bind"]("_badge")["to"](this, "isDirty", this, "number", (_0x1ebca7, _0x38a439) => _0x1ebca7 ? "..." : _0x38a439["toString"]()), this["set"]("annotationType", ""), this["icon"] = kt, this["extendTemplate"]({ "attributes": { "class": ["ck-annotation-counter"] } }), this["counterView"] = new View(), this["counterView"]["setTemplate"]({ "tag": "span", "attributes": { "class": ["ck-annotation-counter__badge", _0x3d0cc5["to"]("annotationType", (_0x458177) => "ck-annotation-counter__badge--" + _0x458177), _0x3d0cc5["if"]("isDirty", "ck-annotation-counter__badge--edit-mode")] }, "children": [{ "text": _0x3d0cc5["to"]("_badge") }] }), this["children"]["add"](this["counterView"]);
  }
};
var n4 = class extends ContextPlugin {
  constructor(_0xa25271) {
    super(_0xa25271);
    __publicField(this, "isAttached");
    __publicField(this, "annotations");
    __publicField(this, "_manuallyClosedAnnotationViews");
    __publicField(this, "_domEmitter");
    __publicField(this, "_annotationToNarrowView");
    __publicField(this, "_selectedAnnotations");
    __publicField(this, "_editorAnnotations");
    __publicField(this, "_refreshPositioningDebounced");
    this["isAttached"] = false, this["_manuallyClosedAnnotationViews"] = /* @__PURE__ */ new Set(), this["_domEmitter"] = Object["create"](DomEmitterMixin), this["_annotationToNarrowView"] = /* @__PURE__ */ new Map(), this["set"]("activeAnnotation", null), this["annotations"] = null, this["_selectedAnnotations"] = [], this["_editorAnnotations"] = new Collection(), this["_refreshPositioningDebounced"] = debounce_default(() => {
      this["_refreshPositioning"]();
    }, 250, { "leading": false });
  }
  static get ["requires"]() {
    return [z2, M2];
  }
  static get ["pluginName"]() {
    return "NarrowSidebar";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    this["context"]["plugins"]["get"](M2)["register"]("narrowSidebar", this), this["bodyCollection"] = new BodyCollection(this["context"]["locale"]), this["balloonPanelView"] = new BalloonPanelView(this["context"]["locale"]), this["bodyCollection"]["attachToDom"](), this["bodyCollection"]["add"](this["balloonPanelView"]);
  }
  ["attach"](_0x5ef6d6) {
    this["annotations"] = _0x5ef6d6;
    const _0x288976 = this["context"]["plugins"]["get"](z2), _0x1ab6c1 = this["balloonPanelView"];
    if (_0x288976["_annotations"] = _0x5ef6d6, this["isAttached"]) throw new CKEditorError("narrowsidebar-attach-already-attached", this);
    this["isAttached"] = true, this["listenTo"](_0x288976, "set:container", () => {
      this["detach"](), this["listenTo"](_0x288976, "change:container", (_0xc859a3) => {
        _0xc859a3["off"](), this["attach"](_0x5ef6d6);
      });
    }), _0x288976["_attachToContainer"]({ "viewClass": "ck-sidebar--narrow", "spaceBetweenItems": 5 });
    const _0x490eed = (_0x591473) => {
      const _0x3e8092 = new D2(this["context"]["locale"]);
      _0x288976["addAnnotation"](_0x591473, _0x3e8092), this["_annotationToNarrowView"]["set"](_0x591473, _0x3e8092), _0x3e8092["bind"]("isDirty", "annotationType", "number")["to"](_0x591473["view"], "isDirty", "type", "length"), _0x3e8092["on"]("execute", () => {
        this["_manuallyClosedAnnotationViews"]["clear"](), _0x1ab6c1["content"]["first"] !== _0x591473["view"] ? (this["_showBalloon"](_0x591473), _0x591473["view"]["element"]["focus"](), this["setActiveAnnotation"](_0x591473)) : this["setActiveAnnotation"](null);
      });
    };
    for (const _0x15f944 of _0x5ef6d6) _0x490eed(_0x15f944);
    this["listenTo"](_0x5ef6d6, "add", (_0x5e953c, _0x1a6259) => {
      _0x490eed(_0x1a6259);
    }), this["listenTo"](_0x5ef6d6, "remove", (_0x1d5a76, _0x5cae85, _0xe7fdbb) => {
      this["_annotationToNarrowView"]["get"](_0x5cae85)["destroy"](), this["_annotationToNarrowView"]["delete"](_0x5cae85), _0x288976["rearrange"]({ "removedAnnotation": _0x5cae85, "previousAnnotation": _0x5ef6d6["get"](_0xe7fdbb - 1), "nextAnnotation": _0x5ef6d6["get"](_0xe7fdbb + 1) }), _0x5cae85 === this["activeAnnotation"] && this["setActiveAnnotation"](null);
    }, { "priority": "low" }), this["listenTo"](_0x5ef6d6, "focus", (_0x1ee1c9, _0x5f424f) => {
      this["setActiveAnnotation"](_0x5f424f);
    }), this["listenTo"](_0x5ef6d6, "blur", () => {
      this["setActiveAnnotation"](null);
    }), this["_domEmitter"]["listenTo"](document, "keydown", (_0x4688a0, _0x5cbe78) => {
      _0x5cbe78["keyCode"] === keyCodes["esc"] && _0x1ab6c1["isVisible"] && (this["_manuallyClosedAnnotationViews"]["add"](_0x1ab6c1["content"]["first"]), this["_hideBalloon"](), _0x5cbe78["stopPropagation"](), _0x5cbe78["preventDefault"]());
    }), this["_domEmitter"]["listenTo"](document, "mousedown", (_0x293b4b, _0x2d4807) => {
      const _0x58a6a7 = _0x2d4807["target"];
      _0x1ab6c1["isVisible"] && _0x1ab6c1["element"]["contains"](_0x58a6a7) || _0x288976["view"]["element"]["contains"](_0x58a6a7) || _0x293b4b["preventClosingBalloon"] || this["activeAnnotation"] && this["activeAnnotation"]["focusableElements"]["find"]((_0x31a0a4) => _0x31a0a4["contains"](_0x58a6a7)) || (this["_manuallyClosedAnnotationViews"]["clear"](), this["_hideBalloon"](), this["setActiveAnnotation"](null));
    });
    const _0x7780e0 = this["context"] instanceof Context ? this["context"]["editors"] : new Collection([this["context"]]);
    for (const _0x4da204 of _0x7780e0) this["_integrateWithEditorAnnotations"](_0x4da204);
    this["listenTo"](_0x7780e0, "add", (_0x3a3ecc, _0x1be20c) => {
      this["listenTo"](_0x1be20c, "ready", () => {
        this["_integrateWithEditorAnnotations"](_0x1be20c);
      });
    }), this["listenTo"](_0x7780e0, "remove", (_0x4dbcd8, _0x53f946) => {
      _0x53f946["plugins"]["has"]("EditorAnnotations") && this["_destroyEditorAnnotationsIntegration"](_0x53f946["plugins"]["get"]("EditorAnnotations"));
    }), window["addEventListener"]("resize", this["_refreshPositioningDebounced"]), this["_refreshPositioning"]();
  }
  ["setActiveAnnotation"](_0x5d4d4a) {
    if (_0x5d4d4a === this["activeAnnotation"]) return;
    const _0x47c1c0 = this["context"]["plugins"]["get"](z2);
    if (_0x47c1c0["refresh"]({ "blurredAnnotation": this["activeAnnotation"], "activatedAnnotation": _0x5d4d4a, "disableAnimationOnActivatedAnnotation": true }), _0x5d4d4a) _0x47c1c0["getSidebarItemView"](_0x5d4d4a) ? this["_showBalloon"](_0x5d4d4a) : this["_hideBalloon"]();
    else this["_hideBalloon"]();
    this["activeAnnotation"] = _0x5d4d4a;
  }
  ["detach"]() {
    if (!this["isAttached"]) throw new CKEditorError("narrowsidebar-detach-not-attached", this);
    this["setActiveAnnotation"](null);
    const _0x12ea2a = this["context"]["plugins"]["get"](z2);
    this["_hideBalloon"](), Array["from"](this["_annotationToNarrowView"]["values"](), (_0x5efa3a) => _0x5efa3a["destroy"]()), this["_annotationToNarrowView"]["clear"](), _0x12ea2a["_detachFromContainer"](this["annotations"]), this["stopListening"](), this["_domEmitter"]["stopListening"](), this["context"] instanceof Context && this["stopListening"](this["context"]["editors"]);
    for (const _0x150b50 of Array["from"](this["_editorAnnotations"])) this["_destroyEditorAnnotationsIntegration"](_0x150b50);
    window["removeEventListener"]("resize", this["_refreshPositioningDebounced"]), this["_refreshPositioningDebounced"]["cancel"](), this["_selectedAnnotations"] = [], this["isAttached"] = false, this["annotations"] = null;
  }
  ["destroy"]() {
    this["isAttached"] && this["detach"](), this["bodyCollection"]["detachFromDom"]();
  }
  ["_integrateWithEditorAnnotations"](_0x25e7bd) {
    if (!_0x25e7bd["plugins"]["has"]("EditorAnnotations")) return;
    const _0x3e7aee = _0x25e7bd["plugins"]["get"]("EditorAnnotations"), _0xdae151 = this["context"]["plugins"]["get"](z2), _0x20df6b = this["annotations"], _0x13214c = this["balloonPanelView"], _0x8ae124 = () => {
      const _0x2450d4 = _0x3e7aee["getOrderedSelectedAnnotations"]({ "annotations": this["annotations"], "activeAnnotation": this["activeAnnotation"] });
      this["_setSelectedAnnotations"](_0x2450d4), this["setActiveAnnotation"](_0x2450d4[0] || null);
    };
    this["listenTo"](_0x3e7aee, "refresh", _0x8ae124), this["listenTo"](_0x3e7aee, "blur", (_0x3c0ef0, { isAnnotationTracked: _0x5bcce6 }) => {
      this["activeAnnotation"] && _0x5bcce6(this["activeAnnotation"]) && (this["_setSelectedAnnotations"]([]), this["setActiveAnnotation"](null));
    }), this["listenTo"](_0x3e7aee, "uiUpdate", () => {
      this["_refreshPositioningDebounced"]();
    }), this["listenTo"](_0x20df6b, "blur", (_0x1f498b) => {
      _0x3e7aee["hasDomSelection"]() && _0x1f498b["stop"]();
    }, { "priority": "high" }), this["listenTo"](this["_domEmitter"], "mousedown", (_0x5a24ac, _0x3fc79b) => {
      const _0x2c3772 = _0x3fc79b["target"];
      _0x13214c["isVisible"] && _0x13214c["element"]["contains"](_0x2c3772) || _0xdae151["view"]["element"]["contains"](_0x2c3772) || this["activeAnnotation"] && _0x3e7aee["hasDomSelection"]() && (_0x8ae124(), _0x5a24ac["preventClosingBalloon"] = true);
    }, { "priority": "high" }), this["_editorAnnotations"]["add"](_0x3e7aee);
  }
  ["_destroyEditorAnnotationsIntegration"](_0x1bdea6) {
    _0x1bdea6 && (this["stopListening"](_0x1bdea6), this["_editorAnnotations"]["remove"](_0x1bdea6));
  }
  ["_setSelectedAnnotations"](_0xc4f635) {
    for (const _0x3f5d0a of this["_selectedAnnotations"]) _0xc4f635["includes"](_0x3f5d0a) || this["_manuallyClosedAnnotationViews"]["delete"](_0x3f5d0a["view"]);
    this["_selectedAnnotations"] = _0xc4f635;
  }
  ["_refreshPositioning"]() {
    const _0xe7c21a = this["balloonPanelView"];
    this["annotations"]["refreshPositioning"](), _0xe7c21a["isVisible"] && this["_updateBalloonPosition"]();
  }
  ["_showBalloon"](_0x3ffb7c) {
    if (this["_manuallyClosedAnnotationViews"]["has"](_0x3ffb7c["view"])) return;
    const _0x4bb42a = this["balloonPanelView"]["content"]["first"];
    _0x4bb42a !== _0x3ffb7c["view"] ? (_0x4bb42a && this["_detachListeners"](_0x4bb42a), this["_attachListeners"](_0x3ffb7c["view"]), this["balloonPanelView"]["content"]["clear"](), this["balloonPanelView"]["content"]["add"](_0x3ffb7c["view"]), this["_updateBalloonPosition"]()) : this["_updateBalloonPosition"]();
  }
  ["_updateBalloonPosition"]() {
    const _0x4a849d = this["balloonPanelView"]["content"]["first"], _0x4cc62b = _0x4a849d && this["annotations"]["getByView"](_0x4a849d);
    if (!_0x4cc62b || !this["_annotationToNarrowView"]["has"](_0x4cc62b)) return;
    const _0x1ec424 = this["_annotationToNarrowView"]["get"](_0x4cc62b)["element"], _0x5486a4 = function() {
      const _0x4002f8 = BalloonPanelView["defaultPositions"];
      return [_0x4002f8["southArrowNorthEast"], _0x4002f8["northArrowSouthEast"], _0x4002f8["southArrowNorth"], _0x4002f8["northArrowSouth"], _0x4002f8["southArrowNorthWest"], _0x4002f8["northArrowSouthWest"]];
    }();
    this["balloonPanelView"]["pin"]({ "target": _0x1ec424, "positions": _0x5486a4 });
  }
  ["_hideBalloon"]() {
    const _0x2f2f2a = this["balloonPanelView"], _0x4b8155 = _0x2f2f2a["content"]["first"];
    _0x4b8155 && (this["_detachListeners"](_0x4b8155), _0x2f2f2a["unpin"](), _0x2f2f2a["content"]["clear"]());
  }
  ["_attachListeners"](_0x2f75e0) {
    this["listenTo"](_0x2f75e0, "change:height", () => this["_updateBalloonPosition"]()), this["listenTo"](_0x2f75e0, "Esc", (_0x26ed7b, _0x4844d8) => {
      this["_manuallyClosedAnnotationViews"]["add"](_0x2f75e0), this["_hideBalloon"](), _0x4844d8();
    });
  }
  ["_detachListeners"](_0x164a9c) {
    this["stopListening"](_0x164a9c);
  }
};
var c4 = class extends Plugin {
  constructor(_0x326fb3) {
    super(_0x326fb3);
    __publicField(this, "isAttached");
    __publicField(this, "annotations");
    __publicField(this, "_manuallyClosed");
    __publicField(this, "_balloon");
    __publicField(this, "_addedAnnotations");
    __publicField(this, "_selectedAnnotations");
    __publicField(this, "_forceRefresh");
    _0x326fb3["editing"]["view"]["addObserver"](MouseObserver), this["isAttached"] = false, this["set"]("activeAnnotation", null), this["annotations"] = null, this["_manuallyClosed"] = /* @__PURE__ */ new Set(), this["_balloon"] = _0x326fb3["plugins"]["get"](ContextualBalloon), this["_addedAnnotations"] = /* @__PURE__ */ new Set(), this["_selectedAnnotations"] = [], this["_forceRefresh"] = false;
  }
  static get ["requires"]() {
    return [P3, ContextualBalloon, M2];
  }
  static get ["pluginName"]() {
    return "InlineAnnotations";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    const _0x415dc1 = this["editor"]["plugins"]["get"](M2);
    _0x415dc1["context"] === this["editor"] && (_0x415dc1["register"]("inline", this), this["editor"]["keystrokes"]["set"]("Esc", (_0x31f130, _0x3ed819) => {
      const _0x5b0ad8 = this["_balloon"];
      if (this["isAttached"] && _0x5b0ad8["visibleView"]) {
        const _0x3daa9b = this["annotations"]["getByView"](_0x5b0ad8["visibleView"]);
        _0x3daa9b && this["_closeAnnotation"](_0x3daa9b), _0x3ed819();
      }
    }));
  }
  ["afterInit"]() {
    const _0xcf3325 = this["editor"]["plugins"]["get"](M2);
    _0xcf3325["context"] === this["editor"] && (_0xcf3325["hasActive"]() || _0xcf3325["switchTo"]("inline"));
  }
  ["setActiveAnnotation"](_0x109616) {
    _0x109616 !== this["activeAnnotation"] && (this["activeAnnotation"] && (this["activeAnnotation"]["isActive"] = false), _0x109616 && this["editor"]["ui"]["focusTracker"]["isFocused"] && (this["annotations"]["has"](_0x109616) && this["_addAnnotationToBalloon"](_0x109616, true), _0x109616["isActive"] = true), _0x109616 || this["_setSelectedAnnotations"]([]), this["activeAnnotation"] = _0x109616);
  }
  ["attach"](_0x1c3397) {
    this["annotations"] = _0x1c3397;
    const _0x214071 = this["editor"]["plugins"]["get"](M2), _0x349385 = this["_balloon"];
    if (this["isAttached"]) throw new CKEditorError("inlineannotations-attach-already-attached", this);
    if (_0x214071["context"] !== this["editor"]) throw new CKEditorError("inlineannotations-not-allowed-with-context", this);
    const _0xb21c9 = this["editor"]["plugins"]["get"](P3);
    this["listenTo"](_0xb21c9, "refresh", () => {
      const _0x34c7c4 = _0xb21c9["getOrderedSelectedAnnotations"]({ "annotations": this["annotations"], "activeAnnotation": this["activeAnnotation"] });
      var _0x2ade63, _0xea8430;
      !this["_forceRefresh"] && (_0x2ade63 = _0x34c7c4, _0xea8430 = this["_selectedAnnotations"], _0x2ade63["length"] === _0xea8430["length"] && _0x2ade63["every"]((_0x2f7b2e) => _0xea8430["includes"](_0x2f7b2e))) || (this["_forceRefresh"] = false, this["_setSelectedAnnotations"](_0x34c7c4), this["setActiveAnnotation"](_0x34c7c4[0] || null));
    }), this["listenTo"](_0xb21c9, "blur", (_0x2b0cc1, { isAnnotationTracked: _0x5b7256 }) => {
      this["activeAnnotation"] && _0x5b7256(this["activeAnnotation"]) && (this["_setSelectedAnnotations"]([]), this["setActiveAnnotation"](null));
    }), this["listenTo"](this["editor"]["ui"]["focusTracker"], "change:isFocused", (_0x4a6357, _0x32141d, _0x408e26) => {
      _0x408e26 || this["setActiveAnnotation"](null);
    }), this["listenTo"](_0x1c3397, "remove", (_0x542dc1, _0x36788c) => {
      this["_removeAnnotationFromBalloon"](_0x36788c), _0x36788c === this["activeAnnotation"] && this["setActiveAnnotation"](null);
    }), this["listenTo"](_0x349385, "change:visibleView", (_0x5a3dbb, _0x46e3f1, _0x3eaad5, _0x75e5dc) => {
      _0x75e5dc && this["stopListening"](_0x75e5dc);
      const _0x14b59f = _0x1c3397["getByView"](_0x3eaad5);
      _0x3eaad5 && _0x14b59f && (this["listenTo"](_0x3eaad5, "change:height", () => {
        _0x349385["updatePosition"]();
      }), this["listenTo"](_0x3eaad5, "Esc", () => {
        this["_closeAnnotation"](_0x14b59f), this["editor"]["editing"]["view"]["focus"]();
      }), this["activeAnnotation"] !== _0x14b59f && this["setActiveAnnotation"](_0x14b59f));
    }), this["listenTo"](this["editor"]["ui"], "update", () => {
      _0x349385["visibleView"] && (_0x1c3397["getByView"](_0x349385["visibleView"]) && _0x349385["updatePosition"]());
    }), this["listenTo"](this["editor"]["editing"]["view"]["document"], "mousedown", () => {
      this["_forceRefresh"] = true, this["_manuallyClosed"]["clear"]();
    }), this["editor"]["editing"]["view"]["document"]["selection"]["editableElement"] && this["editor"]["editing"]["view"]["focus"](), this["isAttached"] = true;
  }
  ["detach"]() {
    if (!this["isAttached"]) throw new CKEditorError("inlineannotations-detach-not-attached", this);
    this["setActiveAnnotation"](null);
    for (const _0x467b43 of this["_addedAnnotations"]) this["_removeAnnotationFromBalloon"](_0x467b43);
    this["stopListening"](), this["isAttached"] = false, this["annotations"] = null;
  }
  ["destroy"]() {
    this["isAttached"] && this["detach"]();
  }
  ["_setSelectedAnnotations"](_0x363045) {
    for (const _0x355f85 of this["_selectedAnnotations"]) _0x363045["includes"](_0x355f85) || this["_manuallyClosed"]["delete"](_0x355f85);
    for (const _0x103555 of this["annotations"]) _0x363045["includes"](_0x103555) || this["_removeAnnotationFromBalloon"](_0x103555);
    if (this["editor"]["ui"]["focusTracker"]["isFocused"]) {
      for (const _0x3417cf of _0x363045) this["_addAnnotationToBalloon"](_0x3417cf);
    }
    this["_selectedAnnotations"] = _0x363045;
  }
  ["_addAnnotationToBalloon"](_0x49f15a, _0xe22ef6 = false) {
    this["_manuallyClosed"]["has"](_0x49f15a) || (this["_addedAnnotations"]["has"](_0x49f15a) || this["_balloon"]["hasView"](_0x49f15a["view"]) || (this["_addedAnnotations"]["add"](_0x49f15a), this["_balloon"]["add"]({ "stackId": _0x49f15a["view"]["id"], "view": _0x49f15a["view"], "position": { "target": () => this["_getBalloonTargetForAnnotation"](_0x49f15a) } })), _0xe22ef6 && this["_balloon"]["showStack"](_0x49f15a["view"]["id"]));
  }
  ["_getBalloonTargetForAnnotation"](_0x2a3912) {
    const _0x2b98dc = _0x2a3912["target"], _0x3e1fe7 = this["editor"]["editing"]["view"], _0x5386cf = _0x3e1fe7["document"]["selection"]["getFirstRange"](), _0x169cdf = _0x3e1fe7["domConverter"]["viewRangeToDom"](_0x5386cf);
    if (_0x169cdf["collapse"](true), _0x2b98dc) {
      if (_0x2b98dc instanceof Rect) return _0x2b98dc;
      let _0x16f7f4 = [];
      for (const _0x42dc4d of _0x2b98dc) _0x16f7f4["push"](...(_0x522ebc = _0x42dc4d["getClientRects"](), Array["from"](_0x522ebc)["map"](DOMRect["fromRect"])));
      _0x16f7f4 = function(_0x482e85) {
        const _0x3b8da3 = [];
        let _0xb1d73b = _0x482e85[0];
        for (let _0x36c23c = 1; _0x36c23c < _0x482e85["length"]; _0x36c23c++) b2(_0xb1d73b, _0x482e85[_0x36c23c]) ? _0xb1d73b["width"] += _0x482e85[_0x36c23c]["width"] : (_0x3b8da3["push"](_0xb1d73b), _0xb1d73b = _0x482e85[_0x36c23c]);
        return _0x3b8da3["push"](_0xb1d73b), _0x3b8da3;
      }(_0x16f7f4);
      const _0x3d77a1 = _0x169cdf["getBoundingClientRect"]();
      return _0x16f7f4["find"]((_0x491a79) => _0x491a79["top"] <= _0x3d77a1["top"] && _0x491a79["bottom"] >= _0x3d77a1["bottom"] && _0x491a79["left"] <= _0x3d77a1["left"] && _0x491a79["right"] >= _0x3d77a1["right"]) || _0x16f7f4[0];
    }
    var _0x522ebc;
    return _0x2a3912["targetRect"] || _0x169cdf;
  }
  ["_removeAnnotationFromBalloon"](_0x218d4a) {
    this["_addedAnnotations"]["has"](_0x218d4a) && this["_balloon"]["hasView"](_0x218d4a["view"]) && (this["_addedAnnotations"]["delete"](_0x218d4a), this["_balloon"]["remove"](_0x218d4a["view"]));
  }
  ["_closeAnnotation"](_0x3cd741) {
    this["_manuallyClosed"]["add"](_0x3cd741), this["_removeAnnotationFromBalloon"](_0x3cd741);
  }
};
function b2(_0x4d2ab0, _0x10173b) {
  return _0x4d2ab0["top"] === _0x10173b["top"] && _0x4d2ab0["bottom"] === _0x10173b["bottom"] && _0x4d2ab0["right"] === _0x10173b["left"];
}
var Z3 = `<!--

 What you're currently looking at is the source code of a legally protected, proprietary software.
 CKEditor 5 Collaboration is licensed under a commercial license and protected by copyright law. Where not otherwise indicated,
 all CKEditor 5 Collaboration content is authored by CKSource engineers and consists of CKSource-owned intellectual property.

 Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.

!-->

<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path clip-rule="evenodd" d="M14 3.5A3.5 3.5 0 0 1 17.5 7v6l-.005.192a3.501 3.501 0 0 1-2.927 3.262l-.062.008v1.813a1.5 1.5 0 0 1-2.193 1.33l-.37-.193-.38-.212a13.452 13.452 0 0 1-3.272-2.63l-.062-.07-4.729-.046a3.5 3.5 0 0 1-3.5-3.5v-6a3.5 3.5 0 0 1 3.5-3.5L14 3.5ZM3.5 4.954a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2L8.924 15a11.917 11.917 0 0 0 3.71 3.081l.372.194v-3.268L12.962 15H14a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2L3.5 4.954Z"/><path d="M16.5.5h-10a3.5 3.5 0 0 0-3.162 2h1.84A2 2 0 0 1 6.5 2h10a2 2 0 0 1 2 2v8.873a3.502 3.502 0 0 0 1.495-2.681L20 10V4A3.5 3.5 0 0 0 16.5.5Z"/><path clip-rule="evenodd" d="M12.013 7.453a.75.75 0 0 1 .034 1.06l-3.75 4a.75.75 0 0 1-1.045.048l-2.25-2a.75.75 0 0 1 .996-1.122l1.704 1.515 3.25-3.467a.75.75 0 0 1 1.061-.034Z"/></svg>
`;
var tt2 = class extends View {
  constructor(_0x39f9a3, _0x54440b) {
    super(_0x39f9a3);
    __publicField(this, "focusTracker");
    __publicField(this, "focusCycler");
    __publicField(this, "_annotationViews");
    this["set"]("isEmpty", !_0x54440b["length"]), this["focusTracker"] = new FocusTracker(), this["_annotationViews"] = _0x54440b, this["_annotationViews"]["delegate"]("arrowup", "arrowdown")["to"](this), this["on"]("arrowup", () => {
      this["focusCycler"]["focusPrevious"]();
    }), this["on"]("arrowdown", () => {
      this["focusCycler"]["focusNext"]();
    }), this["focusCycler"] = new FocusCycler({ "focusables": _0x54440b, "focusTracker": this["focusTracker"] }), this["listenTo"](_0x54440b, "add", () => {
      this["isEmpty"] = false;
    }), this["listenTo"](_0x54440b, "remove", (_0x52d06c, _0x2949f5) => {
      _0x2949f5["isActive"] && this["focus"](), _0x54440b["length"] || (this["isEmpty"] = true);
    });
    const _0x2ab9f6 = this["bindTemplate"];
    this["setTemplate"]({ "tag": "div", "attributes": { "dir": "auto", "class": ["ck", "ck-comments-archive"], "tabindex": -1, "role": "list", "aria-label": S2(_0x39f9a3, "COMMENTS_ARCHIVE_LIST_LABEL") }, "children": [{ "tag": "div", "attributes": { "class": ["ck-comments-archive__content"], "role": "presentation" }, "children": [{ "tag": "div", "attributes": { "role": "presentation" }, "children": _0x54440b }, { "tag": "p", "attributes": { "class": ["ck-comments-archive__info", _0x2ab9f6["if"]("isEmpty", "ck-hidden", (_0x11ed52) => !_0x11ed52)] }, "children": [{ "text": S2(_0x39f9a3, "EMPTY_COMMENTS_ARCHIVE") }] }] }] });
  }
  ["render"]() {
    super["render"](), this["_setupKeyboardNavigation"]();
  }
  ["destroy"]() {
    super["destroy"](), this["focusTracker"]["destroy"]();
  }
  ["focus"]() {
    this["focusCycler"]["first"] ? this["focusCycler"]["focusFirst"]() : this["element"]["focus"]();
  }
  ["_setupKeyboardNavigation"]() {
    for (const _0x475945 of this["_annotationViews"]) this["focusTracker"]["add"](_0x475945["element"]);
    this["_annotationViews"]["on"]("change", (_0x52560e, { added: _0x21c322, removed: _0x5ab7f1 }) => {
      for (const _0x4e3888 of _0x21c322) this["focusTracker"]["add"](_0x4e3888["element"]);
      for (const _0x1c3dda of _0x5ab7f1) this["focusTracker"]["remove"](_0x1c3dda["element"]);
    });
  }
};
var f3 = class extends ContextPlugin {
  static get ["pluginName"]() {
    return "CommentsArchive";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  static get ["requires"]() {
    return [o4, N2];
  }
  constructor(_0x11a557) {
    super(_0x11a557), this["archivedThreads"] = new Collection();
  }
  ["init"]() {
    const _0x5279ed = this["context"], _0x1dacb6 = _0x5279ed["plugins"]["get"](o4), _0xcf46e3 = _0x5279ed["plugins"]["get"](N2);
    this["listenTo"](_0x1dacb6, "addCommentThread", (_0x45b750, { threadId: _0x4e30fc }) => {
      const _0x586ec8 = _0x1dacb6["getCommentThread"](_0x4e30fc);
      _0x586ec8["archivedAt"] && this["archivedThreads"]["add"](_0x586ec8, this["_calculatePosition"](_0x586ec8["archivedAt"])), this["listenTo"](_0x586ec8, "change:archivedAt", (_0x1d4860, _0x46dd33, _0x5e0c12) => {
        _0x5e0c12 ? this["archivedThreads"]["has"](_0x586ec8) || this["archivedThreads"]["add"](_0x586ec8, this["_calculatePosition"](_0x586ec8["archivedAt"])) : this["archivedThreads"]["has"](_0x586ec8) && this["archivedThreads"]["remove"](_0x586ec8);
      });
    }), this["listenTo"](_0x1dacb6, "removeCommentThread", (_0x471437, { threadId: _0x148f8b }) => {
      const _0x504917 = _0x1dacb6["getCommentThread"](_0x148f8b);
      this["stopListening"](_0x504917), this["archivedThreads"]["has"](_0x504917) && this["archivedThreads"]["remove"](_0x504917);
    }, { "priority": "highest" }), this["listenTo"](_0xcf46e3["collection"], "focus", (_0x10945d, _0x30efdf) => {
      _0x30efdf["isVisible"] || (_0x30efdf["isActive"] = true, _0xcf46e3["activate"](_0x30efdf));
    });
  }
  ["_calculatePosition"](_0x81fb47) {
    const _0x10332a = [...this["archivedThreads"]]["findIndex"]((_0x44b3bf) => _0x44b3bf["archivedAt"] < _0x81fb47);
    return _0x10332a > -1 ? _0x10332a : this["archivedThreads"]["length"];
  }
};
var a6 = class extends Plugin {
  constructor(_0x20e88f) {
    super(_0x20e88f);
    __publicField(this, "commentsArchiveView");
    __publicField(this, "annotationViews");
    __publicField(this, "_pendingThreads");
    __publicField(this, "_hideDialogOnAnnotationEscape", (_0x13bcc9) => {
      const _0x2c980d = _0x13bcc9["source"];
      if (!this["annotationViews"]["has"](_0x2c980d["view"])) return;
      const _0x1b6b07 = this["editor"]["plugins"]["get"]("Dialog");
      _0x1b6b07["isOpen"] && "commentsArchive" === _0x1b6b07["id"] && (_0x1b6b07["hide"](), _0x13bcc9["stop"]());
    });
    this["annotationViews"] = new ViewCollection(), this["_pendingThreads"] = [];
  }
  static get ["pluginName"]() {
    return "CommentsArchiveUI";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  static get ["requires"]() {
    return [f3, Dialog];
  }
  ["init"]() {
    const _0x37a934 = this["editor"], _0x259acd = this["_hideDialogOnAnnotationEscape"]["bind"](this);
    _0x37a934["ui"]["componentFactory"]["add"]("commentsArchive", () => this["_createCommentsArchiveButton"](ButtonView, true)), _0x37a934["ui"]["componentFactory"]["add"]("menuBar:commentsArchive", () => {
      const _0x27f284 = this["_createCommentsArchiveButton"](MenuBarMenuListItemButtonView);
      return _0x27f284["set"]({ "role": "menuitemcheckbox" }), _0x27f284;
    });
    const _0x2185c4 = _0x37a934["plugins"]["get"](f3), _0x780a94 = _0x37a934["plugins"]["get"]("Annotations"), _0x526494 = _0x37a934["plugins"]["get"]("CommentsRepository");
    this["listenTo"](_0x2185c4["archivedThreads"], "add", (_0x380b1e, _0x52ec14) => {
      const _0x205ab0 = _0x37a934["config"]["get"]("collaboration.channelId");
      if (!_0x205ab0 || _0x52ec14["channelId"] === _0x205ab0) {
        const _0x51744b = _0x526494["_threadToController"]["get"](_0x52ec14);
        if (!_0x51744b) return void this["_pendingThreads"]["push"](_0x52ec14);
        const _0x1575cb = this["_calculatePosition"](_0x52ec14["archivedAt"]), _0x1bba98 = _0x780a94["getByInnerView"](_0x51744b["view"]);
        _0x1bba98["isVisible"] && _0x780a94["_visibleAnnotations"]["remove"](_0x1bba98), this["annotationViews"]["add"](_0x1bba98["view"], _0x1575cb);
      }
    }), this["listenTo"](_0x780a94["collection"], "add", (_0x40608f, _0x33c4f6) => {
      const _0xeb08a8 = this["_pendingThreads"]["find"]((_0x24448c) => {
        const _0x3b435e = _0x526494["_threadToController"]["get"](_0x24448c);
        return _0x3b435e && _0x33c4f6["innerView"] === _0x3b435e["view"];
      });
      if (_0xeb08a8) {
        const _0x2c2b6c = this["_calculatePosition"](_0xeb08a8["archivedAt"]);
        this["annotationViews"]["add"](_0x33c4f6["view"], _0x2c2b6c), this["_pendingThreads"]["splice"](this["_pendingThreads"]["indexOf"](_0xeb08a8), 1);
      }
    }), this["listenTo"](_0x2185c4["archivedThreads"], "remove", (_0x21b636, _0x1db7bb) => {
      const _0x1332ba = _0x37a934["config"]["get"]("collaboration.channelId");
      if (!_0x1332ba || _0x1db7bb["channelId"] === _0x1332ba) {
        const _0x82ee93 = _0x526494["_threadToController"]["get"](_0x1db7bb), _0xc0d966 = _0x780a94["getByInnerView"](_0x82ee93["view"]);
        this["annotationViews"]["remove"](_0xc0d966["view"]), this["stopListening"](_0xc0d966["focusableElements"]);
      }
    }), this["listenTo"](_0x780a94["collection"], "add", (_0x4f8c6b, _0x57f256) => {
      this["listenTo"](_0x57f256, "escape", _0x259acd);
    }), this["listenTo"](_0x780a94["collection"], "remove", (_0x3a5323, _0x5b04bf) => {
      this["stopListening"](_0x5b04bf, "escape", _0x259acd);
    });
  }
  ["_calculatePosition"](_0x5f2304) {
    const _0x3541c0 = this["editor"]["config"]["get"]("collaboration.channelId"), _0x3437b1 = [...this["editor"]["plugins"]["get"](f3)["archivedThreads"]]["filter"]((_0x37a205) => _0x37a205["channelId"] === _0x3541c0)["findIndex"]((_0x3c0c27) => _0x3c0c27["archivedAt"] < _0x5f2304);
    return _0x3437b1 < 0 || _0x3437b1 > this["annotationViews"]["length"] ? this["annotationViews"]["length"] : _0x3437b1 - 1;
  }
  ["_toggleDialog"]() {
    const _0x1ebeea = this["editor"], _0xb4ecf3 = _0x1ebeea["plugins"]["get"]("Dialog");
    this["commentsArchiveView"] || (this["commentsArchiveView"] = new tt2(_0x1ebeea["locale"], this["annotationViews"])), "commentsArchive" === _0xb4ecf3["id"] ? _0xb4ecf3["hide"]() : _0xb4ecf3["show"]({ "id": "commentsArchive", "title": S2(_0x1ebeea["locale"], "COMMENTS_ARCHIVE"), "icon": Z3, "hasCloseButton": true, "content": this["commentsArchiveView"], "position": DialogViewPosition["EDITOR_TOP_SIDE"] });
  }
  ["_createCommentsArchiveButton"](_0xdb2e6e, _0x4dbd18 = false) {
    const _0x50e96e = this["editor"]["locale"], _0x58e791 = this["editor"]["plugins"]["get"]("Dialog"), _0x329ddb = new _0xdb2e6e(_0x50e96e);
    return _0x329ddb["bind"]("isEnabled")["to"](this, "isEnabled"), _0x329ddb["bind"]("isOn")["to"](_0x58e791, "id", (_0x556479) => "commentsArchive" === _0x556479), _0x329ddb["set"]({ "label": S2(_0x50e96e, "COMMENTS_ARCHIVE"), "icon": Z3, "isToggleable": true }), _0x4dbd18 && (_0x329ddb["tooltip"] = true), this["listenTo"](_0x329ddb, "execute", () => this["_toggleDialog"]()), _0x329ddb;
  }
};
var p2 = class extends Plugin {
  static get ["requires"]() {
    return [o4, r5, i2, f3, a6, s4, e2, n4, c4];
  }
  static get ["pluginName"]() {
    return "Comments";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
};

// node_modules/@ckeditor/ckeditor5-document-outline/dist/index.js
function k3(_0x31dd8a) {
  let _0x3c7805 = "";
  for (const _0x27ac0c of _0x31dd8a["getChildren"]()) _0x27ac0c instanceof Text && (_0x3c7805 += _0x27ac0c["data"]);
  return _0x3c7805;
}
var n5 = class extends Plugin {
  constructor() {
    super(...arguments);
    __publicField(this, "_headingNames", []);
  }
  static get ["pluginName"]() {
    return "DocumentOutlineUtils";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    const _0xfa5150 = this["editor"];
    this["_headingNames"] = this["_getHeadingNames"]();
    let _0x18832a = [];
    _0xfa5150["model"]["document"]["on"]("change", debounce_default(() => {
      const _0x32c244 = _0x18832a;
      _0x18832a = this["_getOutlineDefinitions"]();
      const _0x508e7d = diff(_0x32c244, _0x18832a, (_0x2b3ffc, _0x20e091) => _0x2b3ffc["level"] === _0x20e091["level"] && _0x2b3ffc["text"] === _0x20e091["text"] && _0x2b3ffc["modelElement"] === _0x20e091["modelElement"]), _0x2ae101 = diffToChanges(_0x508e7d, _0x18832a), _0xab47bc = this["_getActiveHeading"](), _0x1d749b = _0x18832a["findIndex"]((_0x14beb1) => _0x14beb1["modelElement"] === _0xab47bc);
      _0x2ae101["length"] && this["fire"]("change", { "outlineDefinitions": _0x18832a, "activeItemIndex": _0x1d749b, "outlineChanges": _0x2ae101 }), this["fire"]("activeItemIndex", { "index": _0x1d749b });
    }, 250, { "leading": true, "trailing": true }));
  }
  ["afterInit"]() {
    this["_headingNames"]["length"] || this["_deriveHeadingElementsFromConversion"]();
  }
  ["_getOutlineDefinitions"]() {
    const _0x40a3b7 = this["editor"], _0xbbfc97 = [], _0x515f64 = this["_headingNames"];
    for (const _0x21e56e of _0x40a3b7["model"]["document"]["getRootNames"]()) _0x27703b(_0x40a3b7["model"]["document"]["getRoot"](_0x21e56e));
    function _0x27703b(_0xfbcbee) {
      for (const _0x5036b3 of _0xfbcbee["getChildren"]()) _0x5036b3["is"]("element") && (_0x515f64["includes"](_0x5036b3["name"]) && _0xbbfc97["push"]({ "level": _0x515f64["indexOf"](_0x5036b3["name"]) + 1, "text": k3(_0x5036b3), "modelElement": _0x5036b3 }), _0x27703b(_0x5036b3));
    }
    return _0xbbfc97;
  }
  ["_getActiveHeading"]() {
    const _0x3aad83 = this["editor"]["model"]["document"]["selection"]["getFirstPosition"](), _0x41cdab = new TreeWalker({ "direction": "backward", "startPosition": _0x3aad83 });
    for (const _0x2df043 of _0x41cdab) if (_0x2df043["item"]["is"]("element") && this["_headingNames"]["includes"](_0x2df043["item"]["name"])) return _0x2df043["item"];
  }
  ["_getHeadingNames"]() {
    const _0x2c2bda = this["editor"]["config"]["get"]("documentOutline.headings");
    return _0x2c2bda || function(_0xdfced6) {
      const _0x261f1d = _0xdfced6["config"]["get"]("heading.options");
      return _0x261f1d ? _0x261f1d["reduce"]((_0x32af58, _0x4a3df8) => ("paragraph" !== _0x4a3df8["model"] && _0x32af58["push"](_0x4a3df8["model"]), _0x32af58), []) : _0xdfced6["plugins"]["has"]("GeneralHtmlSupport") ? ["htmlH1", "htmlH2", "htmlH3", "htmlH4", "htmlH5", "htmlH6"] : [];
    }(this["editor"]);
  }
  ["_deriveHeadingElementsFromConversion"]() {
    const _0x2c1240 = this["editor"], _0x104848 = ["h1", "h2", "h3", "h4", "h5", "h6"], _0xf02ab = [];
    for (const _0x3fa65c of _0x104848) {
      const _0x230169 = _0x2c1240["editing"]["view"]["domConverter"]["domToView"](document["createElement"](_0x3fa65c)), _0x4f6a6e = _0x2c1240["data"]["toModel"](_0x230169)["getChild"](0);
      (_0x4f6a6e == null ? void 0 : _0x4f6a6e["is"]("element")) && _0xf02ab["push"](_0x4f6a6e["name"]);
    }
    this["_headingNames"] = _0xf02ab;
  }
};
function p3(_0x57103b, _0x760221) {
  const t2 = _0x57103b["t"];
  switch (_0x760221) {
    case "Empty heading":
      return t2("Empty heading");
    case "Editor headings will appear here as you type.":
      return t2("Editor headings will appear here as you type.");
    case "No headings were found in the document.":
      return t2("No headings were found in the document.");
    case "Table of contents":
      return t2("Table of contents");
    default:
      return _0x760221;
  }
}
var $2 = class extends View {
  constructor(_0x3c4914, _0x354f86 = false) {
    super(_0x3c4914);
    const _0x1d22e9 = this["bindTemplate"], _0x675e3e = _0x354f86 ? "[" + p3(_0x3c4914, "Empty heading") + "]" : "";
    this["set"]("text", ""), this["set"]("level", 1), this["set"]("isActive", false), this["bind"]("isEmpty")["to"](this, "text", (_0x1a86e7) => !_0x1a86e7), this["setTemplate"]({ "tag": "div", "attributes": { "class": ["ck", "ck-reset", "ck-document-outline__item", _0x1d22e9["to"]("level", (_0x3d0344) => "ck-document-outline__item_level-" + _0x3d0344), _0x1d22e9["if"]("isActive", "ck-document-outline__item_active"), _0x1d22e9["if"]("isEmpty", "ck-document-outline__item_empty")], "title": _0x1d22e9["to"]("text") }, "children": [{ "text": _0x1d22e9["to"]("text", (_0x1c5c54) => _0x1c5c54 || _0x675e3e) }], "on": { "click": _0x1d22e9["to"]("click") } });
  }
};
var S3 = class extends View {
  constructor(_0x4a5b66, _0x25e8bf = false, _0x51924e) {
    super(_0x4a5b66);
    __publicField(this, "items");
    __publicField(this, "showEmptyHeadingText");
    __publicField(this, "_documentOutlineContainer");
    this["showEmptyHeadingText"] = _0x25e8bf, this["set"]("activeItemIndex", -1), this["_documentOutlineContainer"] = _0x51924e, this["items"] = this["createCollection"](), this["items"]["delegate"]("click")["to"](this), this["on"]("click", this["_handleItemClick"]["bind"](this)), this["on"]("change:activeItemIndex", (_0x3bacf2, _0x5e9f62, _0x241fa9, _0x10dd53) => {
      this["_setActiveItem"](_0x10dd53, _0x241fa9);
    }), this["setTemplate"]({ "tag": "div", "attributes": { "class": ["ck", "ck-reset", "ck-document-outline"], "dir": _0x4a5b66["contentLanguageDirection"], "data-document-outline-empty-placeholder": p3(_0x4a5b66, "Editor headings will appear here as you type."), "tabindex": -1 }, "children": this["items"] });
  }
  ["sync"](_0x269378) {
    _0x269378["forEach"]((_0x568443) => {
      "insert" == _0x568443["type"] ? this["_insertItem"](_0x568443["index"], ..._0x568443["values"]) : "delete" == _0x568443["type"] && this["_deleteItem"](_0x568443["index"], _0x568443["howMany"]);
    });
  }
  ["_setActiveItem"](_0x566d15, _0x3ea082) {
    if (-1 !== _0x566d15) {
      const _0x442b30 = this["items"]["get"](_0x566d15);
      _0x442b30 && (_0x442b30["isActive"] = false);
    }
    -1 !== _0x3ea082 && (this["items"]["get"](_0x3ea082)["isActive"] = true, this["_scrollToItem"](_0x3ea082));
  }
  ["_insertItem"](_0x5ee600, ..._0x21bed4) {
    const _0x3271f3 = _0x21bed4["map"]((_0x442207, _0x18c6a8) => {
      const _0x5cbaa7 = new $2(this["locale"], this["showEmptyHeadingText"]);
      return _0x5cbaa7["text"] = _0x442207["text"], _0x5cbaa7["level"] = _0x442207["level"], _0x5ee600 + _0x18c6a8 === this["activeItemIndex"] && (_0x5cbaa7["isActive"] = true), _0x5cbaa7;
    });
    this["items"]["addMany"](_0x3271f3, _0x5ee600);
  }
  ["_deleteItem"](_0x64da57, _0x315b02) {
    do {
      this["items"]["remove"](_0x64da57);
    } while (--_0x315b02);
  }
  ["_handleItemClick"](_0xb56505) {
    const _0x5a0fd7 = this["items"]["getIndex"](_0xb56505["source"]);
    this["fire"]("itemSelected", _0x5a0fd7);
  }
  ["_scrollToItem"](_0x4d946b) {
    scrollAncestorsToShowTarget(this["items"]["get"](_0x4d946b)["element"], 20, this["_documentOutlineContainer"]);
  }
  ["destroy"]() {
    super["destroy"](), this["element"]["remove"]();
  }
};
var l3 = class extends Plugin {
  constructor(_0x3813a4) {
    super(_0x3813a4);
    __publicField(this, "view");
    __publicField(this, "_currentOutlineDefinitions");
    __publicField(this, "_updateActiveDefinitionFromViewportThrottled");
    this["view"] = new S3(_0x3813a4["locale"], this["editor"]["config"]["get"]("documentOutline.showEmptyHeadings"), this["editor"]["config"]["get"]("documentOutline.container")), this["_currentOutlineDefinitions"] = [], this["_updateActiveDefinitionFromViewportThrottled"] = throttle_default(this["_updateActiveDefinitionOnViewportChange"]["bind"](this), 100);
  }
  static get ["pluginName"]() {
    return "DocumentOutlineUI";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    const _0x1793db = this["editor"], _0xc89c48 = _0x1793db["plugins"]["get"]("DocumentOutlineUtils");
    let _0x2f2a41 = false;
    if (this["view"]["render"](), this["editor"]["ui"]["focusTracker"]["add"](this["view"]["element"]), !_0x1793db["config"]["get"]("documentOutline.container")) throw new CKEditorError("document-outline-container-not-provided", { "editor": _0x1793db });
    _0x1793db["config"]["get"]("documentOutline.container")["appendChild"](this["view"]["element"]), _0xc89c48["on"]("change", this["_handleOutlineChange"]["bind"](this)), _0xc89c48["on"]("activeItemIndex", (_0x5150c8, { index: _0x339f45 }) => this["_setActiveViewItem"](_0x339f45)), this["view"]["on"]("itemSelected", (_0x4f6bb8, _0x27f922) => {
      _0x2f2a41 = true, this["_handleItemSelected"](_0x27f922);
    }), this["view"]["listenTo"](global2["document"], "scroll", () => {
      _0x2f2a41 ? _0x2f2a41 = false : this["_updateActiveDefinitionFromViewportThrottled"]();
    }, { "useCapture": true }), this["view"]["listenTo"](global2["window"], "resize", this["_updateActiveDefinitionFromViewportThrottled"], { "useCapture": true });
  }
  ["afterInit"]() {
    !function(_0x59338d) {
      function _0x47f87c(_0x18dc89, _0x139400, _0xf628a1) {
        const _0x58fcc9 = {};
        _0x58fcc9[_0x55a357([110, 117, 109, 98, 101, 114, 79, 102, 82, 111, 117, 110, 100, 115])] = { 16: 10, 24: 12, 32: 14 }, _0x58fcc9[_0x55a357([114, 99, 111, 110])] = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145], _0x58fcc9[_0x55a357([83])] = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], _0x58fcc9[_0x55a357([84, 49])] = [3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474, 1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738, 597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420, 3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577, 605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627, 2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520, 3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205, 2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474, 1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309, 3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720, 2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771, 1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243, 3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470, 1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977, 2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737, 1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754, 361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755, 697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986], _0x58fcc9[_0x55a357([84, 50])] = [2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899, 2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108, 4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129, 2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848, 1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043, 1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914, 1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139, 2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658, 3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324, 3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385, 3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499, 1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572, 2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810, 3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411, 3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753, 2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487, 550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313, 2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766], _0x58fcc9[_0x55a357([84, 51])] = [1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099, 1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188, 2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329, 1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768, 3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283, 3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114, 3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739, 2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538, 2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324, 1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865, 1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296, 844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713, 3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050, 2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131, 3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513, 2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927, 3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905, 2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126], _0x58fcc9[_0x55a357([84, 52])] = [1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549, 1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243, 2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529, 1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963, 3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198, 3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564, 3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214, 2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143, 2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699, 1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945, 1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771, 842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818, 3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340, 2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126, 3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473, 2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917, 3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930, 2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436], _0x58fcc9[_0x55a357([85, 49])] = [0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795], _0x58fcc9[_0x55a357([85, 50])] = [0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459, 2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537, 3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535, 77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884, 3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824, 3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622, 507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216, 3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879, 129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469, 3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175, 1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921, 2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127, 3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560, 1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387, 2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037, 4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148, 692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663, 2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855], _0x58fcc9[_0x55a357([85, 51])] = [0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639, 3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557, 2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032, 3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201, 344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239, 532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878, 3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771, 4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744, 671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199, 4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366, 492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798, 2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695, 3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569, 4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702, 3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217, 1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635, 1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009, 3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150], _0x58fcc9[_0x55a357([85, 52])] = [0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874, 2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222, 4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595, 1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591, 4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837, 923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127, 2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424, 2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110, 4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469, 4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481, 1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243, 3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604, 2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802, 585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166, 4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912, 1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703, 3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213, 2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925];
        const _0x415f2a = new Uint8Array(16);
        for (let _0x391b21 = 15; _0x391b21 >= 0; --_0x391b21) _0x415f2a[_0x391b21] = _0xf628a1 % 256, _0xf628a1 = parseInt(_0xf628a1 / 256);
        let _0x2aedeb = null, _0x4c2586 = 16;
        const _0x425ed1 = new Uint8Array(_0x139400), _0x3dcf1f = [], _0x6ffd4a = [];
        _0x5c1992();
        for (let _0x51b62b = 0; _0x51b62b < _0x18dc89[_0x55a357([108, 101, 110, 103, 116, 104])]; _0x51b62b++) 16 === _0x4c2586 && (_0x2aedeb = _0x8bee49(_0x415f2a), _0x4c2586 = 0, _0x1d4922(_0x415f2a)), _0x18dc89[_0x51b62b] ^= _0x2aedeb[_0x4c2586++];
        return _0x18dc89;
        function _0x5bf08b(_0xfe9010) {
          const _0x17bf1a = [];
          for (let _0x91d90d = 0; _0x91d90d < _0xfe9010[_0x55a357([108, 101, 110, 103, 116, 104])]; _0x91d90d += 4) _0x17bf1a[_0x55a357([112, 117, 115, 104])](_0xfe9010[_0x91d90d] << 24 | _0xfe9010[_0x91d90d + 1] << 16 | _0xfe9010[_0x91d90d + 2] << 8 | _0xfe9010[_0x91d90d + 3]);
          return _0x17bf1a;
        }
        function _0x1d4922(_0x41735b) {
          for (let _0x4810a8 = 15; _0x4810a8 >= 0; _0x4810a8--) {
            if (255 !== _0x41735b[_0x4810a8]) {
              _0x41735b[_0x4810a8]++;
              break;
            }
            _0x41735b[_0x4810a8] = 0;
          }
        }
        function _0x8bee49(_0x2f05e9) {
          const _0x3283b7 = _0x3dcf1f[_0x55a357([108, 101, 110, 103, 116, 104])] - 1, _0x444396 = [0, 0, 0, 0];
          let t2 = _0x5bf08b(_0x2f05e9);
          for (let _0x51cb9b = 0; _0x51cb9b < 4; _0x51cb9b++) t2[_0x51cb9b] ^= _0x3dcf1f[0][_0x51cb9b];
          for (let _0x3ddf38 = 1; _0x3ddf38 < _0x3283b7; _0x3ddf38++) {
            for (let _0x52503a = 0; _0x52503a < 4; _0x52503a++) _0x444396[_0x52503a] = _0x58fcc9[_0x55a357([84, 49])][t2[_0x52503a] >> 24 & 255] ^ _0x58fcc9[_0x55a357([84, 50])][t2[(_0x52503a + 1) % 4] >> 16 & 255] ^ _0x58fcc9[_0x55a357([84, 51])][t2[(_0x52503a + 2) % 4] >> 8 & 255] ^ _0x58fcc9[_0x55a357([84, 52])][255 & t2[(_0x52503a + 3) % 4]] ^ _0x3dcf1f[_0x3ddf38][_0x52503a];
            t2 = _0x444396[_0x55a357([115, 108, 105, 99, 101])]();
          }
          const _0x4fd2c1 = new Uint8Array(16);
          let _0x453ccc;
          for (let _0x1af80d = 0; _0x1af80d < 4; _0x1af80d++) _0x453ccc = _0x3dcf1f[_0x3283b7][_0x1af80d], _0x4fd2c1[4 * _0x1af80d] = 255 & (_0x58fcc9[_0x55a357([83])][t2[_0x1af80d] >> 24 & 255] ^ _0x453ccc >> 24), _0x4fd2c1[4 * _0x1af80d + 1] = 255 & (_0x58fcc9[_0x55a357([83])][t2[(_0x1af80d + 1) % 4] >> 16 & 255] ^ _0x453ccc >> 16), _0x4fd2c1[4 * _0x1af80d + 2] = 255 & (_0x58fcc9[_0x55a357([83])][t2[(_0x1af80d + 2) % 4] >> 8 & 255] ^ _0x453ccc >> 8), _0x4fd2c1[4 * _0x1af80d + 3] = 255 & (_0x58fcc9[_0x55a357([83])][255 & t2[(_0x1af80d + 3) % 4]] ^ _0x453ccc);
          return _0x4fd2c1;
        }
        function _0x5c1992() {
          const _0x110033 = _0x58fcc9[_0x55a357([110, 117, 109, 98, 101, 114, 79, 102, 82, 111, 117, 110, 100, 115])][_0x425ed1[_0x55a357([108, 101, 110, 103, 116, 104])]];
          for (let _0x19b1b2 = 0; _0x19b1b2 <= _0x110033; _0x19b1b2++) _0x3dcf1f[_0x55a357([112, 117, 115, 104])]([0, 0, 0, 0]), _0x6ffd4a[_0x55a357([112, 117, 115, 104])]([0, 0, 0, 0]);
          const _0x10717b = 4 * (_0x110033 + 1), _0x2c466b = _0x425ed1[_0x55a357([108, 101, 110, 103, 116, 104])] / 4, _0x3d8151 = _0x5bf08b(_0x425ed1);
          let _0x52ab83;
          for (let _0x152237 = 0; _0x152237 < _0x2c466b; _0x152237++) _0x52ab83 = _0x152237 >> 2, _0x3dcf1f[_0x52ab83][_0x152237 % 4] = _0x3d8151[_0x152237], _0x6ffd4a[_0x110033 - _0x52ab83][_0x152237 % 4] = _0x3d8151[_0x152237];
          let _0x8f7bd5, _0x35220e = 0, t2 = _0x2c466b;
          for (; t2 < _0x10717b; ) {
            _0x8f7bd5 = _0x3d8151[_0x2c466b - 1], _0x3d8151[0] ^= _0x58fcc9[_0x55a357([83])][_0x8f7bd5 >> 16 & 255] << 24 ^ _0x58fcc9[_0x55a357([83])][_0x8f7bd5 >> 8 & 255] << 16 ^ _0x58fcc9[_0x55a357([83])][255 & _0x8f7bd5] << 8 ^ _0x58fcc9[_0x55a357([83])][_0x8f7bd5 >> 24 & 255] ^ _0x58fcc9[_0x55a357([114, 99, 111, 110])][_0x35220e] << 24, _0x35220e += 1;
            for (let _0x40da67 = 1; _0x40da67 < _0x2c466b / 2; _0x40da67++) _0x3d8151[_0x40da67] ^= _0x3d8151[_0x40da67 - 1];
            _0x8f7bd5 = _0x3d8151[_0x2c466b / 2 - 1], _0x3d8151[_0x2c466b / 2] ^= _0x58fcc9[_0x55a357([83])][255 & _0x8f7bd5] ^ _0x58fcc9[_0x55a357([83])][_0x8f7bd5 >> 8 & 255] << 8 ^ _0x58fcc9[_0x55a357([83])][_0x8f7bd5 >> 16 & 255] << 16 ^ _0x58fcc9[_0x55a357([83])][_0x8f7bd5 >> 24 & 255] << 24;
            for (let _0x23069f = _0x2c466b / 2 + 1; _0x23069f < _0x2c466b; _0x23069f++) _0x3d8151[_0x23069f] ^= _0x3d8151[_0x23069f - 1];
            let _0x1c4181, _0x4bcf01, _0x55b72e = 0;
            for (; _0x55b72e < _0x2c466b && t2 < _0x10717b; ) _0x1c4181 = t2 >> 2, _0x4bcf01 = t2 % 4, _0x3dcf1f[_0x1c4181][_0x4bcf01] = _0x3d8151[_0x55b72e], _0x6ffd4a[_0x110033 - _0x1c4181][_0x4bcf01] = _0x3d8151[_0x55b72e++], t2++;
          }
          for (let _0x38cb9f = 1; _0x38cb9f < _0x110033; _0x38cb9f++) for (let _0x3a9f96 = 0; _0x3a9f96 < 4; _0x3a9f96++) _0x8f7bd5 = _0x6ffd4a[_0x38cb9f][_0x3a9f96], _0x6ffd4a[_0x38cb9f][_0x3a9f96] = _0x58fcc9[_0x55a357([85, 49])][_0x8f7bd5 >> 24 & 255] ^ _0x58fcc9[_0x55a357([85, 50])][_0x8f7bd5 >> 16 & 255] ^ _0x58fcc9[_0x55a357([85, 51])][_0x8f7bd5 >> 8 & 255] ^ _0x58fcc9[_0x55a357([85, 52])][255 & _0x8f7bd5];
        }
      }
      function _0x55a357(_0xb5ec09) {
        return _0xb5ec09["map"]((_0xa7fc71) => String["fromCharCode"](_0xa7fc71))["join"]("");
      }
      ((_0x5e8360) => {
        function _0x1ee8e7() {
          const _0x571c0a = [{ [_0x55a357([105, 100])]: 1, [_0x55a357([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x55a357([67, 111, 109, 109, 101, 110, 116, 115]), [_0x55a357([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x55a357([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]), [_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x55a357([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x55a357([104, 97, 110, 100, 108, 101, 114])]: _0x55a357([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x55a357([99, 104, 101, 99, 107, 65, 108, 115, 111])]: [{ [_0x55a357([105, 100])]: 2, [_0x55a357([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x55a357([84, 114, 97, 99, 107, 32, 67, 104, 97, 110, 103, 101, 115]), [_0x55a357([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x55a357([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103]), [_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x55a357([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x55a357([104, 97, 110, 100, 108, 101, 114])]: _0x55a357([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115]), [_0x55a357([111, 112, 116, 105, 111, 110, 115])]: { [_0x55a357([97, 105, 119, 115, 103, 105, 99])]: true, [_0x55a357([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x55a357([97, 105, 114, 118, 105, 105, 108])]: true } }], [_0x55a357([111, 112, 116, 105, 111, 110, 115])]: { [_0x55a357([97, 105, 119, 115, 103, 105, 99])]: true, [_0x55a357([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x55a357([97, 105, 114, 118, 105, 105, 108])]: true } }, { [_0x55a357([105, 100])]: 3, [_0x55a357([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x55a357([80, 97, 103, 105, 110, 97, 116, 105, 111, 110]), [_0x55a357([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x55a357([80, 97, 103, 105, 110, 97, 116, 105, 111, 110, 76, 111, 111, 107, 117, 112]), [_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x55a357([112, 97, 103, 105, 110, 97, 116, 105, 111, 110, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x55a357([104, 97, 110, 100, 108, 101, 114])]: _0x55a357([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x55a357([105, 100])]: 4, [_0x55a357([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x55a357([82, 101, 118, 105, 115, 105, 111, 110, 32, 72, 105, 115, 116, 111, 114, 121]), [_0x55a357([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x55a357([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]), [_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x55a357([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x55a357([104, 97, 110, 100, 108, 101, 114])]: _0x55a357([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 82, 101, 118, 105, 115, 105, 111, 110, 72, 105, 115, 116, 111, 114, 121]), [_0x55a357([111, 112, 116, 105, 111, 110, 115])]: { [_0x55a357([97, 105, 119, 115, 103, 105, 99])]: true, [_0x55a357([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x55a357([97, 105, 114, 118, 105, 105, 108])]: true } }, { [_0x55a357([105, 100])]: 5, [_0x55a357([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x55a357([68, 111, 99, 117, 109, 101, 110, 116, 32, 79, 117, 116, 108, 105, 110, 101]), [_0x55a357([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x55a357([68, 111, 99, 117, 109, 101, 110, 116, 79, 117, 116, 108, 105, 110, 101, 85, 73]), [_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x55a357([100, 111, 99, 117, 109, 101, 110, 116, 79, 117, 116, 108, 105, 110, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x55a357([104, 97, 110, 100, 108, 101, 114])]: _0x55a357([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x55a357([111, 112, 116, 105, 111, 110, 115])]: { [_0x55a357([102, 103, 105])]: [12] } }, { [_0x55a357([105, 100])]: 6, [_0x55a357([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x55a357([70, 111, 114, 109, 97, 116, 32, 80, 97, 105, 110, 116, 101, 114]), [_0x55a357([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x55a357([70, 111, 114, 109, 97, 116, 80, 97, 105, 110, 116, 101, 114, 85, 73]), [_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x55a357([102, 111, 114, 109, 97, 116, 80, 97, 105, 110, 116, 101, 114, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x55a357([104, 97, 110, 100, 108, 101, 114])]: _0x55a357([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x55a357([111, 112, 116, 105, 111, 110, 115])]: { [_0x55a357([102, 103, 105])]: [12] } }, { [_0x55a357([105, 100])]: 7, [_0x55a357([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x55a357([83, 108, 97, 115, 104, 32, 67, 111, 109, 109, 97, 110, 100]), [_0x55a357([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x55a357([83, 108, 97, 115, 104, 67, 111, 109, 109, 97, 110, 100, 85, 73]), [_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x55a357([115, 108, 97, 115, 104, 67, 111, 109, 109, 97, 110, 100, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x55a357([104, 97, 110, 100, 108, 101, 114])]: _0x55a357([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x55a357([111, 112, 116, 105, 111, 110, 115])]: { [_0x55a357([102, 103, 105])]: [12] } }, { [_0x55a357([105, 100])]: 8, [_0x55a357([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x55a357([84, 97, 98, 108, 101, 32, 111, 102, 32, 67, 111, 110, 116, 101, 110, 116, 115]), [_0x55a357([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x55a357([84, 97, 98, 108, 101, 79, 102, 67, 111, 110, 116, 101, 110, 116, 115, 69, 100, 105, 116, 105, 110, 103]), [_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x55a357([116, 97, 98, 108, 101, 79, 102, 67, 111, 110, 116, 101, 110, 116, 115, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x55a357([104, 97, 110, 100, 108, 101, 114])]: _0x55a357([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x55a357([111, 112, 116, 105, 111, 110, 115])]: { [_0x55a357([102, 103, 105])]: [12] } }, { [_0x55a357([105, 100])]: 9, [_0x55a357([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x55a357([84, 101, 109, 112, 108, 97, 116, 101]), [_0x55a357([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x55a357([84, 101, 109, 112, 108, 97, 116, 101, 85, 73]), [_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x55a357([116, 101, 109, 112, 108, 97, 116, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x55a357([104, 97, 110, 100, 108, 101, 114])]: _0x55a357([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x55a357([111, 112, 116, 105, 111, 110, 115])]: { [_0x55a357([102, 103, 105])]: [12, 14] } }, { [_0x55a357([105, 100])]: 10, [_0x55a357([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x55a357([80, 97, 115, 116, 101, 32, 102, 114, 111, 109, 32, 79, 102, 102, 105, 99, 101, 32, 69, 110, 104, 97, 110, 99, 101, 100]), [_0x55a357([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x55a357([80, 97, 115, 116, 101, 70, 114, 111, 109, 79, 102, 102, 105, 99, 101, 69, 110, 104, 97, 110, 99, 101, 100, 73, 110, 108, 105, 110, 101, 114]), [_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x55a357([112, 97, 115, 116, 101, 70, 114, 111, 109, 79, 102, 102, 105, 99, 101, 69, 110, 104, 97, 110, 99, 101, 100, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x55a357([104, 97, 110, 100, 108, 101, 114])]: _0x55a357([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x55a357([111, 112, 116, 105, 111, 110, 115])]: { [_0x55a357([102, 103, 105])]: [12] } }, { [_0x55a357([105, 100])]: 11, [_0x55a357([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x55a357([65, 73, 32, 65, 115, 115, 105, 115, 116, 97, 110, 116]), [_0x55a357([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x55a357([65, 73, 65, 115, 115, 105, 115, 116, 97, 110, 116, 85, 73]), [_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x55a357([97, 105, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x55a357([104, 97, 110, 100, 108, 101, 114])]: _0x55a357([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x55a357([105, 100])]: 12, [_0x55a357([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x55a357([80, 114, 111, 100, 117, 99, 116, 105, 118, 105, 116, 121, 32, 112, 97, 99, 107]) }, { [_0x55a357([105, 100])]: 13, [_0x55a357([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x55a357([67, 97, 115, 101, 32, 67, 104, 97, 110, 103, 101]), [_0x55a357([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x55a357([67, 97, 115, 101, 67, 104, 97, 110, 103, 101, 85, 73]), [_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x55a357([99, 97, 115, 101, 67, 104, 97, 110, 103, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x55a357([104, 97, 110, 100, 108, 101, 114])]: _0x55a357([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x55a357([111, 112, 116, 105, 111, 110, 115])]: { [_0x55a357([102, 103, 105])]: [12] } }, { [_0x55a357([105, 100])]: 14, [_0x55a357([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x55a357([68, 114, 117, 112, 97, 108, 32, 112, 97, 99, 107]), [_0x55a357([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114])]: _0x55a357([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114, 70, 111, 114, 68, 114, 117, 112, 97, 108]) }, { [_0x55a357([105, 100])]: 15, [_0x55a357([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x55a357([77, 117, 108, 116, 105, 32, 76, 101, 118, 101, 108, 32, 76, 105, 115, 116]), [_0x55a357([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x55a357([77, 117, 108, 116, 105, 76, 101, 118, 101, 108, 76, 105, 115, 116, 69, 100, 105, 116, 105, 110, 103]), [_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x55a357([109, 117, 108, 116, 105, 76, 101, 118, 101, 108, 76, 105, 115, 116, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x55a357([104, 97, 110, 100, 108, 101, 114])]: _0x55a357([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x55a357([105, 100])]: 16, [_0x55a357([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x55a357([77, 101, 114, 103, 101, 32, 70, 105, 101, 108, 100, 115]), [_0x55a357([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x55a357([77, 101, 114, 103, 101, 70, 105, 101, 108, 100, 115, 85, 73]), [_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x55a357([109, 101, 114, 103, 101, 70, 105, 101, 108, 100, 115, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x55a357([104, 97, 110, 100, 108, 101, 114])]: _0x55a357([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x55a357([111, 112, 116, 105, 111, 110, 115])]: { [_0x55a357([102, 103, 105])]: [12] } }];
          return _0x50afd7(_0x571c0a), _0x571c0a;
          function _0x2c35e3(_0x2e7942) {
            return 1 << _0x2e7942 - 1;
          }
          function _0x50afd7(_0x1ec7da) {
            _0x1ec7da[_0x55a357([102, 111, 114, 69, 97, 99, 104])]((_0x4c9035) => {
              _0x4c9035[_0x55a357([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])] = _0x2c35e3(_0x4c9035[_0x55a357([105, 100])]), _0x239355(_0x4c9035) && _0x4c9035[_0x55a357([99, 104, 101, 99, 107, 65, 108, 115, 111])] && _0x50afd7(_0x4c9035[_0x55a357([99, 104, 101, 99, 107, 65, 108, 115, 111])]);
            });
          }
        }
        function _0x239355(_0x5c4b7d) {
          return _0x55a357([112, 108, 117, 103, 105, 110, 78, 97, 109, 101]) in _0x5c4b7d;
        }
        const _0x3137c2 = [1, 85, 78, 115, 198, 255, 50, 112, 83, 87, 161], _0x431463 = [127, 34, 6, 211, 167, 86, 146, 199, 132, 160, 18];
        function _0x438aeb(_0x5de2e3) {
          const _0x4a8409 = [29, 221, 175, 90, 231, 133, 239, 240, 75, 180];
          return _0x175bc2(_0x5de2e3, new Uint8Array([..._0x3137c2, ..._0x4a8409, ..._0x431463]));
        }
        function _0x175bc2(_0x1e10a9, _0x59fe89) {
          const _0xc68fd7 = _0x5b1124(_0x1e10a9), _0x5d9c7f = Array[_0x55a357([102, 114, 111, 109])](_0x39d9eb(_0xc68fd7)), _0x1e0caf = _0x5d9c7f[_0x55a357([112, 111, 112])](), _0x35a131 = _0x5d9c7f[_0x55a357([112, 111, 112])]();
          return _0x456676(_0x47f87c(_0x5d9c7f, _0x59fe89, _0x35a131 + 256 * _0x1e0caf));
        }
        function _0x5b1124(_0x33d047) {
          const _0x12b210 = atob(_0x33d047), [_0xa9eefe, _0x2c4e00] = _0x12b210[_0x55a357([115, 112, 108, 105, 116])](_0x55a357([45]));
          try {
            if (atob(_0x2c4e00)) return atob(_0xa9eefe);
          } catch (_0x1ef349) {
          }
          return _0x12b210;
        }
        function _0x33545f(_0x15d65c) {
          try {
            const _0x41e159 = _0x438aeb(_0x15d65c), _0x496385 = JSON[_0x55a357([112, 97, 114, 115, 101])](_0x41e159), _0x3ac479 = parseInt(_0x496385[_0x55a357([49])]), _0x1f2329 = _0x496385[_0x55a357([50])] || "", _0x4b9831 = parseInt(_0x496385[_0x55a357([51])]), _0x3203bc = parseInt(_0x496385[_0x55a357([52])]) || 0, _0x55d48f = parseInt(_0x496385[_0x55a357([53])]) || 0;
            return { [_0x55a357([112, 114, 111, 100, 117, 99, 116, 78, 97, 109, 101])]: _0x1f2329, [_0x55a357([97, 108, 108, 111, 119, 101, 100, 80, 108, 117, 103, 105, 110, 115])]: _0x3203bc, [_0x55a357([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])]: _0x3ac479, [_0x55a357([105, 115, 84, 114, 105, 97, 108])]: _0x4b9831, [_0x55a357([105, 115, 73, 110, 116, 101, 114, 110, 97, 108])]: _0x55d48f };
          } catch (_0x3ac8d2) {
            return null;
          }
        }
        const _0x662967 = _0x1ee8e7(), _0x423aa1 = { [_0x55a357([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101])]: _0x573c1f, [_0x55a357([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115])]: _0x3d0fc3, [_0x55a357([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 82, 101, 118, 105, 115, 105, 111, 110, 72, 105, 115, 116, 111, 114, 121])]: _0x1a26d9 }, _0x3ef053 = _0x5e8360[_0x55a357([99, 111, 110, 115, 116, 114, 117, 99, 116, 111, 114])][_0x55a357([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])], _0x1594c3 = _0x55a357([99, 111, 110, 116, 101, 120, 116]) in _0x5e8360 ? _0x5e8360["context"] : _0x5e8360["editor"], _0x130963 = _0x55a357([52, 48, 52, 56, 50, 50, 49, 50]), _0x5d6611 = _0x55a357([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]), _0x195a52 = _0x1594c3["config"]["get"](_0x55a357([108, 105, 99, 101, 110, 115, 101, 75, 101, 121])), _0x329876 = _0x662967[_0x55a357([102, 105, 108, 116, 101, 114])](_0x239355)[_0x55a357([102, 105, 110, 100])]((_0x52ae11) => _0x52ae11[_0x55a357([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])] === _0x3ef053);
        function _0x453544(_0x4d501d, _0x1714a2) {
          _0x423aa1[_0x1714a2[_0x55a357([104, 97, 110, 100, 108, 101, 114])]](_0x4d501d, _0x1714a2), _0x1714a2[_0x55a357([99, 104, 101, 99, 107, 65, 108, 115, 111])] && _0x1714a2[_0x55a357([99, 104, 101, 99, 107, 65, 108, 115, 111])][_0x55a357([102, 105, 108, 116, 101, 114])]((_0x102e09) => _0x5cf3e2(_0x1594c3, _0x102e09[_0x55a357([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]))[_0x55a357([102, 111, 114, 69, 97, 99, 104])]((_0x53a446) => _0x453544(_0x4d501d, _0x53a446));
        }
        function _0x573c1f(_0x175df6, _0x103cce) {
          _0x5e35e4(_0x1793a4(_0x175df6, _0x103cce), _0x103cce);
        }
        function _0x3d0fc3(_0x3a8055, _0x5cb0c9) {
          function _0x587949(_0x38c220, _0x1c7dae) {
            try {
              if (_0x5cf3e2(_0x1594c3, _0x55a357([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103])) && _0x38c220) {
                const _0x5248c0 = _0x14c4f4(_0x1594c3, _0x55a357([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103]))[_0x55a357([95, 101, 120, 101, 99, 117, 116, 101, 83, 117, 103, 103, 101, 115, 116, 105, 111, 110])];
                if (parseInt(_0x5248c0) / 2 > _0x38c220[_0x55a357([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])]) return _0x37e22f(_0x1c7dae[_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x55a357([73, 110, 118, 97, 108, 105, 100]));
              }
              return _0x1793a4(_0x38c220, _0x1c7dae);
            } catch (_0x74a188) {
              return _0x37e22f(_0x1c7dae[_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x55a357([73, 110, 118, 97, 108, 105, 100]));
            }
          }
          _0x5e35e4(_0x587949(_0x3a8055, _0x5cb0c9), _0x5cb0c9);
        }
        function _0x1a26d9(_0x212c03, _0xf9bd66) {
          const _0x57cc3d = _0x431463[0] * _0x3137c2[1], _0x339ec4 = _0x431463[0] * _0x3137c2[2], _0x503df1 = _0x431463[2] * _0x3137c2[2];
          _0x5cf3e2(_0x1594c3, _0x55a357([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121])) && _0x14c4f4(_0x1594c3, _0x55a357([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121]))[_0x55a357([115, 116, 97, 116, 101])] == _0x55a357([99, 111, 110, 110, 101, 99, 116, 101, 100]) && (window[_0x78351()] = _0x503df1);
          function _0x5e230a(_0x5a8008, _0x519ce6) {
            try {
              return _0x14d8c0() ? _0x37e22f(_0x519ce6[_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x55a357([86, 97, 108, 105, 100])) : _0x1793a4(_0x5a8008, _0x519ce6);
            } catch (_0x9b2540) {
              return _0x37e22f(_0x519ce6[_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x55a357([73, 110, 118, 97, 108, 105, 100]));
            }
          }
          function _0x2790f9(_0x106794, _0x32df1a) {
            const _0x1d572a = 7;
            if (_0x106794 == _0x32df1a[_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x55a357([73, 110, 118, 97, 108, 105, 100])) _0x46ca68();
            else {
              if (_0x106794 == _0x32df1a[_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x55a357([84, 114, 105, 97, 108])) {
                const _0x9e0304 = _0x5df9cf();
                _0x9e0304 && _0x30c15b(_0x9e0304, _0x32df1a[_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                const _0x5af5fd = _0x451cf7();
                window[_0x55a357([115, 101, 116, 84, 105, 109, 101, 111, 117, 116])](() => {
                  _0x30c15b(_0x55a357([116, 105, 109, 101]), _0x32df1a[_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                }, _0x5af5fd);
                const _0x4deede = _0x14c4f4(_0x1594c3, _0x55a357([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x55a357([95, 114, 101, 118, 105, 115, 105, 111, 110, 115])];
                _0x4deede[_0x55a357([108, 101, 110, 103, 116, 104])] >= _0x1d572a ? _0x30c15b(_0x55a357([114, 101, 118, 105, 115, 105, 111, 110, 115]), _0x32df1a[_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]) : _0x4deede["on"](_0x55a357([97, 100, 100]), () => {
                  _0x4deede[_0x55a357([108, 101, 110, 103, 116, 104])] >= _0x1d572a && _0x30c15b(_0x55a357([114, 101, 118, 105, 115, 105, 111, 110, 115]), _0x32df1a[_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                });
              }
            }
          }
          function _0x5df9cf() {
            if (!_0x5cf3e2(_0x1594c3, _0x55a357([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) return false;
            for (const _0x9aab10 in window) if (Number["isNaN"](Number(_0x9aab10))) {
              if (window[_0x9aab10] === _0x57cc3d) return _0x55a357([116, 105, 109, 101]);
              if (window[_0x9aab10] === _0x339ec4) return _0x55a357([114, 101, 118, 105, 115, 105, 111, 110, 115]);
            }
            return false;
          }
          function _0x14d8c0() {
            if (!_0x5cf3e2(_0x1594c3, _0x55a357([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) return false;
            for (const _0xd2d43c in window) if (Number["isNaN"](Number(_0xd2d43c)) && window[_0xd2d43c] === _0x503df1) return true;
            return false;
          }
          function _0x30c15b(_0x3f3a52, _0x32bd05) {
            _0x46ca68(), _0x37e22f(_0x32bd05 + _0x55a357([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58]) + _0x3f3a52), window[_0x78351()] = _0x3f3a52 === _0x55a357([116, 105, 109, 101]) ? _0x57cc3d : _0x339ec4;
          }
          function _0x451cf7() {
            let _0x40ebf5 = _0x431463[6] * _0x3137c2[8] * _0x3137c2[6];
            return _0x5cf3e2(_0x1594c3, _0x55a357([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114])) && (_0x40ebf5 /= 10), _0x40ebf5;
          }
          function _0x46ca68() {
            const _0x2aface = _0x1594c3;
            function _0x27b076() {
              _0x5cf3e2(_0x2aface, _0x55a357([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114])) && (_0x14c4f4(_0x2aface, _0x55a357([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x55a357([117, 110, 98, 105, 110, 100])](_0x55a357([105, 115, 69, 110, 97, 98, 108, 101, 100])), _0x14c4f4(_0x2aface, _0x55a357([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x55a357([105, 115, 69, 110, 97, 98, 108, 101, 100])] = false, _0x14c4f4(_0x2aface, _0x55a357([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x55a357([117, 112, 100, 97, 116, 101])] = _0x30d676, _0x14c4f4(_0x2aface, _0x55a357([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x55a357([115, 97, 118, 101, 82, 101, 118, 105, 115, 105, 111, 110])] = _0x30d676, _0x2aface[_0x55a357([109, 111, 100, 101, 108])][_0x55a357([99, 104, 97, 110, 103, 101])] = _0x30d676, _0x2aface[_0x55a357([109, 111, 100, 101, 108])][_0x55a357([101, 110, 113, 117, 101, 117, 101, 67, 104, 97, 110, 103, 101])] = _0x30d676, _0x2aface[_0x55a357([101, 110, 97, 98, 108, 101, 82, 101, 97, 100, 79, 110, 108, 121, 77, 111, 100, 101])](_0x55a357([109, 111, 100, 101, 108]))), _0x5cf3e2(_0x2aface, _0x55a357([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114])) && (_0x14c4f4(_0x2aface, _0x55a357([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x55a357([117, 110, 98, 105, 110, 100])](_0x55a357([105, 115, 69, 110, 97, 98, 108, 101, 100])), _0x14c4f4(_0x2aface, _0x55a357([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x55a357([105, 115, 69, 110, 97, 98, 108, 101, 100])] = false, _0x14c4f4(_0x2aface, _0x55a357([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x55a357([99, 111, 109, 112, 97, 114, 101])] = _0x30d676, _0x14c4f4(_0x2aface, _0x55a357([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x55a357([95, 103, 101, 116, 68, 105, 102, 102])] = _0x30d676);
            }
            _0x2aface[_0x55a357([115, 116, 97, 116, 101])] == _0x55a357([114, 101, 97, 100, 121]) ? _0x27b076() : _0x2aface[_0x55a357([111, 110, 99, 101])](_0x55a357([114, 101, 97, 100, 121]), () => {
              if (_0x5cf3e2(_0x2aface, _0x55a357([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114])) && _0x27b076(), _0x5cf3e2(_0x2aface, _0x55a357([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) {
                const _0x407225 = _0x14c4f4(_0x2aface, _0x55a357([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121])), _0x1f9582 = _0x407225["getRevision"](0), _0x552b50 = _0x407225["getEarlierVisibleRevision"](_0x1f9582[_0x55a357([105, 100])]);
                _0x14c4f4(_0x2aface, _0x55a357([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x55a357([99, 111, 109, 112, 97, 114, 101])](_0x1f9582[_0x55a357([105, 100])], _0x552b50 ? _0x552b50[_0x55a357([105, 100])] : null, 1)["then"](() => _0x27b076());
              }
            });
          }
          _0x2790f9(_0x5e230a(_0x212c03, _0xf9bd66), _0xf9bd66);
        }
        function _0x1793a4(_0x824913, _0x4086e7) {
          try {
            return _0x5d3e34(_0x4086e7) ? _0x37e22f(_0x4086e7[_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x55a357([86, 97, 108, 105, 100])) : _0x824913 && _0x33579f(_0x824913[_0x55a357([97, 108, 108, 111, 119, 101, 100, 80, 108, 117, 103, 105, 110, 115])], _0x4086e7) ? _0x824913[_0x55a357([105, 115, 73, 110, 116, 101, 114, 110, 97, 108])] && !window[_0x55a357([111, 112, 101, 110])][_0x55a357([99, 108, 111, 115, 101, 100])] || parseInt(_0x130963) / 2 > _0x824913[_0x55a357([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])] ? _0x37e22f(_0x4086e7[_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x55a357([73, 110, 118, 97, 108, 105, 100])) : _0x824913[_0x55a357([105, 115, 84, 114, 105, 97, 108])] ? _0x37e22f(_0x4086e7[_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x55a357([84, 114, 105, 97, 108])) : _0x37e22f(_0x4086e7[_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x55a357([86, 97, 108, 105, 100])) : _0x37e22f(_0x4086e7[_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x55a357([73, 110, 118, 97, 108, 105, 100]));
          } catch (_0x4c4ba8) {
            return _0x37e22f(_0x4086e7[_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x55a357([73, 110, 118, 97, 108, 105, 100]));
          }
        }
        function _0x5e35e4(_0xa051f2, _0x3a8479) {
          if (_0x1594c3 instanceof Context) {
            const _0x120052 = _0x1594c3;
            _0xa051f2 == _0x3a8479[_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x55a357([73, 110, 118, 97, 108, 105, 100]) ? _0x53eb3f(_0x120052) : _0xa051f2 == _0x3a8479[_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x55a357([84, 114, 105, 97, 108]) && window[_0x55a357([115, 101, 116, 84, 105, 109, 101, 111, 117, 116])](() => {
              _0x53eb3f(_0x120052), _0x37e22f(_0x3a8479[_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x55a357([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 116, 105, 109, 101]));
            }, _0x431463[6] * _0x3137c2[8] * _0x3137c2[6]), _0x120052[_0x55a357([101, 100, 105, 116, 111, 114, 115])][_0x55a357([111, 110])](_0x55a357([97, 100, 100]), (_0x52f6c7, _0x140ef9) => {
              _0xa051f2 != _0x3a8479[_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x55a357([73, 110, 118, 97, 108, 105, 100]) && _0xa051f2 != _0x3a8479[_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x55a357([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 116, 105, 109, 101]) && _0xa051f2 != _0x3a8479[_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x55a357([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 111, 112, 101, 114, 97, 116, 105, 111, 110, 115]) || _0x90e84(_0x140ef9);
            });
          } else {
            const _0x1578f8 = _0x1594c3;
            _0xa051f2 == _0x3a8479[_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x55a357([73, 110, 118, 97, 108, 105, 100]) ? _0x90e84(_0x1578f8) : _0xa051f2 == _0x3a8479[_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x55a357([84, 114, 105, 97, 108]) && _0x1578f8[_0x55a357([111, 110])](_0x55a357([114, 101, 97, 100, 121]), () => {
              let _0x3995ab = 0;
              _0x1578f8[_0x55a357([109, 111, 100, 101, 108])][_0x55a357([111, 110])](_0x55a357([97, 112, 112, 108, 121, 79, 112, 101, 114, 97, 116, 105, 111, 110]), (_0x53e05f, _0x2eff9d) => {
                _0x2eff9d[0][_0x55a357([105, 115, 68, 111, 99, 117, 109, 101, 110, 116, 79, 112, 101, 114, 97, 116, 105, 111, 110])] && _0x3995ab++, 504 === _0x3995ab && (_0x90e84(_0x1578f8), _0x37e22f(_0x3a8479[_0x55a357([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x55a357([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 111, 112, 101, 114, 97, 116, 105, 111, 110, 115])), _0x53e05f[_0x55a357([111, 102, 102])]());
              }, { "priority": _0x55a357([104, 105, 103, 104, 101, 115, 116]) });
            });
          }
        }
        function _0x37e22f(_0x3d4088) {
          const _0x1b7408 = _0x78351();
          return _0x1594c3[_0x1b7408] = _0x3d4088, _0x3d4088;
        }
        function _0x78351() {
          const _0x51867e = String(window[_0x55a357([112, 101, 114, 102, 111, 114, 109, 97, 110, 99, 101])][_0x55a357([110, 111, 119])]())[_0x55a357([114, 101, 112, 108, 97, 99, 101])](_0x55a357([46]), "");
          let _0x3a2993 = "";
          for (let _0x298ab9 = 0; _0x298ab9 < _0x51867e[_0x55a357([108, 101, 110, 103, 116, 104])]; _0x298ab9 += 2) {
            let _0x5ede2f = parseInt(_0x51867e[_0x55a357([115, 117, 98, 115, 116, 114, 105, 110, 103])](_0x298ab9, _0x298ab9 + 2));
            _0x5ede2f >= _0x5d6611[_0x55a357([108, 101, 110, 103, 116, 104])] && (_0x5ede2f -= _0x5d6611[_0x55a357([108, 101, 110, 103, 116, 104])]), _0x3a2993 += _0x5d6611[_0x5ede2f];
          }
          return _0x3a2993;
        }
        function _0x53eb3f(_0x535448) {
          for (const _0x46e5cb of _0x535448[_0x55a357([101, 100, 105, 116, 111, 114, 115])]) _0x90e84(_0x46e5cb);
          _0x14c4f4(_0x535448, _0x55a357([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x55a357([115, 119, 105, 116, 99, 104, 82, 101, 97, 100, 79, 110, 108, 121])](true), _0x14c4f4(_0x535448, _0x55a357([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x55a357([115, 119, 105, 116, 99, 104, 82, 101, 97, 100, 79, 110, 108, 121])] = _0x30d676;
        }
        function _0x90e84(_0xb2672d) {
          function _0x5588d9() {
            _0xb2672d[_0x55a357([109, 111, 100, 101, 108])][_0x55a357([99, 104, 97, 110, 103, 101])] = _0x30d676, _0xb2672d[_0x55a357([109, 111, 100, 101, 108])][_0x55a357([101, 110, 113, 117, 101, 117, 101, 67, 104, 97, 110, 103, 101])] = _0x30d676, _0xb2672d[_0x55a357([101, 110, 97, 98, 108, 101, 82, 101, 97, 100, 79, 110, 108, 121, 77, 111, 100, 101])](_0x55a357([109, 111, 100, 101, 108]));
          }
          _0xb2672d[_0x55a357([115, 116, 97, 116, 101])] == _0x55a357([114, 101, 97, 100, 121]) ? _0x5588d9() : _0xb2672d[_0x55a357([111, 110, 99, 101])](_0x55a357([114, 101, 97, 100, 121]), () => _0x5588d9());
        }
        function _0x30d676() {
          return null;
        }
        function _0x33579f(_0x214266, _0x247e5f) {
          const _0x2bb979 = !!(_0x214266 & _0x247e5f[_0x55a357([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])]), _0x33a7aa = _0x2d2ba9(_0x214266, _0x247e5f);
          return _0x2bb979 || _0x33a7aa;
        }
        function _0x2d2ba9(_0x16a93a, _0x3fa858) {
          const _0x342931 = (_0x3fa858[_0x55a357([111, 112, 116, 105, 111, 110, 115])] || {})[_0x55a357([102, 103, 105])] || null;
          return !!_0x342931 && _0x662967[_0x55a357([102, 105, 108, 116, 101, 114])]((_0x577df8) => _0x342931[_0x55a357([105, 110, 99, 108, 117, 100, 101, 115])](_0x577df8[_0x55a357([105, 100])]))[_0x55a357([102, 105, 108, 116, 101, 114])]((_0x33a9ef) => !_0x3a6cfe(_0x33a9ef))[_0x55a357([115, 111, 109, 101])]((_0x3ab07e) => !!(_0x16a93a & _0x3ab07e[_0x55a357([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])]));
        }
        function _0x3a6cfe(_0x30c05b) {
          const _0x318cc1 = { [_0x55a357([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114, 70, 111, 114, 68, 114, 117, 112, 97, 108])]: _0x5e037e };
          return !!_0x30c05b["forbiddenHandler"] && _0x318cc1[_0x30c05b["forbiddenHandler"]]();
        }
        function _0x5e037e() {
          return !window[_0x55a357([68, 114, 117, 112, 97, 108])] || !_0x5cf3e2(_0x1594c3, _0x55a357([100, 114, 117, 112, 97, 108, 80, 111, 119, 101, 114, 101, 100, 66, 121]));
        }
        function _0x5d3e34(_0x55f5d9) {
          if (!_0x5cf3e2(_0x1594c3, _0x55f5d9[_0x55a357([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])])) return true;
          const _0x33958b = _0x55f5d9[_0x55a357([111, 112, 116, 105, 111, 110, 115])] || {}, _0x31217c = _0x33958b[_0x55a357([97, 105, 119, 115, 103, 105, 99])] || false, _0x3ec860 = _0x33958b[_0x55a357([97, 105, 116, 99, 100, 103, 105, 108])] || false, _0x4fdef5 = _0x33958b[_0x55a357([97, 105, 114, 118, 105, 105, 108])] || false;
          if (_0x5cf3e2(_0x1594c3, _0x55a357([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121])) && _0x14c4f4(_0x1594c3, _0x55a357([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121]))[_0x55a357([115, 116, 97, 116, 101])] == _0x55a357([99, 111, 110, 110, 101, 99, 116, 101, 100]) && _0x31217c) return true;
          if (_0x5cf3e2(_0x1594c3, _0x55a357([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 68, 97, 116, 97, 71, 101, 116, 116, 101, 114])) && _0x14c4f4(_0x1594c3, _0x55a357([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 68, 97, 116, 97, 71, 101, 116, 116, 101, 114]))[_0x55a357([114, 101, 115, 117, 108, 116])] == _0x55a357([101, 110, 100]) && _0x3ec860) return true;
          return !(!_0x5cf3e2(_0x1594c3, _0x55a357([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114, 73, 110, 116, 101, 103, 114, 97, 116, 105, 111, 110])) || _0x14c4f4(_0x1594c3, _0x55a357([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114, 73, 110, 116, 101, 103, 114, 97, 116, 105, 111, 110]))[_0x55a357([114, 101, 115, 117, 108, 116])] != _0x55a357([101, 110, 100]) || !_0x4fdef5);
        }
        function _0x5cf3e2(_0x4fac49, _0x22ed12) {
          return _0x4fac49[_0x55a357([112, 108, 117, 103, 105, 110, 115])][_0x55a357([104, 97, 115])](_0x22ed12);
        }
        function _0x14c4f4(_0x14236d, _0x40c4f5) {
          return _0x14236d[_0x55a357([112, 108, 117, 103, 105, 110, 115])][_0x55a357([103, 101, 116])](_0x40c4f5);
        }
        function _0x456676(_0x352bf6) {
          let _0x4b3789 = "";
          for (const _0x1f23f5 of _0x352bf6) _0x4b3789 += String[_0x55a357([102, 114, 111, 109, 67, 104, 97, 114, 67, 111, 100, 101])](_0x1f23f5);
          return _0x4b3789;
        }
        function _0x39d9eb(_0x34a5f5) {
          const _0x1e9a19 = new Uint8Array(_0x34a5f5[_0x55a357([108, 101, 110, 103, 116, 104])]);
          for (let _0x168e20 = 0; _0x168e20 < _0x34a5f5[_0x55a357([108, 101, 110, 103, 116, 104])]; _0x168e20++) _0x1e9a19[_0x168e20] = _0x34a5f5[_0x55a357([99, 104, 97, 114, 67, 111, 100, 101, 65, 116])](_0x168e20);
          return _0x1e9a19;
        }
        _0x329876 && _0x453544(_0x33545f(_0x195a52), _0x329876);
      })(_0x59338d);
    }(this);
  }
  ["destroy"]() {
    super["destroy"](), this["view"]["destroy"](), this["_updateActiveDefinitionFromViewportThrottled"]["cancel"]();
  }
  ["_handleOutlineChange"](_0x57fadb, { outlineDefinitions: _0x560431, outlineChanges: _0x5185a }) {
    this["_currentOutlineDefinitions"] = _0x560431, this["view"]["sync"](_0x5185a);
  }
  ["_setActiveViewItem"](_0x23cb94) {
    this["_currentOutlineDefinitions"]["length"] && this["_currentOutlineDefinitions"][_0x23cb94] && (this["view"]["activeItemIndex"] = _0x23cb94);
  }
  ["_handleItemSelected"](_0x41868a) {
    const _0x36f822 = this["_currentOutlineDefinitions"][_0x41868a]["modelElement"];
    this["editor"]["model"]["change"]((_0x5d0d31) => {
      _0x5d0d31["setSelection"](_0x36f822, 0);
    }), this["editor"]["editing"]["view"]["scrollToTheSelection"]({ "alignToTop": true, "forceScroll": true }), this["editor"]["editing"]["view"]["focus"](), this["_setActiveViewItem"](_0x41868a);
  }
  ["_updateActiveDefinitionOnViewportChange"]() {
    const _0xbfee83 = this["editor"];
    let _0x5dd0e0;
    for (const _0x5a6f5d of _0xbfee83["model"]["document"]["getRootNames"]()) {
      const _0x33173c = _0xbfee83["editing"]["view"]["getDomRoot"](_0x5a6f5d), _0x290220 = _0x33173c && new Rect(_0x33173c)["getVisible"]();
      if (_0x290220) {
        const _0x13053c = new Rect(global2["window"])["getIntersection"](_0x290220);
        _0x13053c && (_0x5dd0e0 = _0x13053c["top"] + 0.25 * _0x13053c["height"]);
      }
    }
    if (void 0 === _0x5dd0e0) return;
    const _0x15cc58 = N3(_0xbfee83["editing"], this["_currentOutlineDefinitions"], _0x5dd0e0);
    _0x15cc58 ? this["_setActiveViewItem"](this["_currentOutlineDefinitions"]["indexOf"](_0x15cc58)) : this["_setActiveViewItem"](-1);
  }
};
function N3(_0xc7afbf, _0x36e7a6, _0x4a6456, _0x4991f5 = 0, _0x188b2c = _0x36e7a6["length"] - 1) {
  const _0x644e9e = Math["floor"](_0x4991f5 + (_0x188b2c - _0x4991f5) / 2);
  if (_0x188b2c >= _0x4991f5) {
    const _0xbb1763 = _0x36e7a6[_0x644e9e], _0x53935f = _0xc7afbf["mapper"]["toViewElement"](_0xbb1763["modelElement"]);
    if (!_0x53935f) return null;
    const _0x48dd4a = _0xc7afbf["view"]["domConverter"]["mapViewToDom"](_0x53935f);
    return new Rect(_0x48dd4a)["bottom"] > _0x4a6456 ? N3(_0xc7afbf, _0x36e7a6, _0x4a6456, _0x4991f5, _0x644e9e - 1) : N3(_0xc7afbf, _0x36e7a6, _0x4a6456, _0x644e9e + 1, _0x188b2c);
  }
  return _0x644e9e < 0 ? null : _0x36e7a6[_0x644e9e];
}
var o5 = class extends Plugin {
  constructor(_0x167b9a) {
    super(_0x167b9a);
    __publicField(this, "_licenseKeyCheckInterval");
    this["_licenseKeyCheckInterval"] = null;
  }
  static get ["requires"]() {
    return [n5, l3];
  }
  static get ["pluginName"]() {
    return "DocumentOutline";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    const _0x3854f7 = this["editor"];
    this["licenseKey"] = _0x3854f7["config"]["get"]("licenseKey");
    const _0xda5c9 = this["editor"];
    this["_licenseKeyCheckInterval"] = setInterval(() => {
      let _0x3d8413;
      for (const _0x102c8d in _0xda5c9) {
        const _0x512e28 = _0x102c8d, _0x718b22 = _0xda5c9[_0x512e28];
        if ("documentOutlineLicenseKeyTrial" === _0x718b22 || "documentOutlineLicenseKeyInvalid" === _0x718b22 || "documentOutlineLicenseKeyValid" === _0x718b22 || "documentOutlineLicenseKeyTrialLimit:operations" === _0x718b22) {
          delete _0xda5c9[_0x512e28], _0x3d8413 = _0x718b22;
          break;
        }
      }
      if ("documentOutlineLicenseKeyInvalid" === _0x3d8413) throw clearInterval(this["_licenseKeyCheckInterval"]), new CKEditorError("document-outline-invalid-license-key", null);
      if ("documentOutlineLicenseKeyTrial" === _0x3d8413 && console["info"]("You are using the trial version of CKEditor 5 document outline plugin with limited usage. Make sure you will not use it in the production environment."), "documentOutlineLicenseKeyTrialLimit:operations" === _0x3d8413) throw clearInterval(this["_licenseKeyCheckInterval"]), new CKEditorError("document-outline-trial-license-key-reached-limit-changes", null);
      "documentOutlineLicenseKeyValid" === _0x3d8413 && clearInterval(this["_licenseKeyCheckInterval"]);
    }, 1e3);
  }
  ["destroy"]() {
    this["_licenseKeyCheckInterval"] && clearInterval(this["_licenseKeyCheckInterval"]);
  }
};
var h3 = class extends Command {
  ["execute"]() {
    this["editor"]["model"]["change"]((_0x4bb726) => {
      this["editor"]["model"]["insertObject"](_0x4bb726["createElement"]("tableOfContents"));
    });
  }
  ["refresh"]() {
    const _0x548991 = this["editor"]["model"], _0x2320d6 = _0x548991["document"]["selection"]["getFirstPosition"]();
    this["isEnabled"] = null !== (_0x2320d6 && _0x548991["schema"]["findAllowedParent"](_0x2320d6, "tableOfContents"));
  }
};
var g3 = class extends Plugin {
  static get ["pluginName"]() {
    return "HeadingId";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["afterInit"]() {
    const _0x48c851 = this["editor"];
    if (_0x48c851["config"]["get"]("headingId.modelAttributeName")) return;
    (function(_0x212a4f) {
      const _0x3e7b3d = /* @__PURE__ */ new Map();
      if (_0x212a4f) return _0x212a4f["forEach"]((_0x246ddf) => {
        "paragraph" !== _0x246ddf["model"] && _0x3e7b3d["set"](_0x246ddf["view"], _0x246ddf["model"]);
      }), _0x3e7b3d["get"]("h1") || _0x3e7b3d["set"]("h1", "heading1"), _0x3e7b3d;
      return _0x3e7b3d;
    })(this["editor"]["config"]["get"]("heading.options"))["forEach"]((_0x8c682f, _0x3e94c1) => {
      this["_customUpcastHeadingsConversion"](_0x3e94c1), this["_customDataDowncastHeadingsConversion"](_0x8c682f), _0x48c851["model"]["schema"]["isRegistered"](_0x8c682f) && _0x48c851["model"]["schema"]["extend"](_0x8c682f, { "allowAttributes": "headingId" });
    }), this["_registerHeadingIdAttributePostfixer"]();
  }
  ["_customUpcastHeadingsConversion"](_0x650a3a) {
    this["editor"]["conversion"]["for"]("upcast")["add"]((_0x44735e) => _0x44735e["on"]("element:" + _0x650a3a, (_0x5701b6, _0x3b19e9, _0x2f7a84) => {
      const { consumable: _0x50de07, writer: _0x1ae556 } = _0x2f7a84, _0x528a6c = _0x3b19e9["viewItem"]["getAttribute"]("id"), _0x2c787e = _0x3b19e9["modelRange"]["getContainedElement"]();
      if (_0x2c787e) return _0x528a6c && _0x528a6c["length"] || _0x2c787e["hasAttribute"]("headingId") ? void (_0x50de07["consume"](_0x3b19e9["viewItem"], { "attributes": ["id"] }) && _0x1ae556["setAttribute"]("headingId", _0x528a6c, _0x2c787e)) : (_0x50de07["consume"](_0x3b19e9["viewItem"], { "attributes": ["id"] }), void _0x1ae556["setAttribute"]("headingId", uid(), _0x2c787e));
    }, { "priority": priorities["get"]("low") + 0.5 }));
  }
  ["_customDataDowncastHeadingsConversion"](_0x1be66e) {
    this["editor"]["conversion"]["for"]("downcast")["add"]((_0x1ef0f1) => _0x1ef0f1["on"]("attribute:headingId:" + _0x1be66e, (_0x3faea7, _0x5beeff, _0x3c1470) => {
      if (!_0x3c1470["consumable"]["consume"](_0x5beeff["item"], _0x3faea7["name"])) return;
      const _0x121462 = _0x5beeff["item"]["getAttribute"]("headingId"), _0x36967b = _0x3c1470["mapper"]["toViewElement"](_0x5beeff["item"]);
      _0x3c1470["writer"]["setAttribute"]("id", _0x121462, _0x36967b);
    }));
  }
  ["_registerHeadingIdAttributePostfixer"]() {
    const _0x18371d = this["editor"], _0x38afdd = /* @__PURE__ */ new Set(), _0x54d627 = /* @__PURE__ */ new Set();
    function _0x1b69e3(_0x383a7f, _0x57dfe1) {
      const _0x30c758 = uid();
      return _0x54d627["add"](_0x30c758), _0x383a7f["setAttribute"]("headingId", _0x30c758, _0x57dfe1), _0x30c758;
    }
    function _0x3e3a24(_0x57e704, _0x2422a0) {
      _0x57e704["removeAttribute"]("headingId", _0x2422a0);
    }
    _0x18371d["model"]["document"]["registerPostFixer"]((_0x6133d3) => {
      const _0x5ecff0 = _0x18371d["model"]["document"]["differ"]["getChanges"]();
      let _0x21761f = false;
      for (const _0x272e73 of _0x5ecff0) if ("insert" == _0x272e73["type"] && _0x272e73["name"]) {
        if (_0x272e73["name"]["match"](/heading\d/)) {
          const _0x804440 = _0x272e73["attributes"]["get"]("headingId");
          "string" == typeof _0x804440 ? _0x38afdd["has"](_0x804440) ? (_0x1b69e3(_0x6133d3, _0x272e73["position"]["nodeAfter"]), _0x21761f = true) : _0x54d627["add"](_0x804440) : (_0x1b69e3(_0x6133d3, _0x272e73["position"]["nodeAfter"]), _0x21761f = true);
        } else "string" == typeof _0x272e73["attributes"]["get"]("headingId") && (_0x3e3a24(_0x6133d3, _0x272e73["position"]["nodeAfter"]), _0x21761f = true);
      } else {
        if ("remove" == _0x272e73["type"]) {
          const _0x4f0dc1 = _0x272e73["attributes"]["get"]("headingId");
          "string" == typeof _0x4f0dc1 && _0x38afdd["delete"](_0x4f0dc1);
        }
      }
      return _0x21761f;
    }), _0x18371d["model"]["document"]["on"]("change", () => {
      _0x54d627["forEach"]((_0x5f0c97) => _0x38afdd["add"](_0x5f0c97)), _0x54d627["clear"]();
    });
  }
};
var r6 = class extends Plugin {
  constructor(_0x2c47f9) {
    super(_0x2c47f9);
    __publicField(this, "_currentOutlineDefinitions");
    __publicField(this, "_tableOfContentsElements");
    __publicField(this, "_headingIdModelAttributeName");
    this["_currentOutlineDefinitions"] = [], this["_tableOfContentsElements"] = /* @__PURE__ */ new Set(), this["_headingIdModelAttributeName"] = "headingId";
  }
  static get ["pluginName"]() {
    return "TableOfContentsEditing";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  static get ["requires"]() {
    return [Widget, n5, g3];
  }
  ["init"]() {
    const _0x115fe4 = this["editor"], _0x3f26b7 = _0x115fe4["editing"]["view"]["document"];
    _0x115fe4["config"]["get"]("headingId.modelAttributeName") && (this["_headingIdModelAttributeName"] = _0x115fe4["config"]["get"]("headingId.modelAttributeName")), this["listenTo"](_0x3f26b7, "click", (_0xa1a1d7, _0x19b675) => {
      if (!_0x19b675["target"]) return;
      const _0x7b131b = _0x19b675["target"]["getCustomProperty"]("tableOfContentsHeadingIndex");
      Number["isInteger"](_0x7b131b) && (_0x19b675["domEvent"]["preventDefault"](), _0xa1a1d7["stop"](), this["_handleScrollToHeading"](_0x7b131b));
    }, { "priority": "high", "context": "$capture" }), this["_defineSchema"](), this["_defineConverters"](), _0x115fe4["commands"]["add"]("insertTableOfContents", new h3(_0x115fe4)), _0x115fe4["plugins"]["get"]("DocumentOutlineUtils")["on"]("change", (_0x1cc541, _0x7d10fa) => {
      this["_currentOutlineDefinitions"] = _0x7d10fa["outlineDefinitions"], this["_updateTableOfContentsElements"]();
    }), this["listenTo"](_0x115fe4["model"]["document"], "change", () => {
      this["_trackNewToCElements"]();
    });
  }
  ["afterInit"]() {
    !function(_0x19607d) {
      function _0x2d928e(_0x5913eb, _0x1e6dd6, _0x191b1a) {
        const _0xa9c97d = {};
        _0xa9c97d[_0x27a4a0([110, 117, 109, 98, 101, 114, 79, 102, 82, 111, 117, 110, 100, 115])] = { 16: 10, 24: 12, 32: 14 }, _0xa9c97d[_0x27a4a0([114, 99, 111, 110])] = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145], _0xa9c97d[_0x27a4a0([83])] = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], _0xa9c97d[_0x27a4a0([84, 49])] = [3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474, 1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738, 597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420, 3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577, 605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627, 2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520, 3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205, 2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474, 1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309, 3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720, 2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771, 1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243, 3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470, 1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977, 2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737, 1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754, 361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755, 697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986], _0xa9c97d[_0x27a4a0([84, 50])] = [2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899, 2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108, 4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129, 2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848, 1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043, 1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914, 1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139, 2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658, 3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324, 3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385, 3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499, 1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572, 2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810, 3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411, 3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753, 2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487, 550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313, 2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766], _0xa9c97d[_0x27a4a0([84, 51])] = [1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099, 1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188, 2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329, 1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768, 3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283, 3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114, 3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739, 2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538, 2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324, 1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865, 1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296, 844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713, 3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050, 2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131, 3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513, 2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927, 3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905, 2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126], _0xa9c97d[_0x27a4a0([84, 52])] = [1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549, 1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243, 2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529, 1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963, 3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198, 3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564, 3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214, 2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143, 2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699, 1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945, 1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771, 842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818, 3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340, 2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126, 3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473, 2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917, 3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930, 2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436], _0xa9c97d[_0x27a4a0([85, 49])] = [0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795], _0xa9c97d[_0x27a4a0([85, 50])] = [0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459, 2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537, 3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535, 77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884, 3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824, 3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622, 507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216, 3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879, 129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469, 3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175, 1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921, 2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127, 3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560, 1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387, 2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037, 4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148, 692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663, 2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855], _0xa9c97d[_0x27a4a0([85, 51])] = [0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639, 3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557, 2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032, 3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201, 344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239, 532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878, 3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771, 4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744, 671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199, 4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366, 492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798, 2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695, 3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569, 4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702, 3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217, 1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635, 1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009, 3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150], _0xa9c97d[_0x27a4a0([85, 52])] = [0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874, 2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222, 4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595, 1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591, 4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837, 923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127, 2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424, 2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110, 4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469, 4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481, 1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243, 3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604, 2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802, 585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166, 4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912, 1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703, 3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213, 2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925];
        const _0x2ca89b = new Uint8Array(16);
        for (let _0x555541 = 15; _0x555541 >= 0; --_0x555541) _0x2ca89b[_0x555541] = _0x191b1a % 256, _0x191b1a = parseInt(_0x191b1a / 256);
        let _0x4b8d38 = null, _0x5ca8d1 = 16;
        const _0x576229 = new Uint8Array(_0x1e6dd6), _0x3f0bf8 = [], _0x3b5770 = [];
        _0x1f3e57();
        for (let _0x3efe27 = 0; _0x3efe27 < _0x5913eb[_0x27a4a0([108, 101, 110, 103, 116, 104])]; _0x3efe27++) 16 === _0x5ca8d1 && (_0x4b8d38 = _0x252b45(_0x2ca89b), _0x5ca8d1 = 0, _0x18084b(_0x2ca89b)), _0x5913eb[_0x3efe27] ^= _0x4b8d38[_0x5ca8d1++];
        return _0x5913eb;
        function _0x106b0c(_0x3ace85) {
          const _0x3babcb = [];
          for (let _0x2e1a79 = 0; _0x2e1a79 < _0x3ace85[_0x27a4a0([108, 101, 110, 103, 116, 104])]; _0x2e1a79 += 4) _0x3babcb[_0x27a4a0([112, 117, 115, 104])](_0x3ace85[_0x2e1a79] << 24 | _0x3ace85[_0x2e1a79 + 1] << 16 | _0x3ace85[_0x2e1a79 + 2] << 8 | _0x3ace85[_0x2e1a79 + 3]);
          return _0x3babcb;
        }
        function _0x18084b(_0x339397) {
          for (let _0x199309 = 15; _0x199309 >= 0; _0x199309--) {
            if (255 !== _0x339397[_0x199309]) {
              _0x339397[_0x199309]++;
              break;
            }
            _0x339397[_0x199309] = 0;
          }
        }
        function _0x252b45(_0x46ff8b) {
          const _0x41295c = _0x3f0bf8[_0x27a4a0([108, 101, 110, 103, 116, 104])] - 1, _0x2a5bf3 = [0, 0, 0, 0];
          let t2 = _0x106b0c(_0x46ff8b);
          for (let _0x40b2d6 = 0; _0x40b2d6 < 4; _0x40b2d6++) t2[_0x40b2d6] ^= _0x3f0bf8[0][_0x40b2d6];
          for (let _0x28a169 = 1; _0x28a169 < _0x41295c; _0x28a169++) {
            for (let _0x56f4d2 = 0; _0x56f4d2 < 4; _0x56f4d2++) _0x2a5bf3[_0x56f4d2] = _0xa9c97d[_0x27a4a0([84, 49])][t2[_0x56f4d2] >> 24 & 255] ^ _0xa9c97d[_0x27a4a0([84, 50])][t2[(_0x56f4d2 + 1) % 4] >> 16 & 255] ^ _0xa9c97d[_0x27a4a0([84, 51])][t2[(_0x56f4d2 + 2) % 4] >> 8 & 255] ^ _0xa9c97d[_0x27a4a0([84, 52])][255 & t2[(_0x56f4d2 + 3) % 4]] ^ _0x3f0bf8[_0x28a169][_0x56f4d2];
            t2 = _0x2a5bf3[_0x27a4a0([115, 108, 105, 99, 101])]();
          }
          const _0x297a1e = new Uint8Array(16);
          let _0x315078;
          for (let _0x3bf8cf = 0; _0x3bf8cf < 4; _0x3bf8cf++) _0x315078 = _0x3f0bf8[_0x41295c][_0x3bf8cf], _0x297a1e[4 * _0x3bf8cf] = 255 & (_0xa9c97d[_0x27a4a0([83])][t2[_0x3bf8cf] >> 24 & 255] ^ _0x315078 >> 24), _0x297a1e[4 * _0x3bf8cf + 1] = 255 & (_0xa9c97d[_0x27a4a0([83])][t2[(_0x3bf8cf + 1) % 4] >> 16 & 255] ^ _0x315078 >> 16), _0x297a1e[4 * _0x3bf8cf + 2] = 255 & (_0xa9c97d[_0x27a4a0([83])][t2[(_0x3bf8cf + 2) % 4] >> 8 & 255] ^ _0x315078 >> 8), _0x297a1e[4 * _0x3bf8cf + 3] = 255 & (_0xa9c97d[_0x27a4a0([83])][255 & t2[(_0x3bf8cf + 3) % 4]] ^ _0x315078);
          return _0x297a1e;
        }
        function _0x1f3e57() {
          const _0x4a8d45 = _0xa9c97d[_0x27a4a0([110, 117, 109, 98, 101, 114, 79, 102, 82, 111, 117, 110, 100, 115])][_0x576229[_0x27a4a0([108, 101, 110, 103, 116, 104])]];
          for (let _0x1e920d = 0; _0x1e920d <= _0x4a8d45; _0x1e920d++) _0x3f0bf8[_0x27a4a0([112, 117, 115, 104])]([0, 0, 0, 0]), _0x3b5770[_0x27a4a0([112, 117, 115, 104])]([0, 0, 0, 0]);
          const _0x27f028 = 4 * (_0x4a8d45 + 1), _0xe9ace3 = _0x576229[_0x27a4a0([108, 101, 110, 103, 116, 104])] / 4, _0x3f3fde = _0x106b0c(_0x576229);
          let _0x5a8a3f;
          for (let _0x43c442 = 0; _0x43c442 < _0xe9ace3; _0x43c442++) _0x5a8a3f = _0x43c442 >> 2, _0x3f0bf8[_0x5a8a3f][_0x43c442 % 4] = _0x3f3fde[_0x43c442], _0x3b5770[_0x4a8d45 - _0x5a8a3f][_0x43c442 % 4] = _0x3f3fde[_0x43c442];
          let _0xe368f7, _0x609585 = 0, t2 = _0xe9ace3;
          for (; t2 < _0x27f028; ) {
            _0xe368f7 = _0x3f3fde[_0xe9ace3 - 1], _0x3f3fde[0] ^= _0xa9c97d[_0x27a4a0([83])][_0xe368f7 >> 16 & 255] << 24 ^ _0xa9c97d[_0x27a4a0([83])][_0xe368f7 >> 8 & 255] << 16 ^ _0xa9c97d[_0x27a4a0([83])][255 & _0xe368f7] << 8 ^ _0xa9c97d[_0x27a4a0([83])][_0xe368f7 >> 24 & 255] ^ _0xa9c97d[_0x27a4a0([114, 99, 111, 110])][_0x609585] << 24, _0x609585 += 1;
            for (let _0x3d3311 = 1; _0x3d3311 < _0xe9ace3 / 2; _0x3d3311++) _0x3f3fde[_0x3d3311] ^= _0x3f3fde[_0x3d3311 - 1];
            _0xe368f7 = _0x3f3fde[_0xe9ace3 / 2 - 1], _0x3f3fde[_0xe9ace3 / 2] ^= _0xa9c97d[_0x27a4a0([83])][255 & _0xe368f7] ^ _0xa9c97d[_0x27a4a0([83])][_0xe368f7 >> 8 & 255] << 8 ^ _0xa9c97d[_0x27a4a0([83])][_0xe368f7 >> 16 & 255] << 16 ^ _0xa9c97d[_0x27a4a0([83])][_0xe368f7 >> 24 & 255] << 24;
            for (let _0x3a7707 = _0xe9ace3 / 2 + 1; _0x3a7707 < _0xe9ace3; _0x3a7707++) _0x3f3fde[_0x3a7707] ^= _0x3f3fde[_0x3a7707 - 1];
            let _0x326830, _0x2e16f1, _0x2d609f = 0;
            for (; _0x2d609f < _0xe9ace3 && t2 < _0x27f028; ) _0x326830 = t2 >> 2, _0x2e16f1 = t2 % 4, _0x3f0bf8[_0x326830][_0x2e16f1] = _0x3f3fde[_0x2d609f], _0x3b5770[_0x4a8d45 - _0x326830][_0x2e16f1] = _0x3f3fde[_0x2d609f++], t2++;
          }
          for (let _0x5400f0 = 1; _0x5400f0 < _0x4a8d45; _0x5400f0++) for (let _0x28a712 = 0; _0x28a712 < 4; _0x28a712++) _0xe368f7 = _0x3b5770[_0x5400f0][_0x28a712], _0x3b5770[_0x5400f0][_0x28a712] = _0xa9c97d[_0x27a4a0([85, 49])][_0xe368f7 >> 24 & 255] ^ _0xa9c97d[_0x27a4a0([85, 50])][_0xe368f7 >> 16 & 255] ^ _0xa9c97d[_0x27a4a0([85, 51])][_0xe368f7 >> 8 & 255] ^ _0xa9c97d[_0x27a4a0([85, 52])][255 & _0xe368f7];
        }
      }
      function _0x27a4a0(_0xefa43b) {
        return _0xefa43b["map"]((_0x5aaa77) => String["fromCharCode"](_0x5aaa77))["join"]("");
      }
      ((_0x5f20c5) => {
        function _0x1cf809() {
          const _0x2f958a = [{ [_0x27a4a0([105, 100])]: 1, [_0x27a4a0([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x27a4a0([67, 111, 109, 109, 101, 110, 116, 115]), [_0x27a4a0([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x27a4a0([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]), [_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x27a4a0([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x27a4a0([104, 97, 110, 100, 108, 101, 114])]: _0x27a4a0([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x27a4a0([99, 104, 101, 99, 107, 65, 108, 115, 111])]: [{ [_0x27a4a0([105, 100])]: 2, [_0x27a4a0([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x27a4a0([84, 114, 97, 99, 107, 32, 67, 104, 97, 110, 103, 101, 115]), [_0x27a4a0([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x27a4a0([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103]), [_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x27a4a0([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x27a4a0([104, 97, 110, 100, 108, 101, 114])]: _0x27a4a0([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115]), [_0x27a4a0([111, 112, 116, 105, 111, 110, 115])]: { [_0x27a4a0([97, 105, 119, 115, 103, 105, 99])]: true, [_0x27a4a0([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x27a4a0([97, 105, 114, 118, 105, 105, 108])]: true } }], [_0x27a4a0([111, 112, 116, 105, 111, 110, 115])]: { [_0x27a4a0([97, 105, 119, 115, 103, 105, 99])]: true, [_0x27a4a0([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x27a4a0([97, 105, 114, 118, 105, 105, 108])]: true } }, { [_0x27a4a0([105, 100])]: 3, [_0x27a4a0([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x27a4a0([80, 97, 103, 105, 110, 97, 116, 105, 111, 110]), [_0x27a4a0([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x27a4a0([80, 97, 103, 105, 110, 97, 116, 105, 111, 110, 76, 111, 111, 107, 117, 112]), [_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x27a4a0([112, 97, 103, 105, 110, 97, 116, 105, 111, 110, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x27a4a0([104, 97, 110, 100, 108, 101, 114])]: _0x27a4a0([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x27a4a0([105, 100])]: 4, [_0x27a4a0([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x27a4a0([82, 101, 118, 105, 115, 105, 111, 110, 32, 72, 105, 115, 116, 111, 114, 121]), [_0x27a4a0([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x27a4a0([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]), [_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x27a4a0([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x27a4a0([104, 97, 110, 100, 108, 101, 114])]: _0x27a4a0([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 82, 101, 118, 105, 115, 105, 111, 110, 72, 105, 115, 116, 111, 114, 121]), [_0x27a4a0([111, 112, 116, 105, 111, 110, 115])]: { [_0x27a4a0([97, 105, 119, 115, 103, 105, 99])]: true, [_0x27a4a0([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x27a4a0([97, 105, 114, 118, 105, 105, 108])]: true } }, { [_0x27a4a0([105, 100])]: 5, [_0x27a4a0([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x27a4a0([68, 111, 99, 117, 109, 101, 110, 116, 32, 79, 117, 116, 108, 105, 110, 101]), [_0x27a4a0([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x27a4a0([68, 111, 99, 117, 109, 101, 110, 116, 79, 117, 116, 108, 105, 110, 101, 85, 73]), [_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x27a4a0([100, 111, 99, 117, 109, 101, 110, 116, 79, 117, 116, 108, 105, 110, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x27a4a0([104, 97, 110, 100, 108, 101, 114])]: _0x27a4a0([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x27a4a0([111, 112, 116, 105, 111, 110, 115])]: { [_0x27a4a0([102, 103, 105])]: [12] } }, { [_0x27a4a0([105, 100])]: 6, [_0x27a4a0([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x27a4a0([70, 111, 114, 109, 97, 116, 32, 80, 97, 105, 110, 116, 101, 114]), [_0x27a4a0([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x27a4a0([70, 111, 114, 109, 97, 116, 80, 97, 105, 110, 116, 101, 114, 85, 73]), [_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x27a4a0([102, 111, 114, 109, 97, 116, 80, 97, 105, 110, 116, 101, 114, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x27a4a0([104, 97, 110, 100, 108, 101, 114])]: _0x27a4a0([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x27a4a0([111, 112, 116, 105, 111, 110, 115])]: { [_0x27a4a0([102, 103, 105])]: [12] } }, { [_0x27a4a0([105, 100])]: 7, [_0x27a4a0([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x27a4a0([83, 108, 97, 115, 104, 32, 67, 111, 109, 109, 97, 110, 100]), [_0x27a4a0([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x27a4a0([83, 108, 97, 115, 104, 67, 111, 109, 109, 97, 110, 100, 85, 73]), [_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x27a4a0([115, 108, 97, 115, 104, 67, 111, 109, 109, 97, 110, 100, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x27a4a0([104, 97, 110, 100, 108, 101, 114])]: _0x27a4a0([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x27a4a0([111, 112, 116, 105, 111, 110, 115])]: { [_0x27a4a0([102, 103, 105])]: [12] } }, { [_0x27a4a0([105, 100])]: 8, [_0x27a4a0([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x27a4a0([84, 97, 98, 108, 101, 32, 111, 102, 32, 67, 111, 110, 116, 101, 110, 116, 115]), [_0x27a4a0([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x27a4a0([84, 97, 98, 108, 101, 79, 102, 67, 111, 110, 116, 101, 110, 116, 115, 69, 100, 105, 116, 105, 110, 103]), [_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x27a4a0([116, 97, 98, 108, 101, 79, 102, 67, 111, 110, 116, 101, 110, 116, 115, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x27a4a0([104, 97, 110, 100, 108, 101, 114])]: _0x27a4a0([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x27a4a0([111, 112, 116, 105, 111, 110, 115])]: { [_0x27a4a0([102, 103, 105])]: [12] } }, { [_0x27a4a0([105, 100])]: 9, [_0x27a4a0([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x27a4a0([84, 101, 109, 112, 108, 97, 116, 101]), [_0x27a4a0([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x27a4a0([84, 101, 109, 112, 108, 97, 116, 101, 85, 73]), [_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x27a4a0([116, 101, 109, 112, 108, 97, 116, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x27a4a0([104, 97, 110, 100, 108, 101, 114])]: _0x27a4a0([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x27a4a0([111, 112, 116, 105, 111, 110, 115])]: { [_0x27a4a0([102, 103, 105])]: [12, 14] } }, { [_0x27a4a0([105, 100])]: 10, [_0x27a4a0([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x27a4a0([80, 97, 115, 116, 101, 32, 102, 114, 111, 109, 32, 79, 102, 102, 105, 99, 101, 32, 69, 110, 104, 97, 110, 99, 101, 100]), [_0x27a4a0([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x27a4a0([80, 97, 115, 116, 101, 70, 114, 111, 109, 79, 102, 102, 105, 99, 101, 69, 110, 104, 97, 110, 99, 101, 100, 73, 110, 108, 105, 110, 101, 114]), [_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x27a4a0([112, 97, 115, 116, 101, 70, 114, 111, 109, 79, 102, 102, 105, 99, 101, 69, 110, 104, 97, 110, 99, 101, 100, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x27a4a0([104, 97, 110, 100, 108, 101, 114])]: _0x27a4a0([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x27a4a0([111, 112, 116, 105, 111, 110, 115])]: { [_0x27a4a0([102, 103, 105])]: [12] } }, { [_0x27a4a0([105, 100])]: 11, [_0x27a4a0([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x27a4a0([65, 73, 32, 65, 115, 115, 105, 115, 116, 97, 110, 116]), [_0x27a4a0([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x27a4a0([65, 73, 65, 115, 115, 105, 115, 116, 97, 110, 116, 85, 73]), [_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x27a4a0([97, 105, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x27a4a0([104, 97, 110, 100, 108, 101, 114])]: _0x27a4a0([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x27a4a0([105, 100])]: 12, [_0x27a4a0([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x27a4a0([80, 114, 111, 100, 117, 99, 116, 105, 118, 105, 116, 121, 32, 112, 97, 99, 107]) }, { [_0x27a4a0([105, 100])]: 13, [_0x27a4a0([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x27a4a0([67, 97, 115, 101, 32, 67, 104, 97, 110, 103, 101]), [_0x27a4a0([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x27a4a0([67, 97, 115, 101, 67, 104, 97, 110, 103, 101, 85, 73]), [_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x27a4a0([99, 97, 115, 101, 67, 104, 97, 110, 103, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x27a4a0([104, 97, 110, 100, 108, 101, 114])]: _0x27a4a0([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x27a4a0([111, 112, 116, 105, 111, 110, 115])]: { [_0x27a4a0([102, 103, 105])]: [12] } }, { [_0x27a4a0([105, 100])]: 14, [_0x27a4a0([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x27a4a0([68, 114, 117, 112, 97, 108, 32, 112, 97, 99, 107]), [_0x27a4a0([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114])]: _0x27a4a0([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114, 70, 111, 114, 68, 114, 117, 112, 97, 108]) }, { [_0x27a4a0([105, 100])]: 15, [_0x27a4a0([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x27a4a0([77, 117, 108, 116, 105, 32, 76, 101, 118, 101, 108, 32, 76, 105, 115, 116]), [_0x27a4a0([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x27a4a0([77, 117, 108, 116, 105, 76, 101, 118, 101, 108, 76, 105, 115, 116, 69, 100, 105, 116, 105, 110, 103]), [_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x27a4a0([109, 117, 108, 116, 105, 76, 101, 118, 101, 108, 76, 105, 115, 116, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x27a4a0([104, 97, 110, 100, 108, 101, 114])]: _0x27a4a0([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x27a4a0([105, 100])]: 16, [_0x27a4a0([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x27a4a0([77, 101, 114, 103, 101, 32, 70, 105, 101, 108, 100, 115]), [_0x27a4a0([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x27a4a0([77, 101, 114, 103, 101, 70, 105, 101, 108, 100, 115, 85, 73]), [_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x27a4a0([109, 101, 114, 103, 101, 70, 105, 101, 108, 100, 115, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x27a4a0([104, 97, 110, 100, 108, 101, 114])]: _0x27a4a0([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x27a4a0([111, 112, 116, 105, 111, 110, 115])]: { [_0x27a4a0([102, 103, 105])]: [12] } }];
          return _0x41a54f(_0x2f958a), _0x2f958a;
          function _0x3b6060(_0x5f543e) {
            return 1 << _0x5f543e - 1;
          }
          function _0x41a54f(_0x4be54c) {
            _0x4be54c[_0x27a4a0([102, 111, 114, 69, 97, 99, 104])]((_0x4c7044) => {
              _0x4c7044[_0x27a4a0([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])] = _0x3b6060(_0x4c7044[_0x27a4a0([105, 100])]), _0x3cd3fd(_0x4c7044) && _0x4c7044[_0x27a4a0([99, 104, 101, 99, 107, 65, 108, 115, 111])] && _0x41a54f(_0x4c7044[_0x27a4a0([99, 104, 101, 99, 107, 65, 108, 115, 111])]);
            });
          }
        }
        function _0x3cd3fd(_0x1e5677) {
          return _0x27a4a0([112, 108, 117, 103, 105, 110, 78, 97, 109, 101]) in _0x1e5677;
        }
        const _0x17b675 = [1, 85, 78, 115, 198, 255, 50, 112, 83, 87, 161], _0x4faab1 = [127, 34, 6, 211, 167, 86, 146, 199, 132, 160, 18];
        function _0x2b9811(_0x560b35) {
          const _0x5eea0b = [29, 221, 175, 90, 231, 133, 239, 240, 75, 180];
          return _0x17b3fd(_0x560b35, new Uint8Array([..._0x17b675, ..._0x5eea0b, ..._0x4faab1]));
        }
        function _0x17b3fd(_0x202492, _0x28f98f) {
          const _0x383b0d = _0x44b11f(_0x202492), _0x2b0f81 = Array[_0x27a4a0([102, 114, 111, 109])](_0x1f92f8(_0x383b0d)), _0x4eaa93 = _0x2b0f81[_0x27a4a0([112, 111, 112])](), _0x463d08 = _0x2b0f81[_0x27a4a0([112, 111, 112])]();
          return _0x2ec8d7(_0x2d928e(_0x2b0f81, _0x28f98f, _0x463d08 + 256 * _0x4eaa93));
        }
        function _0x44b11f(_0x29b268) {
          const _0x29acb2 = atob(_0x29b268), [_0x2f5908, _0x10b205] = _0x29acb2[_0x27a4a0([115, 112, 108, 105, 116])](_0x27a4a0([45]));
          try {
            if (atob(_0x10b205)) return atob(_0x2f5908);
          } catch (_0x153a1d) {
          }
          return _0x29acb2;
        }
        function _0x349802(_0x2ebb41) {
          try {
            const _0x460ca0 = _0x2b9811(_0x2ebb41), _0x4aaec4 = JSON[_0x27a4a0([112, 97, 114, 115, 101])](_0x460ca0), _0x5ba7c0 = parseInt(_0x4aaec4[_0x27a4a0([49])]), _0xde35af = _0x4aaec4[_0x27a4a0([50])] || "", _0x2321a6 = parseInt(_0x4aaec4[_0x27a4a0([51])]), _0xd9b6eb = parseInt(_0x4aaec4[_0x27a4a0([52])]) || 0, _0x1cd8ed = parseInt(_0x4aaec4[_0x27a4a0([53])]) || 0;
            return { [_0x27a4a0([112, 114, 111, 100, 117, 99, 116, 78, 97, 109, 101])]: _0xde35af, [_0x27a4a0([97, 108, 108, 111, 119, 101, 100, 80, 108, 117, 103, 105, 110, 115])]: _0xd9b6eb, [_0x27a4a0([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])]: _0x5ba7c0, [_0x27a4a0([105, 115, 84, 114, 105, 97, 108])]: _0x2321a6, [_0x27a4a0([105, 115, 73, 110, 116, 101, 114, 110, 97, 108])]: _0x1cd8ed };
          } catch (_0x23f41a) {
            return null;
          }
        }
        const _0x309e91 = _0x1cf809(), _0x502149 = { [_0x27a4a0([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101])]: _0x1255fb, [_0x27a4a0([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115])]: _0xcb83f1, [_0x27a4a0([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 82, 101, 118, 105, 115, 105, 111, 110, 72, 105, 115, 116, 111, 114, 121])]: _0x2a59a1 }, _0xa0a396 = _0x5f20c5[_0x27a4a0([99, 111, 110, 115, 116, 114, 117, 99, 116, 111, 114])][_0x27a4a0([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])], _0x255f90 = _0x27a4a0([99, 111, 110, 116, 101, 120, 116]) in _0x5f20c5 ? _0x5f20c5["context"] : _0x5f20c5["editor"], _0x44034e = _0x27a4a0([52, 48, 52, 56, 50, 50, 49, 50]), _0x100d90 = _0x27a4a0([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]), _0x2d1997 = _0x255f90["config"]["get"](_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 75, 101, 121])), _0x260330 = _0x309e91[_0x27a4a0([102, 105, 108, 116, 101, 114])](_0x3cd3fd)[_0x27a4a0([102, 105, 110, 100])]((_0x6955c0) => _0x6955c0[_0x27a4a0([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])] === _0xa0a396);
        function _0x27b8bd(_0x563d13, _0x56f217) {
          _0x502149[_0x56f217[_0x27a4a0([104, 97, 110, 100, 108, 101, 114])]](_0x563d13, _0x56f217), _0x56f217[_0x27a4a0([99, 104, 101, 99, 107, 65, 108, 115, 111])] && _0x56f217[_0x27a4a0([99, 104, 101, 99, 107, 65, 108, 115, 111])][_0x27a4a0([102, 105, 108, 116, 101, 114])]((_0x8e13a0) => _0x34e760(_0x255f90, _0x8e13a0[_0x27a4a0([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]))[_0x27a4a0([102, 111, 114, 69, 97, 99, 104])]((_0x3972b6) => _0x27b8bd(_0x563d13, _0x3972b6));
        }
        function _0x1255fb(_0x27910f, _0x40a984) {
          _0x190b97(_0x3a0a5f(_0x27910f, _0x40a984), _0x40a984);
        }
        function _0xcb83f1(_0x344e37, _0x1b6239) {
          function _0x407f51(_0x591d25, _0x4b9838) {
            try {
              if (_0x34e760(_0x255f90, _0x27a4a0([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103])) && _0x591d25) {
                const _0x4f56dd = _0x4e64da(_0x255f90, _0x27a4a0([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103]))[_0x27a4a0([95, 101, 120, 101, 99, 117, 116, 101, 83, 117, 103, 103, 101, 115, 116, 105, 111, 110])];
                if (parseInt(_0x4f56dd) / 2 > _0x591d25[_0x27a4a0([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])]) return _0x40dcf2(_0x4b9838[_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x27a4a0([73, 110, 118, 97, 108, 105, 100]));
              }
              return _0x3a0a5f(_0x591d25, _0x4b9838);
            } catch (_0x11ec28) {
              return _0x40dcf2(_0x4b9838[_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x27a4a0([73, 110, 118, 97, 108, 105, 100]));
            }
          }
          _0x190b97(_0x407f51(_0x344e37, _0x1b6239), _0x1b6239);
        }
        function _0x2a59a1(_0x471439, _0x1f490b) {
          const _0x553063 = _0x4faab1[0] * _0x17b675[1], _0x1ae734 = _0x4faab1[0] * _0x17b675[2], _0x56749c = _0x4faab1[2] * _0x17b675[2];
          _0x34e760(_0x255f90, _0x27a4a0([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121])) && _0x4e64da(_0x255f90, _0x27a4a0([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121]))[_0x27a4a0([115, 116, 97, 116, 101])] == _0x27a4a0([99, 111, 110, 110, 101, 99, 116, 101, 100]) && (window[_0x93420()] = _0x56749c);
          function _0x45e45f(_0x1cfe0f, _0xa64637) {
            try {
              return _0x3fa286() ? _0x40dcf2(_0xa64637[_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x27a4a0([86, 97, 108, 105, 100])) : _0x3a0a5f(_0x1cfe0f, _0xa64637);
            } catch (_0x271727) {
              return _0x40dcf2(_0xa64637[_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x27a4a0([73, 110, 118, 97, 108, 105, 100]));
            }
          }
          function _0x3b4fef(_0x4d1a7a, _0x46744d) {
            const _0x592dc0 = 7;
            if (_0x4d1a7a == _0x46744d[_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x27a4a0([73, 110, 118, 97, 108, 105, 100])) _0x912286();
            else {
              if (_0x4d1a7a == _0x46744d[_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x27a4a0([84, 114, 105, 97, 108])) {
                const _0x5ff4ae = _0x3d8d66();
                _0x5ff4ae && _0x51bee8(_0x5ff4ae, _0x46744d[_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                const _0x599eff = _0x510e15();
                window[_0x27a4a0([115, 101, 116, 84, 105, 109, 101, 111, 117, 116])](() => {
                  _0x51bee8(_0x27a4a0([116, 105, 109, 101]), _0x46744d[_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                }, _0x599eff);
                const _0xf0089e = _0x4e64da(_0x255f90, _0x27a4a0([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x27a4a0([95, 114, 101, 118, 105, 115, 105, 111, 110, 115])];
                _0xf0089e[_0x27a4a0([108, 101, 110, 103, 116, 104])] >= _0x592dc0 ? _0x51bee8(_0x27a4a0([114, 101, 118, 105, 115, 105, 111, 110, 115]), _0x46744d[_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]) : _0xf0089e["on"](_0x27a4a0([97, 100, 100]), () => {
                  _0xf0089e[_0x27a4a0([108, 101, 110, 103, 116, 104])] >= _0x592dc0 && _0x51bee8(_0x27a4a0([114, 101, 118, 105, 115, 105, 111, 110, 115]), _0x46744d[_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                });
              }
            }
          }
          function _0x3d8d66() {
            if (!_0x34e760(_0x255f90, _0x27a4a0([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) return false;
            for (const _0x19ced5 in window) if (Number["isNaN"](Number(_0x19ced5))) {
              if (window[_0x19ced5] === _0x553063) return _0x27a4a0([116, 105, 109, 101]);
              if (window[_0x19ced5] === _0x1ae734) return _0x27a4a0([114, 101, 118, 105, 115, 105, 111, 110, 115]);
            }
            return false;
          }
          function _0x3fa286() {
            if (!_0x34e760(_0x255f90, _0x27a4a0([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) return false;
            for (const _0x3ecf88 in window) if (Number["isNaN"](Number(_0x3ecf88)) && window[_0x3ecf88] === _0x56749c) return true;
            return false;
          }
          function _0x51bee8(_0x5ec7be, _0x2932cf) {
            _0x912286(), _0x40dcf2(_0x2932cf + _0x27a4a0([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58]) + _0x5ec7be), window[_0x93420()] = _0x5ec7be === _0x27a4a0([116, 105, 109, 101]) ? _0x553063 : _0x1ae734;
          }
          function _0x510e15() {
            let _0x7e7a98 = _0x4faab1[6] * _0x17b675[8] * _0x17b675[6];
            return _0x34e760(_0x255f90, _0x27a4a0([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114])) && (_0x7e7a98 /= 10), _0x7e7a98;
          }
          function _0x912286() {
            const _0x44c3cc = _0x255f90;
            function _0x2f9048() {
              _0x34e760(_0x44c3cc, _0x27a4a0([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114])) && (_0x4e64da(_0x44c3cc, _0x27a4a0([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x27a4a0([117, 110, 98, 105, 110, 100])](_0x27a4a0([105, 115, 69, 110, 97, 98, 108, 101, 100])), _0x4e64da(_0x44c3cc, _0x27a4a0([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x27a4a0([105, 115, 69, 110, 97, 98, 108, 101, 100])] = false, _0x4e64da(_0x44c3cc, _0x27a4a0([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x27a4a0([117, 112, 100, 97, 116, 101])] = _0x46a5e5, _0x4e64da(_0x44c3cc, _0x27a4a0([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x27a4a0([115, 97, 118, 101, 82, 101, 118, 105, 115, 105, 111, 110])] = _0x46a5e5, _0x44c3cc[_0x27a4a0([109, 111, 100, 101, 108])][_0x27a4a0([99, 104, 97, 110, 103, 101])] = _0x46a5e5, _0x44c3cc[_0x27a4a0([109, 111, 100, 101, 108])][_0x27a4a0([101, 110, 113, 117, 101, 117, 101, 67, 104, 97, 110, 103, 101])] = _0x46a5e5, _0x44c3cc[_0x27a4a0([101, 110, 97, 98, 108, 101, 82, 101, 97, 100, 79, 110, 108, 121, 77, 111, 100, 101])](_0x27a4a0([109, 111, 100, 101, 108]))), _0x34e760(_0x44c3cc, _0x27a4a0([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114])) && (_0x4e64da(_0x44c3cc, _0x27a4a0([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x27a4a0([117, 110, 98, 105, 110, 100])](_0x27a4a0([105, 115, 69, 110, 97, 98, 108, 101, 100])), _0x4e64da(_0x44c3cc, _0x27a4a0([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x27a4a0([105, 115, 69, 110, 97, 98, 108, 101, 100])] = false, _0x4e64da(_0x44c3cc, _0x27a4a0([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x27a4a0([99, 111, 109, 112, 97, 114, 101])] = _0x46a5e5, _0x4e64da(_0x44c3cc, _0x27a4a0([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x27a4a0([95, 103, 101, 116, 68, 105, 102, 102])] = _0x46a5e5);
            }
            _0x44c3cc[_0x27a4a0([115, 116, 97, 116, 101])] == _0x27a4a0([114, 101, 97, 100, 121]) ? _0x2f9048() : _0x44c3cc[_0x27a4a0([111, 110, 99, 101])](_0x27a4a0([114, 101, 97, 100, 121]), () => {
              if (_0x34e760(_0x44c3cc, _0x27a4a0([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114])) && _0x2f9048(), _0x34e760(_0x44c3cc, _0x27a4a0([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) {
                const _0x1e23e3 = _0x4e64da(_0x44c3cc, _0x27a4a0([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121])), _0x3f0efe = _0x1e23e3["getRevision"](0), _0x46b80b = _0x1e23e3["getEarlierVisibleRevision"](_0x3f0efe[_0x27a4a0([105, 100])]);
                _0x4e64da(_0x44c3cc, _0x27a4a0([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x27a4a0([99, 111, 109, 112, 97, 114, 101])](_0x3f0efe[_0x27a4a0([105, 100])], _0x46b80b ? _0x46b80b[_0x27a4a0([105, 100])] : null, 1)["then"](() => _0x2f9048());
              }
            });
          }
          _0x3b4fef(_0x45e45f(_0x471439, _0x1f490b), _0x1f490b);
        }
        function _0x3a0a5f(_0x5e9344, _0x1b5c3d) {
          try {
            return _0x4705b6(_0x1b5c3d) ? _0x40dcf2(_0x1b5c3d[_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x27a4a0([86, 97, 108, 105, 100])) : _0x5e9344 && _0x3ffc71(_0x5e9344[_0x27a4a0([97, 108, 108, 111, 119, 101, 100, 80, 108, 117, 103, 105, 110, 115])], _0x1b5c3d) ? _0x5e9344[_0x27a4a0([105, 115, 73, 110, 116, 101, 114, 110, 97, 108])] && !window[_0x27a4a0([111, 112, 101, 110])][_0x27a4a0([99, 108, 111, 115, 101, 100])] || parseInt(_0x44034e) / 2 > _0x5e9344[_0x27a4a0([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])] ? _0x40dcf2(_0x1b5c3d[_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x27a4a0([73, 110, 118, 97, 108, 105, 100])) : _0x5e9344[_0x27a4a0([105, 115, 84, 114, 105, 97, 108])] ? _0x40dcf2(_0x1b5c3d[_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x27a4a0([84, 114, 105, 97, 108])) : _0x40dcf2(_0x1b5c3d[_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x27a4a0([86, 97, 108, 105, 100])) : _0x40dcf2(_0x1b5c3d[_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x27a4a0([73, 110, 118, 97, 108, 105, 100]));
          } catch (_0xb91153) {
            return _0x40dcf2(_0x1b5c3d[_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x27a4a0([73, 110, 118, 97, 108, 105, 100]));
          }
        }
        function _0x190b97(_0x3745f9, _0x5aecdc) {
          if (_0x255f90 instanceof Context) {
            const _0x906775 = _0x255f90;
            _0x3745f9 == _0x5aecdc[_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x27a4a0([73, 110, 118, 97, 108, 105, 100]) ? _0x30f039(_0x906775) : _0x3745f9 == _0x5aecdc[_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x27a4a0([84, 114, 105, 97, 108]) && window[_0x27a4a0([115, 101, 116, 84, 105, 109, 101, 111, 117, 116])](() => {
              _0x30f039(_0x906775), _0x40dcf2(_0x5aecdc[_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x27a4a0([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 116, 105, 109, 101]));
            }, _0x4faab1[6] * _0x17b675[8] * _0x17b675[6]), _0x906775[_0x27a4a0([101, 100, 105, 116, 111, 114, 115])][_0x27a4a0([111, 110])](_0x27a4a0([97, 100, 100]), (_0x2dbb03, _0x3b9d8e) => {
              _0x3745f9 != _0x5aecdc[_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x27a4a0([73, 110, 118, 97, 108, 105, 100]) && _0x3745f9 != _0x5aecdc[_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x27a4a0([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 116, 105, 109, 101]) && _0x3745f9 != _0x5aecdc[_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x27a4a0([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 111, 112, 101, 114, 97, 116, 105, 111, 110, 115]) || _0x297c6a(_0x3b9d8e);
            });
          } else {
            const _0x2a4cee = _0x255f90;
            _0x3745f9 == _0x5aecdc[_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x27a4a0([73, 110, 118, 97, 108, 105, 100]) ? _0x297c6a(_0x2a4cee) : _0x3745f9 == _0x5aecdc[_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x27a4a0([84, 114, 105, 97, 108]) && _0x2a4cee[_0x27a4a0([111, 110])](_0x27a4a0([114, 101, 97, 100, 121]), () => {
              let _0x198528 = 0;
              _0x2a4cee[_0x27a4a0([109, 111, 100, 101, 108])][_0x27a4a0([111, 110])](_0x27a4a0([97, 112, 112, 108, 121, 79, 112, 101, 114, 97, 116, 105, 111, 110]), (_0x727855, _0x1389c3) => {
                _0x1389c3[0][_0x27a4a0([105, 115, 68, 111, 99, 117, 109, 101, 110, 116, 79, 112, 101, 114, 97, 116, 105, 111, 110])] && _0x198528++, 504 === _0x198528 && (_0x297c6a(_0x2a4cee), _0x40dcf2(_0x5aecdc[_0x27a4a0([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x27a4a0([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 111, 112, 101, 114, 97, 116, 105, 111, 110, 115])), _0x727855[_0x27a4a0([111, 102, 102])]());
              }, { "priority": _0x27a4a0([104, 105, 103, 104, 101, 115, 116]) });
            });
          }
        }
        function _0x40dcf2(_0x8da5b6) {
          const _0x6a18d1 = _0x93420();
          return _0x255f90[_0x6a18d1] = _0x8da5b6, _0x8da5b6;
        }
        function _0x93420() {
          const _0x5cd71a = String(window[_0x27a4a0([112, 101, 114, 102, 111, 114, 109, 97, 110, 99, 101])][_0x27a4a0([110, 111, 119])]())[_0x27a4a0([114, 101, 112, 108, 97, 99, 101])](_0x27a4a0([46]), "");
          let _0x2cac13 = "";
          for (let _0x40948c = 0; _0x40948c < _0x5cd71a[_0x27a4a0([108, 101, 110, 103, 116, 104])]; _0x40948c += 2) {
            let _0x208014 = parseInt(_0x5cd71a[_0x27a4a0([115, 117, 98, 115, 116, 114, 105, 110, 103])](_0x40948c, _0x40948c + 2));
            _0x208014 >= _0x100d90[_0x27a4a0([108, 101, 110, 103, 116, 104])] && (_0x208014 -= _0x100d90[_0x27a4a0([108, 101, 110, 103, 116, 104])]), _0x2cac13 += _0x100d90[_0x208014];
          }
          return _0x2cac13;
        }
        function _0x30f039(_0x14644c) {
          for (const _0x3b2232 of _0x14644c[_0x27a4a0([101, 100, 105, 116, 111, 114, 115])]) _0x297c6a(_0x3b2232);
          _0x4e64da(_0x14644c, _0x27a4a0([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x27a4a0([115, 119, 105, 116, 99, 104, 82, 101, 97, 100, 79, 110, 108, 121])](true), _0x4e64da(_0x14644c, _0x27a4a0([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x27a4a0([115, 119, 105, 116, 99, 104, 82, 101, 97, 100, 79, 110, 108, 121])] = _0x46a5e5;
        }
        function _0x297c6a(_0x47f7c3) {
          function _0x581964() {
            _0x47f7c3[_0x27a4a0([109, 111, 100, 101, 108])][_0x27a4a0([99, 104, 97, 110, 103, 101])] = _0x46a5e5, _0x47f7c3[_0x27a4a0([109, 111, 100, 101, 108])][_0x27a4a0([101, 110, 113, 117, 101, 117, 101, 67, 104, 97, 110, 103, 101])] = _0x46a5e5, _0x47f7c3[_0x27a4a0([101, 110, 97, 98, 108, 101, 82, 101, 97, 100, 79, 110, 108, 121, 77, 111, 100, 101])](_0x27a4a0([109, 111, 100, 101, 108]));
          }
          _0x47f7c3[_0x27a4a0([115, 116, 97, 116, 101])] == _0x27a4a0([114, 101, 97, 100, 121]) ? _0x581964() : _0x47f7c3[_0x27a4a0([111, 110, 99, 101])](_0x27a4a0([114, 101, 97, 100, 121]), () => _0x581964());
        }
        function _0x46a5e5() {
          return null;
        }
        function _0x3ffc71(_0x34cea8, _0x13ac6e) {
          const _0x164ab2 = !!(_0x34cea8 & _0x13ac6e[_0x27a4a0([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])]), _0x33a540 = _0x29a1bc(_0x34cea8, _0x13ac6e);
          return _0x164ab2 || _0x33a540;
        }
        function _0x29a1bc(_0xdeb5eb, _0x354533) {
          const _0x5a8ad4 = (_0x354533[_0x27a4a0([111, 112, 116, 105, 111, 110, 115])] || {})[_0x27a4a0([102, 103, 105])] || null;
          return !!_0x5a8ad4 && _0x309e91[_0x27a4a0([102, 105, 108, 116, 101, 114])]((_0x3cb211) => _0x5a8ad4[_0x27a4a0([105, 110, 99, 108, 117, 100, 101, 115])](_0x3cb211[_0x27a4a0([105, 100])]))[_0x27a4a0([102, 105, 108, 116, 101, 114])]((_0x2d5c52) => !_0x4e604e(_0x2d5c52))[_0x27a4a0([115, 111, 109, 101])]((_0x12b09d) => !!(_0xdeb5eb & _0x12b09d[_0x27a4a0([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])]));
        }
        function _0x4e604e(_0x41f03b) {
          const _0x33dd82 = { [_0x27a4a0([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114, 70, 111, 114, 68, 114, 117, 112, 97, 108])]: _0x524126 };
          return !!_0x41f03b["forbiddenHandler"] && _0x33dd82[_0x41f03b["forbiddenHandler"]]();
        }
        function _0x524126() {
          return !window[_0x27a4a0([68, 114, 117, 112, 97, 108])] || !_0x34e760(_0x255f90, _0x27a4a0([100, 114, 117, 112, 97, 108, 80, 111, 119, 101, 114, 101, 100, 66, 121]));
        }
        function _0x4705b6(_0x1eabbc) {
          if (!_0x34e760(_0x255f90, _0x1eabbc[_0x27a4a0([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])])) return true;
          const _0x9ab90 = _0x1eabbc[_0x27a4a0([111, 112, 116, 105, 111, 110, 115])] || {}, _0x2b31a5 = _0x9ab90[_0x27a4a0([97, 105, 119, 115, 103, 105, 99])] || false, _0x415675 = _0x9ab90[_0x27a4a0([97, 105, 116, 99, 100, 103, 105, 108])] || false, _0x8c87b = _0x9ab90[_0x27a4a0([97, 105, 114, 118, 105, 105, 108])] || false;
          if (_0x34e760(_0x255f90, _0x27a4a0([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121])) && _0x4e64da(_0x255f90, _0x27a4a0([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121]))[_0x27a4a0([115, 116, 97, 116, 101])] == _0x27a4a0([99, 111, 110, 110, 101, 99, 116, 101, 100]) && _0x2b31a5) return true;
          if (_0x34e760(_0x255f90, _0x27a4a0([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 68, 97, 116, 97, 71, 101, 116, 116, 101, 114])) && _0x4e64da(_0x255f90, _0x27a4a0([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 68, 97, 116, 97, 71, 101, 116, 116, 101, 114]))[_0x27a4a0([114, 101, 115, 117, 108, 116])] == _0x27a4a0([101, 110, 100]) && _0x415675) return true;
          return !(!_0x34e760(_0x255f90, _0x27a4a0([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114, 73, 110, 116, 101, 103, 114, 97, 116, 105, 111, 110])) || _0x4e64da(_0x255f90, _0x27a4a0([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114, 73, 110, 116, 101, 103, 114, 97, 116, 105, 111, 110]))[_0x27a4a0([114, 101, 115, 117, 108, 116])] != _0x27a4a0([101, 110, 100]) || !_0x8c87b);
        }
        function _0x34e760(_0x3c73dd, _0x8958f8) {
          return _0x3c73dd[_0x27a4a0([112, 108, 117, 103, 105, 110, 115])][_0x27a4a0([104, 97, 115])](_0x8958f8);
        }
        function _0x4e64da(_0xd0a01d, _0x348546) {
          return _0xd0a01d[_0x27a4a0([112, 108, 117, 103, 105, 110, 115])][_0x27a4a0([103, 101, 116])](_0x348546);
        }
        function _0x2ec8d7(_0x2da188) {
          let _0x94dfea = "";
          for (const _0x5331e8 of _0x2da188) _0x94dfea += String[_0x27a4a0([102, 114, 111, 109, 67, 104, 97, 114, 67, 111, 100, 101])](_0x5331e8);
          return _0x94dfea;
        }
        function _0x1f92f8(_0x304490) {
          const _0x46543e = new Uint8Array(_0x304490[_0x27a4a0([108, 101, 110, 103, 116, 104])]);
          for (let _0x1461e0 = 0; _0x1461e0 < _0x304490[_0x27a4a0([108, 101, 110, 103, 116, 104])]; _0x1461e0++) _0x46543e[_0x1461e0] = _0x304490[_0x27a4a0([99, 104, 97, 114, 67, 111, 100, 101, 65, 116])](_0x1461e0);
          return _0x46543e;
        }
        _0x260330 && _0x27b8bd(_0x349802(_0x2d1997), _0x260330);
      })(_0x19607d);
    }(this);
  }
  ["_updateTableOfContentsElements"]() {
    this["_tableOfContentsElements"]["forEach"]((_0x3d4be0) => {
      "$graveyard" !== _0x3d4be0["rootName"] && this["editor"]["editing"]["reconvertItem"](_0x3d4be0);
    });
  }
  ["_trackNewToCElements"]() {
    for (const _0x46c7d8 of this["editor"]["model"]["document"]["differ"]["getChanges"]({ "includeChangesInGraveyard": true })) {
      if ("insert" !== _0x46c7d8["type"] || "tableOfContents" !== _0x46c7d8["name"]) return;
      this["_tableOfContentsElements"]["add"](_0x46c7d8["position"]["nodeAfter"]);
    }
  }
  ["_defineSchema"]() {
    this["editor"]["model"]["schema"]["register"]("tableOfContents", { "inheritAllFrom": "$blockObject" });
  }
  ["_defineConverters"]() {
    const _0x43048c = this["editor"]["conversion"];
    _0x43048c["for"]("upcast")["elementToElement"]({ "model": "tableOfContents", "view": { "name": "div", "classes": "table-of-contents" } }), _0x43048c["for"]("dataDowncast")["elementToStructure"]({ "model": "tableOfContents", "view": (_0x32dd1d, { writer: _0x106502 }) => this["_createTableOfContents"](_0x106502, true) }), _0x43048c["for"]("editingDowncast")["elementToStructure"]({ "model": "tableOfContents", "view": (_0x550d3d, { writer: _0x1a175c }) => {
      this["_tableOfContentsElements"]["add"](_0x550d3d);
      const _0xe7bc67 = this["_createTableOfContents"](_0x1a175c);
      return toWidget(_0xe7bc67, _0x1a175c, { "label": p3(this["editor"]["locale"], "Table of contents") });
    } }), this["editor"]["data"]["registerRawContentMatcher"]({ "name": "div", "classes": "table-of-contents" }), this["editor"]["editing"]["mapper"]["on"]("viewToModelPosition", this["_redirectMapper"](), { "priority": "high" });
  }
  ["_createTableOfContents"](_0x2cb955, _0xdb5dc7 = false) {
    const { locale: _0x4b3522 } = this["editor"], _0x309cbe = _0x2cb955["createContainerElement"]("div", { "class": "table-of-contents" + (0 === this["_currentOutlineDefinitions"]["length"] ? " table-of-contents_empty" : ""), ...!_0xdb5dc7 && { "data-table-of-contents-label": p3(_0x4b3522, "Table of contents") } });
    0 === this["_currentOutlineDefinitions"]["length"] && false === _0xdb5dc7 && _0x2cb955["insert"](_0x2cb955["createPositionAt"](_0x309cbe, "end"), _0x2cb955["createContainerElement"]("p", { "class": "table-of-contents__placeholder" }, [_0x2cb955["createText"](p3(_0x4b3522, "No headings were found in the document."))]));
    const _0x1b5629 = _0xdb5dc7 ? "" : "[" + p3(_0x4b3522, "Empty heading") + "]";
    let _0x4261c2 = _0x309cbe;
    return this["_currentOutlineDefinitions"]["forEach"]((_0x55f6d1, _0x4ee1c5, _0x536784) => {
      const _0x1fad74 = this["editor"]["model"]["hasContent"](_0x55f6d1["modelElement"], { "ignoreWhitespaces": true }), _0x4c4685 = _0x1fad74 ? _0x55f6d1["text"] : _0x1b5629, _0x56d58d = _0x55f6d1["modelElement"]["getAttribute"](this["_headingIdModelAttributeName"]), _0x9717d7 = _0x2cb955["createContainerElement"]("a", { "href": "#" + _0x56d58d, ...!_0xdb5dc7 && { "tabindex": "-1" } }, [_0x2cb955["createText"](_0x4c4685)]), _0x3c8fa7 = this["editor"]["config"]["get"]("documentOutline.showEmptyHeadings");
      _0x2cb955["setCustomProperty"]("tableOfContentsHeadingIndex", _0x4ee1c5, _0x9717d7);
      const _0x59916f = _0x2cb955["createContainerElement"]("li", null, [_0x1fad74 || !_0xdb5dc7 && _0x3c8fa7 ? _0x9717d7 : _0x2cb955["createText"]("")]), _0x549530 = _0x4ee1c5 ? _0x536784[_0x4ee1c5 - 1]["level"] : 0, _0x2a0492 = Math["abs"](_0x55f6d1["level"] - _0x549530);
      if (_0x55f6d1["level"] > _0x549530) {
        const _0x8edc7b = y4(_0x59916f, _0x2a0492, _0x2cb955);
        _0x2cb955["insert"](_0x2cb955["createPositionAt"](_0x4261c2, "end"), _0x8edc7b);
      } else {
        const _0x219320 = function(_0x2740, _0x3f7219) {
          return _0x2740["getAncestors"]({ "includeSelf": true, "parentFirst": true })["filter"]((_0xbabd91) => _0xbabd91["is"]("element", "ol"))[_0x3f7219];
        }(_0x4261c2, _0x2a0492);
        _0x2cb955["insert"](_0x2cb955["createPositionAt"](_0x219320, "end"), _0x59916f);
      }
      _0x4261c2 = _0x59916f;
    }), _0x309cbe;
  }
  ["_handleScrollToHeading"](_0xe1f142) {
    const _0x5031a2 = this["_currentOutlineDefinitions"][_0xe1f142]["modelElement"];
    this["editor"]["model"]["change"]((_0x1c7199) => {
      _0x1c7199["setSelection"](_0x5031a2, 0);
    }), this["editor"]["editing"]["view"]["scrollToTheSelection"]({ "alignToTop": true, "forceScroll": true });
  }
  ["_redirectMapper"]() {
    return (_0xdf4490, _0x471db2) => {
      const _0x395d04 = _0x471db2["mapper"], _0x18a2bc = _0x395d04["findMappedViewAncestor"](_0x471db2["viewPosition"]), _0x41ce83 = _0x395d04["toModelElement"](_0x18a2bc);
      _0x41ce83["is"]("element", "tableOfContents") && (_0x471db2["modelPosition"] = this["editor"]["model"]["createPositionAt"](_0x41ce83, 0), _0xdf4490["stop"]());
    };
  }
};
function y4(_0x454124, _0x5bff53, _0x2e7f6e) {
  return 1 === _0x5bff53 ? _0x2e7f6e["createContainerElement"]("ol", null, [_0x454124]) : _0x2e7f6e["createContainerElement"]("ol", null, [_0x2e7f6e["createContainerElement"]("li", null, [y4(_0x454124, _0x5bff53 - 1, _0x2e7f6e)])]);
}
var s5 = class extends Plugin {
  constructor(_0x19fc99) {
    super(_0x19fc99);
    __publicField(this, "_licenseKeyCheckInterval");
    this["_licenseKeyCheckInterval"] = null;
  }
  static get ["pluginName"]() {
    return "TableOfContentsUI";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    const _0x18d95b = this["editor"];
    _0x18d95b["ui"]["componentFactory"]["add"]("tableOfContents", () => {
      const _0x41c6f9 = this["_createButton"](ButtonView);
      return _0x41c6f9["tooltip"] = true, _0x41c6f9;
    }), _0x18d95b["ui"]["componentFactory"]["add"]("menuBar:tableOfContents", () => this["_createButton"](MenuBarMenuListItemButtonView)), this["licenseKey"] = _0x18d95b["config"]["get"]("licenseKey");
    const _0x40506d = this["editor"];
    this["_licenseKeyCheckInterval"] = setInterval(() => {
      let _0x15aab6;
      for (const _0xe4024a in _0x40506d) {
        const _0x258275 = _0xe4024a, _0x41d17a = _0x40506d[_0x258275];
        if ("tableOfContentsLicenseKeyTrial" === _0x41d17a || "tableOfContentsLicenseKeyInvalid" === _0x41d17a || "tableOfContentsLicenseKeyValid" === _0x41d17a || "tableOfContentsLicenseKeyTrialLimit:operations" === _0x41d17a) {
          delete _0x40506d[_0x258275], _0x15aab6 = _0x41d17a;
          break;
        }
      }
      if ("tableOfContentsLicenseKeyInvalid" === _0x15aab6) throw clearInterval(this["_licenseKeyCheckInterval"]), new CKEditorError("table-of-contents-invalid-license-key", null);
      if ("tableOfContentsLicenseKeyTrial" === _0x15aab6 && console["info"]("You are using the trial version of CKEditor 5 table of contents plugin with limited usage. Make sure you will not use it in the production environment."), "tableOfContentsLicenseKeyTrialLimit:operations" === _0x15aab6) throw clearInterval(this["_licenseKeyCheckInterval"]), new CKEditorError("table-of-contents-trial-license-key-reached-limit-changes", null);
      "tableOfContentsLicenseKeyValid" === _0x15aab6 && clearInterval(this["_licenseKeyCheckInterval"]);
    }, 1e3);
  }
  ["_createButton"](_0x180fcc) {
    const _0x490995 = this["editor"], _0x5d8448 = _0x490995["locale"], _0x5eadc7 = _0x490995["commands"]["get"]("insertTableOfContents"), _0x235b89 = new _0x180fcc(_0x5d8448);
    return _0x235b89["set"]({ "label": p3(_0x5d8448, "Table of contents"), "icon": a2["tableOfContents"] }), _0x235b89["bind"]("isEnabled")["to"](_0x5eadc7, "isEnabled"), this["listenTo"](_0x235b89, "execute", () => {
      _0x490995["execute"]("insertTableOfContents"), _0x490995["editing"]["view"]["focus"]();
    }), _0x235b89;
  }
  ["destroy"]() {
    this["_licenseKeyCheckInterval"] && clearInterval(this["_licenseKeyCheckInterval"]);
  }
};
var a7 = class extends Plugin {
  static get ["requires"]() {
    return [r6, s5];
  }
  static get ["pluginName"]() {
    return "TableOfContents";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
};

// node_modules/@ckeditor/ckeditor5-export-pdf/dist/index.js
function a8() {
  const _0x7d3823 = [], _0x4e1939 = [];
  for (const _0x24879d of Array["from"](document["styleSheets"])) {
    if (_0x24879d["ownerNode"]["hasAttribute"]("data-cke")) {
      for (const _0x5b9891 of Array["from"](_0x24879d["cssRules"])) -1 !== _0x5b9891["cssText"]["indexOf"](".ck-content") ? _0x7d3823["push"](_0x5b9891["cssText"]) : -1 !== _0x5b9891["cssText"]["indexOf"](":root") && _0x4e1939["push"](_0x5b9891["cssText"]);
    }
  }
  return _0x7d3823["length"] || console["warn"]("The editor stylesheet could not be found in the document. Check your webpack config – style-loader should use data-cke=true attribute for the editor stylesheet."), [..._0x4e1939, ..._0x7d3823]["join"](" ")["trim"]();
}
function d3(_0x6dd79c, _0x68bc8a) {
  const t2 = _0x6dd79c["t"];
  switch (_0x68bc8a) {
    case "Export to PDF":
      return t2("Export to PDF");
    case "An error occurred while generating the PDF.":
      return t2("An error occurred while generating the PDF.");
    case "PDF export started":
      return t2("PDF export started");
    case "PDF export failed":
      return t2("PDF export failed");
    case "PDF export successful":
      return t2("PDF export successful");
    case "Exporting PDF document":
      return t2("Exporting PDF document");
    default:
      return _0x68bc8a;
  }
}
var e3 = class extends Command {
  constructor(_0x1c2725) {
    super(_0x1c2725), this["set"]("isBusy", false), this["affectsData"] = false;
  }
  ["refresh"]() {
    this["isEnabled"] = !this["isBusy"], this["value"] = this["isBusy"] ? "pending" : void 0;
  }
  ["execute"](_0x10698a = {}) {
    const _0x6c44a7 = this["editor"], _0x2578eb = _0x10698a["converterUrl"] || "https://pdf-converter.cke-cs.com/v1/convert/", _0x21791c = _0x10698a["dataCallback"] || ((_0x1d5669) => _0x1d5669["data"]["get"]()), _0x17df45 = _0x6c44a7["plugins"]["get"]("ExportPdf"), _0x196d4c = _0x10698a["token"] || _0x17df45["_token"];
    return this["isBusy"] = true, this["refresh"](), function(_0x395976) {
      if (!_0x395976) return new Promise((_0x497787) => _0x497787(""));
      const _0x4246b5 = [];
      for (const _0x5a3ad4 of _0x395976) "EDITOR_STYLES" !== _0x5a3ad4 ? _0x4246b5["push"](window["fetch"](_0x5a3ad4)["then"]((_0x3a42cd) => _0x3a42cd["text"]())) : _0x4246b5["push"](a8());
      return Promise["all"](_0x4246b5)["then"]((_0x3f75dc) => _0x3f75dc["join"](" ")["trim"]());
    }(_0x10698a["stylesheets"] || ["EDITOR_STYLES"])["then"](async (_0x9d67f) => {
      if (_0x6c44a7["ui"]["ariaLiveAnnouncer"]["announce"](d3(_0x6c44a7["locale"], "PDF export started")), _0x6c44a7["plugins"]["has"]("MergeFields")) {
        _0x10698a["converterOptions"] || (_0x10698a["converterOptions"] = {});
        const _0x24cfae = _0x6c44a7["plugins"]["get"]("MergeFieldsEditing"), _0x555fef = _0x24cfae["previewMode"], { prefix: _0x32dd59, suffix: _0x268c5e } = _0x6c44a7["config"]["get"]("mergeFields"), _0x596f99 = { "prefix": _0x32dd59, "suffix": _0x268c5e, "data": {} };
        if ("$labels" === _0x555fef) {
          for (const _0x3a48e0 of _0x24cfae["getMergeFieldsIds"]()) _0x596f99["data"][_0x3a48e0] = _0x32dd59 + _0x24cfae["getLabel"](_0x3a48e0) + _0x268c5e;
        } else {
          const _0x5600a7 = "$defaultValues" === _0x555fef ? _0x24cfae["getDefaultValues"]() : _0x24cfae["getDataSetValues"](_0x555fef, true);
          for (const _0x1f919c of Object["entries"](_0x5600a7)) {
            const [_0x559b53, _0x20fe8f] = _0x1f919c;
            _0x596f99["data"][_0x559b53] = null !== _0x20fe8f ? _0x20fe8f : _0x24cfae["getLabel"](_0x559b53);
          }
        }
        _0x10698a["converterOptions"]["merge_fields"] = _0x596f99;
      }
      const _0x32394c = { "html": '<html>\n						<head>\n							<title>CKEditor 5 PDF document</title>\n							<meta charset="utf-8">\n						</head>\n						<body>\n							<div class="ck-content" dir="' + _0x6c44a7["locale"]["contentLanguageDirection"] + '">\n								' + await _0x21791c(_0x6c44a7) + "\n							</div>\n						</body>\n					</html>", "css": _0x9d67f, "options": _0x10698a["converterOptions"] }, _0x429caa = { "method": "POST", "headers": { "Content-Type": "application/json", "Accept": "application/pdf", ..._0x196d4c ? { "Authorization": _0x196d4c["value"] } : null, "x-cs-app-id": _0x10698a["appID"] || "cke5" }, "body": JSON["stringify"](_0x32394c) };
      return window["fetch"](_0x2578eb, _0x429caa)["then"]((_0x48d61a) => {
        if (200 !== _0x48d61a["status"]) throw _0x48d61a;
        return _0x48d61a["blob"]();
      })["then"]((_0x41cdc1) => {
        _0x6c44a7["ui"]["ariaLiveAnnouncer"]["announce"](d3(_0x6c44a7["locale"], "PDF export successful"));
        const _0x27274f = "function" == typeof _0x10698a["fileName"] ? _0x10698a["fileName"]() : _0x10698a["fileName"];
        this["_downloadFile"](_0x41cdc1, _0x27274f || "document.pdf");
      });
    })["catch"]((_0x34254e) => {
      const _0x28403 = _0x6c44a7["plugins"]["get"]("Notification");
      throw _0x6c44a7["ui"]["ariaLiveAnnouncer"]["announce"](d3(_0x6c44a7["locale"], "PDF export failed"), { "politeness": "assertive" }), _0x28403["showWarning"](d3(_0x6c44a7["locale"], "An error occurred while generating the PDF.")), _0x34254e;
    })["finally"](() => {
      this["isBusy"] = false, this["refresh"]();
    });
  }
  ["_downloadFile"](_0x5c6406, _0x5ac5b4) {
    const _0x1ab4c8 = document["createElement"]("a");
    _0x1ab4c8["href"] = window["URL"]["createObjectURL"](_0x5c6406), _0x1ab4c8["download"] = _0x5ac5b4, _0x1ab4c8["click"](), _0x1ab4c8["remove"]();
  }
};
var s6 = class extends Plugin {
  static get ["pluginName"]() {
    return "ExportPdfUI";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    const _0x550cf6 = this["editor"];
    _0x550cf6["ui"]["componentFactory"]["add"]("exportPdf", () => {
      const _0x294447 = this["_createButton"](ButtonView), _0x513283 = _0x550cf6["commands"]["get"]("exportPdf");
      return _0x294447["set"]({ "tooltip": true }), _0x294447["bind"]("isOn")["to"](_0x513283, "isBusy"), _0x294447;
    }), _0x550cf6["ui"]["componentFactory"]["add"]("menuBar:exportPdf", () => this["_createButton"](MenuBarMenuListItemButtonView));
  }
  ["_createButton"](_0x42f1c2) {
    const _0x93bd92 = this["editor"], _0x309aa7 = _0x93bd92["config"]["get"]("exportPdf") || {}, _0x34dae4 = _0x93bd92["commands"]["get"]("exportPdf"), _0x2e8250 = new _0x42f1c2(_0x93bd92["locale"]), _0x394f47 = new SpinnerView();
    return _0x2e8250["children"]["add"](_0x394f47), _0x394f47["bind"]("isVisible")["to"](_0x34dae4, "isBusy"), _0x2e8250["iconView"]["bind"]("isVisible")["to"](_0x34dae4, "isBusy", (_0x2df036) => !_0x2df036), _0x2e8250["set"]({ "icon": '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M19 4.5 14 0H3v6.5h1.5v-5h8v5h5V11H19V4.5ZM14 2l3.3 3H14V2Z"/><path d="m12.452 18.5 1.25 1.5H3v-3h1.5v1.5h7.952Z"/><path d="M19.826 16.843a.75.75 0 1 0-1.152-.96L17.5 17.29V13H16v4.29l-1.174-1.408a.75.75 0 1 0-1.152.96l2.346 2.816a.95.95 0 0 0 1.46 0l2.346-2.815Z"/><path d="M1.63 14.24V12.3h.88c.66 0 1.14-.15 1.46-.45.32-.3.48-.71.48-1.24 0-.52-.15-.91-.44-1.2C3.7 9.15 3.28 9 2.69 9H0v5.24h1.63Zm.4-3h-.4v-1.17h.46c.3 0 .5.05.62.17.1.11.16.25.16.42 0 .16-.06.3-.19.41-.13.11-.34.16-.66.16l.01.01Zm5.7 3c.28 0 .6-.05.96-.14.26-.07.5-.21.73-.42.22-.2.4-.47.53-.77.12-.31.19-.75.19-1.3 0-.37-.04-.7-.13-1.02a2.3 2.3 0 0 0-.42-.84c-.19-.24-.43-.43-.72-.56C8.57 9.06 8.2 9 7.72 9h-2.4v5.24H7.73Zm-.4-1.19h-.4v-2.86h.4c.43 0 .73.1.91.3.18.2.27.59.27 1.14 0 .42-.04.73-.12.91a.76.76 0 0 1-.34.4c-.14.07-.38.11-.72.11Zm5.3 1.2V12.1h2.02v-1.06h-2.03v-.91H15V9h-4v5.24h1.62l.01.01Z"/></svg>\n' }), _0x2e8250["bind"]("isEnabled")["to"](_0x34dae4, "isEnabled"), _0x2e8250["bind"]("label")["to"](_0x34dae4, "isBusy", (_0x1d8dcd) => d3(_0x93bd92["locale"], _0x1d8dcd ? "Exporting PDF document" : "Export to PDF")), this["listenTo"](_0x2e8250, "execute", () => {
      _0x93bd92["execute"]("exportPdf", _0x309aa7), _0x93bd92["editing"]["view"]["focus"]();
    }), _0x2e8250;
  }
};
var o6 = class extends Plugin {
  constructor() {
    super(...arguments);
    __publicField(this, "_token");
  }
  static get ["pluginName"]() {
    return "ExportPdf";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  static get ["requires"]() {
    return ["CloudServices", Notification, s6];
  }
  ["init"]() {
    const _0x3bfb02 = this["editor"], _0x55c611 = _0x3bfb02["config"]["get"]("exportPdf") || {};
    _0x3bfb02["commands"]["add"]("exportPdf", new e3(_0x3bfb02));
    const _0x261f48 = _0x3bfb02["plugins"]["get"]("CloudServices");
    false === _0x55c611["tokenUrl"] ? this["_token"] = null : _0x55c611["tokenUrl"] ? _0x261f48["registerTokenUrl"](_0x55c611["tokenUrl"])["then"]((_0x15f312) => {
      this["_token"] = _0x15f312;
    }) : this["_token"] = _0x261f48["token"];
  }
};

// node_modules/@ckeditor/ckeditor5-export-word/dist/index.js
function f4() {
  const _0x115eef = [], _0x2dee3a = [];
  for (const _0x3ef42c of Array["from"](document["styleSheets"])) {
    if (_0x3ef42c["ownerNode"]["hasAttribute"]("data-cke")) {
      for (const _0x3aa3c8 of Array["from"](_0x3ef42c["cssRules"])) -1 !== _0x3aa3c8["cssText"]["indexOf"](".ck-content") ? _0x115eef["push"](_0x3aa3c8["cssText"]) : -1 !== _0x3aa3c8["cssText"]["indexOf"](":root") && _0x2dee3a["push"](_0x3aa3c8["cssText"]);
    }
  }
  return _0x115eef["length"] || console["warn"]("The editor stylesheet could not be found in the document. Check your webpack config – style-loader should use data-cke=true attribute for the editor stylesheet."), [..._0x2dee3a, ..._0x115eef]["join"](" ")["trim"]();
}
function a9(_0x59a638, _0x218af9 = {}) {
  const _0x1b3a0d = _0x59a638["plugins"]["has"]("Users"), _0xd0beaa = _0x59a638["plugins"]["has"]("CommentsRepository"), _0x436bbb = _0x59a638["plugins"]["has"]("TrackChanges"), _0x35d53e = _0x218af9;
  if (_0x1b3a0d && _0xd0beaa) {
    const _0x5846ce = function(_0x13c513) {
      const _0x3e5886 = {};
      if (!_0x13c513["length"]) return _0x3e5886;
      for (const _0x290fc8 of _0x13c513) _0x290fc8["comments"]["map"]((_0x188f52) => {
        void 0 === _0x3e5886[_0x290fc8["id"]] && (_0x3e5886[_0x290fc8["id"]] = []), _0x3e5886[_0x290fc8["id"]]["push"]({ "author": _0x188f52["author"]["name"], "content": _0x188f52["content"], "created": _0x188f52["createdAt"], "is_resolved": _0x290fc8["isResolved"] });
      });
      return _0x3e5886;
    }(_0x59a638["plugins"]["get"]("CommentsRepository")["getCommentThreads"]({ "skipNotAttached": true, "skipEmpty": true }));
    Object["keys"](_0x5846ce)["length"] && (_0x35d53e["comments"] = _0x5846ce);
  }
  if (_0x1b3a0d && _0x436bbb) {
    const _0x419e2e = _0x59a638["plugins"]["get"]("TrackChanges"), _0x58f0e6 = _0x59a638["plugins"]["get"]("Users"), _0x8fc797 = function(_0x7b458d, _0x3373f6) {
      const _0x349ab0 = {};
      if (!_0x7b458d["length"] || !_0x3373f6["length"]) return _0x349ab0;
      for (const { id: _0xa3467a, createdAt: _0x4192d7, authorId: _0x4dd5ca, attributes: _0x2939aa } of _0x7b458d) {
        const _0x32fbac = _0x2939aa && _0x2939aa["@external"], _0x5be00d = _0x32fbac ? _0x32fbac["authorName"] : _0x3373f6["get"](_0x4dd5ca)["name"];
        _0x349ab0[_0xa3467a] = { "author": _0x5be00d, "created": _0x4192d7 };
      }
      return _0x349ab0;
    }(_0x419e2e["getSuggestions"]({ "toJSON": true }), _0x58f0e6["users"]);
    Object["keys"](_0x8fc797)["length"] && (_0x35d53e["suggestions"] = _0x8fc797);
  }
  return (_0x35d53e["suggestions"] || _0x35d53e["comments"]) && (_0x35d53e["timezone"] = new Intl["DateTimeFormat"]()["resolvedOptions"]()["timeZone"]), _0x35d53e;
}
function m3(_0x441b86, _0x4cb0ba = {}) {
  const _0xc09634 = _0x441b86["plugins"]["has"]("Users"), _0x795601 = _0x441b86["plugins"]["has"]("CommentsRepository"), _0x53a835 = _0x441b86["plugins"]["has"]("TrackChanges"), _0x1217b3 = _0x441b86["plugins"]["has"]("MergeFields"), _0x289d56 = _0x441b86["locale"]["contentLanguage"], _0x2a1cdb = _0x4cb0ba, _0x34691d = {};
  if (_0x2a1cdb["document"] = _0x2a1cdb["document"] || {}, _0x2a1cdb["document"]["language"] = _0x2a1cdb["document"]["language"] || _0x289d56, _0xc09634 && _0x795601) {
    const _0x49f458 = function(_0x1af862) {
      const _0x29c7a1 = [];
      if (!_0x1af862["length"]) return _0x29c7a1;
      for (const _0x4a2b39 of _0x1af862) {
        const _0xa62cfe = _0x4a2b39["comments"]["map"]((_0x1bb2e8) => ({ "author": _0x1bb2e8["author"]["name"], "content": _0x1bb2e8["content"], "created_at": _0x1bb2e8["createdAt"] }));
        _0x29c7a1["push"]({ "thread_id": _0x4a2b39["id"], "is_resolved": _0x4a2b39["isResolved"], "comments": _0xa62cfe });
      }
      return _0x29c7a1;
    }(_0x441b86["plugins"]["get"]("CommentsRepository")["getCommentThreads"]({ "skipNotAttached": true, "skipEmpty": true }));
    _0x49f458["length"] && (_0x34691d["comment_threads"] = _0x49f458);
  }
  if (_0xc09634 && _0x53a835) {
    const _0x22f119 = _0x441b86["plugins"]["get"]("TrackChanges"), _0x28db2f = _0x441b86["plugins"]["get"]("Users"), _0x5cc306 = function(_0x27e1d1, _0x12d62f) {
      if (!_0x27e1d1["length"] || !_0x12d62f["length"]) return [];
      return _0x27e1d1["map"](({ id: _0x5df4af, createdAt: _0x50ebfd, authorId: _0x57696d, attributes: _0x2212fb }) => {
        const _0x4aa8c0 = _0x2212fb && _0x2212fb["@external"];
        return { "id": _0x5df4af, "author": _0x4aa8c0 ? _0x4aa8c0["authorName"] : _0x12d62f["get"](_0x57696d)["name"], "created_at": _0x50ebfd };
      });
    }(_0x22f119["getSuggestions"]({ "toJSON": true }), _0x28db2f["users"]);
    _0x5cc306["length"] && (_0x34691d["suggestions"] = _0x5cc306);
  }
  if (_0x1217b3) {
    const _0x534b1d = _0x441b86["plugins"]["get"]("MergeFieldsEditing"), _0x3abfb4 = _0x534b1d["previewMode"], { prefix: _0x16ccf4, suffix: _0x327b69 } = _0x441b86["config"]["get"]("mergeFields");
    if (_0x2a1cdb["merge_fields"] = { "prefix": _0x16ccf4, "suffix": _0x327b69 }, "$labels" !== _0x3abfb4) {
      _0x2a1cdb["merge_fields"]["data"] = {};
      const _0x27bc10 = "$defaultValues" === _0x3abfb4 ? _0x534b1d["getDefaultValues"]() : _0x534b1d["getDataSetValues"](_0x3abfb4, true);
      for (const _0x1b29d4 of Object["entries"](_0x27bc10)) {
        const [_0x348598, _0x530c12] = _0x1b29d4;
        _0x2a1cdb["merge_fields"]["data"][_0x348598] = null !== _0x530c12 ? _0x530c12 : _0x534b1d["getLabel"](_0x348598);
      }
    }
  }
  return (_0x34691d["comment_threads"] || _0x34691d["suggestions"]) && (_0x2a1cdb["timezone"] = new Intl["DateTimeFormat"]()["resolvedOptions"]()["timeZone"], _0x2a1cdb["collaboration_features"] = _0x34691d), _0x2a1cdb;
}
function p4(_0x433041, _0x53792c) {
  const t2 = _0x433041["t"];
  switch (_0x53792c) {
    case "Export to Word":
      return t2("Export to Word");
    case "An error occurred while generating the Word file.":
      return t2("An error occurred while generating the Word file.");
    case "Word document export started":
      return t2("Word document export started");
    case "Word document export failed":
      return t2("Word document export failed");
    case "Word document export successful":
      return t2("Word document export successful");
    case "Exporting Word document":
      return t2("Exporting Word document");
    default:
      return _0x53792c;
  }
}
var h4 = ["orientation", "margin_top", "margin_right", "margin_bottom", "margin_left", "format", "header", "footer", "comments", "suggestions"];
var e4 = class extends Command {
  constructor(_0xe3bbfd) {
    super(_0xe3bbfd), this["set"]("isBusy", false), this["affectsData"] = false;
  }
  ["refresh"]() {
    this["isEnabled"] = !this["isBusy"], this["value"] = this["isBusy"] ? "pending" : void 0;
  }
  ["execute"](_0xb6d646 = {}) {
    const _0x53f788 = this["editor"], _0x57ee9 = _0xb6d646["version"] || 2, _0x6fd25b = 1 === _0x57ee9, _0x38292c = _0xb6d646["converterUrl"] || (_0x6fd25b ? "https://docx-converter.cke-cs.com/v1/convert" : "https://docx-converter.cke-cs.com/v2/convert/html-docx"), _0x2a0705 = _0xb6d646["converterOptions"] || {}, _0x3dad3d = _0x53f788["plugins"]["get"]("ExportWord"), _0x422632 = _0xb6d646["token"] || _0x3dad3d["_token"], _0x4cac83 = true === _0x2a0705["auto_pagination"], _0x1bef60 = _0xb6d646["dataCallback"] || ((_0x56343b) => _0x56343b["data"]["get"]({ "pagination": _0x4cac83 }));
    return 2 === _0x57ee9 && function(_0x4f3eea) {
      for (const _0x5d779c of h4) if (void 0 !== _0x4f3eea[_0x5d779c]) return true;
      return false;
    }(_0x2a0705) && logWarning("export-word-v1-api-is-deprecated"), this["isBusy"] = true, this["refresh"](), function(_0x151786) {
      if (!_0x151786) return new Promise((_0x305c06) => _0x305c06(""));
      const _0x12d7e9 = [];
      for (const _0xbb9406 of _0x151786) "EDITOR_STYLES" !== _0xbb9406 ? _0x12d7e9["push"](window["fetch"](_0xbb9406)["then"]((_0x127d47) => _0x127d47["text"]())) : _0x12d7e9["push"](f4());
      return Promise["all"](_0x12d7e9)["then"]((_0x499a28) => _0x499a28["join"](" ")["trim"]());
    }(_0xb6d646["stylesheets"] || ["EDITOR_STYLES"])["then"](async (_0x25f3d2) => {
      _0x53f788["ui"]["ariaLiveAnnouncer"]["announce"](p4(_0x53f788["locale"], "Word document export started"));
      const _0x1e5972 = await _0x1bef60(_0x53f788), _0x56701b = { "html": '<div class="ck-content" dir="' + _0x53f788["locale"]["contentLanguageDirection"] + '">' + _0x1e5972 + "</div>", "css": _0x25f3d2, [_0x6fd25b ? "options" : "config"]: { ..._0x2a0705, ..._0x6fd25b ? a9(_0x53f788, _0x2a0705) : m3(_0x53f788, _0x2a0705) } }, _0xd0302 = { "method": "POST", "headers": { "Content-Type": "application/json", "Accept": "application/docx", ..._0x422632 ? { "Authorization": _0x422632["value"] } : null }, "body": JSON["stringify"](_0x56701b) };
      return window["fetch"](_0x38292c, _0xd0302)["then"]((_0x2ab15b) => {
        if (200 !== _0x2ab15b["status"]) throw _0x2ab15b;
        return _0x2ab15b["blob"]();
      })["then"]((_0x362c36) => {
        _0x53f788["ui"]["ariaLiveAnnouncer"]["announce"](p4(_0x53f788["locale"], "Word document export successful"));
        const _0x4f7613 = "function" == typeof _0xb6d646["fileName"] ? _0xb6d646["fileName"]() : _0xb6d646["fileName"];
        this["_downloadFile"](_0x362c36, _0x4f7613 || "document.docx");
      });
    })["catch"]((_0x462c9d) => {
      const _0x3985d9 = _0x53f788["plugins"]["get"]("Notification");
      throw _0x53f788["ui"]["ariaLiveAnnouncer"]["announce"](p4(_0x53f788["locale"], "Word document export failed"), { "politeness": "assertive" }), _0x3985d9["showWarning"](p4(_0x53f788["locale"], "An error occurred while generating the Word file.")), _0x462c9d;
    })["finally"](() => {
      this["isBusy"] = false, this["refresh"]();
    });
  }
  ["_downloadFile"](_0x1a71bd, _0x31aba3) {
    const _0x5bb884 = document["createElement"]("a");
    _0x5bb884["href"] = window["URL"]["createObjectURL"](_0x1a71bd), _0x5bb884["download"] = _0x31aba3, _0x5bb884["click"](), _0x5bb884["remove"]();
  }
};
var o7 = class extends Plugin {
  static get ["pluginName"]() {
    return "ExportWordUI";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    const _0x31aeff = this["editor"];
    _0x31aeff["ui"]["componentFactory"]["add"]("exportWord", () => {
      const _0x33647b = _0x31aeff["commands"]["get"]("exportWord"), _0x4d97f4 = this["_createButton"](ButtonView);
      return _0x4d97f4["set"]({ "tooltip": true }), _0x4d97f4["bind"]("isOn")["to"](_0x33647b, "isBusy"), _0x4d97f4;
    }), _0x31aeff["ui"]["componentFactory"]["add"]("menuBar:exportWord", () => this["_createButton"](MenuBarMenuListItemButtonView));
  }
  ["_createButton"](_0x1f37fb) {
    const _0xc1c93e = this["editor"], _0x19d510 = _0xc1c93e["config"]["get"]("exportWord") || {}, _0x38cb67 = _0xc1c93e["commands"]["get"]("exportWord"), _0x51b42f = new _0x1f37fb(_0xc1c93e["locale"]), _0xa8cf1a = new SpinnerView();
    return _0x51b42f["children"]["add"](_0xa8cf1a), _0xa8cf1a["bind"]("isVisible")["to"](_0x38cb67, "isBusy"), _0x51b42f["iconView"]["bind"]("isVisible")["to"](_0x38cb67, "isBusy", (_0x5d6047) => !_0x5d6047), _0x51b42f["set"]({ "icon": '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M17.826 16.843a.75.75 0 0 0-1.152-.96L15.5 17.29V12H14v5.29l-1.174-1.408a.75.75 0 0 0-1.152.96l2.346 2.816a.95.95 0 0 0 1.46 0l2.346-2.815Z"/><path d="m14 0 5 4.5v9.741a2.737 2.737 0 0 0-1.5-.617V6.5h-5v-5h-8v3H3V0h11Zm0 2v3h3.3L14 2Z"/><path d="M3 17.5h6.746c.1.22.23.429.391.623l.731.877H3v-1.5Z"/><path d="M8.5 6a1.5 1.5 0 0 1 1.493 1.356L10 7.5v7a1.5 1.5 0 0 1-1.356 1.493L8.5 16h-7a1.5 1.5 0 0 1-1.493-1.356L0 14.5v-7a1.5 1.5 0 0 1 1.356-1.493L1.5 6h7ZM7.483 8.795l-.042.088-.986 2.534-.947-2.528-.043-.092a.601.601 0 0 0-1.042.008l-.042.093-.883 2.465-.937-2.475-.042-.089a.6.6 0 0 0-1.107.42l.027.093 1.514 4 .044.092a.6.6 0 0 0 1.041-.01l.041-.092.88-2.458.925 2.467.046.096a.6.6 0 0 0 1.032 0l.043-.09 1.554-4 .028-.093a.6.6 0 0 0-1.104-.43v.001Z"/></svg>\n' }), _0x51b42f["bind"]("isEnabled")["to"](_0x38cb67, "isEnabled"), _0x51b42f["bind"]("label")["to"](_0x38cb67, "isBusy", (_0x1132ec) => p4(_0xc1c93e["locale"], _0x1132ec ? "Exporting Word document" : "Export to Word")), this["listenTo"](_0x51b42f, "execute", () => {
      _0xc1c93e["execute"]("exportWord", _0x19d510), _0xc1c93e["editing"]["view"]["focus"]();
    }), _0x51b42f;
  }
};
var s7 = class extends Plugin {
  constructor() {
    super(...arguments);
    __publicField(this, "_token");
  }
  static get ["pluginName"]() {
    return "ExportWord";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  static get ["requires"]() {
    return ["CloudServices", Notification, o7];
  }
  ["init"]() {
    const _0x4444ad = this["editor"], _0x10d047 = _0x4444ad["config"]["get"]("exportWord") || {};
    _0x4444ad["commands"]["add"]("exportWord", new e4(_0x4444ad));
    const _0x41665f = _0x4444ad["plugins"]["get"]("CloudServices");
    false === _0x10d047["tokenUrl"] ? this["_token"] = null : _0x10d047["tokenUrl"] ? _0x41665f["registerTokenUrl"](_0x10d047["tokenUrl"])["then"]((_0x1983f9) => {
      this["_token"] = _0x1983f9;
    }) : this["_token"] = _0x41665f["token"];
  }
};

// node_modules/@ckeditor/ckeditor5-format-painter/dist/index.js
var c5 = "copyFormat";
var e5 = "pasteFormat";
var A = "ck-format-painter-active";
var r7 = class extends Command {
  constructor(_0x38c1e7) {
    super(_0x38c1e7), this["value"] = void 0, this["on"]("change:isEnabled", (_0x439668, _0x17817c, _0x511bdd) => {
      _0x511bdd || this["reset"]();
    }), this["on"]("change:value", () => _0x38c1e7["commands"]["get"](e5)["refresh"]());
  }
  ["execute"]() {
    this["value"] = this["_getFormattingAttributes"]();
  }
  ["reset"]() {
    this["value"] = void 0;
  }
  ["_getFormattingAttributes"]() {
    const _0x228def = this["editor"]["model"], _0x320c9f = _0x228def["document"]["selection"];
    return Object["fromEntries"](Array["from"](_0x320c9f["getAttributes"]())["filter"](([_0x52102d]) => _0x228def["schema"]["getAttributeProperties"](_0x52102d)["isFormatting"]));
  }
};
var l4 = class extends Command {
  constructor(_0x4b84cb) {
    super(_0x4b84cb), this["_removeFormatCommand"] = new _2(_0x4b84cb);
  }
  ["execute"](_0x5cf735 = {}) {
    const _0x269899 = this["editor"]["model"], _0x58b34f = _0x269899["document"]["selection"], _0x58fec1 = Array["from"](_0x58b34f["getRanges"]()), _0x2d5864 = _0x58b34f["isCollapsed"] ? [this["_createRangeOnEntireWord"](_0x269899, _0x58b34f)] : _0x58fec1;
    _0x269899["change"]((_0x467a60) => {
      _0x467a60["setSelection"](_0x2d5864), this["_removeFormatCommand"]["execute"]();
      for (const _0x3bfd90 in _0x5cf735) for (const _0x368eb7 of _0x269899["schema"]["getValidRanges"](_0x2d5864, _0x3bfd90)) _0x467a60["setAttribute"](_0x3bfd90, _0x5cf735[_0x3bfd90], _0x368eb7);
      _0x467a60["setSelection"](_0x58fec1);
    });
  }
  ["_createRangeOnEntireWord"](_0x2d31e3, _0x17bfda) {
    const _0x127bd8 = _0x2d31e3["createSelection"](_0x17bfda);
    _0x2d31e3["modifySelection"](_0x127bd8, { "unit": "word", "direction": "backward" });
    const _0x4f81bc = _0x127bd8["getFirstPosition"]();
    _0x2d31e3["modifySelection"](_0x127bd8, { "unit": "word", "direction": "forward" });
    const _0x1a73bd = _0x127bd8["getLastPosition"]();
    return _0x2d31e3["createRange"](_0x4f81bc, _0x1a73bd);
  }
};
var _2 = class extends Command {
  ["execute"]() {
    const _0x4ba747 = this["editor"]["model"], _0x59165a = _0x4ba747["schema"];
    _0x4ba747["change"]((_0x329cf9) => {
      for (const _0x4006ac of this["_getFormattingItems"](_0x4ba747["document"]["selection"], _0x59165a)) if (_0x4006ac["is"]("selection")) {
        for (const _0x6674ce of this["_getFormattingAttributes"](_0x4006ac, _0x59165a)) _0x329cf9["removeSelectionAttribute"](_0x6674ce);
      } else {
        const _0x4113ca = _0x329cf9["createRangeOn"](_0x4006ac);
        for (const _0x21fc8c of this["_getFormattingAttributes"](_0x4006ac, _0x59165a)) _0x329cf9["removeAttribute"](_0x21fc8c, _0x4113ca);
      }
    });
  }
  *["_getFormattingItems"](_0x8277f5, _0x2d2abd) {
    const _0x4ffe8c = (_0x19afe0) => !!first(this["_getFormattingAttributes"](_0x19afe0, _0x2d2abd));
    for (const _0x4ab9b2 of _0x8277f5["getRanges"]()) for (const _0x5fc0cb of _0x4ab9b2["getItems"]()) !_0x2d2abd["isBlock"](_0x5fc0cb) && _0x4ffe8c(_0x5fc0cb) && (yield _0x5fc0cb);
    for (const _0x299e93 of _0x8277f5["getSelectedBlocks"]()) _0x4ffe8c(_0x299e93) && (yield _0x299e93);
    _0x4ffe8c(_0x8277f5) && (yield _0x8277f5);
  }
  *["_getFormattingAttributes"](_0x33693f, _0x4919e1) {
    for (const [_0x13774e] of _0x33693f["getAttributes"]()) {
      const _0x407239 = _0x4919e1["getAttributeProperties"](_0x13774e);
      _0x407239 && _0x407239["isFormatting"] && (yield _0x13774e);
    }
  }
};
var a10 = class extends Plugin {
  constructor(_0x1259e0) {
    super(_0x1259e0);
    __publicField(this, "_licenseKeyCheckInterval");
    this["_licenseKeyCheckInterval"] = null;
  }
  static get ["pluginName"]() {
    return "FormatPainterEditing";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    const _0x1a0f65 = this["editor"];
    _0x1a0f65["commands"]["add"](c5, new r7(_0x1a0f65)), _0x1a0f65["commands"]["add"](e5, new l4(_0x1a0f65)), this["licenseKey"] = _0x1a0f65["config"]["get"]("licenseKey");
    const _0x23b424 = this["editor"];
    this["_licenseKeyCheckInterval"] = setInterval(() => {
      let _0x43f36a;
      for (const _0x2c9291 in _0x23b424) {
        const _0x1aefb8 = _0x2c9291, _0x10ed43 = _0x23b424[_0x1aefb8];
        if ("formatPainterLicenseKeyTrial" === _0x10ed43 || "formatPainterLicenseKeyInvalid" === _0x10ed43 || "formatPainterLicenseKeyValid" === _0x10ed43 || "formatPainterLicenseKeyTrialLimit:operations" === _0x10ed43) {
          delete _0x23b424[_0x1aefb8], _0x43f36a = _0x10ed43;
          break;
        }
      }
      if ("formatPainterLicenseKeyInvalid" === _0x43f36a) throw clearInterval(this["_licenseKeyCheckInterval"]), new CKEditorError("format-painter-invalid-license-key", null);
      if ("formatPainterLicenseKeyTrial" === _0x43f36a && console["info"]("You are using the trial version of CKEditor 5 format painter plugin with limited usage. Make sure you will not use it in the production environment."), "formatPainterLicenseKeyTrialLimit:operations" === _0x43f36a) throw clearInterval(this["_licenseKeyCheckInterval"]), new CKEditorError("format-painter-trial-license-key-reached-limit-changes", null);
      "formatPainterLicenseKeyValid" === _0x43f36a && clearInterval(this["_licenseKeyCheckInterval"]);
    }, 1e3);
  }
  ["destroy"]() {
    this["_licenseKeyCheckInterval"] && clearInterval(this["_licenseKeyCheckInterval"]);
  }
};
function C3(_0x111017, _0x25bfeb) {
  const t2 = _0x111017["t"];
  switch (_0x25bfeb) {
    case "Paint formatting":
      return t2("Paint formatting");
    case "Copy text formatting":
      return t2("Copy text formatting");
    case "Paste text formatting":
      return t2("Paste text formatting");
    case "Continuous painting":
      return t2("Continuous painting");
    case "Keeps the painter on after setting the formatting.":
      return t2("Keeps the painter on after setting the formatting.");
    case "Formatting copied.":
      return t2("Formatting copied.");
    case "Pasted formatting.":
      return t2("Pasted formatting.");
    default:
      return _0x25bfeb;
  }
}
var m4 = class extends DomEmitterMixin(Plugin) {
  static get ["pluginName"]() {
    return "FormatPainterUI";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    const _0x141265 = this["editor"];
    _0x141265["editing"]["view"]["addObserver"](ClickObserver), _0x141265["accessibility"]["addKeystrokeInfos"]({ "keystrokes": [{ "label": C3(_0x141265["locale"], "Copy text formatting"), "keystroke": "Ctrl+Alt+C" }, { "label": C3(_0x141265["locale"], "Paste text formatting"), "keystroke": "Ctrl+Alt+V" }] }), _0x141265["ui"]["componentFactory"]["add"]("formatPainter", (_0x184b36) => {
      const _0x13f863 = createDropdown(_0x184b36, SplitButtonView), _0x268c69 = _0x141265["commands"]["get"](c5);
      _0x13f863["buttonView"]["set"]({ "label": C3(_0x141265["locale"], "Paint formatting"), "icon": a2["paintRoller"], "keystroke": "Ctrl+Alt+C", "tooltip": true }), _0x13f863["class"] = "ck-format-painter-dropdown", _0x268c69 && (_0x13f863["bind"]("isEnabled")["to"](_0x268c69, "isEnabled"), this["listenTo"](_0x268c69, "change:isEnabled", (_0x185e62, _0x5de6b8, _0x3b5598) => {
        _0x3b5598 || this["_finishPainting"]();
      }), _0x13f863["buttonView"]["bind"]("isOn")["to"](_0x268c69, "value", (_0x147dea) => !!_0x147dea), this["listenTo"](_0x141265, "destroy", () => this["_toggleSpecialCursor"](false)), this["listenTo"](_0x268c69, "change:value", (_0x38e29f, _0x5a094c, _0x52d928) => {
        this["_toggleSpecialCursor"](!!_0x52d928);
      }));
      const _0x4c3529 = new Model({ "withText": true, "label": C3(_0x141265["locale"], "Continuous painting"), "tooltip": C3(_0x141265["locale"], "Keeps the painter on after setting the formatting."), "isOn": false, "role": "menuitemcheckbox" });
      addListToDropdown(_0x13f863, new Collection([{ "type": "switchbutton", "model": _0x4c3529 }]), { "role": "menu" });
      const _0x10b492 = () => {
        this["_copyFormatting"](), this["listenTo"](global2["window"]["document"], "mouseup", () => {
          this["_pasteFormatting"](), _0x4c3529["isOn"] || this["_finishPainting"]();
        });
      };
      return this["listenTo"](_0x13f863, "execute", () => {
        _0x4c3529["isOn"] = !_0x4c3529["isOn"];
      }), this["listenTo"](_0x13f863["buttonView"], "execute", () => {
        _0x141265["editing"]["view"]["focus"](), _0x13f863["buttonView"]["isOn"] ? this["_finishPainting"]() : _0x10b492();
      }), _0x141265["keystrokes"]["set"]("Ctrl+Alt+C", (_0x19375b, _0x140e82) => {
        _0x10b492(), _0x4c3529["isOn"] = true, _0x140e82();
      }, { "priority": "high" }), _0x141265["keystrokes"]["set"]("Ctrl+Alt+V", (_0x49adcd, _0x2569e2) => {
        _0x13f863["buttonView"]["isOn"] && (this["_pasteFormatting"](), _0x4c3529["isOn"] || this["_finishPainting"](), _0x2569e2());
      }, { "priority": "high" }), _0x141265["keystrokes"]["set"]("Esc", (_0x255e9b, _0x4ac7fa) => {
        _0x13f863["buttonView"]["isOn"] && (_0x4c3529["isOn"] = false, this["_finishPainting"](), _0x4ac7fa());
      }), _0x13f863;
    });
  }
  ["afterInit"]() {
    !function(_0x3e0eb2) {
      function _0x40502e(_0x82c22c, _0x143742, _0x23d8b1) {
        const _0x32e1e2 = {};
        _0x32e1e2[_0x4bb652([110, 117, 109, 98, 101, 114, 79, 102, 82, 111, 117, 110, 100, 115])] = { 16: 10, 24: 12, 32: 14 }, _0x32e1e2[_0x4bb652([114, 99, 111, 110])] = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145], _0x32e1e2[_0x4bb652([83])] = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], _0x32e1e2[_0x4bb652([84, 49])] = [3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474, 1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738, 597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420, 3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577, 605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627, 2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520, 3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205, 2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474, 1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309, 3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720, 2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771, 1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243, 3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470, 1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977, 2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737, 1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754, 361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755, 697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986], _0x32e1e2[_0x4bb652([84, 50])] = [2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899, 2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108, 4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129, 2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848, 1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043, 1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914, 1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139, 2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658, 3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324, 3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385, 3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499, 1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572, 2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810, 3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411, 3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753, 2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487, 550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313, 2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766], _0x32e1e2[_0x4bb652([84, 51])] = [1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099, 1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188, 2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329, 1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768, 3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283, 3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114, 3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739, 2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538, 2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324, 1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865, 1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296, 844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713, 3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050, 2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131, 3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513, 2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927, 3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905, 2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126], _0x32e1e2[_0x4bb652([84, 52])] = [1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549, 1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243, 2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529, 1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963, 3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198, 3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564, 3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214, 2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143, 2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699, 1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945, 1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771, 842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818, 3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340, 2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126, 3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473, 2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917, 3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930, 2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436], _0x32e1e2[_0x4bb652([85, 49])] = [0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795], _0x32e1e2[_0x4bb652([85, 50])] = [0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459, 2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537, 3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535, 77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884, 3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824, 3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622, 507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216, 3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879, 129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469, 3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175, 1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921, 2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127, 3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560, 1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387, 2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037, 4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148, 692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663, 2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855], _0x32e1e2[_0x4bb652([85, 51])] = [0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639, 3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557, 2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032, 3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201, 344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239, 532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878, 3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771, 4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744, 671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199, 4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366, 492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798, 2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695, 3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569, 4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702, 3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217, 1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635, 1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009, 3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150], _0x32e1e2[_0x4bb652([85, 52])] = [0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874, 2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222, 4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595, 1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591, 4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837, 923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127, 2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424, 2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110, 4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469, 4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481, 1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243, 3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604, 2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802, 585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166, 4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912, 1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703, 3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213, 2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925];
        const _0x1bf157 = new Uint8Array(16);
        for (let _0x1fa07d = 15; _0x1fa07d >= 0; --_0x1fa07d) _0x1bf157[_0x1fa07d] = _0x23d8b1 % 256, _0x23d8b1 = parseInt(_0x23d8b1 / 256);
        let _0x4d4a45 = null, _0x7e8c6b = 16;
        const _0xe2ad01 = new Uint8Array(_0x143742), _0x5154a5 = [], _0x60a783 = [];
        _0xcbd2d2();
        for (let _0x2ee872 = 0; _0x2ee872 < _0x82c22c[_0x4bb652([108, 101, 110, 103, 116, 104])]; _0x2ee872++) 16 === _0x7e8c6b && (_0x4d4a45 = _0x4ad4b2(_0x1bf157), _0x7e8c6b = 0, _0x4a3970(_0x1bf157)), _0x82c22c[_0x2ee872] ^= _0x4d4a45[_0x7e8c6b++];
        return _0x82c22c;
        function _0x41e9b9(_0x4bcfeb) {
          const _0x18e4aa = [];
          for (let _0x1b1282 = 0; _0x1b1282 < _0x4bcfeb[_0x4bb652([108, 101, 110, 103, 116, 104])]; _0x1b1282 += 4) _0x18e4aa[_0x4bb652([112, 117, 115, 104])](_0x4bcfeb[_0x1b1282] << 24 | _0x4bcfeb[_0x1b1282 + 1] << 16 | _0x4bcfeb[_0x1b1282 + 2] << 8 | _0x4bcfeb[_0x1b1282 + 3]);
          return _0x18e4aa;
        }
        function _0x4a3970(_0x24d64f) {
          for (let _0x4efa41 = 15; _0x4efa41 >= 0; _0x4efa41--) {
            if (255 !== _0x24d64f[_0x4efa41]) {
              _0x24d64f[_0x4efa41]++;
              break;
            }
            _0x24d64f[_0x4efa41] = 0;
          }
        }
        function _0x4ad4b2(_0x174fc1) {
          const _0x7ceae2 = _0x5154a5[_0x4bb652([108, 101, 110, 103, 116, 104])] - 1, _0x2b008d = [0, 0, 0, 0];
          let t2 = _0x41e9b9(_0x174fc1);
          for (let _0x2ebfc5 = 0; _0x2ebfc5 < 4; _0x2ebfc5++) t2[_0x2ebfc5] ^= _0x5154a5[0][_0x2ebfc5];
          for (let _0x146451 = 1; _0x146451 < _0x7ceae2; _0x146451++) {
            for (let _0x1102e = 0; _0x1102e < 4; _0x1102e++) _0x2b008d[_0x1102e] = _0x32e1e2[_0x4bb652([84, 49])][t2[_0x1102e] >> 24 & 255] ^ _0x32e1e2[_0x4bb652([84, 50])][t2[(_0x1102e + 1) % 4] >> 16 & 255] ^ _0x32e1e2[_0x4bb652([84, 51])][t2[(_0x1102e + 2) % 4] >> 8 & 255] ^ _0x32e1e2[_0x4bb652([84, 52])][255 & t2[(_0x1102e + 3) % 4]] ^ _0x5154a5[_0x146451][_0x1102e];
            t2 = _0x2b008d[_0x4bb652([115, 108, 105, 99, 101])]();
          }
          const _0x276ba3 = new Uint8Array(16);
          let _0x3d327d;
          for (let _0x3860c4 = 0; _0x3860c4 < 4; _0x3860c4++) _0x3d327d = _0x5154a5[_0x7ceae2][_0x3860c4], _0x276ba3[4 * _0x3860c4] = 255 & (_0x32e1e2[_0x4bb652([83])][t2[_0x3860c4] >> 24 & 255] ^ _0x3d327d >> 24), _0x276ba3[4 * _0x3860c4 + 1] = 255 & (_0x32e1e2[_0x4bb652([83])][t2[(_0x3860c4 + 1) % 4] >> 16 & 255] ^ _0x3d327d >> 16), _0x276ba3[4 * _0x3860c4 + 2] = 255 & (_0x32e1e2[_0x4bb652([83])][t2[(_0x3860c4 + 2) % 4] >> 8 & 255] ^ _0x3d327d >> 8), _0x276ba3[4 * _0x3860c4 + 3] = 255 & (_0x32e1e2[_0x4bb652([83])][255 & t2[(_0x3860c4 + 3) % 4]] ^ _0x3d327d);
          return _0x276ba3;
        }
        function _0xcbd2d2() {
          const _0x101a2f = _0x32e1e2[_0x4bb652([110, 117, 109, 98, 101, 114, 79, 102, 82, 111, 117, 110, 100, 115])][_0xe2ad01[_0x4bb652([108, 101, 110, 103, 116, 104])]];
          for (let _0x2fe94e = 0; _0x2fe94e <= _0x101a2f; _0x2fe94e++) _0x5154a5[_0x4bb652([112, 117, 115, 104])]([0, 0, 0, 0]), _0x60a783[_0x4bb652([112, 117, 115, 104])]([0, 0, 0, 0]);
          const _0x187c3e = 4 * (_0x101a2f + 1), _0x17abfa = _0xe2ad01[_0x4bb652([108, 101, 110, 103, 116, 104])] / 4, _0x1742bb = _0x41e9b9(_0xe2ad01);
          let _0x2f6d65;
          for (let _0x17cce7 = 0; _0x17cce7 < _0x17abfa; _0x17cce7++) _0x2f6d65 = _0x17cce7 >> 2, _0x5154a5[_0x2f6d65][_0x17cce7 % 4] = _0x1742bb[_0x17cce7], _0x60a783[_0x101a2f - _0x2f6d65][_0x17cce7 % 4] = _0x1742bb[_0x17cce7];
          let _0x205ff7, _0x4d8910 = 0, t2 = _0x17abfa;
          for (; t2 < _0x187c3e; ) {
            _0x205ff7 = _0x1742bb[_0x17abfa - 1], _0x1742bb[0] ^= _0x32e1e2[_0x4bb652([83])][_0x205ff7 >> 16 & 255] << 24 ^ _0x32e1e2[_0x4bb652([83])][_0x205ff7 >> 8 & 255] << 16 ^ _0x32e1e2[_0x4bb652([83])][255 & _0x205ff7] << 8 ^ _0x32e1e2[_0x4bb652([83])][_0x205ff7 >> 24 & 255] ^ _0x32e1e2[_0x4bb652([114, 99, 111, 110])][_0x4d8910] << 24, _0x4d8910 += 1;
            for (let _0x4f173b = 1; _0x4f173b < _0x17abfa / 2; _0x4f173b++) _0x1742bb[_0x4f173b] ^= _0x1742bb[_0x4f173b - 1];
            _0x205ff7 = _0x1742bb[_0x17abfa / 2 - 1], _0x1742bb[_0x17abfa / 2] ^= _0x32e1e2[_0x4bb652([83])][255 & _0x205ff7] ^ _0x32e1e2[_0x4bb652([83])][_0x205ff7 >> 8 & 255] << 8 ^ _0x32e1e2[_0x4bb652([83])][_0x205ff7 >> 16 & 255] << 16 ^ _0x32e1e2[_0x4bb652([83])][_0x205ff7 >> 24 & 255] << 24;
            for (let _0x4f0d18 = _0x17abfa / 2 + 1; _0x4f0d18 < _0x17abfa; _0x4f0d18++) _0x1742bb[_0x4f0d18] ^= _0x1742bb[_0x4f0d18 - 1];
            let _0xf8addd, _0x20b830, _0x548947 = 0;
            for (; _0x548947 < _0x17abfa && t2 < _0x187c3e; ) _0xf8addd = t2 >> 2, _0x20b830 = t2 % 4, _0x5154a5[_0xf8addd][_0x20b830] = _0x1742bb[_0x548947], _0x60a783[_0x101a2f - _0xf8addd][_0x20b830] = _0x1742bb[_0x548947++], t2++;
          }
          for (let _0x4548da = 1; _0x4548da < _0x101a2f; _0x4548da++) for (let _0x146269 = 0; _0x146269 < 4; _0x146269++) _0x205ff7 = _0x60a783[_0x4548da][_0x146269], _0x60a783[_0x4548da][_0x146269] = _0x32e1e2[_0x4bb652([85, 49])][_0x205ff7 >> 24 & 255] ^ _0x32e1e2[_0x4bb652([85, 50])][_0x205ff7 >> 16 & 255] ^ _0x32e1e2[_0x4bb652([85, 51])][_0x205ff7 >> 8 & 255] ^ _0x32e1e2[_0x4bb652([85, 52])][255 & _0x205ff7];
        }
      }
      function _0x4bb652(_0x108551) {
        return _0x108551["map"]((_0x4e115c) => String["fromCharCode"](_0x4e115c))["join"]("");
      }
      ((_0x3214b3) => {
        function _0x25b111() {
          const _0x46ce5d = [{ [_0x4bb652([105, 100])]: 1, [_0x4bb652([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4bb652([67, 111, 109, 109, 101, 110, 116, 115]), [_0x4bb652([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4bb652([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]), [_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4bb652([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4bb652([104, 97, 110, 100, 108, 101, 114])]: _0x4bb652([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x4bb652([99, 104, 101, 99, 107, 65, 108, 115, 111])]: [{ [_0x4bb652([105, 100])]: 2, [_0x4bb652([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4bb652([84, 114, 97, 99, 107, 32, 67, 104, 97, 110, 103, 101, 115]), [_0x4bb652([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4bb652([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103]), [_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4bb652([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4bb652([104, 97, 110, 100, 108, 101, 114])]: _0x4bb652([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115]), [_0x4bb652([111, 112, 116, 105, 111, 110, 115])]: { [_0x4bb652([97, 105, 119, 115, 103, 105, 99])]: true, [_0x4bb652([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x4bb652([97, 105, 114, 118, 105, 105, 108])]: true } }], [_0x4bb652([111, 112, 116, 105, 111, 110, 115])]: { [_0x4bb652([97, 105, 119, 115, 103, 105, 99])]: true, [_0x4bb652([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x4bb652([97, 105, 114, 118, 105, 105, 108])]: true } }, { [_0x4bb652([105, 100])]: 3, [_0x4bb652([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4bb652([80, 97, 103, 105, 110, 97, 116, 105, 111, 110]), [_0x4bb652([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4bb652([80, 97, 103, 105, 110, 97, 116, 105, 111, 110, 76, 111, 111, 107, 117, 112]), [_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4bb652([112, 97, 103, 105, 110, 97, 116, 105, 111, 110, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4bb652([104, 97, 110, 100, 108, 101, 114])]: _0x4bb652([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x4bb652([105, 100])]: 4, [_0x4bb652([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4bb652([82, 101, 118, 105, 115, 105, 111, 110, 32, 72, 105, 115, 116, 111, 114, 121]), [_0x4bb652([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4bb652([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]), [_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4bb652([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4bb652([104, 97, 110, 100, 108, 101, 114])]: _0x4bb652([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 82, 101, 118, 105, 115, 105, 111, 110, 72, 105, 115, 116, 111, 114, 121]), [_0x4bb652([111, 112, 116, 105, 111, 110, 115])]: { [_0x4bb652([97, 105, 119, 115, 103, 105, 99])]: true, [_0x4bb652([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x4bb652([97, 105, 114, 118, 105, 105, 108])]: true } }, { [_0x4bb652([105, 100])]: 5, [_0x4bb652([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4bb652([68, 111, 99, 117, 109, 101, 110, 116, 32, 79, 117, 116, 108, 105, 110, 101]), [_0x4bb652([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4bb652([68, 111, 99, 117, 109, 101, 110, 116, 79, 117, 116, 108, 105, 110, 101, 85, 73]), [_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4bb652([100, 111, 99, 117, 109, 101, 110, 116, 79, 117, 116, 108, 105, 110, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4bb652([104, 97, 110, 100, 108, 101, 114])]: _0x4bb652([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x4bb652([111, 112, 116, 105, 111, 110, 115])]: { [_0x4bb652([102, 103, 105])]: [12] } }, { [_0x4bb652([105, 100])]: 6, [_0x4bb652([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4bb652([70, 111, 114, 109, 97, 116, 32, 80, 97, 105, 110, 116, 101, 114]), [_0x4bb652([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4bb652([70, 111, 114, 109, 97, 116, 80, 97, 105, 110, 116, 101, 114, 85, 73]), [_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4bb652([102, 111, 114, 109, 97, 116, 80, 97, 105, 110, 116, 101, 114, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4bb652([104, 97, 110, 100, 108, 101, 114])]: _0x4bb652([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x4bb652([111, 112, 116, 105, 111, 110, 115])]: { [_0x4bb652([102, 103, 105])]: [12] } }, { [_0x4bb652([105, 100])]: 7, [_0x4bb652([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4bb652([83, 108, 97, 115, 104, 32, 67, 111, 109, 109, 97, 110, 100]), [_0x4bb652([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4bb652([83, 108, 97, 115, 104, 67, 111, 109, 109, 97, 110, 100, 85, 73]), [_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4bb652([115, 108, 97, 115, 104, 67, 111, 109, 109, 97, 110, 100, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4bb652([104, 97, 110, 100, 108, 101, 114])]: _0x4bb652([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x4bb652([111, 112, 116, 105, 111, 110, 115])]: { [_0x4bb652([102, 103, 105])]: [12] } }, { [_0x4bb652([105, 100])]: 8, [_0x4bb652([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4bb652([84, 97, 98, 108, 101, 32, 111, 102, 32, 67, 111, 110, 116, 101, 110, 116, 115]), [_0x4bb652([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4bb652([84, 97, 98, 108, 101, 79, 102, 67, 111, 110, 116, 101, 110, 116, 115, 69, 100, 105, 116, 105, 110, 103]), [_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4bb652([116, 97, 98, 108, 101, 79, 102, 67, 111, 110, 116, 101, 110, 116, 115, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4bb652([104, 97, 110, 100, 108, 101, 114])]: _0x4bb652([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x4bb652([111, 112, 116, 105, 111, 110, 115])]: { [_0x4bb652([102, 103, 105])]: [12] } }, { [_0x4bb652([105, 100])]: 9, [_0x4bb652([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4bb652([84, 101, 109, 112, 108, 97, 116, 101]), [_0x4bb652([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4bb652([84, 101, 109, 112, 108, 97, 116, 101, 85, 73]), [_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4bb652([116, 101, 109, 112, 108, 97, 116, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4bb652([104, 97, 110, 100, 108, 101, 114])]: _0x4bb652([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x4bb652([111, 112, 116, 105, 111, 110, 115])]: { [_0x4bb652([102, 103, 105])]: [12, 14] } }, { [_0x4bb652([105, 100])]: 10, [_0x4bb652([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4bb652([80, 97, 115, 116, 101, 32, 102, 114, 111, 109, 32, 79, 102, 102, 105, 99, 101, 32, 69, 110, 104, 97, 110, 99, 101, 100]), [_0x4bb652([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4bb652([80, 97, 115, 116, 101, 70, 114, 111, 109, 79, 102, 102, 105, 99, 101, 69, 110, 104, 97, 110, 99, 101, 100, 73, 110, 108, 105, 110, 101, 114]), [_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4bb652([112, 97, 115, 116, 101, 70, 114, 111, 109, 79, 102, 102, 105, 99, 101, 69, 110, 104, 97, 110, 99, 101, 100, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4bb652([104, 97, 110, 100, 108, 101, 114])]: _0x4bb652([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x4bb652([111, 112, 116, 105, 111, 110, 115])]: { [_0x4bb652([102, 103, 105])]: [12] } }, { [_0x4bb652([105, 100])]: 11, [_0x4bb652([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4bb652([65, 73, 32, 65, 115, 115, 105, 115, 116, 97, 110, 116]), [_0x4bb652([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4bb652([65, 73, 65, 115, 115, 105, 115, 116, 97, 110, 116, 85, 73]), [_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4bb652([97, 105, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4bb652([104, 97, 110, 100, 108, 101, 114])]: _0x4bb652([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x4bb652([105, 100])]: 12, [_0x4bb652([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4bb652([80, 114, 111, 100, 117, 99, 116, 105, 118, 105, 116, 121, 32, 112, 97, 99, 107]) }, { [_0x4bb652([105, 100])]: 13, [_0x4bb652([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4bb652([67, 97, 115, 101, 32, 67, 104, 97, 110, 103, 101]), [_0x4bb652([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4bb652([67, 97, 115, 101, 67, 104, 97, 110, 103, 101, 85, 73]), [_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4bb652([99, 97, 115, 101, 67, 104, 97, 110, 103, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4bb652([104, 97, 110, 100, 108, 101, 114])]: _0x4bb652([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x4bb652([111, 112, 116, 105, 111, 110, 115])]: { [_0x4bb652([102, 103, 105])]: [12] } }, { [_0x4bb652([105, 100])]: 14, [_0x4bb652([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4bb652([68, 114, 117, 112, 97, 108, 32, 112, 97, 99, 107]), [_0x4bb652([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114])]: _0x4bb652([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114, 70, 111, 114, 68, 114, 117, 112, 97, 108]) }, { [_0x4bb652([105, 100])]: 15, [_0x4bb652([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4bb652([77, 117, 108, 116, 105, 32, 76, 101, 118, 101, 108, 32, 76, 105, 115, 116]), [_0x4bb652([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4bb652([77, 117, 108, 116, 105, 76, 101, 118, 101, 108, 76, 105, 115, 116, 69, 100, 105, 116, 105, 110, 103]), [_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4bb652([109, 117, 108, 116, 105, 76, 101, 118, 101, 108, 76, 105, 115, 116, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4bb652([104, 97, 110, 100, 108, 101, 114])]: _0x4bb652([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x4bb652([105, 100])]: 16, [_0x4bb652([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4bb652([77, 101, 114, 103, 101, 32, 70, 105, 101, 108, 100, 115]), [_0x4bb652([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4bb652([77, 101, 114, 103, 101, 70, 105, 101, 108, 100, 115, 85, 73]), [_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4bb652([109, 101, 114, 103, 101, 70, 105, 101, 108, 100, 115, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4bb652([104, 97, 110, 100, 108, 101, 114])]: _0x4bb652([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x4bb652([111, 112, 116, 105, 111, 110, 115])]: { [_0x4bb652([102, 103, 105])]: [12] } }];
          return _0x428017(_0x46ce5d), _0x46ce5d;
          function _0x5761da(_0x20d3dc) {
            return 1 << _0x20d3dc - 1;
          }
          function _0x428017(_0x4d7f53) {
            _0x4d7f53[_0x4bb652([102, 111, 114, 69, 97, 99, 104])]((_0x537d2f) => {
              _0x537d2f[_0x4bb652([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])] = _0x5761da(_0x537d2f[_0x4bb652([105, 100])]), _0x1c79a6(_0x537d2f) && _0x537d2f[_0x4bb652([99, 104, 101, 99, 107, 65, 108, 115, 111])] && _0x428017(_0x537d2f[_0x4bb652([99, 104, 101, 99, 107, 65, 108, 115, 111])]);
            });
          }
        }
        function _0x1c79a6(_0x58f170) {
          return _0x4bb652([112, 108, 117, 103, 105, 110, 78, 97, 109, 101]) in _0x58f170;
        }
        const _0x2464b2 = [1, 85, 78, 115, 198, 255, 50, 112, 83, 87, 161], _0x192fc2 = [127, 34, 6, 211, 167, 86, 146, 199, 132, 160, 18];
        function _0x1b566d(_0x4bcb95) {
          const _0x2bd6b9 = [29, 221, 175, 90, 231, 133, 239, 240, 75, 180];
          return _0x3f7990(_0x4bcb95, new Uint8Array([..._0x2464b2, ..._0x2bd6b9, ..._0x192fc2]));
        }
        function _0x3f7990(_0x40637f, _0x3437ad) {
          const _0x53be67 = _0x512269(_0x40637f), _0x5af723 = Array[_0x4bb652([102, 114, 111, 109])](_0xaf19e0(_0x53be67)), _0x3167b2 = _0x5af723[_0x4bb652([112, 111, 112])](), _0x281f67 = _0x5af723[_0x4bb652([112, 111, 112])]();
          return _0x8c1ee(_0x40502e(_0x5af723, _0x3437ad, _0x281f67 + 256 * _0x3167b2));
        }
        function _0x512269(_0x242598) {
          const _0x2195c9 = atob(_0x242598), [_0x449af3, _0x431196] = _0x2195c9[_0x4bb652([115, 112, 108, 105, 116])](_0x4bb652([45]));
          try {
            if (atob(_0x431196)) return atob(_0x449af3);
          } catch (_0x533f4c) {
          }
          return _0x2195c9;
        }
        function _0x59f1cc(_0x4e602b) {
          try {
            const _0x1e131a = _0x1b566d(_0x4e602b), _0x1c340f = JSON[_0x4bb652([112, 97, 114, 115, 101])](_0x1e131a), _0x29037f = parseInt(_0x1c340f[_0x4bb652([49])]), _0x3fdbb7 = _0x1c340f[_0x4bb652([50])] || "", _0x1eb45b = parseInt(_0x1c340f[_0x4bb652([51])]), _0x4a4187 = parseInt(_0x1c340f[_0x4bb652([52])]) || 0, _0x69febb = parseInt(_0x1c340f[_0x4bb652([53])]) || 0;
            return { [_0x4bb652([112, 114, 111, 100, 117, 99, 116, 78, 97, 109, 101])]: _0x3fdbb7, [_0x4bb652([97, 108, 108, 111, 119, 101, 100, 80, 108, 117, 103, 105, 110, 115])]: _0x4a4187, [_0x4bb652([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])]: _0x29037f, [_0x4bb652([105, 115, 84, 114, 105, 97, 108])]: _0x1eb45b, [_0x4bb652([105, 115, 73, 110, 116, 101, 114, 110, 97, 108])]: _0x69febb };
          } catch (_0x46d216) {
            return null;
          }
        }
        const _0x48834d = _0x25b111(), _0x284364 = { [_0x4bb652([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101])]: _0x24dad7, [_0x4bb652([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115])]: _0x4e5cd8, [_0x4bb652([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 82, 101, 118, 105, 115, 105, 111, 110, 72, 105, 115, 116, 111, 114, 121])]: _0x1cb00c }, _0x4fe103 = _0x3214b3[_0x4bb652([99, 111, 110, 115, 116, 114, 117, 99, 116, 111, 114])][_0x4bb652([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])], _0x1cae76 = _0x4bb652([99, 111, 110, 116, 101, 120, 116]) in _0x3214b3 ? _0x3214b3["context"] : _0x3214b3["editor"], _0x1bc542 = _0x4bb652([52, 48, 52, 56, 50, 50, 49, 50]), _0x54c583 = _0x4bb652([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]), _0x1c73ec = _0x1cae76["config"]["get"](_0x4bb652([108, 105, 99, 101, 110, 115, 101, 75, 101, 121])), _0x313ca6 = _0x48834d[_0x4bb652([102, 105, 108, 116, 101, 114])](_0x1c79a6)[_0x4bb652([102, 105, 110, 100])]((_0x30f114) => _0x30f114[_0x4bb652([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])] === _0x4fe103);
        function _0x1f71d9(_0x250f9f, _0x3e0265) {
          _0x284364[_0x3e0265[_0x4bb652([104, 97, 110, 100, 108, 101, 114])]](_0x250f9f, _0x3e0265), _0x3e0265[_0x4bb652([99, 104, 101, 99, 107, 65, 108, 115, 111])] && _0x3e0265[_0x4bb652([99, 104, 101, 99, 107, 65, 108, 115, 111])][_0x4bb652([102, 105, 108, 116, 101, 114])]((_0x2e354a) => _0xe962f8(_0x1cae76, _0x2e354a[_0x4bb652([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]))[_0x4bb652([102, 111, 114, 69, 97, 99, 104])]((_0x87fa3d) => _0x1f71d9(_0x250f9f, _0x87fa3d));
        }
        function _0x24dad7(_0x218f5c, _0x860b03) {
          _0x119013(_0x1f3475(_0x218f5c, _0x860b03), _0x860b03);
        }
        function _0x4e5cd8(_0xd18977, _0x3246d3) {
          function _0x188f0d(_0x1461a8, _0x16dcc9) {
            try {
              if (_0xe962f8(_0x1cae76, _0x4bb652([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103])) && _0x1461a8) {
                const _0x1154ff = _0x4016a4(_0x1cae76, _0x4bb652([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103]))[_0x4bb652([95, 101, 120, 101, 99, 117, 116, 101, 83, 117, 103, 103, 101, 115, 116, 105, 111, 110])];
                if (parseInt(_0x1154ff) / 2 > _0x1461a8[_0x4bb652([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])]) return _0x836740(_0x16dcc9[_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4bb652([73, 110, 118, 97, 108, 105, 100]));
              }
              return _0x1f3475(_0x1461a8, _0x16dcc9);
            } catch (_0x1a7007) {
              return _0x836740(_0x16dcc9[_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4bb652([73, 110, 118, 97, 108, 105, 100]));
            }
          }
          _0x119013(_0x188f0d(_0xd18977, _0x3246d3), _0x3246d3);
        }
        function _0x1cb00c(_0x5bc52d, _0xc6322f) {
          const _0x2c0d53 = _0x192fc2[0] * _0x2464b2[1], _0x172f96 = _0x192fc2[0] * _0x2464b2[2], _0x5c5d01 = _0x192fc2[2] * _0x2464b2[2];
          _0xe962f8(_0x1cae76, _0x4bb652([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121])) && _0x4016a4(_0x1cae76, _0x4bb652([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121]))[_0x4bb652([115, 116, 97, 116, 101])] == _0x4bb652([99, 111, 110, 110, 101, 99, 116, 101, 100]) && (window[_0x5c7b45()] = _0x5c5d01);
          function _0x205620(_0x262236, _0x4f2864) {
            try {
              return _0x113243() ? _0x836740(_0x4f2864[_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4bb652([86, 97, 108, 105, 100])) : _0x1f3475(_0x262236, _0x4f2864);
            } catch (_0x5cd16a) {
              return _0x836740(_0x4f2864[_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4bb652([73, 110, 118, 97, 108, 105, 100]));
            }
          }
          function _0x3d7497(_0x270789, _0x65fd7d) {
            const _0x1b3bbb = 7;
            if (_0x270789 == _0x65fd7d[_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4bb652([73, 110, 118, 97, 108, 105, 100])) _0x52a10c();
            else {
              if (_0x270789 == _0x65fd7d[_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4bb652([84, 114, 105, 97, 108])) {
                const _0x3e1bb1 = _0x97547b();
                _0x3e1bb1 && _0x4e636c(_0x3e1bb1, _0x65fd7d[_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                const _0x89fde4 = _0x2fdaaf();
                window[_0x4bb652([115, 101, 116, 84, 105, 109, 101, 111, 117, 116])](() => {
                  _0x4e636c(_0x4bb652([116, 105, 109, 101]), _0x65fd7d[_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                }, _0x89fde4);
                const _0x18bbaf = _0x4016a4(_0x1cae76, _0x4bb652([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x4bb652([95, 114, 101, 118, 105, 115, 105, 111, 110, 115])];
                _0x18bbaf[_0x4bb652([108, 101, 110, 103, 116, 104])] >= _0x1b3bbb ? _0x4e636c(_0x4bb652([114, 101, 118, 105, 115, 105, 111, 110, 115]), _0x65fd7d[_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]) : _0x18bbaf["on"](_0x4bb652([97, 100, 100]), () => {
                  _0x18bbaf[_0x4bb652([108, 101, 110, 103, 116, 104])] >= _0x1b3bbb && _0x4e636c(_0x4bb652([114, 101, 118, 105, 115, 105, 111, 110, 115]), _0x65fd7d[_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                });
              }
            }
          }
          function _0x97547b() {
            if (!_0xe962f8(_0x1cae76, _0x4bb652([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) return false;
            for (const _0x422d23 in window) if (Number["isNaN"](Number(_0x422d23))) {
              if (window[_0x422d23] === _0x2c0d53) return _0x4bb652([116, 105, 109, 101]);
              if (window[_0x422d23] === _0x172f96) return _0x4bb652([114, 101, 118, 105, 115, 105, 111, 110, 115]);
            }
            return false;
          }
          function _0x113243() {
            if (!_0xe962f8(_0x1cae76, _0x4bb652([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) return false;
            for (const _0x385890 in window) if (Number["isNaN"](Number(_0x385890)) && window[_0x385890] === _0x5c5d01) return true;
            return false;
          }
          function _0x4e636c(_0x5df9a6, _0x1bff00) {
            _0x52a10c(), _0x836740(_0x1bff00 + _0x4bb652([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58]) + _0x5df9a6), window[_0x5c7b45()] = _0x5df9a6 === _0x4bb652([116, 105, 109, 101]) ? _0x2c0d53 : _0x172f96;
          }
          function _0x2fdaaf() {
            let _0x3b5b91 = _0x192fc2[6] * _0x2464b2[8] * _0x2464b2[6];
            return _0xe962f8(_0x1cae76, _0x4bb652([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114])) && (_0x3b5b91 /= 10), _0x3b5b91;
          }
          function _0x52a10c() {
            const _0x1e0406 = _0x1cae76;
            function _0x252b8e() {
              _0xe962f8(_0x1e0406, _0x4bb652([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114])) && (_0x4016a4(_0x1e0406, _0x4bb652([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x4bb652([117, 110, 98, 105, 110, 100])](_0x4bb652([105, 115, 69, 110, 97, 98, 108, 101, 100])), _0x4016a4(_0x1e0406, _0x4bb652([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x4bb652([105, 115, 69, 110, 97, 98, 108, 101, 100])] = false, _0x4016a4(_0x1e0406, _0x4bb652([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x4bb652([117, 112, 100, 97, 116, 101])] = _0x2ba539, _0x4016a4(_0x1e0406, _0x4bb652([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x4bb652([115, 97, 118, 101, 82, 101, 118, 105, 115, 105, 111, 110])] = _0x2ba539, _0x1e0406[_0x4bb652([109, 111, 100, 101, 108])][_0x4bb652([99, 104, 97, 110, 103, 101])] = _0x2ba539, _0x1e0406[_0x4bb652([109, 111, 100, 101, 108])][_0x4bb652([101, 110, 113, 117, 101, 117, 101, 67, 104, 97, 110, 103, 101])] = _0x2ba539, _0x1e0406[_0x4bb652([101, 110, 97, 98, 108, 101, 82, 101, 97, 100, 79, 110, 108, 121, 77, 111, 100, 101])](_0x4bb652([109, 111, 100, 101, 108]))), _0xe962f8(_0x1e0406, _0x4bb652([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114])) && (_0x4016a4(_0x1e0406, _0x4bb652([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x4bb652([117, 110, 98, 105, 110, 100])](_0x4bb652([105, 115, 69, 110, 97, 98, 108, 101, 100])), _0x4016a4(_0x1e0406, _0x4bb652([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x4bb652([105, 115, 69, 110, 97, 98, 108, 101, 100])] = false, _0x4016a4(_0x1e0406, _0x4bb652([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x4bb652([99, 111, 109, 112, 97, 114, 101])] = _0x2ba539, _0x4016a4(_0x1e0406, _0x4bb652([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x4bb652([95, 103, 101, 116, 68, 105, 102, 102])] = _0x2ba539);
            }
            _0x1e0406[_0x4bb652([115, 116, 97, 116, 101])] == _0x4bb652([114, 101, 97, 100, 121]) ? _0x252b8e() : _0x1e0406[_0x4bb652([111, 110, 99, 101])](_0x4bb652([114, 101, 97, 100, 121]), () => {
              if (_0xe962f8(_0x1e0406, _0x4bb652([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114])) && _0x252b8e(), _0xe962f8(_0x1e0406, _0x4bb652([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) {
                const _0x114be3 = _0x4016a4(_0x1e0406, _0x4bb652([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121])), _0xb76daf = _0x114be3["getRevision"](0), _0x43e7c9 = _0x114be3["getEarlierVisibleRevision"](_0xb76daf[_0x4bb652([105, 100])]);
                _0x4016a4(_0x1e0406, _0x4bb652([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x4bb652([99, 111, 109, 112, 97, 114, 101])](_0xb76daf[_0x4bb652([105, 100])], _0x43e7c9 ? _0x43e7c9[_0x4bb652([105, 100])] : null, 1)["then"](() => _0x252b8e());
              }
            });
          }
          _0x3d7497(_0x205620(_0x5bc52d, _0xc6322f), _0xc6322f);
        }
        function _0x1f3475(_0x5736f7, _0x2a942d) {
          try {
            return _0x2b6e0a(_0x2a942d) ? _0x836740(_0x2a942d[_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4bb652([86, 97, 108, 105, 100])) : _0x5736f7 && _0x5842bd(_0x5736f7[_0x4bb652([97, 108, 108, 111, 119, 101, 100, 80, 108, 117, 103, 105, 110, 115])], _0x2a942d) ? _0x5736f7[_0x4bb652([105, 115, 73, 110, 116, 101, 114, 110, 97, 108])] && !window[_0x4bb652([111, 112, 101, 110])][_0x4bb652([99, 108, 111, 115, 101, 100])] || parseInt(_0x1bc542) / 2 > _0x5736f7[_0x4bb652([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])] ? _0x836740(_0x2a942d[_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4bb652([73, 110, 118, 97, 108, 105, 100])) : _0x5736f7[_0x4bb652([105, 115, 84, 114, 105, 97, 108])] ? _0x836740(_0x2a942d[_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4bb652([84, 114, 105, 97, 108])) : _0x836740(_0x2a942d[_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4bb652([86, 97, 108, 105, 100])) : _0x836740(_0x2a942d[_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4bb652([73, 110, 118, 97, 108, 105, 100]));
          } catch (_0x2ef0f7) {
            return _0x836740(_0x2a942d[_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4bb652([73, 110, 118, 97, 108, 105, 100]));
          }
        }
        function _0x119013(_0xf6c5b4, _0x36f187) {
          if (_0x1cae76 instanceof Context) {
            const _0x2867d3 = _0x1cae76;
            _0xf6c5b4 == _0x36f187[_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4bb652([73, 110, 118, 97, 108, 105, 100]) ? _0x23b147(_0x2867d3) : _0xf6c5b4 == _0x36f187[_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4bb652([84, 114, 105, 97, 108]) && window[_0x4bb652([115, 101, 116, 84, 105, 109, 101, 111, 117, 116])](() => {
              _0x23b147(_0x2867d3), _0x836740(_0x36f187[_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4bb652([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 116, 105, 109, 101]));
            }, _0x192fc2[6] * _0x2464b2[8] * _0x2464b2[6]), _0x2867d3[_0x4bb652([101, 100, 105, 116, 111, 114, 115])][_0x4bb652([111, 110])](_0x4bb652([97, 100, 100]), (_0x460432, _0x333401) => {
              _0xf6c5b4 != _0x36f187[_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4bb652([73, 110, 118, 97, 108, 105, 100]) && _0xf6c5b4 != _0x36f187[_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4bb652([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 116, 105, 109, 101]) && _0xf6c5b4 != _0x36f187[_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4bb652([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 111, 112, 101, 114, 97, 116, 105, 111, 110, 115]) || _0x505c92(_0x333401);
            });
          } else {
            const _0xf1be29 = _0x1cae76;
            _0xf6c5b4 == _0x36f187[_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4bb652([73, 110, 118, 97, 108, 105, 100]) ? _0x505c92(_0xf1be29) : _0xf6c5b4 == _0x36f187[_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4bb652([84, 114, 105, 97, 108]) && _0xf1be29[_0x4bb652([111, 110])](_0x4bb652([114, 101, 97, 100, 121]), () => {
              let _0x1c9568 = 0;
              _0xf1be29[_0x4bb652([109, 111, 100, 101, 108])][_0x4bb652([111, 110])](_0x4bb652([97, 112, 112, 108, 121, 79, 112, 101, 114, 97, 116, 105, 111, 110]), (_0x1d4267, _0x533f9c) => {
                _0x533f9c[0][_0x4bb652([105, 115, 68, 111, 99, 117, 109, 101, 110, 116, 79, 112, 101, 114, 97, 116, 105, 111, 110])] && _0x1c9568++, 504 === _0x1c9568 && (_0x505c92(_0xf1be29), _0x836740(_0x36f187[_0x4bb652([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4bb652([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 111, 112, 101, 114, 97, 116, 105, 111, 110, 115])), _0x1d4267[_0x4bb652([111, 102, 102])]());
              }, { "priority": _0x4bb652([104, 105, 103, 104, 101, 115, 116]) });
            });
          }
        }
        function _0x836740(_0x36ac5c) {
          const _0x1e4bcd = _0x5c7b45();
          return _0x1cae76[_0x1e4bcd] = _0x36ac5c, _0x36ac5c;
        }
        function _0x5c7b45() {
          const _0x5b9002 = String(window[_0x4bb652([112, 101, 114, 102, 111, 114, 109, 97, 110, 99, 101])][_0x4bb652([110, 111, 119])]())[_0x4bb652([114, 101, 112, 108, 97, 99, 101])](_0x4bb652([46]), "");
          let _0xd37890 = "";
          for (let _0x51f421 = 0; _0x51f421 < _0x5b9002[_0x4bb652([108, 101, 110, 103, 116, 104])]; _0x51f421 += 2) {
            let _0x290fd1 = parseInt(_0x5b9002[_0x4bb652([115, 117, 98, 115, 116, 114, 105, 110, 103])](_0x51f421, _0x51f421 + 2));
            _0x290fd1 >= _0x54c583[_0x4bb652([108, 101, 110, 103, 116, 104])] && (_0x290fd1 -= _0x54c583[_0x4bb652([108, 101, 110, 103, 116, 104])]), _0xd37890 += _0x54c583[_0x290fd1];
          }
          return _0xd37890;
        }
        function _0x23b147(_0x5601a6) {
          for (const _0x1804d0 of _0x5601a6[_0x4bb652([101, 100, 105, 116, 111, 114, 115])]) _0x505c92(_0x1804d0);
          _0x4016a4(_0x5601a6, _0x4bb652([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x4bb652([115, 119, 105, 116, 99, 104, 82, 101, 97, 100, 79, 110, 108, 121])](true), _0x4016a4(_0x5601a6, _0x4bb652([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x4bb652([115, 119, 105, 116, 99, 104, 82, 101, 97, 100, 79, 110, 108, 121])] = _0x2ba539;
        }
        function _0x505c92(_0x244443) {
          function _0x1cad33() {
            _0x244443[_0x4bb652([109, 111, 100, 101, 108])][_0x4bb652([99, 104, 97, 110, 103, 101])] = _0x2ba539, _0x244443[_0x4bb652([109, 111, 100, 101, 108])][_0x4bb652([101, 110, 113, 117, 101, 117, 101, 67, 104, 97, 110, 103, 101])] = _0x2ba539, _0x244443[_0x4bb652([101, 110, 97, 98, 108, 101, 82, 101, 97, 100, 79, 110, 108, 121, 77, 111, 100, 101])](_0x4bb652([109, 111, 100, 101, 108]));
          }
          _0x244443[_0x4bb652([115, 116, 97, 116, 101])] == _0x4bb652([114, 101, 97, 100, 121]) ? _0x1cad33() : _0x244443[_0x4bb652([111, 110, 99, 101])](_0x4bb652([114, 101, 97, 100, 121]), () => _0x1cad33());
        }
        function _0x2ba539() {
          return null;
        }
        function _0x5842bd(_0x22223, _0x34fe7f) {
          const _0x409f53 = !!(_0x22223 & _0x34fe7f[_0x4bb652([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])]), _0x4fbbb7 = _0x1a6e6d(_0x22223, _0x34fe7f);
          return _0x409f53 || _0x4fbbb7;
        }
        function _0x1a6e6d(_0x3118fa, _0x11ff9f) {
          const _0x2fc714 = (_0x11ff9f[_0x4bb652([111, 112, 116, 105, 111, 110, 115])] || {})[_0x4bb652([102, 103, 105])] || null;
          return !!_0x2fc714 && _0x48834d[_0x4bb652([102, 105, 108, 116, 101, 114])]((_0x526a10) => _0x2fc714[_0x4bb652([105, 110, 99, 108, 117, 100, 101, 115])](_0x526a10[_0x4bb652([105, 100])]))[_0x4bb652([102, 105, 108, 116, 101, 114])]((_0x34691e) => !_0x4e2177(_0x34691e))[_0x4bb652([115, 111, 109, 101])]((_0x504296) => !!(_0x3118fa & _0x504296[_0x4bb652([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])]));
        }
        function _0x4e2177(_0x5358c2) {
          const _0x187a36 = { [_0x4bb652([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114, 70, 111, 114, 68, 114, 117, 112, 97, 108])]: _0xe7127c };
          return !!_0x5358c2["forbiddenHandler"] && _0x187a36[_0x5358c2["forbiddenHandler"]]();
        }
        function _0xe7127c() {
          return !window[_0x4bb652([68, 114, 117, 112, 97, 108])] || !_0xe962f8(_0x1cae76, _0x4bb652([100, 114, 117, 112, 97, 108, 80, 111, 119, 101, 114, 101, 100, 66, 121]));
        }
        function _0x2b6e0a(_0x4277f6) {
          if (!_0xe962f8(_0x1cae76, _0x4277f6[_0x4bb652([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])])) return true;
          const _0x5de825 = _0x4277f6[_0x4bb652([111, 112, 116, 105, 111, 110, 115])] || {}, _0xc1e034 = _0x5de825[_0x4bb652([97, 105, 119, 115, 103, 105, 99])] || false, _0x410ebc = _0x5de825[_0x4bb652([97, 105, 116, 99, 100, 103, 105, 108])] || false, _0x50507f = _0x5de825[_0x4bb652([97, 105, 114, 118, 105, 105, 108])] || false;
          if (_0xe962f8(_0x1cae76, _0x4bb652([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121])) && _0x4016a4(_0x1cae76, _0x4bb652([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121]))[_0x4bb652([115, 116, 97, 116, 101])] == _0x4bb652([99, 111, 110, 110, 101, 99, 116, 101, 100]) && _0xc1e034) return true;
          if (_0xe962f8(_0x1cae76, _0x4bb652([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 68, 97, 116, 97, 71, 101, 116, 116, 101, 114])) && _0x4016a4(_0x1cae76, _0x4bb652([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 68, 97, 116, 97, 71, 101, 116, 116, 101, 114]))[_0x4bb652([114, 101, 115, 117, 108, 116])] == _0x4bb652([101, 110, 100]) && _0x410ebc) return true;
          return !(!_0xe962f8(_0x1cae76, _0x4bb652([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114, 73, 110, 116, 101, 103, 114, 97, 116, 105, 111, 110])) || _0x4016a4(_0x1cae76, _0x4bb652([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114, 73, 110, 116, 101, 103, 114, 97, 116, 105, 111, 110]))[_0x4bb652([114, 101, 115, 117, 108, 116])] != _0x4bb652([101, 110, 100]) || !_0x50507f);
        }
        function _0xe962f8(_0x4b2385, _0x243b6a) {
          return _0x4b2385[_0x4bb652([112, 108, 117, 103, 105, 110, 115])][_0x4bb652([104, 97, 115])](_0x243b6a);
        }
        function _0x4016a4(_0xcaf033, _0xcdd03e) {
          return _0xcaf033[_0x4bb652([112, 108, 117, 103, 105, 110, 115])][_0x4bb652([103, 101, 116])](_0xcdd03e);
        }
        function _0x8c1ee(_0x1b1c15) {
          let _0x4eb0ae = "";
          for (const _0x108c9b of _0x1b1c15) _0x4eb0ae += String[_0x4bb652([102, 114, 111, 109, 67, 104, 97, 114, 67, 111, 100, 101])](_0x108c9b);
          return _0x4eb0ae;
        }
        function _0xaf19e0(_0x398ef2) {
          const _0x435ebe = new Uint8Array(_0x398ef2[_0x4bb652([108, 101, 110, 103, 116, 104])]);
          for (let _0x4dc967 = 0; _0x4dc967 < _0x398ef2[_0x4bb652([108, 101, 110, 103, 116, 104])]; _0x4dc967++) _0x435ebe[_0x4dc967] = _0x398ef2[_0x4bb652([99, 104, 97, 114, 67, 111, 100, 101, 65, 116])](_0x4dc967);
          return _0x435ebe;
        }
        _0x313ca6 && _0x1f71d9(_0x59f1cc(_0x1c73ec), _0x313ca6);
      })(_0x3e0eb2);
    }(this);
  }
  ["_toggleSpecialCursor"](_0x435e80) {
    this["editor"]["editing"]["view"]["change"]((_0x5700f1) => {
      for (const _0x5bcc19 of this["editor"]["editing"]["view"]["document"]["roots"]) _0x435e80 ? _0x5700f1["addClass"](A, _0x5bcc19) : _0x5700f1["removeClass"](A, _0x5bcc19);
    });
  }
  ["_copyFormatting"]() {
    const { editor: _0x26f00d } = this;
    _0x26f00d["execute"](c5), _0x26f00d["ui"]["ariaLiveAnnouncer"]["announce"](C3(_0x26f00d["locale"], "Formatting copied."));
  }
  ["_pasteFormatting"]() {
    const { editor: _0x424939 } = this, _0x592bad = _0x424939["commands"]["get"](c5)["value"];
    _0x424939["execute"](e5, _0x592bad), _0x424939["ui"]["ariaLiveAnnouncer"]["announce"](C3(_0x424939["locale"], "Pasted formatting."));
  }
  ["_finishPainting"]() {
    this["editor"]["commands"]["get"](c5)["reset"](), this["stopListening"](global2["window"]["document"], "mouseup");
  }
};
var n6 = class extends Plugin {
  static get ["requires"]() {
    return [a10, m4];
  }
  static get ["pluginName"]() {
    return "FormatPainter";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
};

// node_modules/@ckeditor/ckeditor5-import-word/dist/index.js
function p5(_0x5ab0eb, _0x2c6748) {
  const t2 = _0x5ab0eb["t"];
  switch (_0x2c6748) {
    case "Import from Word":
      return t2("Import from Word");
    case "An error occurred while importing the Word file.":
      return t2("An error occurred while importing the Word file.");
    case "Importing Word document":
      return t2("Importing Word document");
    default:
      return _0x2c6748;
  }
}
var i3 = class extends Plugin {
  static get ["pluginName"]() {
    return "ImportWordUI";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    const _0x567a3f = this["editor"];
    _0x567a3f["ui"]["componentFactory"]["add"]("importWord", () => {
      const _0x372633 = this["_createButton"](FileDialogButtonView), _0x539770 = _0x567a3f["commands"]["get"]("importWord");
      return _0x372633["bind"]("isOn")["to"](_0x539770, "isBusy"), _0x372633["tooltip"] = true, _0x372633;
    }), _0x567a3f["ui"]["componentFactory"]["add"]("menuBar:importWord", () => this["_createButton"](MenuBarMenuListItemFileDialogButtonView));
  }
  ["_createButton"](_0xc97bf4) {
    const _0xee316d = this["editor"], _0x89801b = _0xee316d["commands"]["get"]("importWord"), _0x2cf2ca = new _0xc97bf4(_0xee316d["locale"]), _0xdb6c30 = new SpinnerView();
    return _0x2cf2ca["set"]({ "acceptedType": "application/vnd.openxmlformats-officedocument.wordprocessingml.document,application/vnd.openxmlformats-officedocument.wordprocessingml.template" }), _0x2cf2ca["set"]({ "icon": '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="m14 0 5 4.5v8.892l-1.5-1.8V6.5h-5v-5h-8v3H3V0h11Zm0 2v3h3.3L14 2Z"/><path d="M10.74 18a2.76 2.76 0 0 1-.469-.5H3V19h9.25v-.374A2.737 2.737 0 0 1 10.74 18Z"/><path d="M8.5 6a1.5 1.5 0 0 1 1.493 1.356L10 7.5v7a1.5 1.5 0 0 1-1.356 1.493L8.5 16h-7a1.5 1.5 0 0 1-1.493-1.356L0 14.5v-7a1.5 1.5 0 0 1 1.356-1.493L1.5 6h7ZM7.483 8.795l-.042.088-.986 2.534-.947-2.528-.043-.092a.601.601 0 0 0-1.042.008l-.042.093-.883 2.465-.937-2.475-.042-.089a.6.6 0 0 0-1.107.42l.027.093 1.514 4 .044.092a.6.6 0 0 0 1.041-.01l.041-.092.88-2.458.925 2.467.046.096a.602.602 0 0 0 1.032 0l.043-.09 1.554-4 .028-.093a.6.6 0 0 0-1.104-.43v.001ZM11.674 15.407a.75.75 0 1 0 1.152.96L14 14.96V20h1.5v-5.04l1.174 1.408a.75.75 0 1 0 1.152-.96l-2.346-2.816a.95.95 0 0 0-1.46 0l-2.346 2.815Z"/></svg>\n' }), _0x2cf2ca["bind"]("isEnabled")["to"](_0x89801b), _0x2cf2ca["bind"]("label")["to"](_0x89801b, "isBusy", (_0x365eaf) => p5(_0xee316d["locale"], _0x365eaf ? "Importing Word document" : "Import from Word")), _0xdb6c30["bind"]("isVisible")["to"](_0x89801b, "isBusy"), _0x2cf2ca["iconView"]["bind"]("isVisible")["to"](_0x89801b, "isBusy", (_0x29621f) => !_0x29621f), _0x2cf2ca["children"]["add"](_0xdb6c30), _0x2cf2ca["on"]("done", (_0x207e0f, _0x1da099) => {
      _0xee316d["execute"]("importWord", _0x1da099[0], {}), _0xee316d["editing"]["view"]["focus"]();
    }), _0x2cf2ca;
  }
};
var d4 = class extends Command {
  constructor(_0xbb12db) {
    super(_0xbb12db);
    __publicField(this, "_importMarker");
    __publicField(this, "_undoStepBatch");
    __publicField(this, "_abortController");
    this["set"]("isBusy", false), this["_importMarker"] = null, this["_undoStepBatch"] = null, this["_abortController"] = null, this["on"]("dataInsert", (_0x35b20a, _0x2fe3eb) => {
      const _0x18221e = new DataTransfer();
      _0x18221e["setData"]("text/html", _0x2fe3eb["html"]);
      const _0x8b5646 = this["_importMarker"]["getRange"]();
      this["editor"]["model"]["enqueueChange"](this["_undoStepBatch"], (_0x133a5c) => {
        this["_importMarker"]["stopListening"](), _0x133a5c["setSelection"](_0x8b5646), _0xbb12db["editing"]["view"]["document"]["fire"]("clipboardInput", { "dataTransfer": _0x18221e });
      });
    }, { "priority": "low" });
  }
  ["refresh"]() {
    this["isEnabled"] = this["_checkEnabled"]();
  }
  ["execute"](_0x7edad5, _0xbce185 = {}) {
    if (this["isBusy"]) return Promise["resolve"]();
    const _0x44f699 = this["editor"]["config"]["get"]("importWord");
    if (this["editor"]["plugins"]["has"]("MergeFields")) {
      const { prefix: _0x5ac06c, suffix: _0x3bcef9 } = this["editor"]["config"]["get"]("mergeFields");
      _0xbce185["merge_fields"] = { "prefix": _0x5ac06c, "suffix": _0x3bcef9 };
    }
    const _0x572096 = { "url": _0x44f699["converterUrl"], "file": _0x7edad5, "serviceConfig": { ..._0xbce185, "formatting": _0x44f699["formatting"], "timezone": new Intl["DateTimeFormat"]()["resolvedOptions"]()["timeZone"] } };
    return this["_prepareForImport"](), this["_sendImportRequest"](_0x572096)["then"](this["_handleImportResponse"]["bind"](this))["catch"](this["_handleImportFailure"]["bind"](this))["finally"](this["_cleanUpAfterImport"]["bind"](this));
  }
  ["_checkEnabled"]() {
    if (this["isBusy"]) return false;
    const _0xa418b5 = this["editor"]["model"], _0x5e9fe7 = _0xa418b5["schema"], _0x455720 = _0xa418b5["document"]["selection"], _0x3678af = first(_0x455720["getSelectedBlocks"]());
    return !!_0x3678af && _0x5e9fe7["checkChild"](_0x3678af["parent"], "paragraph");
  }
  ["_prepareForImport"]() {
    const _0xd7d412 = this["editor"], _0x319a21 = _0xd7d412["model"], _0x5d0f8c = _0x319a21["document"]["selection"];
    this["_abortController"] = new AbortController(), this["_undoStepBatch"] = _0xd7d412["model"]["createBatch"]({ "isUndoable": true }), _0x319a21["enqueueChange"](this["_undoStepBatch"], (_0x8ac2c6) => {
      _0x5d0f8c["isCollapsed"] || _0x319a21["deleteContent"](_0x5d0f8c, { "leaveUnmerged": true });
      const _0x4933ce = _0x5d0f8c["getFirstPosition"](), _0x271947 = first(_0x5d0f8c["getSelectedBlocks"]());
      let _0x251279;
      _0x251279 = _0x271947["is"]("element", "paragraph") && _0x271947["isEmpty"] ? _0x4933ce : _0x4933ce["isAtStart"] ? _0x319a21["createPositionBefore"](_0x271947) : _0x4933ce["isAtEnd"] ? _0x319a21["createPositionAfter"](_0x271947) : _0x8ac2c6["split"](_0x4933ce)["position"], this["_importMarker"] = _0x8ac2c6["addMarker"]("importWord:" + uid(), { "usingOperation": false, "affectsData": false, "range": new Range(_0x251279) }), this["_importMarker"]["on"]("change:range", () => {
        "$graveyard" === this["_importMarker"]["getRange"]()["root"]["rootName"] && this["_abortController"]["abort"]();
      });
    }), this["isBusy"] = true, this["refresh"]();
  }
  ["_cleanUpAfterImport"]() {
    const _0x2cfce0 = this["editor"]["model"];
    _0x2cfce0["markers"]["has"](this["_importMarker"]) && _0x2cfce0["enqueueChange"](this["_undoStepBatch"], (_0x5ddeda) => {
      _0x5ddeda["removeMarker"](this["_importMarker"]);
    }), this["_importMarker"] = null, this["_undoStepBatch"] = null, this["_abortController"] = null, this["isBusy"] = false, this["refresh"]();
  }
  ["_sendImportRequest"]({ url: _0x59d166, file: _0x5d301d, serviceConfig: _0x1d4ff1 }) {
    const _0x4deca0 = this["editor"]["plugins"]["get"]("ImportWordEditing")["getToken"](), _0x44f155 = new FormData();
    _0x44f155["set"]("config", JSON["stringify"](_0x1d4ff1)), _0x44f155["set"]("file", _0x5d301d);
    const _0x56a795 = { "method": "POST", "headers": {}, "body": _0x44f155, "signal": this["_abortController"]["signal"] };
    return _0x4deca0 && (_0x56a795["headers"]["Authorization"] = _0x4deca0["value"]), fetch(_0x59d166, _0x56a795);
  }
  ["_handleImportResponse"](_0x2e5713) {
    return _0x2e5713["ok"] ? _0x2e5713["json"]()["then"]((_0x579b97) => {
      if (!this["editor"]["model"]["markers"]["has"](this["_importMarker"])) return;
      "$graveyard" !== this["_importMarker"]["getRange"]()["root"]["rootName"] && this["fire"]("dataInsert", _0x579b97);
    }) : Promise["reject"]();
  }
  ["_handleImportFailure"]() {
    if (this["_abortController"]["signal"]["aborted"]) return void logWarning("import-word-plugin-import-cancelled");
    const _0x373408 = this["editor"], _0x4fd371 = p5(_0x373408["locale"], "An error occurred while importing the Word file.");
    _0x373408["plugins"]["get"]("Notification")["showWarning"](_0x4fd371), logError("import-word-plugin-conversion-failed");
  }
};
var e6 = class extends Plugin {
  constructor(_0x331e3e) {
    super(_0x331e3e);
    __publicField(this, "_token");
    this["_token"] = null;
  }
  static get ["pluginName"]() {
    return "ImportWordEditing";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  static get ["requires"]() {
    return [Notification, ClipboardPipeline, "CloudServices"];
  }
  async ["init"]() {
    const _0x2d6696 = this["editor"];
    _0x2d6696["config"]["define"]("importWord", { "converterUrl": "https://docx-converter.cke-cs.com/v2/convert/docx-html", "tokenUrl": (_0x2d6696["config"]["get"]("cloudServices") || {})["tokenUrl"], "formatting": { "resets": "none", "defaults": "none", "styles": "inline" } }), _0x2d6696["commands"]["add"]("importWord", new d4(_0x2d6696));
    const { tokenUrl: _0x48eec6 } = _0x2d6696["config"]["get"]("importWord");
    if (_0x48eec6) {
      const { tokenUrl: _0x233545 } = _0x2d6696["config"]["get"]("cloudServices") || {};
      this["_token"] = _0x48eec6 === _0x233545 ? _0x2d6696["plugins"]["get"]("CloudServices")["token"] : await _0x2d6696["plugins"]["get"]("CloudServices")["registerTokenUrl"](_0x48eec6);
    }
  }
  ["getToken"]() {
    return this["_token"];
  }
};
var o8 = class extends Plugin {
  static get ["pluginName"]() {
    return "ImportWord";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  static get ["requires"]() {
    return [e6, i3];
  }
};

// node_modules/@ckeditor/ckeditor5-list-multi-level/dist/index.js
var c6 = class extends Command {
  constructor(_0x41fd53, _0x40f0b5, _0xd5d890) {
    super(_0x41fd53);
    __publicField(this, "defaultListMarkerStyle");
    __publicField(this, "_listDefinitions");
    __publicField(this, "_listUtils");
    this["defaultListMarkerStyle"] = _0x40f0b5, this["_listDefinitions"] = _0xd5d890, this["_listUtils"] = this["editor"]["plugins"]["get"]("ListUtils");
  }
  ["refresh"]() {
    this["value"] = this["_getValue"](), this["isEnabled"] = this["_checkEnabled"]();
  }
  ["execute"](_0x103a66 = {}) {
    const _0x2dc45c = this["editor"]["model"], _0x6529fc = _0x103a66["listMarkerStyle"] || this["defaultListMarkerStyle"];
    _0x2dc45c["change"](() => {
      const _0x29a4d8 = this["_getListTypeFromListMarkerStyle"](_0x6529fc);
      if (!_0x29a4d8) return;
      const _0x39f911 = _0x29a4d8 + "List";
      this["editor"]["execute"](_0x39f911, { "additionalAttributes": { "listMarkerStyle": _0x6529fc } });
    });
  }
  ["_getValue"]() {
    const _0x48561b = first(this["editor"]["model"]["document"]["selection"]["getSelectedBlocks"]());
    return this["_listUtils"]["isListItemBlock"](_0x48561b) ? _0x48561b["getAttribute"]("listMarkerStyle") : null;
  }
  ["_checkEnabled"]() {
    const _0x25196e = this["editor"], _0x2e1f0c = _0x25196e["commands"]["get"]("customNumberedList"), _0x1ded48 = _0x25196e["commands"]["get"]("customBulletedList");
    return _0x2e1f0c["isEnabled"] || _0x1ded48["isEnabled"];
  }
  ["_getListTypeFromListMarkerStyle"](_0x1f0fa7) {
    const _0x530660 = this["_listDefinitions"]["find"]((_0x2c6b90) => _0x2c6b90["listMarkerStyle"] == _0x1f0fa7);
    return _0x530660 ? _0x530660["listType"] : null;
  }
};
var i4 = class extends Plugin {
  constructor(_0x455d3c) {
    super(_0x455d3c);
    __publicField(this, "_listDefinitions");
    const _0x5c8b77 = this["editor"]["config"]["get"]("listMultiLevel.listDefinitions") || [];
    this["_listDefinitions"] = [{ "listType": "customNumbered", "listMarkerStyle": "legal", "className": "legal-list", "listMarkers": [{ "marker": (_0x356e3a) => _0x356e3a + "." }] }, ..._0x5c8b77];
  }
  static get ["pluginName"]() {
    return "MultiLevelListEditing";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  static get ["requires"]() {
    return ["ListEditing"];
  }
  ["init"]() {
    const _0x50444b = this["editor"], _0x170bf1 = _0x50444b["model"], _0x4b1b9a = _0x50444b["editing"]["view"], _0x4a55cc = _0x50444b["plugins"]["get"]("ListEditing");
    _0x50444b["commands"]["add"]("multiLevelList", new c6(_0x50444b, "legal", this["_listDefinitions"])), _0x170bf1["schema"]["extend"]("$listItem", { "allowAttributes": ["listMarkerStyle", "listMarker"] }), _0x170bf1["schema"]["addAttributeCheck"]((_0x33f628, _0x53037d) => {
      const _0xbabea7 = _0x33f628["last"];
      if ("listMarker" == _0x53037d || "listMarkerStyle" == _0x53037d) return !(!_0xbabea7["getAttribute"]("listItemId") || !this["_listDefinitions"]["find"]((_0x508fda) => _0x508fda["listType"] == _0xbabea7["getAttribute"]("listType"))) && void 0;
    });
    for (const _0x341e80 of this["_listDefinitions"]) _0x50444b["conversion"]["for"]("upcast")["add"]((_0x450dd6) => {
      _0x450dd6["on"]("element:" + ("customNumbered" == _0x341e80["listType"] ? "ol" : "ul"), y5(_0x341e80, _0x170bf1["schema"]), { "priority": "low" });
    }), _0x4a55cc["registerDowncastStrategy"]({ "scope": "list", "attributeName": "listMarkerStyle", "setAttributeOnDowncast"(_0x38b1, _0x2abea2, _0x68c0a3) {
      _0x2abea2 == _0x341e80["listMarkerStyle"] ? (_0x38b1["addClass"](["multi-level-list", _0x341e80["className"]], _0x68c0a3), _0x38b1["setStyle"]("list-style-type", "none", _0x68c0a3)) : (_0x38b1["removeClass"](["multi-level-list", _0x341e80["className"]], _0x68c0a3), _0x38b1["removeStyle"]("list-style-type", _0x68c0a3));
    } }), _0x4a55cc["registerDowncastStrategy"]({ "scope": "itemMarker", "attributeName": "listMarker", "createElement"(_0x977dda, _0x3379e2, { dataPipeline: _0x53c73a }) {
      if (!_0x3379e2["hasAttribute"]("listMarker")) return null;
      if (_0x3379e2["getAttribute"]("listType") != _0x341e80["listType"] || _0x3379e2["getAttribute"]("listMarkerStyle") != _0x341e80["listMarkerStyle"]) return null;
      return _0x977dda["createUIElement"]("span", { "class": "multi-level-list__marker", ...!_0x53c73a && { "contenteditable": "false" } }, function(_0x10bfe9) {
        const _0x40c4fa = this["toDomElement"](_0x10bfe9);
        return _0x40c4fa["appendChild"](_0x10bfe9["createTextNode"](_0x3379e2["getAttribute"]("listMarker") + " ")), _0x40c4fa;
      });
    }, "canInjectMarkerIntoElement": (_0x27284c) => _0x170bf1["schema"]["checkChild"](_0x27284c, "$text") && _0x170bf1["schema"]["checkChild"](_0x27284c, "$inlineObject") && !_0x170bf1["schema"]["isLimit"](_0x27284c) && _0x27284c["getAttribute"]("listType") == _0x341e80["listType"] && _0x27284c["getAttribute"]("listMarkerStyle") == _0x341e80["listMarkerStyle"] });
    _0x50444b["conversion"]["for"]("upcast")["add"]((_0x6b0f13) => {
      _0x6b0f13["on"]("element:span", /* @__PURE__ */ function(_0xb53b02) {
        return (_0x15cbb2, _0x4a1774, { writer: _0x167ff7, consumable: _0x376ea8 }) => {
          const _0x3483d7 = _0x4a1774["modelCursor"], _0x3038a9 = _0x3483d7["parent"], _0x16a7e6 = _0x4a1774["viewItem"];
          if (_0x376ea8["consume"](_0x16a7e6, { "name": true, "classes": "multi-level-list__marker" }) && _0x3483d7["isAtStart"] && _0x3038a9["hasAttribute"]("listType") && _0x16a7e6["childCount"] > 0) {
            const _0x18bf49 = _0xb53b02["createRangeIn"](_0x16a7e6);
            let _0x38a61e = "";
            for (const _0xe24af6 of _0x18bf49["getItems"]()) _0xe24af6["is"]("$textProxy") && (_0x38a61e += _0xe24af6["data"]["trim"](), _0x376ea8["consume"](_0xe24af6["textNode"]));
            _0x167ff7["setAttribute"]("listMarker", _0x38a61e["trim"](), _0x3038a9);
          }
        };
      }(_0x4b1b9a));
    }), _0x4a55cc["on"]("postFixer", (_0x569736, { listNodes: _0x5d8e66, writer: _0x232974 }) => {
      const _0x3d5c43 = [];
      for (const { node: _0x1fae6c, previousNodeInList: _0x2cc817 } of _0x5d8e66) {
        const _0x15de6c = _0x1fae6c["getAttribute"]("listType"), _0x16fdaa = _0x1fae6c["getAttribute"]("listMarkerStyle") || ("customNumbered" == _0x15de6c ? "legal" : void 0), _0x6e78bf = this["_listDefinitions"]["find"]((_0x26b7a2) => _0x26b7a2["listType"] == _0x15de6c && _0x26b7a2["listMarkerStyle"] == _0x16fdaa);
        if ("customNumbered" != _0x15de6c && "customBulleted" != _0x15de6c && (_0x1fae6c["hasAttribute"]("listMarker") && (_0x232974["removeAttribute"]("listMarker", _0x1fae6c), _0x569736["return"] = true), _0x1fae6c["hasAttribute"]("listMarkerStyle") && (_0x232974["removeAttribute"]("listMarkerStyle", _0x1fae6c), _0x569736["return"] = true)), !_0x6e78bf) {
          "customBulleted" != _0x15de6c || _0x16fdaa || (_0x232974["setAttribute"]("listType", "bulleted", _0x1fae6c), _0x569736["return"] = true);
          continue;
        }
        _0x1fae6c["hasAttribute"]("listMarkerStyle") || (_0x232974["setAttribute"]("listMarkerStyle", _0x16fdaa, _0x1fae6c), _0x569736["return"] = true);
        const _0x53cdfb = _0x1fae6c["getAttribute"]("listIndent");
        if (_0x2cc817 && _0x2cc817["getAttribute"]("listItemId") == _0x1fae6c["getAttribute"]("listItemId")) continue;
        _0x3d5c43["length"] = _0x53cdfb + 1, _0x2cc817 || _0x3d5c43[_0x53cdfb] ? _0x2cc817 && _0x2cc817["getAttribute"]("listType") != _0x6e78bf["listType"] ? _0x3d5c43[_0x53cdfb] = 1 : _0x3d5c43[_0x53cdfb]++ : _0x3d5c43[_0x53cdfb] = _0x1fae6c["getAttribute"]("listStart") || 1;
        const _0x474536 = a11(_0x53cdfb, _0x6e78bf, _0x3d5c43);
        _0x1fae6c["getAttribute"]("listMarker") != _0x474536 && (_0x232974["setAttribute"]("listMarker", _0x474536, _0x1fae6c), _0x569736["return"] = true);
      }
    });
    const _0x4fde8b = _0x50444b["editing"]["view"]["document"];
    this["listenTo"](_0x4fde8b, "clipboardOutput", (_0x5abe81, _0x43427c) => {
      const _0x7d6181 = new Matcher({ "name": "span", "classes": "multi-level-list__marker" }), _0x2d1dce = new Matcher({ "name": "ol", "classes": "multi-level-list", "styles": { "list-style-type": "none" } }), _0x415c78 = new UpcastWriter(_0x43427c["content"]["document"]), _0xd6ca32 = [];
      for (const _0x2866c4 of _0x415c78["createRangeIn"](_0x43427c["content"])["getItems"]()) _0x2866c4["is"]("element") && _0x7d6181["match"](_0x2866c4) && _0xd6ca32["push"](_0x2866c4), _0x2866c4["is"]("element") && _0x2d1dce["match"](_0x2866c4) && _0x415c78["removeStyle"]("list-style-type", _0x2866c4);
      for (const _0xe85c03 of _0xd6ca32) _0x415c78["remove"](_0xe85c03);
    });
  }
  ["afterInit"]() {
    !function(_0x2653d9) {
      function _0x2ea677(_0x3d1093, _0x13a420, _0x1ad988) {
        const _0x522d2b = {};
        _0x522d2b[_0x324c75([110, 117, 109, 98, 101, 114, 79, 102, 82, 111, 117, 110, 100, 115])] = { 16: 10, 24: 12, 32: 14 }, _0x522d2b[_0x324c75([114, 99, 111, 110])] = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145], _0x522d2b[_0x324c75([83])] = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], _0x522d2b[_0x324c75([84, 49])] = [3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474, 1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738, 597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420, 3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577, 605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627, 2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520, 3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205, 2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474, 1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309, 3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720, 2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771, 1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243, 3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470, 1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977, 2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737, 1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754, 361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755, 697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986], _0x522d2b[_0x324c75([84, 50])] = [2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899, 2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108, 4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129, 2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848, 1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043, 1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914, 1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139, 2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658, 3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324, 3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385, 3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499, 1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572, 2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810, 3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411, 3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753, 2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487, 550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313, 2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766], _0x522d2b[_0x324c75([84, 51])] = [1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099, 1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188, 2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329, 1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768, 3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283, 3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114, 3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739, 2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538, 2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324, 1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865, 1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296, 844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713, 3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050, 2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131, 3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513, 2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927, 3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905, 2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126], _0x522d2b[_0x324c75([84, 52])] = [1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549, 1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243, 2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529, 1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963, 3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198, 3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564, 3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214, 2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143, 2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699, 1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945, 1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771, 842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818, 3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340, 2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126, 3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473, 2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917, 3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930, 2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436], _0x522d2b[_0x324c75([85, 49])] = [0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795], _0x522d2b[_0x324c75([85, 50])] = [0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459, 2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537, 3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535, 77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884, 3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824, 3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622, 507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216, 3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879, 129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469, 3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175, 1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921, 2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127, 3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560, 1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387, 2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037, 4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148, 692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663, 2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855], _0x522d2b[_0x324c75([85, 51])] = [0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639, 3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557, 2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032, 3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201, 344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239, 532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878, 3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771, 4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744, 671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199, 4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366, 492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798, 2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695, 3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569, 4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702, 3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217, 1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635, 1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009, 3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150], _0x522d2b[_0x324c75([85, 52])] = [0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874, 2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222, 4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595, 1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591, 4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837, 923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127, 2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424, 2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110, 4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469, 4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481, 1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243, 3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604, 2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802, 585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166, 4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912, 1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703, 3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213, 2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925];
        const _0x4462fb = new Uint8Array(16);
        for (let _0x33b168 = 15; _0x33b168 >= 0; --_0x33b168) _0x4462fb[_0x33b168] = _0x1ad988 % 256, _0x1ad988 = parseInt(_0x1ad988 / 256);
        let _0x43826c = null, _0xabe911 = 16;
        const _0x5ca256 = new Uint8Array(_0x13a420), _0x444f04 = [], _0x53dc34 = [];
        _0x5bb086();
        for (let _0x6ac8fd = 0; _0x6ac8fd < _0x3d1093[_0x324c75([108, 101, 110, 103, 116, 104])]; _0x6ac8fd++) 16 === _0xabe911 && (_0x43826c = _0x325738(_0x4462fb), _0xabe911 = 0, _0x1009ea(_0x4462fb)), _0x3d1093[_0x6ac8fd] ^= _0x43826c[_0xabe911++];
        return _0x3d1093;
        function _0x8d74ce(_0x371c9e) {
          const _0x26a80e = [];
          for (let _0x79692a = 0; _0x79692a < _0x371c9e[_0x324c75([108, 101, 110, 103, 116, 104])]; _0x79692a += 4) _0x26a80e[_0x324c75([112, 117, 115, 104])](_0x371c9e[_0x79692a] << 24 | _0x371c9e[_0x79692a + 1] << 16 | _0x371c9e[_0x79692a + 2] << 8 | _0x371c9e[_0x79692a + 3]);
          return _0x26a80e;
        }
        function _0x1009ea(_0x1a4a37) {
          for (let _0x27c941 = 15; _0x27c941 >= 0; _0x27c941--) {
            if (255 !== _0x1a4a37[_0x27c941]) {
              _0x1a4a37[_0x27c941]++;
              break;
            }
            _0x1a4a37[_0x27c941] = 0;
          }
        }
        function _0x325738(_0x3c0155) {
          const _0x204174 = _0x444f04[_0x324c75([108, 101, 110, 103, 116, 104])] - 1, _0x21bb9a = [0, 0, 0, 0];
          let t2 = _0x8d74ce(_0x3c0155);
          for (let _0x200395 = 0; _0x200395 < 4; _0x200395++) t2[_0x200395] ^= _0x444f04[0][_0x200395];
          for (let _0x4f0eea = 1; _0x4f0eea < _0x204174; _0x4f0eea++) {
            for (let _0xc258d5 = 0; _0xc258d5 < 4; _0xc258d5++) _0x21bb9a[_0xc258d5] = _0x522d2b[_0x324c75([84, 49])][t2[_0xc258d5] >> 24 & 255] ^ _0x522d2b[_0x324c75([84, 50])][t2[(_0xc258d5 + 1) % 4] >> 16 & 255] ^ _0x522d2b[_0x324c75([84, 51])][t2[(_0xc258d5 + 2) % 4] >> 8 & 255] ^ _0x522d2b[_0x324c75([84, 52])][255 & t2[(_0xc258d5 + 3) % 4]] ^ _0x444f04[_0x4f0eea][_0xc258d5];
            t2 = _0x21bb9a[_0x324c75([115, 108, 105, 99, 101])]();
          }
          const _0x408ba5 = new Uint8Array(16);
          let _0x4c6939;
          for (let _0x356df2 = 0; _0x356df2 < 4; _0x356df2++) _0x4c6939 = _0x444f04[_0x204174][_0x356df2], _0x408ba5[4 * _0x356df2] = 255 & (_0x522d2b[_0x324c75([83])][t2[_0x356df2] >> 24 & 255] ^ _0x4c6939 >> 24), _0x408ba5[4 * _0x356df2 + 1] = 255 & (_0x522d2b[_0x324c75([83])][t2[(_0x356df2 + 1) % 4] >> 16 & 255] ^ _0x4c6939 >> 16), _0x408ba5[4 * _0x356df2 + 2] = 255 & (_0x522d2b[_0x324c75([83])][t2[(_0x356df2 + 2) % 4] >> 8 & 255] ^ _0x4c6939 >> 8), _0x408ba5[4 * _0x356df2 + 3] = 255 & (_0x522d2b[_0x324c75([83])][255 & t2[(_0x356df2 + 3) % 4]] ^ _0x4c6939);
          return _0x408ba5;
        }
        function _0x5bb086() {
          const _0x3e3541 = _0x522d2b[_0x324c75([110, 117, 109, 98, 101, 114, 79, 102, 82, 111, 117, 110, 100, 115])][_0x5ca256[_0x324c75([108, 101, 110, 103, 116, 104])]];
          for (let _0x4a0840 = 0; _0x4a0840 <= _0x3e3541; _0x4a0840++) _0x444f04[_0x324c75([112, 117, 115, 104])]([0, 0, 0, 0]), _0x53dc34[_0x324c75([112, 117, 115, 104])]([0, 0, 0, 0]);
          const _0x556c05 = 4 * (_0x3e3541 + 1), _0x3d2df4 = _0x5ca256[_0x324c75([108, 101, 110, 103, 116, 104])] / 4, _0x442a4a = _0x8d74ce(_0x5ca256);
          let _0x1c586b;
          for (let _0x21b103 = 0; _0x21b103 < _0x3d2df4; _0x21b103++) _0x1c586b = _0x21b103 >> 2, _0x444f04[_0x1c586b][_0x21b103 % 4] = _0x442a4a[_0x21b103], _0x53dc34[_0x3e3541 - _0x1c586b][_0x21b103 % 4] = _0x442a4a[_0x21b103];
          let _0x4737dd, _0x4f82bd = 0, t2 = _0x3d2df4;
          for (; t2 < _0x556c05; ) {
            _0x4737dd = _0x442a4a[_0x3d2df4 - 1], _0x442a4a[0] ^= _0x522d2b[_0x324c75([83])][_0x4737dd >> 16 & 255] << 24 ^ _0x522d2b[_0x324c75([83])][_0x4737dd >> 8 & 255] << 16 ^ _0x522d2b[_0x324c75([83])][255 & _0x4737dd] << 8 ^ _0x522d2b[_0x324c75([83])][_0x4737dd >> 24 & 255] ^ _0x522d2b[_0x324c75([114, 99, 111, 110])][_0x4f82bd] << 24, _0x4f82bd += 1;
            for (let _0x546261 = 1; _0x546261 < _0x3d2df4 / 2; _0x546261++) _0x442a4a[_0x546261] ^= _0x442a4a[_0x546261 - 1];
            _0x4737dd = _0x442a4a[_0x3d2df4 / 2 - 1], _0x442a4a[_0x3d2df4 / 2] ^= _0x522d2b[_0x324c75([83])][255 & _0x4737dd] ^ _0x522d2b[_0x324c75([83])][_0x4737dd >> 8 & 255] << 8 ^ _0x522d2b[_0x324c75([83])][_0x4737dd >> 16 & 255] << 16 ^ _0x522d2b[_0x324c75([83])][_0x4737dd >> 24 & 255] << 24;
            for (let _0x4b3cc6 = _0x3d2df4 / 2 + 1; _0x4b3cc6 < _0x3d2df4; _0x4b3cc6++) _0x442a4a[_0x4b3cc6] ^= _0x442a4a[_0x4b3cc6 - 1];
            let _0x1982ee, _0x41c42c, _0x28eae = 0;
            for (; _0x28eae < _0x3d2df4 && t2 < _0x556c05; ) _0x1982ee = t2 >> 2, _0x41c42c = t2 % 4, _0x444f04[_0x1982ee][_0x41c42c] = _0x442a4a[_0x28eae], _0x53dc34[_0x3e3541 - _0x1982ee][_0x41c42c] = _0x442a4a[_0x28eae++], t2++;
          }
          for (let _0x3f167f = 1; _0x3f167f < _0x3e3541; _0x3f167f++) for (let _0x4cc6a6 = 0; _0x4cc6a6 < 4; _0x4cc6a6++) _0x4737dd = _0x53dc34[_0x3f167f][_0x4cc6a6], _0x53dc34[_0x3f167f][_0x4cc6a6] = _0x522d2b[_0x324c75([85, 49])][_0x4737dd >> 24 & 255] ^ _0x522d2b[_0x324c75([85, 50])][_0x4737dd >> 16 & 255] ^ _0x522d2b[_0x324c75([85, 51])][_0x4737dd >> 8 & 255] ^ _0x522d2b[_0x324c75([85, 52])][255 & _0x4737dd];
        }
      }
      function _0x324c75(_0x7a2b6c) {
        return _0x7a2b6c["map"]((_0x1bd677) => String["fromCharCode"](_0x1bd677))["join"]("");
      }
      ((_0x3e68e9) => {
        function _0x48bfe8() {
          const _0x373494 = [{ [_0x324c75([105, 100])]: 1, [_0x324c75([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x324c75([67, 111, 109, 109, 101, 110, 116, 115]), [_0x324c75([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x324c75([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]), [_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x324c75([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x324c75([104, 97, 110, 100, 108, 101, 114])]: _0x324c75([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x324c75([99, 104, 101, 99, 107, 65, 108, 115, 111])]: [{ [_0x324c75([105, 100])]: 2, [_0x324c75([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x324c75([84, 114, 97, 99, 107, 32, 67, 104, 97, 110, 103, 101, 115]), [_0x324c75([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x324c75([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103]), [_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x324c75([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x324c75([104, 97, 110, 100, 108, 101, 114])]: _0x324c75([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115]), [_0x324c75([111, 112, 116, 105, 111, 110, 115])]: { [_0x324c75([97, 105, 119, 115, 103, 105, 99])]: true, [_0x324c75([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x324c75([97, 105, 114, 118, 105, 105, 108])]: true } }], [_0x324c75([111, 112, 116, 105, 111, 110, 115])]: { [_0x324c75([97, 105, 119, 115, 103, 105, 99])]: true, [_0x324c75([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x324c75([97, 105, 114, 118, 105, 105, 108])]: true } }, { [_0x324c75([105, 100])]: 3, [_0x324c75([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x324c75([80, 97, 103, 105, 110, 97, 116, 105, 111, 110]), [_0x324c75([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x324c75([80, 97, 103, 105, 110, 97, 116, 105, 111, 110, 76, 111, 111, 107, 117, 112]), [_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x324c75([112, 97, 103, 105, 110, 97, 116, 105, 111, 110, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x324c75([104, 97, 110, 100, 108, 101, 114])]: _0x324c75([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x324c75([105, 100])]: 4, [_0x324c75([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x324c75([82, 101, 118, 105, 115, 105, 111, 110, 32, 72, 105, 115, 116, 111, 114, 121]), [_0x324c75([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x324c75([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]), [_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x324c75([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x324c75([104, 97, 110, 100, 108, 101, 114])]: _0x324c75([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 82, 101, 118, 105, 115, 105, 111, 110, 72, 105, 115, 116, 111, 114, 121]), [_0x324c75([111, 112, 116, 105, 111, 110, 115])]: { [_0x324c75([97, 105, 119, 115, 103, 105, 99])]: true, [_0x324c75([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x324c75([97, 105, 114, 118, 105, 105, 108])]: true } }, { [_0x324c75([105, 100])]: 5, [_0x324c75([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x324c75([68, 111, 99, 117, 109, 101, 110, 116, 32, 79, 117, 116, 108, 105, 110, 101]), [_0x324c75([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x324c75([68, 111, 99, 117, 109, 101, 110, 116, 79, 117, 116, 108, 105, 110, 101, 85, 73]), [_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x324c75([100, 111, 99, 117, 109, 101, 110, 116, 79, 117, 116, 108, 105, 110, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x324c75([104, 97, 110, 100, 108, 101, 114])]: _0x324c75([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x324c75([111, 112, 116, 105, 111, 110, 115])]: { [_0x324c75([102, 103, 105])]: [12] } }, { [_0x324c75([105, 100])]: 6, [_0x324c75([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x324c75([70, 111, 114, 109, 97, 116, 32, 80, 97, 105, 110, 116, 101, 114]), [_0x324c75([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x324c75([70, 111, 114, 109, 97, 116, 80, 97, 105, 110, 116, 101, 114, 85, 73]), [_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x324c75([102, 111, 114, 109, 97, 116, 80, 97, 105, 110, 116, 101, 114, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x324c75([104, 97, 110, 100, 108, 101, 114])]: _0x324c75([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x324c75([111, 112, 116, 105, 111, 110, 115])]: { [_0x324c75([102, 103, 105])]: [12] } }, { [_0x324c75([105, 100])]: 7, [_0x324c75([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x324c75([83, 108, 97, 115, 104, 32, 67, 111, 109, 109, 97, 110, 100]), [_0x324c75([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x324c75([83, 108, 97, 115, 104, 67, 111, 109, 109, 97, 110, 100, 85, 73]), [_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x324c75([115, 108, 97, 115, 104, 67, 111, 109, 109, 97, 110, 100, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x324c75([104, 97, 110, 100, 108, 101, 114])]: _0x324c75([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x324c75([111, 112, 116, 105, 111, 110, 115])]: { [_0x324c75([102, 103, 105])]: [12] } }, { [_0x324c75([105, 100])]: 8, [_0x324c75([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x324c75([84, 97, 98, 108, 101, 32, 111, 102, 32, 67, 111, 110, 116, 101, 110, 116, 115]), [_0x324c75([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x324c75([84, 97, 98, 108, 101, 79, 102, 67, 111, 110, 116, 101, 110, 116, 115, 69, 100, 105, 116, 105, 110, 103]), [_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x324c75([116, 97, 98, 108, 101, 79, 102, 67, 111, 110, 116, 101, 110, 116, 115, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x324c75([104, 97, 110, 100, 108, 101, 114])]: _0x324c75([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x324c75([111, 112, 116, 105, 111, 110, 115])]: { [_0x324c75([102, 103, 105])]: [12] } }, { [_0x324c75([105, 100])]: 9, [_0x324c75([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x324c75([84, 101, 109, 112, 108, 97, 116, 101]), [_0x324c75([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x324c75([84, 101, 109, 112, 108, 97, 116, 101, 85, 73]), [_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x324c75([116, 101, 109, 112, 108, 97, 116, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x324c75([104, 97, 110, 100, 108, 101, 114])]: _0x324c75([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x324c75([111, 112, 116, 105, 111, 110, 115])]: { [_0x324c75([102, 103, 105])]: [12, 14] } }, { [_0x324c75([105, 100])]: 10, [_0x324c75([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x324c75([80, 97, 115, 116, 101, 32, 102, 114, 111, 109, 32, 79, 102, 102, 105, 99, 101, 32, 69, 110, 104, 97, 110, 99, 101, 100]), [_0x324c75([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x324c75([80, 97, 115, 116, 101, 70, 114, 111, 109, 79, 102, 102, 105, 99, 101, 69, 110, 104, 97, 110, 99, 101, 100, 73, 110, 108, 105, 110, 101, 114]), [_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x324c75([112, 97, 115, 116, 101, 70, 114, 111, 109, 79, 102, 102, 105, 99, 101, 69, 110, 104, 97, 110, 99, 101, 100, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x324c75([104, 97, 110, 100, 108, 101, 114])]: _0x324c75([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x324c75([111, 112, 116, 105, 111, 110, 115])]: { [_0x324c75([102, 103, 105])]: [12] } }, { [_0x324c75([105, 100])]: 11, [_0x324c75([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x324c75([65, 73, 32, 65, 115, 115, 105, 115, 116, 97, 110, 116]), [_0x324c75([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x324c75([65, 73, 65, 115, 115, 105, 115, 116, 97, 110, 116, 85, 73]), [_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x324c75([97, 105, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x324c75([104, 97, 110, 100, 108, 101, 114])]: _0x324c75([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x324c75([105, 100])]: 12, [_0x324c75([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x324c75([80, 114, 111, 100, 117, 99, 116, 105, 118, 105, 116, 121, 32, 112, 97, 99, 107]) }, { [_0x324c75([105, 100])]: 13, [_0x324c75([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x324c75([67, 97, 115, 101, 32, 67, 104, 97, 110, 103, 101]), [_0x324c75([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x324c75([67, 97, 115, 101, 67, 104, 97, 110, 103, 101, 85, 73]), [_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x324c75([99, 97, 115, 101, 67, 104, 97, 110, 103, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x324c75([104, 97, 110, 100, 108, 101, 114])]: _0x324c75([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x324c75([111, 112, 116, 105, 111, 110, 115])]: { [_0x324c75([102, 103, 105])]: [12] } }, { [_0x324c75([105, 100])]: 14, [_0x324c75([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x324c75([68, 114, 117, 112, 97, 108, 32, 112, 97, 99, 107]), [_0x324c75([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114])]: _0x324c75([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114, 70, 111, 114, 68, 114, 117, 112, 97, 108]) }, { [_0x324c75([105, 100])]: 15, [_0x324c75([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x324c75([77, 117, 108, 116, 105, 32, 76, 101, 118, 101, 108, 32, 76, 105, 115, 116]), [_0x324c75([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x324c75([77, 117, 108, 116, 105, 76, 101, 118, 101, 108, 76, 105, 115, 116, 69, 100, 105, 116, 105, 110, 103]), [_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x324c75([109, 117, 108, 116, 105, 76, 101, 118, 101, 108, 76, 105, 115, 116, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x324c75([104, 97, 110, 100, 108, 101, 114])]: _0x324c75([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x324c75([105, 100])]: 16, [_0x324c75([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x324c75([77, 101, 114, 103, 101, 32, 70, 105, 101, 108, 100, 115]), [_0x324c75([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x324c75([77, 101, 114, 103, 101, 70, 105, 101, 108, 100, 115, 85, 73]), [_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x324c75([109, 101, 114, 103, 101, 70, 105, 101, 108, 100, 115, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x324c75([104, 97, 110, 100, 108, 101, 114])]: _0x324c75([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x324c75([111, 112, 116, 105, 111, 110, 115])]: { [_0x324c75([102, 103, 105])]: [12] } }];
          return _0x116a73(_0x373494), _0x373494;
          function _0x4c8533(_0x271d90) {
            return 1 << _0x271d90 - 1;
          }
          function _0x116a73(_0x465df4) {
            _0x465df4[_0x324c75([102, 111, 114, 69, 97, 99, 104])]((_0x180b74) => {
              _0x180b74[_0x324c75([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])] = _0x4c8533(_0x180b74[_0x324c75([105, 100])]), _0x5155d9(_0x180b74) && _0x180b74[_0x324c75([99, 104, 101, 99, 107, 65, 108, 115, 111])] && _0x116a73(_0x180b74[_0x324c75([99, 104, 101, 99, 107, 65, 108, 115, 111])]);
            });
          }
        }
        function _0x5155d9(_0x55b152) {
          return _0x324c75([112, 108, 117, 103, 105, 110, 78, 97, 109, 101]) in _0x55b152;
        }
        const _0xae64f2 = [1, 85, 78, 115, 198, 255, 50, 112, 83, 87, 161], _0x387562 = [127, 34, 6, 211, 167, 86, 146, 199, 132, 160, 18];
        function _0x4fd353(_0x8c0910) {
          const _0x5ec549 = [29, 221, 175, 90, 231, 133, 239, 240, 75, 180];
          return _0x11b005(_0x8c0910, new Uint8Array([..._0xae64f2, ..._0x5ec549, ..._0x387562]));
        }
        function _0x11b005(_0x1fcf5d, _0x2e4c87) {
          const _0x330e37 = _0x53e0af(_0x1fcf5d), _0x5c593a = Array[_0x324c75([102, 114, 111, 109])](_0x4a45eb(_0x330e37)), _0x4d7075 = _0x5c593a[_0x324c75([112, 111, 112])](), _0x356f59 = _0x5c593a[_0x324c75([112, 111, 112])]();
          return _0x14cfc9(_0x2ea677(_0x5c593a, _0x2e4c87, _0x356f59 + 256 * _0x4d7075));
        }
        function _0x53e0af(_0x44f8f3) {
          const _0xd269ab = atob(_0x44f8f3), [_0x308429, _0x39f73c] = _0xd269ab[_0x324c75([115, 112, 108, 105, 116])](_0x324c75([45]));
          try {
            if (atob(_0x39f73c)) return atob(_0x308429);
          } catch (_0x2520de) {
          }
          return _0xd269ab;
        }
        function _0x309cb1(_0x44d602) {
          try {
            const _0xe9b122 = _0x4fd353(_0x44d602), _0x4eaf55 = JSON[_0x324c75([112, 97, 114, 115, 101])](_0xe9b122), _0x4664e2 = parseInt(_0x4eaf55[_0x324c75([49])]), _0xa3da46 = _0x4eaf55[_0x324c75([50])] || "", _0x4dcd19 = parseInt(_0x4eaf55[_0x324c75([51])]), _0x4f8b0b = parseInt(_0x4eaf55[_0x324c75([52])]) || 0, _0x3ba250 = parseInt(_0x4eaf55[_0x324c75([53])]) || 0;
            return { [_0x324c75([112, 114, 111, 100, 117, 99, 116, 78, 97, 109, 101])]: _0xa3da46, [_0x324c75([97, 108, 108, 111, 119, 101, 100, 80, 108, 117, 103, 105, 110, 115])]: _0x4f8b0b, [_0x324c75([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])]: _0x4664e2, [_0x324c75([105, 115, 84, 114, 105, 97, 108])]: _0x4dcd19, [_0x324c75([105, 115, 73, 110, 116, 101, 114, 110, 97, 108])]: _0x3ba250 };
          } catch (_0x3f6270) {
            return null;
          }
        }
        const _0x57dc5e = _0x48bfe8(), _0x1ee4a0 = { [_0x324c75([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101])]: _0x2b4027, [_0x324c75([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115])]: _0x28914e, [_0x324c75([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 82, 101, 118, 105, 115, 105, 111, 110, 72, 105, 115, 116, 111, 114, 121])]: _0x415f9d }, _0x111961 = _0x3e68e9[_0x324c75([99, 111, 110, 115, 116, 114, 117, 99, 116, 111, 114])][_0x324c75([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])], _0x5b2270 = _0x324c75([99, 111, 110, 116, 101, 120, 116]) in _0x3e68e9 ? _0x3e68e9["context"] : _0x3e68e9["editor"], _0x1fe52b = _0x324c75([52, 48, 52, 56, 50, 50, 49, 50]), _0x3585a1 = _0x324c75([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]), _0x52c6d3 = _0x5b2270["config"]["get"](_0x324c75([108, 105, 99, 101, 110, 115, 101, 75, 101, 121])), _0x460529 = _0x57dc5e[_0x324c75([102, 105, 108, 116, 101, 114])](_0x5155d9)[_0x324c75([102, 105, 110, 100])]((_0x27ac0b) => _0x27ac0b[_0x324c75([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])] === _0x111961);
        function _0x512024(_0x4d2949, _0x5d8bd6) {
          _0x1ee4a0[_0x5d8bd6[_0x324c75([104, 97, 110, 100, 108, 101, 114])]](_0x4d2949, _0x5d8bd6), _0x5d8bd6[_0x324c75([99, 104, 101, 99, 107, 65, 108, 115, 111])] && _0x5d8bd6[_0x324c75([99, 104, 101, 99, 107, 65, 108, 115, 111])][_0x324c75([102, 105, 108, 116, 101, 114])]((_0x101a3b) => _0x3ee069(_0x5b2270, _0x101a3b[_0x324c75([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]))[_0x324c75([102, 111, 114, 69, 97, 99, 104])]((_0x2c51ce) => _0x512024(_0x4d2949, _0x2c51ce));
        }
        function _0x2b4027(_0x351e34, _0x4666a7) {
          _0x3ec144(_0x4283db(_0x351e34, _0x4666a7), _0x4666a7);
        }
        function _0x28914e(_0x23d0c5, _0x4abbf8) {
          function _0x50cace(_0x2f3af4, _0x2737b2) {
            try {
              if (_0x3ee069(_0x5b2270, _0x324c75([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103])) && _0x2f3af4) {
                const _0x42ef0f = _0x23287f(_0x5b2270, _0x324c75([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103]))[_0x324c75([95, 101, 120, 101, 99, 117, 116, 101, 83, 117, 103, 103, 101, 115, 116, 105, 111, 110])];
                if (parseInt(_0x42ef0f) / 2 > _0x2f3af4[_0x324c75([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])]) return _0x1ccf50(_0x2737b2[_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x324c75([73, 110, 118, 97, 108, 105, 100]));
              }
              return _0x4283db(_0x2f3af4, _0x2737b2);
            } catch (_0x4e7e04) {
              return _0x1ccf50(_0x2737b2[_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x324c75([73, 110, 118, 97, 108, 105, 100]));
            }
          }
          _0x3ec144(_0x50cace(_0x23d0c5, _0x4abbf8), _0x4abbf8);
        }
        function _0x415f9d(_0x14c1c3, _0x1ecd79) {
          const _0x2a8084 = _0x387562[0] * _0xae64f2[1], _0x130d7c = _0x387562[0] * _0xae64f2[2], _0x566a71 = _0x387562[2] * _0xae64f2[2];
          _0x3ee069(_0x5b2270, _0x324c75([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121])) && _0x23287f(_0x5b2270, _0x324c75([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121]))[_0x324c75([115, 116, 97, 116, 101])] == _0x324c75([99, 111, 110, 110, 101, 99, 116, 101, 100]) && (window[_0x519722()] = _0x566a71);
          function _0x14ece4(_0x1eaaed, _0x3c652e) {
            try {
              return _0x29ac64() ? _0x1ccf50(_0x3c652e[_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x324c75([86, 97, 108, 105, 100])) : _0x4283db(_0x1eaaed, _0x3c652e);
            } catch (_0x5a8af9) {
              return _0x1ccf50(_0x3c652e[_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x324c75([73, 110, 118, 97, 108, 105, 100]));
            }
          }
          function _0x1806c7(_0x592a24, _0x1e121f) {
            const _0x2a6c33 = 7;
            if (_0x592a24 == _0x1e121f[_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x324c75([73, 110, 118, 97, 108, 105, 100])) _0x31c79d();
            else {
              if (_0x592a24 == _0x1e121f[_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x324c75([84, 114, 105, 97, 108])) {
                const _0x3e55eb = _0x1fac82();
                _0x3e55eb && _0x17cdcd(_0x3e55eb, _0x1e121f[_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                const _0x140f76 = _0x4b7a9b();
                window[_0x324c75([115, 101, 116, 84, 105, 109, 101, 111, 117, 116])](() => {
                  _0x17cdcd(_0x324c75([116, 105, 109, 101]), _0x1e121f[_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                }, _0x140f76);
                const _0x2d0f7b = _0x23287f(_0x5b2270, _0x324c75([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x324c75([95, 114, 101, 118, 105, 115, 105, 111, 110, 115])];
                _0x2d0f7b[_0x324c75([108, 101, 110, 103, 116, 104])] >= _0x2a6c33 ? _0x17cdcd(_0x324c75([114, 101, 118, 105, 115, 105, 111, 110, 115]), _0x1e121f[_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]) : _0x2d0f7b["on"](_0x324c75([97, 100, 100]), () => {
                  _0x2d0f7b[_0x324c75([108, 101, 110, 103, 116, 104])] >= _0x2a6c33 && _0x17cdcd(_0x324c75([114, 101, 118, 105, 115, 105, 111, 110, 115]), _0x1e121f[_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                });
              }
            }
          }
          function _0x1fac82() {
            if (!_0x3ee069(_0x5b2270, _0x324c75([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) return false;
            for (const _0x42f310 in window) if (Number["isNaN"](Number(_0x42f310))) {
              if (window[_0x42f310] === _0x2a8084) return _0x324c75([116, 105, 109, 101]);
              if (window[_0x42f310] === _0x130d7c) return _0x324c75([114, 101, 118, 105, 115, 105, 111, 110, 115]);
            }
            return false;
          }
          function _0x29ac64() {
            if (!_0x3ee069(_0x5b2270, _0x324c75([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) return false;
            for (const _0x49e716 in window) if (Number["isNaN"](Number(_0x49e716)) && window[_0x49e716] === _0x566a71) return true;
            return false;
          }
          function _0x17cdcd(_0x50e0c7, _0x9401cc) {
            _0x31c79d(), _0x1ccf50(_0x9401cc + _0x324c75([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58]) + _0x50e0c7), window[_0x519722()] = _0x50e0c7 === _0x324c75([116, 105, 109, 101]) ? _0x2a8084 : _0x130d7c;
          }
          function _0x4b7a9b() {
            let _0x42d6dd = _0x387562[6] * _0xae64f2[8] * _0xae64f2[6];
            return _0x3ee069(_0x5b2270, _0x324c75([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114])) && (_0x42d6dd /= 10), _0x42d6dd;
          }
          function _0x31c79d() {
            const _0x4641ee = _0x5b2270;
            function _0x100f2d() {
              _0x3ee069(_0x4641ee, _0x324c75([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114])) && (_0x23287f(_0x4641ee, _0x324c75([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x324c75([117, 110, 98, 105, 110, 100])](_0x324c75([105, 115, 69, 110, 97, 98, 108, 101, 100])), _0x23287f(_0x4641ee, _0x324c75([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x324c75([105, 115, 69, 110, 97, 98, 108, 101, 100])] = false, _0x23287f(_0x4641ee, _0x324c75([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x324c75([117, 112, 100, 97, 116, 101])] = _0x325b2c, _0x23287f(_0x4641ee, _0x324c75([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x324c75([115, 97, 118, 101, 82, 101, 118, 105, 115, 105, 111, 110])] = _0x325b2c, _0x4641ee[_0x324c75([109, 111, 100, 101, 108])][_0x324c75([99, 104, 97, 110, 103, 101])] = _0x325b2c, _0x4641ee[_0x324c75([109, 111, 100, 101, 108])][_0x324c75([101, 110, 113, 117, 101, 117, 101, 67, 104, 97, 110, 103, 101])] = _0x325b2c, _0x4641ee[_0x324c75([101, 110, 97, 98, 108, 101, 82, 101, 97, 100, 79, 110, 108, 121, 77, 111, 100, 101])](_0x324c75([109, 111, 100, 101, 108]))), _0x3ee069(_0x4641ee, _0x324c75([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114])) && (_0x23287f(_0x4641ee, _0x324c75([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x324c75([117, 110, 98, 105, 110, 100])](_0x324c75([105, 115, 69, 110, 97, 98, 108, 101, 100])), _0x23287f(_0x4641ee, _0x324c75([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x324c75([105, 115, 69, 110, 97, 98, 108, 101, 100])] = false, _0x23287f(_0x4641ee, _0x324c75([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x324c75([99, 111, 109, 112, 97, 114, 101])] = _0x325b2c, _0x23287f(_0x4641ee, _0x324c75([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x324c75([95, 103, 101, 116, 68, 105, 102, 102])] = _0x325b2c);
            }
            _0x4641ee[_0x324c75([115, 116, 97, 116, 101])] == _0x324c75([114, 101, 97, 100, 121]) ? _0x100f2d() : _0x4641ee[_0x324c75([111, 110, 99, 101])](_0x324c75([114, 101, 97, 100, 121]), () => {
              if (_0x3ee069(_0x4641ee, _0x324c75([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114])) && _0x100f2d(), _0x3ee069(_0x4641ee, _0x324c75([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) {
                const _0x499280 = _0x23287f(_0x4641ee, _0x324c75([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121])), _0x441975 = _0x499280["getRevision"](0), _0x2a9dec = _0x499280["getEarlierVisibleRevision"](_0x441975[_0x324c75([105, 100])]);
                _0x23287f(_0x4641ee, _0x324c75([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x324c75([99, 111, 109, 112, 97, 114, 101])](_0x441975[_0x324c75([105, 100])], _0x2a9dec ? _0x2a9dec[_0x324c75([105, 100])] : null, 1)["then"](() => _0x100f2d());
              }
            });
          }
          _0x1806c7(_0x14ece4(_0x14c1c3, _0x1ecd79), _0x1ecd79);
        }
        function _0x4283db(_0x48ea2f, _0x2293da) {
          try {
            return _0x4cd274(_0x2293da) ? _0x1ccf50(_0x2293da[_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x324c75([86, 97, 108, 105, 100])) : _0x48ea2f && _0x50d081(_0x48ea2f[_0x324c75([97, 108, 108, 111, 119, 101, 100, 80, 108, 117, 103, 105, 110, 115])], _0x2293da) ? _0x48ea2f[_0x324c75([105, 115, 73, 110, 116, 101, 114, 110, 97, 108])] && !window[_0x324c75([111, 112, 101, 110])][_0x324c75([99, 108, 111, 115, 101, 100])] || parseInt(_0x1fe52b) / 2 > _0x48ea2f[_0x324c75([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])] ? _0x1ccf50(_0x2293da[_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x324c75([73, 110, 118, 97, 108, 105, 100])) : _0x48ea2f[_0x324c75([105, 115, 84, 114, 105, 97, 108])] ? _0x1ccf50(_0x2293da[_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x324c75([84, 114, 105, 97, 108])) : _0x1ccf50(_0x2293da[_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x324c75([86, 97, 108, 105, 100])) : _0x1ccf50(_0x2293da[_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x324c75([73, 110, 118, 97, 108, 105, 100]));
          } catch (_0x8c8d11) {
            return _0x1ccf50(_0x2293da[_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x324c75([73, 110, 118, 97, 108, 105, 100]));
          }
        }
        function _0x3ec144(_0x232289, _0x1b3b5e) {
          if (_0x5b2270 instanceof Context) {
            const _0x359f57 = _0x5b2270;
            _0x232289 == _0x1b3b5e[_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x324c75([73, 110, 118, 97, 108, 105, 100]) ? _0x3d3ed0(_0x359f57) : _0x232289 == _0x1b3b5e[_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x324c75([84, 114, 105, 97, 108]) && window[_0x324c75([115, 101, 116, 84, 105, 109, 101, 111, 117, 116])](() => {
              _0x3d3ed0(_0x359f57), _0x1ccf50(_0x1b3b5e[_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x324c75([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 116, 105, 109, 101]));
            }, _0x387562[6] * _0xae64f2[8] * _0xae64f2[6]), _0x359f57[_0x324c75([101, 100, 105, 116, 111, 114, 115])][_0x324c75([111, 110])](_0x324c75([97, 100, 100]), (_0x80dbde, _0x23ef88) => {
              _0x232289 != _0x1b3b5e[_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x324c75([73, 110, 118, 97, 108, 105, 100]) && _0x232289 != _0x1b3b5e[_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x324c75([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 116, 105, 109, 101]) && _0x232289 != _0x1b3b5e[_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x324c75([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 111, 112, 101, 114, 97, 116, 105, 111, 110, 115]) || _0x26425f(_0x23ef88);
            });
          } else {
            const _0xd810d4 = _0x5b2270;
            _0x232289 == _0x1b3b5e[_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x324c75([73, 110, 118, 97, 108, 105, 100]) ? _0x26425f(_0xd810d4) : _0x232289 == _0x1b3b5e[_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x324c75([84, 114, 105, 97, 108]) && _0xd810d4[_0x324c75([111, 110])](_0x324c75([114, 101, 97, 100, 121]), () => {
              let _0x5cf17e = 0;
              _0xd810d4[_0x324c75([109, 111, 100, 101, 108])][_0x324c75([111, 110])](_0x324c75([97, 112, 112, 108, 121, 79, 112, 101, 114, 97, 116, 105, 111, 110]), (_0x5c42dd, _0x4e17f9) => {
                _0x4e17f9[0][_0x324c75([105, 115, 68, 111, 99, 117, 109, 101, 110, 116, 79, 112, 101, 114, 97, 116, 105, 111, 110])] && _0x5cf17e++, 504 === _0x5cf17e && (_0x26425f(_0xd810d4), _0x1ccf50(_0x1b3b5e[_0x324c75([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x324c75([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 111, 112, 101, 114, 97, 116, 105, 111, 110, 115])), _0x5c42dd[_0x324c75([111, 102, 102])]());
              }, { "priority": _0x324c75([104, 105, 103, 104, 101, 115, 116]) });
            });
          }
        }
        function _0x1ccf50(_0x23e4e2) {
          const _0x85d5cb = _0x519722();
          return _0x5b2270[_0x85d5cb] = _0x23e4e2, _0x23e4e2;
        }
        function _0x519722() {
          const _0x421d69 = String(window[_0x324c75([112, 101, 114, 102, 111, 114, 109, 97, 110, 99, 101])][_0x324c75([110, 111, 119])]())[_0x324c75([114, 101, 112, 108, 97, 99, 101])](_0x324c75([46]), "");
          let _0x3a711b = "";
          for (let _0x489084 = 0; _0x489084 < _0x421d69[_0x324c75([108, 101, 110, 103, 116, 104])]; _0x489084 += 2) {
            let _0x5b5f96 = parseInt(_0x421d69[_0x324c75([115, 117, 98, 115, 116, 114, 105, 110, 103])](_0x489084, _0x489084 + 2));
            _0x5b5f96 >= _0x3585a1[_0x324c75([108, 101, 110, 103, 116, 104])] && (_0x5b5f96 -= _0x3585a1[_0x324c75([108, 101, 110, 103, 116, 104])]), _0x3a711b += _0x3585a1[_0x5b5f96];
          }
          return _0x3a711b;
        }
        function _0x3d3ed0(_0x2c015e) {
          for (const _0x1530f5 of _0x2c015e[_0x324c75([101, 100, 105, 116, 111, 114, 115])]) _0x26425f(_0x1530f5);
          _0x23287f(_0x2c015e, _0x324c75([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x324c75([115, 119, 105, 116, 99, 104, 82, 101, 97, 100, 79, 110, 108, 121])](true), _0x23287f(_0x2c015e, _0x324c75([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x324c75([115, 119, 105, 116, 99, 104, 82, 101, 97, 100, 79, 110, 108, 121])] = _0x325b2c;
        }
        function _0x26425f(_0x22685d) {
          function _0x48e3c8() {
            _0x22685d[_0x324c75([109, 111, 100, 101, 108])][_0x324c75([99, 104, 97, 110, 103, 101])] = _0x325b2c, _0x22685d[_0x324c75([109, 111, 100, 101, 108])][_0x324c75([101, 110, 113, 117, 101, 117, 101, 67, 104, 97, 110, 103, 101])] = _0x325b2c, _0x22685d[_0x324c75([101, 110, 97, 98, 108, 101, 82, 101, 97, 100, 79, 110, 108, 121, 77, 111, 100, 101])](_0x324c75([109, 111, 100, 101, 108]));
          }
          _0x22685d[_0x324c75([115, 116, 97, 116, 101])] == _0x324c75([114, 101, 97, 100, 121]) ? _0x48e3c8() : _0x22685d[_0x324c75([111, 110, 99, 101])](_0x324c75([114, 101, 97, 100, 121]), () => _0x48e3c8());
        }
        function _0x325b2c() {
          return null;
        }
        function _0x50d081(_0x5b4a5f, _0x4b63c9) {
          const _0x235790 = !!(_0x5b4a5f & _0x4b63c9[_0x324c75([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])]), _0x1161d9 = _0x2c790c(_0x5b4a5f, _0x4b63c9);
          return _0x235790 || _0x1161d9;
        }
        function _0x2c790c(_0x4c311a, _0x2da952) {
          const _0x3837a1 = (_0x2da952[_0x324c75([111, 112, 116, 105, 111, 110, 115])] || {})[_0x324c75([102, 103, 105])] || null;
          return !!_0x3837a1 && _0x57dc5e[_0x324c75([102, 105, 108, 116, 101, 114])]((_0xe5482d) => _0x3837a1[_0x324c75([105, 110, 99, 108, 117, 100, 101, 115])](_0xe5482d[_0x324c75([105, 100])]))[_0x324c75([102, 105, 108, 116, 101, 114])]((_0x10b2d0) => !_0x53e33d(_0x10b2d0))[_0x324c75([115, 111, 109, 101])]((_0x17859b) => !!(_0x4c311a & _0x17859b[_0x324c75([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])]));
        }
        function _0x53e33d(_0x416042) {
          const _0x3e3afc = { [_0x324c75([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114, 70, 111, 114, 68, 114, 117, 112, 97, 108])]: _0x4a5ba0 };
          return !!_0x416042["forbiddenHandler"] && _0x3e3afc[_0x416042["forbiddenHandler"]]();
        }
        function _0x4a5ba0() {
          return !window[_0x324c75([68, 114, 117, 112, 97, 108])] || !_0x3ee069(_0x5b2270, _0x324c75([100, 114, 117, 112, 97, 108, 80, 111, 119, 101, 114, 101, 100, 66, 121]));
        }
        function _0x4cd274(_0x45a59a) {
          if (!_0x3ee069(_0x5b2270, _0x45a59a[_0x324c75([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])])) return true;
          const _0x5cf5d1 = _0x45a59a[_0x324c75([111, 112, 116, 105, 111, 110, 115])] || {}, _0x506153 = _0x5cf5d1[_0x324c75([97, 105, 119, 115, 103, 105, 99])] || false, _0x4db2bb = _0x5cf5d1[_0x324c75([97, 105, 116, 99, 100, 103, 105, 108])] || false, _0x1894c0 = _0x5cf5d1[_0x324c75([97, 105, 114, 118, 105, 105, 108])] || false;
          if (_0x3ee069(_0x5b2270, _0x324c75([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121])) && _0x23287f(_0x5b2270, _0x324c75([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121]))[_0x324c75([115, 116, 97, 116, 101])] == _0x324c75([99, 111, 110, 110, 101, 99, 116, 101, 100]) && _0x506153) return true;
          if (_0x3ee069(_0x5b2270, _0x324c75([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 68, 97, 116, 97, 71, 101, 116, 116, 101, 114])) && _0x23287f(_0x5b2270, _0x324c75([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 68, 97, 116, 97, 71, 101, 116, 116, 101, 114]))[_0x324c75([114, 101, 115, 117, 108, 116])] == _0x324c75([101, 110, 100]) && _0x4db2bb) return true;
          return !(!_0x3ee069(_0x5b2270, _0x324c75([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114, 73, 110, 116, 101, 103, 114, 97, 116, 105, 111, 110])) || _0x23287f(_0x5b2270, _0x324c75([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114, 73, 110, 116, 101, 103, 114, 97, 116, 105, 111, 110]))[_0x324c75([114, 101, 115, 117, 108, 116])] != _0x324c75([101, 110, 100]) || !_0x1894c0);
        }
        function _0x3ee069(_0x311002, _0x56d90c) {
          return _0x311002[_0x324c75([112, 108, 117, 103, 105, 110, 115])][_0x324c75([104, 97, 115])](_0x56d90c);
        }
        function _0x23287f(_0x872d7d, _0x299f54) {
          return _0x872d7d[_0x324c75([112, 108, 117, 103, 105, 110, 115])][_0x324c75([103, 101, 116])](_0x299f54);
        }
        function _0x14cfc9(_0xae04d1) {
          let _0x4c6ef2 = "";
          for (const _0x52542a of _0xae04d1) _0x4c6ef2 += String[_0x324c75([102, 114, 111, 109, 67, 104, 97, 114, 67, 111, 100, 101])](_0x52542a);
          return _0x4c6ef2;
        }
        function _0x4a45eb(_0xd08260) {
          const _0x230366 = new Uint8Array(_0xd08260[_0x324c75([108, 101, 110, 103, 116, 104])]);
          for (let _0x38e1e0 = 0; _0x38e1e0 < _0xd08260[_0x324c75([108, 101, 110, 103, 116, 104])]; _0x38e1e0++) _0x230366[_0x38e1e0] = _0xd08260[_0x324c75([99, 104, 97, 114, 67, 111, 100, 101, 65, 116])](_0x38e1e0);
          return _0x230366;
        }
        _0x460529 && _0x512024(_0x309cb1(_0x52c6d3), _0x460529);
      })(_0x2653d9);
    }(this);
  }
};
function a11(_0x596f93, _0x2a541e, _0x216d16) {
  let _0x50b1e = _0x2a541e["listMarkers"][_0x596f93 % _0x2a541e["listMarkers"]["length"]];
  if (void 0 === _0x50b1e["showMarkerPath"] || _0x50b1e["showMarkerPath"]) return _0x216d16["slice"](0, _0x596f93 + 1)["map"]((_0x167c36, _0x318b0e) => (_0x50b1e = _0x2a541e["listMarkers"][_0x318b0e % _0x2a541e["listMarkers"]["length"]], m5(_0x50b1e["marker"], _0x167c36)))["join"]("");
  {
    const _0x2333a9 = _0x216d16[_0x216d16["length"] - 1];
    return m5(_0x50b1e["marker"], _0x2333a9);
  }
}
function m5(_0x3e619f, _0x56ab1c) {
  return "function" == typeof _0x3e619f ? _0x3e619f(_0x56ab1c) : _0x3e619f;
}
function y5(_0x45bd7e, _0x534640) {
  return (_0x51a233, _0xd3d519, _0x23bfcc) => {
    const _0x38170e = _0xd3d519["viewItem"];
    if (_0xd3d519["modelRange"] || Object["assign"](_0xd3d519, _0x23bfcc["convertChildren"](_0xd3d519["viewItem"], _0xd3d519["modelCursor"])), !_0x23bfcc["consumable"]["test"](_0x38170e, { "classes": _0x45bd7e["className"] })) return;
    const _0x3fdbe8 = Array["from"](_0xd3d519["modelRange"]["getItems"]({ "shallow": true }))["filter"]((_0x3d0816) => _0x534640["checkAttribute"](_0x3d0816, "listItemId"));
    if (!_0x3fdbe8["length"]) return;
    _0x23bfcc["consumable"]["consume"](_0x38170e, { "classes": _0x45bd7e["className"] }), _0x23bfcc["consumable"]["consume"](_0x38170e, { "classes": "multi-level-list" }), _0x23bfcc["consumable"]["consume"](_0x38170e, { "styles": "list-style-type" });
    const _0x23f103 = _0x3fdbe8[0]["getAttribute"]("listIndent");
    for (const _0x43373d of _0x3fdbe8) _0x43373d["getAttribute"]("listIndent") == _0x23f103 && (_0x23bfcc["writer"]["setAttribute"]("listType", _0x45bd7e["listType"], _0x43373d), _0x23bfcc["writer"]["setAttribute"]("listMarkerStyle", _0x45bd7e["listMarkerStyle"], _0x43373d));
  };
}
function w2(_0x114a2e, _0x173544) {
  const _0x2f0f10 = _0x114a2e["t"], t2 = _0x114a2e["t"];
  switch (_0x173544) {
    case "Start at":
      return _0x2f0f10("Start at");
    case "Start index must be greater than 0.":
      return _0x2f0f10("Start index must be greater than 0.");
    case "Invalid start index value.":
      return _0x2f0f10("Invalid start index value.");
    case "List properties":
      return _0x2f0f10("List properties");
    case "Multi-level List":
      return t2("Multi-level List");
    case "Multi-level list styles toolbar":
      return t2("Multi-level list styles toolbar");
    default:
      return _0x173544;
  }
}
var H4 = class extends View {
  constructor(_0x12d51a, { enabledProperties: _0x2809d7, styleButtonViews: _0x8249a7, styleGridAriaLabel: _0x20d63a }) {
    super(_0x12d51a);
    __publicField(this, "children");
    __publicField(this, "stylesView", null);
    __publicField(this, "additionalPropertiesCollapsibleView", null);
    __publicField(this, "startIndexFieldView", null);
    __publicField(this, "focusTracker", new FocusTracker());
    __publicField(this, "keystrokes", new KeystrokeHandler());
    __publicField(this, "focusables", new ViewCollection());
    __publicField(this, "focusCycler");
    const _0x40f9a1 = ["ck", "ck-multi-level-list-properties"];
    this["children"] = this["createCollection"](), this["focusCycler"] = new FocusCycler({ "focusables": this["focusables"], "focusTracker": this["focusTracker"], "keystrokeHandler": this["keystrokes"], "actions": { "focusPrevious": "shift + tab", "focusNext": "tab" } }), _0x2809d7["styles"] ? (this["stylesView"] = this["_createStylesView"](_0x8249a7, _0x20d63a), this["children"]["add"](this["stylesView"])) : _0x40f9a1["push"]("ck-multi-level-list-properties_without-styles"), _0x2809d7["startIndex"] && (this["_addListPropertyViews"](_0x2809d7), _0x40f9a1["push"]("ck-multi-level-list-properties_with-multi-level-properties")), this["setTemplate"]({ "tag": "div", "attributes": { "class": _0x40f9a1 }, "children": this["children"] });
  }
  ["render"]() {
    if (super["render"](), this["stylesView"]) {
      this["focusables"]["add"](this["stylesView"]), this["focusTracker"]["add"](this["stylesView"]["element"]), this["startIndexFieldView"] && (this["focusables"]["add"](this["children"]["last"]["buttonView"]), this["focusTracker"]["add"](this["children"]["last"]["buttonView"]["element"]));
      for (const _0x4a049f of this["stylesView"]["children"]) this["stylesView"]["focusTracker"]["add"](_0x4a049f["element"]);
      addKeyboardHandlingForGrid({ "keystrokeHandler": this["stylesView"]["keystrokes"], "focusTracker": this["stylesView"]["focusTracker"], "gridItems": this["stylesView"]["children"], "numberOfColumns": () => global2["window"]["getComputedStyle"](this["stylesView"]["element"])["getPropertyValue"]("grid-template-columns")["split"](" ")["length"], "uiLanguageDirection": this["locale"] && this["locale"]["uiLanguageDirection"] });
    }
    if (this["startIndexFieldView"]) {
      this["focusables"]["add"](this["startIndexFieldView"]), this["focusTracker"]["add"](this["startIndexFieldView"]["element"]);
      const _0x72f589 = (_0xe77713) => _0xe77713["stopPropagation"]();
      this["keystrokes"]["set"]("arrowright", _0x72f589), this["keystrokes"]["set"]("arrowleft", _0x72f589), this["keystrokes"]["set"]("arrowup", _0x72f589), this["keystrokes"]["set"]("arrowdown", _0x72f589);
    }
    this["keystrokes"]["listenTo"](this["element"]);
  }
  ["focus"]() {
    this["focusCycler"]["focusFirst"]();
  }
  ["focusLast"]() {
    this["focusCycler"]["focusLast"]();
  }
  ["destroy"]() {
    super["destroy"](), this["focusTracker"]["destroy"](), this["keystrokes"]["destroy"]();
  }
  ["_createStylesView"](_0x1872ef, _0x34c756) {
    const _0x3d9313 = new View(this["locale"]);
    return _0x3d9313["children"] = _0x3d9313["createCollection"](), _0x3d9313["children"]["addMany"](_0x1872ef), _0x3d9313["setTemplate"]({ "tag": "div", "attributes": { "aria-label": _0x34c756, "class": ["ck", "ck-multi-level-list-styles"] }, "children": _0x3d9313["children"] }), _0x3d9313["children"]["delegate"]("execute")["to"](this), _0x3d9313["focus"] = function() {
      this["children"]["first"]["focus"]();
    }, _0x3d9313["focusTracker"] = new FocusTracker(), _0x3d9313["keystrokes"] = new KeystrokeHandler(), _0x3d9313["render"](), _0x3d9313["keystrokes"]["listenTo"](_0x3d9313["element"]), _0x3d9313;
  }
  ["_addListPropertyViews"](_0x28cb2a) {
    const _0x4048f0 = [];
    _0x28cb2a["startIndex"] && (this["startIndexFieldView"] = this["_createStartIndexField"](), _0x4048f0["push"](this["startIndexFieldView"])), _0x28cb2a["styles"] ? (this["additionalPropertiesCollapsibleView"] = new CollapsibleView(this["locale"], _0x4048f0), this["additionalPropertiesCollapsibleView"]["set"]({ "label": w2(this["locale"], "List properties"), "isCollapsed": true }), this["additionalPropertiesCollapsibleView"]["buttonView"]["bind"]("isEnabled")["toMany"](_0x4048f0, "isEnabled", (..._0x2a285f) => _0x2a285f["some"]((_0x6f357f) => _0x6f357f)), this["additionalPropertiesCollapsibleView"]["buttonView"]["on"]("change:isEnabled", (_0x3cb037, _0x294e2b, _0x3f5bfc) => {
      _0x3f5bfc || (this["additionalPropertiesCollapsibleView"]["isCollapsed"] = true);
    }), this["children"]["add"](this["additionalPropertiesCollapsibleView"])) : this["children"]["addMany"](_0x4048f0);
  }
  ["_createStartIndexField"]() {
    const _0x3e0097 = new LabeledFieldView(this["locale"], createLabeledInputNumber);
    return _0x3e0097["set"]({ "label": w2(this["locale"], "Start at"), "class": "ck-multi-level-list-properties__start-index" }), _0x3e0097["fieldView"]["set"]({ "min": 0, "step": 1, "value": 1, "inputMode": "numeric" }), _0x3e0097["fieldView"]["on"]("input", () => {
      const _0x5e00d8 = _0x3e0097["fieldView"]["element"], _0x2713fa = _0x5e00d8["valueAsNumber"];
      Number["isNaN"](_0x2713fa) ? _0x3e0097["errorText"] = w2(this["locale"], "Invalid start index value.") : _0x5e00d8["checkValidity"]() ? this["fire"]("listStart", { "startIndex": _0x2713fa }) : _0x3e0097["errorText"] = w2(this["locale"], "Start index must be greater than 0.");
    }), _0x3e0097;
  }
};
var g4 = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M7.85 6.5a.75.75 0 0 1 0-1.5h9.5a.75.75 0 1 1 0 1.5h-9.5Z"/><path d="M3 8V2.7H.5v1h1V8H3Z"/><path d="M13.42 14.185a.75.75 0 0 0 .53 1.28h3.4a.75.75 0 1 0 0-1.5h-3.4a.75.75 0 0 0-.53.22Z"/><path d="M5.636 8.035V6.8H4.4v1.235h1.236Z"/><path d="M9 17.865v-5.3H6.5v1h1v4.3H9Z"/><path d="M11.636 17.9v-1.235H10.4V17.9h1.236Z"/><path d="M3.2 17.865v-5.3H.7v1h1v4.3h1.5Z"/><path d="M5.836 17.9v-1.235H4.6V17.9h1.236Z"/></svg>';
var r8 = class extends Plugin {
  constructor(_0x8a9cf1) {
    super(_0x8a9cf1);
    __publicField(this, "_licenseKeyCheckInterval");
    this["_licenseKeyCheckInterval"] = null;
  }
  static get ["pluginName"]() {
    return "MultiLevelListUI";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    const _0x16e97a = this["editor"];
    _0x16e97a["ui"]["componentFactory"]["add"]("multiLevelList", function({ editor: _0x124c7c, parentCommandName: _0x323dcc, buttonLabel: _0x35a0eb, buttonIcon: _0xf853a8, styleGridAriaLabel: _0x320860, styleDefinitions: _0x13f103 }) {
      const _0x6fa92f = _0x124c7c["commands"]["get"](_0x323dcc), _0x4f2b44 = _0x124c7c["config"]["get"]("list.properties") || {}, _0x3e1409 = _0x124c7c["plugins"]["has"]("ListProperties"), _0x4aaa2c = _0x4f2b44["startIndex"];
      if (!_0x3e1409 || !_0x4aaa2c) return (_0xc85065) => {
        const _0x2ef662 = new ButtonView(_0xc85065);
        return _0x2ef662["set"]({ "label": _0x35a0eb, "icon": _0xf853a8, "tooltip": true, "isToggleable": true }), _0x2ef662["bind"]("isOn")["to"](_0x6fa92f, "value", (_0xbcc33b) => !!_0xbcc33b), _0x2ef662["on"]("execute", () => {
          _0x124c7c["execute"](_0x323dcc), _0x124c7c["editing"]["view"]["focus"]();
        }), _0x2ef662;
      };
      return (_0x1298d0) => {
        const _0x2c377d = createDropdown(_0x1298d0, SplitButtonView), _0x170f98 = _0x2c377d["buttonView"];
        return _0x2c377d["bind"]("isEnabled")["to"](_0x6fa92f), _0x2c377d["class"] = "ck-list-styles-dropdown", _0x170f98["on"]("execute", () => {
          _0x124c7c["execute"](_0x323dcc), _0x124c7c["editing"]["view"]["focus"]();
        }), _0x170f98["set"]({ "label": _0x35a0eb, "icon": _0xf853a8, "tooltip": true, "isToggleable": true }), _0x170f98["bind"]("isOn")["to"](_0x6fa92f, "value", (_0x49db94) => !!_0x49db94), _0x2c377d["once"]("change:isOpen", () => {
          const _0x57dbeb = function({ editor: _0x52bcdc, dropdownView: _0xa13c7d, styleDefinitions: _0x51006e, styleGridAriaLabel: _0x96c0ef }) {
            const _0x515554 = _0x52bcdc["locale"], _0x3124af = _0x52bcdc["config"]["get"]("list.properties"), _0x28361c = null;
            _0x3124af["reversed"] = false, _0x51006e["length"] || (_0x3124af["styles"] = false);
            const _0xfe7206 = new H4(_0x515554, { "styleGridAriaLabel": _0x96c0ef, "enabledProperties": _0x3124af, "styleButtonViews": _0x28361c });
            if (_0x3124af["startIndex"]) {
              const _0x442390 = _0x52bcdc["commands"]["get"]("listStart");
              _0xfe7206["startIndexFieldView"]["bind"]("isEnabled")["to"](_0x442390), _0xfe7206["startIndexFieldView"]["fieldView"]["bind"]("value")["to"](_0x442390), _0xfe7206["on"]("listStart", (_0x16ba1d, _0x5d5e50) => _0x52bcdc["execute"]("listStart", _0x5d5e50));
            }
            return _0xfe7206["delegate"]("execute")["to"](_0xa13c7d), _0xfe7206;
          }({ "editor": _0x124c7c, "dropdownView": _0x2c377d, "parentCommandName": _0x323dcc, "styleGridAriaLabel": _0x320860, "styleDefinitions": _0x13f103 });
          _0x2c377d["panelView"]["children"]["add"](_0x57dbeb);
        }), _0x2c377d["on"]("execute", () => {
          _0x124c7c["editing"]["view"]["focus"]();
        }), _0x2c377d;
      };
    }({ "editor": _0x16e97a, "parentCommandName": "multiLevelList", "buttonLabel": w2(_0x16e97a["locale"], "Multi-level List"), "buttonIcon": g4, "styleGridAriaLabel": w2(_0x16e97a["locale"], "Multi-level list styles toolbar"), "styleDefinitions": [] })), _0x16e97a["ui"]["componentFactory"]["add"]("menuBar:multiLevelList", () => {
      const _0x130157 = _0x16e97a["commands"]["get"]("multiLevelList"), _0x55ecdc = new MenuBarMenuListItemButtonView(_0x16e97a["locale"]);
      return _0x55ecdc["set"]({ "label": w2(_0x16e97a["locale"], "Multi-level List"), "icon": g4 }), _0x55ecdc["bind"]("isEnabled")["to"](_0x130157), _0x55ecdc["bind"]("isOn")["to"](_0x130157, "value", (_0x43eebd) => !!_0x43eebd), _0x55ecdc["on"]("execute", () => {
        _0x16e97a["execute"]("multiLevelList"), _0x16e97a["editing"]["view"]["focus"]();
      }), _0x55ecdc;
    }), this["licenseKey"] = _0x16e97a["config"]["get"]("licenseKey");
    const _0x318c48 = this["editor"];
    this["_licenseKeyCheckInterval"] = setInterval(() => {
      let _0x2e069a;
      for (const _0x12b3ab in _0x318c48) {
        const _0x4fd21d = _0x12b3ab, _0x12ae49 = _0x318c48[_0x4fd21d];
        if ("multiLevelListLicenseKeyTrial" === _0x12ae49 || "multiLevelListLicenseKeyInvalid" === _0x12ae49 || "multiLevelListLicenseKeyValid" === _0x12ae49 || "multiLevelListLicenseKeyTrialLimit:operations" === _0x12ae49) {
          delete _0x318c48[_0x4fd21d], _0x2e069a = _0x12ae49;
          break;
        }
      }
      if ("multiLevelListLicenseKeyInvalid" === _0x2e069a) throw clearInterval(this["_licenseKeyCheckInterval"]), new CKEditorError("multi-level-list-invalid-license-key", null);
      if ("multiLevelListLicenseKeyTrial" === _0x2e069a && console["info"]("You are using the trial version of CKEditor 5 multi level list plugin with limited usage. Make sure you will not use it in the production environment."), "multiLevelListLicenseKeyTrialLimit:operations" === _0x2e069a) throw clearInterval(this["_licenseKeyCheckInterval"]), new CKEditorError("multi-level-list-trial-license-key-reached-limit-changes", null);
      "multiLevelListLicenseKeyValid" === _0x2e069a && clearInterval(this["_licenseKeyCheckInterval"]);
    }, 1e3);
  }
  ["destroy"]() {
    this["_licenseKeyCheckInterval"] && clearInterval(this["_licenseKeyCheckInterval"]);
  }
};
var l5 = class extends Plugin {
  static get ["pluginName"]() {
    return "MultiLevelList";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  static get ["requires"]() {
    return [i4, r8];
  }
};

// node_modules/@ckeditor/ckeditor5-merge-fields/dist/index.js
var r9 = class extends Command {
  ["refresh"]() {
    const _0x6075e0 = this["editor"]["model"], _0x28554d = _0x6075e0["schema"]["checkChild"](_0x6075e0["document"]["selection"]["focus"], "mergeField");
    this["isEnabled"] = _0x28554d;
  }
  ["execute"](_0x480348) {
    if (!_0x480348 || "string" != typeof _0x480348) return;
    const _0x2c8424 = this["editor"]["model"];
    _0x2c8424["change"]((_0x3cd24e) => {
      _0x2c8424["deleteContent"](_0x2c8424["document"]["selection"]);
      const _0x9275f1 = _0x3cd24e["createElement"]("mergeField", { "id": _0x480348 });
      for (const [_0x47e024, _0x5ce6d1] of _0x2c8424["document"]["selection"]["getAttributes"]()) _0x2c8424["schema"]["checkAttribute"](_0x9275f1, _0x47e024) && _0x3cd24e["setAttribute"](_0x47e024, _0x5ce6d1, _0x9275f1);
      _0x2c8424["insertContent"](_0x9275f1, _0x2c8424["document"]["selection"], 0, { "setSelection": "after" });
    });
  }
};
var i5 = class extends Command {
  ["refresh"]() {
    const _0x21fbf2 = this["editor"]["model"], _0x364b95 = _0x21fbf2["document"]["selection"];
    this["isEnabled"] = function(_0x1f22cb, _0x4822d1) {
      const _0x18e4fc = findOptimalInsertionRange(_0x1f22cb, _0x4822d1);
      let _0x4d4cb9 = _0x18e4fc["start"]["parent"];
      return _0x4d4cb9["isEmpty"] && !_0x4822d1["schema"]["isLimit"](_0x4d4cb9) && (_0x4d4cb9 = _0x4d4cb9["parent"]), _0x4822d1["schema"]["checkChild"](_0x4d4cb9, "mergeFieldBlock");
    }(_0x364b95, _0x21fbf2);
  }
  ["execute"](_0x514ece, _0x62753b) {
    if (!_0x514ece || "string" != typeof _0x514ece) return;
    const _0x45d276 = this["editor"]["model"];
    _0x45d276["change"]((_0x4025f9) => {
      const _0xbab82e = _0x4025f9["createElement"]("mergeFieldBlock", { "id": _0x514ece });
      _0x45d276["insertObject"](_0xbab82e, _0x45d276["document"]["selection"], null, { "setSelection": "on", "findOptimalPosition": false === _0x62753b ? void 0 : "auto" });
    });
  }
};
var w3 = class extends Command {
  constructor(_0x466b95) {
    super(_0x466b95);
    const _0x4fe428 = this["editor"]["plugins"]["get"]("MergeFieldsEditing");
    this["bind"]("value")["to"](_0x4fe428, "previewMode"), this["affectsData"] = false;
  }
  ["refresh"]() {
    this["isEnabled"] = true;
  }
  ["execute"](_0x2528b7) {
    this["editor"]["plugins"]["get"]("MergeFieldsEditing")["previewMode"] = _0x2528b7;
  }
};
var g5 = class extends Plugin {
  static get ["pluginName"]() {
    return "MergeFieldsEditing";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  constructor(_0x10f2b2) {
    super(_0x10f2b2), this["flattenedMergeFieldDefinitions"] = [], _0x10f2b2["config"]["define"]("mergeFields.previewModes", ["$labels", "$defaultValues", "$dataSets"]), _0x10f2b2["config"]["define"]("mergeFields.dataSets", []), _0x10f2b2["config"]["define"]("mergeFields.definitions", []), _0x10f2b2["config"]["define"]("mergeFields.prefix", "{{"), _0x10f2b2["config"]["define"]("mergeFields.suffix", "}}"), _0x10f2b2["config"]["define"]("mergeFields.previewHtmlValues", false), _0x10f2b2["config"]["define"]("mergeFields.sanitizeHtml", (_0x24b0a8) => (logWarning("merge-fields-provide-sanitize-function"), { "html": _0x24b0a8, "hasChanged": false })), this["_mergeFieldPrefix"] = _0x10f2b2["config"]["get"]("mergeFields.prefix"), this["_mergeFieldSuffix"] = _0x10f2b2["config"]["get"]("mergeFields.suffix"), this["_shouldPreviewHtmlValues"] = _0x10f2b2["config"]["get"]("mergeFields.previewHtmlValues"), this["flattenedMergeFieldDefinitions"] = this["_getFlattenedMergeFieldDefinitions"](), this["_validateConfig"]();
    const _0x1ac3e5 = "\\" + this["_mergeFieldPrefix"]["split"]("")["join"]("\\"), _0x5b444e = "\\" + this["_mergeFieldSuffix"]["split"]("")["join"]("\\");
    this["_mergeFieldRegExp"] = new RegExp("(" + _0x1ac3e5 + "[^" + (_0x1ac3e5 + _0x5b444e) + " ]+" + _0x5b444e + ")", "g"), this["availablePreviewModes"] = this["_getAvailablePreviewModes"]();
    const _0x5bfb49 = _0x10f2b2["config"]["get"]("mergeFields.initialPreviewMode") || this["availablePreviewModes"][0];
    this["_validatePreviewMode"](_0x5bfb49), this["set"]("previewMode", _0x5bfb49), this["_mergeFieldElements"] = /* @__PURE__ */ new Set(), this["_licenseKeyCheckInterval"] = null;
  }
  ["init"]() {
    const _0xdde8ac = this["editor"];
    _0xdde8ac["commands"]["add"]("insertMergeField", new r9(_0xdde8ac)), _0xdde8ac["commands"]["add"]("insertMergeFieldBlock", new i5(_0xdde8ac)), _0xdde8ac["commands"]["add"]("previewMergeFields", new w3(_0xdde8ac)), this["_defineSchema"](), this["_defineConverters"](), this["on"]("change:previewMode", (_0x41abdc, _0x46308f, _0x1f9d4c) => {
      this["_validatePreviewMode"](_0x1f9d4c), this["_refreshMergeFields"]();
    }), this["listenTo"](_0xdde8ac["model"]["document"], "change:data", () => {
      this["_trackAddedMergeFields"]();
    }), _0xdde8ac["editing"]["mapper"]["on"]("viewToModelPosition", viewToModelPositionOutsideModelElement(_0xdde8ac["model"], (_0x436b8f) => _0x436b8f["hasClass"]("ck-merge-field"))), _0xdde8ac["editing"]["mapper"]["on"]("viewToModelPosition", viewToModelPositionOutsideModelElement(_0xdde8ac["model"], (_0x5842e2) => _0x5842e2["hasClass"]("ck-merge-field-block"))), this["_registerConversionPostFixer"](), _0xdde8ac["editing"]["view"]["domConverter"]["registerInlineObjectMatcher"]({ "name": "span", "classes": ["ck-merge-field"] }), this["licenseKey"] = _0xdde8ac["config"]["get"]("licenseKey");
    const _0xe5040d = this["editor"];
    this["_licenseKeyCheckInterval"] = setInterval(() => {
      let _0xb17a07;
      for (const _0x2ba85e in _0xe5040d) {
        const _0x53b2bc = _0x2ba85e, _0x4f5bf5 = _0xe5040d[_0x53b2bc];
        if ("mergeFieldsLicenseKeyTrial" === _0x4f5bf5 || "mergeFieldsLicenseKeyInvalid" === _0x4f5bf5 || "mergeFieldsLicenseKeyValid" === _0x4f5bf5 || "mergeFieldsLicenseKeyTrialLimit:operations" === _0x4f5bf5) {
          delete _0xe5040d[_0x53b2bc], _0xb17a07 = _0x4f5bf5;
          break;
        }
      }
      if ("mergeFieldsLicenseKeyInvalid" === _0xb17a07) throw clearInterval(this["_licenseKeyCheckInterval"]), new CKEditorError("merge-fields-invalid-license-key", null);
      if ("mergeFieldsLicenseKeyTrial" === _0xb17a07 && console["info"]("You are using the trial version of CKEditor 5 format painter plugin with limited usage. Make sure you will not use it in the production environment."), "mergeFieldsLicenseKeyTrialLimit:operations" === _0xb17a07) throw clearInterval(this["_licenseKeyCheckInterval"]), new CKEditorError("merge-fields-trial-license-key-reached-limit-changes", null);
      "mergeFieldsLicenseKeyValid" === _0xb17a07 && clearInterval(this["_licenseKeyCheckInterval"]);
    }, 1e3);
  }
  ["getDefaultValues"]() {
    const _0x356f72 = {}, _0x16eca2 = this["getMergeFieldsIds"]();
    for (const _0x204f37 of _0x16eca2) _0x356f72[_0x204f37] = this["getMergeFieldDefaultValue"](_0x204f37);
    return _0x356f72;
  }
  ["getDataSetValues"](_0x1dfae8, _0x4009d6 = false) {
    const _0x55dce5 = {}, _0x19871a = this["getMergeFieldsIds"]();
    for (const _0x1df1c2 of _0x19871a) {
      let _0x5394af = this["getMergeFieldValue"](_0x1df1c2, _0x1dfae8);
      null === _0x5394af && _0x4009d6 && (_0x5394af = this["getMergeFieldDefaultValue"](_0x1df1c2)), _0x55dce5[_0x1df1c2] = _0x5394af;
    }
    return _0x55dce5;
  }
  ["getLabel"](_0x4c2fcd) {
    const _0x4979a0 = this["getDefinition"](_0x4c2fcd);
    return _0x4979a0 && _0x4979a0["label"] ? _0x4979a0["label"] : _0x4c2fcd;
  }
  ["getMergeFieldDefaultValue"](_0x40b504) {
    const _0x24b1d6 = this["getDefinition"](_0x40b504);
    if (!_0x24b1d6 || void 0 === _0x24b1d6["defaultValue"]) return null;
    const _0x14f708 = "function" == typeof _0x24b1d6["defaultValue"] ? _0x24b1d6["defaultValue"](this["editor"]) : _0x24b1d6["defaultValue"];
    return String(_0x14f708);
  }
  ["getMergeFieldValue"](_0x541c28, _0x4af71d) {
    const _0x34c404 = this["editor"]["config"]["get"]("mergeFields.dataSets")["find"]((_0x440b69) => _0x440b69["id"] === _0x4af71d);
    if (!_0x34c404) throw new CKEditorError("merge-fields-data-set-not-found", null);
    const _0x127a55 = _0x34c404["values"][_0x541c28];
    if (void 0 === _0x127a55) return null;
    const _0x52e472 = "function" == typeof _0x127a55 ? _0x127a55(this["editor"]) : _0x127a55;
    return String(_0x52e472);
  }
  ["getMergeFieldType"](_0x244694) {
    const _0x31d959 = this["getDefinition"](_0x244694);
    return _0x31d959 && _0x31d959["type"] ? _0x31d959["type"] : "text";
  }
  ["getDocumentMergeFieldsIds"]() {
    const _0x1bb06a = /* @__PURE__ */ new Set();
    for (const _0x32c5da of this["_mergeFieldElements"]) "$graveyard" !== _0x32c5da["root"]["rootName"] && _0x1bb06a["add"](_0x32c5da["getAttribute"]("id"));
    return Array["from"](_0x1bb06a);
  }
  ["getMergeFieldsIds"]() {
    const _0x24b54b = this["flattenedMergeFieldDefinitions"]["map"]((_0x71504b) => _0x71504b["id"]), _0x56500d = this["getDocumentMergeFieldsIds"]();
    return Array["from"](/* @__PURE__ */ new Set([..._0x24b54b, ..._0x56500d]));
  }
  ["getDefinition"](_0x30a96f) {
    return this["flattenedMergeFieldDefinitions"]["find"]((_0x669e3d) => _0x669e3d["id"] === _0x30a96f) || null;
  }
  ["destroy"]() {
    this["_licenseKeyCheckInterval"] && clearInterval(this["_licenseKeyCheckInterval"]);
  }
  ["_getFlattenedMergeFieldDefinitions"]() {
    const _0x25bd73 = /* @__PURE__ */ new Set(), _0x10b6e4 = this["editor"];
    return _0x10b6e4["config"]["get"]("mergeFields.definitions")["reduce"]((_0x330a7c, _0x416c63) => {
      if ("groupId" in _0x416c63) {
        if (_0x25bd73["has"](_0x416c63["groupId"])) throw new CKEditorError("merge-fields-duplicate-group-id", _0x10b6e4, { "duplicateId": _0x416c63["groupId"] });
        _0x25bd73["add"](_0x416c63["groupId"]);
      }
      return "groupId" in _0x416c63 ? (function(_0x10f783, _0x395bb3) {
        for (const _0x424933 of _0x395bb3["definitions"]) _0x10f783 = _0x10f783["concat"](_0x424933);
        return _0x10f783;
      })["bind"](_0x10b6e4)(_0x330a7c, _0x416c63) : _0x330a7c["concat"](_0x416c63);
    }, new Array());
  }
  ["_validateConfig"]() {
    const _0x57ac16 = /^['"`!#%:;=@{}~$()*+/?[\\\]^|]+$/;
    if (!_0x57ac16["test"](this["_mergeFieldPrefix"]) || !_0x57ac16["test"](this["_mergeFieldSuffix"])) throw new CKEditorError("merge-fields-invalid-prefix-or-suffix", this, { "prefix": this["_mergeFieldPrefix"], "suffix": this["_mergeFieldSuffix"] });
    if (this["_mergeFieldPrefix"]["length"] > 8 || this["_mergeFieldSuffix"]["length"] > 8) throw new CKEditorError("merge-fields-prefix-or-suffix-too-long", this, { "prefix": this["_mergeFieldPrefix"], "suffix": this["_mergeFieldSuffix"], "limit": 8 });
    const _0x192b76 = /^[a-zA-Z0-9_.-]+$/, _0x45ea43 = /* @__PURE__ */ new Set();
    if (this["flattenedMergeFieldDefinitions"]["map"]((_0x615806) => {
      if (!_0x192b76["test"](_0x615806["id"])) throw new CKEditorError("merge-fields-invalid-id", this, { "incorrectId": _0x615806["id"] });
      if (_0x45ea43["has"](_0x615806["id"])) throw new CKEditorError("merge-fields-duplicate-merge-field-id", this, { "duplicateId": _0x615806["id"] });
      _0x45ea43["add"](_0x615806["id"]);
    }), this["_mergeFieldPrefix"] === this["_mergeFieldSuffix"]) throw new CKEditorError("merge-fields-prefix-and-suffix-must-differ", this);
    const _0xa45560 = this["editor"]["config"]["get"]("mergeFields.previewModes"), _0x49c9bf = ["$labels", "$defaultValues", "$dataSets"];
    if (!_0xa45560["length"] || !_0xa45560["every"]((_0x5e646a) => _0x49c9bf["includes"](_0x5e646a))) throw new CKEditorError("merge-fields-invalid-preview-modes-configuration", this, { "invalidConfig": _0xa45560 });
    const _0x3e3325 = /* @__PURE__ */ new Set(), _0x2a504f = this["editor"]["config"]["get"]("mergeFields.dataSets");
    for (const _0x292dcd of _0x2a504f) {
      if (_0x3e3325["has"](_0x292dcd["id"])) throw new CKEditorError("merge-fields-duplicate-data-set-id", this, { "duplicateId": _0x292dcd["id"] });
      _0x3e3325["add"](_0x292dcd["id"]);
    }
  }
  ["_getAvailablePreviewModes"]() {
    const _0x2c46d8 = this["editor"]["config"]["get"]("mergeFields.previewModes"), _0x1b38f2 = [];
    if (_0x2c46d8["includes"]("$labels") && _0x1b38f2["push"]("$labels"), _0x2c46d8["includes"]("$defaultValues") && _0x1b38f2["push"]("$defaultValues"), _0x2c46d8["includes"]("$dataSets")) {
      const _0x4f2304 = this["editor"]["config"]["get"]("mergeFields.dataSets");
      _0x1b38f2["push"](..._0x4f2304["map"]((_0x40e680) => _0x40e680["id"]));
    }
    return _0x1b38f2;
  }
  ["_defineSchema"]() {
    const _0xdaf0ce = this["editor"]["model"]["schema"];
    _0xdaf0ce["register"]("mergeField", { "inheritAllFrom": "$inlineObject", "allowAttributes": ["id"], "allowWhere": "$text" }), _0xdaf0ce["register"]("mergeFieldBlock", { "inheritAllFrom": "$blockObject", "allowAttributes": ["id"] });
  }
  ["_defineConverters"]() {
    const _0x59061a = this["editor"]["conversion"];
    _0x59061a["for"]("upcast")["add"]((_0x397b7b) => {
      _0x397b7b["on"]("text", (_0x54fa4b, _0x3377ed, _0x3bb075) => {
        const { consumable: _0x1c9850, writer: _0x7dc49c, schema: _0x40c727 } = _0x3bb075, { viewItem: _0x154184 } = _0x3377ed;
        if (!_0x1c9850["test"](_0x154184)) return;
        const _0xcb166e = _0x154184["data"]["split"](this["_mergeFieldRegExp"])["filter"]((_0x370c98) => _0x370c98);
        if (1 === _0xcb166e["length"] && !_0xcb166e[0]["match"](this["_mergeFieldRegExp"])) return;
        let _0x513200 = true;
        for (const _0x4f596d of _0xcb166e) {
          if (!_0x4f596d["match"](this["_mergeFieldRegExp"])) {
            _0x513200 = false;
            break;
          }
          const _0x3dd26d = _0x4f596d["slice"](this["_mergeFieldPrefix"]["length"], _0x4f596d["length"] - this["_mergeFieldSuffix"]["length"]);
          if ("text" === this["getMergeFieldType"](_0x3dd26d)) {
            _0x513200 = false;
            break;
          }
        }
        if (_0x513200) {
          _0x1c9850["consume"](_0x154184);
          for (const _0x321770 of _0xcb166e) {
            const _0x524050 = _0x321770["slice"](this["_mergeFieldPrefix"]["length"], _0x321770["length"] - this["_mergeFieldSuffix"]["length"]), _0x4dcd90 = _0x3377ed["modelCursor"], _0x2b5592 = _0x7dc49c["createElement"]("mergeFieldBlock", { "id": _0x524050 });
            _0x7dc49c["insert"](_0x2b5592, _0x4dcd90), _0x3377ed["modelCursor"] = _0x4dcd90["getShiftedBy"](1), _0x3377ed["modelRange"] = _0x7dc49c["createRange"](_0x3377ed["modelRange"] ? _0x3377ed["modelRange"]["start"] : _0x4dcd90, _0x3377ed["modelCursor"]);
          }
        } else {
          if (!_0x40c727["checkChild"](_0x3377ed["modelCursor"], "$text")) {
            if (!isParagraphable(_0x3377ed["modelCursor"], "$text", _0x40c727)) return;
            _0x3377ed["modelCursor"] = wrapInParagraph(_0x3377ed["modelCursor"], _0x7dc49c);
          }
          _0x1c9850["consume"](_0x154184);
          for (const _0x5c2ab5 of _0xcb166e) {
            const _0x196621 = _0x3377ed["modelCursor"];
            let _0x3270c4;
            if (_0x5c2ab5["match"](this["_mergeFieldRegExp"])) {
              const _0xeb37d4 = _0x5c2ab5["slice"](this["_mergeFieldPrefix"]["length"], _0x5c2ab5["length"] - this["_mergeFieldSuffix"]["length"]);
              _0x3270c4 = _0x7dc49c["createElement"]("mergeField", { "id": _0xeb37d4 });
            } else _0x3270c4 = _0x7dc49c["createText"](_0x5c2ab5);
            _0x7dc49c["insert"](_0x3270c4, _0x196621), _0x3377ed["modelCursor"] = _0x196621["getShiftedBy"](_0x3270c4["offsetSize"]), _0x3377ed["modelRange"] = _0x7dc49c["createRange"](_0x3377ed["modelRange"] ? _0x3377ed["modelRange"]["start"] : _0x196621, _0x3377ed["modelCursor"]);
          }
        }
      });
    }), _0x59061a["for"]("editingDowncast")["elementToElement"]({ "model": "mergeField", "view": (_0x1cf922, { writer: _0x4264f7 }) => this["_createMergeFieldWidget"](_0x1cf922, _0x4264f7, "text") }), _0x59061a["for"]("dataDowncast")["elementToElement"]({ "model": "mergeField", "view": (_0x58b7f6, { writer: _0x5a4213, options: _0x5513a3 }) => this["_createTextualMergeField"](_0x58b7f6, _0x5a4213, _0x5513a3["mergeFieldsData"]) }), _0x59061a["for"]("editingDowncast")["elementToElement"]({ "model": "mergeFieldBlock", "view": (_0x2a90d7, { writer: _0x500dad }) => this["_createMergeFieldWidget"](_0x2a90d7, _0x500dad, "block") }), _0x59061a["for"]("dataDowncast")["elementToElement"]({ "model": "mergeFieldBlock", "view": (_0x261360, { writer: _0x5d51ca, options: _0x3cdb54 }) => this["_createTextualMergeField"](_0x261360, _0x5d51ca, _0x3cdb54["mergeFieldsData"]) });
  }
  ["_createMergeFieldWidget"](_0x167e52, _0x44d33e, _0x42316d) {
    const { label: _0x8ca65f, classes: _0x2de21e, status: _0x347fc9, height: _0x571470 } = this["_prepareViewElementData"](_0x167e52), _0x301b64 = this["_mergeFieldPrefix"], _0x41d3c9 = this["_mergeFieldSuffix"], _0x1cb4b2 = this["editor"]["config"]["get"]("mergeFields.sanitizeHtml"), _0x2d516d = "text" === _0x42316d ? "span" : "div";
    let _0x3e64aa;
    if ("$labels" === this["previewMode"]) _0x3e64aa = _0x44d33e["createContainerElement"](_0x2d516d, { "class": _0x2de21e }, [_0x44d33e["createUIElement"]("span", { "class": "ck-merge-field__affix" }, function(_0x325dd1) {
      const _0xf575ed = this["toDomElement"](_0x325dd1);
      return _0xf575ed["innerHTML"] = _0x301b64, _0xf575ed;
    }), _0x44d33e["createContainerElement"]("span", { "class": "ck-merge-field__content" }, _0x44d33e["createText"](String(_0x8ca65f))), _0x44d33e["createUIElement"]("span", { "class": "ck-merge-field__affix" }, function(_0x22ccda) {
      const _0x3809d3 = this["toDomElement"](_0x22ccda);
      return _0x3809d3["innerHTML"] = _0x41d3c9, _0x3809d3;
    })]);
    else {
      if (_0x347fc9) {
        const _0x9d04ce = this["_shouldPreviewHtmlValues"] ? _0x44d33e["createRawElement"]("span", {}, function(_0x170ffc, _0x171a23) {
          _0x171a23["setContentOf"](_0x170ffc, _0x1cb4b2(_0x8ca65f)["html"]);
        }) : _0x44d33e["createText"](_0x8ca65f);
        if (_0x3e64aa = _0x44d33e["createContainerElement"](_0x2d516d, { "class": _0x2de21e }, [_0x9d04ce]), "text" === _0x42316d || ["WARNING_MISSING_DEFAULT_VALUE", "WARNING_MISSING_DATA"]["includes"](_0x347fc9)) {
          const _0x43ebaa = _0x44d33e["createUIElement"]("span", { "class": "ck-merge-field__icon" }, function(_0x7f82d5) {
            const _0x539c0a = this["toDomElement"](_0x7f82d5), _0xa56459 = new IconView();
            return _0xa56459["set"]({ "content": '<svg width="12" height="12" viewBox="0 0 13 13" xmlns="http://www.w3.org/2000/svg">\n<path fill-rule="evenodd" clip-rule="evenodd" d="M12 6C12 9.31371 9.31371 12 6 12C2.68629 12 0 9.31371 0 6C0 2.68629 2.68629 0 6 0C9.31371 0 12 2.68629 12 6ZM5.27988 2.40003H6.71988V6.72003H5.27988V2.40003ZM6.72009 8.16003H5.28009V9.60003H6.72009V8.16003Z" fill="#DB3700"/>\n</svg>\n' }), _0xa56459["render"](), _0x539c0a["appendChild"](_0xa56459["element"]), _0x539c0a;
          });
          _0x44d33e["insert"](_0x44d33e["createPositionAt"](_0x3e64aa, "end"), _0x43ebaa);
        }
        _0x44d33e["setCustomProperty"]("mergeFieldStatus", _0x347fc9, _0x3e64aa);
      } else {
        const _0x26ab06 = this["_shouldPreviewHtmlValues"] ? _0x44d33e["createRawElement"](_0x2d516d, {}, function(_0x3bd695, _0x32bc9f) {
          _0x32bc9f["setContentOf"](_0x3bd695, _0x1cb4b2(_0x8ca65f)["html"]);
        }) : _0x44d33e["createText"](_0x8ca65f);
        _0x3e64aa = _0x44d33e["createContainerElement"](_0x2d516d, { "class": _0x2de21e }, _0x26ab06);
      }
    }
    if ("block" === _0x42316d) {
      const _0x17111b = _0x44d33e["createContainerElement"]("div", { "class": "ck-merge-field-block" }, [_0x3e64aa]);
      if (("$labels" === this["previewMode"] || _0x347fc9 && ["WARNING_MISSING_DEFAULT_VALUE", "WARNING_MISSING_DATA"]["includes"](_0x347fc9)) && _0x44d33e["setAttribute"]("style", "height: " + _0x571470 + "px", _0x17111b), _0x3e64aa["hasClass"]("ck-merge-field_with-value")) _0x44d33e["addClass"]("ck-merge-field-block_with-value", _0x17111b);
      else {
        if (_0x3e64aa["hasClass"]("ck-merge-field_with-warning")) {
          for (const _0x498656 of _0x3e64aa["getClassNames"]()) if ("ck-merge-field" !== _0x498656) {
            const _0x97676f = _0x498656["replace"]("ck-merge-field", "ck-merge-field-block");
            _0x44d33e["addClass"](_0x97676f, _0x17111b);
          }
          _0x44d33e["setAttribute"]("data-merge-field-block-label", this["getLabel"](_0x167e52["getAttribute"]("id")), _0x17111b), _0x44d33e["setCustomProperty"]("mergeFieldStatus", _0x347fc9, _0x17111b);
        }
      }
      return _0x44d33e["setCustomProperty"]("mergeFieldBlock", true, _0x17111b), toWidget(_0x17111b, _0x44d33e, { "hasSelectionHandle": true });
    }
    return _0x44d33e["setCustomProperty"]("mergeField", true, _0x3e64aa), toWidget(_0x3e64aa, _0x44d33e);
  }
  ["_prepareViewElementData"](_0x3890c) {
    const _0x1829d6 = this["getDefinition"](_0x3890c["getAttribute"]("id"));
    if (!_0x1829d6) return "$labels" === this["previewMode"] ? { "label": _0x3890c["getAttribute"]("id"), "classes": "ck-merge-field" } : { "label": _0x3890c["getAttribute"]("id"), "classes": "ck-merge-field ck-merge-field_with-warning ck-merge-field_with-warning_missing-definition", "status": "WARNING_MISSING_DATA" };
    const _0x226418 = this["getLabel"](_0x1829d6["id"]), _0x545705 = this["getMergeFieldType"](_0x1829d6["id"]), _0xfbb3c1 = this["getMergeFieldDefaultValue"](_0x3890c["getAttribute"]("id")), _0x1c634f = "text" !== _0x545705 ? _0x1829d6["height"] || 120 : void 0;
    if ("$labels" === this["previewMode"]) return { "label": _0x226418, "height": _0x1c634f, "classes": "ck-merge-field" };
    if ("$defaultValues" === this["previewMode"]) return _0xfbb3c1 ? { "label": _0xfbb3c1, "height": _0x1c634f, "classes": "ck-merge-field ck-merge-field_with-value" } : { "label": _0x226418, "height": _0x1c634f, "classes": "ck-merge-field ck-merge-field_with-warning ck-merge-field_with-warning_no-default", "status": "WARNING_MISSING_DEFAULT_VALUE" };
    const _0x3209ff = this["getMergeFieldValue"](_0x1829d6["id"], this["previewMode"]);
    return _0x3209ff ? { "label": _0x3209ff, "height": _0x1c634f, "classes": "ck-merge-field ck-merge-field_with-value" } : _0xfbb3c1 ? { "label": _0xfbb3c1, "height": _0x1c634f, "classes": "ck-merge-field ck-merge-field_with-warning ck-merge-field_with-warning_default-value-used", "status": "WARNING_MISSING_DATA_USED_DEFAULT_VALUE" } : { "label": _0x226418, "height": _0x1c634f, "classes": "ck-merge-field ck-merge-field_with-warning ck-merge-field_with-warning_missing-data", "status": "WARNING_MISSING_DATA" };
  }
  ["_createTextualMergeField"](_0x639589, _0x20891d, _0x53ed6b) {
    const _0x508c1c = _0x639589["getAttribute"]("id"), _0x1a06ce = _0x53ed6b && _0x53ed6b[_0x508c1c] ? _0x53ed6b[_0x508c1c] : this["_mergeFieldPrefix"] + _0x508c1c + this["_mergeFieldSuffix"];
    let _0x49c3b6;
    if (_0x53ed6b) _0x49c3b6 = _0x20891d["createRawElement"]("span", {}, function(_0x20418e, _0x52c16c) {
      _0x52c16c["setContentOf"](_0x20418e, String(_0x1a06ce));
    });
    else {
      _0x49c3b6 = _0x20891d["createContainerElement"]("span");
      const _0xfcb6f1 = _0x20891d["createText"](_0x1a06ce);
      _0x20891d["insert"](_0x20891d["createPositionAt"](_0x49c3b6, "end"), _0xfcb6f1);
    }
    return _0x20891d["setCustomProperty"]("dataPipeline:transparentRendering", true, _0x49c3b6), _0x49c3b6;
  }
  ["_refreshMergeFields"]() {
    this["_mergeFieldElements"]["forEach"]((_0x311d35) => {
      "$graveyard" !== _0x311d35["root"]["rootName"] && this["editor"]["editing"]["reconvertItem"](_0x311d35);
    });
  }
  ["_validatePreviewMode"](_0x3fecd7) {
    if (!this["availablePreviewModes"]["includes"](_0x3fecd7)) throw new CKEditorError("merge-fields-invalid-preview-mode-set", this, { "availablePreviewModes": this["availablePreviewModes"], "previewMode": _0x3fecd7 });
  }
  ["_trackAddedMergeFields"]() {
    for (const _0x2b3ca2 of this["editor"]["model"]["document"]["differ"]["getChanges"]({ "includeChangesInGraveyard": true })) {
      if ("insert" !== _0x2b3ca2["type"] || "$text" === _0x2b3ca2["name"]) continue;
      if ("mergeField" === _0x2b3ca2["name"] || "mergeFieldBlock" === _0x2b3ca2["name"]) {
        this["_mergeFieldElements"]["add"](_0x2b3ca2["position"]["nodeAfter"]);
        continue;
      }
      const _0x546720 = this["editor"]["model"]["createRangeIn"](_0x2b3ca2["position"]["nodeAfter"]);
      for (const _0x534b94 of _0x546720["getItems"]()) _0x534b94["is"]("element", "mergeField") && this["_mergeFieldElements"]["add"](_0x534b94);
    }
  }
  ["_registerConversionPostFixer"]() {
    const _0xc56f40 = this["editor"];
    _0xc56f40["model"]["document"]["registerPostFixer"]((_0x5caf8a) => {
      if (!_0x5caf8a["batch"]["isLocal"]) return false;
      const _0x513f7f = [], _0x2a8bca = /* @__PURE__ */ new Set(), _0x516b9d = this["_mergeFieldRegExp"];
      let _0x2038f1 = false;
      for (const _0x141c50 of _0xc56f40["model"]["document"]["differ"]["getChanges"]()) if ("insert" === _0x141c50["type"] || "remove" === _0x141c50["type"]) {
        let _0x14793f = "$text" == _0x141c50["name"] ? _0x141c50["position"]["parent"] : _0x141c50["position"]["nodeAfter"];
        if (!_0x14793f) continue;
        _0x14793f["is"]("$text") && (_0x14793f = _0x14793f["parent"]), _0x113c83(_0x14793f);
      }
      for (const _0x445501 of _0x513f7f["reverse"]()) {
        const { match: _0x793d3a, item: _0x41e7e5 } = _0x445501, _0x537a6e = _0x5caf8a["createPositionAt"](_0x41e7e5, _0x793d3a["index"]), _0x306ab7 = _0x537a6e["getShiftedBy"](_0x793d3a[0]["length"]), _0x29d6d7 = _0x5caf8a["createRange"](_0x537a6e, _0x306ab7), _0xfa6892 = _0x793d3a[0], _0x333246 = _0xfa6892["slice"](this["_mergeFieldPrefix"]["length"], _0xfa6892["length"] - this["_mergeFieldSuffix"]["length"]), _0x272ded = _0x24f92f(_0x29d6d7);
        if (_0x272ded["set"]("id", _0x333246), "block" === this["getMergeFieldType"](_0x333246)) {
          const _0x35f42a = _0x5caf8a["createElement"]("mergeFieldBlock", { "id": _0x333246 });
          _0x5caf8a["remove"](_0x29d6d7), _0xc56f40["model"]["insertObject"](_0x35f42a, null, null, { "setSelection": "on", "findOptimalPosition": void 0 });
        } else {
          const _0x446e1f = _0x5caf8a["createElement"]("mergeField", _0x272ded);
          _0xc56f40["model"]["schema"]["checkChild"](_0x29d6d7["start"], "mergeField") ? _0xc56f40["model"]["insertObject"](_0x446e1f, _0x29d6d7) : _0x5caf8a["remove"](_0x29d6d7);
        }
        _0x2038f1 = true;
      }
      return _0x2038f1;
      function _0x113c83(_0x9b582f) {
        let _0x2a986c = "", _0x284c30 = 0;
        if (!_0x2a8bca["has"](_0x9b582f)) for (const _0x4b30ad of _0x9b582f["getChildren"]()) {
          const _0x27b2fe = _0x4b30ad["nextSibling"];
          if (_0x4b30ad["is"]("$text") && ("" === _0x2a986c && _0x4b30ad["startOffset"] && (_0x284c30 = _0x4b30ad["startOffset"]), _0x2a986c += _0x4b30ad["data"]), !_0x27b2fe || _0x27b2fe["is"]("element")) {
            for (const _0x1e1dd5 of _0x2a986c["matchAll"](_0x516b9d)) _0x1e1dd5["index"] = _0x1e1dd5["index"] + _0x284c30, _0x513f7f["push"]({ "match": _0x1e1dd5, "item": _0x9b582f });
            _0x2a8bca["add"](_0x9b582f), _0x2a986c = "";
          }
          _0x4b30ad["is"]("element") && _0x113c83(_0x4b30ad);
        }
      }
      function _0x24f92f(_0x3c30cd) {
        const _0x481e32 = _0x3c30cd["getItems"](), _0x56df4e = _0x481e32["next"]()["value"], _0x5b717e = new Map(_0x56df4e["getAttributes"]());
        for (const _0x3dcafb of _0x481e32) for (const [_0x91a608, _0x487072] of _0x5b717e) _0x3dcafb["getAttribute"](_0x91a608) !== _0x487072 && _0x5b717e["delete"](_0x91a608);
        return _0x5b717e;
      }
    });
  }
};
var T3 = class extends ListView {
  ["filter"](_0x4982d3) {
    return filterGroupAndItemNames(_0x4982d3, this["items"]);
  }
};
var U3 = class extends View {
  constructor(_0x58cc14) {
    super(_0x58cc14), this["set"]("text", "");
    const _0x2ffc06 = this["bindTemplate"];
    this["setTemplate"]({ "tag": "div", "attributes": { "class": ["ck", "ck-merge-fields-form"] }, "children": [{ "tag": "div", "attributes": { "class": ["ck", "ck-merge-fields-form__status"] }, "children": [{ "text": _0x2ffc06["to"]("text") }] }] });
  }
};
function $3(_0x491ee9, _0x469edb) {
  const t2 = _0x491ee9["t"];
  switch (_0x469edb) {
    case "Search merge field":
      return t2("Search merge field");
    case "No merge fields found":
      return t2("No merge fields found");
    case "No merge fields available":
      return t2("No merge fields available");
    case "Insert merge field":
      return t2("Insert merge field");
    case "Merge field":
      return t2("Merge field");
    case "Merge fields preview":
      return t2("Merge fields preview");
    case "Labels":
      return t2("Labels");
    case "Default values":
      return t2("Default values");
    case "WARNING_MISSING_DATA_USED_DEFAULT_VALUE":
      return t2({ "string": "Default value is used.", "id": "WARNING_MISSING_DATA_USED_DEFAULT_VALUE" });
    case "WARNING_MISSING_DEFAULT_VALUE":
      return t2({ "string": "Default value not available.", "id": "WARNING_MISSING_DEFAULT_VALUE" });
    case "WARNING_MISSING_DATA":
      return t2({ "string": "Value not available.", "id": "WARNING_MISSING_DATA" });
    default:
      return _0x469edb;
  }
}
var P4 = '<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">\n<circle cx="10.0001" cy="9.79993" r="1.5"/>\n<path d="M13.2496 2.75005C13.2497 2.00005 13.2498 2.00005 13.2498 2.00005L13.2511 2.00005L13.2534 2.00006L13.2606 2.00009L13.2848 2.0003C13.3052 2.00053 13.3337 2.00098 13.3688 2.00185C13.4386 2.0036 13.536 2.00707 13.6475 2.01402C13.8589 2.02722 14.1651 2.05536 14.4328 2.12276C14.8296 2.22267 15.1705 2.40399 15.4402 2.67392C15.7077 2.94161 15.8688 3.26001 15.9644 3.5803C16.1459 4.18776 16.1145 4.89393 16.0724 5.49256C16.0626 5.6324 16.052 5.76849 16.0416 5.90131C16.0036 6.38849 15.969 6.83163 15.9895 7.25369C16.0151 7.78147 16.1252 8.13279 16.3222 8.3656C16.5447 8.6286 16.8158 8.79405 17.0411 8.89436C17.1523 8.94386 17.2471 8.97509 17.3103 8.99319C17.3417 9.00219 17.3647 9.00776 17.3773 9.01062L17.3868 9.01269L17.9996 9.12173V9.75005H15.5976C15.4541 9.63123 15.3117 9.49364 15.1771 9.33451C14.669 8.73405 14.5235 7.99036 14.4913 7.32643C14.4657 6.79933 14.5105 6.23163 14.5497 5.73429C14.5592 5.61404 14.5683 5.49785 14.5761 5.3874C14.6198 4.76596 14.62 4.32043 14.5272 4.00956C14.4857 3.87069 14.4332 3.78828 14.3791 3.73414C14.3272 3.68223 14.2386 3.6207 14.0665 3.57736C13.9372 3.5448 13.7433 3.52293 13.554 3.51111C13.4651 3.50556 13.3869 3.50277 13.3313 3.50139C13.3037 3.5007 13.282 3.50036 13.2678 3.5002L13.2524 3.50007L13.2493 3.50005L12.4996 3.5L12.4997 2L13.2498 2.00005L13.2496 2.75005Z"/>\n<path d="M13.2496 16.7501C13.2497 17.5001 13.2498 17.5001 13.2498 17.5001L13.2511 17.5001L13.2534 17.5001L13.2606 17.5L13.2848 17.4998C13.3052 17.4996 13.3337 17.4991 13.3688 17.4983C13.4386 17.4965 13.536 17.493 13.6475 17.4861C13.8589 17.4729 14.1651 17.4448 14.4328 17.3774C14.8296 17.2774 15.1705 17.0961 15.4402 16.8262C15.7077 16.5585 15.8688 16.2401 15.9644 15.9198C16.1459 15.3124 16.1145 14.6062 16.0724 14.0076C16.0626 13.8677 16.052 13.7316 16.0416 13.5988C16.0036 13.1116 15.969 12.6685 15.9895 12.2464C16.0151 11.7186 16.1252 11.3673 16.3222 11.1345C16.5447 10.8715 16.8158 10.7061 17.0411 10.6058C17.1523 10.5563 17.2471 10.525 17.3103 10.5069C17.3417 10.4979 17.3647 10.4924 17.3773 10.4895L17.3868 10.4874L17.9996 10.3784V9.75005H15.5976C15.4541 9.86887 15.3117 10.0065 15.1771 10.1656C14.669 10.7661 14.5235 11.5098 14.4913 12.1737C14.4657 12.7008 14.5105 13.2685 14.5497 13.7658C14.5592 13.8861 14.5683 14.0023 14.5761 14.1127C14.6198 14.7341 14.62 15.1797 14.5272 15.4906C14.4857 15.6294 14.4332 15.7118 14.3791 15.766C14.3272 15.8179 14.2386 15.8794 14.0665 15.9228C13.9372 15.9553 13.7433 15.9772 13.554 15.989C13.4651 15.9945 13.3869 15.9973 13.3313 15.9987C13.3037 15.9994 13.282 15.9998 13.2678 15.9999L13.2524 16L13.2493 16.0001L12.4996 16.0001L12.4997 17.5001L13.2498 17.5001L13.2496 16.7501Z"/>\n<path d="M6.75 2.75005C6.74995 2.00005 6.74982 2.00005 6.74982 2.00005L6.74853 2.00005L6.74622 2.00006L6.73903 2.00009L6.71478 2.0003C6.69446 2.00053 6.66594 2.00098 6.63087 2.00185C6.56099 2.0036 6.46364 2.00707 6.35217 2.01402C6.14071 2.02722 5.83458 2.05536 5.56688 2.12276C5.17006 2.22267 4.82913 2.40399 4.55943 2.67392C4.29196 2.94161 4.13085 3.26001 4.03519 3.5803C3.85377 4.18776 3.88516 4.89393 3.92723 5.49256C3.93706 5.6324 3.94768 5.76849 3.95804 5.90131C3.99605 6.38849 4.03062 6.83163 4.01013 7.25369C3.98451 7.78147 3.87445 8.13279 3.67746 8.3656C3.45492 8.6286 3.18386 8.79405 2.95851 8.89436C2.84732 8.94386 2.75258 8.97509 2.68931 8.99319C2.65789 9.00219 2.63488 9.00776 2.62229 9.01062L2.61279 9.01269L2 9.12173V9.75005H4.40205C4.54555 9.63123 4.6879 9.49364 4.82254 9.33451C5.33063 8.73405 5.47613 7.99036 5.50837 7.32643C5.53396 6.79933 5.48918 6.23163 5.44995 5.73429C5.44047 5.61404 5.4313 5.49785 5.42354 5.3874C5.37987 4.76596 5.37961 4.32043 5.47246 4.00956C5.51394 3.87069 5.56644 3.78828 5.62053 3.73414C5.6724 3.68223 5.76099 3.6207 5.93312 3.57736C6.06245 3.5448 6.25632 3.52293 6.4456 3.51111C6.5345 3.50556 6.61271 3.50277 6.6683 3.50139C6.69595 3.5007 6.71765 3.50036 6.73185 3.5002L6.74724 3.50007L6.75029 3.50005L7.50005 3.5L7.49995 2L6.74982 2.00005L6.75 2.75005Z"/>\n<path d="M6.75 16.7501C6.74995 17.5001 6.74982 17.5001 6.74982 17.5001L6.74853 17.5001L6.74622 17.5001L6.73903 17.5L6.71478 17.4998C6.69446 17.4996 6.66594 17.4991 6.63087 17.4983C6.56099 17.4965 6.46364 17.493 6.35217 17.4861C6.14071 17.4729 5.83458 17.4448 5.56688 17.3774C5.17006 17.2774 4.82913 17.0961 4.55943 16.8262C4.29196 16.5585 4.13085 16.2401 4.03519 15.9198C3.85377 15.3124 3.88516 14.6062 3.92723 14.0076C3.93706 13.8677 3.94768 13.7316 3.95804 13.5988C3.99605 13.1116 4.03062 12.6685 4.01013 12.2464C3.98451 11.7186 3.87445 11.3673 3.67746 11.1345C3.45492 10.8715 3.18386 10.7061 2.95851 10.6058C2.84732 10.5563 2.75258 10.525 2.68931 10.5069C2.65789 10.4979 2.63488 10.4924 2.62229 10.4895L2.61279 10.4874L2 10.3784V9.75005H4.40205C4.54555 9.86887 4.6879 10.0065 4.82254 10.1656C5.33063 10.7661 5.47613 11.5098 5.50837 12.1737C5.53396 12.7008 5.48918 13.2685 5.44995 13.7658C5.44047 13.8861 5.4313 14.0023 5.42354 14.1127C5.37987 14.7341 5.37961 15.1797 5.47246 15.4906C5.51394 15.6294 5.56644 15.7118 5.62053 15.766C5.6724 15.8179 5.76099 15.8794 5.93312 15.9228C6.06245 15.9553 6.25632 15.9772 6.4456 15.989C6.5345 15.9945 6.61271 15.9973 6.6683 15.9987C6.69595 15.9994 6.71765 15.9998 6.73185 15.9999L6.74724 16L6.75029 16.0001L7.50005 16.0001L7.49995 17.5001L6.74982 17.5001L6.75 16.7501Z"/>\n</svg>\n';
var q3 = '<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">\n<circle cx="9.00037" cy="9.79993" r="1.5"/>\n<path d="M5.75024 2.75005C5.75019 2.00005 5.75006 2.00005 5.75006 2.00005L5.74877 2.00005L5.74647 2.00006L5.73927 2.00009L5.71503 2.0003C5.6947 2.00053 5.66619 2.00098 5.63111 2.00185C5.56123 2.0036 5.46388 2.00707 5.35241 2.01402C5.14095 2.02722 4.83482 2.05536 4.56712 2.12276C4.1703 2.22267 3.82938 2.40399 3.55967 2.67392C3.29221 2.94161 3.1311 3.26001 3.03544 3.5803C2.85401 4.18776 2.8854 4.89393 2.92747 5.49256C2.9373 5.6324 2.94792 5.76849 2.95828 5.90131C2.99629 6.38849 3.03087 6.83163 3.01038 7.25369C2.98475 7.78147 2.87469 8.13279 2.6777 8.3656C2.45517 8.6286 2.1841 8.79405 1.95875 8.89436C1.84756 8.94386 1.75282 8.97509 1.68956 8.99319C1.65813 9.00219 1.63513 9.00776 1.62253 9.01062L1.61304 9.01269L1.00024 9.12173V9.75005H3.4023C3.54579 9.63123 3.68814 9.49364 3.82278 9.33451C4.33087 8.73405 4.47638 7.99036 4.50861 7.32643C4.5342 6.79933 4.48942 6.23163 4.4502 5.73429C4.44071 5.61404 4.43155 5.49785 4.42378 5.3874C4.38011 4.76596 4.37986 4.32043 4.4727 4.00956C4.51418 3.87069 4.56668 3.78828 4.62078 3.73414C4.67264 3.68223 4.76124 3.6207 4.93336 3.57736C5.06269 3.5448 5.25656 3.52293 5.44585 3.51111C5.53475 3.50556 5.61296 3.50277 5.66854 3.50139C5.6962 3.5007 5.71789 3.50036 5.73209 3.5002L5.74748 3.50007L5.75054 3.50005L6.5003 3.5L6.50019 2L5.75006 2.00005L5.75024 2.75005Z"/>\n<path d="M5.75024 16.7501C5.75019 17.5001 5.75006 17.5001 5.75006 17.5001L5.74877 17.5001L5.74647 17.5001L5.73927 17.5L5.71503 17.4998C5.6947 17.4996 5.66619 17.4991 5.63111 17.4983C5.56123 17.4965 5.46388 17.493 5.35241 17.4861C5.14095 17.4729 4.83482 17.4448 4.56712 17.3774C4.1703 17.2774 3.82938 17.0961 3.55967 16.8262C3.29221 16.5585 3.1311 16.2401 3.03544 15.9198C2.85401 15.3124 2.8854 14.6062 2.92747 14.0076C2.9373 13.8677 2.94792 13.7316 2.95828 13.5988C2.99629 13.1116 3.03087 12.6685 3.01038 12.2464C2.98475 11.7186 2.87469 11.3673 2.6777 11.1345C2.45517 10.8715 2.1841 10.7061 1.95875 10.6058C1.84756 10.5563 1.75282 10.525 1.68956 10.5069C1.65813 10.4979 1.63513 10.4924 1.62253 10.4895L1.61304 10.4874L1.00024 10.3784V9.75005H3.4023C3.54579 9.86887 3.68814 10.0065 3.82278 10.1656C4.33087 10.7661 4.47638 11.5098 4.50861 12.1737C4.5342 12.7008 4.48942 13.2685 4.4502 13.7658C4.44071 13.8861 4.43155 14.0023 4.42378 14.1127C4.38011 14.7341 4.37986 15.1797 4.4727 15.4906C4.51418 15.6294 4.56668 15.7118 4.62078 15.766C4.67264 15.8179 4.76124 15.8794 4.93336 15.9228C5.06269 15.9553 5.25656 15.9772 5.44585 15.989C5.53475 15.9945 5.61296 15.9973 5.66854 15.9987C5.6962 15.9994 5.71789 15.9998 5.73209 15.9999L5.74748 16L5.75054 16.0001L6.5003 16.0001L6.50019 17.5001L5.75006 17.5001L5.75024 16.7501Z"/>\n<path fill-rule="evenodd" clip-rule="evenodd" d="M12.2514 2.00005L12.2501 2.00005L11.5 2L11.4999 3.5L12.2496 3.50005L12.2527 3.50007L12.2681 3.5002C12.2823 3.50036 12.304 3.5007 12.3316 3.50139C12.3872 3.50277 12.4654 3.50556 12.5543 3.51111C12.7436 3.52293 12.9375 3.5448 13.0668 3.57736C13.2389 3.6207 13.3275 3.68223 13.3794 3.73414C13.4335 3.78828 13.486 3.87069 13.5275 4.00956C13.6203 4.32043 13.6201 4.76596 13.5764 5.3874C13.5686 5.49785 13.5595 5.61404 13.55 5.73429C13.5108 6.23163 13.466 6.79933 13.4916 7.32643C13.5238 7.99036 13.6693 8.73405 14.1774 9.33451C14.312 9.49364 14.4544 9.63123 14.5979 9.75005C14.4544 9.86887 14.312 10.0065 14.1774 10.1656C13.7121 10.7154 13.5509 11.3854 13.5023 12.0042C13.6011 12.0012 13.7003 11.9997 13.7999 11.9997C14.208 11.9997 14.6093 12.0247 15.0018 12.0729C15.0416 11.6402 15.1479 11.3408 15.3225 11.1345C15.545 10.8715 15.8161 10.7061 16.0414 10.6058C16.1526 10.5563 16.2474 10.525 16.3106 10.5069C16.342 10.4979 16.365 10.4924 16.3776 10.4895L16.3871 10.4874L16.9999 10.3784V9.75005V9.12173L16.3871 9.01269L16.3776 9.01062C16.365 9.00776 16.342 9.00219 16.3106 8.99319C16.2474 8.97509 16.1526 8.94386 16.0414 8.89436C15.8161 8.79405 15.545 8.6286 15.3225 8.3656C15.1255 8.13279 15.0154 7.78147 14.9898 7.25369C14.9693 6.83163 15.0039 6.38849 15.0419 5.90131C15.0523 5.76849 15.0629 5.6324 15.0727 5.49256C15.1148 4.89393 15.1462 4.18776 14.9647 3.5803C14.8691 3.26001 14.708 2.94161 14.4405 2.67392C14.1708 2.40399 13.8299 2.22267 13.433 2.12276C13.1654 2.05536 12.8592 2.02722 12.6478 2.01402C12.5363 2.00707 12.4389 2.0036 12.3691 2.00185C12.334 2.00098 12.3055 2.00053 12.2851 2.0003L12.2609 2.00009L12.2537 2.00006L12.2514 2.00005Z"/>\n<path fill-rule="evenodd" clip-rule="evenodd" d="M9.00335 17.2062L9.00308 17.2065C8.7234 17.5118 8.24919 17.5327 7.94372 17.2532C7.63816 16.9735 7.61716 16.4991 7.89681 16.1935L8.45008 16.6999C7.89681 16.1935 7.89697 16.1934 7.89713 16.1932L7.89751 16.1928L7.89844 16.1918L7.90098 16.189L7.90879 16.1806L7.93517 16.1526C7.95746 16.1292 7.98914 16.0963 8.02971 16.0555C8.11079 15.9738 8.22768 15.8597 8.37644 15.724C8.6732 15.4532 9.10079 15.0927 9.62744 14.7314C10.6647 14.0198 12.1659 13.2499 13.8501 13.2499C15.5343 13.2499 17.0355 14.0198 18.0727 14.7314C18.5994 15.0927 19.027 15.4532 19.3237 15.724C19.4725 15.8597 19.5894 15.9738 19.6705 16.0555C19.711 16.0963 19.7427 16.1292 19.765 16.1526L19.7914 16.1806L19.7992 16.189L19.8017 16.1918L19.8027 16.1928L19.803 16.1932C19.8032 16.1934 19.8034 16.1935 19.2501 16.6999L19.8034 16.1935C20.083 16.4991 20.062 16.9735 19.7565 17.2532C19.4511 17.5326 18.9772 17.5118 18.6975 17.207L18.6971 17.2065L18.6968 17.2062L18.6945 17.2037L18.6783 17.1865C18.6629 17.1704 18.6386 17.1452 18.6059 17.1123C18.5404 17.0463 18.4414 16.9494 18.3127 16.8321C18.0546 16.5966 17.6814 16.282 17.2242 15.9683C16.9805 15.8012 16.7185 15.6381 16.4421 15.4883C16.7016 15.9322 16.8502 16.4487 16.8502 16.9999C16.8502 18.6567 15.5071 19.9999 13.8502 19.9999C12.1934 19.9999 10.8502 18.6567 10.8502 16.9999C10.8502 16.4486 10.9989 15.932 11.2584 15.4881C10.9819 15.6379 10.7198 15.8011 10.476 15.9683C10.0188 16.282 9.64555 16.5966 9.38746 16.8321C9.25879 16.9494 9.15975 17.0463 9.09425 17.1123C9.06153 17.1452 9.03726 17.1704 9.02192 17.1865L9.00572 17.2037L9.00335 17.2062Z"/>\n<circle cx="14.8253" cy="16.1749" r="1.125" fill="white"/>\n</svg>\n';
var m6 = class extends Plugin {
  static get ["requires"]() {
    return ["Mention", g5, ContextualBalloon, Widget];
  }
  static get ["pluginName"]() {
    return "MergeFieldsUI";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  constructor(_0x112a65) {
    super(_0x112a65), this["_balloonPanelView"] = null, this["_removeMenuBarButtonIfUnnecessary"](), this["_setupMentionConfiguration"]();
  }
  ["init"]() {
    const _0x4ce673 = this["editor"];
    _0x4ce673["ui"]["componentFactory"]["add"]("insertMergeField", (_0x325e45) => {
      const _0x7c17bb = function(_0x4ff5dc) {
        const _0xe65ea4 = createDropdown(_0x4ff5dc);
        return _0xe65ea4["set"]({ "class": "ck-insert-merge-field-dropdown", "isEnabled": true }), _0xe65ea4["buttonView"]["set"]({ "label": $3(_0x4ff5dc, "Insert merge field"), "icon": P4, "tooltip": true }), _0xe65ea4;
      }(_0x325e45);
      return _0x7c17bb["bind"]("isEnabled")["toMany"]([_0x4ce673["commands"]["get"]("insertMergeField"), _0x4ce673["commands"]["get"]("insertMergeFieldBlock")], "isEnabled", (..._0x4735ad) => _0x4735ad["some"]((_0x21f1c5) => _0x21f1c5)), _0x7c17bb["once"]("change:isOpen", () => {
        const _0x236e1a = { "insertInline": _0x4ce673["commands"]["get"]("insertMergeField"), "insertBlock": _0x4ce673["commands"]["get"]("insertMergeFieldBlock") }, _0x4072eb = function(_0x9d26f2, _0x3a0c3d, _0x162145) {
          const _0x102bbb = new T3(_0x9d26f2), _0x4ecf27 = [], _0x4bf783 = [];
          for (const _0x4d60b6 of _0x3a0c3d) if ("groupId" in _0x4d60b6) {
            const _0x1224f1 = D3(_0x9d26f2, _0x4d60b6["groupLabel"] || _0x4d60b6["groupId"], _0x4d60b6["definitions"], _0x162145);
            _0x1224f1["delegate"]("execute")["to"](_0x102bbb), _0x4bf783["push"](_0x1224f1);
          } else _0x4ecf27["push"](_0x4d60b6);
          if (_0x4ecf27["length"]) {
            const _0x167026 = D3(_0x9d26f2, "Other", _0x4ecf27, _0x162145);
            _0x167026["delegate"]("execute")["to"](_0x102bbb), _0x4bf783["push"](_0x167026);
          }
          return _0x102bbb["items"]["addMany"](_0x4bf783), _0x102bbb;
        }(_0x325e45, _0x4ce673["config"]["get"]("mergeFields.definitions"), _0x236e1a);
        _0x4072eb["delegate"]("execute")["to"](_0x7c17bb), _0x7c17bb["on"]("execute", (_0x138b02, _0x7b79c) => {
          const _0x170da3 = _0x4ce673["plugins"]["get"]("MergeFieldsEditing")["getMergeFieldType"](_0x7b79c);
          _0x4ce673["execute"]("text" === _0x170da3 ? "insertMergeField" : "insertMergeFieldBlock", _0x7b79c), _0x4ce673["editing"]["view"]["focus"]();
        });
        const _0x5054d1 = function(_0xbe297c, _0xeedd44) {
          return new SearchTextView(_0xbe297c, { "filteredView": _0xeedd44, "queryView": { "label": $3(_0xbe297c, "Search merge field") }, "class": "ck-merge-fields-search", "infoView": { "text": { "notFound": { "primary": $3(_0xbe297c, "No merge fields found") }, "noSearchableItems": { "primary": $3(_0xbe297c, "No merge fields available") } } } });
        }(_0x325e45, _0x4072eb);
        _0x7c17bb["panelView"]["children"]["add"](_0x5054d1), _0x7c17bb["on"]("change:isOpen", (_0x545cd0, _0x16daf9, _0x535bf3) => {
          _0x535bf3 && _0x5054d1["reset"]();
        });
      }), _0x7c17bb;
    }), _0x4ce673["ui"]["componentFactory"]["add"]("menuBar:insertMergeField", (_0x2ba38f) => {
      const _0x599f02 = new MenuBarMenuView(_0x2ba38f);
      _0x599f02["buttonView"]["set"]({ "label": $3(_0x2ba38f, "Merge field"), "icon": P4 }), _0x599f02["bind"]("isEnabled")["toMany"]([_0x4ce673["commands"]["get"]("insertMergeField"), _0x4ce673["commands"]["get"]("insertMergeFieldBlock")], "isEnabled", (..._0x447912) => _0x447912["some"]((_0x5a83c9) => _0x5a83c9));
      const _0x27acd4 = [], _0x3af704 = new MenuBarMenuListView(_0x2ba38f), _0x2956c4 = { "insertInline": _0x4ce673["commands"]["get"]("insertMergeField"), "insertBlock": _0x4ce673["commands"]["get"]("insertMergeFieldBlock") };
      for (const _0x1dda0c of _0x4ce673["config"]["get"]("mergeFields.definitions")) if ("groupId" in _0x1dda0c) {
        const _0x102449 = new MenuBarMenuListItemView(_0x2ba38f, _0x599f02), _0x1ac881 = J3(_0x2ba38f, _0x1dda0c, _0x2956c4);
        _0x102449["children"]["add"](_0x1ac881), _0x1ac881["delegate"]("execute")["to"](_0x599f02), _0x3af704["items"]["add"](_0x102449);
      } else _0x27acd4["push"](_0x1dda0c);
      if (_0x27acd4["length"]) {
        if (0 === _0x3af704["items"]["length"]) for (const _0x2d9fc8 of _0x27acd4) {
          const _0x32b884 = R4(_0x2ba38f, _0x2d9fc8, _0x599f02, "text" === _0x4ce673["plugins"]["get"]("MergeFieldsEditing")["getMergeFieldType"](_0x2d9fc8["id"]) ? _0x4ce673["commands"]["get"]("insertMergeField") : _0x4ce673["commands"]["get"]("insertMergeFieldBlock"));
          _0x3af704["items"]["add"](_0x32b884);
        }
        else {
          const _0xde3fc9 = new MenuBarMenuListItemView(_0x2ba38f, _0x599f02), _0x46358a = J3(_0x2ba38f, { "groupId": "Other", "definitions": _0x27acd4 }, _0x2956c4);
          _0xde3fc9["children"]["add"](_0x46358a), _0x46358a["delegate"]("execute")["to"](_0x599f02), _0x3af704["items"]["add"](_0xde3fc9);
        }
      }
      return _0x599f02["panelView"]["children"]["add"](_0x3af704), _0x599f02["on"]("execute", (_0x8ab440, _0x2f932b) => {
        const _0x37dfa4 = _0x4ce673["plugins"]["get"]("MergeFieldsEditing")["getMergeFieldType"](_0x2f932b);
        _0x4ce673["execute"]("text" === _0x37dfa4 ? "insertMergeField" : "insertMergeFieldBlock", _0x2f932b), _0x4ce673["editing"]["view"]["focus"]();
      }), _0x599f02;
    });
    const _0x4e4671 = _0x4ce673["config"]["get"]("mergeFields.previewModes"), _0x32f071 = [];
    if (_0x4e4671["includes"]("$labels") && _0x32f071["push"]({ "type": "button", "model": new Model({ "withText": true, "isToggleable": true, "label": $3(this["editor"]["locale"], "Labels"), "commandValue": "$labels" }) }), _0x4e4671["includes"]("$defaultValues") && _0x32f071["push"]({ "type": "button", "model": new Model({ "withText": true, "isToggleable": true, "label": $3(this["editor"]["locale"], "Default values"), "commandValue": "$defaultValues" }) }), _0x4e4671["includes"]("$dataSets")) {
      const _0x5daffe = _0x4ce673["config"]["get"]("mergeFields.dataSets");
      if (_0x5daffe["length"]) {
        for (const _0x328932 of _0x5daffe) _0x32f071["push"]({ "type": "button", "model": new Model({ "withText": true, "isToggleable": true, "label": _0x328932["label"] || _0x328932["id"], "commandValue": _0x328932["id"] }) });
      }
    }
    _0x4ce673["ui"]["componentFactory"]["add"]("previewMergeFields", (_0x1009be) => {
      const _0x5aa7d8 = _0x4ce673["commands"]["get"]("previewMergeFields"), _0x1a3ac4 = new Collection();
      for (const _0x55aaea of cloneDeep_default(_0x32f071)) _0x55aaea["model"]["bind"]("isOn")["to"](_0x5aa7d8, "value", (_0x2f6abc) => _0x2f6abc === _0x55aaea["model"]["commandValue"]), _0x1a3ac4["add"](_0x55aaea);
      const _0x106a7a = createDropdown(_0x1009be), _0x5013c0 = $3(_0x1009be, "Merge fields preview");
      return _0x106a7a["bind"]("isEnabled")["to"](_0x5aa7d8), addListToDropdown(_0x106a7a, _0x1a3ac4, { "ariaLabel": _0x5013c0, "role": "menu" }), _0x106a7a["set"]({ "class": "ck-merge-fields-preview-dropdown" }), _0x106a7a["buttonView"]["set"]({ "label": _0x5013c0, "ariaLabel": _0x5013c0, "ariaLabelledBy": void 0, "isOn": false, "icon": q3, "tooltip": true }), this["listenTo"](_0x106a7a, "execute", (_0x5b6f6b) => {
        const { commandValue: _0xc4c8ae } = _0x5b6f6b["source"];
        _0x4ce673["execute"]("previewMergeFields", _0xc4c8ae), _0x4ce673["editing"]["view"]["focus"]();
      }), _0x106a7a;
    }), _0x4ce673["ui"]["componentFactory"]["add"]("menuBar:previewMergeFields", (_0x2df3f9) => {
      const _0x42c222 = new MenuBarMenuView(_0x2df3f9), _0x22bae8 = _0x4ce673["commands"]["get"]("previewMergeFields");
      _0x42c222["buttonView"]["set"]({ "label": $3(_0x2df3f9, "Merge fields preview"), "icon": q3 }), _0x42c222["bind"]("isEnabled")["to"](_0x22bae8);
      const _0x4fbbec = new MenuBarMenuListView(_0x2df3f9);
      _0x4fbbec["set"]({ "ariaLabel": $3(_0x2df3f9, "Merge fields preview") });
      for (const _0x4fdadd of cloneDeep_default(_0x32f071)) {
        const _0x483d55 = new MenuBarMenuListItemView(_0x2df3f9, _0x42c222), _0x4192a6 = new MenuBarMenuListItemButtonView(_0x2df3f9);
        _0x4fdadd["model"]["bind"]("isOn")["to"](_0x22bae8, "value", (_0x190701) => _0x190701 === _0x4fdadd["model"]["commandValue"]), _0x4192a6["isToggleable"] = true, _0x4192a6["bind"](...Object["keys"](_0x4fdadd["model"]))["to"](_0x4fdadd["model"]), _0x4192a6["delegate"]("execute")["to"](_0x42c222), _0x4192a6["on"]("execute", (_0x38e866) => {
          const { commandValue: _0x35ead4 } = _0x38e866["source"];
          _0x4ce673["execute"]("previewMergeFields", _0x35ead4), _0x4ce673["editing"]["view"]["focus"]();
        }), _0x483d55["children"]["add"](_0x4192a6), _0x4fbbec["items"]["add"](_0x483d55);
      }
      return _0x42c222["panelView"]["children"]["add"](_0x4fbbec), _0x42c222;
    }), this["_balloon"] = _0x4ce673["plugins"]["get"](ContextualBalloon), this["listenTo"](_0x4ce673["ui"], "update", () => {
      this["_updateBalloonVisibility"]();
    }, { "priority": "low" }), this["listenTo"](_0x4ce673["ui"]["focusTracker"], "change:isFocused", (_0x337b, _0x2f67cf, _0x3e9c46) => {
      this["_balloon"]["visibleView"] && this["_balloon"]["visibleView"] === this["_balloonPanelView"] && (_0x3e9c46 ? this["_updateBalloonVisibility"]() : this["_hideBalloon"]());
    }, { "priority": "low" }), this["editor"]["once"]("ready", this["_overrideMentionExecuteListener"]["bind"](this));
  }
  ["_updateBalloonVisibility"]() {
    const _0x5edc93 = this["editor"]["editing"]["view"]["document"]["selection"]["getSelectedElement"](), _0x5f15ff = !(!_0x5edc93 || !_0x5edc93["getCustomProperty"]("mergeFieldStatus"));
    if (this["_balloon"]["visibleView"] && this["_balloon"]["visibleView"] === this["_balloonPanelView"]) {
      if (_0x5f15ff) {
        const _0x4567f7 = _0x5edc93["getCustomProperty"]("mergeFieldStatus");
        this["_balloonPanelView"]["text"] = $3(this["editor"]["locale"], _0x4567f7), this["_balloon"]["updatePosition"](this["_getBalloonPositionData"]());
      } else this["_hideBalloon"]();
    } else {
      if (_0x5f15ff) {
        const _0x5269b9 = _0x5edc93["getCustomProperty"]("mergeFieldStatus");
        this["_showBalloon"]($3(this["editor"]["locale"], _0x5269b9));
      }
    }
  }
  ["_showBalloon"](_0x1ad4d0) {
    this["_balloonPanelView"] || (this["_balloonPanelView"] = new U3(this["editor"]["locale"]), this["_balloonPanelView"]["text"] = _0x1ad4d0), this["_balloon"]["hasView"](this["_balloonPanelView"]) || this["_balloon"]["add"]({ "stackId": "mergeFieldsBalloon", "view": this["_balloonPanelView"], "position": this["_getBalloonPositionData"]() });
  }
  ["_getBalloonPositionData"]() {
    const _0x4fd798 = this["editor"]["editing"]["view"];
    return { "target": () => {
      const _0x202d2e = _0x4fd798["document"]["selection"]["getFirstRange"](), _0x377b05 = _0x4fd798["domConverter"]["mapViewToDom"](_0x202d2e["getContainedElement"]());
      return _0x377b05 ? Array["from"](_0x377b05["getClientRects"]())[0] : _0x4fd798["domConverter"]["viewRangeToDom"](_0x202d2e);
    } };
  }
  ["_hideBalloon"]() {
    this["_balloon"]["remove"](this["_balloonPanelView"]);
  }
  ["afterInit"]() {
    !function(_0x4adac7) {
      function _0x2ada72(_0x1eac9b, _0x1851f4, _0x1aa894) {
        const _0x1e7997 = {};
        _0x1e7997[_0x57e206([110, 117, 109, 98, 101, 114, 79, 102, 82, 111, 117, 110, 100, 115])] = { 16: 10, 24: 12, 32: 14 }, _0x1e7997[_0x57e206([114, 99, 111, 110])] = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145], _0x1e7997[_0x57e206([83])] = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], _0x1e7997[_0x57e206([84, 49])] = [3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474, 1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738, 597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420, 3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577, 605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627, 2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520, 3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205, 2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474, 1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309, 3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720, 2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771, 1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243, 3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470, 1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977, 2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737, 1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754, 361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755, 697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986], _0x1e7997[_0x57e206([84, 50])] = [2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899, 2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108, 4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129, 2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848, 1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043, 1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914, 1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139, 2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658, 3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324, 3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385, 3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499, 1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572, 2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810, 3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411, 3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753, 2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487, 550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313, 2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766], _0x1e7997[_0x57e206([84, 51])] = [1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099, 1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188, 2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329, 1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768, 3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283, 3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114, 3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739, 2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538, 2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324, 1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865, 1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296, 844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713, 3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050, 2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131, 3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513, 2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927, 3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905, 2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126], _0x1e7997[_0x57e206([84, 52])] = [1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549, 1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243, 2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529, 1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963, 3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198, 3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564, 3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214, 2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143, 2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699, 1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945, 1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771, 842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818, 3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340, 2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126, 3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473, 2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917, 3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930, 2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436], _0x1e7997[_0x57e206([85, 49])] = [0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795], _0x1e7997[_0x57e206([85, 50])] = [0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459, 2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537, 3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535, 77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884, 3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824, 3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622, 507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216, 3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879, 129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469, 3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175, 1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921, 2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127, 3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560, 1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387, 2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037, 4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148, 692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663, 2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855], _0x1e7997[_0x57e206([85, 51])] = [0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639, 3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557, 2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032, 3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201, 344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239, 532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878, 3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771, 4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744, 671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199, 4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366, 492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798, 2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695, 3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569, 4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702, 3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217, 1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635, 1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009, 3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150], _0x1e7997[_0x57e206([85, 52])] = [0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874, 2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222, 4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595, 1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591, 4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837, 923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127, 2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424, 2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110, 4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469, 4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481, 1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243, 3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604, 2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802, 585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166, 4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912, 1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703, 3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213, 2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925];
        const _0xc5014e = new Uint8Array(16);
        for (let _0x581a8a = 15; _0x581a8a >= 0; --_0x581a8a) _0xc5014e[_0x581a8a] = _0x1aa894 % 256, _0x1aa894 = parseInt(_0x1aa894 / 256);
        let _0x3d486d = null, _0x40a7d8 = 16;
        const _0x4e63d7 = new Uint8Array(_0x1851f4), _0x2b62a2 = [], _0x20a267 = [];
        _0x3104ec();
        for (let _0x4d3c0b = 0; _0x4d3c0b < _0x1eac9b[_0x57e206([108, 101, 110, 103, 116, 104])]; _0x4d3c0b++) 16 === _0x40a7d8 && (_0x3d486d = _0xdbe663(_0xc5014e), _0x40a7d8 = 0, _0x6b578e(_0xc5014e)), _0x1eac9b[_0x4d3c0b] ^= _0x3d486d[_0x40a7d8++];
        return _0x1eac9b;
        function _0x2b0b60(_0x380ed4) {
          const _0x48f381 = [];
          for (let _0x52f4a9 = 0; _0x52f4a9 < _0x380ed4[_0x57e206([108, 101, 110, 103, 116, 104])]; _0x52f4a9 += 4) _0x48f381[_0x57e206([112, 117, 115, 104])](_0x380ed4[_0x52f4a9] << 24 | _0x380ed4[_0x52f4a9 + 1] << 16 | _0x380ed4[_0x52f4a9 + 2] << 8 | _0x380ed4[_0x52f4a9 + 3]);
          return _0x48f381;
        }
        function _0x6b578e(_0x3b7fe5) {
          for (let _0x55a585 = 15; _0x55a585 >= 0; _0x55a585--) {
            if (255 !== _0x3b7fe5[_0x55a585]) {
              _0x3b7fe5[_0x55a585]++;
              break;
            }
            _0x3b7fe5[_0x55a585] = 0;
          }
        }
        function _0xdbe663(_0xece7c1) {
          const _0x664ea2 = _0x2b62a2[_0x57e206([108, 101, 110, 103, 116, 104])] - 1, _0x56696a = [0, 0, 0, 0];
          let t2 = _0x2b0b60(_0xece7c1);
          for (let _0x88748b = 0; _0x88748b < 4; _0x88748b++) t2[_0x88748b] ^= _0x2b62a2[0][_0x88748b];
          for (let _0xd278b3 = 1; _0xd278b3 < _0x664ea2; _0xd278b3++) {
            for (let _0x1da283 = 0; _0x1da283 < 4; _0x1da283++) _0x56696a[_0x1da283] = _0x1e7997[_0x57e206([84, 49])][t2[_0x1da283] >> 24 & 255] ^ _0x1e7997[_0x57e206([84, 50])][t2[(_0x1da283 + 1) % 4] >> 16 & 255] ^ _0x1e7997[_0x57e206([84, 51])][t2[(_0x1da283 + 2) % 4] >> 8 & 255] ^ _0x1e7997[_0x57e206([84, 52])][255 & t2[(_0x1da283 + 3) % 4]] ^ _0x2b62a2[_0xd278b3][_0x1da283];
            t2 = _0x56696a[_0x57e206([115, 108, 105, 99, 101])]();
          }
          const _0x3acb40 = new Uint8Array(16);
          let _0x3acc43;
          for (let _0x39fd2f = 0; _0x39fd2f < 4; _0x39fd2f++) _0x3acc43 = _0x2b62a2[_0x664ea2][_0x39fd2f], _0x3acb40[4 * _0x39fd2f] = 255 & (_0x1e7997[_0x57e206([83])][t2[_0x39fd2f] >> 24 & 255] ^ _0x3acc43 >> 24), _0x3acb40[4 * _0x39fd2f + 1] = 255 & (_0x1e7997[_0x57e206([83])][t2[(_0x39fd2f + 1) % 4] >> 16 & 255] ^ _0x3acc43 >> 16), _0x3acb40[4 * _0x39fd2f + 2] = 255 & (_0x1e7997[_0x57e206([83])][t2[(_0x39fd2f + 2) % 4] >> 8 & 255] ^ _0x3acc43 >> 8), _0x3acb40[4 * _0x39fd2f + 3] = 255 & (_0x1e7997[_0x57e206([83])][255 & t2[(_0x39fd2f + 3) % 4]] ^ _0x3acc43);
          return _0x3acb40;
        }
        function _0x3104ec() {
          const _0x2f6c67 = _0x1e7997[_0x57e206([110, 117, 109, 98, 101, 114, 79, 102, 82, 111, 117, 110, 100, 115])][_0x4e63d7[_0x57e206([108, 101, 110, 103, 116, 104])]];
          for (let _0x30bda3 = 0; _0x30bda3 <= _0x2f6c67; _0x30bda3++) _0x2b62a2[_0x57e206([112, 117, 115, 104])]([0, 0, 0, 0]), _0x20a267[_0x57e206([112, 117, 115, 104])]([0, 0, 0, 0]);
          const _0x5e0d4e = 4 * (_0x2f6c67 + 1), _0x43a7de = _0x4e63d7[_0x57e206([108, 101, 110, 103, 116, 104])] / 4, _0x32b1ac = _0x2b0b60(_0x4e63d7);
          let _0x17832a;
          for (let _0x39c322 = 0; _0x39c322 < _0x43a7de; _0x39c322++) _0x17832a = _0x39c322 >> 2, _0x2b62a2[_0x17832a][_0x39c322 % 4] = _0x32b1ac[_0x39c322], _0x20a267[_0x2f6c67 - _0x17832a][_0x39c322 % 4] = _0x32b1ac[_0x39c322];
          let _0x57ce95, _0x38d627 = 0, t2 = _0x43a7de;
          for (; t2 < _0x5e0d4e; ) {
            _0x57ce95 = _0x32b1ac[_0x43a7de - 1], _0x32b1ac[0] ^= _0x1e7997[_0x57e206([83])][_0x57ce95 >> 16 & 255] << 24 ^ _0x1e7997[_0x57e206([83])][_0x57ce95 >> 8 & 255] << 16 ^ _0x1e7997[_0x57e206([83])][255 & _0x57ce95] << 8 ^ _0x1e7997[_0x57e206([83])][_0x57ce95 >> 24 & 255] ^ _0x1e7997[_0x57e206([114, 99, 111, 110])][_0x38d627] << 24, _0x38d627 += 1;
            for (let _0x339cce = 1; _0x339cce < _0x43a7de / 2; _0x339cce++) _0x32b1ac[_0x339cce] ^= _0x32b1ac[_0x339cce - 1];
            _0x57ce95 = _0x32b1ac[_0x43a7de / 2 - 1], _0x32b1ac[_0x43a7de / 2] ^= _0x1e7997[_0x57e206([83])][255 & _0x57ce95] ^ _0x1e7997[_0x57e206([83])][_0x57ce95 >> 8 & 255] << 8 ^ _0x1e7997[_0x57e206([83])][_0x57ce95 >> 16 & 255] << 16 ^ _0x1e7997[_0x57e206([83])][_0x57ce95 >> 24 & 255] << 24;
            for (let _0x5af95d = _0x43a7de / 2 + 1; _0x5af95d < _0x43a7de; _0x5af95d++) _0x32b1ac[_0x5af95d] ^= _0x32b1ac[_0x5af95d - 1];
            let _0x267eb3, _0x58344b, _0x43fc8b = 0;
            for (; _0x43fc8b < _0x43a7de && t2 < _0x5e0d4e; ) _0x267eb3 = t2 >> 2, _0x58344b = t2 % 4, _0x2b62a2[_0x267eb3][_0x58344b] = _0x32b1ac[_0x43fc8b], _0x20a267[_0x2f6c67 - _0x267eb3][_0x58344b] = _0x32b1ac[_0x43fc8b++], t2++;
          }
          for (let _0x3d78a8 = 1; _0x3d78a8 < _0x2f6c67; _0x3d78a8++) for (let _0x3c7734 = 0; _0x3c7734 < 4; _0x3c7734++) _0x57ce95 = _0x20a267[_0x3d78a8][_0x3c7734], _0x20a267[_0x3d78a8][_0x3c7734] = _0x1e7997[_0x57e206([85, 49])][_0x57ce95 >> 24 & 255] ^ _0x1e7997[_0x57e206([85, 50])][_0x57ce95 >> 16 & 255] ^ _0x1e7997[_0x57e206([85, 51])][_0x57ce95 >> 8 & 255] ^ _0x1e7997[_0x57e206([85, 52])][255 & _0x57ce95];
        }
      }
      function _0x57e206(_0x353be6) {
        return _0x353be6["map"]((_0x3a5683) => String["fromCharCode"](_0x3a5683))["join"]("");
      }
      ((_0x57c1af) => {
        function _0x421ea2() {
          const _0x2cd349 = [{ [_0x57e206([105, 100])]: 1, [_0x57e206([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x57e206([67, 111, 109, 109, 101, 110, 116, 115]), [_0x57e206([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x57e206([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]), [_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x57e206([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x57e206([104, 97, 110, 100, 108, 101, 114])]: _0x57e206([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x57e206([99, 104, 101, 99, 107, 65, 108, 115, 111])]: [{ [_0x57e206([105, 100])]: 2, [_0x57e206([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x57e206([84, 114, 97, 99, 107, 32, 67, 104, 97, 110, 103, 101, 115]), [_0x57e206([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x57e206([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103]), [_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x57e206([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x57e206([104, 97, 110, 100, 108, 101, 114])]: _0x57e206([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115]), [_0x57e206([111, 112, 116, 105, 111, 110, 115])]: { [_0x57e206([97, 105, 119, 115, 103, 105, 99])]: true, [_0x57e206([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x57e206([97, 105, 114, 118, 105, 105, 108])]: true } }], [_0x57e206([111, 112, 116, 105, 111, 110, 115])]: { [_0x57e206([97, 105, 119, 115, 103, 105, 99])]: true, [_0x57e206([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x57e206([97, 105, 114, 118, 105, 105, 108])]: true } }, { [_0x57e206([105, 100])]: 3, [_0x57e206([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x57e206([80, 97, 103, 105, 110, 97, 116, 105, 111, 110]), [_0x57e206([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x57e206([80, 97, 103, 105, 110, 97, 116, 105, 111, 110, 76, 111, 111, 107, 117, 112]), [_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x57e206([112, 97, 103, 105, 110, 97, 116, 105, 111, 110, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x57e206([104, 97, 110, 100, 108, 101, 114])]: _0x57e206([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x57e206([105, 100])]: 4, [_0x57e206([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x57e206([82, 101, 118, 105, 115, 105, 111, 110, 32, 72, 105, 115, 116, 111, 114, 121]), [_0x57e206([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x57e206([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]), [_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x57e206([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x57e206([104, 97, 110, 100, 108, 101, 114])]: _0x57e206([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 82, 101, 118, 105, 115, 105, 111, 110, 72, 105, 115, 116, 111, 114, 121]), [_0x57e206([111, 112, 116, 105, 111, 110, 115])]: { [_0x57e206([97, 105, 119, 115, 103, 105, 99])]: true, [_0x57e206([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x57e206([97, 105, 114, 118, 105, 105, 108])]: true } }, { [_0x57e206([105, 100])]: 5, [_0x57e206([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x57e206([68, 111, 99, 117, 109, 101, 110, 116, 32, 79, 117, 116, 108, 105, 110, 101]), [_0x57e206([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x57e206([68, 111, 99, 117, 109, 101, 110, 116, 79, 117, 116, 108, 105, 110, 101, 85, 73]), [_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x57e206([100, 111, 99, 117, 109, 101, 110, 116, 79, 117, 116, 108, 105, 110, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x57e206([104, 97, 110, 100, 108, 101, 114])]: _0x57e206([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x57e206([111, 112, 116, 105, 111, 110, 115])]: { [_0x57e206([102, 103, 105])]: [12] } }, { [_0x57e206([105, 100])]: 6, [_0x57e206([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x57e206([70, 111, 114, 109, 97, 116, 32, 80, 97, 105, 110, 116, 101, 114]), [_0x57e206([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x57e206([70, 111, 114, 109, 97, 116, 80, 97, 105, 110, 116, 101, 114, 85, 73]), [_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x57e206([102, 111, 114, 109, 97, 116, 80, 97, 105, 110, 116, 101, 114, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x57e206([104, 97, 110, 100, 108, 101, 114])]: _0x57e206([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x57e206([111, 112, 116, 105, 111, 110, 115])]: { [_0x57e206([102, 103, 105])]: [12] } }, { [_0x57e206([105, 100])]: 7, [_0x57e206([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x57e206([83, 108, 97, 115, 104, 32, 67, 111, 109, 109, 97, 110, 100]), [_0x57e206([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x57e206([83, 108, 97, 115, 104, 67, 111, 109, 109, 97, 110, 100, 85, 73]), [_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x57e206([115, 108, 97, 115, 104, 67, 111, 109, 109, 97, 110, 100, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x57e206([104, 97, 110, 100, 108, 101, 114])]: _0x57e206([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x57e206([111, 112, 116, 105, 111, 110, 115])]: { [_0x57e206([102, 103, 105])]: [12] } }, { [_0x57e206([105, 100])]: 8, [_0x57e206([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x57e206([84, 97, 98, 108, 101, 32, 111, 102, 32, 67, 111, 110, 116, 101, 110, 116, 115]), [_0x57e206([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x57e206([84, 97, 98, 108, 101, 79, 102, 67, 111, 110, 116, 101, 110, 116, 115, 69, 100, 105, 116, 105, 110, 103]), [_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x57e206([116, 97, 98, 108, 101, 79, 102, 67, 111, 110, 116, 101, 110, 116, 115, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x57e206([104, 97, 110, 100, 108, 101, 114])]: _0x57e206([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x57e206([111, 112, 116, 105, 111, 110, 115])]: { [_0x57e206([102, 103, 105])]: [12] } }, { [_0x57e206([105, 100])]: 9, [_0x57e206([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x57e206([84, 101, 109, 112, 108, 97, 116, 101]), [_0x57e206([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x57e206([84, 101, 109, 112, 108, 97, 116, 101, 85, 73]), [_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x57e206([116, 101, 109, 112, 108, 97, 116, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x57e206([104, 97, 110, 100, 108, 101, 114])]: _0x57e206([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x57e206([111, 112, 116, 105, 111, 110, 115])]: { [_0x57e206([102, 103, 105])]: [12, 14] } }, { [_0x57e206([105, 100])]: 10, [_0x57e206([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x57e206([80, 97, 115, 116, 101, 32, 102, 114, 111, 109, 32, 79, 102, 102, 105, 99, 101, 32, 69, 110, 104, 97, 110, 99, 101, 100]), [_0x57e206([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x57e206([80, 97, 115, 116, 101, 70, 114, 111, 109, 79, 102, 102, 105, 99, 101, 69, 110, 104, 97, 110, 99, 101, 100, 73, 110, 108, 105, 110, 101, 114]), [_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x57e206([112, 97, 115, 116, 101, 70, 114, 111, 109, 79, 102, 102, 105, 99, 101, 69, 110, 104, 97, 110, 99, 101, 100, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x57e206([104, 97, 110, 100, 108, 101, 114])]: _0x57e206([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x57e206([111, 112, 116, 105, 111, 110, 115])]: { [_0x57e206([102, 103, 105])]: [12] } }, { [_0x57e206([105, 100])]: 11, [_0x57e206([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x57e206([65, 73, 32, 65, 115, 115, 105, 115, 116, 97, 110, 116]), [_0x57e206([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x57e206([65, 73, 65, 115, 115, 105, 115, 116, 97, 110, 116, 85, 73]), [_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x57e206([97, 105, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x57e206([104, 97, 110, 100, 108, 101, 114])]: _0x57e206([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x57e206([105, 100])]: 12, [_0x57e206([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x57e206([80, 114, 111, 100, 117, 99, 116, 105, 118, 105, 116, 121, 32, 112, 97, 99, 107]) }, { [_0x57e206([105, 100])]: 13, [_0x57e206([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x57e206([67, 97, 115, 101, 32, 67, 104, 97, 110, 103, 101]), [_0x57e206([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x57e206([67, 97, 115, 101, 67, 104, 97, 110, 103, 101, 85, 73]), [_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x57e206([99, 97, 115, 101, 67, 104, 97, 110, 103, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x57e206([104, 97, 110, 100, 108, 101, 114])]: _0x57e206([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x57e206([111, 112, 116, 105, 111, 110, 115])]: { [_0x57e206([102, 103, 105])]: [12] } }, { [_0x57e206([105, 100])]: 14, [_0x57e206([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x57e206([68, 114, 117, 112, 97, 108, 32, 112, 97, 99, 107]), [_0x57e206([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114])]: _0x57e206([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114, 70, 111, 114, 68, 114, 117, 112, 97, 108]) }, { [_0x57e206([105, 100])]: 15, [_0x57e206([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x57e206([77, 117, 108, 116, 105, 32, 76, 101, 118, 101, 108, 32, 76, 105, 115, 116]), [_0x57e206([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x57e206([77, 117, 108, 116, 105, 76, 101, 118, 101, 108, 76, 105, 115, 116, 69, 100, 105, 116, 105, 110, 103]), [_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x57e206([109, 117, 108, 116, 105, 76, 101, 118, 101, 108, 76, 105, 115, 116, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x57e206([104, 97, 110, 100, 108, 101, 114])]: _0x57e206([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x57e206([105, 100])]: 16, [_0x57e206([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x57e206([77, 101, 114, 103, 101, 32, 70, 105, 101, 108, 100, 115]), [_0x57e206([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x57e206([77, 101, 114, 103, 101, 70, 105, 101, 108, 100, 115, 85, 73]), [_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x57e206([109, 101, 114, 103, 101, 70, 105, 101, 108, 100, 115, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x57e206([104, 97, 110, 100, 108, 101, 114])]: _0x57e206([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x57e206([111, 112, 116, 105, 111, 110, 115])]: { [_0x57e206([102, 103, 105])]: [12] } }];
          return _0x390329(_0x2cd349), _0x2cd349;
          function _0x242b96(_0x3f894e) {
            return 1 << _0x3f894e - 1;
          }
          function _0x390329(_0x3df768) {
            _0x3df768[_0x57e206([102, 111, 114, 69, 97, 99, 104])]((_0x267a9c) => {
              _0x267a9c[_0x57e206([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])] = _0x242b96(_0x267a9c[_0x57e206([105, 100])]), _0x47b858(_0x267a9c) && _0x267a9c[_0x57e206([99, 104, 101, 99, 107, 65, 108, 115, 111])] && _0x390329(_0x267a9c[_0x57e206([99, 104, 101, 99, 107, 65, 108, 115, 111])]);
            });
          }
        }
        function _0x47b858(_0x71a4e8) {
          return _0x57e206([112, 108, 117, 103, 105, 110, 78, 97, 109, 101]) in _0x71a4e8;
        }
        const _0x4f8497 = [1, 85, 78, 115, 198, 255, 50, 112, 83, 87, 161], _0x14c503 = [127, 34, 6, 211, 167, 86, 146, 199, 132, 160, 18];
        function _0x994c93(_0xa69d28) {
          const _0x1e0b73 = [29, 221, 175, 90, 231, 133, 239, 240, 75, 180];
          return _0x405003(_0xa69d28, new Uint8Array([..._0x4f8497, ..._0x1e0b73, ..._0x14c503]));
        }
        function _0x405003(_0x29d425, _0x355a29) {
          const _0x303331 = _0x303181(_0x29d425), _0x5623d3 = Array[_0x57e206([102, 114, 111, 109])](_0x3e30ab(_0x303331)), _0x39a850 = _0x5623d3[_0x57e206([112, 111, 112])](), _0x18b3d3 = _0x5623d3[_0x57e206([112, 111, 112])]();
          return _0x59f55c(_0x2ada72(_0x5623d3, _0x355a29, _0x18b3d3 + 256 * _0x39a850));
        }
        function _0x303181(_0xece0f7) {
          const _0x4375d4 = atob(_0xece0f7), [_0x5f0cab, _0x4cb03c] = _0x4375d4[_0x57e206([115, 112, 108, 105, 116])](_0x57e206([45]));
          try {
            if (atob(_0x4cb03c)) return atob(_0x5f0cab);
          } catch (_0x209a2a) {
          }
          return _0x4375d4;
        }
        function _0x5816c4(_0x51d016) {
          try {
            const _0x4ae0f2 = _0x994c93(_0x51d016), _0x34d23d = JSON[_0x57e206([112, 97, 114, 115, 101])](_0x4ae0f2), _0x46214a = parseInt(_0x34d23d[_0x57e206([49])]), _0x571552 = _0x34d23d[_0x57e206([50])] || "", _0x170757 = parseInt(_0x34d23d[_0x57e206([51])]), _0x3f04f9 = parseInt(_0x34d23d[_0x57e206([52])]) || 0, _0x4bf9c3 = parseInt(_0x34d23d[_0x57e206([53])]) || 0;
            return { [_0x57e206([112, 114, 111, 100, 117, 99, 116, 78, 97, 109, 101])]: _0x571552, [_0x57e206([97, 108, 108, 111, 119, 101, 100, 80, 108, 117, 103, 105, 110, 115])]: _0x3f04f9, [_0x57e206([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])]: _0x46214a, [_0x57e206([105, 115, 84, 114, 105, 97, 108])]: _0x170757, [_0x57e206([105, 115, 73, 110, 116, 101, 114, 110, 97, 108])]: _0x4bf9c3 };
          } catch (_0x4c7730) {
            return null;
          }
        }
        const _0x53bde3 = _0x421ea2(), _0x335ad0 = { [_0x57e206([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101])]: _0x3a1665, [_0x57e206([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115])]: _0x5f3961, [_0x57e206([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 82, 101, 118, 105, 115, 105, 111, 110, 72, 105, 115, 116, 111, 114, 121])]: _0x222d5b }, _0xdd8ecf = _0x57c1af[_0x57e206([99, 111, 110, 115, 116, 114, 117, 99, 116, 111, 114])][_0x57e206([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])], _0x343e9a = _0x57e206([99, 111, 110, 116, 101, 120, 116]) in _0x57c1af ? _0x57c1af["context"] : _0x57c1af["editor"], _0x513258 = _0x57e206([52, 48, 52, 56, 50, 50, 49, 50]), _0xf8a283 = _0x57e206([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]), _0x412881 = _0x343e9a["config"]["get"](_0x57e206([108, 105, 99, 101, 110, 115, 101, 75, 101, 121])), _0x374c62 = _0x53bde3[_0x57e206([102, 105, 108, 116, 101, 114])](_0x47b858)[_0x57e206([102, 105, 110, 100])]((_0x3a9aed) => _0x3a9aed[_0x57e206([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])] === _0xdd8ecf);
        function _0x489545(_0x2bb100, _0x5e00aa) {
          _0x335ad0[_0x5e00aa[_0x57e206([104, 97, 110, 100, 108, 101, 114])]](_0x2bb100, _0x5e00aa), _0x5e00aa[_0x57e206([99, 104, 101, 99, 107, 65, 108, 115, 111])] && _0x5e00aa[_0x57e206([99, 104, 101, 99, 107, 65, 108, 115, 111])][_0x57e206([102, 105, 108, 116, 101, 114])]((_0x539966) => _0x3a102c(_0x343e9a, _0x539966[_0x57e206([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]))[_0x57e206([102, 111, 114, 69, 97, 99, 104])]((_0x40ee43) => _0x489545(_0x2bb100, _0x40ee43));
        }
        function _0x3a1665(_0x29fff3, _0x172a28) {
          _0x5e185f(_0x57afbc(_0x29fff3, _0x172a28), _0x172a28);
        }
        function _0x5f3961(_0x16b79d, _0x5e3137) {
          function _0x1bf172(_0x18cc24, _0x83e859) {
            try {
              if (_0x3a102c(_0x343e9a, _0x57e206([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103])) && _0x18cc24) {
                const _0xe8ca31 = _0x134c2b(_0x343e9a, _0x57e206([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103]))[_0x57e206([95, 101, 120, 101, 99, 117, 116, 101, 83, 117, 103, 103, 101, 115, 116, 105, 111, 110])];
                if (parseInt(_0xe8ca31) / 2 > _0x18cc24[_0x57e206([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])]) return _0x438a21(_0x83e859[_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x57e206([73, 110, 118, 97, 108, 105, 100]));
              }
              return _0x57afbc(_0x18cc24, _0x83e859);
            } catch (_0x4f0287) {
              return _0x438a21(_0x83e859[_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x57e206([73, 110, 118, 97, 108, 105, 100]));
            }
          }
          _0x5e185f(_0x1bf172(_0x16b79d, _0x5e3137), _0x5e3137);
        }
        function _0x222d5b(_0x1f71d6, _0x3cd67b) {
          const _0x5b405f = _0x14c503[0] * _0x4f8497[1], _0x129a61 = _0x14c503[0] * _0x4f8497[2], _0x1da8c1 = _0x14c503[2] * _0x4f8497[2];
          _0x3a102c(_0x343e9a, _0x57e206([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121])) && _0x134c2b(_0x343e9a, _0x57e206([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121]))[_0x57e206([115, 116, 97, 116, 101])] == _0x57e206([99, 111, 110, 110, 101, 99, 116, 101, 100]) && (window[_0x5e2629()] = _0x1da8c1);
          function _0x4a11e5(_0x53fa45, _0x1ef452) {
            try {
              return _0x6b7c6d() ? _0x438a21(_0x1ef452[_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x57e206([86, 97, 108, 105, 100])) : _0x57afbc(_0x53fa45, _0x1ef452);
            } catch (_0x49b622) {
              return _0x438a21(_0x1ef452[_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x57e206([73, 110, 118, 97, 108, 105, 100]));
            }
          }
          function _0xb4fe5c(_0x1aeecf, _0x4b430b) {
            const _0x166ab0 = 7;
            if (_0x1aeecf == _0x4b430b[_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x57e206([73, 110, 118, 97, 108, 105, 100])) _0x29a1a8();
            else {
              if (_0x1aeecf == _0x4b430b[_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x57e206([84, 114, 105, 97, 108])) {
                const _0x110148 = _0x332079();
                _0x110148 && _0x2d2dd1(_0x110148, _0x4b430b[_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                const _0x1a5ba0 = _0x437f2a();
                window[_0x57e206([115, 101, 116, 84, 105, 109, 101, 111, 117, 116])](() => {
                  _0x2d2dd1(_0x57e206([116, 105, 109, 101]), _0x4b430b[_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                }, _0x1a5ba0);
                const _0x564f6e = _0x134c2b(_0x343e9a, _0x57e206([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x57e206([95, 114, 101, 118, 105, 115, 105, 111, 110, 115])];
                _0x564f6e[_0x57e206([108, 101, 110, 103, 116, 104])] >= _0x166ab0 ? _0x2d2dd1(_0x57e206([114, 101, 118, 105, 115, 105, 111, 110, 115]), _0x4b430b[_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]) : _0x564f6e["on"](_0x57e206([97, 100, 100]), () => {
                  _0x564f6e[_0x57e206([108, 101, 110, 103, 116, 104])] >= _0x166ab0 && _0x2d2dd1(_0x57e206([114, 101, 118, 105, 115, 105, 111, 110, 115]), _0x4b430b[_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                });
              }
            }
          }
          function _0x332079() {
            if (!_0x3a102c(_0x343e9a, _0x57e206([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) return false;
            for (const _0x2155b8 in window) if (Number["isNaN"](Number(_0x2155b8))) {
              if (window[_0x2155b8] === _0x5b405f) return _0x57e206([116, 105, 109, 101]);
              if (window[_0x2155b8] === _0x129a61) return _0x57e206([114, 101, 118, 105, 115, 105, 111, 110, 115]);
            }
            return false;
          }
          function _0x6b7c6d() {
            if (!_0x3a102c(_0x343e9a, _0x57e206([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) return false;
            for (const _0xf1b360 in window) if (Number["isNaN"](Number(_0xf1b360)) && window[_0xf1b360] === _0x1da8c1) return true;
            return false;
          }
          function _0x2d2dd1(_0x2c0627, _0xe73138) {
            _0x29a1a8(), _0x438a21(_0xe73138 + _0x57e206([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58]) + _0x2c0627), window[_0x5e2629()] = _0x2c0627 === _0x57e206([116, 105, 109, 101]) ? _0x5b405f : _0x129a61;
          }
          function _0x437f2a() {
            let _0x2026ca = _0x14c503[6] * _0x4f8497[8] * _0x4f8497[6];
            return _0x3a102c(_0x343e9a, _0x57e206([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114])) && (_0x2026ca /= 10), _0x2026ca;
          }
          function _0x29a1a8() {
            const _0x24e559 = _0x343e9a;
            function _0x281c01() {
              _0x3a102c(_0x24e559, _0x57e206([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114])) && (_0x134c2b(_0x24e559, _0x57e206([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x57e206([117, 110, 98, 105, 110, 100])](_0x57e206([105, 115, 69, 110, 97, 98, 108, 101, 100])), _0x134c2b(_0x24e559, _0x57e206([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x57e206([105, 115, 69, 110, 97, 98, 108, 101, 100])] = false, _0x134c2b(_0x24e559, _0x57e206([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x57e206([117, 112, 100, 97, 116, 101])] = _0x4b29f1, _0x134c2b(_0x24e559, _0x57e206([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x57e206([115, 97, 118, 101, 82, 101, 118, 105, 115, 105, 111, 110])] = _0x4b29f1, _0x24e559[_0x57e206([109, 111, 100, 101, 108])][_0x57e206([99, 104, 97, 110, 103, 101])] = _0x4b29f1, _0x24e559[_0x57e206([109, 111, 100, 101, 108])][_0x57e206([101, 110, 113, 117, 101, 117, 101, 67, 104, 97, 110, 103, 101])] = _0x4b29f1, _0x24e559[_0x57e206([101, 110, 97, 98, 108, 101, 82, 101, 97, 100, 79, 110, 108, 121, 77, 111, 100, 101])](_0x57e206([109, 111, 100, 101, 108]))), _0x3a102c(_0x24e559, _0x57e206([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114])) && (_0x134c2b(_0x24e559, _0x57e206([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x57e206([117, 110, 98, 105, 110, 100])](_0x57e206([105, 115, 69, 110, 97, 98, 108, 101, 100])), _0x134c2b(_0x24e559, _0x57e206([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x57e206([105, 115, 69, 110, 97, 98, 108, 101, 100])] = false, _0x134c2b(_0x24e559, _0x57e206([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x57e206([99, 111, 109, 112, 97, 114, 101])] = _0x4b29f1, _0x134c2b(_0x24e559, _0x57e206([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x57e206([95, 103, 101, 116, 68, 105, 102, 102])] = _0x4b29f1);
            }
            _0x24e559[_0x57e206([115, 116, 97, 116, 101])] == _0x57e206([114, 101, 97, 100, 121]) ? _0x281c01() : _0x24e559[_0x57e206([111, 110, 99, 101])](_0x57e206([114, 101, 97, 100, 121]), () => {
              if (_0x3a102c(_0x24e559, _0x57e206([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114])) && _0x281c01(), _0x3a102c(_0x24e559, _0x57e206([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) {
                const _0x1a0f28 = _0x134c2b(_0x24e559, _0x57e206([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121])), _0x10f2a7 = _0x1a0f28["getRevision"](0), _0x7ff1e = _0x1a0f28["getEarlierVisibleRevision"](_0x10f2a7[_0x57e206([105, 100])]);
                _0x134c2b(_0x24e559, _0x57e206([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x57e206([99, 111, 109, 112, 97, 114, 101])](_0x10f2a7[_0x57e206([105, 100])], _0x7ff1e ? _0x7ff1e[_0x57e206([105, 100])] : null, 1)["then"](() => _0x281c01());
              }
            });
          }
          _0xb4fe5c(_0x4a11e5(_0x1f71d6, _0x3cd67b), _0x3cd67b);
        }
        function _0x57afbc(_0x26d651, _0x2d1733) {
          try {
            return _0x4068c6(_0x2d1733) ? _0x438a21(_0x2d1733[_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x57e206([86, 97, 108, 105, 100])) : _0x26d651 && _0x8e5b83(_0x26d651[_0x57e206([97, 108, 108, 111, 119, 101, 100, 80, 108, 117, 103, 105, 110, 115])], _0x2d1733) ? _0x26d651[_0x57e206([105, 115, 73, 110, 116, 101, 114, 110, 97, 108])] && !window[_0x57e206([111, 112, 101, 110])][_0x57e206([99, 108, 111, 115, 101, 100])] || parseInt(_0x513258) / 2 > _0x26d651[_0x57e206([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])] ? _0x438a21(_0x2d1733[_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x57e206([73, 110, 118, 97, 108, 105, 100])) : _0x26d651[_0x57e206([105, 115, 84, 114, 105, 97, 108])] ? _0x438a21(_0x2d1733[_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x57e206([84, 114, 105, 97, 108])) : _0x438a21(_0x2d1733[_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x57e206([86, 97, 108, 105, 100])) : _0x438a21(_0x2d1733[_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x57e206([73, 110, 118, 97, 108, 105, 100]));
          } catch (_0x15def4) {
            return _0x438a21(_0x2d1733[_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x57e206([73, 110, 118, 97, 108, 105, 100]));
          }
        }
        function _0x5e185f(_0xe86d76, _0xb5db0d) {
          if (_0x343e9a instanceof Context) {
            const _0x528210 = _0x343e9a;
            _0xe86d76 == _0xb5db0d[_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x57e206([73, 110, 118, 97, 108, 105, 100]) ? _0x26555d(_0x528210) : _0xe86d76 == _0xb5db0d[_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x57e206([84, 114, 105, 97, 108]) && window[_0x57e206([115, 101, 116, 84, 105, 109, 101, 111, 117, 116])](() => {
              _0x26555d(_0x528210), _0x438a21(_0xb5db0d[_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x57e206([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 116, 105, 109, 101]));
            }, _0x14c503[6] * _0x4f8497[8] * _0x4f8497[6]), _0x528210[_0x57e206([101, 100, 105, 116, 111, 114, 115])][_0x57e206([111, 110])](_0x57e206([97, 100, 100]), (_0x1ac48e, _0x2eb333) => {
              _0xe86d76 != _0xb5db0d[_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x57e206([73, 110, 118, 97, 108, 105, 100]) && _0xe86d76 != _0xb5db0d[_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x57e206([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 116, 105, 109, 101]) && _0xe86d76 != _0xb5db0d[_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x57e206([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 111, 112, 101, 114, 97, 116, 105, 111, 110, 115]) || _0xf6071d(_0x2eb333);
            });
          } else {
            const _0x59b1be = _0x343e9a;
            _0xe86d76 == _0xb5db0d[_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x57e206([73, 110, 118, 97, 108, 105, 100]) ? _0xf6071d(_0x59b1be) : _0xe86d76 == _0xb5db0d[_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x57e206([84, 114, 105, 97, 108]) && _0x59b1be[_0x57e206([111, 110])](_0x57e206([114, 101, 97, 100, 121]), () => {
              let _0x357801 = 0;
              _0x59b1be[_0x57e206([109, 111, 100, 101, 108])][_0x57e206([111, 110])](_0x57e206([97, 112, 112, 108, 121, 79, 112, 101, 114, 97, 116, 105, 111, 110]), (_0x5ae9bd, _0x2b35ce) => {
                _0x2b35ce[0][_0x57e206([105, 115, 68, 111, 99, 117, 109, 101, 110, 116, 79, 112, 101, 114, 97, 116, 105, 111, 110])] && _0x357801++, 504 === _0x357801 && (_0xf6071d(_0x59b1be), _0x438a21(_0xb5db0d[_0x57e206([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x57e206([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 111, 112, 101, 114, 97, 116, 105, 111, 110, 115])), _0x5ae9bd[_0x57e206([111, 102, 102])]());
              }, { "priority": _0x57e206([104, 105, 103, 104, 101, 115, 116]) });
            });
          }
        }
        function _0x438a21(_0xbc32c4) {
          const _0x3c52cc = _0x5e2629();
          return _0x343e9a[_0x3c52cc] = _0xbc32c4, _0xbc32c4;
        }
        function _0x5e2629() {
          const _0x99aa42 = String(window[_0x57e206([112, 101, 114, 102, 111, 114, 109, 97, 110, 99, 101])][_0x57e206([110, 111, 119])]())[_0x57e206([114, 101, 112, 108, 97, 99, 101])](_0x57e206([46]), "");
          let _0x27a2ff = "";
          for (let _0x2cf894 = 0; _0x2cf894 < _0x99aa42[_0x57e206([108, 101, 110, 103, 116, 104])]; _0x2cf894 += 2) {
            let _0x2204c6 = parseInt(_0x99aa42[_0x57e206([115, 117, 98, 115, 116, 114, 105, 110, 103])](_0x2cf894, _0x2cf894 + 2));
            _0x2204c6 >= _0xf8a283[_0x57e206([108, 101, 110, 103, 116, 104])] && (_0x2204c6 -= _0xf8a283[_0x57e206([108, 101, 110, 103, 116, 104])]), _0x27a2ff += _0xf8a283[_0x2204c6];
          }
          return _0x27a2ff;
        }
        function _0x26555d(_0x1d67d3) {
          for (const _0x4f7df5 of _0x1d67d3[_0x57e206([101, 100, 105, 116, 111, 114, 115])]) _0xf6071d(_0x4f7df5);
          _0x134c2b(_0x1d67d3, _0x57e206([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x57e206([115, 119, 105, 116, 99, 104, 82, 101, 97, 100, 79, 110, 108, 121])](true), _0x134c2b(_0x1d67d3, _0x57e206([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x57e206([115, 119, 105, 116, 99, 104, 82, 101, 97, 100, 79, 110, 108, 121])] = _0x4b29f1;
        }
        function _0xf6071d(_0x7b70d3) {
          function _0x152ab2() {
            _0x7b70d3[_0x57e206([109, 111, 100, 101, 108])][_0x57e206([99, 104, 97, 110, 103, 101])] = _0x4b29f1, _0x7b70d3[_0x57e206([109, 111, 100, 101, 108])][_0x57e206([101, 110, 113, 117, 101, 117, 101, 67, 104, 97, 110, 103, 101])] = _0x4b29f1, _0x7b70d3[_0x57e206([101, 110, 97, 98, 108, 101, 82, 101, 97, 100, 79, 110, 108, 121, 77, 111, 100, 101])](_0x57e206([109, 111, 100, 101, 108]));
          }
          _0x7b70d3[_0x57e206([115, 116, 97, 116, 101])] == _0x57e206([114, 101, 97, 100, 121]) ? _0x152ab2() : _0x7b70d3[_0x57e206([111, 110, 99, 101])](_0x57e206([114, 101, 97, 100, 121]), () => _0x152ab2());
        }
        function _0x4b29f1() {
          return null;
        }
        function _0x8e5b83(_0x5838a6, _0x358561) {
          const _0x2601d2 = !!(_0x5838a6 & _0x358561[_0x57e206([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])]), _0x5895ae = _0x221589(_0x5838a6, _0x358561);
          return _0x2601d2 || _0x5895ae;
        }
        function _0x221589(_0x4ae90b, _0xb1034f) {
          const _0x2f9df2 = (_0xb1034f[_0x57e206([111, 112, 116, 105, 111, 110, 115])] || {})[_0x57e206([102, 103, 105])] || null;
          return !!_0x2f9df2 && _0x53bde3[_0x57e206([102, 105, 108, 116, 101, 114])]((_0x30da09) => _0x2f9df2[_0x57e206([105, 110, 99, 108, 117, 100, 101, 115])](_0x30da09[_0x57e206([105, 100])]))[_0x57e206([102, 105, 108, 116, 101, 114])]((_0x3fca49) => !_0x3ec812(_0x3fca49))[_0x57e206([115, 111, 109, 101])]((_0xb44e58) => !!(_0x4ae90b & _0xb44e58[_0x57e206([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])]));
        }
        function _0x3ec812(_0xe1bbf2) {
          const _0x3874d9 = { [_0x57e206([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114, 70, 111, 114, 68, 114, 117, 112, 97, 108])]: _0x5bc7bf };
          return !!_0xe1bbf2["forbiddenHandler"] && _0x3874d9[_0xe1bbf2["forbiddenHandler"]]();
        }
        function _0x5bc7bf() {
          return !window[_0x57e206([68, 114, 117, 112, 97, 108])] || !_0x3a102c(_0x343e9a, _0x57e206([100, 114, 117, 112, 97, 108, 80, 111, 119, 101, 114, 101, 100, 66, 121]));
        }
        function _0x4068c6(_0xdda9d7) {
          if (!_0x3a102c(_0x343e9a, _0xdda9d7[_0x57e206([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])])) return true;
          const _0xda2ad9 = _0xdda9d7[_0x57e206([111, 112, 116, 105, 111, 110, 115])] || {}, _0x27bbe7 = _0xda2ad9[_0x57e206([97, 105, 119, 115, 103, 105, 99])] || false, _0x5797dc = _0xda2ad9[_0x57e206([97, 105, 116, 99, 100, 103, 105, 108])] || false, _0x7b0e83 = _0xda2ad9[_0x57e206([97, 105, 114, 118, 105, 105, 108])] || false;
          if (_0x3a102c(_0x343e9a, _0x57e206([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121])) && _0x134c2b(_0x343e9a, _0x57e206([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121]))[_0x57e206([115, 116, 97, 116, 101])] == _0x57e206([99, 111, 110, 110, 101, 99, 116, 101, 100]) && _0x27bbe7) return true;
          if (_0x3a102c(_0x343e9a, _0x57e206([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 68, 97, 116, 97, 71, 101, 116, 116, 101, 114])) && _0x134c2b(_0x343e9a, _0x57e206([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 68, 97, 116, 97, 71, 101, 116, 116, 101, 114]))[_0x57e206([114, 101, 115, 117, 108, 116])] == _0x57e206([101, 110, 100]) && _0x5797dc) return true;
          return !(!_0x3a102c(_0x343e9a, _0x57e206([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114, 73, 110, 116, 101, 103, 114, 97, 116, 105, 111, 110])) || _0x134c2b(_0x343e9a, _0x57e206([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114, 73, 110, 116, 101, 103, 114, 97, 116, 105, 111, 110]))[_0x57e206([114, 101, 115, 117, 108, 116])] != _0x57e206([101, 110, 100]) || !_0x7b0e83);
        }
        function _0x3a102c(_0x2252d1, _0x34ff76) {
          return _0x2252d1[_0x57e206([112, 108, 117, 103, 105, 110, 115])][_0x57e206([104, 97, 115])](_0x34ff76);
        }
        function _0x134c2b(_0x22ded7, _0x222a0a) {
          return _0x22ded7[_0x57e206([112, 108, 117, 103, 105, 110, 115])][_0x57e206([103, 101, 116])](_0x222a0a);
        }
        function _0x59f55c(_0x32019f) {
          let _0x244918 = "";
          for (const _0x16aaff of _0x32019f) _0x244918 += String[_0x57e206([102, 114, 111, 109, 67, 104, 97, 114, 67, 111, 100, 101])](_0x16aaff);
          return _0x244918;
        }
        function _0x3e30ab(_0x3527e7) {
          const _0x2560e8 = new Uint8Array(_0x3527e7[_0x57e206([108, 101, 110, 103, 116, 104])]);
          for (let _0x5402ec = 0; _0x5402ec < _0x3527e7[_0x57e206([108, 101, 110, 103, 116, 104])]; _0x5402ec++) _0x2560e8[_0x5402ec] = _0x3527e7[_0x57e206([99, 104, 97, 114, 67, 111, 100, 101, 65, 116])](_0x5402ec);
          return _0x2560e8;
        }
        _0x374c62 && _0x489545(_0x5816c4(_0x412881), _0x374c62);
      })(_0x4adac7);
    }(this);
  }
  ["_removeMenuBarButtonIfUnnecessary"]() {
    const _0x5ac02c = this["editor"]["config"];
    if (_0x5ac02c["get"]("mergeFields.previewModes")) {
      const _0x90787c = _0x5ac02c["get"]("mergeFields.previewModes");
      if (1 === _0x90787c["length"]) {
        if (_0x90787c["includes"]("$dataSets")) 1 === _0x5ac02c["get"]("mergeFields.dataSets")["length"] && _0x4f2e2b();
        else _0x4f2e2b();
      }
    }
    function _0x4f2e2b() {
      const _0x18bb02 = _0x5ac02c["get"]("menuBar.removeItems");
      _0x18bb02 ? (_0x18bb02["push"]("menuBar:previewMergeFields"), _0x5ac02c["set"]("menuBar.removeItems", _0x18bb02)) : _0x5ac02c["set"]("menuBar.removeItems", ["menuBar:previewMergeFields"]);
    }
  }
  ["_setupMentionConfiguration"]() {
    const _0x33f8fd = this["editor"], _0x1a0edd = _0x33f8fd["config"]["get"]("mention.feeds"), _0x333176 = _0x33f8fd["config"]["get"]("mergeFields.prefix");
    _0x1a0edd["push"]({ "marker": _0x333176["charAt"](0), "dropdownLimit": 10, "feed": (_0x4fa72f) => {
      if (_0x4fa72f["slice"](0, _0x333176["length"] - 1) !== _0x333176["slice"](1)) return [];
      const _0x202d40 = _0x4fa72f && _0x4fa72f["toLowerCase"]()["slice"](_0x333176["length"] - 1);
      return _0x33f8fd["plugins"]["get"]("MergeFieldsEditing")["flattenedMergeFieldDefinitions"]["filter"]((_0x5c7cc8) => {
        const _0x4226ea = _0x33f8fd["commands"]["get"]("insertMergeField")["isEnabled"], _0x36b7da = _0x33f8fd["commands"]["get"]("insertMergeFieldBlock")["isEnabled"], _0xf337da = _0x33f8fd["plugins"]["get"]("MergeFieldsEditing")["getMergeFieldType"](_0x5c7cc8["id"]);
        if ("text" === _0xf337da && !_0x4226ea) return false;
        if ("block" === _0xf337da && !_0x36b7da) return false;
        return _0x33f8fd["plugins"]["get"]("MergeFieldsEditing")["getLabel"](_0x5c7cc8["id"])["toLowerCase"]()["includes"](_0x202d40);
      });
    }, "itemRenderer": (_0x1b4dfd) => {
      const _0x49ebad = document["createElement"]("button");
      return _0x49ebad["innerHTML"] = "" + (_0x1b4dfd["label"] || _0x1b4dfd["id"]), _0x49ebad;
    } }), _0x33f8fd["config"]["set"]("mention.feeds", _0x1a0edd);
  }
  ["_overrideMentionExecuteListener"]() {
    const _0x4e7893 = this["editor"];
    _0x4e7893["commands"]["get"]("mention")["on"]("execute", (_0x4f3714, _0x1c4f22) => {
      const _0x4ebc54 = _0x1c4f22[0];
      _0x4ebc54["marker"] === _0x4e7893["config"]["get"]("mergeFields.prefix")["charAt"](0) && _0x4e7893["model"]["change"]((_0x39efca) => {
        _0x39efca["remove"](_0x4ebc54["range"]), "text" === _0x4e7893["plugins"]["get"]("MergeFieldsEditing")["getMergeFieldType"](_0x4ebc54["mention"]["id"]) ? _0x4e7893["execute"]("insertMergeField", _0x4ebc54["mention"]["id"]) : _0x4e7893["execute"]("insertMergeFieldBlock", _0x4ebc54["mention"]["id"], false), _0x4f3714["stop"]();
      });
    }, { "priority": "high" });
  }
};
function D3(_0x7899, _0x37f155, _0x10c58f, _0xba8b79) {
  const _0x5ac2a7 = new ListItemGroupView(_0x7899, new LabelWithHighlightView());
  _0x5ac2a7["label"] = _0x37f155;
  for (const _0x50bbd3 of _0x10c58f) {
    const _0x3bcbca = C4(_0x7899, _0x50bbd3, "block" === _0x50bbd3["type"] ? _0xba8b79["insertBlock"] : _0xba8b79["insertInline"]);
    _0x3bcbca["delegate"]("execute")["to"](_0x5ac2a7), _0x5ac2a7["items"]["add"](_0x3bcbca);
  }
  return _0x5ac2a7;
}
function C4(_0x59c2f8, _0x57f28a, _0x37ab11) {
  const _0x4093bf = new ListItemView(_0x59c2f8), _0x234e99 = new ButtonLabelWithHighlightView(), _0x493811 = new ButtonView(_0x59c2f8, _0x234e99);
  return _0x4093bf["children"]["add"](_0x493811), _0x493811["set"]({ "label": _0x57f28a["label"] || _0x57f28a["id"], "withText": true }), _0x493811["bind"]("isEnabled")["to"](_0x37ab11), _0x493811["on"]("execute", () => {
    _0x4093bf["fire"]("execute", _0x57f28a["id"]);
  }), _0x4093bf;
}
function J3(_0xd145e2, _0x39907d, _0x1506e7) {
  const _0x2c7413 = new MenuBarMenuView(_0xd145e2), _0x22f0d = new MenuBarMenuListView(_0xd145e2);
  for (const _0x5a42f3 of _0x39907d["definitions"]) {
    const _0x14aa57 = R4(_0xd145e2, _0x5a42f3, _0x2c7413, "block" === _0x5a42f3["type"] ? _0x1506e7["insertBlock"] : _0x1506e7["insertInline"]);
    _0x22f0d["items"]["add"](_0x14aa57);
  }
  return _0x2c7413["set"]({ "class": "ck-menu-bar__merge-fields-submenu" }), _0x2c7413["buttonView"]["set"]({ "label": _0x39907d["groupLabel"] || _0x39907d["groupId"] }), _0x2c7413["panelView"]["children"]["add"](_0x22f0d), _0x2c7413;
}
function R4(_0x1c450f, _0x518085, _0x5cc703, _0x4fc2a5) {
  const _0x5f452d = new MenuBarMenuListItemView(_0x1c450f, _0x5cc703), _0x3badd4 = new MenuBarMenuListItemButtonView(_0x1c450f);
  return _0x3badd4["set"]({ "label": _0x518085["label"] || _0x518085["id"] }), _0x5f452d["delegate"]("execute")["to"](_0x5cc703), _0x5f452d["children"]["add"](_0x3badd4), _0x3badd4["bind"]("isEnabled")["to"](_0x4fc2a5), _0x3badd4["on"]("execute", () => {
    _0x5f452d["fire"]("execute", _0x518085["id"]);
  }), _0x5f452d;
}
var u3 = class extends Plugin {
  static get ["requires"]() {
    return [g5, m6];
  }
  static get ["pluginName"]() {
    return "MergeFields";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
};

// node_modules/@ckeditor/ckeditor5-pagination/dist/index.js
var n7 = class extends Plugin {
  constructor() {
    super(...arguments);
    __publicField(this, "_recalculatePageBreaksDebounced");
    __publicField(this, "_pagesContainer", null);
  }
  static get ["pluginName"]() {
    return "PaginationLookup";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    if (this["set"]({ "pageBreaks": [] }), !this["editor"]["config"]["get"]("pagination")) return void logWarning("pagination-config-not-found", this["editor"]["config"]);
    this["_recalculatePageBreaksDebounced"] = debounce_default(() => this["_recalculatePageBreaks"](), 200), this["_pagesContainer"] = null;
    const _0x53d45c = this["editor"]["plugins"]["get"]("PaginationEditing");
    this["bind"]("isEnabled")["to"](_0x53d45c), this["editor"]["ui"]["once"]("ready", () => this["_onUiReady"]()), this["on"]("change:isEnabled", (_0x412bef, _0x348668, _0x26e9db) => {
      _0x26e9db && this["_recalculatePageBreaksDebounced"]();
    });
  }
  ["afterInit"]() {
    !function(_0x2c90b9) {
      function _0x4794e7(_0x3f6321, _0x35304f, _0xb74168) {
        const _0x188983 = {};
        _0x188983[_0x5e50d6([110, 117, 109, 98, 101, 114, 79, 102, 82, 111, 117, 110, 100, 115])] = { 16: 10, 24: 12, 32: 14 }, _0x188983[_0x5e50d6([114, 99, 111, 110])] = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145], _0x188983[_0x5e50d6([83])] = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], _0x188983[_0x5e50d6([84, 49])] = [3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474, 1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738, 597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420, 3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577, 605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627, 2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520, 3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205, 2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474, 1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309, 3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720, 2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771, 1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243, 3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470, 1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977, 2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737, 1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754, 361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755, 697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986], _0x188983[_0x5e50d6([84, 50])] = [2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899, 2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108, 4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129, 2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848, 1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043, 1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914, 1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139, 2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658, 3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324, 3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385, 3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499, 1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572, 2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810, 3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411, 3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753, 2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487, 550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313, 2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766], _0x188983[_0x5e50d6([84, 51])] = [1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099, 1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188, 2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329, 1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768, 3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283, 3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114, 3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739, 2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538, 2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324, 1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865, 1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296, 844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713, 3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050, 2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131, 3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513, 2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927, 3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905, 2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126], _0x188983[_0x5e50d6([84, 52])] = [1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549, 1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243, 2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529, 1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963, 3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198, 3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564, 3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214, 2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143, 2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699, 1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945, 1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771, 842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818, 3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340, 2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126, 3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473, 2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917, 3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930, 2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436], _0x188983[_0x5e50d6([85, 49])] = [0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795], _0x188983[_0x5e50d6([85, 50])] = [0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459, 2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537, 3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535, 77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884, 3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824, 3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622, 507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216, 3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879, 129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469, 3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175, 1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921, 2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127, 3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560, 1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387, 2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037, 4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148, 692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663, 2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855], _0x188983[_0x5e50d6([85, 51])] = [0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639, 3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557, 2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032, 3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201, 344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239, 532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878, 3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771, 4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744, 671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199, 4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366, 492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798, 2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695, 3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569, 4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702, 3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217, 1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635, 1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009, 3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150], _0x188983[_0x5e50d6([85, 52])] = [0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874, 2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222, 4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595, 1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591, 4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837, 923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127, 2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424, 2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110, 4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469, 4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481, 1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243, 3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604, 2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802, 585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166, 4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912, 1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703, 3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213, 2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925];
        const _0x500945 = new Uint8Array(16);
        for (let _0x4f603f = 15; _0x4f603f >= 0; --_0x4f603f) _0x500945[_0x4f603f] = _0xb74168 % 256, _0xb74168 = parseInt(_0xb74168 / 256);
        let _0x2cd55e = null, _0x5bd80a = 16;
        const _0x366bb8 = new Uint8Array(_0x35304f), _0x15978e = [], _0x175676 = [];
        _0x2554fb();
        for (let _0x24ab31 = 0; _0x24ab31 < _0x3f6321[_0x5e50d6([108, 101, 110, 103, 116, 104])]; _0x24ab31++) 16 === _0x5bd80a && (_0x2cd55e = _0x36a8f2(_0x500945), _0x5bd80a = 0, _0x491d9d(_0x500945)), _0x3f6321[_0x24ab31] ^= _0x2cd55e[_0x5bd80a++];
        return _0x3f6321;
        function _0x304fa5(_0x481c4d) {
          const _0x415f29 = [];
          for (let _0x4e1ab4 = 0; _0x4e1ab4 < _0x481c4d[_0x5e50d6([108, 101, 110, 103, 116, 104])]; _0x4e1ab4 += 4) _0x415f29[_0x5e50d6([112, 117, 115, 104])](_0x481c4d[_0x4e1ab4] << 24 | _0x481c4d[_0x4e1ab4 + 1] << 16 | _0x481c4d[_0x4e1ab4 + 2] << 8 | _0x481c4d[_0x4e1ab4 + 3]);
          return _0x415f29;
        }
        function _0x491d9d(_0x24d110) {
          for (let _0x221b8c = 15; _0x221b8c >= 0; _0x221b8c--) {
            if (255 !== _0x24d110[_0x221b8c]) {
              _0x24d110[_0x221b8c]++;
              break;
            }
            _0x24d110[_0x221b8c] = 0;
          }
        }
        function _0x36a8f2(_0x556444) {
          const _0x3596ab = _0x15978e[_0x5e50d6([108, 101, 110, 103, 116, 104])] - 1, _0x1cc77f = [0, 0, 0, 0];
          let t2 = _0x304fa5(_0x556444);
          for (let _0x854b0b = 0; _0x854b0b < 4; _0x854b0b++) t2[_0x854b0b] ^= _0x15978e[0][_0x854b0b];
          for (let _0x18ae0b = 1; _0x18ae0b < _0x3596ab; _0x18ae0b++) {
            for (let _0x348445 = 0; _0x348445 < 4; _0x348445++) _0x1cc77f[_0x348445] = _0x188983[_0x5e50d6([84, 49])][t2[_0x348445] >> 24 & 255] ^ _0x188983[_0x5e50d6([84, 50])][t2[(_0x348445 + 1) % 4] >> 16 & 255] ^ _0x188983[_0x5e50d6([84, 51])][t2[(_0x348445 + 2) % 4] >> 8 & 255] ^ _0x188983[_0x5e50d6([84, 52])][255 & t2[(_0x348445 + 3) % 4]] ^ _0x15978e[_0x18ae0b][_0x348445];
            t2 = _0x1cc77f[_0x5e50d6([115, 108, 105, 99, 101])]();
          }
          const _0x526c98 = new Uint8Array(16);
          let _0x122d7d;
          for (let _0x48baa8 = 0; _0x48baa8 < 4; _0x48baa8++) _0x122d7d = _0x15978e[_0x3596ab][_0x48baa8], _0x526c98[4 * _0x48baa8] = 255 & (_0x188983[_0x5e50d6([83])][t2[_0x48baa8] >> 24 & 255] ^ _0x122d7d >> 24), _0x526c98[4 * _0x48baa8 + 1] = 255 & (_0x188983[_0x5e50d6([83])][t2[(_0x48baa8 + 1) % 4] >> 16 & 255] ^ _0x122d7d >> 16), _0x526c98[4 * _0x48baa8 + 2] = 255 & (_0x188983[_0x5e50d6([83])][t2[(_0x48baa8 + 2) % 4] >> 8 & 255] ^ _0x122d7d >> 8), _0x526c98[4 * _0x48baa8 + 3] = 255 & (_0x188983[_0x5e50d6([83])][255 & t2[(_0x48baa8 + 3) % 4]] ^ _0x122d7d);
          return _0x526c98;
        }
        function _0x2554fb() {
          const _0x13cf23 = _0x188983[_0x5e50d6([110, 117, 109, 98, 101, 114, 79, 102, 82, 111, 117, 110, 100, 115])][_0x366bb8[_0x5e50d6([108, 101, 110, 103, 116, 104])]];
          for (let _0x3ca350 = 0; _0x3ca350 <= _0x13cf23; _0x3ca350++) _0x15978e[_0x5e50d6([112, 117, 115, 104])]([0, 0, 0, 0]), _0x175676[_0x5e50d6([112, 117, 115, 104])]([0, 0, 0, 0]);
          const _0x31a008 = 4 * (_0x13cf23 + 1), _0x256dd9 = _0x366bb8[_0x5e50d6([108, 101, 110, 103, 116, 104])] / 4, _0xe71ff9 = _0x304fa5(_0x366bb8);
          let _0x33f811;
          for (let _0x58f638 = 0; _0x58f638 < _0x256dd9; _0x58f638++) _0x33f811 = _0x58f638 >> 2, _0x15978e[_0x33f811][_0x58f638 % 4] = _0xe71ff9[_0x58f638], _0x175676[_0x13cf23 - _0x33f811][_0x58f638 % 4] = _0xe71ff9[_0x58f638];
          let _0x283517, _0x46d380 = 0, t2 = _0x256dd9;
          for (; t2 < _0x31a008; ) {
            _0x283517 = _0xe71ff9[_0x256dd9 - 1], _0xe71ff9[0] ^= _0x188983[_0x5e50d6([83])][_0x283517 >> 16 & 255] << 24 ^ _0x188983[_0x5e50d6([83])][_0x283517 >> 8 & 255] << 16 ^ _0x188983[_0x5e50d6([83])][255 & _0x283517] << 8 ^ _0x188983[_0x5e50d6([83])][_0x283517 >> 24 & 255] ^ _0x188983[_0x5e50d6([114, 99, 111, 110])][_0x46d380] << 24, _0x46d380 += 1;
            for (let _0x5d0b60 = 1; _0x5d0b60 < _0x256dd9 / 2; _0x5d0b60++) _0xe71ff9[_0x5d0b60] ^= _0xe71ff9[_0x5d0b60 - 1];
            _0x283517 = _0xe71ff9[_0x256dd9 / 2 - 1], _0xe71ff9[_0x256dd9 / 2] ^= _0x188983[_0x5e50d6([83])][255 & _0x283517] ^ _0x188983[_0x5e50d6([83])][_0x283517 >> 8 & 255] << 8 ^ _0x188983[_0x5e50d6([83])][_0x283517 >> 16 & 255] << 16 ^ _0x188983[_0x5e50d6([83])][_0x283517 >> 24 & 255] << 24;
            for (let _0xd29132 = _0x256dd9 / 2 + 1; _0xd29132 < _0x256dd9; _0xd29132++) _0xe71ff9[_0xd29132] ^= _0xe71ff9[_0xd29132 - 1];
            let _0x8dee21, _0x45c501, _0x22e93d = 0;
            for (; _0x22e93d < _0x256dd9 && t2 < _0x31a008; ) _0x8dee21 = t2 >> 2, _0x45c501 = t2 % 4, _0x15978e[_0x8dee21][_0x45c501] = _0xe71ff9[_0x22e93d], _0x175676[_0x13cf23 - _0x8dee21][_0x45c501] = _0xe71ff9[_0x22e93d++], t2++;
          }
          for (let _0x41eb1f = 1; _0x41eb1f < _0x13cf23; _0x41eb1f++) for (let _0x370f63 = 0; _0x370f63 < 4; _0x370f63++) _0x283517 = _0x175676[_0x41eb1f][_0x370f63], _0x175676[_0x41eb1f][_0x370f63] = _0x188983[_0x5e50d6([85, 49])][_0x283517 >> 24 & 255] ^ _0x188983[_0x5e50d6([85, 50])][_0x283517 >> 16 & 255] ^ _0x188983[_0x5e50d6([85, 51])][_0x283517 >> 8 & 255] ^ _0x188983[_0x5e50d6([85, 52])][255 & _0x283517];
        }
      }
      function _0x5e50d6(_0x5469c9) {
        return _0x5469c9["map"]((_0x510b5c) => String["fromCharCode"](_0x510b5c))["join"]("");
      }
      ((_0x264896) => {
        function _0x1510c6() {
          const _0x2eeb0d = [{ [_0x5e50d6([105, 100])]: 1, [_0x5e50d6([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5e50d6([67, 111, 109, 109, 101, 110, 116, 115]), [_0x5e50d6([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x5e50d6([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]), [_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x5e50d6([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x5e50d6([104, 97, 110, 100, 108, 101, 114])]: _0x5e50d6([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x5e50d6([99, 104, 101, 99, 107, 65, 108, 115, 111])]: [{ [_0x5e50d6([105, 100])]: 2, [_0x5e50d6([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5e50d6([84, 114, 97, 99, 107, 32, 67, 104, 97, 110, 103, 101, 115]), [_0x5e50d6([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x5e50d6([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103]), [_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x5e50d6([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x5e50d6([104, 97, 110, 100, 108, 101, 114])]: _0x5e50d6([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115]), [_0x5e50d6([111, 112, 116, 105, 111, 110, 115])]: { [_0x5e50d6([97, 105, 119, 115, 103, 105, 99])]: true, [_0x5e50d6([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x5e50d6([97, 105, 114, 118, 105, 105, 108])]: true } }], [_0x5e50d6([111, 112, 116, 105, 111, 110, 115])]: { [_0x5e50d6([97, 105, 119, 115, 103, 105, 99])]: true, [_0x5e50d6([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x5e50d6([97, 105, 114, 118, 105, 105, 108])]: true } }, { [_0x5e50d6([105, 100])]: 3, [_0x5e50d6([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5e50d6([80, 97, 103, 105, 110, 97, 116, 105, 111, 110]), [_0x5e50d6([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x5e50d6([80, 97, 103, 105, 110, 97, 116, 105, 111, 110, 76, 111, 111, 107, 117, 112]), [_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x5e50d6([112, 97, 103, 105, 110, 97, 116, 105, 111, 110, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x5e50d6([104, 97, 110, 100, 108, 101, 114])]: _0x5e50d6([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x5e50d6([105, 100])]: 4, [_0x5e50d6([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5e50d6([82, 101, 118, 105, 115, 105, 111, 110, 32, 72, 105, 115, 116, 111, 114, 121]), [_0x5e50d6([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x5e50d6([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]), [_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x5e50d6([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x5e50d6([104, 97, 110, 100, 108, 101, 114])]: _0x5e50d6([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 82, 101, 118, 105, 115, 105, 111, 110, 72, 105, 115, 116, 111, 114, 121]), [_0x5e50d6([111, 112, 116, 105, 111, 110, 115])]: { [_0x5e50d6([97, 105, 119, 115, 103, 105, 99])]: true, [_0x5e50d6([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x5e50d6([97, 105, 114, 118, 105, 105, 108])]: true } }, { [_0x5e50d6([105, 100])]: 5, [_0x5e50d6([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5e50d6([68, 111, 99, 117, 109, 101, 110, 116, 32, 79, 117, 116, 108, 105, 110, 101]), [_0x5e50d6([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x5e50d6([68, 111, 99, 117, 109, 101, 110, 116, 79, 117, 116, 108, 105, 110, 101, 85, 73]), [_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x5e50d6([100, 111, 99, 117, 109, 101, 110, 116, 79, 117, 116, 108, 105, 110, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x5e50d6([104, 97, 110, 100, 108, 101, 114])]: _0x5e50d6([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x5e50d6([111, 112, 116, 105, 111, 110, 115])]: { [_0x5e50d6([102, 103, 105])]: [12] } }, { [_0x5e50d6([105, 100])]: 6, [_0x5e50d6([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5e50d6([70, 111, 114, 109, 97, 116, 32, 80, 97, 105, 110, 116, 101, 114]), [_0x5e50d6([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x5e50d6([70, 111, 114, 109, 97, 116, 80, 97, 105, 110, 116, 101, 114, 85, 73]), [_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x5e50d6([102, 111, 114, 109, 97, 116, 80, 97, 105, 110, 116, 101, 114, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x5e50d6([104, 97, 110, 100, 108, 101, 114])]: _0x5e50d6([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x5e50d6([111, 112, 116, 105, 111, 110, 115])]: { [_0x5e50d6([102, 103, 105])]: [12] } }, { [_0x5e50d6([105, 100])]: 7, [_0x5e50d6([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5e50d6([83, 108, 97, 115, 104, 32, 67, 111, 109, 109, 97, 110, 100]), [_0x5e50d6([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x5e50d6([83, 108, 97, 115, 104, 67, 111, 109, 109, 97, 110, 100, 85, 73]), [_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x5e50d6([115, 108, 97, 115, 104, 67, 111, 109, 109, 97, 110, 100, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x5e50d6([104, 97, 110, 100, 108, 101, 114])]: _0x5e50d6([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x5e50d6([111, 112, 116, 105, 111, 110, 115])]: { [_0x5e50d6([102, 103, 105])]: [12] } }, { [_0x5e50d6([105, 100])]: 8, [_0x5e50d6([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5e50d6([84, 97, 98, 108, 101, 32, 111, 102, 32, 67, 111, 110, 116, 101, 110, 116, 115]), [_0x5e50d6([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x5e50d6([84, 97, 98, 108, 101, 79, 102, 67, 111, 110, 116, 101, 110, 116, 115, 69, 100, 105, 116, 105, 110, 103]), [_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x5e50d6([116, 97, 98, 108, 101, 79, 102, 67, 111, 110, 116, 101, 110, 116, 115, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x5e50d6([104, 97, 110, 100, 108, 101, 114])]: _0x5e50d6([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x5e50d6([111, 112, 116, 105, 111, 110, 115])]: { [_0x5e50d6([102, 103, 105])]: [12] } }, { [_0x5e50d6([105, 100])]: 9, [_0x5e50d6([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5e50d6([84, 101, 109, 112, 108, 97, 116, 101]), [_0x5e50d6([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x5e50d6([84, 101, 109, 112, 108, 97, 116, 101, 85, 73]), [_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x5e50d6([116, 101, 109, 112, 108, 97, 116, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x5e50d6([104, 97, 110, 100, 108, 101, 114])]: _0x5e50d6([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x5e50d6([111, 112, 116, 105, 111, 110, 115])]: { [_0x5e50d6([102, 103, 105])]: [12, 14] } }, { [_0x5e50d6([105, 100])]: 10, [_0x5e50d6([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5e50d6([80, 97, 115, 116, 101, 32, 102, 114, 111, 109, 32, 79, 102, 102, 105, 99, 101, 32, 69, 110, 104, 97, 110, 99, 101, 100]), [_0x5e50d6([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x5e50d6([80, 97, 115, 116, 101, 70, 114, 111, 109, 79, 102, 102, 105, 99, 101, 69, 110, 104, 97, 110, 99, 101, 100, 73, 110, 108, 105, 110, 101, 114]), [_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x5e50d6([112, 97, 115, 116, 101, 70, 114, 111, 109, 79, 102, 102, 105, 99, 101, 69, 110, 104, 97, 110, 99, 101, 100, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x5e50d6([104, 97, 110, 100, 108, 101, 114])]: _0x5e50d6([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x5e50d6([111, 112, 116, 105, 111, 110, 115])]: { [_0x5e50d6([102, 103, 105])]: [12] } }, { [_0x5e50d6([105, 100])]: 11, [_0x5e50d6([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5e50d6([65, 73, 32, 65, 115, 115, 105, 115, 116, 97, 110, 116]), [_0x5e50d6([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x5e50d6([65, 73, 65, 115, 115, 105, 115, 116, 97, 110, 116, 85, 73]), [_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x5e50d6([97, 105, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x5e50d6([104, 97, 110, 100, 108, 101, 114])]: _0x5e50d6([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x5e50d6([105, 100])]: 12, [_0x5e50d6([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5e50d6([80, 114, 111, 100, 117, 99, 116, 105, 118, 105, 116, 121, 32, 112, 97, 99, 107]) }, { [_0x5e50d6([105, 100])]: 13, [_0x5e50d6([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5e50d6([67, 97, 115, 101, 32, 67, 104, 97, 110, 103, 101]), [_0x5e50d6([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x5e50d6([67, 97, 115, 101, 67, 104, 97, 110, 103, 101, 85, 73]), [_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x5e50d6([99, 97, 115, 101, 67, 104, 97, 110, 103, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x5e50d6([104, 97, 110, 100, 108, 101, 114])]: _0x5e50d6([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x5e50d6([111, 112, 116, 105, 111, 110, 115])]: { [_0x5e50d6([102, 103, 105])]: [12] } }, { [_0x5e50d6([105, 100])]: 14, [_0x5e50d6([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5e50d6([68, 114, 117, 112, 97, 108, 32, 112, 97, 99, 107]), [_0x5e50d6([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114])]: _0x5e50d6([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114, 70, 111, 114, 68, 114, 117, 112, 97, 108]) }, { [_0x5e50d6([105, 100])]: 15, [_0x5e50d6([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5e50d6([77, 117, 108, 116, 105, 32, 76, 101, 118, 101, 108, 32, 76, 105, 115, 116]), [_0x5e50d6([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x5e50d6([77, 117, 108, 116, 105, 76, 101, 118, 101, 108, 76, 105, 115, 116, 69, 100, 105, 116, 105, 110, 103]), [_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x5e50d6([109, 117, 108, 116, 105, 76, 101, 118, 101, 108, 76, 105, 115, 116, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x5e50d6([104, 97, 110, 100, 108, 101, 114])]: _0x5e50d6([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x5e50d6([105, 100])]: 16, [_0x5e50d6([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x5e50d6([77, 101, 114, 103, 101, 32, 70, 105, 101, 108, 100, 115]), [_0x5e50d6([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x5e50d6([77, 101, 114, 103, 101, 70, 105, 101, 108, 100, 115, 85, 73]), [_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x5e50d6([109, 101, 114, 103, 101, 70, 105, 101, 108, 100, 115, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x5e50d6([104, 97, 110, 100, 108, 101, 114])]: _0x5e50d6([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x5e50d6([111, 112, 116, 105, 111, 110, 115])]: { [_0x5e50d6([102, 103, 105])]: [12] } }];
          return _0x456933(_0x2eeb0d), _0x2eeb0d;
          function _0x354356(_0x2e4d67) {
            return 1 << _0x2e4d67 - 1;
          }
          function _0x456933(_0x271c59) {
            _0x271c59[_0x5e50d6([102, 111, 114, 69, 97, 99, 104])]((_0x3145d2) => {
              _0x3145d2[_0x5e50d6([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])] = _0x354356(_0x3145d2[_0x5e50d6([105, 100])]), _0x25c491(_0x3145d2) && _0x3145d2[_0x5e50d6([99, 104, 101, 99, 107, 65, 108, 115, 111])] && _0x456933(_0x3145d2[_0x5e50d6([99, 104, 101, 99, 107, 65, 108, 115, 111])]);
            });
          }
        }
        function _0x25c491(_0x36f2f3) {
          return _0x5e50d6([112, 108, 117, 103, 105, 110, 78, 97, 109, 101]) in _0x36f2f3;
        }
        const _0x38c047 = [1, 85, 78, 115, 198, 255, 50, 112, 83, 87, 161], _0x764469 = [127, 34, 6, 211, 167, 86, 146, 199, 132, 160, 18];
        function _0x2871e6(_0xb24c00) {
          const _0x2b9f5f = [29, 221, 175, 90, 231, 133, 239, 240, 75, 180];
          return _0x7322e0(_0xb24c00, new Uint8Array([..._0x38c047, ..._0x2b9f5f, ..._0x764469]));
        }
        function _0x7322e0(_0x2f5fa6, _0x4a15d) {
          const _0x583e05 = _0x29329e(_0x2f5fa6), _0x3d5d3c = Array[_0x5e50d6([102, 114, 111, 109])](_0x12a903(_0x583e05)), _0x2a07b5 = _0x3d5d3c[_0x5e50d6([112, 111, 112])](), _0x83bb7f = _0x3d5d3c[_0x5e50d6([112, 111, 112])]();
          return _0x623fe0(_0x4794e7(_0x3d5d3c, _0x4a15d, _0x83bb7f + 256 * _0x2a07b5));
        }
        function _0x29329e(_0x5c6e86) {
          const _0x307721 = atob(_0x5c6e86), [_0x5bbb30, _0x20a8b0] = _0x307721[_0x5e50d6([115, 112, 108, 105, 116])](_0x5e50d6([45]));
          try {
            if (atob(_0x20a8b0)) return atob(_0x5bbb30);
          } catch (_0xced0a2) {
          }
          return _0x307721;
        }
        function _0x4adb1a(_0xa971de) {
          try {
            const _0x112952 = _0x2871e6(_0xa971de), _0x31dddc = JSON[_0x5e50d6([112, 97, 114, 115, 101])](_0x112952), _0xc450a6 = parseInt(_0x31dddc[_0x5e50d6([49])]), _0x1c8705 = _0x31dddc[_0x5e50d6([50])] || "", _0x13d0ab = parseInt(_0x31dddc[_0x5e50d6([51])]), _0x402061 = parseInt(_0x31dddc[_0x5e50d6([52])]) || 0, _0x194cc5 = parseInt(_0x31dddc[_0x5e50d6([53])]) || 0;
            return { [_0x5e50d6([112, 114, 111, 100, 117, 99, 116, 78, 97, 109, 101])]: _0x1c8705, [_0x5e50d6([97, 108, 108, 111, 119, 101, 100, 80, 108, 117, 103, 105, 110, 115])]: _0x402061, [_0x5e50d6([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])]: _0xc450a6, [_0x5e50d6([105, 115, 84, 114, 105, 97, 108])]: _0x13d0ab, [_0x5e50d6([105, 115, 73, 110, 116, 101, 114, 110, 97, 108])]: _0x194cc5 };
          } catch (_0x4173b4) {
            return null;
          }
        }
        const _0x41b848 = _0x1510c6(), _0x524cb3 = { [_0x5e50d6([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101])]: _0x49b8b8, [_0x5e50d6([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115])]: _0x3c5f9a, [_0x5e50d6([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 82, 101, 118, 105, 115, 105, 111, 110, 72, 105, 115, 116, 111, 114, 121])]: _0x4afe1f }, _0x39a896 = _0x264896[_0x5e50d6([99, 111, 110, 115, 116, 114, 117, 99, 116, 111, 114])][_0x5e50d6([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])], _0x2cefba = _0x5e50d6([99, 111, 110, 116, 101, 120, 116]) in _0x264896 ? _0x264896["context"] : _0x264896["editor"], _0x17d0ab = _0x5e50d6([52, 48, 52, 56, 50, 50, 49, 50]), _0x29324f = _0x5e50d6([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]), _0x424a54 = _0x2cefba["config"]["get"](_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 75, 101, 121])), _0x208bc8 = _0x41b848[_0x5e50d6([102, 105, 108, 116, 101, 114])](_0x25c491)[_0x5e50d6([102, 105, 110, 100])]((_0x46771c) => _0x46771c[_0x5e50d6([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])] === _0x39a896);
        function _0x4d5f84(_0xd0ebd9, _0x5df980) {
          _0x524cb3[_0x5df980[_0x5e50d6([104, 97, 110, 100, 108, 101, 114])]](_0xd0ebd9, _0x5df980), _0x5df980[_0x5e50d6([99, 104, 101, 99, 107, 65, 108, 115, 111])] && _0x5df980[_0x5e50d6([99, 104, 101, 99, 107, 65, 108, 115, 111])][_0x5e50d6([102, 105, 108, 116, 101, 114])]((_0x26910e) => _0x1d4cde(_0x2cefba, _0x26910e[_0x5e50d6([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]))[_0x5e50d6([102, 111, 114, 69, 97, 99, 104])]((_0x3e5d0b) => _0x4d5f84(_0xd0ebd9, _0x3e5d0b));
        }
        function _0x49b8b8(_0x4bbb83, _0x40abab) {
          _0x4279ae(_0x5609e0(_0x4bbb83, _0x40abab), _0x40abab);
        }
        function _0x3c5f9a(_0xb70113, _0x3dbaa9) {
          function _0x3b74cf(_0x68944a, _0xe6d60) {
            try {
              if (_0x1d4cde(_0x2cefba, _0x5e50d6([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103])) && _0x68944a) {
                const _0x51f915 = _0x7a91b1(_0x2cefba, _0x5e50d6([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103]))[_0x5e50d6([95, 101, 120, 101, 99, 117, 116, 101, 83, 117, 103, 103, 101, 115, 116, 105, 111, 110])];
                if (parseInt(_0x51f915) / 2 > _0x68944a[_0x5e50d6([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])]) return _0x7def16(_0xe6d60[_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5e50d6([73, 110, 118, 97, 108, 105, 100]));
              }
              return _0x5609e0(_0x68944a, _0xe6d60);
            } catch (_0x2d2aec) {
              return _0x7def16(_0xe6d60[_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5e50d6([73, 110, 118, 97, 108, 105, 100]));
            }
          }
          _0x4279ae(_0x3b74cf(_0xb70113, _0x3dbaa9), _0x3dbaa9);
        }
        function _0x4afe1f(_0x5c2156, _0x374f2c) {
          const _0x58f522 = _0x764469[0] * _0x38c047[1], _0x343a82 = _0x764469[0] * _0x38c047[2], _0x2959a6 = _0x764469[2] * _0x38c047[2];
          _0x1d4cde(_0x2cefba, _0x5e50d6([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121])) && _0x7a91b1(_0x2cefba, _0x5e50d6([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121]))[_0x5e50d6([115, 116, 97, 116, 101])] == _0x5e50d6([99, 111, 110, 110, 101, 99, 116, 101, 100]) && (window[_0x142707()] = _0x2959a6);
          function _0x1ba924(_0x4a0550, _0x2cbb72) {
            try {
              return _0x222b3b() ? _0x7def16(_0x2cbb72[_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5e50d6([86, 97, 108, 105, 100])) : _0x5609e0(_0x4a0550, _0x2cbb72);
            } catch (_0x3764cb) {
              return _0x7def16(_0x2cbb72[_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5e50d6([73, 110, 118, 97, 108, 105, 100]));
            }
          }
          function _0x539efe(_0x2c40d6, _0x48c1e4) {
            const _0x3e6052 = 7;
            if (_0x2c40d6 == _0x48c1e4[_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5e50d6([73, 110, 118, 97, 108, 105, 100])) _0x40376d();
            else {
              if (_0x2c40d6 == _0x48c1e4[_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5e50d6([84, 114, 105, 97, 108])) {
                const _0x1240af = _0x55ef77();
                _0x1240af && _0x140013(_0x1240af, _0x48c1e4[_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                const _0x1ce597 = _0x4cbbd3();
                window[_0x5e50d6([115, 101, 116, 84, 105, 109, 101, 111, 117, 116])](() => {
                  _0x140013(_0x5e50d6([116, 105, 109, 101]), _0x48c1e4[_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                }, _0x1ce597);
                const _0x578dbd = _0x7a91b1(_0x2cefba, _0x5e50d6([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x5e50d6([95, 114, 101, 118, 105, 115, 105, 111, 110, 115])];
                _0x578dbd[_0x5e50d6([108, 101, 110, 103, 116, 104])] >= _0x3e6052 ? _0x140013(_0x5e50d6([114, 101, 118, 105, 115, 105, 111, 110, 115]), _0x48c1e4[_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]) : _0x578dbd["on"](_0x5e50d6([97, 100, 100]), () => {
                  _0x578dbd[_0x5e50d6([108, 101, 110, 103, 116, 104])] >= _0x3e6052 && _0x140013(_0x5e50d6([114, 101, 118, 105, 115, 105, 111, 110, 115]), _0x48c1e4[_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                });
              }
            }
          }
          function _0x55ef77() {
            if (!_0x1d4cde(_0x2cefba, _0x5e50d6([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) return false;
            for (const _0x49dd12 in window) if (Number["isNaN"](Number(_0x49dd12))) {
              if (window[_0x49dd12] === _0x58f522) return _0x5e50d6([116, 105, 109, 101]);
              if (window[_0x49dd12] === _0x343a82) return _0x5e50d6([114, 101, 118, 105, 115, 105, 111, 110, 115]);
            }
            return false;
          }
          function _0x222b3b() {
            if (!_0x1d4cde(_0x2cefba, _0x5e50d6([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) return false;
            for (const _0x37fc3f in window) if (Number["isNaN"](Number(_0x37fc3f)) && window[_0x37fc3f] === _0x2959a6) return true;
            return false;
          }
          function _0x140013(_0x55d010, _0x3bb479) {
            _0x40376d(), _0x7def16(_0x3bb479 + _0x5e50d6([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58]) + _0x55d010), window[_0x142707()] = _0x55d010 === _0x5e50d6([116, 105, 109, 101]) ? _0x58f522 : _0x343a82;
          }
          function _0x4cbbd3() {
            let _0x1aca4a = _0x764469[6] * _0x38c047[8] * _0x38c047[6];
            return _0x1d4cde(_0x2cefba, _0x5e50d6([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114])) && (_0x1aca4a /= 10), _0x1aca4a;
          }
          function _0x40376d() {
            const _0x593d07 = _0x2cefba;
            function _0x5ec86d() {
              _0x1d4cde(_0x593d07, _0x5e50d6([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114])) && (_0x7a91b1(_0x593d07, _0x5e50d6([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x5e50d6([117, 110, 98, 105, 110, 100])](_0x5e50d6([105, 115, 69, 110, 97, 98, 108, 101, 100])), _0x7a91b1(_0x593d07, _0x5e50d6([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x5e50d6([105, 115, 69, 110, 97, 98, 108, 101, 100])] = false, _0x7a91b1(_0x593d07, _0x5e50d6([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x5e50d6([117, 112, 100, 97, 116, 101])] = _0x497827, _0x7a91b1(_0x593d07, _0x5e50d6([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x5e50d6([115, 97, 118, 101, 82, 101, 118, 105, 115, 105, 111, 110])] = _0x497827, _0x593d07[_0x5e50d6([109, 111, 100, 101, 108])][_0x5e50d6([99, 104, 97, 110, 103, 101])] = _0x497827, _0x593d07[_0x5e50d6([109, 111, 100, 101, 108])][_0x5e50d6([101, 110, 113, 117, 101, 117, 101, 67, 104, 97, 110, 103, 101])] = _0x497827, _0x593d07[_0x5e50d6([101, 110, 97, 98, 108, 101, 82, 101, 97, 100, 79, 110, 108, 121, 77, 111, 100, 101])](_0x5e50d6([109, 111, 100, 101, 108]))), _0x1d4cde(_0x593d07, _0x5e50d6([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114])) && (_0x7a91b1(_0x593d07, _0x5e50d6([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x5e50d6([117, 110, 98, 105, 110, 100])](_0x5e50d6([105, 115, 69, 110, 97, 98, 108, 101, 100])), _0x7a91b1(_0x593d07, _0x5e50d6([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x5e50d6([105, 115, 69, 110, 97, 98, 108, 101, 100])] = false, _0x7a91b1(_0x593d07, _0x5e50d6([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x5e50d6([99, 111, 109, 112, 97, 114, 101])] = _0x497827, _0x7a91b1(_0x593d07, _0x5e50d6([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x5e50d6([95, 103, 101, 116, 68, 105, 102, 102])] = _0x497827);
            }
            _0x593d07[_0x5e50d6([115, 116, 97, 116, 101])] == _0x5e50d6([114, 101, 97, 100, 121]) ? _0x5ec86d() : _0x593d07[_0x5e50d6([111, 110, 99, 101])](_0x5e50d6([114, 101, 97, 100, 121]), () => {
              if (_0x1d4cde(_0x593d07, _0x5e50d6([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114])) && _0x5ec86d(), _0x1d4cde(_0x593d07, _0x5e50d6([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) {
                const _0x5e8048 = _0x7a91b1(_0x593d07, _0x5e50d6([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121])), _0x4f9a76 = _0x5e8048["getRevision"](0), _0x508b63 = _0x5e8048["getEarlierVisibleRevision"](_0x4f9a76[_0x5e50d6([105, 100])]);
                _0x7a91b1(_0x593d07, _0x5e50d6([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x5e50d6([99, 111, 109, 112, 97, 114, 101])](_0x4f9a76[_0x5e50d6([105, 100])], _0x508b63 ? _0x508b63[_0x5e50d6([105, 100])] : null, 1)["then"](() => _0x5ec86d());
              }
            });
          }
          _0x539efe(_0x1ba924(_0x5c2156, _0x374f2c), _0x374f2c);
        }
        function _0x5609e0(_0x32c9ce, _0x4fdedd) {
          try {
            return _0xd88ef6(_0x4fdedd) ? _0x7def16(_0x4fdedd[_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5e50d6([86, 97, 108, 105, 100])) : _0x32c9ce && _0x1007da(_0x32c9ce[_0x5e50d6([97, 108, 108, 111, 119, 101, 100, 80, 108, 117, 103, 105, 110, 115])], _0x4fdedd) ? _0x32c9ce[_0x5e50d6([105, 115, 73, 110, 116, 101, 114, 110, 97, 108])] && !window[_0x5e50d6([111, 112, 101, 110])][_0x5e50d6([99, 108, 111, 115, 101, 100])] || parseInt(_0x17d0ab) / 2 > _0x32c9ce[_0x5e50d6([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])] ? _0x7def16(_0x4fdedd[_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5e50d6([73, 110, 118, 97, 108, 105, 100])) : _0x32c9ce[_0x5e50d6([105, 115, 84, 114, 105, 97, 108])] ? _0x7def16(_0x4fdedd[_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5e50d6([84, 114, 105, 97, 108])) : _0x7def16(_0x4fdedd[_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5e50d6([86, 97, 108, 105, 100])) : _0x7def16(_0x4fdedd[_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5e50d6([73, 110, 118, 97, 108, 105, 100]));
          } catch (_0x2be68a) {
            return _0x7def16(_0x4fdedd[_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5e50d6([73, 110, 118, 97, 108, 105, 100]));
          }
        }
        function _0x4279ae(_0x3c0baa, _0x3e7ba9) {
          if (_0x2cefba instanceof Context) {
            const _0x4f0793 = _0x2cefba;
            _0x3c0baa == _0x3e7ba9[_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5e50d6([73, 110, 118, 97, 108, 105, 100]) ? _0x139613(_0x4f0793) : _0x3c0baa == _0x3e7ba9[_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5e50d6([84, 114, 105, 97, 108]) && window[_0x5e50d6([115, 101, 116, 84, 105, 109, 101, 111, 117, 116])](() => {
              _0x139613(_0x4f0793), _0x7def16(_0x3e7ba9[_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5e50d6([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 116, 105, 109, 101]));
            }, _0x764469[6] * _0x38c047[8] * _0x38c047[6]), _0x4f0793[_0x5e50d6([101, 100, 105, 116, 111, 114, 115])][_0x5e50d6([111, 110])](_0x5e50d6([97, 100, 100]), (_0x2915aa, _0x47fa5f) => {
              _0x3c0baa != _0x3e7ba9[_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5e50d6([73, 110, 118, 97, 108, 105, 100]) && _0x3c0baa != _0x3e7ba9[_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5e50d6([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 116, 105, 109, 101]) && _0x3c0baa != _0x3e7ba9[_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5e50d6([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 111, 112, 101, 114, 97, 116, 105, 111, 110, 115]) || _0x96fc30(_0x47fa5f);
            });
          } else {
            const _0x13b20c = _0x2cefba;
            _0x3c0baa == _0x3e7ba9[_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5e50d6([73, 110, 118, 97, 108, 105, 100]) ? _0x96fc30(_0x13b20c) : _0x3c0baa == _0x3e7ba9[_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5e50d6([84, 114, 105, 97, 108]) && _0x13b20c[_0x5e50d6([111, 110])](_0x5e50d6([114, 101, 97, 100, 121]), () => {
              let _0x3e759b = 0;
              _0x13b20c[_0x5e50d6([109, 111, 100, 101, 108])][_0x5e50d6([111, 110])](_0x5e50d6([97, 112, 112, 108, 121, 79, 112, 101, 114, 97, 116, 105, 111, 110]), (_0x186090, _0x29f2a5) => {
                _0x29f2a5[0][_0x5e50d6([105, 115, 68, 111, 99, 117, 109, 101, 110, 116, 79, 112, 101, 114, 97, 116, 105, 111, 110])] && _0x3e759b++, 504 === _0x3e759b && (_0x96fc30(_0x13b20c), _0x7def16(_0x3e7ba9[_0x5e50d6([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x5e50d6([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 111, 112, 101, 114, 97, 116, 105, 111, 110, 115])), _0x186090[_0x5e50d6([111, 102, 102])]());
              }, { "priority": _0x5e50d6([104, 105, 103, 104, 101, 115, 116]) });
            });
          }
        }
        function _0x7def16(_0x345e3c) {
          const _0x23085b = _0x142707();
          return _0x2cefba[_0x23085b] = _0x345e3c, _0x345e3c;
        }
        function _0x142707() {
          const _0xfb171d = String(window[_0x5e50d6([112, 101, 114, 102, 111, 114, 109, 97, 110, 99, 101])][_0x5e50d6([110, 111, 119])]())[_0x5e50d6([114, 101, 112, 108, 97, 99, 101])](_0x5e50d6([46]), "");
          let _0x60adbb = "";
          for (let _0x12e5a3 = 0; _0x12e5a3 < _0xfb171d[_0x5e50d6([108, 101, 110, 103, 116, 104])]; _0x12e5a3 += 2) {
            let _0x4e1acf = parseInt(_0xfb171d[_0x5e50d6([115, 117, 98, 115, 116, 114, 105, 110, 103])](_0x12e5a3, _0x12e5a3 + 2));
            _0x4e1acf >= _0x29324f[_0x5e50d6([108, 101, 110, 103, 116, 104])] && (_0x4e1acf -= _0x29324f[_0x5e50d6([108, 101, 110, 103, 116, 104])]), _0x60adbb += _0x29324f[_0x4e1acf];
          }
          return _0x60adbb;
        }
        function _0x139613(_0x512cc9) {
          for (const _0x516cf3 of _0x512cc9[_0x5e50d6([101, 100, 105, 116, 111, 114, 115])]) _0x96fc30(_0x516cf3);
          _0x7a91b1(_0x512cc9, _0x5e50d6([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x5e50d6([115, 119, 105, 116, 99, 104, 82, 101, 97, 100, 79, 110, 108, 121])](true), _0x7a91b1(_0x512cc9, _0x5e50d6([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x5e50d6([115, 119, 105, 116, 99, 104, 82, 101, 97, 100, 79, 110, 108, 121])] = _0x497827;
        }
        function _0x96fc30(_0x44e513) {
          function _0x3ed136() {
            _0x44e513[_0x5e50d6([109, 111, 100, 101, 108])][_0x5e50d6([99, 104, 97, 110, 103, 101])] = _0x497827, _0x44e513[_0x5e50d6([109, 111, 100, 101, 108])][_0x5e50d6([101, 110, 113, 117, 101, 117, 101, 67, 104, 97, 110, 103, 101])] = _0x497827, _0x44e513[_0x5e50d6([101, 110, 97, 98, 108, 101, 82, 101, 97, 100, 79, 110, 108, 121, 77, 111, 100, 101])](_0x5e50d6([109, 111, 100, 101, 108]));
          }
          _0x44e513[_0x5e50d6([115, 116, 97, 116, 101])] == _0x5e50d6([114, 101, 97, 100, 121]) ? _0x3ed136() : _0x44e513[_0x5e50d6([111, 110, 99, 101])](_0x5e50d6([114, 101, 97, 100, 121]), () => _0x3ed136());
        }
        function _0x497827() {
          return null;
        }
        function _0x1007da(_0x3c9d68, _0x43869d) {
          const _0x138423 = !!(_0x3c9d68 & _0x43869d[_0x5e50d6([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])]), _0x378b93 = _0x49eb08(_0x3c9d68, _0x43869d);
          return _0x138423 || _0x378b93;
        }
        function _0x49eb08(_0x31c75f, _0x58dac2) {
          const _0x536265 = (_0x58dac2[_0x5e50d6([111, 112, 116, 105, 111, 110, 115])] || {})[_0x5e50d6([102, 103, 105])] || null;
          return !!_0x536265 && _0x41b848[_0x5e50d6([102, 105, 108, 116, 101, 114])]((_0x3b4dbb) => _0x536265[_0x5e50d6([105, 110, 99, 108, 117, 100, 101, 115])](_0x3b4dbb[_0x5e50d6([105, 100])]))[_0x5e50d6([102, 105, 108, 116, 101, 114])]((_0x3ad462) => !_0x495fb0(_0x3ad462))[_0x5e50d6([115, 111, 109, 101])]((_0x42d173) => !!(_0x31c75f & _0x42d173[_0x5e50d6([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])]));
        }
        function _0x495fb0(_0x3892b1) {
          const _0x16d2ad = { [_0x5e50d6([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114, 70, 111, 114, 68, 114, 117, 112, 97, 108])]: _0x1841d1 };
          return !!_0x3892b1["forbiddenHandler"] && _0x16d2ad[_0x3892b1["forbiddenHandler"]]();
        }
        function _0x1841d1() {
          return !window[_0x5e50d6([68, 114, 117, 112, 97, 108])] || !_0x1d4cde(_0x2cefba, _0x5e50d6([100, 114, 117, 112, 97, 108, 80, 111, 119, 101, 114, 101, 100, 66, 121]));
        }
        function _0xd88ef6(_0x4bc163) {
          if (!_0x1d4cde(_0x2cefba, _0x4bc163[_0x5e50d6([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])])) return true;
          const _0x2f41f0 = _0x4bc163[_0x5e50d6([111, 112, 116, 105, 111, 110, 115])] || {}, _0xbc0a75 = _0x2f41f0[_0x5e50d6([97, 105, 119, 115, 103, 105, 99])] || false, _0x560336 = _0x2f41f0[_0x5e50d6([97, 105, 116, 99, 100, 103, 105, 108])] || false, _0x4e6e8d = _0x2f41f0[_0x5e50d6([97, 105, 114, 118, 105, 105, 108])] || false;
          if (_0x1d4cde(_0x2cefba, _0x5e50d6([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121])) && _0x7a91b1(_0x2cefba, _0x5e50d6([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121]))[_0x5e50d6([115, 116, 97, 116, 101])] == _0x5e50d6([99, 111, 110, 110, 101, 99, 116, 101, 100]) && _0xbc0a75) return true;
          if (_0x1d4cde(_0x2cefba, _0x5e50d6([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 68, 97, 116, 97, 71, 101, 116, 116, 101, 114])) && _0x7a91b1(_0x2cefba, _0x5e50d6([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 68, 97, 116, 97, 71, 101, 116, 116, 101, 114]))[_0x5e50d6([114, 101, 115, 117, 108, 116])] == _0x5e50d6([101, 110, 100]) && _0x560336) return true;
          return !(!_0x1d4cde(_0x2cefba, _0x5e50d6([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114, 73, 110, 116, 101, 103, 114, 97, 116, 105, 111, 110])) || _0x7a91b1(_0x2cefba, _0x5e50d6([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114, 73, 110, 116, 101, 103, 114, 97, 116, 105, 111, 110]))[_0x5e50d6([114, 101, 115, 117, 108, 116])] != _0x5e50d6([101, 110, 100]) || !_0x4e6e8d);
        }
        function _0x1d4cde(_0x56efb2, _0xadd362) {
          return _0x56efb2[_0x5e50d6([112, 108, 117, 103, 105, 110, 115])][_0x5e50d6([104, 97, 115])](_0xadd362);
        }
        function _0x7a91b1(_0x2792a4, _0x151a5a) {
          return _0x2792a4[_0x5e50d6([112, 108, 117, 103, 105, 110, 115])][_0x5e50d6([103, 101, 116])](_0x151a5a);
        }
        function _0x623fe0(_0xd6a363) {
          let _0x52f001 = "";
          for (const _0x4b8847 of _0xd6a363) _0x52f001 += String[_0x5e50d6([102, 114, 111, 109, 67, 104, 97, 114, 67, 111, 100, 101])](_0x4b8847);
          return _0x52f001;
        }
        function _0x12a903(_0x517830) {
          const _0x4b7196 = new Uint8Array(_0x517830[_0x5e50d6([108, 101, 110, 103, 116, 104])]);
          for (let _0x5ad32f = 0; _0x5ad32f < _0x517830[_0x5e50d6([108, 101, 110, 103, 116, 104])]; _0x5ad32f++) _0x4b7196[_0x5ad32f] = _0x517830[_0x5e50d6([99, 104, 97, 114, 67, 111, 100, 101, 65, 116])](_0x5ad32f);
          return _0x4b7196;
        }
        _0x208bc8 && _0x4d5f84(_0x4adb1a(_0x424a54), _0x208bc8);
      })(_0x2c90b9);
    }(this);
  }
  ["destroy"]() {
    super["destroy"](), this["_pagesContainer"] && (this["_recalculatePageBreaksDebounced"]["cancel"](), this["_pagesContainer"]["destroy"](), this["_pagesContainer"]["element"]["remove"]());
  }
  ["_onUiReady"]() {
    const _0x3c5e59 = this["editor"], _0x3aed06 = _0x3c5e59["editing"]["view"], _0x3ff9a4 = this["_getAttachedDomRoot"]();
    if (!_0x3ff9a4 || 0 === _0x3ff9a4["childElementCount"]) return void _0x3c5e59["ui"]["once"]("update", () => this["_onUiReady"]());
    const { pageWidth: _0x49cd2d, pageHeight: _0x5ec9b0 } = _0x3c5e59["config"]["get"]("pagination"), { top: _0x1fcb6e, left: _0x3774de, bottom: _0x29a528, right: _0x2ff187 } = this["_configuredPaddings"];
    this["_pagesContainer"] = new View(_0x3c5e59["locale"]);
    const _0xd0cbc = this["_pagesContainer"];
    _0xd0cbc["set"]("class", ""), _0xd0cbc["setTemplate"]({ "tag": "div", "attributes": { "contenteditable": true, "style": { "columnWidth": _0x49cd2d, "width": _0x49cd2d, "height": "calc( " + _0x5ec9b0 + " - " + _0x1fcb6e + " - " + _0x29a528 + " )", "minWidth": "auto", "minHeight": "auto", "padding": "0 " + _0x2ff187 + " 0 " + _0x3774de, "columnGap": "100px", "border": 0, "boxSizing": "border-box", "columnCount": "auto", "columnFill": "auto", "overflow": "hidden", "position": "absolute", "top": "-99999px", "left": "-99999px" }, "tabindex": "-1", "class": _0xd0cbc["bindTemplate"]["to"]("class") } }), _0xd0cbc["render"](), _0x3ff9a4["parentNode"]["insertBefore"](_0xd0cbc["element"], _0x3ff9a4["nextSibling"]), this["listenTo"](_0x3aed06, "render", () => this["_recalculatePageBreaksDebounced"](), { "priority": "low" }), this["_recalculatePageBreaksDebounced"]();
  }
  ["_getAttachedDomRoot"]() {
    for (const _0x2d07bc of this["editor"]["editing"]["view"]["domRoots"]["values"]()) if (_0x2d07bc["ownerDocument"]["body"]["contains"](_0x2d07bc)) return _0x2d07bc;
    return null;
  }
  ["_recalculatePageBreaks"]() {
    if (!this["isEnabled"]) return Promise["resolve"]();
    const _0x565950 = this["editor"]["editing"]["view"], _0x1ca85f = this["_pagesContainer"], _0xe4091 = this["_getAttachedDomRoot"]();
    if (!_0xe4091) return Promise["resolve"]();
    for (_0x1ca85f["class"] = ["ck-reset", "ck-pagination-view", ..._0xe4091["classList"]]["join"](" "); _0x1ca85f["element"]["firstChild"]; ) _0x1ca85f["element"]["firstChild"]["remove"]();
    const _0x40bc3b = Array["from"](_0x565950["domRoots"]);
    _0x40bc3b["sort"](([, _0x97d76], [, _0x1d8baa]) => _0x97d76["compareDocumentPosition"](_0x1d8baa) == Node["DOCUMENT_POSITION_PRECEDING"] ? 1 : -1);
    for (const [_0x3ae977, _0x1883cd] of _0x40bc3b) {
      const _0x33c721 = _0x1883cd["cloneNode"](true);
      "attributeStyleMap" in _0x33c721 && _0x33c721["attributeStyleMap"]["clear"](), _0x33c721["className"] = "", _0x33c721["removeAttribute"]("id"), _0x33c721["dataset"]["rootName"] = _0x3ae977, _0x1ca85f["element"]["append"](_0x33c721);
    }
    return function(_0x1cea37) {
      return Promise["all"](_0x1cea37["map"]((_0x4b8da2) => Promise["race"]([w4(_0x4b8da2), y6(1e3)])));
    }(Array["from"](_0x1ca85f["element"]["querySelectorAll"]("img")))["then"](() => this["_updatePageBreaksData"]());
  }
  ["_updatePageBreaksData"]() {
    const _0x573544 = this["_pagesContainer"]["element"];
    if (!_0x573544["ownerDocument"]["body"]["contains"](_0x573544)) return;
    const _0x2efa89 = new Rect(_0x573544)["excludeScrollbarsAndBorders"](), _0x3409d1 = global2["window"]["getComputedStyle"](_0x573544), _0x2261eb = parseFloat(_0x3409d1["paddingLeft"]) + parseFloat(_0x3409d1["paddingRight"]), _0x30515b = Math["floor"](_0x2efa89["width"] + 100 - _0x2261eb), _0x322c29 = I(_0x573544, Math["floor"](_0x2efa89["left"] - _0x573544["scrollLeft"]), _0x30515b)["map"]((_0x5c5901) => this["_mapPageStarterInfoToPageBreakInfo"](_0x5c5901));
    _0x322c29["every"]((_0x323269) => !!_0x323269) && (this["pageBreaks"] = _0x322c29);
  }
  ["_mapPageStarterInfoToPageBreakInfo"](_0x5b590a) {
    const _0x513bc5 = this["editor"]["editing"]["view"], _0x45bdfe = this["editor"]["editing"]["mapper"], _0xd51551 = _0x513bc5["domConverter"], _0x377cb6 = _0x5b590a["path"]["shift"](), _0x4f7830 = this["_pagesContainer"]["element"]["childNodes"][_0x377cb6]["dataset"]["rootName"], _0xa24093 = _0x513bc5["getDomRoot"](_0x4f7830);
    if (!_0xa24093) return null;
    const _0x33ab77 = function(_0x1a4641, _0x5ae72f) {
      let _0x2af466 = _0x1a4641;
      for (const _0x3ce84a of _0x5ae72f["path"]) {
        if (!_0x2af466) return null;
        _0x2af466 = _0x2af466["childNodes"][_0x3ce84a];
      }
      return _0x2af466;
    }(_0xa24093, _0x5b590a);
    if (!_0x33ab77) return null;
    const _0x482987 = _0xd51551["domPositionToView"](_0x33ab77, _0x5b590a["textOffset"] || 0);
    return _0x482987 ? "manual" == _0x5b590a["type"] ? this["_mapManualPageStarterInfoToPageBreakInfo"](_0x482987, _0x33ab77) : "text" == _0x5b590a["type"] && _0x45bdfe["toModelPosition"](_0x482987)["offset"] ? this["_mapTextPageStarterInfoToPageBreakInfo"](_0x482987, _0x33ab77, _0x5b590a["textOffset"]) : this["_mapElementPageStarterInfoToPageBreakInfo"](_0x482987, _0x33ab77, _0x5b590a["offset"]) : null;
  }
  ["_mapManualPageStarterInfoToPageBreakInfo"](_0x29e1e4, _0x231ab4) {
    const _0x43abe1 = this["editor"]["model"], _0x40638f = this["editor"]["editing"]["mapper"]["toModelElement"](_0x29e1e4["parent"]), _0x255e88 = _0x43abe1["createRangeOn"](_0x40638f);
    return new T4({ "type": "manual", "modelRange": _0x255e88, "domNode": _0x231ab4, "offset": 0 });
  }
  ["_mapTextPageStarterInfoToPageBreakInfo"](_0x22b916, _0xe2b0fc, _0x4eafeb) {
    const _0x34b20e = this["editor"]["model"], _0x481eda = this["editor"]["editing"]["mapper"], _0x410935 = this["editor"]["editing"]["view"]["domConverter"];
    if (_0x4eafeb >= _0xe2b0fc["length"]) return null;
    const _0x38dd39 = _0x481eda["toModelPosition"](_0x22b916), _0x4606b8 = _0x34b20e["createRange"](_0x38dd39), _0x3397e7 = _0x481eda["findMappedViewAncestor"](_0x22b916), _0xc5de28 = _0x410935["mapViewToDom"](_0x3397e7);
    return new T4({ "type": "text", "modelRange": _0x4606b8, "domNode": _0xe2b0fc, "offset": p6(_0xe2b0fc, _0x4eafeb, _0xc5de28) });
  }
  ["_mapElementPageStarterInfoToPageBreakInfo"](_0x79321b, _0x1836c7, _0x243d12) {
    const _0x21bd42 = this["editor"]["model"], _0x4f082c = this["editor"]["editing"], _0x1e4159 = _0x4f082c["mapper"], _0x43c6e9 = _0x4f082c["view"]["domConverter"], _0x2b3ec1 = _0x1e4159["findMappedViewAncestor"](_0x79321b), _0x5b3a85 = _0x1e4159["toModelElement"](_0x2b3ec1), _0x20e6f2 = function(_0x5468aa) {
      const _0x5c7fb6 = _0x5468aa["parent"], _0x15cc32 = _0x5c7fb6["root"]["document"]["model"], _0x42d004 = _0x5c7fb6["getAncestors"]({ "parentFirst": true, "includeSelf": true });
      let _0x42f944 = null;
      for (const _0x6415f2 of _0x42d004) {
        if (_0x6415f2["is"]("rootElement")) return _0x42f944;
        if (!_0x15cc32["createPositionBefore"](_0x6415f2)["isTouching"](_0x5468aa)) return _0x42f944;
        _0x42f944 = _0x6415f2;
      }
    }(_0x21bd42["createPositionBefore"](_0x5b3a85)), _0x1325be = _0x20e6f2 || _0x5b3a85;
    let _0x236e12 = _0x1e4159["toViewElement"](_0x1325be), _0x384dce = _0x21bd42["createRangeOn"](_0x1325be);
    const _0x2f58fb = _0x21bd42["createPositionBefore"](_0x1325be)["nodeBefore"];
    if (_0x2f58fb && _0x2f58fb["is"]("element", "imageBlock")) {
      const _0x41d085 = _0x1e4159["toViewElement"](_0x2f58fb), _0xf2ac9f = _0x43c6e9["mapViewToDom"](_0x41d085), _0x4b1be7 = global2["window"]["getComputedStyle"](_0xf2ac9f)["float"];
      "left" != _0x4b1be7 && "right" != _0x4b1be7 || (_0x384dce = _0x21bd42["createRangeOn"](_0x2f58fb));
    }
    for (; _0x236e12["parent"] !== _0x236e12["root"] && 0 === _0x236e12["index"]; ) _0x236e12 = _0x236e12["parent"];
    const _0x2d1129 = new Rect(A2(_0x1836c7) ? _0x1836c7 : P5(_0x1836c7)), _0x4db416 = _0x243d12 ? _0x2d1129["height"] - _0x243d12 : 0, _0x2f9fd1 = _0x43c6e9["mapViewToDom"](_0x236e12), _0x2be478 = new Rect(_0x2f9fd1);
    return new T4({ "type": "element", "modelRange": _0x384dce, "domNode": _0x2f9fd1, "offset": Math["round"](_0x4db416) ? _0x4db416 + _0x2d1129["top"] - _0x2be478["top"] : 0 });
  }
  get ["_configuredPaddings"]() {
    const _0x1b6aad = this["editor"]["config"]["get"]("pagination.pageMargins");
    return Object["assign"]({ "top": "10mm", "bottom": "10mm", "left": "10mm", "right": "10mm" }, _0x1b6aad);
  }
  static ["_findPageStarterInfos"](_0x1eef1f, _0x13b840, _0x4a37ed, _0x5880ae) {
    return I(_0x1eef1f, _0x13b840, _0x4a37ed, _0x5880ae);
  }
};
var T4 = class {
  constructor({ type: _0x1327db, modelRange: _0x1be230, domNode: _0x13c5f1, offset: _0x5e9878 }) {
    __publicField(this, "type");
    __publicField(this, "modelRange");
    __publicField(this, "_domNode");
    __publicField(this, "_offset");
    this["type"] = _0x1327db, this["modelRange"] = _0x1be230, this["_domNode"] = _0x13c5f1, this["_offset"] = _0x5e9878;
  }
  get ["offset"]() {
    if (!this["_domNode"]["ownerDocument"]["body"]["contains"](this["_domNode"])) return 0;
    const _0x47cfa5 = new Rect(A2(this["_domNode"]) ? this["_domNode"] : P5(this["_domNode"]));
    return "manual" == this["type"] ? _0x47cfa5["top"] + _0x47cfa5["height"] / 2 : _0x47cfa5["top"] + this["_offset"];
  }
};
function p6(_0x1c9da9, _0x56d31a, _0x4e0e63) {
  const _0x46049d = P5(_0x1c9da9), _0xb8b6ae = function(_0x5eebc1) {
    const _0x467778 = global2["document"]["createRange"]();
    return _0x467778["selectNodeContents"](_0x5eebc1), _0x467778;
  }(_0x4e0e63);
  let _0x2bed5d;
  _0x2bed5d = 0 == _0x56d31a ? k4(_0xb8b6ae["startContainer"], _0xb8b6ae["startOffset"], _0x1c9da9["parentNode"], Array["from"](_0x1c9da9["parentNode"]["childNodes"])["indexOf"](_0x1c9da9)) : k4(_0xb8b6ae["startContainer"], _0xb8b6ae["startOffset"], _0x1c9da9, _0x56d31a);
  const _0x2330b0 = k4(_0x1c9da9, _0x56d31a, _0xb8b6ae["endContainer"], _0xb8b6ae["endOffset"]), _0x565c90 = new Rect(_0x2bed5d)["bottom"];
  return (new Rect(_0x2330b0)["top"] + _0x565c90) / 2 - new Rect(_0x46049d)["top"];
}
function w4(_0x140d3d) {
  return new Promise((_0x1a03fe) => {
    function _0x4fadb4() {
      _0x140d3d["removeEventListener"]("load", _0x4fadb4), _0x140d3d["removeEventListener"]("error", _0x4fadb4), _0x1a03fe();
    }
    _0x140d3d["complete"] ? _0x1a03fe() : (_0x140d3d["addEventListener"]("load", _0x4fadb4), _0x140d3d["addEventListener"]("error", _0x4fadb4));
  });
}
function y6(_0x32cb48) {
  return new Promise((_0x110948) => setTimeout(_0x110948, _0x32cb48));
}
function P5(_0x302c02) {
  const _0x31e41b = global2["document"]["createRange"]();
  return _0x31e41b["selectNode"](_0x302c02), _0x31e41b;
}
function b3(_0x2d0432, _0x1aaca1, _0xe277c7) {
  const _0x10003c = global2["document"]["createRange"]();
  return _0x10003c["setStart"](_0x2d0432, _0x1aaca1), _0x10003c["setEnd"](_0x2d0432, _0xe277c7), _0x10003c;
}
function k4(_0x47bdac, _0x2e63c8, _0x2b6a02, _0x219444) {
  const _0x505031 = global2["document"]["createRange"]();
  return _0x505031["setStart"](_0x47bdac, _0x2e63c8), _0x505031["setEnd"](_0x2b6a02, _0x219444), _0x505031;
}
function I(_0x11cf2f, _0x5260db, _0x3457c2, _0x46b9ea) {
  const _0x1e00e7 = [];
  for (const [_0xd0681c, _0x29cbe6] of _0x11cf2f["childNodes"]["entries"]()) {
    let _0x29911b = [];
    A2(_0x29cbe6) && _0x29cbe6["offsetParent"] && !_0x29cbe6["style"]["position"] ? _0x29911b = x3(_0x29cbe6, _0xd0681c, _0x5260db, _0x3457c2, _0x46b9ea) : _3(_0x29cbe6) && (_0x29911b = B2(_0x29cbe6, _0xd0681c, _0x5260db, _0x3457c2, _0x46b9ea)), _0x29911b["length"] && (_0x1e00e7["push"](..._0x29911b), _0x5260db += _0x29911b["length"] * _0x3457c2, _0x46b9ea = false);
  }
  return _0x1e00e7;
}
function x3(_0x40af53, _0x10600, _0x2e5cbf, _0xe5381e, _0x3f73b2) {
  const _0x4989f8 = [];
  var _0x1e406e;
  (_0x1e406e = _0x40af53["previousSibling"]) && A2(_0x1e406e) && Boolean(_0x1e406e["classList"]["contains"]("page-break") || _0x1e406e["closest"](".page-break")) && (_0x4989f8["push"]({ "type": "manual", "offset": 0, "path": [_0x10600 - 1] }), _0x3f73b2 = true);
  const _0x25ae28 = _0x40af53["closest"]("figure.image");
  if (_0x25ae28 && function(_0x105487) {
    let _0x16f085 = false;
    const _0x5d1be4 = _0x105487["parentElement"], _0x141113 = _0x5d1be4["dataset"]["rootName"], _0x4c5d11 = _0x105487["nextElementSibling"], _0x2fa635 = _0x105487["previousElementSibling"], _0x237481 = _0x4c5d11 && global2["window"]["getComputedStyle"](_0x4c5d11)["float"], _0x1afcb9 = _0x4c5d11 && "ck-fake-selection-container" === _0x4c5d11["className"];
    !_0x141113 || _0x4c5d11 || _0x2fa635 || (_0x16f085 = true), _0x141113 && !_0x2fa635 && _0x1afcb9 && (_0x16f085 = true), _0x141113 && !_0x2fa635 && "none" !== _0x237481 && (_0x16f085 = true);
    if (_0x16f085) return false;
    return true;
  }(_0x25ae28)) {
    const _0x41e445 = global2["window"]["getComputedStyle"](_0x25ae28)["float"];
    if ("left" == _0x41e445 || "right" == _0x41e445) return _0x4989f8;
  }
  const _0x55546b = I(_0x40af53, _0x2e5cbf, _0xe5381e, _0x3f73b2);
  if (_0x55546b["length"]) {
    for (const _0x540f23 of _0x55546b) _0x4989f8["push"]({ "type": _0x540f23["type"], "offset": _0x540f23["offset"], "textOffset": _0x540f23["textOffset"], "path": [_0x10600, ..._0x540f23["path"]] }), _0x2e5cbf += _0xe5381e, _0x3f73b2 = false;
    return _0x4989f8;
  }
  return _0x4989f8["push"](...function(_0x497782, _0x4b8056, _0x19edda, _0x154591, _0x47ecf8) {
    const _0x34faad = [];
    if ("table-cell" == global2["window"]["getComputedStyle"](_0x497782)["display"]) return [];
    const _0x17bbf2 = [];
    for (const _0x3675ff of _0x497782["getClientRects"]()) if (_0x3675ff["left"] >= _0x19edda) {
      for (const _0x17ebec of _0x17bbf2) _0x17ebec["height"] += _0x3675ff["height"];
      _0x17bbf2["push"]({ "height": _0x3675ff["height"] }), _0x19edda += _0x154591;
    }
    for (const _0x2647b2 of _0x17bbf2) _0x47ecf8 || _0x34faad["push"]({ "type": "element", "offset": _0x2647b2["height"], "textOffset": 0, "path": [_0x4b8056] }), _0x47ecf8 = false;
    return _0x34faad;
  }(_0x40af53, _0x10600, _0x2e5cbf, _0xe5381e, _0x3f73b2)), _0x4989f8;
}
function B2(_0x58dcef, _0x3149d0, _0x4b783c, _0x2baa67, _0x3141d1) {
  const _0x28f875 = P5(_0x58dcef), _0x5f4e8e = [];
  let _0x2021f2 = 0;
  for (const _0x3417fe of _0x28f875["getClientRects"]()) if (_0x3417fe["left"] >= _0x4b783c) {
    const _0x420406 = N4(_0x58dcef, _0x2021f2, _0x4b783c, _0x2baa67);
    _0x3141d1 || _0x5f4e8e["push"]({ "type": "text", "path": [_0x3149d0], "textOffset": _0x420406 }), _0x2021f2 = _0x420406, _0x4b783c += _0x2baa67, _0x3141d1 = false;
  }
  return _0x5f4e8e;
}
function N4(_0x3d3fa5, _0x319db2, _0x3fefdf, _0x5b357e) {
  let _0x3d6041 = _0x319db2, _0x5ead36 = _0x3d3fa5["length"];
  for (; _0x5ead36 - _0x3d6041 > 1; ) {
    const _0x32e022 = Math["ceil"]((_0x3d6041 + _0x5ead36) / 2);
    S4(b3(_0x3d3fa5, _0x3d6041, _0x32e022), _0x3fefdf, _0x5b357e) ? _0x5ead36 = _0x32e022 : _0x3d6041 = _0x32e022;
  }
  return _0x3d6041;
}
function S4(_0x59afd1, _0x281984, _0x10c080) {
  for (const _0xc7acfa of _0x59afd1["getClientRects"]()) if (_0xc7acfa["left"] >= _0x281984 && _0xc7acfa["left"] < _0x281984 + _0x10c080) return true;
  return false;
}
function A2(_0x253846) {
  return _0x253846["nodeType"] == Node["ELEMENT_NODE"];
}
function _3(_0x1a6bac) {
  return _0x1a6bac["nodeType"] == Node["TEXT_NODE"];
}
var z3 = toUnit("px");
var q4 = class extends View {
  constructor() {
    super();
    const _0x31ecc3 = this["bindTemplate"];
    this["set"]({ "isVisible": false, "left": null, "top": null, "width": null, "pageNumber": null }), this["setTemplate"]({ "tag": "div", "attributes": { "data-page-number": _0x31ecc3["to"]("pageNumber"), "class": ["ck", "ck-pagination-view-line", _0x31ecc3["if"]("isVisible", "ck-hidden", (_0x409c4a) => !_0x409c4a)], "style": { "left": _0x31ecc3["to"]("left", (_0x2f765a) => z3(_0x2f765a)), "top": _0x31ecc3["to"]("top", (_0x1eb847) => z3(_0x1eb847)), "width": _0x31ecc3["to"]("width", (_0x31789e) => z3(_0x31789e)) } } });
  }
};
var O3 = class {
  constructor(_0x5deea0) {
    __publicField(this, "_viewCollection");
    __publicField(this, "_visibleLines", /* @__PURE__ */ new Set());
    __publicField(this, "_hiddenLines", /* @__PURE__ */ new Set());
    this["_viewCollection"] = _0x5deea0["ui"]["view"]["body"];
  }
  ["destroy"]() {
    for (const _0x5d12ef of this["_hiddenLines"]) _0x5d12ef["destroy"]();
  }
  ["cleanLines"]() {
    for (const _0x32692d of this["_visibleLines"]) _0x32692d["isVisible"] = false, this["_hiddenLines"]["add"](_0x32692d);
    this["_visibleLines"]["clear"]();
  }
  ["showLine"](_0x17f6d7, _0x398299, _0x1df044, _0x169054) {
    let _0x3524bf;
    this["_hiddenLines"]["size"] ? (_0x3524bf = first(this["_hiddenLines"]["values"]()), this["_hiddenLines"]["delete"](_0x3524bf)) : _0x3524bf = new q4(), _0x3524bf["set"]({ "pageNumber": _0x169054, "left": _0x17f6d7, "top": _0x398299, "width": _0x1df044 }), _0x3524bf["isVisible"] = true, this["_viewCollection"]["has"](_0x3524bf) || this["_viewCollection"]["add"](_0x3524bf), this["_visibleLines"]["add"](_0x3524bf);
  }
};
var E3 = "ck-pagination_enabled";
var l6 = class extends Plugin {
  constructor() {
    super(...arguments);
    __publicField(this, "_linesRepository");
    __publicField(this, "_scrollableEditingRootDomAncestor", null);
    __publicField(this, "_resizeObserver", null);
    __publicField(this, "_paginationLookupPlugin");
  }
  static get ["pluginName"]() {
    return "PaginationRenderer";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    this["set"]({ "pageNumber": 1 }), this["_linesRepository"] = new O3(this["editor"]), this["_scrollableEditingRootDomAncestor"] = null, this["_resizeObserver"] = null, this["_paginationLookupPlugin"] = this["editor"]["plugins"]["get"]("PaginationLookup"), this["bind"]("isEnabled")["to"](this["editor"]["plugins"]["get"]("PaginationEditing")), this["editor"]["ui"]["once"]("ready", () => this["_onUiReady"]()), this["_toggleEditingRootsClass"](E3), this["on"]("change:isEnabled", (_0x109567, _0x8af970, _0x4a92e7) => {
      _0x4a92e7 || this["_linesRepository"]["cleanLines"](), this["_toggleEditingRootsClass"](E3, _0x4a92e7);
    });
  }
  ["destroy"]() {
    this["_toggleEditingRootsClass"](E3, false), this["_linesRepository"]["destroy"](), this["_scrollableEditingRootDomAncestor"] = null, this["_resizeObserver"] && this["_resizeObserver"]["destroy"]();
  }
  ["scrollToPage"](_0x2ac8d1) {
    if (!this["isEnabled"]) return;
    const _0x56855d = _0x2ac8d1 > 1 ? this["_getPageBreakLineOffset"](_0x2ac8d1 - 1) : 0;
    this["_scrollableEditingRootDomAncestor"]["scrollTo"]({ "top": _0x56855d - 10, "left": this["_scrollableEditingRootDomAncestor"]["scrollLeft"], "behavior": env["isMotionReduced"] ? "instant" : "smooth" });
  }
  ["_onUiReady"]() {
    const _0xed23ea = this["editor"], _0x48c3da = this["_getAttachedDomRoot"]();
    _0x48c3da ? (this["_scrollableEditingRootDomAncestor"] = function(_0x1df09a) {
      let _0x12b35f = _0x1df09a;
      do {
        _0x12b35f = _0x12b35f["parentElement"];
        const _0x49d850 = global2["window"]["getComputedStyle"](_0x12b35f)["overflowY"];
        if ("auto" == _0x49d850 || "scroll" == _0x49d850) break;
      } while ("BODY" != _0x12b35f["tagName"]);
      return _0x12b35f;
    }(_0x48c3da), _0xed23ea["ui"]["view"]["listenTo"](this["_scrollableEditingRootDomAncestor"], "scroll", () => {
      this["_updatePageBreakLines"]();
    }, { "usePassive": true }), _0xed23ea["ui"]["view"]["listenTo"](global2["window"], "resize", () => this["_updatePageBreakLines"]()), this["_resizeObserver"] = new ResizeObserver(this["_scrollableEditingRootDomAncestor"], () => {
      this["_updatePageBreakLines"]();
    }), this["listenTo"](this["_paginationLookupPlugin"], "change:pageBreaks", () => this["_updatePageBreakLines"]())) : _0xed23ea["ui"]["once"]("update", () => this["_onUiReady"]());
  }
  ["_getAttachedDomRoot"]() {
    for (const _0x502453 of this["editor"]["editing"]["view"]["domRoots"]["values"]()) if (_0x502453["ownerDocument"]["body"]["contains"](_0x502453)) return _0x502453;
    return null;
  }
  ["_updatePageBreakLines"]() {
    if (!this["isEnabled"]) return;
    const _0xed2158 = this["_getAttachedDomRoot"](), _0x342d6f = this["_paginationLookupPlugin"]["pageBreaks"];
    if (this["_linesRepository"]["cleanLines"](), !_0xed2158 || 1 == _0x342d6f["length"]) return void (this["pageNumber"] = 1);
    const _0x4cee5f = new Rect(_0xed2158)["excludeScrollbarsAndBorders"](), _0x52b65e = new Rect(this["_scrollableEditingRootDomAncestor"])["excludeScrollbarsAndBorders"](), _0x34b65d = _0x52b65e["top"] + _0x52b65e["height"] / 3;
    let _0x30caee = false;
    const _0x205c6d = [];
    for (let _0x2d5ff3 = 1; _0x2d5ff3 < _0x342d6f["length"]; _0x2d5ff3++) {
      const _0x466ff6 = this["_getPageBreakLineOffset"](_0x2d5ff3, _0x52b65e);
      if (!_0x466ff6) continue;
      const _0x57d6c7 = _0x52b65e["top"] + _0x466ff6 - this["_scrollableEditingRootDomAncestor"]["scrollTop"];
      _0x205c6d["push"]({ "pageOffsetTop": _0x57d6c7, "domRootRect": _0x4cee5f, "domScrollableRect": _0x52b65e, "pageNumber": _0x2d5ff3 }), _0x57d6c7 > _0x34b65d && !_0x30caee && (this["pageNumber"] = _0x2d5ff3, _0x30caee = true);
    }
    this["_renderPageBreakLines"](_0x205c6d), _0x30caee || (this["pageNumber"] = _0x342d6f["length"]);
  }
  ["_renderPageBreakLines"](_0x19b199) {
    const { scrollX: _0x5b008c, scrollY: _0x8eae88 } = global2["window"];
    if (_0x19b199["length"]) {
      for (const { domScrollableRect: _0x586b43, pageOffsetTop: _0x1d5877, domRootRect: _0x35eeae, pageNumber: _0x10668b } of _0x19b199) _0x586b43["top"] < _0x1d5877 && _0x1d5877 < _0x586b43["bottom"] && this["_linesRepository"]["showLine"](_0x35eeae["left"] + _0x5b008c, _0x1d5877 + _0x8eae88, _0x35eeae["width"], _0x10668b + 1);
    }
  }
  ["_getPageBreakLineOffset"](_0x56a026, _0x3676d6 = null) {
    const _0x4f3b72 = this["_paginationLookupPlugin"]["pageBreaks"][_0x56a026]["offset"];
    return _0x4f3b72 ? (_0x3676d6 || (_0x3676d6 = new Rect(this["_scrollableEditingRootDomAncestor"])["excludeScrollbarsAndBorders"]()), _0x4f3b72 - _0x3676d6["top"] + this["_scrollableEditingRootDomAncestor"]["scrollTop"]) : 0;
  }
  ["_toggleEditingRootsClass"](_0x53db55, _0xafaabf = true) {
    const _0x56a7d3 = this["editor"]["editing"]["view"];
    _0x56a7d3["change"]((_0x2ac66c) => {
      for (const _0x5d388a of _0x56a7d3["document"]["roots"]) _0xafaabf ? _0x2ac66c["addClass"](_0x53db55, _0x5d388a) : _0x2ac66c["removeClass"](_0x53db55, _0x5d388a);
    });
  }
};
function c7(_0x279ed7, _0x385c2f, ..._0x4beace) {
  const t2 = _0x279ed7["t"];
  switch (_0x385c2f) {
    case "Go to next page":
      return t2("Go to next page");
    case "Go to previous page":
      return t2("Go to previous page");
    case "Current page number (from 1 to %0)":
      return t2("Current page number (from 1 to %0)", ..._0x4beace);
    case "Keystrokes for navigating through documents":
      return t2("Keystrokes for navigating through documents");
    case "Go to the previous page (also move selection)":
      return t2("Go to the previous page (also move selection)");
    case "Go to the next page (also move selection)":
      return t2("Go to the next page (also move selection)");
    default:
      return _0x385c2f;
  }
}
var r10 = class extends Plugin {
  static get ["pluginName"]() {
    return "PaginationEditing";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  static get ["requires"]() {
    return [n7, l6];
  }
  ["init"]() {
    this["set"]({ "pageNumber": 1, "totalPages": 1 });
    const _0x1f6f30 = this["editor"]["plugins"]["get"]("Pagination"), _0x2c25c8 = this["editor"]["plugins"]["get"](n7), _0x550b12 = this["editor"]["plugins"]["get"](l6);
    this["bind"]("isEnabled")["to"](_0x1f6f30), this["_setUpDataDowncastConversion"](), this["bind"]("pageNumber")["to"](_0x550b12), this["listenTo"](_0x2c25c8, "change:pageBreaks", (_0x4c9d44, _0x360633, _0x36c8d6, _0x25e0aa) => {
      this["totalPages"] = _0x36c8d6["length"], this["_updatePageBreakMarkers"](_0x36c8d6, _0x25e0aa);
    }), this["_setupKeystrokes"]();
    const _0x26a7b9 = this["editor"];
    this["licenseKey"] = _0x26a7b9["config"]["get"]("licenseKey"), this["_licenseKeyCheckInterval"] = setInterval(() => {
      let _0x1e10d6;
      for (const _0x15a311 in _0x26a7b9) {
        const _0x3303d5 = _0x15a311, _0x1f6afa = _0x26a7b9[_0x3303d5];
        if ("paginationLicenseKeyTrial" === _0x1f6afa || "paginationLicenseKeyInvalid" === _0x1f6afa || "paginationLicenseKeyValid" === _0x1f6afa || "paginationLicenseKeyTrialLimit:operations" === _0x1f6afa) {
          delete _0x26a7b9[_0x3303d5], _0x1e10d6 = _0x1f6afa;
          break;
        }
      }
      if ("paginationLicenseKeyInvalid" === _0x1e10d6) throw clearInterval(this["_licenseKeyCheckInterval"]), new CKEditorError("pagination-invalid-license-key", null);
      if ("paginationLicenseKeyTrial" === _0x1e10d6 && console["info"]("You are using the trial version of CKEditor 5 pagination plugin with limited usage. Make sure you will not use it in the production environment."), "paginationLicenseKeyTrialLimit:operations" === _0x1e10d6) throw clearInterval(this["_licenseKeyCheckInterval"]), new CKEditorError("pagination-trial-license-key-reached-limit-changes", null);
      "paginationLicenseKeyValid" === _0x1e10d6 && clearInterval(this["_licenseKeyCheckInterval"]);
    }, 1e3);
  }
  ["destroy"]() {
    clearInterval(this["_licenseKeyCheckInterval"]);
  }
  ["scrollToPage"](_0x518ddc) {
    if (!this["isEnabled"]) return;
    this["editor"]["plugins"]["get"](l6)["scrollToPage"](this["_validatePageNumber"](_0x518ddc));
  }
  ["moveSelectionToPage"](_0x5d4962) {
    if (!this["isEnabled"]) return;
    const _0x5b7258 = this["editor"], _0x58b1e4 = this["editor"]["plugins"]["get"](n7)["pageBreaks"][_0x5d4962 - 1];
    _0x58b1e4 && _0x5b7258["model"]["change"]((_0x479c2d) => {
      switch (_0x58b1e4["type"]) {
        case "manual": {
          const _0x55508d = _0x5b7258["model"]["schema"]["getNearestSelectionRange"](_0x58b1e4["modelRange"]["end"], "forward");
          _0x479c2d["setSelection"](_0x55508d);
          break;
        }
        case "element": {
          const _0x49b40d = _0x5b7258["model"]["schema"]["getNearestSelectionRange"](_0x58b1e4["modelRange"]["start"], "forward");
          _0x479c2d["setSelection"](_0x49b40d);
          break;
        }
        case "text": {
          const _0x1f359e = _0x58b1e4["modelRange"]["start"];
          if (" " === _0x1f359e["textNode"]["data"][_0x1f359e["offset"]]) {
            const _0x3a7f79 = _0x479c2d["createPositionAt"](_0x1f359e["parent"], _0x1f359e["offset"] + 1);
            _0x479c2d["setSelection"](_0x3a7f79);
          } else _0x479c2d["setSelection"](_0x58b1e4["modelRange"]);
        }
      }
      _0x5b7258["editing"]["view"]["focus"]();
    });
  }
  ["goToNextPage"]() {
    const _0x25efd8 = this["_validatePageNumber"](this["pageNumber"] + 1);
    this["moveSelectionToPage"](_0x25efd8), this["scrollToPage"](_0x25efd8);
  }
  ["goToPreviousPage"]() {
    const _0x48feb2 = this["_validatePageNumber"](this["pageNumber"] - 1);
    this["moveSelectionToPage"](_0x48feb2), this["scrollToPage"](_0x48feb2);
  }
  ["_updatePageBreakMarkers"](_0x115e8f, _0xdcbe69) {
    const _0x3a8fdd = this["editor"]["model"];
    this["isEnabled"] && _0x3a8fdd["change"]((_0x3ed5ba) => {
      for (let _0x470102 = 1; _0x470102 < _0x115e8f["length"]; _0x470102++) {
        const _0x2f0d09 = _0x115e8f[_0x470102]["modelRange"], _0xa85123 = "pagination:" + (_0x470102 + 1);
        _0x3a8fdd["markers"]["has"](_0xa85123) ? _0x3ed5ba["updateMarker"](_0xa85123, { "range": _0x2f0d09 }) : _0x3ed5ba["addMarker"](_0xa85123, { "range": _0x2f0d09, "usingOperation": false, "affectsData": true });
      }
      for (let _0x8747bf = _0x115e8f["length"]; _0x8747bf < _0xdcbe69["length"]; _0x8747bf++) {
        const _0x32d662 = "pagination:" + (_0x8747bf + 1);
        _0x3a8fdd["markers"]["has"](_0x32d662) && _0x3ed5ba["removeMarker"](_0x32d662);
      }
    });
  }
  ["_setUpDataDowncastConversion"]() {
    const _0x375a34 = "pagination";
    this["editor"]["conversion"]["for"]("dataDowncast")["add"]((_0x36d766) => {
      _0x36d766["on"]("addMarker:" + _0x375a34, (_0xe2ed9d, { markerRange: _0x2acc76, markerName: _0x2faef6 }, _0x43e496) => {
        if (!_0x43e496["options"]["pagination"]) return;
        if (!_0x43e496["consumable"]["consume"](_0x2acc76, _0xe2ed9d["name"])) return;
        const _0x3b2291 = _0x2acc76["getContainedElement"]();
        let _0x425317 = _0x3b2291 ? _0x43e496["mapper"]["toViewElement"](_0x3b2291) : null;
        if (!_0x425317) {
          const _0x3a1e1b = _0x2acc76["start"];
          if (_0x43e496["schema"]["checkChild"](_0x3a1e1b, "$text")) {
            const _0x59693e = _0x43e496["mapper"]["toViewPosition"](_0x3a1e1b);
            _0x425317 = _0x43e496["writer"]["createContainerElement"]("span"), _0x425317["getFillerOffset"] = () => null, _0x43e496["writer"]["insert"](_0x59693e, _0x425317);
          } else {
            const _0x37a3d2 = _0x3a1e1b["nodeAfter"];
            _0x425317 = _0x43e496["mapper"]["toViewElement"](_0x37a3d2);
          }
        }
        for (; _0x425317["parent"] !== _0x425317["root"] && 0 === _0x425317["index"]; ) _0x425317 = _0x425317["parent"];
        const _0xc04ba8 = _0x2faef6["substring"](11);
        _0x425317["hasClass"]("page-break") || (_0x43e496["writer"]["setStyle"]("page-break-before", "always", _0x425317), _0x43e496["writer"]["setAttribute"]("data-pagination-page", _0xc04ba8, _0x425317), _0x43e496["mapper"]["bindElementToMarker"](_0x425317, _0x2faef6)), _0xe2ed9d["stop"]();
      });
    });
  }
  ["_setupKeystrokes"]() {
    const _0xae157e = this["editor"];
    _0xae157e["keystrokes"]["set"]("Shift+Pageup", (_0x1a23ac, _0x40d90a) => {
      this["goToPreviousPage"](), _0x40d90a();
    }), _0xae157e["keystrokes"]["set"]("Shift+Pagedown", (_0x3afec3, _0x286b6e) => {
      this["goToNextPage"](), _0x286b6e();
    }), _0xae157e["accessibility"]["addKeystrokeInfoGroup"]({ "id": "pagination", "label": c7(_0xae157e["locale"], "Keystrokes for navigating through documents"), "keystrokes": [{ "label": c7(_0xae157e["locale"], "Go to the previous page (also move selection)"), "keystroke": "Shift+Pageup", "mayRequireFn": true }, { "label": c7(_0xae157e["locale"], "Go to the next page (also move selection)"), "keystroke": "Shift+Pagedown", "mayRequireFn": true }] });
  }
  ["_validatePageNumber"](_0x15724c) {
    return _0x15724c < 1 && (_0x15724c = 1), _0x15724c > this["totalPages"] && (_0x15724c = this["totalPages"]), _0x15724c;
  }
};
var j3 = class extends View {
  constructor(_0x5c59c9) {
    super(_0x5c59c9);
    __publicField(this, "pageNumberView");
    const _0x575fe5 = this["bindTemplate"];
    this["set"]({ "pageNumber": 1, "totalPages": 1, "isEnabled": true }), this["pageNumberView"] = new InputNumberView(_0x5c59c9, { "min": 1, "step": 1 }), this["pageNumberView"]["set"]({ "inputMode": "numeric", "tabIndex": -1 }), this["pageNumberView"]["bind"]("ariaLabel")["to"](this, "totalPages", (_0x506252) => c7(_0x5c59c9, "Current page number (from 1 to %0)", _0x506252)), this["pageNumberView"]["bind"]("max")["to"](this, "totalPages"), this["pageNumberView"]["bind"]("isReadOnly")["to"](this, "isEnabled", (_0x11a5bc) => !_0x11a5bc), this["setTemplate"]({ "tag": "div", "attributes": { "class": ["ck", "ck-page-navigator", _0x575fe5["if"]("isEnabled", "ck-disabled", (_0x1048d9) => !_0x1048d9)] }, "children": [this["pageNumberView"], { "tag": "span", "children": [{ "text": _0x575fe5["to"]("totalPages") }] }] });
  }
  ["render"]() {
    super["render"]();
    const _0x678334 = this["pageNumberView"]["element"], _0x1033f6 = (_0x187f19) => {
      this["pageNumberView"]["element"]["value"] = String(_0x187f19);
    };
    _0x1033f6(this["pageNumber"]), this["on"]("change:pageNumber", (_0x37b8cf, _0x3cfcc6, _0x36fd44) => {
      _0x1033f6(_0x36fd44);
    }), this["listenTo"](_0x678334, "keydown", (_0x29ae08, _0x554231) => {
      if ("ArrowUp" === _0x554231["key"] || "ArrowDown" === _0x554231["key"]) return void _0x554231["stopPropagation"]();
      if (_0x554231["keyCode"] !== keyCodes["enter"]) return;
      _0x554231["preventDefault"]();
      const _0xeb9355 = _0x678334["valueAsNumber"];
      Number["isNaN"](_0xeb9355) ? _0x678334["value"] = String(this["pageNumber"]) : (_0x678334["checkValidity"]() ? this["pageNumber"] = _0xeb9355 : _0xeb9355 > this["totalPages"] ? (this["pageNumber"] = this["totalPages"], _0x678334["value"] = String(this["totalPages"])) : (this["pageNumber"] = 1, _0x678334["value"] = "1"), this["fire"]("navigation", this["pageNumber"]));
    }), this["listenTo"](_0x678334, "blur", () => {
      _0x678334["value"] = String(this["pageNumber"]);
    }), this["listenTo"](_0x678334, "focus", () => {
      this["pageNumberView"]["select"]();
    });
  }
  ["focus"]() {
    this["element"]["firstChild"]["focus"]();
  }
};
var s8 = class extends Plugin {
  static get ["pluginName"]() {
    return "PaginationUI";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    const _0x3c342e = this["editor"], _0x25ba00 = _0x3c342e["plugins"]["get"]("PaginationEditing");
    _0x3c342e["ui"]["componentFactory"]["add"]("pageNavigation", (_0x3e73eb) => {
      const _0x1af73c = new j3(_0x3e73eb);
      return _0x1af73c["bind"]("pageNumber")["to"](_0x25ba00), _0x1af73c["bind"]("totalPages")["to"](_0x25ba00), _0x1af73c["bind"]("isEnabled")["to"](_0x25ba00), _0x1af73c["on"]("navigation", (_0x17f2c4, _0x6e4ba5) => {
        _0x25ba00["moveSelectionToPage"](_0x6e4ba5), _0x25ba00["scrollToPage"](_0x6e4ba5);
      }), _0x1af73c;
    }), _0x3c342e["ui"]["componentFactory"]["add"]("nextPage", (_0x435a74) => {
      const _0x206a43 = new ButtonView(_0x435a74);
      return _0x206a43["isEnabled"] = true, _0x206a43["label"] = c7(_0x3c342e["locale"], "Go to next page"), _0x206a43["icon"] = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10 .75a9.25 9.25 0 110 18.5 9.25 9.25 0 010-18.5zm0 1.5a7.75 7.75 0 100 15.5 7.75 7.75 0 000-15.5zm0 2.022a.75.75 0 01.743.649l.007.101v8.165l2.714-2.705a.75.75 0 01.977-.07l.084.072a.75.75 0 01.07.976l-.072.084-3.994 3.981a.75.75 0 01-.975.073l-.084-.073-3.99-3.98a.75.75 0 01.975-1.135l.085.072 2.71 2.706V5.022a.75.75 0 01.75-.75z"/></svg>\n', _0x206a43["tooltip"] = true, _0x206a43["keystroke"] = "Shift+PageDown", _0x206a43["bind"]("isEnabled")["to"](_0x25ba00), this["listenTo"](_0x206a43, "execute", () => {
        _0x25ba00["goToNextPage"]();
      }), _0x206a43;
    }), _0x3c342e["ui"]["componentFactory"]["add"]("previousPage", (_0x3cc1dc) => {
      const _0x16686e = new ButtonView(_0x3cc1dc);
      return _0x16686e["isEnabled"] = true, _0x16686e["label"] = c7(_0x3c342e["locale"], "Go to previous page"), _0x16686e["icon"] = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10 19.25a9.25 9.25 0 100-18.5 9.25 9.25 0 000 18.5zm0-1.5a7.75 7.75 0 110-15.5 7.75 7.75 0 010 15.5zm0-2.022a.75.75 0 00.743-.649l.007-.101V6.813l2.714 2.705a.75.75 0 00.977.07l.084-.072a.75.75 0 00.07-.976l-.072-.084-3.994-3.981a.75.75 0 00-.975-.073l-.084.073-3.99 3.98a.75.75 0 00.975 1.135l.085-.072 2.71-2.706v8.166c0 .414.336.75.75.75z"/></svg>\n', _0x16686e["tooltip"] = true, _0x16686e["keystroke"] = "Shift+PageUp", _0x16686e["bind"]("isEnabled")["to"](_0x25ba00), this["listenTo"](_0x16686e, "execute", () => {
        _0x25ba00["goToPreviousPage"]();
      }), _0x16686e;
    });
  }
};
var o9 = class extends Plugin {
  static get ["pluginName"]() {
    return "Pagination";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  static get ["requires"]() {
    return [r10, s8];
  }
  constructor(_0x2d6554) {
    super(_0x2d6554), this["isEnabled"] = false;
  }
  ["init"]() {
    this["set"]({ "pageNumber": 1, "totalPages": 1 });
    const _0x5ab824 = this["editor"]["plugins"]["get"](r10);
    this["bind"]("pageNumber")["to"](_0x5ab824), this["bind"]("totalPages")["to"](_0x5ab824), env["isBlink"] || this["editor"]["config"]["get"]("pagination.enableOnUnsupportedBrowsers") ? this["editor"]["on"]("ready", () => {
      this["isEnabled"] = true;
    }) : this["forceDisabled"]("browserCheck");
  }
  ["scrollToPage"](_0x203bf0) {
    this["editor"]["plugins"]["get"](r10)["scrollToPage"](_0x203bf0);
  }
};

// node_modules/@ckeditor/ckeditor5-paste-from-office-enhanced/dist/index.js
var m7 = /<meta\s*name="?generator"?\s*content="?microsoft\s*excel\s*\d+"?\/?>/i;
function d5(_0x39fab4) {
  return m7["test"](_0x39fab4);
}
var S5 = /^(?<tagName>(?!\.)[\w-]+)?(\.(?<className>[\w-]+))?$/i;
function x4(_0x106ef0, _0x532831) {
  const _0x3ece4f = /* @__PURE__ */ new Map();
  for (const [_0x4bfecd, _0x4d65e7] of _0x532831) {
    if (!_0x4bfecd["tagName"] && !_0x4bfecd["className"]) continue;
    const _0x3b2548 = !_0x4bfecd["tagName"] || _0x106ef0["name"] === _0x4bfecd["tagName"], _0x5b6cf1 = !_0x4bfecd["className"] || _0x106ef0["hasClass"](_0x4bfecd["className"]);
    _0x3b2548 && _0x5b6cf1 && _0x3ece4f["set"](_0x4bfecd, _0x4d65e7);
  }
  return _0x3ece4f;
}
function h5(_0x145ca4) {
  const _0x246f3a = {};
  for (let _0x3f6c59 = 0; _0x3f6c59 < _0x145ca4["length"]; _0x3f6c59++) {
    const _0x52ce5f = _0x145ca4[_0x3f6c59], _0x572537 = _0x145ca4["getPropertyValue"](_0x52ce5f);
    "initial" !== _0x572537 && (_0x246f3a[_0x52ce5f] = _0x572537);
  }
  return _0x246f3a;
}
function O4(_0x46c221) {
  const _0x1a366c = _0x46c221["split"](",")["map"]((_0x1775ec) => _0x1775ec["trim"]()), _0x49acdb = [];
  for (const _0x3fbd78 of _0x1a366c) {
    const _0x310bc1 = S5["exec"](_0x3fbd78);
    _0x310bc1 && _0x49acdb["push"](_0x310bc1["groups"]);
  }
  return _0x49acdb;
}
function y7(_0x3568c5) {
  const _0x3b3bde = {};
  for (const _0xc7f58a of _0x3568c5) Object["assign"](_0x3b3bde, _0xc7f58a);
  return _0x3b3bde;
}
var u4 = class extends MSWordNormalizer {
  ["execute"](_0x1c42f2) {
    const { body: _0x17b565, styles: _0x50efc3 } = _0x1c42f2["_parsedData"], _0x44c567 = new UpcastWriter(_0x17b565["document"]), _0x4836bd = _0x44c567["createRangeIn"](_0x17b565), _0xc8bdd0 = function(_0x1a582d) {
      const _0x1d40ad = {};
      for (const _0x36acce of _0x1a582d) for (const _0x4eca41 of _0x36acce["cssRules"]) if (_0x4eca41 instanceof CSSStyleRule) {
        const _0x2e992e = h5(_0x4eca41["style"]);
        _0x1d40ad[_0x4eca41["selectorText"]] = Object["assign"]({}, _0x1d40ad[_0x4eca41["selectorText"]] || {}, _0x2e992e);
      }
      return _0x1d40ad;
    }(_0x50efc3), _0x250dd8 = function(_0xf9dc3f) {
      const _0x1fb4c3 = /* @__PURE__ */ new Map();
      for (const _0x45edb2 in _0xf9dc3f) {
        const _0x1955fd = O4(_0x45edb2), _0x37d3c9 = _0xf9dc3f[_0x45edb2];
        for (const _0x27e479 of _0x1955fd) _0x1fb4c3["set"](_0x27e479, _0x37d3c9);
      }
      return _0x1fb4c3;
    }(_0xc8bdd0);
    for (const _0x1a8ef8 of _0x4836bd) {
      if ("elementStart" !== _0x1a8ef8["type"]) continue;
      const _0xd905d6 = x4(_0x1a8ef8["item"], _0x250dd8);
      if (_0xd905d6["size"]) {
        const _0x364c46 = y7(Array["from"](_0xd905d6["values"]()));
        for (const _0x58a9ae in _0x364c46) {
          const _0x153fba = _0x1a8ef8["item"];
          _0x153fba["hasStyle"](_0x58a9ae) || _0x44c567["setStyle"](_0x58a9ae, _0x364c46[_0x58a9ae], _0x153fba);
        }
      }
    }
    _0x1c42f2["content"] = _0x17b565;
  }
  ["isActive"](_0x222095) {
    return super["isActive"](_0x222095) || d5(_0x222095);
  }
};
var r11 = class extends Plugin {
  static get ["pluginName"]() {
    return "PasteFromOfficeEnhancedInliner";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  static get ["requires"]() {
    return ["PasteFromOffice"];
  }
  ["init"]() {
    const _0x250c6e = this["editor"], _0x42938f = _0x250c6e["plugins"]["get"]("ClipboardPipeline"), _0x103240 = _0x250c6e["editing"]["view"]["document"], _0x5d6847 = new u4(_0x103240);
    _0x42938f["on"]("inputTransformation", (_0x2c0c4b, _0x3dab18) => {
      const _0x269821 = _0x3dab18["dataTransfer"]["getData"]("text/html");
      _0x5d6847["isActive"](_0x269821) && (_0x3dab18["_parsedData"] || (_0x3dab18["_parsedData"] = parseHtml(_0x269821, _0x103240["stylesProcessor"])), _0x5d6847["execute"](_0x3dab18));
    }, { "priority": priorities["get"]("high") + 11 });
  }
  ["afterInit"]() {
    !function(_0x328eff) {
      function _0x2596c6(_0x2352f6, _0x3c9abb, _0xf56be) {
        const _0x2a923d = {};
        _0x2a923d[_0x381202([110, 117, 109, 98, 101, 114, 79, 102, 82, 111, 117, 110, 100, 115])] = { 16: 10, 24: 12, 32: 14 }, _0x2a923d[_0x381202([114, 99, 111, 110])] = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145], _0x2a923d[_0x381202([83])] = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], _0x2a923d[_0x381202([84, 49])] = [3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474, 1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738, 597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420, 3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577, 605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627, 2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520, 3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205, 2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474, 1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309, 3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720, 2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771, 1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243, 3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470, 1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977, 2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737, 1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754, 361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755, 697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986], _0x2a923d[_0x381202([84, 50])] = [2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899, 2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108, 4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129, 2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848, 1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043, 1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914, 1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139, 2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658, 3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324, 3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385, 3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499, 1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572, 2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810, 3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411, 3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753, 2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487, 550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313, 2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766], _0x2a923d[_0x381202([84, 51])] = [1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099, 1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188, 2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329, 1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768, 3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283, 3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114, 3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739, 2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538, 2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324, 1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865, 1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296, 844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713, 3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050, 2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131, 3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513, 2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927, 3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905, 2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126], _0x2a923d[_0x381202([84, 52])] = [1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549, 1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243, 2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529, 1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963, 3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198, 3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564, 3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214, 2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143, 2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699, 1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945, 1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771, 842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818, 3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340, 2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126, 3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473, 2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917, 3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930, 2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436], _0x2a923d[_0x381202([85, 49])] = [0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795], _0x2a923d[_0x381202([85, 50])] = [0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459, 2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537, 3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535, 77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884, 3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824, 3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622, 507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216, 3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879, 129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469, 3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175, 1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921, 2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127, 3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560, 1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387, 2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037, 4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148, 692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663, 2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855], _0x2a923d[_0x381202([85, 51])] = [0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639, 3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557, 2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032, 3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201, 344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239, 532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878, 3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771, 4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744, 671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199, 4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366, 492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798, 2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695, 3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569, 4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702, 3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217, 1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635, 1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009, 3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150], _0x2a923d[_0x381202([85, 52])] = [0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874, 2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222, 4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595, 1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591, 4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837, 923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127, 2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424, 2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110, 4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469, 4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481, 1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243, 3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604, 2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802, 585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166, 4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912, 1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703, 3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213, 2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925];
        const _0x3d07b4 = new Uint8Array(16);
        for (let _0x32b645 = 15; _0x32b645 >= 0; --_0x32b645) _0x3d07b4[_0x32b645] = _0xf56be % 256, _0xf56be = parseInt(_0xf56be / 256);
        let _0x42749d = null, _0x32eaa1 = 16;
        const _0x25d73f = new Uint8Array(_0x3c9abb), _0x28cac7 = [], _0x14328b = [];
        _0x3e18a1();
        for (let _0x432d1e = 0; _0x432d1e < _0x2352f6[_0x381202([108, 101, 110, 103, 116, 104])]; _0x432d1e++) 16 === _0x32eaa1 && (_0x42749d = _0x617814(_0x3d07b4), _0x32eaa1 = 0, _0x5c8f2a(_0x3d07b4)), _0x2352f6[_0x432d1e] ^= _0x42749d[_0x32eaa1++];
        return _0x2352f6;
        function _0x5c6469(_0x5b9c78) {
          const _0x3678da = [];
          for (let _0x316f40 = 0; _0x316f40 < _0x5b9c78[_0x381202([108, 101, 110, 103, 116, 104])]; _0x316f40 += 4) _0x3678da[_0x381202([112, 117, 115, 104])](_0x5b9c78[_0x316f40] << 24 | _0x5b9c78[_0x316f40 + 1] << 16 | _0x5b9c78[_0x316f40 + 2] << 8 | _0x5b9c78[_0x316f40 + 3]);
          return _0x3678da;
        }
        function _0x5c8f2a(_0xef84b9) {
          for (let _0x58a94c = 15; _0x58a94c >= 0; _0x58a94c--) {
            if (255 !== _0xef84b9[_0x58a94c]) {
              _0xef84b9[_0x58a94c]++;
              break;
            }
            _0xef84b9[_0x58a94c] = 0;
          }
        }
        function _0x617814(_0xd63dd4) {
          const _0x29bde3 = _0x28cac7[_0x381202([108, 101, 110, 103, 116, 104])] - 1, _0x23c60f = [0, 0, 0, 0];
          let t2 = _0x5c6469(_0xd63dd4);
          for (let _0x5a01c7 = 0; _0x5a01c7 < 4; _0x5a01c7++) t2[_0x5a01c7] ^= _0x28cac7[0][_0x5a01c7];
          for (let _0x5ca008 = 1; _0x5ca008 < _0x29bde3; _0x5ca008++) {
            for (let _0x316c7e = 0; _0x316c7e < 4; _0x316c7e++) _0x23c60f[_0x316c7e] = _0x2a923d[_0x381202([84, 49])][t2[_0x316c7e] >> 24 & 255] ^ _0x2a923d[_0x381202([84, 50])][t2[(_0x316c7e + 1) % 4] >> 16 & 255] ^ _0x2a923d[_0x381202([84, 51])][t2[(_0x316c7e + 2) % 4] >> 8 & 255] ^ _0x2a923d[_0x381202([84, 52])][255 & t2[(_0x316c7e + 3) % 4]] ^ _0x28cac7[_0x5ca008][_0x316c7e];
            t2 = _0x23c60f[_0x381202([115, 108, 105, 99, 101])]();
          }
          const _0x1690a9 = new Uint8Array(16);
          let _0x3b10cb;
          for (let _0x4274fb = 0; _0x4274fb < 4; _0x4274fb++) _0x3b10cb = _0x28cac7[_0x29bde3][_0x4274fb], _0x1690a9[4 * _0x4274fb] = 255 & (_0x2a923d[_0x381202([83])][t2[_0x4274fb] >> 24 & 255] ^ _0x3b10cb >> 24), _0x1690a9[4 * _0x4274fb + 1] = 255 & (_0x2a923d[_0x381202([83])][t2[(_0x4274fb + 1) % 4] >> 16 & 255] ^ _0x3b10cb >> 16), _0x1690a9[4 * _0x4274fb + 2] = 255 & (_0x2a923d[_0x381202([83])][t2[(_0x4274fb + 2) % 4] >> 8 & 255] ^ _0x3b10cb >> 8), _0x1690a9[4 * _0x4274fb + 3] = 255 & (_0x2a923d[_0x381202([83])][255 & t2[(_0x4274fb + 3) % 4]] ^ _0x3b10cb);
          return _0x1690a9;
        }
        function _0x3e18a1() {
          const _0x2f1164 = _0x2a923d[_0x381202([110, 117, 109, 98, 101, 114, 79, 102, 82, 111, 117, 110, 100, 115])][_0x25d73f[_0x381202([108, 101, 110, 103, 116, 104])]];
          for (let _0x2f72b1 = 0; _0x2f72b1 <= _0x2f1164; _0x2f72b1++) _0x28cac7[_0x381202([112, 117, 115, 104])]([0, 0, 0, 0]), _0x14328b[_0x381202([112, 117, 115, 104])]([0, 0, 0, 0]);
          const _0xc13139 = 4 * (_0x2f1164 + 1), _0x5a8a46 = _0x25d73f[_0x381202([108, 101, 110, 103, 116, 104])] / 4, _0x27d834 = _0x5c6469(_0x25d73f);
          let _0x44d76c;
          for (let _0x33e174 = 0; _0x33e174 < _0x5a8a46; _0x33e174++) _0x44d76c = _0x33e174 >> 2, _0x28cac7[_0x44d76c][_0x33e174 % 4] = _0x27d834[_0x33e174], _0x14328b[_0x2f1164 - _0x44d76c][_0x33e174 % 4] = _0x27d834[_0x33e174];
          let _0xc6caea, _0x20d5a2 = 0, t2 = _0x5a8a46;
          for (; t2 < _0xc13139; ) {
            _0xc6caea = _0x27d834[_0x5a8a46 - 1], _0x27d834[0] ^= _0x2a923d[_0x381202([83])][_0xc6caea >> 16 & 255] << 24 ^ _0x2a923d[_0x381202([83])][_0xc6caea >> 8 & 255] << 16 ^ _0x2a923d[_0x381202([83])][255 & _0xc6caea] << 8 ^ _0x2a923d[_0x381202([83])][_0xc6caea >> 24 & 255] ^ _0x2a923d[_0x381202([114, 99, 111, 110])][_0x20d5a2] << 24, _0x20d5a2 += 1;
            for (let _0x348ed9 = 1; _0x348ed9 < _0x5a8a46 / 2; _0x348ed9++) _0x27d834[_0x348ed9] ^= _0x27d834[_0x348ed9 - 1];
            _0xc6caea = _0x27d834[_0x5a8a46 / 2 - 1], _0x27d834[_0x5a8a46 / 2] ^= _0x2a923d[_0x381202([83])][255 & _0xc6caea] ^ _0x2a923d[_0x381202([83])][_0xc6caea >> 8 & 255] << 8 ^ _0x2a923d[_0x381202([83])][_0xc6caea >> 16 & 255] << 16 ^ _0x2a923d[_0x381202([83])][_0xc6caea >> 24 & 255] << 24;
            for (let _0x2afa4b = _0x5a8a46 / 2 + 1; _0x2afa4b < _0x5a8a46; _0x2afa4b++) _0x27d834[_0x2afa4b] ^= _0x27d834[_0x2afa4b - 1];
            let _0x10ee82, _0x18b6cf, _0x707456 = 0;
            for (; _0x707456 < _0x5a8a46 && t2 < _0xc13139; ) _0x10ee82 = t2 >> 2, _0x18b6cf = t2 % 4, _0x28cac7[_0x10ee82][_0x18b6cf] = _0x27d834[_0x707456], _0x14328b[_0x2f1164 - _0x10ee82][_0x18b6cf] = _0x27d834[_0x707456++], t2++;
          }
          for (let _0x16b683 = 1; _0x16b683 < _0x2f1164; _0x16b683++) for (let _0x138f7d = 0; _0x138f7d < 4; _0x138f7d++) _0xc6caea = _0x14328b[_0x16b683][_0x138f7d], _0x14328b[_0x16b683][_0x138f7d] = _0x2a923d[_0x381202([85, 49])][_0xc6caea >> 24 & 255] ^ _0x2a923d[_0x381202([85, 50])][_0xc6caea >> 16 & 255] ^ _0x2a923d[_0x381202([85, 51])][_0xc6caea >> 8 & 255] ^ _0x2a923d[_0x381202([85, 52])][255 & _0xc6caea];
        }
      }
      function _0x381202(_0x1560a5) {
        return _0x1560a5["map"]((_0x4ee236) => String["fromCharCode"](_0x4ee236))["join"]("");
      }
      ((_0x4124e9) => {
        function _0x57daa0() {
          const _0x39f626 = [{ [_0x381202([105, 100])]: 1, [_0x381202([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x381202([67, 111, 109, 109, 101, 110, 116, 115]), [_0x381202([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x381202([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]), [_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x381202([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x381202([104, 97, 110, 100, 108, 101, 114])]: _0x381202([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x381202([99, 104, 101, 99, 107, 65, 108, 115, 111])]: [{ [_0x381202([105, 100])]: 2, [_0x381202([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x381202([84, 114, 97, 99, 107, 32, 67, 104, 97, 110, 103, 101, 115]), [_0x381202([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x381202([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103]), [_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x381202([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x381202([104, 97, 110, 100, 108, 101, 114])]: _0x381202([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115]), [_0x381202([111, 112, 116, 105, 111, 110, 115])]: { [_0x381202([97, 105, 119, 115, 103, 105, 99])]: true, [_0x381202([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x381202([97, 105, 114, 118, 105, 105, 108])]: true } }], [_0x381202([111, 112, 116, 105, 111, 110, 115])]: { [_0x381202([97, 105, 119, 115, 103, 105, 99])]: true, [_0x381202([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x381202([97, 105, 114, 118, 105, 105, 108])]: true } }, { [_0x381202([105, 100])]: 3, [_0x381202([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x381202([80, 97, 103, 105, 110, 97, 116, 105, 111, 110]), [_0x381202([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x381202([80, 97, 103, 105, 110, 97, 116, 105, 111, 110, 76, 111, 111, 107, 117, 112]), [_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x381202([112, 97, 103, 105, 110, 97, 116, 105, 111, 110, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x381202([104, 97, 110, 100, 108, 101, 114])]: _0x381202([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x381202([105, 100])]: 4, [_0x381202([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x381202([82, 101, 118, 105, 115, 105, 111, 110, 32, 72, 105, 115, 116, 111, 114, 121]), [_0x381202([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x381202([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]), [_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x381202([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x381202([104, 97, 110, 100, 108, 101, 114])]: _0x381202([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 82, 101, 118, 105, 115, 105, 111, 110, 72, 105, 115, 116, 111, 114, 121]), [_0x381202([111, 112, 116, 105, 111, 110, 115])]: { [_0x381202([97, 105, 119, 115, 103, 105, 99])]: true, [_0x381202([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x381202([97, 105, 114, 118, 105, 105, 108])]: true } }, { [_0x381202([105, 100])]: 5, [_0x381202([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x381202([68, 111, 99, 117, 109, 101, 110, 116, 32, 79, 117, 116, 108, 105, 110, 101]), [_0x381202([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x381202([68, 111, 99, 117, 109, 101, 110, 116, 79, 117, 116, 108, 105, 110, 101, 85, 73]), [_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x381202([100, 111, 99, 117, 109, 101, 110, 116, 79, 117, 116, 108, 105, 110, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x381202([104, 97, 110, 100, 108, 101, 114])]: _0x381202([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x381202([111, 112, 116, 105, 111, 110, 115])]: { [_0x381202([102, 103, 105])]: [12] } }, { [_0x381202([105, 100])]: 6, [_0x381202([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x381202([70, 111, 114, 109, 97, 116, 32, 80, 97, 105, 110, 116, 101, 114]), [_0x381202([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x381202([70, 111, 114, 109, 97, 116, 80, 97, 105, 110, 116, 101, 114, 85, 73]), [_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x381202([102, 111, 114, 109, 97, 116, 80, 97, 105, 110, 116, 101, 114, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x381202([104, 97, 110, 100, 108, 101, 114])]: _0x381202([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x381202([111, 112, 116, 105, 111, 110, 115])]: { [_0x381202([102, 103, 105])]: [12] } }, { [_0x381202([105, 100])]: 7, [_0x381202([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x381202([83, 108, 97, 115, 104, 32, 67, 111, 109, 109, 97, 110, 100]), [_0x381202([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x381202([83, 108, 97, 115, 104, 67, 111, 109, 109, 97, 110, 100, 85, 73]), [_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x381202([115, 108, 97, 115, 104, 67, 111, 109, 109, 97, 110, 100, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x381202([104, 97, 110, 100, 108, 101, 114])]: _0x381202([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x381202([111, 112, 116, 105, 111, 110, 115])]: { [_0x381202([102, 103, 105])]: [12] } }, { [_0x381202([105, 100])]: 8, [_0x381202([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x381202([84, 97, 98, 108, 101, 32, 111, 102, 32, 67, 111, 110, 116, 101, 110, 116, 115]), [_0x381202([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x381202([84, 97, 98, 108, 101, 79, 102, 67, 111, 110, 116, 101, 110, 116, 115, 69, 100, 105, 116, 105, 110, 103]), [_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x381202([116, 97, 98, 108, 101, 79, 102, 67, 111, 110, 116, 101, 110, 116, 115, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x381202([104, 97, 110, 100, 108, 101, 114])]: _0x381202([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x381202([111, 112, 116, 105, 111, 110, 115])]: { [_0x381202([102, 103, 105])]: [12] } }, { [_0x381202([105, 100])]: 9, [_0x381202([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x381202([84, 101, 109, 112, 108, 97, 116, 101]), [_0x381202([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x381202([84, 101, 109, 112, 108, 97, 116, 101, 85, 73]), [_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x381202([116, 101, 109, 112, 108, 97, 116, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x381202([104, 97, 110, 100, 108, 101, 114])]: _0x381202([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x381202([111, 112, 116, 105, 111, 110, 115])]: { [_0x381202([102, 103, 105])]: [12, 14] } }, { [_0x381202([105, 100])]: 10, [_0x381202([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x381202([80, 97, 115, 116, 101, 32, 102, 114, 111, 109, 32, 79, 102, 102, 105, 99, 101, 32, 69, 110, 104, 97, 110, 99, 101, 100]), [_0x381202([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x381202([80, 97, 115, 116, 101, 70, 114, 111, 109, 79, 102, 102, 105, 99, 101, 69, 110, 104, 97, 110, 99, 101, 100, 73, 110, 108, 105, 110, 101, 114]), [_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x381202([112, 97, 115, 116, 101, 70, 114, 111, 109, 79, 102, 102, 105, 99, 101, 69, 110, 104, 97, 110, 99, 101, 100, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x381202([104, 97, 110, 100, 108, 101, 114])]: _0x381202([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x381202([111, 112, 116, 105, 111, 110, 115])]: { [_0x381202([102, 103, 105])]: [12] } }, { [_0x381202([105, 100])]: 11, [_0x381202([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x381202([65, 73, 32, 65, 115, 115, 105, 115, 116, 97, 110, 116]), [_0x381202([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x381202([65, 73, 65, 115, 115, 105, 115, 116, 97, 110, 116, 85, 73]), [_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x381202([97, 105, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x381202([104, 97, 110, 100, 108, 101, 114])]: _0x381202([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x381202([105, 100])]: 12, [_0x381202([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x381202([80, 114, 111, 100, 117, 99, 116, 105, 118, 105, 116, 121, 32, 112, 97, 99, 107]) }, { [_0x381202([105, 100])]: 13, [_0x381202([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x381202([67, 97, 115, 101, 32, 67, 104, 97, 110, 103, 101]), [_0x381202([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x381202([67, 97, 115, 101, 67, 104, 97, 110, 103, 101, 85, 73]), [_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x381202([99, 97, 115, 101, 67, 104, 97, 110, 103, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x381202([104, 97, 110, 100, 108, 101, 114])]: _0x381202([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x381202([111, 112, 116, 105, 111, 110, 115])]: { [_0x381202([102, 103, 105])]: [12] } }, { [_0x381202([105, 100])]: 14, [_0x381202([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x381202([68, 114, 117, 112, 97, 108, 32, 112, 97, 99, 107]), [_0x381202([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114])]: _0x381202([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114, 70, 111, 114, 68, 114, 117, 112, 97, 108]) }, { [_0x381202([105, 100])]: 15, [_0x381202([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x381202([77, 117, 108, 116, 105, 32, 76, 101, 118, 101, 108, 32, 76, 105, 115, 116]), [_0x381202([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x381202([77, 117, 108, 116, 105, 76, 101, 118, 101, 108, 76, 105, 115, 116, 69, 100, 105, 116, 105, 110, 103]), [_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x381202([109, 117, 108, 116, 105, 76, 101, 118, 101, 108, 76, 105, 115, 116, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x381202([104, 97, 110, 100, 108, 101, 114])]: _0x381202([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x381202([105, 100])]: 16, [_0x381202([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x381202([77, 101, 114, 103, 101, 32, 70, 105, 101, 108, 100, 115]), [_0x381202([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x381202([77, 101, 114, 103, 101, 70, 105, 101, 108, 100, 115, 85, 73]), [_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x381202([109, 101, 114, 103, 101, 70, 105, 101, 108, 100, 115, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x381202([104, 97, 110, 100, 108, 101, 114])]: _0x381202([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x381202([111, 112, 116, 105, 111, 110, 115])]: { [_0x381202([102, 103, 105])]: [12] } }];
          return _0x3e4de8(_0x39f626), _0x39f626;
          function _0x3115ff(_0xe1963c) {
            return 1 << _0xe1963c - 1;
          }
          function _0x3e4de8(_0x2900a4) {
            _0x2900a4[_0x381202([102, 111, 114, 69, 97, 99, 104])]((_0x304647) => {
              _0x304647[_0x381202([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])] = _0x3115ff(_0x304647[_0x381202([105, 100])]), _0x692bfb(_0x304647) && _0x304647[_0x381202([99, 104, 101, 99, 107, 65, 108, 115, 111])] && _0x3e4de8(_0x304647[_0x381202([99, 104, 101, 99, 107, 65, 108, 115, 111])]);
            });
          }
        }
        function _0x692bfb(_0x1f0c53) {
          return _0x381202([112, 108, 117, 103, 105, 110, 78, 97, 109, 101]) in _0x1f0c53;
        }
        const _0x2cbd4b = [1, 85, 78, 115, 198, 255, 50, 112, 83, 87, 161], _0x53be3f = [127, 34, 6, 211, 167, 86, 146, 199, 132, 160, 18];
        function _0x3d625f(_0x1c4cc1) {
          const _0x263ca2 = [29, 221, 175, 90, 231, 133, 239, 240, 75, 180];
          return _0x53b884(_0x1c4cc1, new Uint8Array([..._0x2cbd4b, ..._0x263ca2, ..._0x53be3f]));
        }
        function _0x53b884(_0x5f3291, _0x7d1859) {
          const _0x548d42 = _0xe7c044(_0x5f3291), _0x5c3624 = Array[_0x381202([102, 114, 111, 109])](_0xfc18a1(_0x548d42)), _0x2da58e = _0x5c3624[_0x381202([112, 111, 112])](), _0x5c86f1 = _0x5c3624[_0x381202([112, 111, 112])]();
          return _0x5123da(_0x2596c6(_0x5c3624, _0x7d1859, _0x5c86f1 + 256 * _0x2da58e));
        }
        function _0xe7c044(_0x4cf3bc) {
          const _0x4b6d27 = atob(_0x4cf3bc), [_0x261362, _0x2150cc] = _0x4b6d27[_0x381202([115, 112, 108, 105, 116])](_0x381202([45]));
          try {
            if (atob(_0x2150cc)) return atob(_0x261362);
          } catch (_0x20e832) {
          }
          return _0x4b6d27;
        }
        function _0x597d04(_0x363688) {
          try {
            const _0x1f5c92 = _0x3d625f(_0x363688), _0x24a2af = JSON[_0x381202([112, 97, 114, 115, 101])](_0x1f5c92), _0x1b3eea = parseInt(_0x24a2af[_0x381202([49])]), _0x365ec3 = _0x24a2af[_0x381202([50])] || "", _0x532d10 = parseInt(_0x24a2af[_0x381202([51])]), _0x4bb155 = parseInt(_0x24a2af[_0x381202([52])]) || 0, _0x5a634c = parseInt(_0x24a2af[_0x381202([53])]) || 0;
            return { [_0x381202([112, 114, 111, 100, 117, 99, 116, 78, 97, 109, 101])]: _0x365ec3, [_0x381202([97, 108, 108, 111, 119, 101, 100, 80, 108, 117, 103, 105, 110, 115])]: _0x4bb155, [_0x381202([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])]: _0x1b3eea, [_0x381202([105, 115, 84, 114, 105, 97, 108])]: _0x532d10, [_0x381202([105, 115, 73, 110, 116, 101, 114, 110, 97, 108])]: _0x5a634c };
          } catch (_0x389570) {
            return null;
          }
        }
        const _0x2f9a8b = _0x57daa0(), _0x384683 = { [_0x381202([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101])]: _0x24daa0, [_0x381202([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115])]: _0x55f8cb, [_0x381202([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 82, 101, 118, 105, 115, 105, 111, 110, 72, 105, 115, 116, 111, 114, 121])]: _0x5cd9eb }, _0x511972 = _0x4124e9[_0x381202([99, 111, 110, 115, 116, 114, 117, 99, 116, 111, 114])][_0x381202([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])], _0x26aae3 = _0x381202([99, 111, 110, 116, 101, 120, 116]) in _0x4124e9 ? _0x4124e9["context"] : _0x4124e9["editor"], _0x2e5ab8 = _0x381202([52, 48, 52, 56, 50, 50, 49, 50]), _0x26fe0f = _0x381202([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]), _0x117d6d = _0x26aae3["config"]["get"](_0x381202([108, 105, 99, 101, 110, 115, 101, 75, 101, 121])), _0x3e4a32 = _0x2f9a8b[_0x381202([102, 105, 108, 116, 101, 114])](_0x692bfb)[_0x381202([102, 105, 110, 100])]((_0x19e22c) => _0x19e22c[_0x381202([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])] === _0x511972);
        function _0x19a22f(_0x1b69d6, _0x23e467) {
          _0x384683[_0x23e467[_0x381202([104, 97, 110, 100, 108, 101, 114])]](_0x1b69d6, _0x23e467), _0x23e467[_0x381202([99, 104, 101, 99, 107, 65, 108, 115, 111])] && _0x23e467[_0x381202([99, 104, 101, 99, 107, 65, 108, 115, 111])][_0x381202([102, 105, 108, 116, 101, 114])]((_0x54e267) => _0x146db4(_0x26aae3, _0x54e267[_0x381202([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]))[_0x381202([102, 111, 114, 69, 97, 99, 104])]((_0x14571a) => _0x19a22f(_0x1b69d6, _0x14571a));
        }
        function _0x24daa0(_0x405288, _0x5908be) {
          _0xba7e23(_0x1339cd(_0x405288, _0x5908be), _0x5908be);
        }
        function _0x55f8cb(_0x5aa768, _0x26126a) {
          function _0x3e0077(_0x4a28d2, _0x497230) {
            try {
              if (_0x146db4(_0x26aae3, _0x381202([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103])) && _0x4a28d2) {
                const _0x1f7c66 = _0x1a3bc0(_0x26aae3, _0x381202([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103]))[_0x381202([95, 101, 120, 101, 99, 117, 116, 101, 83, 117, 103, 103, 101, 115, 116, 105, 111, 110])];
                if (parseInt(_0x1f7c66) / 2 > _0x4a28d2[_0x381202([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])]) return _0x5dc467(_0x497230[_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x381202([73, 110, 118, 97, 108, 105, 100]));
              }
              return _0x1339cd(_0x4a28d2, _0x497230);
            } catch (_0x2316a0) {
              return _0x5dc467(_0x497230[_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x381202([73, 110, 118, 97, 108, 105, 100]));
            }
          }
          _0xba7e23(_0x3e0077(_0x5aa768, _0x26126a), _0x26126a);
        }
        function _0x5cd9eb(_0xbe0099, _0x2d3caa) {
          const _0x4dfb85 = _0x53be3f[0] * _0x2cbd4b[1], _0x3a7d99 = _0x53be3f[0] * _0x2cbd4b[2], _0x2d0e07 = _0x53be3f[2] * _0x2cbd4b[2];
          _0x146db4(_0x26aae3, _0x381202([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121])) && _0x1a3bc0(_0x26aae3, _0x381202([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121]))[_0x381202([115, 116, 97, 116, 101])] == _0x381202([99, 111, 110, 110, 101, 99, 116, 101, 100]) && (window[_0x46b064()] = _0x2d0e07);
          function _0x44e0a8(_0x2b4815, _0x54b592) {
            try {
              return _0x4128ae() ? _0x5dc467(_0x54b592[_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x381202([86, 97, 108, 105, 100])) : _0x1339cd(_0x2b4815, _0x54b592);
            } catch (_0x5e28e4) {
              return _0x5dc467(_0x54b592[_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x381202([73, 110, 118, 97, 108, 105, 100]));
            }
          }
          function _0x5bc6e9(_0x198253, _0x271e1a) {
            const _0xfc2bc0 = 7;
            if (_0x198253 == _0x271e1a[_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x381202([73, 110, 118, 97, 108, 105, 100])) _0x1e7979();
            else {
              if (_0x198253 == _0x271e1a[_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x381202([84, 114, 105, 97, 108])) {
                const _0x2b299e = _0x2cfd20();
                _0x2b299e && _0x40ce42(_0x2b299e, _0x271e1a[_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                const _0x50ef0c = _0x390368();
                window[_0x381202([115, 101, 116, 84, 105, 109, 101, 111, 117, 116])](() => {
                  _0x40ce42(_0x381202([116, 105, 109, 101]), _0x271e1a[_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                }, _0x50ef0c);
                const _0x581901 = _0x1a3bc0(_0x26aae3, _0x381202([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x381202([95, 114, 101, 118, 105, 115, 105, 111, 110, 115])];
                _0x581901[_0x381202([108, 101, 110, 103, 116, 104])] >= _0xfc2bc0 ? _0x40ce42(_0x381202([114, 101, 118, 105, 115, 105, 111, 110, 115]), _0x271e1a[_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]) : _0x581901["on"](_0x381202([97, 100, 100]), () => {
                  _0x581901[_0x381202([108, 101, 110, 103, 116, 104])] >= _0xfc2bc0 && _0x40ce42(_0x381202([114, 101, 118, 105, 115, 105, 111, 110, 115]), _0x271e1a[_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                });
              }
            }
          }
          function _0x2cfd20() {
            if (!_0x146db4(_0x26aae3, _0x381202([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) return false;
            for (const _0x440c21 in window) if (Number["isNaN"](Number(_0x440c21))) {
              if (window[_0x440c21] === _0x4dfb85) return _0x381202([116, 105, 109, 101]);
              if (window[_0x440c21] === _0x3a7d99) return _0x381202([114, 101, 118, 105, 115, 105, 111, 110, 115]);
            }
            return false;
          }
          function _0x4128ae() {
            if (!_0x146db4(_0x26aae3, _0x381202([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) return false;
            for (const _0x28d29a in window) if (Number["isNaN"](Number(_0x28d29a)) && window[_0x28d29a] === _0x2d0e07) return true;
            return false;
          }
          function _0x40ce42(_0x3f16d7, _0x1aa878) {
            _0x1e7979(), _0x5dc467(_0x1aa878 + _0x381202([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58]) + _0x3f16d7), window[_0x46b064()] = _0x3f16d7 === _0x381202([116, 105, 109, 101]) ? _0x4dfb85 : _0x3a7d99;
          }
          function _0x390368() {
            let _0x202c8e = _0x53be3f[6] * _0x2cbd4b[8] * _0x2cbd4b[6];
            return _0x146db4(_0x26aae3, _0x381202([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114])) && (_0x202c8e /= 10), _0x202c8e;
          }
          function _0x1e7979() {
            const _0x2280ae = _0x26aae3;
            function _0x478897() {
              _0x146db4(_0x2280ae, _0x381202([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114])) && (_0x1a3bc0(_0x2280ae, _0x381202([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x381202([117, 110, 98, 105, 110, 100])](_0x381202([105, 115, 69, 110, 97, 98, 108, 101, 100])), _0x1a3bc0(_0x2280ae, _0x381202([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x381202([105, 115, 69, 110, 97, 98, 108, 101, 100])] = false, _0x1a3bc0(_0x2280ae, _0x381202([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x381202([117, 112, 100, 97, 116, 101])] = _0x152bbb, _0x1a3bc0(_0x2280ae, _0x381202([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x381202([115, 97, 118, 101, 82, 101, 118, 105, 115, 105, 111, 110])] = _0x152bbb, _0x2280ae[_0x381202([109, 111, 100, 101, 108])][_0x381202([99, 104, 97, 110, 103, 101])] = _0x152bbb, _0x2280ae[_0x381202([109, 111, 100, 101, 108])][_0x381202([101, 110, 113, 117, 101, 117, 101, 67, 104, 97, 110, 103, 101])] = _0x152bbb, _0x2280ae[_0x381202([101, 110, 97, 98, 108, 101, 82, 101, 97, 100, 79, 110, 108, 121, 77, 111, 100, 101])](_0x381202([109, 111, 100, 101, 108]))), _0x146db4(_0x2280ae, _0x381202([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114])) && (_0x1a3bc0(_0x2280ae, _0x381202([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x381202([117, 110, 98, 105, 110, 100])](_0x381202([105, 115, 69, 110, 97, 98, 108, 101, 100])), _0x1a3bc0(_0x2280ae, _0x381202([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x381202([105, 115, 69, 110, 97, 98, 108, 101, 100])] = false, _0x1a3bc0(_0x2280ae, _0x381202([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x381202([99, 111, 109, 112, 97, 114, 101])] = _0x152bbb, _0x1a3bc0(_0x2280ae, _0x381202([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x381202([95, 103, 101, 116, 68, 105, 102, 102])] = _0x152bbb);
            }
            _0x2280ae[_0x381202([115, 116, 97, 116, 101])] == _0x381202([114, 101, 97, 100, 121]) ? _0x478897() : _0x2280ae[_0x381202([111, 110, 99, 101])](_0x381202([114, 101, 97, 100, 121]), () => {
              if (_0x146db4(_0x2280ae, _0x381202([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114])) && _0x478897(), _0x146db4(_0x2280ae, _0x381202([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) {
                const _0x3df6f8 = _0x1a3bc0(_0x2280ae, _0x381202([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121])), _0x5555e9 = _0x3df6f8["getRevision"](0), _0x217a57 = _0x3df6f8["getEarlierVisibleRevision"](_0x5555e9[_0x381202([105, 100])]);
                _0x1a3bc0(_0x2280ae, _0x381202([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x381202([99, 111, 109, 112, 97, 114, 101])](_0x5555e9[_0x381202([105, 100])], _0x217a57 ? _0x217a57[_0x381202([105, 100])] : null, 1)["then"](() => _0x478897());
              }
            });
          }
          _0x5bc6e9(_0x44e0a8(_0xbe0099, _0x2d3caa), _0x2d3caa);
        }
        function _0x1339cd(_0x19601b, _0x258bce) {
          try {
            return _0x468ca5(_0x258bce) ? _0x5dc467(_0x258bce[_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x381202([86, 97, 108, 105, 100])) : _0x19601b && _0x465e10(_0x19601b[_0x381202([97, 108, 108, 111, 119, 101, 100, 80, 108, 117, 103, 105, 110, 115])], _0x258bce) ? _0x19601b[_0x381202([105, 115, 73, 110, 116, 101, 114, 110, 97, 108])] && !window[_0x381202([111, 112, 101, 110])][_0x381202([99, 108, 111, 115, 101, 100])] || parseInt(_0x2e5ab8) / 2 > _0x19601b[_0x381202([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])] ? _0x5dc467(_0x258bce[_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x381202([73, 110, 118, 97, 108, 105, 100])) : _0x19601b[_0x381202([105, 115, 84, 114, 105, 97, 108])] ? _0x5dc467(_0x258bce[_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x381202([84, 114, 105, 97, 108])) : _0x5dc467(_0x258bce[_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x381202([86, 97, 108, 105, 100])) : _0x5dc467(_0x258bce[_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x381202([73, 110, 118, 97, 108, 105, 100]));
          } catch (_0x176aee) {
            return _0x5dc467(_0x258bce[_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x381202([73, 110, 118, 97, 108, 105, 100]));
          }
        }
        function _0xba7e23(_0x5c29e5, _0x1636bf) {
          if (_0x26aae3 instanceof Context) {
            const _0x33f130 = _0x26aae3;
            _0x5c29e5 == _0x1636bf[_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x381202([73, 110, 118, 97, 108, 105, 100]) ? _0x42d068(_0x33f130) : _0x5c29e5 == _0x1636bf[_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x381202([84, 114, 105, 97, 108]) && window[_0x381202([115, 101, 116, 84, 105, 109, 101, 111, 117, 116])](() => {
              _0x42d068(_0x33f130), _0x5dc467(_0x1636bf[_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x381202([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 116, 105, 109, 101]));
            }, _0x53be3f[6] * _0x2cbd4b[8] * _0x2cbd4b[6]), _0x33f130[_0x381202([101, 100, 105, 116, 111, 114, 115])][_0x381202([111, 110])](_0x381202([97, 100, 100]), (_0x4522dd, _0x13e42c) => {
              _0x5c29e5 != _0x1636bf[_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x381202([73, 110, 118, 97, 108, 105, 100]) && _0x5c29e5 != _0x1636bf[_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x381202([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 116, 105, 109, 101]) && _0x5c29e5 != _0x1636bf[_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x381202([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 111, 112, 101, 114, 97, 116, 105, 111, 110, 115]) || _0x36653c(_0x13e42c);
            });
          } else {
            const _0x23488a = _0x26aae3;
            _0x5c29e5 == _0x1636bf[_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x381202([73, 110, 118, 97, 108, 105, 100]) ? _0x36653c(_0x23488a) : _0x5c29e5 == _0x1636bf[_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x381202([84, 114, 105, 97, 108]) && _0x23488a[_0x381202([111, 110])](_0x381202([114, 101, 97, 100, 121]), () => {
              let _0x512b4b = 0;
              _0x23488a[_0x381202([109, 111, 100, 101, 108])][_0x381202([111, 110])](_0x381202([97, 112, 112, 108, 121, 79, 112, 101, 114, 97, 116, 105, 111, 110]), (_0x27abd5, _0x41f40b) => {
                _0x41f40b[0][_0x381202([105, 115, 68, 111, 99, 117, 109, 101, 110, 116, 79, 112, 101, 114, 97, 116, 105, 111, 110])] && _0x512b4b++, 504 === _0x512b4b && (_0x36653c(_0x23488a), _0x5dc467(_0x1636bf[_0x381202([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x381202([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 111, 112, 101, 114, 97, 116, 105, 111, 110, 115])), _0x27abd5[_0x381202([111, 102, 102])]());
              }, { "priority": _0x381202([104, 105, 103, 104, 101, 115, 116]) });
            });
          }
        }
        function _0x5dc467(_0x235491) {
          const _0x2a0eef = _0x46b064();
          return _0x26aae3[_0x2a0eef] = _0x235491, _0x235491;
        }
        function _0x46b064() {
          const _0x231bf6 = String(window[_0x381202([112, 101, 114, 102, 111, 114, 109, 97, 110, 99, 101])][_0x381202([110, 111, 119])]())[_0x381202([114, 101, 112, 108, 97, 99, 101])](_0x381202([46]), "");
          let _0xb2c7b = "";
          for (let _0x427bda = 0; _0x427bda < _0x231bf6[_0x381202([108, 101, 110, 103, 116, 104])]; _0x427bda += 2) {
            let _0x534c70 = parseInt(_0x231bf6[_0x381202([115, 117, 98, 115, 116, 114, 105, 110, 103])](_0x427bda, _0x427bda + 2));
            _0x534c70 >= _0x26fe0f[_0x381202([108, 101, 110, 103, 116, 104])] && (_0x534c70 -= _0x26fe0f[_0x381202([108, 101, 110, 103, 116, 104])]), _0xb2c7b += _0x26fe0f[_0x534c70];
          }
          return _0xb2c7b;
        }
        function _0x42d068(_0xd78d5d) {
          for (const _0x5c0a12 of _0xd78d5d[_0x381202([101, 100, 105, 116, 111, 114, 115])]) _0x36653c(_0x5c0a12);
          _0x1a3bc0(_0xd78d5d, _0x381202([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x381202([115, 119, 105, 116, 99, 104, 82, 101, 97, 100, 79, 110, 108, 121])](true), _0x1a3bc0(_0xd78d5d, _0x381202([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x381202([115, 119, 105, 116, 99, 104, 82, 101, 97, 100, 79, 110, 108, 121])] = _0x152bbb;
        }
        function _0x36653c(_0x2d76eb) {
          function _0x283983() {
            _0x2d76eb[_0x381202([109, 111, 100, 101, 108])][_0x381202([99, 104, 97, 110, 103, 101])] = _0x152bbb, _0x2d76eb[_0x381202([109, 111, 100, 101, 108])][_0x381202([101, 110, 113, 117, 101, 117, 101, 67, 104, 97, 110, 103, 101])] = _0x152bbb, _0x2d76eb[_0x381202([101, 110, 97, 98, 108, 101, 82, 101, 97, 100, 79, 110, 108, 121, 77, 111, 100, 101])](_0x381202([109, 111, 100, 101, 108]));
          }
          _0x2d76eb[_0x381202([115, 116, 97, 116, 101])] == _0x381202([114, 101, 97, 100, 121]) ? _0x283983() : _0x2d76eb[_0x381202([111, 110, 99, 101])](_0x381202([114, 101, 97, 100, 121]), () => _0x283983());
        }
        function _0x152bbb() {
          return null;
        }
        function _0x465e10(_0x4196e0, _0x12cc4c) {
          const _0x225c4b = !!(_0x4196e0 & _0x12cc4c[_0x381202([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])]), _0x1ed76e = _0x2a64ce(_0x4196e0, _0x12cc4c);
          return _0x225c4b || _0x1ed76e;
        }
        function _0x2a64ce(_0x1e3667, _0x47dd1e) {
          const _0x52b0e9 = (_0x47dd1e[_0x381202([111, 112, 116, 105, 111, 110, 115])] || {})[_0x381202([102, 103, 105])] || null;
          return !!_0x52b0e9 && _0x2f9a8b[_0x381202([102, 105, 108, 116, 101, 114])]((_0x5701a4) => _0x52b0e9[_0x381202([105, 110, 99, 108, 117, 100, 101, 115])](_0x5701a4[_0x381202([105, 100])]))[_0x381202([102, 105, 108, 116, 101, 114])]((_0x3201c1) => !_0x999304(_0x3201c1))[_0x381202([115, 111, 109, 101])]((_0x50ee12) => !!(_0x1e3667 & _0x50ee12[_0x381202([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])]));
        }
        function _0x999304(_0x3ca389) {
          const _0x1c0771 = { [_0x381202([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114, 70, 111, 114, 68, 114, 117, 112, 97, 108])]: _0x1586b2 };
          return !!_0x3ca389["forbiddenHandler"] && _0x1c0771[_0x3ca389["forbiddenHandler"]]();
        }
        function _0x1586b2() {
          return !window[_0x381202([68, 114, 117, 112, 97, 108])] || !_0x146db4(_0x26aae3, _0x381202([100, 114, 117, 112, 97, 108, 80, 111, 119, 101, 114, 101, 100, 66, 121]));
        }
        function _0x468ca5(_0x5898c1) {
          if (!_0x146db4(_0x26aae3, _0x5898c1[_0x381202([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])])) return true;
          const _0x4e8251 = _0x5898c1[_0x381202([111, 112, 116, 105, 111, 110, 115])] || {}, _0x24e066 = _0x4e8251[_0x381202([97, 105, 119, 115, 103, 105, 99])] || false, _0x2c2990 = _0x4e8251[_0x381202([97, 105, 116, 99, 100, 103, 105, 108])] || false, _0x3a2194 = _0x4e8251[_0x381202([97, 105, 114, 118, 105, 105, 108])] || false;
          if (_0x146db4(_0x26aae3, _0x381202([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121])) && _0x1a3bc0(_0x26aae3, _0x381202([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121]))[_0x381202([115, 116, 97, 116, 101])] == _0x381202([99, 111, 110, 110, 101, 99, 116, 101, 100]) && _0x24e066) return true;
          if (_0x146db4(_0x26aae3, _0x381202([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 68, 97, 116, 97, 71, 101, 116, 116, 101, 114])) && _0x1a3bc0(_0x26aae3, _0x381202([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 68, 97, 116, 97, 71, 101, 116, 116, 101, 114]))[_0x381202([114, 101, 115, 117, 108, 116])] == _0x381202([101, 110, 100]) && _0x2c2990) return true;
          return !(!_0x146db4(_0x26aae3, _0x381202([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114, 73, 110, 116, 101, 103, 114, 97, 116, 105, 111, 110])) || _0x1a3bc0(_0x26aae3, _0x381202([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114, 73, 110, 116, 101, 103, 114, 97, 116, 105, 111, 110]))[_0x381202([114, 101, 115, 117, 108, 116])] != _0x381202([101, 110, 100]) || !_0x3a2194);
        }
        function _0x146db4(_0x4281f4, _0x947e1b) {
          return _0x4281f4[_0x381202([112, 108, 117, 103, 105, 110, 115])][_0x381202([104, 97, 115])](_0x947e1b);
        }
        function _0x1a3bc0(_0x3d07ec, _0x821c2e) {
          return _0x3d07ec[_0x381202([112, 108, 117, 103, 105, 110, 115])][_0x381202([103, 101, 116])](_0x821c2e);
        }
        function _0x5123da(_0x448b7e) {
          let _0x2edd3c = "";
          for (const _0x2b5eaa of _0x448b7e) _0x2edd3c += String[_0x381202([102, 114, 111, 109, 67, 104, 97, 114, 67, 111, 100, 101])](_0x2b5eaa);
          return _0x2edd3c;
        }
        function _0xfc18a1(_0x42dfbf) {
          const _0x5a23c6 = new Uint8Array(_0x42dfbf[_0x381202([108, 101, 110, 103, 116, 104])]);
          for (let _0xf6806b = 0; _0xf6806b < _0x42dfbf[_0x381202([108, 101, 110, 103, 116, 104])]; _0xf6806b++) _0x5a23c6[_0xf6806b] = _0x42dfbf[_0x381202([99, 104, 97, 114, 67, 111, 100, 101, 65, 116])](_0xf6806b);
          return _0x5a23c6;
        }
        _0x3e4a32 && _0x19a22f(_0x597d04(_0x117d6d), _0x3e4a32);
      })(_0x328eff);
    }(this);
  }
};
var P6 = ["color", "font-family", "font-size", "text-decoration", "text-decoration-line", "font-weight", "font-style", "vertical-align"];
var I2 = ["color", "font-family", "font-size"];
var E4 = { "font-style": [["italic", "i"]], "font-weight": [["medium", "strong"], ["bold", "strong"], ["bolder", "strong"], [(_0x158dbf) => Number(_0x158dbf) >= 600, "strong"]], "text-decoration": [["underline", "u"], ["line-through", "s"]], "text-decoration-line": [["underline", "u"], ["line-through", "s"]], "vertical-align": [["sub", "sub"], ["super", "sup"]] };
function F(_0x4fad3e) {
  return P6["includes"](_0x4fad3e);
}
function v8(_0x32b0d1, _0x3c775b, _0x1ec7b3) {
  const { spanStyles: _0x287e74, stylesToBeHtmlElements: _0x4719f2 } = function(_0x6b00d7, _0x365fe3) {
    const _0x1bcb86 = {}, _0x5d40f9 = {};
    return _0x365fe3["forEach"]((_0x5b37a0) => {
      const _0x1365d7 = _0x6b00d7["getStyle"](_0x5b37a0);
      if (_0x1365d7) {
        if (function(_0x3bd067) {
          return I2["includes"](_0x3bd067);
        }(_0x5b37a0)) _0x1bcb86[_0x5b37a0] = _0x1365d7;
        else {
          if (function(_0x282168) {
            return _0x282168 in E4;
          }(_0x5b37a0)) {
            const _0x679558 = _0x1365d7["split"](" ");
            E4[_0x5b37a0]["forEach"](([_0x2aa899, _0x523d22]) => {
              for (const _0x5d8fae of _0x679558) {
                ("function" == typeof _0x2aa899 && _0x2aa899(_0x5d8fae) || _0x2aa899 === _0x5d8fae) && (_0x5d40f9[_0x5b37a0] = [..._0x5d40f9[_0x5b37a0] || [], [_0x2aa899, _0x523d22]]);
              }
            });
          }
        }
      }
    }), { "spanStyles": _0x1bcb86, "stylesToBeHtmlElements": _0x5d40f9 };
  }(_0x32b0d1, _0x1ec7b3);
  !function(_0x66675b, _0x1e15cc, _0x485994) {
    for (const _0xa04e09 in _0x485994) {
      _0x485994[_0xa04e09]["forEach"](([, _0x153ba8]) => {
        const _0x215a3a = _0x1e15cc["createElement"](_0x153ba8, [], _0x66675b["getChildren"]());
        _0x1e15cc["insertChild"](0, _0x215a3a, _0x66675b);
      }), _0x1e15cc["removeStyle"](_0xa04e09, _0x66675b);
    }
  }(_0x32b0d1, _0x3c775b, _0x4719f2), function(_0x2f1622, _0x13fd47, _0x2fef24) {
    if (!Object["keys"](_0x2fef24)["length"]) return;
    const _0x1eebf3 = _0x13fd47["createElement"]("span", [], _0x2f1622["getChildren"]());
    _0x13fd47["setStyle"](_0x2fef24, _0x1eebf3), _0x13fd47["insertChild"](0, _0x1eebf3, _0x2f1622), _0x13fd47["removeStyle"](Object["keys"](_0x2fef24), _0x2f1622);
  }(_0x32b0d1, _0x3c775b, _0x287e74);
}
var l7 = class extends MSWordNormalizer {
  ["execute"](_0x3c994d) {
    const { body: _0x3119d6 } = _0x3c994d["_parsedData"], _0x3154b0 = new UpcastWriter(_0x3119d6["document"]), _0xa9788e = _0x3154b0["createRangeIn"](_0x3119d6), _0x375b0d = new Document$1(_0x3154b0["document"]["stylesProcessor"]), _0x28bb73 = [...new DomConverter(_0x375b0d)["blockElements"], "font"], _0x572367 = _0xa9788e["getItems"]();
    for (const _0x43057e of _0x572367) _0x43057e["is"]("element") && _0x28bb73["includes"](_0x43057e["name"]) && v8(_0x43057e, _0x3154b0, (_0x2081db = _0x43057e, Array["from"](_0x2081db["getStyleNames"]())["filter"](F)));
    var _0x2081db;
    _0x3c994d["content"] = _0x3119d6;
  }
  ["isActive"](_0x24b0fb) {
    return super["isActive"](_0x24b0fb) || d5(_0x24b0fb);
  }
};
var i6 = class extends Plugin {
  constructor(_0x523d3e) {
    super(_0x523d3e);
    __publicField(this, "_licenseKeyCheckInterval");
    this["_licenseKeyCheckInterval"] = null;
  }
  static get ["pluginName"]() {
    return "PasteFromOfficeEnhancedPropagator";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  static get ["requires"]() {
    return ["PasteFromOffice"];
  }
  ["init"]() {
    const _0x2e6530 = this["editor"], _0xdb8352 = _0x2e6530["plugins"]["get"]("ClipboardPipeline"), _0x28009a = _0x2e6530["editing"]["view"]["document"], _0x305435 = new l7(_0x28009a);
    _0xdb8352["on"]("inputTransformation", (_0x5db6d5, _0x12d458) => {
      const _0x9fa488 = _0x12d458["dataTransfer"]["getData"]("text/html");
      _0x305435["isActive"](_0x9fa488) && (_0x12d458["_parsedData"] || (_0x12d458["_parsedData"] = parseHtml(_0x9fa488, _0x28009a["stylesProcessor"])), _0x305435["execute"](_0x12d458));
    }, { "priority": priorities["get"]("high") + 10 }), this["licenseKey"] = _0x2e6530["config"]["get"]("licenseKey");
    const _0x4d1a5a = this["editor"];
    this["_licenseKeyCheckInterval"] = setInterval(() => {
      let _0x52abc3;
      for (const _0x4476fd in _0x4d1a5a) {
        const _0x14120f = _0x4476fd, _0x3f2d81 = _0x4d1a5a[_0x14120f];
        if ("pasteFromOfficeEnhancedLicenseKeyTrial" === _0x3f2d81 || "pasteFromOfficeEnhancedLicenseKeyInvalid" === _0x3f2d81 || "pasteFromOfficeEnhancedLicenseKeyValid" === _0x3f2d81 || "pasteFromOfficeEnhancedLicenseKeyTrialLimit:operations" === _0x3f2d81) {
          delete _0x4d1a5a[_0x14120f], _0x52abc3 = _0x3f2d81;
          break;
        }
      }
      if ("pasteFromOfficeEnhancedLicenseKeyInvalid" === _0x52abc3) throw clearInterval(this["_licenseKeyCheckInterval"]), new CKEditorError("paste-from-office-enhanced-invalid-license-key", null);
      if ("pasteFromOfficeEnhancedLicenseKeyTrial" === _0x52abc3 && console["info"]("You are using the trial version of CKEditor 5 Paste from Office Enhanced plugin with limited usage. Make sure you will not use it in the production environment."), "pasteFromOfficeEnhancedLicenseKeyTrialLimit:operations" === _0x52abc3) throw clearInterval(this["_licenseKeyCheckInterval"]), new CKEditorError("paste-from-office-enhanced-trial-license-key-reached-limit-changes", null);
      "pasteFromOfficeEnhancedLicenseKeyValid" === _0x52abc3 && clearInterval(this["_licenseKeyCheckInterval"]);
    }, 1e3);
  }
  ["destroy"]() {
    this["_licenseKeyCheckInterval"] && clearInterval(this["_licenseKeyCheckInterval"]);
  }
};
var s9 = class extends Plugin {
  static get ["pluginName"]() {
    return "PasteFromOfficeEnhanced";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  static get ["requires"]() {
    return ["PasteFromOffice", r11, i6];
  }
};

// node_modules/@ckeditor/ckeditor-cloud-services-collaboration/dist/index.js
var import_minimal = __toESM(require_minimal2());

// node_modules/engine.io-parser/build/esm/commons.js
var PACKET_TYPES = /* @__PURE__ */ Object.create(null);
PACKET_TYPES["open"] = "0";
PACKET_TYPES["close"] = "1";
PACKET_TYPES["ping"] = "2";
PACKET_TYPES["pong"] = "3";
PACKET_TYPES["message"] = "4";
PACKET_TYPES["upgrade"] = "5";
PACKET_TYPES["noop"] = "6";
var PACKET_TYPES_REVERSE = /* @__PURE__ */ Object.create(null);
Object.keys(PACKET_TYPES).forEach((key) => {
  PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;
});
var ERROR_PACKET = { type: "error", data: "parser error" };

// node_modules/engine.io-parser/build/esm/encodePacket.browser.js
var withNativeBlob = typeof Blob === "function" || typeof Blob !== "undefined" && Object.prototype.toString.call(Blob) === "[object BlobConstructor]";
var withNativeArrayBuffer = typeof ArrayBuffer === "function";
var isView = (obj) => {
  return typeof ArrayBuffer.isView === "function" ? ArrayBuffer.isView(obj) : obj && obj.buffer instanceof ArrayBuffer;
};
var encodePacket = ({ type, data }, supportsBinary, callback) => {
  if (withNativeBlob && data instanceof Blob) {
    if (supportsBinary) {
      return callback(data);
    } else {
      return encodeBlobAsBase64(data, callback);
    }
  } else if (withNativeArrayBuffer && (data instanceof ArrayBuffer || isView(data))) {
    if (supportsBinary) {
      return callback(data);
    } else {
      return encodeBlobAsBase64(new Blob([data]), callback);
    }
  }
  return callback(PACKET_TYPES[type] + (data || ""));
};
var encodeBlobAsBase64 = (data, callback) => {
  const fileReader = new FileReader();
  fileReader.onload = function() {
    const content = fileReader.result.split(",")[1];
    callback("b" + (content || ""));
  };
  return fileReader.readAsDataURL(data);
};
function toArray(data) {
  if (data instanceof Uint8Array) {
    return data;
  } else if (data instanceof ArrayBuffer) {
    return new Uint8Array(data);
  } else {
    return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);
  }
}
var TEXT_ENCODER2;
function encodePacketToBinary(packet, callback) {
  if (withNativeBlob && packet.data instanceof Blob) {
    return packet.data.arrayBuffer().then(toArray).then(callback);
  } else if (withNativeArrayBuffer && (packet.data instanceof ArrayBuffer || isView(packet.data))) {
    return callback(toArray(packet.data));
  }
  encodePacket(packet, false, (encoded) => {
    if (!TEXT_ENCODER2) {
      TEXT_ENCODER2 = new TextEncoder();
    }
    callback(TEXT_ENCODER2.encode(encoded));
  });
}

// node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js
var chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
var lookup = typeof Uint8Array === "undefined" ? [] : new Uint8Array(256);
for (let i11 = 0; i11 < chars.length; i11++) {
  lookup[chars.charCodeAt(i11)] = i11;
}
var decode = (base64) => {
  let bufferLength = base64.length * 0.75, len = base64.length, i11, p11 = 0, encoded1, encoded2, encoded3, encoded4;
  if (base64[base64.length - 1] === "=") {
    bufferLength--;
    if (base64[base64.length - 2] === "=") {
      bufferLength--;
    }
  }
  const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);
  for (i11 = 0; i11 < len; i11 += 4) {
    encoded1 = lookup[base64.charCodeAt(i11)];
    encoded2 = lookup[base64.charCodeAt(i11 + 1)];
    encoded3 = lookup[base64.charCodeAt(i11 + 2)];
    encoded4 = lookup[base64.charCodeAt(i11 + 3)];
    bytes[p11++] = encoded1 << 2 | encoded2 >> 4;
    bytes[p11++] = (encoded2 & 15) << 4 | encoded3 >> 2;
    bytes[p11++] = (encoded3 & 3) << 6 | encoded4 & 63;
  }
  return arraybuffer;
};

// node_modules/engine.io-parser/build/esm/decodePacket.browser.js
var withNativeArrayBuffer2 = typeof ArrayBuffer === "function";
var decodePacket = (encodedPacket, binaryType) => {
  if (typeof encodedPacket !== "string") {
    return {
      type: "message",
      data: mapBinary(encodedPacket, binaryType)
    };
  }
  const type = encodedPacket.charAt(0);
  if (type === "b") {
    return {
      type: "message",
      data: decodeBase64Packet(encodedPacket.substring(1), binaryType)
    };
  }
  const packetType = PACKET_TYPES_REVERSE[type];
  if (!packetType) {
    return ERROR_PACKET;
  }
  return encodedPacket.length > 1 ? {
    type: PACKET_TYPES_REVERSE[type],
    data: encodedPacket.substring(1)
  } : {
    type: PACKET_TYPES_REVERSE[type]
  };
};
var decodeBase64Packet = (data, binaryType) => {
  if (withNativeArrayBuffer2) {
    const decoded = decode(data);
    return mapBinary(decoded, binaryType);
  } else {
    return { base64: true, data };
  }
};
var mapBinary = (data, binaryType) => {
  switch (binaryType) {
    case "blob":
      if (data instanceof Blob) {
        return data;
      } else {
        return new Blob([data]);
      }
    case "arraybuffer":
    default:
      if (data instanceof ArrayBuffer) {
        return data;
      } else {
        return data.buffer;
      }
  }
};

// node_modules/engine.io-parser/build/esm/index.js
var SEPARATOR = String.fromCharCode(30);
var encodePayload = (packets, callback) => {
  const length2 = packets.length;
  const encodedPackets = new Array(length2);
  let count = 0;
  packets.forEach((packet, i11) => {
    encodePacket(packet, false, (encodedPacket) => {
      encodedPackets[i11] = encodedPacket;
      if (++count === length2) {
        callback(encodedPackets.join(SEPARATOR));
      }
    });
  });
};
var decodePayload = (encodedPayload, binaryType) => {
  const encodedPackets = encodedPayload.split(SEPARATOR);
  const packets = [];
  for (let i11 = 0; i11 < encodedPackets.length; i11++) {
    const decodedPacket = decodePacket(encodedPackets[i11], binaryType);
    packets.push(decodedPacket);
    if (decodedPacket.type === "error") {
      break;
    }
  }
  return packets;
};
function createPacketEncoderStream() {
  return new TransformStream({
    transform(packet, controller) {
      encodePacketToBinary(packet, (encodedPacket) => {
        const payloadLength = encodedPacket.length;
        let header;
        if (payloadLength < 126) {
          header = new Uint8Array(1);
          new DataView(header.buffer).setUint8(0, payloadLength);
        } else if (payloadLength < 65536) {
          header = new Uint8Array(3);
          const view = new DataView(header.buffer);
          view.setUint8(0, 126);
          view.setUint16(1, payloadLength);
        } else {
          header = new Uint8Array(9);
          const view = new DataView(header.buffer);
          view.setUint8(0, 127);
          view.setBigUint64(1, BigInt(payloadLength));
        }
        if (packet.data && typeof packet.data !== "string") {
          header[0] |= 128;
        }
        controller.enqueue(header);
        controller.enqueue(encodedPacket);
      });
    }
  });
}
var TEXT_DECODER;
function totalLength(chunks) {
  return chunks.reduce((acc, chunk) => acc + chunk.length, 0);
}
function concatChunks(chunks, size) {
  if (chunks[0].length === size) {
    return chunks.shift();
  }
  const buffer = new Uint8Array(size);
  let j5 = 0;
  for (let i11 = 0; i11 < size; i11++) {
    buffer[i11] = chunks[0][j5++];
    if (j5 === chunks[0].length) {
      chunks.shift();
      j5 = 0;
    }
  }
  if (chunks.length && j5 < chunks[0].length) {
    chunks[0] = chunks[0].slice(j5);
  }
  return buffer;
}
function createPacketDecoderStream(maxPayload, binaryType) {
  if (!TEXT_DECODER) {
    TEXT_DECODER = new TextDecoder();
  }
  const chunks = [];
  let state = 0;
  let expectedLength = -1;
  let isBinary2 = false;
  return new TransformStream({
    transform(chunk, controller) {
      chunks.push(chunk);
      while (true) {
        if (state === 0) {
          if (totalLength(chunks) < 1) {
            break;
          }
          const header = concatChunks(chunks, 1);
          isBinary2 = (header[0] & 128) === 128;
          expectedLength = header[0] & 127;
          if (expectedLength < 126) {
            state = 3;
          } else if (expectedLength === 126) {
            state = 1;
          } else {
            state = 2;
          }
        } else if (state === 1) {
          if (totalLength(chunks) < 2) {
            break;
          }
          const headerArray = concatChunks(chunks, 2);
          expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);
          state = 3;
        } else if (state === 2) {
          if (totalLength(chunks) < 8) {
            break;
          }
          const headerArray = concatChunks(chunks, 8);
          const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);
          const n11 = view.getUint32(0);
          if (n11 > Math.pow(2, 53 - 32) - 1) {
            controller.enqueue(ERROR_PACKET);
            break;
          }
          expectedLength = n11 * Math.pow(2, 32) + view.getUint32(4);
          state = 3;
        } else {
          if (totalLength(chunks) < expectedLength) {
            break;
          }
          const data = concatChunks(chunks, expectedLength);
          controller.enqueue(decodePacket(isBinary2 ? data : TEXT_DECODER.decode(data), binaryType));
          state = 0;
        }
        if (expectedLength === 0 || expectedLength > maxPayload) {
          controller.enqueue(ERROR_PACKET);
          break;
        }
      }
    }
  });
}
var protocol = 4;

// node_modules/@socket.io/component-emitter/lib/esm/index.js
function Emitter(obj) {
  if (obj) return mixin(obj);
}
function mixin(obj) {
  for (var key in Emitter.prototype) {
    obj[key] = Emitter.prototype[key];
  }
  return obj;
}
Emitter.prototype.on = Emitter.prototype.addEventListener = function(event, fn) {
  this._callbacks = this._callbacks || {};
  (this._callbacks["$" + event] = this._callbacks["$" + event] || []).push(fn);
  return this;
};
Emitter.prototype.once = function(event, fn) {
  function on3() {
    this.off(event, on3);
    fn.apply(this, arguments);
  }
  on3.fn = fn;
  this.on(event, on3);
  return this;
};
Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function(event, fn) {
  this._callbacks = this._callbacks || {};
  if (0 == arguments.length) {
    this._callbacks = {};
    return this;
  }
  var callbacks = this._callbacks["$" + event];
  if (!callbacks) return this;
  if (1 == arguments.length) {
    delete this._callbacks["$" + event];
    return this;
  }
  var cb;
  for (var i11 = 0; i11 < callbacks.length; i11++) {
    cb = callbacks[i11];
    if (cb === fn || cb.fn === fn) {
      callbacks.splice(i11, 1);
      break;
    }
  }
  if (callbacks.length === 0) {
    delete this._callbacks["$" + event];
  }
  return this;
};
Emitter.prototype.emit = function(event) {
  this._callbacks = this._callbacks || {};
  var args = new Array(arguments.length - 1), callbacks = this._callbacks["$" + event];
  for (var i11 = 1; i11 < arguments.length; i11++) {
    args[i11 - 1] = arguments[i11];
  }
  if (callbacks) {
    callbacks = callbacks.slice(0);
    for (var i11 = 0, len = callbacks.length; i11 < len; ++i11) {
      callbacks[i11].apply(this, args);
    }
  }
  return this;
};
Emitter.prototype.emitReserved = Emitter.prototype.emit;
Emitter.prototype.listeners = function(event) {
  this._callbacks = this._callbacks || {};
  return this._callbacks["$" + event] || [];
};
Emitter.prototype.hasListeners = function(event) {
  return !!this.listeners(event).length;
};

// node_modules/engine.io-client/build/esm/globalThis.browser.js
var globalThisShim = (() => {
  if (typeof self !== "undefined") {
    return self;
  } else if (typeof window !== "undefined") {
    return window;
  } else {
    return Function("return this")();
  }
})();

// node_modules/engine.io-client/build/esm/util.js
function pick(obj, ...attr) {
  return attr.reduce((acc, k8) => {
    if (obj.hasOwnProperty(k8)) {
      acc[k8] = obj[k8];
    }
    return acc;
  }, {});
}
var NATIVE_SET_TIMEOUT = globalThisShim.setTimeout;
var NATIVE_CLEAR_TIMEOUT = globalThisShim.clearTimeout;
function installTimerFunctions(obj, opts) {
  if (opts.useNativeTimers) {
    obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThisShim);
    obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThisShim);
  } else {
    obj.setTimeoutFn = globalThisShim.setTimeout.bind(globalThisShim);
    obj.clearTimeoutFn = globalThisShim.clearTimeout.bind(globalThisShim);
  }
}
var BASE64_OVERHEAD = 1.33;
function byteLength(obj) {
  if (typeof obj === "string") {
    return utf8Length(obj);
  }
  return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);
}
function utf8Length(str) {
  let c11 = 0, length2 = 0;
  for (let i11 = 0, l12 = str.length; i11 < l12; i11++) {
    c11 = str.charCodeAt(i11);
    if (c11 < 128) {
      length2 += 1;
    } else if (c11 < 2048) {
      length2 += 2;
    } else if (c11 < 55296 || c11 >= 57344) {
      length2 += 3;
    } else {
      i11++;
      length2 += 4;
    }
  }
  return length2;
}

// node_modules/engine.io-client/build/esm/contrib/parseqs.js
function encode(obj) {
  let str = "";
  for (let i11 in obj) {
    if (obj.hasOwnProperty(i11)) {
      if (str.length)
        str += "&";
      str += encodeURIComponent(i11) + "=" + encodeURIComponent(obj[i11]);
    }
  }
  return str;
}
function decode2(qs) {
  let qry = {};
  let pairs = qs.split("&");
  for (let i11 = 0, l12 = pairs.length; i11 < l12; i11++) {
    let pair = pairs[i11].split("=");
    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);
  }
  return qry;
}

// node_modules/engine.io-client/build/esm/transport.js
var TransportError = class extends Error {
  constructor(reason, description, context) {
    super(reason);
    this.description = description;
    this.context = context;
    this.type = "TransportError";
  }
};
var Transport = class extends Emitter {
  /**
   * Transport abstract constructor.
   *
   * @param {Object} opts - options
   * @protected
   */
  constructor(opts) {
    super();
    this.writable = false;
    installTimerFunctions(this, opts);
    this.opts = opts;
    this.query = opts.query;
    this.socket = opts.socket;
  }
  /**
   * Emits an error.
   *
   * @param {String} reason
   * @param description
   * @param context - the error context
   * @return {Transport} for chaining
   * @protected
   */
  onError(reason, description, context) {
    super.emitReserved("error", new TransportError(reason, description, context));
    return this;
  }
  /**
   * Opens the transport.
   */
  open() {
    this.readyState = "opening";
    this.doOpen();
    return this;
  }
  /**
   * Closes the transport.
   */
  close() {
    if (this.readyState === "opening" || this.readyState === "open") {
      this.doClose();
      this.onClose();
    }
    return this;
  }
  /**
   * Sends multiple packets.
   *
   * @param {Array} packets
   */
  send(packets) {
    if (this.readyState === "open") {
      this.write(packets);
    } else {
    }
  }
  /**
   * Called upon open
   *
   * @protected
   */
  onOpen() {
    this.readyState = "open";
    this.writable = true;
    super.emitReserved("open");
  }
  /**
   * Called with data.
   *
   * @param {String} data
   * @protected
   */
  onData(data) {
    const packet = decodePacket(data, this.socket.binaryType);
    this.onPacket(packet);
  }
  /**
   * Called with a decoded packet.
   *
   * @protected
   */
  onPacket(packet) {
    super.emitReserved("packet", packet);
  }
  /**
   * Called upon close.
   *
   * @protected
   */
  onClose(details) {
    this.readyState = "closed";
    super.emitReserved("close", details);
  }
  /**
   * Pauses the transport, in order not to lose packets during an upgrade.
   *
   * @param onPause
   */
  pause(onPause) {
  }
  createUri(schema, query = {}) {
    return schema + "://" + this._hostname() + this._port() + this.opts.path + this._query(query);
  }
  _hostname() {
    const hostname = this.opts.hostname;
    return hostname.indexOf(":") === -1 ? hostname : "[" + hostname + "]";
  }
  _port() {
    if (this.opts.port && (this.opts.secure && Number(this.opts.port !== 443) || !this.opts.secure && Number(this.opts.port) !== 80)) {
      return ":" + this.opts.port;
    } else {
      return "";
    }
  }
  _query(query) {
    const encodedQuery = encode(query);
    return encodedQuery.length ? "?" + encodedQuery : "";
  }
};

// node_modules/engine.io-client/build/esm/contrib/yeast.js
var alphabet = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_".split("");
var length = 64;
var map2 = {};
var seed = 0;
var i7 = 0;
var prev;
function encode2(num) {
  let encoded = "";
  do {
    encoded = alphabet[num % length] + encoded;
    num = Math.floor(num / length);
  } while (num > 0);
  return encoded;
}
function yeast() {
  const now2 = encode2(+/* @__PURE__ */ new Date());
  if (now2 !== prev)
    return seed = 0, prev = now2;
  return now2 + "." + encode2(seed++);
}
for (; i7 < length; i7++)
  map2[alphabet[i7]] = i7;

// node_modules/engine.io-client/build/esm/contrib/has-cors.js
var value = false;
try {
  value = typeof XMLHttpRequest !== "undefined" && "withCredentials" in new XMLHttpRequest();
} catch (err) {
}
var hasCORS = value;

// node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js
function XHR(opts) {
  const xdomain = opts.xdomain;
  try {
    if ("undefined" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {
      return new XMLHttpRequest();
    }
  } catch (e9) {
  }
  if (!xdomain) {
    try {
      return new globalThisShim[["Active"].concat("Object").join("X")]("Microsoft.XMLHTTP");
    } catch (e9) {
    }
  }
}
function createCookieJar() {
}

// node_modules/engine.io-client/build/esm/transports/polling.js
function empty() {
}
var hasXHR2 = function() {
  const xhr = new XHR({
    xdomain: false
  });
  return null != xhr.responseType;
}();
var Polling = class extends Transport {
  /**
   * XHR Polling constructor.
   *
   * @param {Object} opts
   * @package
   */
  constructor(opts) {
    super(opts);
    this.polling = false;
    if (typeof location !== "undefined") {
      const isSSL = "https:" === location.protocol;
      let port = location.port;
      if (!port) {
        port = isSSL ? "443" : "80";
      }
      this.xd = typeof location !== "undefined" && opts.hostname !== location.hostname || port !== opts.port;
    }
    const forceBase64 = opts && opts.forceBase64;
    this.supportsBinary = hasXHR2 && !forceBase64;
    if (this.opts.withCredentials) {
      this.cookieJar = createCookieJar();
    }
  }
  get name() {
    return "polling";
  }
  /**
   * Opens the socket (triggers polling). We write a PING message to determine
   * when the transport is open.
   *
   * @protected
   */
  doOpen() {
    this.poll();
  }
  /**
   * Pauses polling.
   *
   * @param {Function} onPause - callback upon buffers are flushed and transport is paused
   * @package
   */
  pause(onPause) {
    this.readyState = "pausing";
    const pause = () => {
      this.readyState = "paused";
      onPause();
    };
    if (this.polling || !this.writable) {
      let total = 0;
      if (this.polling) {
        total++;
        this.once("pollComplete", function() {
          --total || pause();
        });
      }
      if (!this.writable) {
        total++;
        this.once("drain", function() {
          --total || pause();
        });
      }
    } else {
      pause();
    }
  }
  /**
   * Starts polling cycle.
   *
   * @private
   */
  poll() {
    this.polling = true;
    this.doPoll();
    this.emitReserved("poll");
  }
  /**
   * Overloads onData to detect payloads.
   *
   * @protected
   */
  onData(data) {
    const callback = (packet) => {
      if ("opening" === this.readyState && packet.type === "open") {
        this.onOpen();
      }
      if ("close" === packet.type) {
        this.onClose({ description: "transport closed by the server" });
        return false;
      }
      this.onPacket(packet);
    };
    decodePayload(data, this.socket.binaryType).forEach(callback);
    if ("closed" !== this.readyState) {
      this.polling = false;
      this.emitReserved("pollComplete");
      if ("open" === this.readyState) {
        this.poll();
      } else {
      }
    }
  }
  /**
   * For polling, send a close packet.
   *
   * @protected
   */
  doClose() {
    const close = () => {
      this.write([{ type: "close" }]);
    };
    if ("open" === this.readyState) {
      close();
    } else {
      this.once("open", close);
    }
  }
  /**
   * Writes a packets payload.
   *
   * @param {Array} packets - data packets
   * @protected
   */
  write(packets) {
    this.writable = false;
    encodePayload(packets, (data) => {
      this.doWrite(data, () => {
        this.writable = true;
        this.emitReserved("drain");
      });
    });
  }
  /**
   * Generates uri for connection.
   *
   * @private
   */
  uri() {
    const schema = this.opts.secure ? "https" : "http";
    const query = this.query || {};
    if (false !== this.opts.timestampRequests) {
      query[this.opts.timestampParam] = yeast();
    }
    if (!this.supportsBinary && !query.sid) {
      query.b64 = 1;
    }
    return this.createUri(schema, query);
  }
  /**
   * Creates a request.
   *
   * @param {String} method
   * @private
   */
  request(opts = {}) {
    Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);
    return new Request2(this.uri(), opts);
  }
  /**
   * Sends data.
   *
   * @param {String} data to send.
   * @param {Function} called upon flush.
   * @private
   */
  doWrite(data, fn) {
    const req = this.request({
      method: "POST",
      data
    });
    req.on("success", fn);
    req.on("error", (xhrStatus, context) => {
      this.onError("xhr post error", xhrStatus, context);
    });
  }
  /**
   * Starts a poll cycle.
   *
   * @private
   */
  doPoll() {
    const req = this.request();
    req.on("data", this.onData.bind(this));
    req.on("error", (xhrStatus, context) => {
      this.onError("xhr poll error", xhrStatus, context);
    });
    this.pollXhr = req;
  }
};
var Request2 = class _Request extends Emitter {
  /**
   * Request constructor
   *
   * @param {Object} options
   * @package
   */
  constructor(uri, opts) {
    super();
    installTimerFunctions(this, opts);
    this.opts = opts;
    this.method = opts.method || "GET";
    this.uri = uri;
    this.data = void 0 !== opts.data ? opts.data : null;
    this.create();
  }
  /**
   * Creates the XHR object and sends the request.
   *
   * @private
   */
  create() {
    var _a5;
    const opts = pick(this.opts, "agent", "pfx", "key", "passphrase", "cert", "ca", "ciphers", "rejectUnauthorized", "autoUnref");
    opts.xdomain = !!this.opts.xd;
    const xhr = this.xhr = new XHR(opts);
    try {
      xhr.open(this.method, this.uri, true);
      try {
        if (this.opts.extraHeaders) {
          xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);
          for (let i11 in this.opts.extraHeaders) {
            if (this.opts.extraHeaders.hasOwnProperty(i11)) {
              xhr.setRequestHeader(i11, this.opts.extraHeaders[i11]);
            }
          }
        }
      } catch (e9) {
      }
      if ("POST" === this.method) {
        try {
          xhr.setRequestHeader("Content-type", "text/plain;charset=UTF-8");
        } catch (e9) {
        }
      }
      try {
        xhr.setRequestHeader("Accept", "*/*");
      } catch (e9) {
      }
      (_a5 = this.opts.cookieJar) === null || _a5 === void 0 ? void 0 : _a5.addCookies(xhr);
      if ("withCredentials" in xhr) {
        xhr.withCredentials = this.opts.withCredentials;
      }
      if (this.opts.requestTimeout) {
        xhr.timeout = this.opts.requestTimeout;
      }
      xhr.onreadystatechange = () => {
        var _a6;
        if (xhr.readyState === 3) {
          (_a6 = this.opts.cookieJar) === null || _a6 === void 0 ? void 0 : _a6.parseCookies(xhr);
        }
        if (4 !== xhr.readyState)
          return;
        if (200 === xhr.status || 1223 === xhr.status) {
          this.onLoad();
        } else {
          this.setTimeoutFn(() => {
            this.onError(typeof xhr.status === "number" ? xhr.status : 0);
          }, 0);
        }
      };
      xhr.send(this.data);
    } catch (e9) {
      this.setTimeoutFn(() => {
        this.onError(e9);
      }, 0);
      return;
    }
    if (typeof document !== "undefined") {
      this.index = _Request.requestsCount++;
      _Request.requests[this.index] = this;
    }
  }
  /**
   * Called upon error.
   *
   * @private
   */
  onError(err) {
    this.emitReserved("error", err, this.xhr);
    this.cleanup(true);
  }
  /**
   * Cleans up house.
   *
   * @private
   */
  cleanup(fromError) {
    if ("undefined" === typeof this.xhr || null === this.xhr) {
      return;
    }
    this.xhr.onreadystatechange = empty;
    if (fromError) {
      try {
        this.xhr.abort();
      } catch (e9) {
      }
    }
    if (typeof document !== "undefined") {
      delete _Request.requests[this.index];
    }
    this.xhr = null;
  }
  /**
   * Called upon load.
   *
   * @private
   */
  onLoad() {
    const data = this.xhr.responseText;
    if (data !== null) {
      this.emitReserved("data", data);
      this.emitReserved("success");
      this.cleanup();
    }
  }
  /**
   * Aborts the request.
   *
   * @package
   */
  abort() {
    this.cleanup();
  }
};
Request2.requestsCount = 0;
Request2.requests = {};
if (typeof document !== "undefined") {
  if (typeof attachEvent === "function") {
    attachEvent("onunload", unloadHandler);
  } else if (typeof addEventListener === "function") {
    const terminationEvent = "onpagehide" in globalThisShim ? "pagehide" : "unload";
    addEventListener(terminationEvent, unloadHandler, false);
  }
}
function unloadHandler() {
  for (let i11 in Request2.requests) {
    if (Request2.requests.hasOwnProperty(i11)) {
      Request2.requests[i11].abort();
    }
  }
}

// node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js
var nextTick = (() => {
  const isPromiseAvailable = typeof Promise === "function" && typeof Promise.resolve === "function";
  if (isPromiseAvailable) {
    return (cb) => Promise.resolve().then(cb);
  } else {
    return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);
  }
})();
var WebSocket = globalThisShim.WebSocket || globalThisShim.MozWebSocket;
var usingBrowserWebSocket = true;
var defaultBinaryType = "arraybuffer";

// node_modules/engine.io-client/build/esm/transports/websocket.js
var isReactNative = typeof navigator !== "undefined" && typeof navigator.product === "string" && navigator.product.toLowerCase() === "reactnative";
var WS = class extends Transport {
  /**
   * WebSocket transport constructor.
   *
   * @param {Object} opts - connection options
   * @protected
   */
  constructor(opts) {
    super(opts);
    this.supportsBinary = !opts.forceBase64;
  }
  get name() {
    return "websocket";
  }
  doOpen() {
    if (!this.check()) {
      return;
    }
    const uri = this.uri();
    const protocols = this.opts.protocols;
    const opts = isReactNative ? {} : pick(this.opts, "agent", "perMessageDeflate", "pfx", "key", "passphrase", "cert", "ca", "ciphers", "rejectUnauthorized", "localAddress", "protocolVersion", "origin", "maxPayload", "family", "checkServerIdentity");
    if (this.opts.extraHeaders) {
      opts.headers = this.opts.extraHeaders;
    }
    try {
      this.ws = usingBrowserWebSocket && !isReactNative ? protocols ? new WebSocket(uri, protocols) : new WebSocket(uri) : new WebSocket(uri, protocols, opts);
    } catch (err) {
      return this.emitReserved("error", err);
    }
    this.ws.binaryType = this.socket.binaryType;
    this.addEventListeners();
  }
  /**
   * Adds event listeners to the socket
   *
   * @private
   */
  addEventListeners() {
    this.ws.onopen = () => {
      if (this.opts.autoUnref) {
        this.ws._socket.unref();
      }
      this.onOpen();
    };
    this.ws.onclose = (closeEvent) => this.onClose({
      description: "websocket connection closed",
      context: closeEvent
    });
    this.ws.onmessage = (ev) => this.onData(ev.data);
    this.ws.onerror = (e9) => this.onError("websocket error", e9);
  }
  write(packets) {
    this.writable = false;
    for (let i11 = 0; i11 < packets.length; i11++) {
      const packet = packets[i11];
      const lastPacket = i11 === packets.length - 1;
      encodePacket(packet, this.supportsBinary, (data) => {
        const opts = {};
        if (!usingBrowserWebSocket) {
          if (packet.options) {
            opts.compress = packet.options.compress;
          }
          if (this.opts.perMessageDeflate) {
            const len = (
              // @ts-ignore
              "string" === typeof data ? Buffer.byteLength(data) : data.length
            );
            if (len < this.opts.perMessageDeflate.threshold) {
              opts.compress = false;
            }
          }
        }
        try {
          if (usingBrowserWebSocket) {
            this.ws.send(data);
          } else {
            this.ws.send(data, opts);
          }
        } catch (e9) {
        }
        if (lastPacket) {
          nextTick(() => {
            this.writable = true;
            this.emitReserved("drain");
          }, this.setTimeoutFn);
        }
      });
    }
  }
  doClose() {
    if (typeof this.ws !== "undefined") {
      this.ws.close();
      this.ws = null;
    }
  }
  /**
   * Generates uri for connection.
   *
   * @private
   */
  uri() {
    const schema = this.opts.secure ? "wss" : "ws";
    const query = this.query || {};
    if (this.opts.timestampRequests) {
      query[this.opts.timestampParam] = yeast();
    }
    if (!this.supportsBinary) {
      query.b64 = 1;
    }
    return this.createUri(schema, query);
  }
  /**
   * Feature detection for WebSocket.
   *
   * @return {Boolean} whether this transport is available.
   * @private
   */
  check() {
    return !!WebSocket;
  }
};

// node_modules/engine.io-client/build/esm/transports/webtransport.js
var WT = class extends Transport {
  get name() {
    return "webtransport";
  }
  doOpen() {
    if (typeof WebTransport !== "function") {
      return;
    }
    this.transport = new WebTransport(this.createUri("https"), this.opts.transportOptions[this.name]);
    this.transport.closed.then(() => {
      this.onClose();
    }).catch((err) => {
      this.onError("webtransport error", err);
    });
    this.transport.ready.then(() => {
      this.transport.createBidirectionalStream().then((stream) => {
        const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);
        const reader = stream.readable.pipeThrough(decoderStream).getReader();
        const encoderStream = createPacketEncoderStream();
        encoderStream.readable.pipeTo(stream.writable);
        this.writer = encoderStream.writable.getWriter();
        const read = () => {
          reader.read().then(({ done, value: value2 }) => {
            if (done) {
              return;
            }
            this.onPacket(value2);
            read();
          }).catch((err) => {
          });
        };
        read();
        const packet = { type: "open" };
        if (this.query.sid) {
          packet.data = `{"sid":"${this.query.sid}"}`;
        }
        this.writer.write(packet).then(() => this.onOpen());
      });
    });
  }
  write(packets) {
    this.writable = false;
    for (let i11 = 0; i11 < packets.length; i11++) {
      const packet = packets[i11];
      const lastPacket = i11 === packets.length - 1;
      this.writer.write(packet).then(() => {
        if (lastPacket) {
          nextTick(() => {
            this.writable = true;
            this.emitReserved("drain");
          }, this.setTimeoutFn);
        }
      });
    }
  }
  doClose() {
    var _a5;
    (_a5 = this.transport) === null || _a5 === void 0 ? void 0 : _a5.close();
  }
};

// node_modules/engine.io-client/build/esm/transports/index.js
var transports = {
  websocket: WS,
  webtransport: WT,
  polling: Polling
};

// node_modules/engine.io-client/build/esm/contrib/parseuri.js
var re = /^(?:(?![^:@\/?#]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@\/?#]*)(?::([^:@\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/;
var parts = [
  "source",
  "protocol",
  "authority",
  "userInfo",
  "user",
  "password",
  "host",
  "port",
  "relative",
  "path",
  "directory",
  "file",
  "query",
  "anchor"
];
function parse2(str) {
  if (str.length > 2e3) {
    throw "URI too long";
  }
  const src = str, b6 = str.indexOf("["), e9 = str.indexOf("]");
  if (b6 != -1 && e9 != -1) {
    str = str.substring(0, b6) + str.substring(b6, e9).replace(/:/g, ";") + str.substring(e9, str.length);
  }
  let m13 = re.exec(str || ""), uri = {}, i11 = 14;
  while (i11--) {
    uri[parts[i11]] = m13[i11] || "";
  }
  if (b6 != -1 && e9 != -1) {
    uri.source = src;
    uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ":");
    uri.authority = uri.authority.replace("[", "").replace("]", "").replace(/;/g, ":");
    uri.ipv6uri = true;
  }
  uri.pathNames = pathNames(uri, uri["path"]);
  uri.queryKey = queryKey(uri, uri["query"]);
  return uri;
}
function pathNames(obj, path) {
  const regx = /\/{2,9}/g, names = path.replace(regx, "/").split("/");
  if (path.slice(0, 1) == "/" || path.length === 0) {
    names.splice(0, 1);
  }
  if (path.slice(-1) == "/") {
    names.splice(names.length - 1, 1);
  }
  return names;
}
function queryKey(uri, query) {
  const data = {};
  query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function($0, $1, $22) {
    if ($1) {
      data[$1] = $22;
    }
  });
  return data;
}

// node_modules/engine.io-client/build/esm/socket.js
var Socket = class _Socket extends Emitter {
  /**
   * Socket constructor.
   *
   * @param {String|Object} uri - uri or options
   * @param {Object} opts - options
   */
  constructor(uri, opts = {}) {
    super();
    this.binaryType = defaultBinaryType;
    this.writeBuffer = [];
    if (uri && "object" === typeof uri) {
      opts = uri;
      uri = null;
    }
    if (uri) {
      uri = parse2(uri);
      opts.hostname = uri.host;
      opts.secure = uri.protocol === "https" || uri.protocol === "wss";
      opts.port = uri.port;
      if (uri.query)
        opts.query = uri.query;
    } else if (opts.host) {
      opts.hostname = parse2(opts.host).host;
    }
    installTimerFunctions(this, opts);
    this.secure = null != opts.secure ? opts.secure : typeof location !== "undefined" && "https:" === location.protocol;
    if (opts.hostname && !opts.port) {
      opts.port = this.secure ? "443" : "80";
    }
    this.hostname = opts.hostname || (typeof location !== "undefined" ? location.hostname : "localhost");
    this.port = opts.port || (typeof location !== "undefined" && location.port ? location.port : this.secure ? "443" : "80");
    this.transports = opts.transports || [
      "polling",
      "websocket",
      "webtransport"
    ];
    this.writeBuffer = [];
    this.prevBufferLen = 0;
    this.opts = Object.assign({
      path: "/engine.io",
      agent: false,
      withCredentials: false,
      upgrade: true,
      timestampParam: "t",
      rememberUpgrade: false,
      addTrailingSlash: true,
      rejectUnauthorized: true,
      perMessageDeflate: {
        threshold: 1024
      },
      transportOptions: {},
      closeOnBeforeunload: false
    }, opts);
    this.opts.path = this.opts.path.replace(/\/$/, "") + (this.opts.addTrailingSlash ? "/" : "");
    if (typeof this.opts.query === "string") {
      this.opts.query = decode2(this.opts.query);
    }
    this.id = null;
    this.upgrades = null;
    this.pingInterval = null;
    this.pingTimeout = null;
    this.pingTimeoutTimer = null;
    if (typeof addEventListener === "function") {
      if (this.opts.closeOnBeforeunload) {
        this.beforeunloadEventListener = () => {
          if (this.transport) {
            this.transport.removeAllListeners();
            this.transport.close();
          }
        };
        addEventListener("beforeunload", this.beforeunloadEventListener, false);
      }
      if (this.hostname !== "localhost") {
        this.offlineEventListener = () => {
          this.onClose("transport close", {
            description: "network connection lost"
          });
        };
        addEventListener("offline", this.offlineEventListener, false);
      }
    }
    this.open();
  }
  /**
   * Creates transport of the given type.
   *
   * @param {String} name - transport name
   * @return {Transport}
   * @private
   */
  createTransport(name) {
    const query = Object.assign({}, this.opts.query);
    query.EIO = protocol;
    query.transport = name;
    if (this.id)
      query.sid = this.id;
    const opts = Object.assign({}, this.opts, {
      query,
      socket: this,
      hostname: this.hostname,
      secure: this.secure,
      port: this.port
    }, this.opts.transportOptions[name]);
    return new transports[name](opts);
  }
  /**
   * Initializes transport to use and starts probe.
   *
   * @private
   */
  open() {
    let transport;
    if (this.opts.rememberUpgrade && _Socket.priorWebsocketSuccess && this.transports.indexOf("websocket") !== -1) {
      transport = "websocket";
    } else if (0 === this.transports.length) {
      this.setTimeoutFn(() => {
        this.emitReserved("error", "No transports available");
      }, 0);
      return;
    } else {
      transport = this.transports[0];
    }
    this.readyState = "opening";
    try {
      transport = this.createTransport(transport);
    } catch (e9) {
      this.transports.shift();
      this.open();
      return;
    }
    transport.open();
    this.setTransport(transport);
  }
  /**
   * Sets the current transport. Disables the existing one (if any).
   *
   * @private
   */
  setTransport(transport) {
    if (this.transport) {
      this.transport.removeAllListeners();
    }
    this.transport = transport;
    transport.on("drain", this.onDrain.bind(this)).on("packet", this.onPacket.bind(this)).on("error", this.onError.bind(this)).on("close", (reason) => this.onClose("transport close", reason));
  }
  /**
   * Probes a transport.
   *
   * @param {String} name - transport name
   * @private
   */
  probe(name) {
    let transport = this.createTransport(name);
    let failed = false;
    _Socket.priorWebsocketSuccess = false;
    const onTransportOpen = () => {
      if (failed)
        return;
      transport.send([{ type: "ping", data: "probe" }]);
      transport.once("packet", (msg) => {
        if (failed)
          return;
        if ("pong" === msg.type && "probe" === msg.data) {
          this.upgrading = true;
          this.emitReserved("upgrading", transport);
          if (!transport)
            return;
          _Socket.priorWebsocketSuccess = "websocket" === transport.name;
          this.transport.pause(() => {
            if (failed)
              return;
            if ("closed" === this.readyState)
              return;
            cleanup();
            this.setTransport(transport);
            transport.send([{ type: "upgrade" }]);
            this.emitReserved("upgrade", transport);
            transport = null;
            this.upgrading = false;
            this.flush();
          });
        } else {
          const err = new Error("probe error");
          err.transport = transport.name;
          this.emitReserved("upgradeError", err);
        }
      });
    };
    function freezeTransport() {
      if (failed)
        return;
      failed = true;
      cleanup();
      transport.close();
      transport = null;
    }
    const onerror = (err) => {
      const error = new Error("probe error: " + err);
      error.transport = transport.name;
      freezeTransport();
      this.emitReserved("upgradeError", error);
    };
    function onTransportClose() {
      onerror("transport closed");
    }
    function onclose() {
      onerror("socket closed");
    }
    function onupgrade(to2) {
      if (transport && to2.name !== transport.name) {
        freezeTransport();
      }
    }
    const cleanup = () => {
      transport.removeListener("open", onTransportOpen);
      transport.removeListener("error", onerror);
      transport.removeListener("close", onTransportClose);
      this.off("close", onclose);
      this.off("upgrading", onupgrade);
    };
    transport.once("open", onTransportOpen);
    transport.once("error", onerror);
    transport.once("close", onTransportClose);
    this.once("close", onclose);
    this.once("upgrading", onupgrade);
    if (this.upgrades.indexOf("webtransport") !== -1 && name !== "webtransport") {
      this.setTimeoutFn(() => {
        if (!failed) {
          transport.open();
        }
      }, 200);
    } else {
      transport.open();
    }
  }
  /**
   * Called when connection is deemed open.
   *
   * @private
   */
  onOpen() {
    this.readyState = "open";
    _Socket.priorWebsocketSuccess = "websocket" === this.transport.name;
    this.emitReserved("open");
    this.flush();
    if ("open" === this.readyState && this.opts.upgrade) {
      let i11 = 0;
      const l12 = this.upgrades.length;
      for (; i11 < l12; i11++) {
        this.probe(this.upgrades[i11]);
      }
    }
  }
  /**
   * Handles a packet.
   *
   * @private
   */
  onPacket(packet) {
    if ("opening" === this.readyState || "open" === this.readyState || "closing" === this.readyState) {
      this.emitReserved("packet", packet);
      this.emitReserved("heartbeat");
      this.resetPingTimeout();
      switch (packet.type) {
        case "open":
          this.onHandshake(JSON.parse(packet.data));
          break;
        case "ping":
          this.sendPacket("pong");
          this.emitReserved("ping");
          this.emitReserved("pong");
          break;
        case "error":
          const err = new Error("server error");
          err.code = packet.data;
          this.onError(err);
          break;
        case "message":
          this.emitReserved("data", packet.data);
          this.emitReserved("message", packet.data);
          break;
      }
    } else {
    }
  }
  /**
   * Called upon handshake completion.
   *
   * @param {Object} data - handshake obj
   * @private
   */
  onHandshake(data) {
    this.emitReserved("handshake", data);
    this.id = data.sid;
    this.transport.query.sid = data.sid;
    this.upgrades = this.filterUpgrades(data.upgrades);
    this.pingInterval = data.pingInterval;
    this.pingTimeout = data.pingTimeout;
    this.maxPayload = data.maxPayload;
    this.onOpen();
    if ("closed" === this.readyState)
      return;
    this.resetPingTimeout();
  }
  /**
   * Sets and resets ping timeout timer based on server pings.
   *
   * @private
   */
  resetPingTimeout() {
    this.clearTimeoutFn(this.pingTimeoutTimer);
    this.pingTimeoutTimer = this.setTimeoutFn(() => {
      this.onClose("ping timeout");
    }, this.pingInterval + this.pingTimeout);
    if (this.opts.autoUnref) {
      this.pingTimeoutTimer.unref();
    }
  }
  /**
   * Called on `drain` event
   *
   * @private
   */
  onDrain() {
    this.writeBuffer.splice(0, this.prevBufferLen);
    this.prevBufferLen = 0;
    if (0 === this.writeBuffer.length) {
      this.emitReserved("drain");
    } else {
      this.flush();
    }
  }
  /**
   * Flush write buffers.
   *
   * @private
   */
  flush() {
    if ("closed" !== this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length) {
      const packets = this.getWritablePackets();
      this.transport.send(packets);
      this.prevBufferLen = packets.length;
      this.emitReserved("flush");
    }
  }
  /**
   * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP
   * long-polling)
   *
   * @private
   */
  getWritablePackets() {
    const shouldCheckPayloadSize = this.maxPayload && this.transport.name === "polling" && this.writeBuffer.length > 1;
    if (!shouldCheckPayloadSize) {
      return this.writeBuffer;
    }
    let payloadSize = 1;
    for (let i11 = 0; i11 < this.writeBuffer.length; i11++) {
      const data = this.writeBuffer[i11].data;
      if (data) {
        payloadSize += byteLength(data);
      }
      if (i11 > 0 && payloadSize > this.maxPayload) {
        return this.writeBuffer.slice(0, i11);
      }
      payloadSize += 2;
    }
    return this.writeBuffer;
  }
  /**
   * Sends a message.
   *
   * @param {String} msg - message.
   * @param {Object} options.
   * @param {Function} callback function.
   * @return {Socket} for chaining.
   */
  write(msg, options, fn) {
    this.sendPacket("message", msg, options, fn);
    return this;
  }
  send(msg, options, fn) {
    this.sendPacket("message", msg, options, fn);
    return this;
  }
  /**
   * Sends a packet.
   *
   * @param {String} type: packet type.
   * @param {String} data.
   * @param {Object} options.
   * @param {Function} fn - callback function.
   * @private
   */
  sendPacket(type, data, options, fn) {
    if ("function" === typeof data) {
      fn = data;
      data = void 0;
    }
    if ("function" === typeof options) {
      fn = options;
      options = null;
    }
    if ("closing" === this.readyState || "closed" === this.readyState) {
      return;
    }
    options = options || {};
    options.compress = false !== options.compress;
    const packet = {
      type,
      data,
      options
    };
    this.emitReserved("packetCreate", packet);
    this.writeBuffer.push(packet);
    if (fn)
      this.once("flush", fn);
    this.flush();
  }
  /**
   * Closes the connection.
   */
  close() {
    const close = () => {
      this.onClose("forced close");
      this.transport.close();
    };
    const cleanupAndClose = () => {
      this.off("upgrade", cleanupAndClose);
      this.off("upgradeError", cleanupAndClose);
      close();
    };
    const waitForUpgrade = () => {
      this.once("upgrade", cleanupAndClose);
      this.once("upgradeError", cleanupAndClose);
    };
    if ("opening" === this.readyState || "open" === this.readyState) {
      this.readyState = "closing";
      if (this.writeBuffer.length) {
        this.once("drain", () => {
          if (this.upgrading) {
            waitForUpgrade();
          } else {
            close();
          }
        });
      } else if (this.upgrading) {
        waitForUpgrade();
      } else {
        close();
      }
    }
    return this;
  }
  /**
   * Called upon transport error
   *
   * @private
   */
  onError(err) {
    _Socket.priorWebsocketSuccess = false;
    this.emitReserved("error", err);
    this.onClose("transport error", err);
  }
  /**
   * Called upon transport close.
   *
   * @private
   */
  onClose(reason, description) {
    if ("opening" === this.readyState || "open" === this.readyState || "closing" === this.readyState) {
      this.clearTimeoutFn(this.pingTimeoutTimer);
      this.transport.removeAllListeners("close");
      this.transport.close();
      this.transport.removeAllListeners();
      if (typeof removeEventListener === "function") {
        removeEventListener("beforeunload", this.beforeunloadEventListener, false);
        removeEventListener("offline", this.offlineEventListener, false);
      }
      this.readyState = "closed";
      this.id = null;
      this.emitReserved("close", reason, description);
      this.writeBuffer = [];
      this.prevBufferLen = 0;
    }
  }
  /**
   * Filters upgrades, returning only those matching client transports.
   *
   * @param {Array} upgrades - server upgrades
   * @private
   */
  filterUpgrades(upgrades) {
    const filteredUpgrades = [];
    let i11 = 0;
    const j5 = upgrades.length;
    for (; i11 < j5; i11++) {
      if (~this.transports.indexOf(upgrades[i11]))
        filteredUpgrades.push(upgrades[i11]);
    }
    return filteredUpgrades;
  }
};
Socket.protocol = protocol;

// node_modules/engine.io-client/build/esm/index.js
var protocol2 = Socket.protocol;

// node_modules/socket.io-client/build/esm-debug/url.js
var import_debug5 = __toESM(require_browser(), 1);
var debug = (0, import_debug5.default)("socket.io-client:url");
function url(uri, path = "", loc) {
  let obj = uri;
  loc = loc || typeof location !== "undefined" && location;
  if (null == uri)
    uri = loc.protocol + "//" + loc.host;
  if (typeof uri === "string") {
    if ("/" === uri.charAt(0)) {
      if ("/" === uri.charAt(1)) {
        uri = loc.protocol + uri;
      } else {
        uri = loc.host + uri;
      }
    }
    if (!/^(https?|wss?):\/\//.test(uri)) {
      debug("protocol-less url %s", uri);
      if ("undefined" !== typeof loc) {
        uri = loc.protocol + "//" + uri;
      } else {
        uri = "https://" + uri;
      }
    }
    debug("parse %s", uri);
    obj = parse2(uri);
  }
  if (!obj.port) {
    if (/^(http|ws)$/.test(obj.protocol)) {
      obj.port = "80";
    } else if (/^(http|ws)s$/.test(obj.protocol)) {
      obj.port = "443";
    }
  }
  obj.path = obj.path || "/";
  const ipv6 = obj.host.indexOf(":") !== -1;
  const host = ipv6 ? "[" + obj.host + "]" : obj.host;
  obj.id = obj.protocol + "://" + host + ":" + obj.port + path;
  obj.href = obj.protocol + "://" + host + (loc && loc.port === obj.port ? "" : ":" + obj.port);
  return obj;
}

// node_modules/socket.io-parser/build/esm/index.js
var esm_exports = {};
__export(esm_exports, {
  Decoder: () => Decoder,
  Encoder: () => Encoder,
  PacketType: () => PacketType,
  protocol: () => protocol3
});

// node_modules/socket.io-parser/build/esm/is-binary.js
var withNativeArrayBuffer3 = typeof ArrayBuffer === "function";
var isView2 = (obj) => {
  return typeof ArrayBuffer.isView === "function" ? ArrayBuffer.isView(obj) : obj.buffer instanceof ArrayBuffer;
};
var toString = Object.prototype.toString;
var withNativeBlob2 = typeof Blob === "function" || typeof Blob !== "undefined" && toString.call(Blob) === "[object BlobConstructor]";
var withNativeFile = typeof File === "function" || typeof File !== "undefined" && toString.call(File) === "[object FileConstructor]";
function isBinary(obj) {
  return withNativeArrayBuffer3 && (obj instanceof ArrayBuffer || isView2(obj)) || withNativeBlob2 && obj instanceof Blob || withNativeFile && obj instanceof File;
}
function hasBinary(obj, toJSON) {
  if (!obj || typeof obj !== "object") {
    return false;
  }
  if (Array.isArray(obj)) {
    for (let i11 = 0, l12 = obj.length; i11 < l12; i11++) {
      if (hasBinary(obj[i11])) {
        return true;
      }
    }
    return false;
  }
  if (isBinary(obj)) {
    return true;
  }
  if (obj.toJSON && typeof obj.toJSON === "function" && arguments.length === 1) {
    return hasBinary(obj.toJSON(), true);
  }
  for (const key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {
      return true;
    }
  }
  return false;
}

// node_modules/socket.io-parser/build/esm/binary.js
function deconstructPacket(packet) {
  const buffers = [];
  const packetData = packet.data;
  const pack = packet;
  pack.data = _deconstructPacket(packetData, buffers);
  pack.attachments = buffers.length;
  return { packet: pack, buffers };
}
function _deconstructPacket(data, buffers) {
  if (!data)
    return data;
  if (isBinary(data)) {
    const placeholder = { _placeholder: true, num: buffers.length };
    buffers.push(data);
    return placeholder;
  } else if (Array.isArray(data)) {
    const newData = new Array(data.length);
    for (let i11 = 0; i11 < data.length; i11++) {
      newData[i11] = _deconstructPacket(data[i11], buffers);
    }
    return newData;
  } else if (typeof data === "object" && !(data instanceof Date)) {
    const newData = {};
    for (const key in data) {
      if (Object.prototype.hasOwnProperty.call(data, key)) {
        newData[key] = _deconstructPacket(data[key], buffers);
      }
    }
    return newData;
  }
  return data;
}
function reconstructPacket(packet, buffers) {
  packet.data = _reconstructPacket(packet.data, buffers);
  delete packet.attachments;
  return packet;
}
function _reconstructPacket(data, buffers) {
  if (!data)
    return data;
  if (data && data._placeholder === true) {
    const isIndexValid = typeof data.num === "number" && data.num >= 0 && data.num < buffers.length;
    if (isIndexValid) {
      return buffers[data.num];
    } else {
      throw new Error("illegal attachments");
    }
  } else if (Array.isArray(data)) {
    for (let i11 = 0; i11 < data.length; i11++) {
      data[i11] = _reconstructPacket(data[i11], buffers);
    }
  } else if (typeof data === "object") {
    for (const key in data) {
      if (Object.prototype.hasOwnProperty.call(data, key)) {
        data[key] = _reconstructPacket(data[key], buffers);
      }
    }
  }
  return data;
}

// node_modules/socket.io-parser/build/esm/index.js
var RESERVED_EVENTS = [
  "connect",
  "connect_error",
  "disconnect",
  "disconnecting",
  "newListener",
  "removeListener"
  // used by the Node.js EventEmitter
];
var protocol3 = 5;
var PacketType;
(function(PacketType2) {
  PacketType2[PacketType2["CONNECT"] = 0] = "CONNECT";
  PacketType2[PacketType2["DISCONNECT"] = 1] = "DISCONNECT";
  PacketType2[PacketType2["EVENT"] = 2] = "EVENT";
  PacketType2[PacketType2["ACK"] = 3] = "ACK";
  PacketType2[PacketType2["CONNECT_ERROR"] = 4] = "CONNECT_ERROR";
  PacketType2[PacketType2["BINARY_EVENT"] = 5] = "BINARY_EVENT";
  PacketType2[PacketType2["BINARY_ACK"] = 6] = "BINARY_ACK";
})(PacketType || (PacketType = {}));
var Encoder = class {
  /**
   * Encoder constructor
   *
   * @param {function} replacer - custom replacer to pass down to JSON.parse
   */
  constructor(replacer) {
    this.replacer = replacer;
  }
  /**
   * Encode a packet as a single string if non-binary, or as a
   * buffer sequence, depending on packet type.
   *
   * @param {Object} obj - packet object
   */
  encode(obj) {
    if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {
      if (hasBinary(obj)) {
        return this.encodeAsBinary({
          type: obj.type === PacketType.EVENT ? PacketType.BINARY_EVENT : PacketType.BINARY_ACK,
          nsp: obj.nsp,
          data: obj.data,
          id: obj.id
        });
      }
    }
    return [this.encodeAsString(obj)];
  }
  /**
   * Encode packet as string.
   */
  encodeAsString(obj) {
    let str = "" + obj.type;
    if (obj.type === PacketType.BINARY_EVENT || obj.type === PacketType.BINARY_ACK) {
      str += obj.attachments + "-";
    }
    if (obj.nsp && "/" !== obj.nsp) {
      str += obj.nsp + ",";
    }
    if (null != obj.id) {
      str += obj.id;
    }
    if (null != obj.data) {
      str += JSON.stringify(obj.data, this.replacer);
    }
    return str;
  }
  /**
   * Encode packet as 'buffer sequence' by removing blobs, and
   * deconstructing packet into object with placeholders and
   * a list of buffers.
   */
  encodeAsBinary(obj) {
    const deconstruction = deconstructPacket(obj);
    const pack = this.encodeAsString(deconstruction.packet);
    const buffers = deconstruction.buffers;
    buffers.unshift(pack);
    return buffers;
  }
};
function isObject(value2) {
  return Object.prototype.toString.call(value2) === "[object Object]";
}
var Decoder = class _Decoder extends Emitter {
  /**
   * Decoder constructor
   *
   * @param {function} reviver - custom reviver to pass down to JSON.stringify
   */
  constructor(reviver) {
    super();
    this.reviver = reviver;
  }
  /**
   * Decodes an encoded packet string into packet JSON.
   *
   * @param {String} obj - encoded packet
   */
  add(obj) {
    let packet;
    if (typeof obj === "string") {
      if (this.reconstructor) {
        throw new Error("got plaintext data when reconstructing a packet");
      }
      packet = this.decodeString(obj);
      const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;
      if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {
        packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;
        this.reconstructor = new BinaryReconstructor(packet);
        if (packet.attachments === 0) {
          super.emitReserved("decoded", packet);
        }
      } else {
        super.emitReserved("decoded", packet);
      }
    } else if (isBinary(obj) || obj.base64) {
      if (!this.reconstructor) {
        throw new Error("got binary data when not reconstructing a packet");
      } else {
        packet = this.reconstructor.takeBinaryData(obj);
        if (packet) {
          this.reconstructor = null;
          super.emitReserved("decoded", packet);
        }
      }
    } else {
      throw new Error("Unknown type: " + obj);
    }
  }
  /**
   * Decode a packet String (JSON data)
   *
   * @param {String} str
   * @return {Object} packet
   */
  decodeString(str) {
    let i11 = 0;
    const p11 = {
      type: Number(str.charAt(0))
    };
    if (PacketType[p11.type] === void 0) {
      throw new Error("unknown packet type " + p11.type);
    }
    if (p11.type === PacketType.BINARY_EVENT || p11.type === PacketType.BINARY_ACK) {
      const start = i11 + 1;
      while (str.charAt(++i11) !== "-" && i11 != str.length) {
      }
      const buf = str.substring(start, i11);
      if (buf != Number(buf) || str.charAt(i11) !== "-") {
        throw new Error("Illegal attachments");
      }
      p11.attachments = Number(buf);
    }
    if ("/" === str.charAt(i11 + 1)) {
      const start = i11 + 1;
      while (++i11) {
        const c11 = str.charAt(i11);
        if ("," === c11)
          break;
        if (i11 === str.length)
          break;
      }
      p11.nsp = str.substring(start, i11);
    } else {
      p11.nsp = "/";
    }
    const next = str.charAt(i11 + 1);
    if ("" !== next && Number(next) == next) {
      const start = i11 + 1;
      while (++i11) {
        const c11 = str.charAt(i11);
        if (null == c11 || Number(c11) != c11) {
          --i11;
          break;
        }
        if (i11 === str.length)
          break;
      }
      p11.id = Number(str.substring(start, i11 + 1));
    }
    if (str.charAt(++i11)) {
      const payload = this.tryParse(str.substr(i11));
      if (_Decoder.isPayloadValid(p11.type, payload)) {
        p11.data = payload;
      } else {
        throw new Error("invalid payload");
      }
    }
    return p11;
  }
  tryParse(str) {
    try {
      return JSON.parse(str, this.reviver);
    } catch (e9) {
      return false;
    }
  }
  static isPayloadValid(type, payload) {
    switch (type) {
      case PacketType.CONNECT:
        return isObject(payload);
      case PacketType.DISCONNECT:
        return payload === void 0;
      case PacketType.CONNECT_ERROR:
        return typeof payload === "string" || isObject(payload);
      case PacketType.EVENT:
      case PacketType.BINARY_EVENT:
        return Array.isArray(payload) && (typeof payload[0] === "number" || typeof payload[0] === "string" && RESERVED_EVENTS.indexOf(payload[0]) === -1);
      case PacketType.ACK:
      case PacketType.BINARY_ACK:
        return Array.isArray(payload);
    }
  }
  /**
   * Deallocates a parser's resources
   */
  destroy() {
    if (this.reconstructor) {
      this.reconstructor.finishedReconstruction();
      this.reconstructor = null;
    }
  }
};
var BinaryReconstructor = class {
  constructor(packet) {
    this.packet = packet;
    this.buffers = [];
    this.reconPack = packet;
  }
  /**
   * Method to be called when binary data received from connection
   * after a BINARY_EVENT packet.
   *
   * @param {Buffer | ArrayBuffer} binData - the raw binary data received
   * @return {null | Object} returns null if more binary data is expected or
   *   a reconstructed packet object if all buffers have been received.
   */
  takeBinaryData(binData) {
    this.buffers.push(binData);
    if (this.buffers.length === this.reconPack.attachments) {
      const packet = reconstructPacket(this.reconPack, this.buffers);
      this.finishedReconstruction();
      return packet;
    }
    return null;
  }
  /**
   * Cleans up binary packet reconstruction variables.
   */
  finishedReconstruction() {
    this.reconPack = null;
    this.buffers = [];
  }
};

// node_modules/socket.io-client/build/esm-debug/on.js
function on(obj, ev, fn) {
  obj.on(ev, fn);
  return function subDestroy() {
    obj.off(ev, fn);
  };
}

// node_modules/socket.io-client/build/esm-debug/socket.js
var import_debug6 = __toESM(require_browser(), 1);
var debug2 = (0, import_debug6.default)("socket.io-client:socket");
var RESERVED_EVENTS2 = Object.freeze({
  connect: 1,
  connect_error: 1,
  disconnect: 1,
  disconnecting: 1,
  // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener
  newListener: 1,
  removeListener: 1
});
var Socket2 = class extends Emitter {
  /**
   * `Socket` constructor.
   */
  constructor(io2, nsp, opts) {
    super();
    this.connected = false;
    this.recovered = false;
    this.receiveBuffer = [];
    this.sendBuffer = [];
    this._queue = [];
    this._queueSeq = 0;
    this.ids = 0;
    this.acks = {};
    this.flags = {};
    this.io = io2;
    this.nsp = nsp;
    if (opts && opts.auth) {
      this.auth = opts.auth;
    }
    this._opts = Object.assign({}, opts);
    if (this.io._autoConnect)
      this.open();
  }
  /**
   * Whether the socket is currently disconnected
   *
   * @example
   * const socket = io();
   *
   * socket.on("connect", () => {
   *   console.log(socket.disconnected); // false
   * });
   *
   * socket.on("disconnect", () => {
   *   console.log(socket.disconnected); // true
   * });
   */
  get disconnected() {
    return !this.connected;
  }
  /**
   * Subscribe to open, close and packet events
   *
   * @private
   */
  subEvents() {
    if (this.subs)
      return;
    const io2 = this.io;
    this.subs = [
      on(io2, "open", this.onopen.bind(this)),
      on(io2, "packet", this.onpacket.bind(this)),
      on(io2, "error", this.onerror.bind(this)),
      on(io2, "close", this.onclose.bind(this))
    ];
  }
  /**
   * Whether the Socket will try to reconnect when its Manager connects or reconnects.
   *
   * @example
   * const socket = io();
   *
   * console.log(socket.active); // true
   *
   * socket.on("disconnect", (reason) => {
   *   if (reason === "io server disconnect") {
   *     // the disconnection was initiated by the server, you need to manually reconnect
   *     console.log(socket.active); // false
   *   }
   *   // else the socket will automatically try to reconnect
   *   console.log(socket.active); // true
   * });
   */
  get active() {
    return !!this.subs;
  }
  /**
   * "Opens" the socket.
   *
   * @example
   * const socket = io({
   *   autoConnect: false
   * });
   *
   * socket.connect();
   */
  connect() {
    if (this.connected)
      return this;
    this.subEvents();
    if (!this.io["_reconnecting"])
      this.io.open();
    if ("open" === this.io._readyState)
      this.onopen();
    return this;
  }
  /**
   * Alias for {@link connect()}.
   */
  open() {
    return this.connect();
  }
  /**
   * Sends a `message` event.
   *
   * This method mimics the WebSocket.send() method.
   *
   * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send
   *
   * @example
   * socket.send("hello");
   *
   * // this is equivalent to
   * socket.emit("message", "hello");
   *
   * @return self
   */
  send(...args) {
    args.unshift("message");
    this.emit.apply(this, args);
    return this;
  }
  /**
   * Override `emit`.
   * If the event is in `events`, it's emitted normally.
   *
   * @example
   * socket.emit("hello", "world");
   *
   * // all serializable datastructures are supported (no need to call JSON.stringify)
   * socket.emit("hello", 1, "2", { 3: ["4"], 5: Uint8Array.from([6]) });
   *
   * // with an acknowledgement from the server
   * socket.emit("hello", "world", (val) => {
   *   // ...
   * });
   *
   * @return self
   */
  emit(ev, ...args) {
    if (RESERVED_EVENTS2.hasOwnProperty(ev)) {
      throw new Error('"' + ev.toString() + '" is a reserved event name');
    }
    args.unshift(ev);
    if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {
      this._addToQueue(args);
      return this;
    }
    const packet = {
      type: PacketType.EVENT,
      data: args
    };
    packet.options = {};
    packet.options.compress = this.flags.compress !== false;
    if ("function" === typeof args[args.length - 1]) {
      const id = this.ids++;
      debug2("emitting packet with ack id %d", id);
      const ack = args.pop();
      this._registerAckCallback(id, ack);
      packet.id = id;
    }
    const isTransportWritable = this.io.engine && this.io.engine.transport && this.io.engine.transport.writable;
    const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);
    if (discardPacket) {
      debug2("discard packet as the transport is not currently writable");
    } else if (this.connected) {
      this.notifyOutgoingListeners(packet);
      this.packet(packet);
    } else {
      this.sendBuffer.push(packet);
    }
    this.flags = {};
    return this;
  }
  /**
   * @private
   */
  _registerAckCallback(id, ack) {
    var _a5;
    const timeout = (_a5 = this.flags.timeout) !== null && _a5 !== void 0 ? _a5 : this._opts.ackTimeout;
    if (timeout === void 0) {
      this.acks[id] = ack;
      return;
    }
    const timer = this.io.setTimeoutFn(() => {
      delete this.acks[id];
      for (let i11 = 0; i11 < this.sendBuffer.length; i11++) {
        if (this.sendBuffer[i11].id === id) {
          debug2("removing packet with ack id %d from the buffer", id);
          this.sendBuffer.splice(i11, 1);
        }
      }
      debug2("event with ack id %d has timed out after %d ms", id, timeout);
      ack.call(this, new Error("operation has timed out"));
    }, timeout);
    this.acks[id] = (...args) => {
      this.io.clearTimeoutFn(timer);
      ack.apply(this, [null, ...args]);
    };
  }
  /**
   * Emits an event and waits for an acknowledgement
   *
   * @example
   * // without timeout
   * const response = await socket.emitWithAck("hello", "world");
   *
   * // with a specific timeout
   * try {
   *   const response = await socket.timeout(1000).emitWithAck("hello", "world");
   * } catch (err) {
   *   // the server did not acknowledge the event in the given delay
   * }
   *
   * @return a Promise that will be fulfilled when the server acknowledges the event
   */
  emitWithAck(ev, ...args) {
    const withErr = this.flags.timeout !== void 0 || this._opts.ackTimeout !== void 0;
    return new Promise((resolve, reject) => {
      args.push((arg1, arg2) => {
        if (withErr) {
          return arg1 ? reject(arg1) : resolve(arg2);
        } else {
          return resolve(arg1);
        }
      });
      this.emit(ev, ...args);
    });
  }
  /**
   * Add the packet to the queue.
   * @param args
   * @private
   */
  _addToQueue(args) {
    let ack;
    if (typeof args[args.length - 1] === "function") {
      ack = args.pop();
    }
    const packet = {
      id: this._queueSeq++,
      tryCount: 0,
      pending: false,
      args,
      flags: Object.assign({ fromQueue: true }, this.flags)
    };
    args.push((err, ...responseArgs) => {
      if (packet !== this._queue[0]) {
        return;
      }
      const hasError = err !== null;
      if (hasError) {
        if (packet.tryCount > this._opts.retries) {
          debug2("packet [%d] is discarded after %d tries", packet.id, packet.tryCount);
          this._queue.shift();
          if (ack) {
            ack(err);
          }
        }
      } else {
        debug2("packet [%d] was successfully sent", packet.id);
        this._queue.shift();
        if (ack) {
          ack(null, ...responseArgs);
        }
      }
      packet.pending = false;
      return this._drainQueue();
    });
    this._queue.push(packet);
    this._drainQueue();
  }
  /**
   * Send the first packet of the queue, and wait for an acknowledgement from the server.
   * @param force - whether to resend a packet that has not been acknowledged yet
   *
   * @private
   */
  _drainQueue(force = false) {
    debug2("draining queue");
    if (!this.connected || this._queue.length === 0) {
      return;
    }
    const packet = this._queue[0];
    if (packet.pending && !force) {
      debug2("packet [%d] has already been sent and is waiting for an ack", packet.id);
      return;
    }
    packet.pending = true;
    packet.tryCount++;
    debug2("sending packet [%d] (try n°%d)", packet.id, packet.tryCount);
    this.flags = packet.flags;
    this.emit.apply(this, packet.args);
  }
  /**
   * Sends a packet.
   *
   * @param packet
   * @private
   */
  packet(packet) {
    packet.nsp = this.nsp;
    this.io._packet(packet);
  }
  /**
   * Called upon engine `open`.
   *
   * @private
   */
  onopen() {
    debug2("transport is open - connecting");
    if (typeof this.auth == "function") {
      this.auth((data) => {
        this._sendConnectPacket(data);
      });
    } else {
      this._sendConnectPacket(this.auth);
    }
  }
  /**
   * Sends a CONNECT packet to initiate the Socket.IO session.
   *
   * @param data
   * @private
   */
  _sendConnectPacket(data) {
    this.packet({
      type: PacketType.CONNECT,
      data: this._pid ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data) : data
    });
  }
  /**
   * Called upon engine or manager `error`.
   *
   * @param err
   * @private
   */
  onerror(err) {
    if (!this.connected) {
      this.emitReserved("connect_error", err);
    }
  }
  /**
   * Called upon engine `close`.
   *
   * @param reason
   * @param description
   * @private
   */
  onclose(reason, description) {
    debug2("close (%s)", reason);
    this.connected = false;
    delete this.id;
    this.emitReserved("disconnect", reason, description);
  }
  /**
   * Called with socket packet.
   *
   * @param packet
   * @private
   */
  onpacket(packet) {
    const sameNamespace = packet.nsp === this.nsp;
    if (!sameNamespace)
      return;
    switch (packet.type) {
      case PacketType.CONNECT:
        if (packet.data && packet.data.sid) {
          this.onconnect(packet.data.sid, packet.data.pid);
        } else {
          this.emitReserved("connect_error", new Error("It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)"));
        }
        break;
      case PacketType.EVENT:
      case PacketType.BINARY_EVENT:
        this.onevent(packet);
        break;
      case PacketType.ACK:
      case PacketType.BINARY_ACK:
        this.onack(packet);
        break;
      case PacketType.DISCONNECT:
        this.ondisconnect();
        break;
      case PacketType.CONNECT_ERROR:
        this.destroy();
        const err = new Error(packet.data.message);
        err.data = packet.data.data;
        this.emitReserved("connect_error", err);
        break;
    }
  }
  /**
   * Called upon a server event.
   *
   * @param packet
   * @private
   */
  onevent(packet) {
    const args = packet.data || [];
    debug2("emitting event %j", args);
    if (null != packet.id) {
      debug2("attaching ack callback to event");
      args.push(this.ack(packet.id));
    }
    if (this.connected) {
      this.emitEvent(args);
    } else {
      this.receiveBuffer.push(Object.freeze(args));
    }
  }
  emitEvent(args) {
    if (this._anyListeners && this._anyListeners.length) {
      const listeners = this._anyListeners.slice();
      for (const listener of listeners) {
        listener.apply(this, args);
      }
    }
    super.emit.apply(this, args);
    if (this._pid && args.length && typeof args[args.length - 1] === "string") {
      this._lastOffset = args[args.length - 1];
    }
  }
  /**
   * Produces an ack callback to emit with an event.
   *
   * @private
   */
  ack(id) {
    const self2 = this;
    let sent = false;
    return function(...args) {
      if (sent)
        return;
      sent = true;
      debug2("sending ack %j", args);
      self2.packet({
        type: PacketType.ACK,
        id,
        data: args
      });
    };
  }
  /**
   * Called upon a server acknowlegement.
   *
   * @param packet
   * @private
   */
  onack(packet) {
    const ack = this.acks[packet.id];
    if ("function" === typeof ack) {
      debug2("calling ack %s with %j", packet.id, packet.data);
      ack.apply(this, packet.data);
      delete this.acks[packet.id];
    } else {
      debug2("bad ack %s", packet.id);
    }
  }
  /**
   * Called upon server connect.
   *
   * @private
   */
  onconnect(id, pid) {
    debug2("socket connected with id %s", id);
    this.id = id;
    this.recovered = pid && this._pid === pid;
    this._pid = pid;
    this.connected = true;
    this.emitBuffered();
    this.emitReserved("connect");
    this._drainQueue(true);
  }
  /**
   * Emit buffered events (received and emitted).
   *
   * @private
   */
  emitBuffered() {
    this.receiveBuffer.forEach((args) => this.emitEvent(args));
    this.receiveBuffer = [];
    this.sendBuffer.forEach((packet) => {
      this.notifyOutgoingListeners(packet);
      this.packet(packet);
    });
    this.sendBuffer = [];
  }
  /**
   * Called upon server disconnect.
   *
   * @private
   */
  ondisconnect() {
    debug2("server disconnect (%s)", this.nsp);
    this.destroy();
    this.onclose("io server disconnect");
  }
  /**
   * Called upon forced client/server side disconnections,
   * this method ensures the manager stops tracking us and
   * that reconnections don't get triggered for this.
   *
   * @private
   */
  destroy() {
    if (this.subs) {
      this.subs.forEach((subDestroy) => subDestroy());
      this.subs = void 0;
    }
    this.io["_destroy"](this);
  }
  /**
   * Disconnects the socket manually. In that case, the socket will not try to reconnect.
   *
   * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.
   *
   * @example
   * const socket = io();
   *
   * socket.on("disconnect", (reason) => {
   *   // console.log(reason); prints "io client disconnect"
   * });
   *
   * socket.disconnect();
   *
   * @return self
   */
  disconnect() {
    if (this.connected) {
      debug2("performing disconnect (%s)", this.nsp);
      this.packet({ type: PacketType.DISCONNECT });
    }
    this.destroy();
    if (this.connected) {
      this.onclose("io client disconnect");
    }
    return this;
  }
  /**
   * Alias for {@link disconnect()}.
   *
   * @return self
   */
  close() {
    return this.disconnect();
  }
  /**
   * Sets the compress flag.
   *
   * @example
   * socket.compress(false).emit("hello");
   *
   * @param compress - if `true`, compresses the sending data
   * @return self
   */
  compress(compress) {
    this.flags.compress = compress;
    return this;
  }
  /**
   * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not
   * ready to send messages.
   *
   * @example
   * socket.volatile.emit("hello"); // the server may or may not receive it
   *
   * @returns self
   */
  get volatile() {
    this.flags.volatile = true;
    return this;
  }
  /**
   * Sets a modifier for a subsequent event emission that the callback will be called with an error when the
   * given number of milliseconds have elapsed without an acknowledgement from the server:
   *
   * @example
   * socket.timeout(5000).emit("my-event", (err) => {
   *   if (err) {
   *     // the server did not acknowledge the event in the given delay
   *   }
   * });
   *
   * @returns self
   */
  timeout(timeout) {
    this.flags.timeout = timeout;
    return this;
  }
  /**
   * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the
   * callback.
   *
   * @example
   * socket.onAny((event, ...args) => {
   *   console.log(`got ${event}`);
   * });
   *
   * @param listener
   */
  onAny(listener) {
    this._anyListeners = this._anyListeners || [];
    this._anyListeners.push(listener);
    return this;
  }
  /**
   * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the
   * callback. The listener is added to the beginning of the listeners array.
   *
   * @example
   * socket.prependAny((event, ...args) => {
   *   console.log(`got event ${event}`);
   * });
   *
   * @param listener
   */
  prependAny(listener) {
    this._anyListeners = this._anyListeners || [];
    this._anyListeners.unshift(listener);
    return this;
  }
  /**
   * Removes the listener that will be fired when any event is emitted.
   *
   * @example
   * const catchAllListener = (event, ...args) => {
   *   console.log(`got event ${event}`);
   * }
   *
   * socket.onAny(catchAllListener);
   *
   * // remove a specific listener
   * socket.offAny(catchAllListener);
   *
   * // or remove all listeners
   * socket.offAny();
   *
   * @param listener
   */
  offAny(listener) {
    if (!this._anyListeners) {
      return this;
    }
    if (listener) {
      const listeners = this._anyListeners;
      for (let i11 = 0; i11 < listeners.length; i11++) {
        if (listener === listeners[i11]) {
          listeners.splice(i11, 1);
          return this;
        }
      }
    } else {
      this._anyListeners = [];
    }
    return this;
  }
  /**
   * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,
   * e.g. to remove listeners.
   */
  listenersAny() {
    return this._anyListeners || [];
  }
  /**
   * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the
   * callback.
   *
   * Note: acknowledgements sent to the server are not included.
   *
   * @example
   * socket.onAnyOutgoing((event, ...args) => {
   *   console.log(`sent event ${event}`);
   * });
   *
   * @param listener
   */
  onAnyOutgoing(listener) {
    this._anyOutgoingListeners = this._anyOutgoingListeners || [];
    this._anyOutgoingListeners.push(listener);
    return this;
  }
  /**
   * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the
   * callback. The listener is added to the beginning of the listeners array.
   *
   * Note: acknowledgements sent to the server are not included.
   *
   * @example
   * socket.prependAnyOutgoing((event, ...args) => {
   *   console.log(`sent event ${event}`);
   * });
   *
   * @param listener
   */
  prependAnyOutgoing(listener) {
    this._anyOutgoingListeners = this._anyOutgoingListeners || [];
    this._anyOutgoingListeners.unshift(listener);
    return this;
  }
  /**
   * Removes the listener that will be fired when any event is emitted.
   *
   * @example
   * const catchAllListener = (event, ...args) => {
   *   console.log(`sent event ${event}`);
   * }
   *
   * socket.onAnyOutgoing(catchAllListener);
   *
   * // remove a specific listener
   * socket.offAnyOutgoing(catchAllListener);
   *
   * // or remove all listeners
   * socket.offAnyOutgoing();
   *
   * @param [listener] - the catch-all listener (optional)
   */
  offAnyOutgoing(listener) {
    if (!this._anyOutgoingListeners) {
      return this;
    }
    if (listener) {
      const listeners = this._anyOutgoingListeners;
      for (let i11 = 0; i11 < listeners.length; i11++) {
        if (listener === listeners[i11]) {
          listeners.splice(i11, 1);
          return this;
        }
      }
    } else {
      this._anyOutgoingListeners = [];
    }
    return this;
  }
  /**
   * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,
   * e.g. to remove listeners.
   */
  listenersAnyOutgoing() {
    return this._anyOutgoingListeners || [];
  }
  /**
   * Notify the listeners for each packet sent
   *
   * @param packet
   *
   * @private
   */
  notifyOutgoingListeners(packet) {
    if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {
      const listeners = this._anyOutgoingListeners.slice();
      for (const listener of listeners) {
        listener.apply(this, packet.data);
      }
    }
  }
};

// node_modules/socket.io-client/build/esm-debug/contrib/backo2.js
function Backoff(opts) {
  opts = opts || {};
  this.ms = opts.min || 100;
  this.max = opts.max || 1e4;
  this.factor = opts.factor || 2;
  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;
  this.attempts = 0;
}
Backoff.prototype.duration = function() {
  var ms2 = this.ms * Math.pow(this.factor, this.attempts++);
  if (this.jitter) {
    var rand = Math.random();
    var deviation = Math.floor(rand * this.jitter * ms2);
    ms2 = (Math.floor(rand * 10) & 1) == 0 ? ms2 - deviation : ms2 + deviation;
  }
  return Math.min(ms2, this.max) | 0;
};
Backoff.prototype.reset = function() {
  this.attempts = 0;
};
Backoff.prototype.setMin = function(min) {
  this.ms = min;
};
Backoff.prototype.setMax = function(max) {
  this.max = max;
};
Backoff.prototype.setJitter = function(jitter) {
  this.jitter = jitter;
};

// node_modules/socket.io-client/build/esm-debug/manager.js
var import_debug7 = __toESM(require_browser(), 1);
var debug3 = (0, import_debug7.default)("socket.io-client:manager");
var Manager = class extends Emitter {
  constructor(uri, opts) {
    var _a5;
    super();
    this.nsps = {};
    this.subs = [];
    if (uri && "object" === typeof uri) {
      opts = uri;
      uri = void 0;
    }
    opts = opts || {};
    opts.path = opts.path || "/socket.io";
    this.opts = opts;
    installTimerFunctions(this, opts);
    this.reconnection(opts.reconnection !== false);
    this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);
    this.reconnectionDelay(opts.reconnectionDelay || 1e3);
    this.reconnectionDelayMax(opts.reconnectionDelayMax || 5e3);
    this.randomizationFactor((_a5 = opts.randomizationFactor) !== null && _a5 !== void 0 ? _a5 : 0.5);
    this.backoff = new Backoff({
      min: this.reconnectionDelay(),
      max: this.reconnectionDelayMax(),
      jitter: this.randomizationFactor()
    });
    this.timeout(null == opts.timeout ? 2e4 : opts.timeout);
    this._readyState = "closed";
    this.uri = uri;
    const _parser = opts.parser || esm_exports;
    this.encoder = new _parser.Encoder();
    this.decoder = new _parser.Decoder();
    this._autoConnect = opts.autoConnect !== false;
    if (this._autoConnect)
      this.open();
  }
  reconnection(v11) {
    if (!arguments.length)
      return this._reconnection;
    this._reconnection = !!v11;
    return this;
  }
  reconnectionAttempts(v11) {
    if (v11 === void 0)
      return this._reconnectionAttempts;
    this._reconnectionAttempts = v11;
    return this;
  }
  reconnectionDelay(v11) {
    var _a5;
    if (v11 === void 0)
      return this._reconnectionDelay;
    this._reconnectionDelay = v11;
    (_a5 = this.backoff) === null || _a5 === void 0 ? void 0 : _a5.setMin(v11);
    return this;
  }
  randomizationFactor(v11) {
    var _a5;
    if (v11 === void 0)
      return this._randomizationFactor;
    this._randomizationFactor = v11;
    (_a5 = this.backoff) === null || _a5 === void 0 ? void 0 : _a5.setJitter(v11);
    return this;
  }
  reconnectionDelayMax(v11) {
    var _a5;
    if (v11 === void 0)
      return this._reconnectionDelayMax;
    this._reconnectionDelayMax = v11;
    (_a5 = this.backoff) === null || _a5 === void 0 ? void 0 : _a5.setMax(v11);
    return this;
  }
  timeout(v11) {
    if (!arguments.length)
      return this._timeout;
    this._timeout = v11;
    return this;
  }
  /**
   * Starts trying to reconnect if reconnection is enabled and we have not
   * started reconnecting yet
   *
   * @private
   */
  maybeReconnectOnOpen() {
    if (!this._reconnecting && this._reconnection && this.backoff.attempts === 0) {
      this.reconnect();
    }
  }
  /**
   * Sets the current transport `socket`.
   *
   * @param {Function} fn - optional, callback
   * @return self
   * @public
   */
  open(fn) {
    debug3("readyState %s", this._readyState);
    if (~this._readyState.indexOf("open"))
      return this;
    debug3("opening %s", this.uri);
    this.engine = new Socket(this.uri, this.opts);
    const socket = this.engine;
    const self2 = this;
    this._readyState = "opening";
    this.skipReconnect = false;
    const openSubDestroy = on(socket, "open", function() {
      self2.onopen();
      fn && fn();
    });
    const onError = (err) => {
      debug3("error");
      this.cleanup();
      this._readyState = "closed";
      this.emitReserved("error", err);
      if (fn) {
        fn(err);
      } else {
        this.maybeReconnectOnOpen();
      }
    };
    const errorSub = on(socket, "error", onError);
    if (false !== this._timeout) {
      const timeout = this._timeout;
      debug3("connect attempt will timeout after %d", timeout);
      const timer = this.setTimeoutFn(() => {
        debug3("connect attempt timed out after %d", timeout);
        openSubDestroy();
        onError(new Error("timeout"));
        socket.close();
      }, timeout);
      if (this.opts.autoUnref) {
        timer.unref();
      }
      this.subs.push(() => {
        this.clearTimeoutFn(timer);
      });
    }
    this.subs.push(openSubDestroy);
    this.subs.push(errorSub);
    return this;
  }
  /**
   * Alias for open()
   *
   * @return self
   * @public
   */
  connect(fn) {
    return this.open(fn);
  }
  /**
   * Called upon transport open.
   *
   * @private
   */
  onopen() {
    debug3("open");
    this.cleanup();
    this._readyState = "open";
    this.emitReserved("open");
    const socket = this.engine;
    this.subs.push(on(socket, "ping", this.onping.bind(this)), on(socket, "data", this.ondata.bind(this)), on(socket, "error", this.onerror.bind(this)), on(socket, "close", this.onclose.bind(this)), on(this.decoder, "decoded", this.ondecoded.bind(this)));
  }
  /**
   * Called upon a ping.
   *
   * @private
   */
  onping() {
    this.emitReserved("ping");
  }
  /**
   * Called with data.
   *
   * @private
   */
  ondata(data) {
    try {
      this.decoder.add(data);
    } catch (e9) {
      this.onclose("parse error", e9);
    }
  }
  /**
   * Called when parser fully decodes a packet.
   *
   * @private
   */
  ondecoded(packet) {
    nextTick(() => {
      this.emitReserved("packet", packet);
    }, this.setTimeoutFn);
  }
  /**
   * Called upon socket error.
   *
   * @private
   */
  onerror(err) {
    debug3("error", err);
    this.emitReserved("error", err);
  }
  /**
   * Creates a new socket for the given `nsp`.
   *
   * @return {Socket}
   * @public
   */
  socket(nsp, opts) {
    let socket = this.nsps[nsp];
    if (!socket) {
      socket = new Socket2(this, nsp, opts);
      this.nsps[nsp] = socket;
    } else if (this._autoConnect && !socket.active) {
      socket.connect();
    }
    return socket;
  }
  /**
   * Called upon a socket close.
   *
   * @param socket
   * @private
   */
  _destroy(socket) {
    const nsps = Object.keys(this.nsps);
    for (const nsp of nsps) {
      const socket2 = this.nsps[nsp];
      if (socket2.active) {
        debug3("socket %s is still active, skipping close", nsp);
        return;
      }
    }
    this._close();
  }
  /**
   * Writes a packet.
   *
   * @param packet
   * @private
   */
  _packet(packet) {
    debug3("writing packet %j", packet);
    const encodedPackets = this.encoder.encode(packet);
    for (let i11 = 0; i11 < encodedPackets.length; i11++) {
      this.engine.write(encodedPackets[i11], packet.options);
    }
  }
  /**
   * Clean up transport subscriptions and packet buffer.
   *
   * @private
   */
  cleanup() {
    debug3("cleanup");
    this.subs.forEach((subDestroy) => subDestroy());
    this.subs.length = 0;
    this.decoder.destroy();
  }
  /**
   * Close the current socket.
   *
   * @private
   */
  _close() {
    debug3("disconnect");
    this.skipReconnect = true;
    this._reconnecting = false;
    this.onclose("forced close");
    if (this.engine)
      this.engine.close();
  }
  /**
   * Alias for close()
   *
   * @private
   */
  disconnect() {
    return this._close();
  }
  /**
   * Called upon engine close.
   *
   * @private
   */
  onclose(reason, description) {
    debug3("closed due to %s", reason);
    this.cleanup();
    this.backoff.reset();
    this._readyState = "closed";
    this.emitReserved("close", reason, description);
    if (this._reconnection && !this.skipReconnect) {
      this.reconnect();
    }
  }
  /**
   * Attempt a reconnection.
   *
   * @private
   */
  reconnect() {
    if (this._reconnecting || this.skipReconnect)
      return this;
    const self2 = this;
    if (this.backoff.attempts >= this._reconnectionAttempts) {
      debug3("reconnect failed");
      this.backoff.reset();
      this.emitReserved("reconnect_failed");
      this._reconnecting = false;
    } else {
      const delay = this.backoff.duration();
      debug3("will wait %dms before reconnect attempt", delay);
      this._reconnecting = true;
      const timer = this.setTimeoutFn(() => {
        if (self2.skipReconnect)
          return;
        debug3("attempting reconnect");
        this.emitReserved("reconnect_attempt", self2.backoff.attempts);
        if (self2.skipReconnect)
          return;
        self2.open((err) => {
          if (err) {
            debug3("reconnect attempt error");
            self2._reconnecting = false;
            self2.reconnect();
            this.emitReserved("reconnect_error", err);
          } else {
            debug3("reconnect success");
            self2.onreconnect();
          }
        });
      }, delay);
      if (this.opts.autoUnref) {
        timer.unref();
      }
      this.subs.push(() => {
        this.clearTimeoutFn(timer);
      });
    }
  }
  /**
   * Called upon successful reconnect.
   *
   * @private
   */
  onreconnect() {
    const attempt = this.backoff.attempts;
    this._reconnecting = false;
    this.backoff.reset();
    this.emitReserved("reconnect", attempt);
  }
};

// node_modules/socket.io-client/build/esm-debug/index.js
var import_debug8 = __toESM(require_browser());
var debug4 = (0, import_debug8.default)("socket.io-client");
var cache = {};
function lookup2(uri, opts) {
  if (typeof uri === "object") {
    opts = uri;
    uri = void 0;
  }
  opts = opts || {};
  const parsed = url(uri, opts.path || "/socket.io");
  const source = parsed.source;
  const id = parsed.id;
  const path = parsed.path;
  const sameNamespace = cache[id] && path in cache[id]["nsps"];
  const newConnection = opts.forceNew || opts["force new connection"] || false === opts.multiplex || sameNamespace;
  let io2;
  if (newConnection) {
    debug4("ignoring socket cache for %s", source);
    io2 = new Manager(source, opts);
  } else {
    if (!cache[id]) {
      debug4("new io instance for %s", source);
      cache[id] = new Manager(source, opts);
    }
    io2 = cache[id];
  }
  if (parsed.query && !opts.query) {
    opts.query = parsed.queryKey;
  }
  return io2.socket(parsed.path, opts);
}
Object.assign(lookup2, {
  Manager,
  Socket: Socket2,
  io: lookup2,
  connect: lookup2
});

// node_modules/@ckeditor/ckeditor-cloud-services-collaboration/dist/index.js
var import_url_parse = __toESM(require_url_parse());
var Descriptor = class {
  constructor(..._0x583341) {
  }
};
__publicField(Descriptor, "DESCRIPTOR_NAME");
__publicField(Descriptor, "DESCRIPTOR");
var Message = class extends Descriptor {
  constructor(..._0x3b779c) {
    super();
  }
  static ["fromJSON"](object) {
    throw new TypeError("Must be implemented in a child class!");
  }
};
__publicField(Message, "TYPE", "1000");
__publicField(Message, "READABLE_TYPE_NAME");
var _GetUserMessage = class _GetUserMessage extends Message {
  constructor(_0x1dec6f) {
    super();
    __publicField(this, "id");
    this["id"] = _0x1dec6f;
  }
  ["toJSON"]() {
    return { "id": this["id"] };
  }
  static ["fromJSON"](data) {
    return new _GetUserMessage(data["id"]);
  }
};
__publicField(_GetUserMessage, "TYPE", "21");
__publicField(_GetUserMessage, "READABLE_TYPE_NAME", "getUser");
__publicField(_GetUserMessage, "DESCRIPTOR_NAME", "GetUserMessage");
__publicField(_GetUserMessage, "DESCRIPTOR", { "fields": { "id": { "type": "string", "id": 1 } } });
var GetUserMessage = _GetUserMessage;
var _GetUserResponse = class _GetUserResponse extends Message {
  constructor(attributes) {
    super();
    __publicField(this, "attributes");
    this["attributes"] = attributes;
  }
  ["toJSON"]() {
    return { "attributes": Object["keys"](this["attributes"])["map"]((_0x3bbb0d) => ({ "key": _0x3bbb0d, "value": JSON["stringify"](this["attributes"][_0x3bbb0d]) })) };
  }
  static ["fromJSON"](data) {
    const attributes = data["attributes"]["reduce"]((result, _0x2fc895) => (result[_0x2fc895["key"]] = _0x2fc895["value"] ? JSON["parse"](_0x2fc895["value"]) : null, result), {});
    return new _GetUserResponse(attributes);
  }
};
__publicField(_GetUserResponse, "DESCRIPTOR_NAME", "GetUserResponse");
__publicField(_GetUserResponse, "DESCRIPTOR", { "fields": { "attributes": { "rule": "repeated", "type": "KeyValueDescriptor", "id": 1 } } });
var GetUserResponse = _GetUserResponse;
var messages = (() => {
  var _0x476e3c = import_minimal.default["Reader"], $Writer = import_minimal.default["Writer"], $util = import_minimal.default["util"], $root = import_minimal.default["roots"]["default"] || (import_minimal.default["roots"]["default"] = {});
  return $root["OperationMetadataDescriptor"] = function() {
    function OperationMetadataDescriptor2(properties) {
      if (properties) {
        for (var _0x3533fc = Object["keys"](properties), _0x6f5e46 = 0; _0x6f5e46 < _0x3533fc["length"]; ++_0x6f5e46) null != properties[_0x3533fc[_0x6f5e46]] && (this[_0x3533fc[_0x6f5e46]] = properties[_0x3533fc[_0x6f5e46]]);
      }
    }
    return OperationMetadataDescriptor2["prototype"]["userId"] = "", OperationMetadataDescriptor2["prototype"]["type"] = "", OperationMetadataDescriptor2["prototype"]["createdAt"] = "", OperationMetadataDescriptor2["create"] = function(properties) {
      return new OperationMetadataDescriptor2(properties);
    }, OperationMetadataDescriptor2["encode"] = function(_0x32b368, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x32b368["userId"] && Object["hasOwnProperty"]["call"](_0x32b368, "userId") && writer["uint32"](10)["string"](_0x32b368["userId"]), null != _0x32b368["type"] && Object["hasOwnProperty"]["call"](_0x32b368, "type") && writer["uint32"](18)["string"](_0x32b368["type"]), null != _0x32b368["createdAt"] && Object["hasOwnProperty"]["call"](_0x32b368, "createdAt") && writer["uint32"](26)["string"](_0x32b368["createdAt"]), writer;
    }, OperationMetadataDescriptor2["encodeDelimited"] = function(_0x299d36, writer) {
      return this["encode"](_0x299d36, writer)["ldelim"]();
    }, OperationMetadataDescriptor2["decode"] = function(_0x5825c5, length2) {
      _0x5825c5 instanceof _0x476e3c || (_0x5825c5 = _0x476e3c["create"](_0x5825c5));
      for (var _0x30f7cc = void 0 === length2 ? _0x5825c5["len"] : _0x5825c5["pos"] + length2, _0x1481ce = new $root["OperationMetadataDescriptor"](); _0x5825c5["pos"] < _0x30f7cc; ) {
        var tag = _0x5825c5["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x1481ce["userId"] = _0x5825c5["string"]();
            break;
          case 2:
            _0x1481ce["type"] = _0x5825c5["string"]();
            break;
          case 3:
            _0x1481ce["createdAt"] = _0x5825c5["string"]();
            break;
          default:
            _0x5825c5["skipType"](7 & tag);
        }
      }
      return _0x1481ce;
    }, OperationMetadataDescriptor2["decodeDelimited"] = function(_0x111ae2) {
      return _0x111ae2 instanceof _0x476e3c || (_0x111ae2 = new _0x476e3c(_0x111ae2)), this["decode"](_0x111ae2, _0x111ae2["uint32"]());
    }, OperationMetadataDescriptor2["verify"] = function(_0x41f326) {
      return "object" != typeof _0x41f326 || null === _0x41f326 ? "object expected" : null != _0x41f326["userId"] && _0x41f326["hasOwnProperty"]("userId") && !$util["isString"](_0x41f326["userId"]) ? "userId: string expected" : null != _0x41f326["type"] && _0x41f326["hasOwnProperty"]("type") && !$util["isString"](_0x41f326["type"]) ? "type: string expected" : null != _0x41f326["createdAt"] && _0x41f326["hasOwnProperty"]("createdAt") && !$util["isString"](_0x41f326["createdAt"]) ? "createdAt: string expected" : null;
    }, OperationMetadataDescriptor2["fromObject"] = function(object) {
      if (object instanceof $root["OperationMetadataDescriptor"]) return object;
      var _0x4daf06 = new $root["OperationMetadataDescriptor"]();
      return null != object["userId"] && (_0x4daf06["userId"] = String(object["userId"])), null != object["type"] && (_0x4daf06["type"] = String(object["type"])), null != object["createdAt"] && (_0x4daf06["createdAt"] = String(object["createdAt"])), _0x4daf06;
    }, OperationMetadataDescriptor2["toObject"] = function(_0x5570b9, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["userId"] = "", object["type"] = "", object["createdAt"] = ""), null != _0x5570b9["userId"] && _0x5570b9["hasOwnProperty"]("userId") && (object["userId"] = _0x5570b9["userId"]), null != _0x5570b9["type"] && _0x5570b9["hasOwnProperty"]("type") && (object["type"] = _0x5570b9["type"]), null != _0x5570b9["createdAt"] && _0x5570b9["hasOwnProperty"]("createdAt") && (object["createdAt"] = _0x5570b9["createdAt"]), object;
    }, OperationMetadataDescriptor2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, OperationMetadataDescriptor2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/OperationMetadataDescriptor";
    }, OperationMetadataDescriptor2;
  }(), $root["CollaborativeEditingConnectMessage"] = function() {
    function CollaborativeEditingConnectMessage2(properties) {
      if (this["buffers"] = [], this["types"] = [], properties) {
        for (var _0xb3e1e2 = Object["keys"](properties), _0x3c45fa = 0; _0x3c45fa < _0xb3e1e2["length"]; ++_0x3c45fa) null != properties[_0xb3e1e2[_0x3c45fa]] && (this[_0xb3e1e2[_0x3c45fa]] = properties[_0xb3e1e2[_0x3c45fa]]);
      }
    }
    return CollaborativeEditingConnectMessage2["prototype"]["id"] = "", CollaborativeEditingConnectMessage2["prototype"]["bundleVersion"] = "", CollaborativeEditingConnectMessage2["prototype"]["buffers"] = $util["emptyArray"], CollaborativeEditingConnectMessage2["prototype"]["types"] = $util["emptyArray"], CollaborativeEditingConnectMessage2["prototype"]["lastOperationId"] = "", CollaborativeEditingConnectMessage2["create"] = function(properties) {
      return new CollaborativeEditingConnectMessage2(properties);
    }, CollaborativeEditingConnectMessage2["encode"] = function(_0x431b0f, writer) {
      if (writer || (writer = $Writer["create"]()), null != _0x431b0f["id"] && Object["hasOwnProperty"]["call"](_0x431b0f, "id") && writer["uint32"](10)["string"](_0x431b0f["id"]), null != _0x431b0f["bundleVersion"] && Object["hasOwnProperty"]["call"](_0x431b0f, "bundleVersion") && writer["uint32"](18)["string"](_0x431b0f["bundleVersion"]), null != _0x431b0f["buffers"] && _0x431b0f["buffers"]["length"]) {
        for (var _0x569c9f = 0; _0x569c9f < _0x431b0f["buffers"]["length"]; ++_0x569c9f) writer["uint32"](26)["bytes"](_0x431b0f["buffers"][_0x569c9f]);
      }
      if (null != _0x431b0f["types"] && _0x431b0f["types"]["length"]) {
        writer["uint32"](34)["fork"]();
        for (_0x569c9f = 0; _0x569c9f < _0x431b0f["types"]["length"]; ++_0x569c9f) writer["uint32"](_0x431b0f["types"][_0x569c9f]);
        writer["ldelim"]();
      }
      return null != _0x431b0f["lastOperationId"] && Object["hasOwnProperty"]["call"](_0x431b0f, "lastOperationId") && writer["uint32"](42)["string"](_0x431b0f["lastOperationId"]), writer;
    }, CollaborativeEditingConnectMessage2["encodeDelimited"] = function(_0xa59ed9, writer) {
      return this["encode"](_0xa59ed9, writer)["ldelim"]();
    }, CollaborativeEditingConnectMessage2["decode"] = function(_0xcdb41e, length2) {
      _0xcdb41e instanceof _0x476e3c || (_0xcdb41e = _0x476e3c["create"](_0xcdb41e));
      for (var _0x10d89d = void 0 === length2 ? _0xcdb41e["len"] : _0xcdb41e["pos"] + length2, _0x2fcf7e = new $root["CollaborativeEditingConnectMessage"](); _0xcdb41e["pos"] < _0x10d89d; ) {
        var tag = _0xcdb41e["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x2fcf7e["id"] = _0xcdb41e["string"]();
            break;
          case 2:
            _0x2fcf7e["bundleVersion"] = _0xcdb41e["string"]();
            break;
          case 3:
            _0x2fcf7e["buffers"] && _0x2fcf7e["buffers"]["length"] || (_0x2fcf7e["buffers"] = []), _0x2fcf7e["buffers"]["push"](_0xcdb41e["bytes"]());
            break;
          case 4:
            if (_0x2fcf7e["types"] && _0x2fcf7e["types"]["length"] || (_0x2fcf7e["types"] = []), 2 == (7 & tag)) {
              for (var _0x47bc4a = _0xcdb41e["uint32"]() + _0xcdb41e["pos"]; _0xcdb41e["pos"] < _0x47bc4a; ) _0x2fcf7e["types"]["push"](_0xcdb41e["uint32"]());
            } else _0x2fcf7e["types"]["push"](_0xcdb41e["uint32"]());
            break;
          case 5:
            _0x2fcf7e["lastOperationId"] = _0xcdb41e["string"]();
            break;
          default:
            _0xcdb41e["skipType"](7 & tag);
        }
      }
      return _0x2fcf7e;
    }, CollaborativeEditingConnectMessage2["decodeDelimited"] = function(_0x15cf2f) {
      return _0x15cf2f instanceof _0x476e3c || (_0x15cf2f = new _0x476e3c(_0x15cf2f)), this["decode"](_0x15cf2f, _0x15cf2f["uint32"]());
    }, CollaborativeEditingConnectMessage2["verify"] = function(_0x356db8) {
      if ("object" != typeof _0x356db8 || null === _0x356db8) return "object expected";
      if (null != _0x356db8["id"] && _0x356db8["hasOwnProperty"]("id") && !$util["isString"](_0x356db8["id"])) return "id: string expected";
      if (null != _0x356db8["bundleVersion"] && _0x356db8["hasOwnProperty"]("bundleVersion") && !$util["isString"](_0x356db8["bundleVersion"])) return "bundleVersion: string expected";
      if (null != _0x356db8["buffers"] && _0x356db8["hasOwnProperty"]("buffers")) {
        if (!Array["isArray"](_0x356db8["buffers"])) return "buffers: array expected";
        for (var _0x306b8f = 0; _0x306b8f < _0x356db8["buffers"]["length"]; ++_0x306b8f) if (!(_0x356db8["buffers"][_0x306b8f] && "number" == typeof _0x356db8["buffers"][_0x306b8f]["length"] || $util["isString"](_0x356db8["buffers"][_0x306b8f]))) return "buffers: buffer[] expected";
      }
      if (null != _0x356db8["types"] && _0x356db8["hasOwnProperty"]("types")) {
        if (!Array["isArray"](_0x356db8["types"])) return "types: array expected";
        for (_0x306b8f = 0; _0x306b8f < _0x356db8["types"]["length"]; ++_0x306b8f) if (!$util["isInteger"](_0x356db8["types"][_0x306b8f])) return "types: integer[] expected";
      }
      return null != _0x356db8["lastOperationId"] && _0x356db8["hasOwnProperty"]("lastOperationId") && !$util["isString"](_0x356db8["lastOperationId"]) ? "lastOperationId: string expected" : null;
    }, CollaborativeEditingConnectMessage2["fromObject"] = function(object) {
      if (object instanceof $root["CollaborativeEditingConnectMessage"]) return object;
      var _0x57efa5 = new $root["CollaborativeEditingConnectMessage"]();
      if (null != object["id"] && (_0x57efa5["id"] = String(object["id"])), null != object["bundleVersion"] && (_0x57efa5["bundleVersion"] = String(object["bundleVersion"])), object["buffers"]) {
        if (!Array["isArray"](object["buffers"])) throw TypeError(".CollaborativeEditingConnectMessage.buffers: array expected");
        _0x57efa5["buffers"] = [];
        for (var _0x149742 = 0; _0x149742 < object["buffers"]["length"]; ++_0x149742) "string" == typeof object["buffers"][_0x149742] ? $util["base64"]["decode"](object["buffers"][_0x149742], _0x57efa5["buffers"][_0x149742] = $util["newBuffer"]($util["base64"]["length"](object["buffers"][_0x149742])), 0) : object["buffers"][_0x149742]["length"] >= 0 && (_0x57efa5["buffers"][_0x149742] = object["buffers"][_0x149742]);
      }
      if (object["types"]) {
        if (!Array["isArray"](object["types"])) throw TypeError(".CollaborativeEditingConnectMessage.types: array expected");
        _0x57efa5["types"] = [];
        for (_0x149742 = 0; _0x149742 < object["types"]["length"]; ++_0x149742) _0x57efa5["types"][_0x149742] = object["types"][_0x149742] >>> 0;
      }
      return null != object["lastOperationId"] && (_0x57efa5["lastOperationId"] = String(object["lastOperationId"])), _0x57efa5;
    }, CollaborativeEditingConnectMessage2["toObject"] = function(_0x4c287e, options) {
      options || (options = {});
      var object = {};
      if ((options["arrays"] || options["defaults"]) && (object["buffers"] = [], object["types"] = []), options["defaults"] && (object["id"] = "", object["bundleVersion"] = "", object["lastOperationId"] = ""), null != _0x4c287e["id"] && _0x4c287e["hasOwnProperty"]("id") && (object["id"] = _0x4c287e["id"]), null != _0x4c287e["bundleVersion"] && _0x4c287e["hasOwnProperty"]("bundleVersion") && (object["bundleVersion"] = _0x4c287e["bundleVersion"]), _0x4c287e["buffers"] && _0x4c287e["buffers"]["length"]) {
        object["buffers"] = [];
        for (var _0x1e1423 = 0; _0x1e1423 < _0x4c287e["buffers"]["length"]; ++_0x1e1423) object["buffers"][_0x1e1423] = options["bytes"] === String ? $util["base64"]["encode"](_0x4c287e["buffers"][_0x1e1423], 0, _0x4c287e["buffers"][_0x1e1423]["length"]) : options["bytes"] === Array ? Array["prototype"]["slice"]["call"](_0x4c287e["buffers"][_0x1e1423]) : _0x4c287e["buffers"][_0x1e1423];
      }
      if (_0x4c287e["types"] && _0x4c287e["types"]["length"]) {
        object["types"] = [];
        for (_0x1e1423 = 0; _0x1e1423 < _0x4c287e["types"]["length"]; ++_0x1e1423) object["types"][_0x1e1423] = _0x4c287e["types"][_0x1e1423];
      }
      return null != _0x4c287e["lastOperationId"] && _0x4c287e["hasOwnProperty"]("lastOperationId") && (object["lastOperationId"] = _0x4c287e["lastOperationId"]), object;
    }, CollaborativeEditingConnectMessage2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, CollaborativeEditingConnectMessage2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/CollaborativeEditingConnectMessage";
    }, CollaborativeEditingConnectMessage2;
  }(), $root["CollaborativeEditingReconnectMessage"] = function() {
    function CollaborativeEditingReconnectMessage2(properties) {
      if (properties) {
        for (var _0x480d9e = Object["keys"](properties), _0xb06620 = 0; _0xb06620 < _0x480d9e["length"]; ++_0xb06620) null != properties[_0x480d9e[_0xb06620]] && (this[_0x480d9e[_0xb06620]] = properties[_0x480d9e[_0xb06620]]);
      }
    }
    return CollaborativeEditingReconnectMessage2["prototype"]["id"] = "", CollaborativeEditingReconnectMessage2["prototype"]["bundleVersion"] = "", CollaborativeEditingReconnectMessage2["prototype"]["lastKnowVersion"] = 0, CollaborativeEditingReconnectMessage2["create"] = function(properties) {
      return new CollaborativeEditingReconnectMessage2(properties);
    }, CollaborativeEditingReconnectMessage2["encode"] = function(_0x237fd9, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x237fd9["id"] && Object["hasOwnProperty"]["call"](_0x237fd9, "id") && writer["uint32"](10)["string"](_0x237fd9["id"]), null != _0x237fd9["bundleVersion"] && Object["hasOwnProperty"]["call"](_0x237fd9, "bundleVersion") && writer["uint32"](18)["string"](_0x237fd9["bundleVersion"]), null != _0x237fd9["lastKnowVersion"] && Object["hasOwnProperty"]["call"](_0x237fd9, "lastKnowVersion") && writer["uint32"](24)["uint32"](_0x237fd9["lastKnowVersion"]), writer;
    }, CollaborativeEditingReconnectMessage2["encodeDelimited"] = function(_0x5ed96d, writer) {
      return this["encode"](_0x5ed96d, writer)["ldelim"]();
    }, CollaborativeEditingReconnectMessage2["decode"] = function(_0x3e98ec, length2) {
      _0x3e98ec instanceof _0x476e3c || (_0x3e98ec = _0x476e3c["create"](_0x3e98ec));
      for (var _0x2b7a0d = void 0 === length2 ? _0x3e98ec["len"] : _0x3e98ec["pos"] + length2, _0x27e90e = new $root["CollaborativeEditingReconnectMessage"](); _0x3e98ec["pos"] < _0x2b7a0d; ) {
        var tag = _0x3e98ec["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x27e90e["id"] = _0x3e98ec["string"]();
            break;
          case 2:
            _0x27e90e["bundleVersion"] = _0x3e98ec["string"]();
            break;
          case 3:
            _0x27e90e["lastKnowVersion"] = _0x3e98ec["uint32"]();
            break;
          default:
            _0x3e98ec["skipType"](7 & tag);
        }
      }
      return _0x27e90e;
    }, CollaborativeEditingReconnectMessage2["decodeDelimited"] = function(_0x564cdc) {
      return _0x564cdc instanceof _0x476e3c || (_0x564cdc = new _0x476e3c(_0x564cdc)), this["decode"](_0x564cdc, _0x564cdc["uint32"]());
    }, CollaborativeEditingReconnectMessage2["verify"] = function(_0x343373) {
      return "object" != typeof _0x343373 || null === _0x343373 ? "object expected" : null != _0x343373["id"] && _0x343373["hasOwnProperty"]("id") && !$util["isString"](_0x343373["id"]) ? "id: string expected" : null != _0x343373["bundleVersion"] && _0x343373["hasOwnProperty"]("bundleVersion") && !$util["isString"](_0x343373["bundleVersion"]) ? "bundleVersion: string expected" : null != _0x343373["lastKnowVersion"] && _0x343373["hasOwnProperty"]("lastKnowVersion") && !$util["isInteger"](_0x343373["lastKnowVersion"]) ? "lastKnowVersion: integer expected" : null;
    }, CollaborativeEditingReconnectMessage2["fromObject"] = function(object) {
      if (object instanceof $root["CollaborativeEditingReconnectMessage"]) return object;
      var _0x4da2bc = new $root["CollaborativeEditingReconnectMessage"]();
      return null != object["id"] && (_0x4da2bc["id"] = String(object["id"])), null != object["bundleVersion"] && (_0x4da2bc["bundleVersion"] = String(object["bundleVersion"])), null != object["lastKnowVersion"] && (_0x4da2bc["lastKnowVersion"] = object["lastKnowVersion"] >>> 0), _0x4da2bc;
    }, CollaborativeEditingReconnectMessage2["toObject"] = function(_0x231c2e, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["id"] = "", object["bundleVersion"] = "", object["lastKnowVersion"] = 0), null != _0x231c2e["id"] && _0x231c2e["hasOwnProperty"]("id") && (object["id"] = _0x231c2e["id"]), null != _0x231c2e["bundleVersion"] && _0x231c2e["hasOwnProperty"]("bundleVersion") && (object["bundleVersion"] = _0x231c2e["bundleVersion"]), null != _0x231c2e["lastKnowVersion"] && _0x231c2e["hasOwnProperty"]("lastKnowVersion") && (object["lastKnowVersion"] = _0x231c2e["lastKnowVersion"]), object;
    }, CollaborativeEditingReconnectMessage2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, CollaborativeEditingReconnectMessage2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/CollaborativeEditingReconnectMessage";
    }, CollaborativeEditingReconnectMessage2;
  }(), $root["CollaborativeEditingUpdateMessage"] = function() {
    function CollaborativeEditingUpdateMessage2(properties) {
      if (this["buffers"] = [], this["types"] = [], this["metadata"] = [], properties) {
        for (var _0x32b793 = Object["keys"](properties), _0x5aa70e = 0; _0x5aa70e < _0x32b793["length"]; ++_0x5aa70e) null != properties[_0x32b793[_0x5aa70e]] && (this[_0x32b793[_0x5aa70e]] = properties[_0x32b793[_0x5aa70e]]);
      }
    }
    return CollaborativeEditingUpdateMessage2["prototype"]["id"] = "", CollaborativeEditingUpdateMessage2["prototype"]["baseVersion"] = 0, CollaborativeEditingUpdateMessage2["prototype"]["buffers"] = $util["emptyArray"], CollaborativeEditingUpdateMessage2["prototype"]["types"] = $util["emptyArray"], CollaborativeEditingUpdateMessage2["prototype"]["metadata"] = $util["emptyArray"], CollaborativeEditingUpdateMessage2["prototype"]["lastOperationId"] = "", CollaborativeEditingUpdateMessage2["create"] = function(properties) {
      return new CollaborativeEditingUpdateMessage2(properties);
    }, CollaborativeEditingUpdateMessage2["encode"] = function(_0x125d50, writer) {
      if (writer || (writer = $Writer["create"]()), null != _0x125d50["id"] && Object["hasOwnProperty"]["call"](_0x125d50, "id") && writer["uint32"](10)["string"](_0x125d50["id"]), null != _0x125d50["baseVersion"] && Object["hasOwnProperty"]["call"](_0x125d50, "baseVersion") && writer["uint32"](16)["uint32"](_0x125d50["baseVersion"]), null != _0x125d50["buffers"] && _0x125d50["buffers"]["length"]) {
        for (var _0x37b0ed = 0; _0x37b0ed < _0x125d50["buffers"]["length"]; ++_0x37b0ed) writer["uint32"](26)["bytes"](_0x125d50["buffers"][_0x37b0ed]);
      }
      if (null != _0x125d50["types"] && _0x125d50["types"]["length"]) {
        writer["uint32"](34)["fork"]();
        for (_0x37b0ed = 0; _0x37b0ed < _0x125d50["types"]["length"]; ++_0x37b0ed) writer["uint32"](_0x125d50["types"][_0x37b0ed]);
        writer["ldelim"]();
      }
      if (null != _0x125d50["metadata"] && _0x125d50["metadata"]["length"]) {
        for (_0x37b0ed = 0; _0x37b0ed < _0x125d50["metadata"]["length"]; ++_0x37b0ed) $root["OperationMetadataDescriptor"]["encode"](_0x125d50["metadata"][_0x37b0ed], writer["uint32"](50)["fork"]())["ldelim"]();
      }
      return null != _0x125d50["lastOperationId"] && Object["hasOwnProperty"]["call"](_0x125d50, "lastOperationId") && writer["uint32"](58)["string"](_0x125d50["lastOperationId"]), writer;
    }, CollaborativeEditingUpdateMessage2["encodeDelimited"] = function(_0xe277d2, writer) {
      return this["encode"](_0xe277d2, writer)["ldelim"]();
    }, CollaborativeEditingUpdateMessage2["decode"] = function(_0x4b44fd, length2) {
      _0x4b44fd instanceof _0x476e3c || (_0x4b44fd = _0x476e3c["create"](_0x4b44fd));
      for (var _0x19043d = void 0 === length2 ? _0x4b44fd["len"] : _0x4b44fd["pos"] + length2, _0x240447 = new $root["CollaborativeEditingUpdateMessage"](); _0x4b44fd["pos"] < _0x19043d; ) {
        var tag = _0x4b44fd["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x240447["id"] = _0x4b44fd["string"]();
            break;
          case 2:
            _0x240447["baseVersion"] = _0x4b44fd["uint32"]();
            break;
          case 3:
            _0x240447["buffers"] && _0x240447["buffers"]["length"] || (_0x240447["buffers"] = []), _0x240447["buffers"]["push"](_0x4b44fd["bytes"]());
            break;
          case 4:
            if (_0x240447["types"] && _0x240447["types"]["length"] || (_0x240447["types"] = []), 2 == (7 & tag)) {
              for (var _0x2141ae = _0x4b44fd["uint32"]() + _0x4b44fd["pos"]; _0x4b44fd["pos"] < _0x2141ae; ) _0x240447["types"]["push"](_0x4b44fd["uint32"]());
            } else _0x240447["types"]["push"](_0x4b44fd["uint32"]());
            break;
          case 6:
            _0x240447["metadata"] && _0x240447["metadata"]["length"] || (_0x240447["metadata"] = []), _0x240447["metadata"]["push"]($root["OperationMetadataDescriptor"]["decode"](_0x4b44fd, _0x4b44fd["uint32"]()));
            break;
          case 7:
            _0x240447["lastOperationId"] = _0x4b44fd["string"]();
            break;
          default:
            _0x4b44fd["skipType"](7 & tag);
        }
      }
      return _0x240447;
    }, CollaborativeEditingUpdateMessage2["decodeDelimited"] = function(_0x29b8fa) {
      return _0x29b8fa instanceof _0x476e3c || (_0x29b8fa = new _0x476e3c(_0x29b8fa)), this["decode"](_0x29b8fa, _0x29b8fa["uint32"]());
    }, CollaborativeEditingUpdateMessage2["verify"] = function(_0x3d180b) {
      if ("object" != typeof _0x3d180b || null === _0x3d180b) return "object expected";
      if (null != _0x3d180b["id"] && _0x3d180b["hasOwnProperty"]("id") && !$util["isString"](_0x3d180b["id"])) return "id: string expected";
      if (null != _0x3d180b["baseVersion"] && _0x3d180b["hasOwnProperty"]("baseVersion") && !$util["isInteger"](_0x3d180b["baseVersion"])) return "baseVersion: integer expected";
      if (null != _0x3d180b["buffers"] && _0x3d180b["hasOwnProperty"]("buffers")) {
        if (!Array["isArray"](_0x3d180b["buffers"])) return "buffers: array expected";
        for (var _0x387b13 = 0; _0x387b13 < _0x3d180b["buffers"]["length"]; ++_0x387b13) if (!(_0x3d180b["buffers"][_0x387b13] && "number" == typeof _0x3d180b["buffers"][_0x387b13]["length"] || $util["isString"](_0x3d180b["buffers"][_0x387b13]))) return "buffers: buffer[] expected";
      }
      if (null != _0x3d180b["types"] && _0x3d180b["hasOwnProperty"]("types")) {
        if (!Array["isArray"](_0x3d180b["types"])) return "types: array expected";
        for (_0x387b13 = 0; _0x387b13 < _0x3d180b["types"]["length"]; ++_0x387b13) if (!$util["isInteger"](_0x3d180b["types"][_0x387b13])) return "types: integer[] expected";
      }
      if (null != _0x3d180b["metadata"] && _0x3d180b["hasOwnProperty"]("metadata")) {
        if (!Array["isArray"](_0x3d180b["metadata"])) return "metadata: array expected";
        for (_0x387b13 = 0; _0x387b13 < _0x3d180b["metadata"]["length"]; ++_0x387b13) {
          var _0x28a964 = $root["OperationMetadataDescriptor"]["verify"](_0x3d180b["metadata"][_0x387b13]);
          if (_0x28a964) return "metadata." + _0x28a964;
        }
      }
      return null != _0x3d180b["lastOperationId"] && _0x3d180b["hasOwnProperty"]("lastOperationId") && !$util["isString"](_0x3d180b["lastOperationId"]) ? "lastOperationId: string expected" : null;
    }, CollaborativeEditingUpdateMessage2["fromObject"] = function(object) {
      if (object instanceof $root["CollaborativeEditingUpdateMessage"]) return object;
      var _0x40045c = new $root["CollaborativeEditingUpdateMessage"]();
      if (null != object["id"] && (_0x40045c["id"] = String(object["id"])), null != object["baseVersion"] && (_0x40045c["baseVersion"] = object["baseVersion"] >>> 0), object["buffers"]) {
        if (!Array["isArray"](object["buffers"])) throw TypeError(".CollaborativeEditingUpdateMessage.buffers: array expected");
        _0x40045c["buffers"] = [];
        for (var _0x1ff852 = 0; _0x1ff852 < object["buffers"]["length"]; ++_0x1ff852) "string" == typeof object["buffers"][_0x1ff852] ? $util["base64"]["decode"](object["buffers"][_0x1ff852], _0x40045c["buffers"][_0x1ff852] = $util["newBuffer"]($util["base64"]["length"](object["buffers"][_0x1ff852])), 0) : object["buffers"][_0x1ff852]["length"] >= 0 && (_0x40045c["buffers"][_0x1ff852] = object["buffers"][_0x1ff852]);
      }
      if (object["types"]) {
        if (!Array["isArray"](object["types"])) throw TypeError(".CollaborativeEditingUpdateMessage.types: array expected");
        _0x40045c["types"] = [];
        for (_0x1ff852 = 0; _0x1ff852 < object["types"]["length"]; ++_0x1ff852) _0x40045c["types"][_0x1ff852] = object["types"][_0x1ff852] >>> 0;
      }
      if (object["metadata"]) {
        if (!Array["isArray"](object["metadata"])) throw TypeError(".CollaborativeEditingUpdateMessage.metadata: array expected");
        _0x40045c["metadata"] = [];
        for (_0x1ff852 = 0; _0x1ff852 < object["metadata"]["length"]; ++_0x1ff852) {
          if ("object" != typeof object["metadata"][_0x1ff852]) throw TypeError(".CollaborativeEditingUpdateMessage.metadata: object expected");
          _0x40045c["metadata"][_0x1ff852] = $root["OperationMetadataDescriptor"]["fromObject"](object["metadata"][_0x1ff852]);
        }
      }
      return null != object["lastOperationId"] && (_0x40045c["lastOperationId"] = String(object["lastOperationId"])), _0x40045c;
    }, CollaborativeEditingUpdateMessage2["toObject"] = function(_0xef4179, options) {
      options || (options = {});
      var object = {};
      if ((options["arrays"] || options["defaults"]) && (object["buffers"] = [], object["types"] = [], object["metadata"] = []), options["defaults"] && (object["id"] = "", object["baseVersion"] = 0, object["lastOperationId"] = ""), null != _0xef4179["id"] && _0xef4179["hasOwnProperty"]("id") && (object["id"] = _0xef4179["id"]), null != _0xef4179["baseVersion"] && _0xef4179["hasOwnProperty"]("baseVersion") && (object["baseVersion"] = _0xef4179["baseVersion"]), _0xef4179["buffers"] && _0xef4179["buffers"]["length"]) {
        object["buffers"] = [];
        for (var _0x3d36bb = 0; _0x3d36bb < _0xef4179["buffers"]["length"]; ++_0x3d36bb) object["buffers"][_0x3d36bb] = options["bytes"] === String ? $util["base64"]["encode"](_0xef4179["buffers"][_0x3d36bb], 0, _0xef4179["buffers"][_0x3d36bb]["length"]) : options["bytes"] === Array ? Array["prototype"]["slice"]["call"](_0xef4179["buffers"][_0x3d36bb]) : _0xef4179["buffers"][_0x3d36bb];
      }
      if (_0xef4179["types"] && _0xef4179["types"]["length"]) {
        object["types"] = [];
        for (_0x3d36bb = 0; _0x3d36bb < _0xef4179["types"]["length"]; ++_0x3d36bb) object["types"][_0x3d36bb] = _0xef4179["types"][_0x3d36bb];
      }
      if (_0xef4179["metadata"] && _0xef4179["metadata"]["length"]) {
        object["metadata"] = [];
        for (_0x3d36bb = 0; _0x3d36bb < _0xef4179["metadata"]["length"]; ++_0x3d36bb) object["metadata"][_0x3d36bb] = $root["OperationMetadataDescriptor"]["toObject"](_0xef4179["metadata"][_0x3d36bb], options);
      }
      return null != _0xef4179["lastOperationId"] && _0xef4179["hasOwnProperty"]("lastOperationId") && (object["lastOperationId"] = _0xef4179["lastOperationId"]), object;
    }, CollaborativeEditingUpdateMessage2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, CollaborativeEditingUpdateMessage2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/CollaborativeEditingUpdateMessage";
    }, CollaborativeEditingUpdateMessage2;
  }(), $root["GetDocumentDetailsMessage"] = function() {
    function GetDocumentDetailsMessage2(properties) {
      if (properties) {
        for (var _0x4c6096 = Object["keys"](properties), _0x2aec3c = 0; _0x2aec3c < _0x4c6096["length"]; ++_0x2aec3c) null != properties[_0x4c6096[_0x2aec3c]] && (this[_0x4c6096[_0x2aec3c]] = properties[_0x4c6096[_0x2aec3c]]);
      }
    }
    return GetDocumentDetailsMessage2["prototype"]["documentId"] = "", GetDocumentDetailsMessage2["prototype"]["environmentId"] = "", GetDocumentDetailsMessage2["create"] = function(properties) {
      return new GetDocumentDetailsMessage2(properties);
    }, GetDocumentDetailsMessage2["encode"] = function(_0x25e7f0, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x25e7f0["documentId"] && Object["hasOwnProperty"]["call"](_0x25e7f0, "documentId") && writer["uint32"](10)["string"](_0x25e7f0["documentId"]), null != _0x25e7f0["environmentId"] && Object["hasOwnProperty"]["call"](_0x25e7f0, "environmentId") && writer["uint32"](18)["string"](_0x25e7f0["environmentId"]), writer;
    }, GetDocumentDetailsMessage2["encodeDelimited"] = function(_0x874d91, writer) {
      return this["encode"](_0x874d91, writer)["ldelim"]();
    }, GetDocumentDetailsMessage2["decode"] = function(_0x139935, length2) {
      _0x139935 instanceof _0x476e3c || (_0x139935 = _0x476e3c["create"](_0x139935));
      for (var _0x4247e8 = void 0 === length2 ? _0x139935["len"] : _0x139935["pos"] + length2, _0x331d20 = new $root["GetDocumentDetailsMessage"](); _0x139935["pos"] < _0x4247e8; ) {
        var tag = _0x139935["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x331d20["documentId"] = _0x139935["string"]();
            break;
          case 2:
            _0x331d20["environmentId"] = _0x139935["string"]();
            break;
          default:
            _0x139935["skipType"](7 & tag);
        }
      }
      return _0x331d20;
    }, GetDocumentDetailsMessage2["decodeDelimited"] = function(_0x483a05) {
      return _0x483a05 instanceof _0x476e3c || (_0x483a05 = new _0x476e3c(_0x483a05)), this["decode"](_0x483a05, _0x483a05["uint32"]());
    }, GetDocumentDetailsMessage2["verify"] = function(_0x35fa47) {
      return "object" != typeof _0x35fa47 || null === _0x35fa47 ? "object expected" : null != _0x35fa47["documentId"] && _0x35fa47["hasOwnProperty"]("documentId") && !$util["isString"](_0x35fa47["documentId"]) ? "documentId: string expected" : null != _0x35fa47["environmentId"] && _0x35fa47["hasOwnProperty"]("environmentId") && !$util["isString"](_0x35fa47["environmentId"]) ? "environmentId: string expected" : null;
    }, GetDocumentDetailsMessage2["fromObject"] = function(object) {
      if (object instanceof $root["GetDocumentDetailsMessage"]) return object;
      var _0x589241 = new $root["GetDocumentDetailsMessage"]();
      return null != object["documentId"] && (_0x589241["documentId"] = String(object["documentId"])), null != object["environmentId"] && (_0x589241["environmentId"] = String(object["environmentId"])), _0x589241;
    }, GetDocumentDetailsMessage2["toObject"] = function(_0x13ca6c, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["documentId"] = "", object["environmentId"] = ""), null != _0x13ca6c["documentId"] && _0x13ca6c["hasOwnProperty"]("documentId") && (object["documentId"] = _0x13ca6c["documentId"]), null != _0x13ca6c["environmentId"] && _0x13ca6c["hasOwnProperty"]("environmentId") && (object["environmentId"] = _0x13ca6c["environmentId"]), object;
    }, GetDocumentDetailsMessage2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, GetDocumentDetailsMessage2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/GetDocumentDetailsMessage";
    }, GetDocumentDetailsMessage2;
  }(), $root["CollaborativeEditingConnectResponse"] = function() {
    function CollaborativeEditingConnectResponse2(properties) {
      if (this["buffers"] = [], this["types"] = [], this["metadata"] = [], properties) {
        for (var _0x562631 = Object["keys"](properties), _0x87a44f = 0; _0x87a44f < _0x562631["length"]; ++_0x87a44f) null != properties[_0x562631[_0x87a44f]] && (this[_0x562631[_0x87a44f]] = properties[_0x562631[_0x87a44f]]);
      }
    }
    return CollaborativeEditingConnectResponse2["prototype"]["channel"] = "", CollaborativeEditingConnectResponse2["prototype"]["offset"] = 0, CollaborativeEditingConnectResponse2["prototype"]["version"] = 0, CollaborativeEditingConnectResponse2["prototype"]["buffers"] = $util["emptyArray"], CollaborativeEditingConnectResponse2["prototype"]["types"] = $util["emptyArray"], CollaborativeEditingConnectResponse2["prototype"]["metadata"] = $util["emptyArray"], CollaborativeEditingConnectResponse2["prototype"]["initData"] = "", CollaborativeEditingConnectResponse2["prototype"]["isInitialized"] = false, CollaborativeEditingConnectResponse2["prototype"]["sessionId"] = "", CollaborativeEditingConnectResponse2["prototype"]["lastOperationId"] = "", CollaborativeEditingConnectResponse2["prototype"]["sessionCreatedAt"] = "", CollaborativeEditingConnectResponse2["create"] = function(properties) {
      return new CollaborativeEditingConnectResponse2(properties);
    }, CollaborativeEditingConnectResponse2["encode"] = function(_0x1b7c41, writer) {
      if (writer || (writer = $Writer["create"]()), null != _0x1b7c41["channel"] && Object["hasOwnProperty"]["call"](_0x1b7c41, "channel") && writer["uint32"](10)["string"](_0x1b7c41["channel"]), null != _0x1b7c41["offset"] && Object["hasOwnProperty"]["call"](_0x1b7c41, "offset") && writer["uint32"](16)["uint32"](_0x1b7c41["offset"]), null != _0x1b7c41["version"] && Object["hasOwnProperty"]["call"](_0x1b7c41, "version") && writer["uint32"](24)["uint32"](_0x1b7c41["version"]), null != _0x1b7c41["buffers"] && _0x1b7c41["buffers"]["length"]) {
        for (var _0xf1f939 = 0; _0xf1f939 < _0x1b7c41["buffers"]["length"]; ++_0xf1f939) writer["uint32"](34)["bytes"](_0x1b7c41["buffers"][_0xf1f939]);
      }
      if (null != _0x1b7c41["types"] && _0x1b7c41["types"]["length"]) {
        writer["uint32"](42)["fork"]();
        for (_0xf1f939 = 0; _0xf1f939 < _0x1b7c41["types"]["length"]; ++_0xf1f939) writer["uint32"](_0x1b7c41["types"][_0xf1f939]);
        writer["ldelim"]();
      }
      if (null != _0x1b7c41["metadata"] && _0x1b7c41["metadata"]["length"]) {
        for (_0xf1f939 = 0; _0xf1f939 < _0x1b7c41["metadata"]["length"]; ++_0xf1f939) $root["OperationMetadataDescriptor"]["encode"](_0x1b7c41["metadata"][_0xf1f939], writer["uint32"](58)["fork"]())["ldelim"]();
      }
      return null != _0x1b7c41["initData"] && Object["hasOwnProperty"]["call"](_0x1b7c41, "initData") && writer["uint32"](66)["string"](_0x1b7c41["initData"]), null != _0x1b7c41["isInitialized"] && Object["hasOwnProperty"]["call"](_0x1b7c41, "isInitialized") && writer["uint32"](72)["bool"](_0x1b7c41["isInitialized"]), null != _0x1b7c41["sessionId"] && Object["hasOwnProperty"]["call"](_0x1b7c41, "sessionId") && writer["uint32"](82)["string"](_0x1b7c41["sessionId"]), null != _0x1b7c41["lastOperationId"] && Object["hasOwnProperty"]["call"](_0x1b7c41, "lastOperationId") && writer["uint32"](90)["string"](_0x1b7c41["lastOperationId"]), null != _0x1b7c41["sessionCreatedAt"] && Object["hasOwnProperty"]["call"](_0x1b7c41, "sessionCreatedAt") && writer["uint32"](98)["string"](_0x1b7c41["sessionCreatedAt"]), writer;
    }, CollaborativeEditingConnectResponse2["encodeDelimited"] = function(_0x525445, writer) {
      return this["encode"](_0x525445, writer)["ldelim"]();
    }, CollaborativeEditingConnectResponse2["decode"] = function(_0x51fda4, length2) {
      _0x51fda4 instanceof _0x476e3c || (_0x51fda4 = _0x476e3c["create"](_0x51fda4));
      for (var _0x20b4ff = void 0 === length2 ? _0x51fda4["len"] : _0x51fda4["pos"] + length2, _0x587cda = new $root["CollaborativeEditingConnectResponse"](); _0x51fda4["pos"] < _0x20b4ff; ) {
        var tag = _0x51fda4["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x587cda["channel"] = _0x51fda4["string"]();
            break;
          case 2:
            _0x587cda["offset"] = _0x51fda4["uint32"]();
            break;
          case 3:
            _0x587cda["version"] = _0x51fda4["uint32"]();
            break;
          case 4:
            _0x587cda["buffers"] && _0x587cda["buffers"]["length"] || (_0x587cda["buffers"] = []), _0x587cda["buffers"]["push"](_0x51fda4["bytes"]());
            break;
          case 5:
            if (_0x587cda["types"] && _0x587cda["types"]["length"] || (_0x587cda["types"] = []), 2 == (7 & tag)) {
              for (var _0xe5c095 = _0x51fda4["uint32"]() + _0x51fda4["pos"]; _0x51fda4["pos"] < _0xe5c095; ) _0x587cda["types"]["push"](_0x51fda4["uint32"]());
            } else _0x587cda["types"]["push"](_0x51fda4["uint32"]());
            break;
          case 7:
            _0x587cda["metadata"] && _0x587cda["metadata"]["length"] || (_0x587cda["metadata"] = []), _0x587cda["metadata"]["push"]($root["OperationMetadataDescriptor"]["decode"](_0x51fda4, _0x51fda4["uint32"]()));
            break;
          case 8:
            _0x587cda["initData"] = _0x51fda4["string"]();
            break;
          case 9:
            _0x587cda["isInitialized"] = _0x51fda4["bool"]();
            break;
          case 10:
            _0x587cda["sessionId"] = _0x51fda4["string"]();
            break;
          case 11:
            _0x587cda["lastOperationId"] = _0x51fda4["string"]();
            break;
          case 12:
            _0x587cda["sessionCreatedAt"] = _0x51fda4["string"]();
            break;
          default:
            _0x51fda4["skipType"](7 & tag);
        }
      }
      return _0x587cda;
    }, CollaborativeEditingConnectResponse2["decodeDelimited"] = function(_0x939e5e) {
      return _0x939e5e instanceof _0x476e3c || (_0x939e5e = new _0x476e3c(_0x939e5e)), this["decode"](_0x939e5e, _0x939e5e["uint32"]());
    }, CollaborativeEditingConnectResponse2["verify"] = function(_0x3297c7) {
      if ("object" != typeof _0x3297c7 || null === _0x3297c7) return "object expected";
      if (null != _0x3297c7["channel"] && _0x3297c7["hasOwnProperty"]("channel") && !$util["isString"](_0x3297c7["channel"])) return "channel: string expected";
      if (null != _0x3297c7["offset"] && _0x3297c7["hasOwnProperty"]("offset") && !$util["isInteger"](_0x3297c7["offset"])) return "offset: integer expected";
      if (null != _0x3297c7["version"] && _0x3297c7["hasOwnProperty"]("version") && !$util["isInteger"](_0x3297c7["version"])) return "version: integer expected";
      if (null != _0x3297c7["buffers"] && _0x3297c7["hasOwnProperty"]("buffers")) {
        if (!Array["isArray"](_0x3297c7["buffers"])) return "buffers: array expected";
        for (var _0x49cbe0 = 0; _0x49cbe0 < _0x3297c7["buffers"]["length"]; ++_0x49cbe0) if (!(_0x3297c7["buffers"][_0x49cbe0] && "number" == typeof _0x3297c7["buffers"][_0x49cbe0]["length"] || $util["isString"](_0x3297c7["buffers"][_0x49cbe0]))) return "buffers: buffer[] expected";
      }
      if (null != _0x3297c7["types"] && _0x3297c7["hasOwnProperty"]("types")) {
        if (!Array["isArray"](_0x3297c7["types"])) return "types: array expected";
        for (_0x49cbe0 = 0; _0x49cbe0 < _0x3297c7["types"]["length"]; ++_0x49cbe0) if (!$util["isInteger"](_0x3297c7["types"][_0x49cbe0])) return "types: integer[] expected";
      }
      if (null != _0x3297c7["metadata"] && _0x3297c7["hasOwnProperty"]("metadata")) {
        if (!Array["isArray"](_0x3297c7["metadata"])) return "metadata: array expected";
        for (_0x49cbe0 = 0; _0x49cbe0 < _0x3297c7["metadata"]["length"]; ++_0x49cbe0) {
          var _0x508727 = $root["OperationMetadataDescriptor"]["verify"](_0x3297c7["metadata"][_0x49cbe0]);
          if (_0x508727) return "metadata." + _0x508727;
        }
      }
      return null != _0x3297c7["initData"] && _0x3297c7["hasOwnProperty"]("initData") && !$util["isString"](_0x3297c7["initData"]) ? "initData: string expected" : null != _0x3297c7["isInitialized"] && _0x3297c7["hasOwnProperty"]("isInitialized") && "boolean" != typeof _0x3297c7["isInitialized"] ? "isInitialized: boolean expected" : null != _0x3297c7["sessionId"] && _0x3297c7["hasOwnProperty"]("sessionId") && !$util["isString"](_0x3297c7["sessionId"]) ? "sessionId: string expected" : null != _0x3297c7["lastOperationId"] && _0x3297c7["hasOwnProperty"]("lastOperationId") && !$util["isString"](_0x3297c7["lastOperationId"]) ? "lastOperationId: string expected" : null != _0x3297c7["sessionCreatedAt"] && _0x3297c7["hasOwnProperty"]("sessionCreatedAt") && !$util["isString"](_0x3297c7["sessionCreatedAt"]) ? "sessionCreatedAt: string expected" : null;
    }, CollaborativeEditingConnectResponse2["fromObject"] = function(object) {
      if (object instanceof $root["CollaborativeEditingConnectResponse"]) return object;
      var _0x31f092 = new $root["CollaborativeEditingConnectResponse"]();
      if (null != object["channel"] && (_0x31f092["channel"] = String(object["channel"])), null != object["offset"] && (_0x31f092["offset"] = object["offset"] >>> 0), null != object["version"] && (_0x31f092["version"] = object["version"] >>> 0), object["buffers"]) {
        if (!Array["isArray"](object["buffers"])) throw TypeError(".CollaborativeEditingConnectResponse.buffers: array expected");
        _0x31f092["buffers"] = [];
        for (var _0x5d800e = 0; _0x5d800e < object["buffers"]["length"]; ++_0x5d800e) "string" == typeof object["buffers"][_0x5d800e] ? $util["base64"]["decode"](object["buffers"][_0x5d800e], _0x31f092["buffers"][_0x5d800e] = $util["newBuffer"]($util["base64"]["length"](object["buffers"][_0x5d800e])), 0) : object["buffers"][_0x5d800e]["length"] >= 0 && (_0x31f092["buffers"][_0x5d800e] = object["buffers"][_0x5d800e]);
      }
      if (object["types"]) {
        if (!Array["isArray"](object["types"])) throw TypeError(".CollaborativeEditingConnectResponse.types: array expected");
        _0x31f092["types"] = [];
        for (_0x5d800e = 0; _0x5d800e < object["types"]["length"]; ++_0x5d800e) _0x31f092["types"][_0x5d800e] = object["types"][_0x5d800e] >>> 0;
      }
      if (object["metadata"]) {
        if (!Array["isArray"](object["metadata"])) throw TypeError(".CollaborativeEditingConnectResponse.metadata: array expected");
        _0x31f092["metadata"] = [];
        for (_0x5d800e = 0; _0x5d800e < object["metadata"]["length"]; ++_0x5d800e) {
          if ("object" != typeof object["metadata"][_0x5d800e]) throw TypeError(".CollaborativeEditingConnectResponse.metadata: object expected");
          _0x31f092["metadata"][_0x5d800e] = $root["OperationMetadataDescriptor"]["fromObject"](object["metadata"][_0x5d800e]);
        }
      }
      return null != object["initData"] && (_0x31f092["initData"] = String(object["initData"])), null != object["isInitialized"] && (_0x31f092["isInitialized"] = Boolean(object["isInitialized"])), null != object["sessionId"] && (_0x31f092["sessionId"] = String(object["sessionId"])), null != object["lastOperationId"] && (_0x31f092["lastOperationId"] = String(object["lastOperationId"])), null != object["sessionCreatedAt"] && (_0x31f092["sessionCreatedAt"] = String(object["sessionCreatedAt"])), _0x31f092;
    }, CollaborativeEditingConnectResponse2["toObject"] = function(_0x16738c, options) {
      options || (options = {});
      var object = {};
      if ((options["arrays"] || options["defaults"]) && (object["buffers"] = [], object["types"] = [], object["metadata"] = []), options["defaults"] && (object["channel"] = "", object["offset"] = 0, object["version"] = 0, object["initData"] = "", object["isInitialized"] = false, object["sessionId"] = "", object["lastOperationId"] = "", object["sessionCreatedAt"] = ""), null != _0x16738c["channel"] && _0x16738c["hasOwnProperty"]("channel") && (object["channel"] = _0x16738c["channel"]), null != _0x16738c["offset"] && _0x16738c["hasOwnProperty"]("offset") && (object["offset"] = _0x16738c["offset"]), null != _0x16738c["version"] && _0x16738c["hasOwnProperty"]("version") && (object["version"] = _0x16738c["version"]), _0x16738c["buffers"] && _0x16738c["buffers"]["length"]) {
        object["buffers"] = [];
        for (var _0xc43203 = 0; _0xc43203 < _0x16738c["buffers"]["length"]; ++_0xc43203) object["buffers"][_0xc43203] = options["bytes"] === String ? $util["base64"]["encode"](_0x16738c["buffers"][_0xc43203], 0, _0x16738c["buffers"][_0xc43203]["length"]) : options["bytes"] === Array ? Array["prototype"]["slice"]["call"](_0x16738c["buffers"][_0xc43203]) : _0x16738c["buffers"][_0xc43203];
      }
      if (_0x16738c["types"] && _0x16738c["types"]["length"]) {
        object["types"] = [];
        for (_0xc43203 = 0; _0xc43203 < _0x16738c["types"]["length"]; ++_0xc43203) object["types"][_0xc43203] = _0x16738c["types"][_0xc43203];
      }
      if (_0x16738c["metadata"] && _0x16738c["metadata"]["length"]) {
        object["metadata"] = [];
        for (_0xc43203 = 0; _0xc43203 < _0x16738c["metadata"]["length"]; ++_0xc43203) object["metadata"][_0xc43203] = $root["OperationMetadataDescriptor"]["toObject"](_0x16738c["metadata"][_0xc43203], options);
      }
      return null != _0x16738c["initData"] && _0x16738c["hasOwnProperty"]("initData") && (object["initData"] = _0x16738c["initData"]), null != _0x16738c["isInitialized"] && _0x16738c["hasOwnProperty"]("isInitialized") && (object["isInitialized"] = _0x16738c["isInitialized"]), null != _0x16738c["sessionId"] && _0x16738c["hasOwnProperty"]("sessionId") && (object["sessionId"] = _0x16738c["sessionId"]), null != _0x16738c["lastOperationId"] && _0x16738c["hasOwnProperty"]("lastOperationId") && (object["lastOperationId"] = _0x16738c["lastOperationId"]), null != _0x16738c["sessionCreatedAt"] && _0x16738c["hasOwnProperty"]("sessionCreatedAt") && (object["sessionCreatedAt"] = _0x16738c["sessionCreatedAt"]), object;
    }, CollaborativeEditingConnectResponse2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, CollaborativeEditingConnectResponse2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/CollaborativeEditingConnectResponse";
    }, CollaborativeEditingConnectResponse2;
  }(), $root["CollaborativeEditingResponse"] = function() {
    function CollaborativeEditingResponse2(properties) {
      if (this["buffers"] = [], this["types"] = [], this["metadata"] = [], properties) {
        for (var _0x2f3c91 = Object["keys"](properties), _0x147b3a = 0; _0x147b3a < _0x2f3c91["length"]; ++_0x147b3a) null != properties[_0x2f3c91[_0x147b3a]] && (this[_0x2f3c91[_0x147b3a]] = properties[_0x2f3c91[_0x147b3a]]);
      }
    }
    return CollaborativeEditingResponse2["prototype"]["version"] = 0, CollaborativeEditingResponse2["prototype"]["buffers"] = $util["emptyArray"], CollaborativeEditingResponse2["prototype"]["types"] = $util["emptyArray"], CollaborativeEditingResponse2["prototype"]["metadata"] = $util["emptyArray"], CollaborativeEditingResponse2["prototype"]["lastOperationId"] = "", CollaborativeEditingResponse2["prototype"]["lastOperationAcceptedAt"] = "", CollaborativeEditingResponse2["create"] = function(properties) {
      return new CollaborativeEditingResponse2(properties);
    }, CollaborativeEditingResponse2["encode"] = function(_0x2a20bc, writer) {
      if (writer || (writer = $Writer["create"]()), null != _0x2a20bc["version"] && Object["hasOwnProperty"]["call"](_0x2a20bc, "version") && writer["uint32"](8)["uint32"](_0x2a20bc["version"]), null != _0x2a20bc["buffers"] && _0x2a20bc["buffers"]["length"]) {
        for (var _0x23c63f = 0; _0x23c63f < _0x2a20bc["buffers"]["length"]; ++_0x23c63f) writer["uint32"](18)["bytes"](_0x2a20bc["buffers"][_0x23c63f]);
      }
      if (null != _0x2a20bc["types"] && _0x2a20bc["types"]["length"]) {
        writer["uint32"](26)["fork"]();
        for (_0x23c63f = 0; _0x23c63f < _0x2a20bc["types"]["length"]; ++_0x23c63f) writer["uint32"](_0x2a20bc["types"][_0x23c63f]);
        writer["ldelim"]();
      }
      if (null != _0x2a20bc["metadata"] && _0x2a20bc["metadata"]["length"]) {
        for (_0x23c63f = 0; _0x23c63f < _0x2a20bc["metadata"]["length"]; ++_0x23c63f) $root["OperationMetadataDescriptor"]["encode"](_0x2a20bc["metadata"][_0x23c63f], writer["uint32"](42)["fork"]())["ldelim"]();
      }
      return null != _0x2a20bc["lastOperationId"] && Object["hasOwnProperty"]["call"](_0x2a20bc, "lastOperationId") && writer["uint32"](50)["string"](_0x2a20bc["lastOperationId"]), null != _0x2a20bc["lastOperationAcceptedAt"] && Object["hasOwnProperty"]["call"](_0x2a20bc, "lastOperationAcceptedAt") && writer["uint32"](58)["string"](_0x2a20bc["lastOperationAcceptedAt"]), writer;
    }, CollaborativeEditingResponse2["encodeDelimited"] = function(_0x556e30, writer) {
      return this["encode"](_0x556e30, writer)["ldelim"]();
    }, CollaborativeEditingResponse2["decode"] = function(_0x5f563e, length2) {
      _0x5f563e instanceof _0x476e3c || (_0x5f563e = _0x476e3c["create"](_0x5f563e));
      for (var _0x34a34b = void 0 === length2 ? _0x5f563e["len"] : _0x5f563e["pos"] + length2, _0xd677fa = new $root["CollaborativeEditingResponse"](); _0x5f563e["pos"] < _0x34a34b; ) {
        var tag = _0x5f563e["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0xd677fa["version"] = _0x5f563e["uint32"]();
            break;
          case 2:
            _0xd677fa["buffers"] && _0xd677fa["buffers"]["length"] || (_0xd677fa["buffers"] = []), _0xd677fa["buffers"]["push"](_0x5f563e["bytes"]());
            break;
          case 3:
            if (_0xd677fa["types"] && _0xd677fa["types"]["length"] || (_0xd677fa["types"] = []), 2 == (7 & tag)) {
              for (var _0x1cd116 = _0x5f563e["uint32"]() + _0x5f563e["pos"]; _0x5f563e["pos"] < _0x1cd116; ) _0xd677fa["types"]["push"](_0x5f563e["uint32"]());
            } else _0xd677fa["types"]["push"](_0x5f563e["uint32"]());
            break;
          case 5:
            _0xd677fa["metadata"] && _0xd677fa["metadata"]["length"] || (_0xd677fa["metadata"] = []), _0xd677fa["metadata"]["push"]($root["OperationMetadataDescriptor"]["decode"](_0x5f563e, _0x5f563e["uint32"]()));
            break;
          case 6:
            _0xd677fa["lastOperationId"] = _0x5f563e["string"]();
            break;
          case 7:
            _0xd677fa["lastOperationAcceptedAt"] = _0x5f563e["string"]();
            break;
          default:
            _0x5f563e["skipType"](7 & tag);
        }
      }
      return _0xd677fa;
    }, CollaborativeEditingResponse2["decodeDelimited"] = function(_0xb766c2) {
      return _0xb766c2 instanceof _0x476e3c || (_0xb766c2 = new _0x476e3c(_0xb766c2)), this["decode"](_0xb766c2, _0xb766c2["uint32"]());
    }, CollaborativeEditingResponse2["verify"] = function(_0x553ee8) {
      if ("object" != typeof _0x553ee8 || null === _0x553ee8) return "object expected";
      if (null != _0x553ee8["version"] && _0x553ee8["hasOwnProperty"]("version") && !$util["isInteger"](_0x553ee8["version"])) return "version: integer expected";
      if (null != _0x553ee8["buffers"] && _0x553ee8["hasOwnProperty"]("buffers")) {
        if (!Array["isArray"](_0x553ee8["buffers"])) return "buffers: array expected";
        for (var _0x264d14 = 0; _0x264d14 < _0x553ee8["buffers"]["length"]; ++_0x264d14) if (!(_0x553ee8["buffers"][_0x264d14] && "number" == typeof _0x553ee8["buffers"][_0x264d14]["length"] || $util["isString"](_0x553ee8["buffers"][_0x264d14]))) return "buffers: buffer[] expected";
      }
      if (null != _0x553ee8["types"] && _0x553ee8["hasOwnProperty"]("types")) {
        if (!Array["isArray"](_0x553ee8["types"])) return "types: array expected";
        for (_0x264d14 = 0; _0x264d14 < _0x553ee8["types"]["length"]; ++_0x264d14) if (!$util["isInteger"](_0x553ee8["types"][_0x264d14])) return "types: integer[] expected";
      }
      if (null != _0x553ee8["metadata"] && _0x553ee8["hasOwnProperty"]("metadata")) {
        if (!Array["isArray"](_0x553ee8["metadata"])) return "metadata: array expected";
        for (_0x264d14 = 0; _0x264d14 < _0x553ee8["metadata"]["length"]; ++_0x264d14) {
          var _0x14f386 = $root["OperationMetadataDescriptor"]["verify"](_0x553ee8["metadata"][_0x264d14]);
          if (_0x14f386) return "metadata." + _0x14f386;
        }
      }
      return null != _0x553ee8["lastOperationId"] && _0x553ee8["hasOwnProperty"]("lastOperationId") && !$util["isString"](_0x553ee8["lastOperationId"]) ? "lastOperationId: string expected" : null != _0x553ee8["lastOperationAcceptedAt"] && _0x553ee8["hasOwnProperty"]("lastOperationAcceptedAt") && !$util["isString"](_0x553ee8["lastOperationAcceptedAt"]) ? "lastOperationAcceptedAt: string expected" : null;
    }, CollaborativeEditingResponse2["fromObject"] = function(object) {
      if (object instanceof $root["CollaborativeEditingResponse"]) return object;
      var _0x44daf5 = new $root["CollaborativeEditingResponse"]();
      if (null != object["version"] && (_0x44daf5["version"] = object["version"] >>> 0), object["buffers"]) {
        if (!Array["isArray"](object["buffers"])) throw TypeError(".CollaborativeEditingResponse.buffers: array expected");
        _0x44daf5["buffers"] = [];
        for (var _0x3b95d0 = 0; _0x3b95d0 < object["buffers"]["length"]; ++_0x3b95d0) "string" == typeof object["buffers"][_0x3b95d0] ? $util["base64"]["decode"](object["buffers"][_0x3b95d0], _0x44daf5["buffers"][_0x3b95d0] = $util["newBuffer"]($util["base64"]["length"](object["buffers"][_0x3b95d0])), 0) : object["buffers"][_0x3b95d0]["length"] >= 0 && (_0x44daf5["buffers"][_0x3b95d0] = object["buffers"][_0x3b95d0]);
      }
      if (object["types"]) {
        if (!Array["isArray"](object["types"])) throw TypeError(".CollaborativeEditingResponse.types: array expected");
        _0x44daf5["types"] = [];
        for (_0x3b95d0 = 0; _0x3b95d0 < object["types"]["length"]; ++_0x3b95d0) _0x44daf5["types"][_0x3b95d0] = object["types"][_0x3b95d0] >>> 0;
      }
      if (object["metadata"]) {
        if (!Array["isArray"](object["metadata"])) throw TypeError(".CollaborativeEditingResponse.metadata: array expected");
        _0x44daf5["metadata"] = [];
        for (_0x3b95d0 = 0; _0x3b95d0 < object["metadata"]["length"]; ++_0x3b95d0) {
          if ("object" != typeof object["metadata"][_0x3b95d0]) throw TypeError(".CollaborativeEditingResponse.metadata: object expected");
          _0x44daf5["metadata"][_0x3b95d0] = $root["OperationMetadataDescriptor"]["fromObject"](object["metadata"][_0x3b95d0]);
        }
      }
      return null != object["lastOperationId"] && (_0x44daf5["lastOperationId"] = String(object["lastOperationId"])), null != object["lastOperationAcceptedAt"] && (_0x44daf5["lastOperationAcceptedAt"] = String(object["lastOperationAcceptedAt"])), _0x44daf5;
    }, CollaborativeEditingResponse2["toObject"] = function(_0x378545, options) {
      options || (options = {});
      var object = {};
      if ((options["arrays"] || options["defaults"]) && (object["buffers"] = [], object["types"] = [], object["metadata"] = []), options["defaults"] && (object["version"] = 0, object["lastOperationId"] = "", object["lastOperationAcceptedAt"] = ""), null != _0x378545["version"] && _0x378545["hasOwnProperty"]("version") && (object["version"] = _0x378545["version"]), _0x378545["buffers"] && _0x378545["buffers"]["length"]) {
        object["buffers"] = [];
        for (var _0x116c23 = 0; _0x116c23 < _0x378545["buffers"]["length"]; ++_0x116c23) object["buffers"][_0x116c23] = options["bytes"] === String ? $util["base64"]["encode"](_0x378545["buffers"][_0x116c23], 0, _0x378545["buffers"][_0x116c23]["length"]) : options["bytes"] === Array ? Array["prototype"]["slice"]["call"](_0x378545["buffers"][_0x116c23]) : _0x378545["buffers"][_0x116c23];
      }
      if (_0x378545["types"] && _0x378545["types"]["length"]) {
        object["types"] = [];
        for (_0x116c23 = 0; _0x116c23 < _0x378545["types"]["length"]; ++_0x116c23) object["types"][_0x116c23] = _0x378545["types"][_0x116c23];
      }
      if (_0x378545["metadata"] && _0x378545["metadata"]["length"]) {
        object["metadata"] = [];
        for (_0x116c23 = 0; _0x116c23 < _0x378545["metadata"]["length"]; ++_0x116c23) object["metadata"][_0x116c23] = $root["OperationMetadataDescriptor"]["toObject"](_0x378545["metadata"][_0x116c23], options);
      }
      return null != _0x378545["lastOperationId"] && _0x378545["hasOwnProperty"]("lastOperationId") && (object["lastOperationId"] = _0x378545["lastOperationId"]), null != _0x378545["lastOperationAcceptedAt"] && _0x378545["hasOwnProperty"]("lastOperationAcceptedAt") && (object["lastOperationAcceptedAt"] = _0x378545["lastOperationAcceptedAt"]), object;
    }, CollaborativeEditingResponse2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, CollaborativeEditingResponse2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/CollaborativeEditingResponse";
    }, CollaborativeEditingResponse2;
  }(), $root["GetDocumentDetailsResponse"] = function() {
    function GetDocumentDetailsResponse2(properties) {
      if (properties) {
        for (var _0xbe60b5 = Object["keys"](properties), _0x4b2cf6 = 0; _0x4b2cf6 < _0xbe60b5["length"]; ++_0x4b2cf6) null != properties[_0xbe60b5[_0x4b2cf6]] && (this[_0xbe60b5[_0x4b2cf6]] = properties[_0xbe60b5[_0x4b2cf6]]);
      }
    }
    return GetDocumentDetailsResponse2["prototype"]["lastDocumentSessionId"] = "", GetDocumentDetailsResponse2["prototype"]["lastDocumentSessionOperationId"] = "", GetDocumentDetailsResponse2["prototype"]["currentDocumentSessionId"] = "", GetDocumentDetailsResponse2["prototype"]["currentDocumentSessionVersion"] = 0, GetDocumentDetailsResponse2["prototype"]["currentDocumentSessionOperationId"] = "", GetDocumentDetailsResponse2["create"] = function(properties) {
      return new GetDocumentDetailsResponse2(properties);
    }, GetDocumentDetailsResponse2["encode"] = function(_0x4cc244, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x4cc244["lastDocumentSessionId"] && Object["hasOwnProperty"]["call"](_0x4cc244, "lastDocumentSessionId") && writer["uint32"](10)["string"](_0x4cc244["lastDocumentSessionId"]), null != _0x4cc244["lastDocumentSessionOperationId"] && Object["hasOwnProperty"]["call"](_0x4cc244, "lastDocumentSessionOperationId") && writer["uint32"](18)["string"](_0x4cc244["lastDocumentSessionOperationId"]), null != _0x4cc244["currentDocumentSessionId"] && Object["hasOwnProperty"]["call"](_0x4cc244, "currentDocumentSessionId") && writer["uint32"](26)["string"](_0x4cc244["currentDocumentSessionId"]), null != _0x4cc244["currentDocumentSessionVersion"] && Object["hasOwnProperty"]["call"](_0x4cc244, "currentDocumentSessionVersion") && writer["uint32"](32)["uint32"](_0x4cc244["currentDocumentSessionVersion"]), null != _0x4cc244["currentDocumentSessionOperationId"] && Object["hasOwnProperty"]["call"](_0x4cc244, "currentDocumentSessionOperationId") && writer["uint32"](42)["string"](_0x4cc244["currentDocumentSessionOperationId"]), writer;
    }, GetDocumentDetailsResponse2["encodeDelimited"] = function(_0x240fe0, writer) {
      return this["encode"](_0x240fe0, writer)["ldelim"]();
    }, GetDocumentDetailsResponse2["decode"] = function(_0x144aa0, length2) {
      _0x144aa0 instanceof _0x476e3c || (_0x144aa0 = _0x476e3c["create"](_0x144aa0));
      for (var _0x3012cf = void 0 === length2 ? _0x144aa0["len"] : _0x144aa0["pos"] + length2, _0x5dd579 = new $root["GetDocumentDetailsResponse"](); _0x144aa0["pos"] < _0x3012cf; ) {
        var tag = _0x144aa0["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x5dd579["lastDocumentSessionId"] = _0x144aa0["string"]();
            break;
          case 2:
            _0x5dd579["lastDocumentSessionOperationId"] = _0x144aa0["string"]();
            break;
          case 3:
            _0x5dd579["currentDocumentSessionId"] = _0x144aa0["string"]();
            break;
          case 4:
            _0x5dd579["currentDocumentSessionVersion"] = _0x144aa0["uint32"]();
            break;
          case 5:
            _0x5dd579["currentDocumentSessionOperationId"] = _0x144aa0["string"]();
            break;
          default:
            _0x144aa0["skipType"](7 & tag);
        }
      }
      return _0x5dd579;
    }, GetDocumentDetailsResponse2["decodeDelimited"] = function(_0x51a3a1) {
      return _0x51a3a1 instanceof _0x476e3c || (_0x51a3a1 = new _0x476e3c(_0x51a3a1)), this["decode"](_0x51a3a1, _0x51a3a1["uint32"]());
    }, GetDocumentDetailsResponse2["verify"] = function(_0xfe225c) {
      return "object" != typeof _0xfe225c || null === _0xfe225c ? "object expected" : null != _0xfe225c["lastDocumentSessionId"] && _0xfe225c["hasOwnProperty"]("lastDocumentSessionId") && !$util["isString"](_0xfe225c["lastDocumentSessionId"]) ? "lastDocumentSessionId: string expected" : null != _0xfe225c["lastDocumentSessionOperationId"] && _0xfe225c["hasOwnProperty"]("lastDocumentSessionOperationId") && !$util["isString"](_0xfe225c["lastDocumentSessionOperationId"]) ? "lastDocumentSessionOperationId: string expected" : null != _0xfe225c["currentDocumentSessionId"] && _0xfe225c["hasOwnProperty"]("currentDocumentSessionId") && !$util["isString"](_0xfe225c["currentDocumentSessionId"]) ? "currentDocumentSessionId: string expected" : null != _0xfe225c["currentDocumentSessionVersion"] && _0xfe225c["hasOwnProperty"]("currentDocumentSessionVersion") && !$util["isInteger"](_0xfe225c["currentDocumentSessionVersion"]) ? "currentDocumentSessionVersion: integer expected" : null != _0xfe225c["currentDocumentSessionOperationId"] && _0xfe225c["hasOwnProperty"]("currentDocumentSessionOperationId") && !$util["isString"](_0xfe225c["currentDocumentSessionOperationId"]) ? "currentDocumentSessionOperationId: string expected" : null;
    }, GetDocumentDetailsResponse2["fromObject"] = function(object) {
      if (object instanceof $root["GetDocumentDetailsResponse"]) return object;
      var _0x57ca2b = new $root["GetDocumentDetailsResponse"]();
      return null != object["lastDocumentSessionId"] && (_0x57ca2b["lastDocumentSessionId"] = String(object["lastDocumentSessionId"])), null != object["lastDocumentSessionOperationId"] && (_0x57ca2b["lastDocumentSessionOperationId"] = String(object["lastDocumentSessionOperationId"])), null != object["currentDocumentSessionId"] && (_0x57ca2b["currentDocumentSessionId"] = String(object["currentDocumentSessionId"])), null != object["currentDocumentSessionVersion"] && (_0x57ca2b["currentDocumentSessionVersion"] = object["currentDocumentSessionVersion"] >>> 0), null != object["currentDocumentSessionOperationId"] && (_0x57ca2b["currentDocumentSessionOperationId"] = String(object["currentDocumentSessionOperationId"])), _0x57ca2b;
    }, GetDocumentDetailsResponse2["toObject"] = function(_0x168ab2, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["lastDocumentSessionId"] = "", object["lastDocumentSessionOperationId"] = "", object["currentDocumentSessionId"] = "", object["currentDocumentSessionVersion"] = 0, object["currentDocumentSessionOperationId"] = ""), null != _0x168ab2["lastDocumentSessionId"] && _0x168ab2["hasOwnProperty"]("lastDocumentSessionId") && (object["lastDocumentSessionId"] = _0x168ab2["lastDocumentSessionId"]), null != _0x168ab2["lastDocumentSessionOperationId"] && _0x168ab2["hasOwnProperty"]("lastDocumentSessionOperationId") && (object["lastDocumentSessionOperationId"] = _0x168ab2["lastDocumentSessionOperationId"]), null != _0x168ab2["currentDocumentSessionId"] && _0x168ab2["hasOwnProperty"]("currentDocumentSessionId") && (object["currentDocumentSessionId"] = _0x168ab2["currentDocumentSessionId"]), null != _0x168ab2["currentDocumentSessionVersion"] && _0x168ab2["hasOwnProperty"]("currentDocumentSessionVersion") && (object["currentDocumentSessionVersion"] = _0x168ab2["currentDocumentSessionVersion"]), null != _0x168ab2["currentDocumentSessionOperationId"] && _0x168ab2["hasOwnProperty"]("currentDocumentSessionOperationId") && (object["currentDocumentSessionOperationId"] = _0x168ab2["currentDocumentSessionOperationId"]), object;
    }, GetDocumentDetailsResponse2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, GetDocumentDetailsResponse2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/GetDocumentDetailsResponse";
    }, GetDocumentDetailsResponse2;
  }(), $root["CommentDescriptor"] = function() {
    function CommentDescriptor2(properties) {
      if (properties) {
        for (var _0x52d5f5 = Object["keys"](properties), _0x4bb946 = 0; _0x4bb946 < _0x52d5f5["length"]; ++_0x4bb946) null != properties[_0x52d5f5[_0x4bb946]] && (this[_0x52d5f5[_0x4bb946]] = properties[_0x52d5f5[_0x4bb946]]);
      }
    }
    return CommentDescriptor2["prototype"]["commentId"] = "", CommentDescriptor2["prototype"]["commentThreadId"] = "", CommentDescriptor2["prototype"]["userId"] = "", CommentDescriptor2["prototype"]["content"] = "", CommentDescriptor2["prototype"]["documentId"] = "", CommentDescriptor2["prototype"]["createdAt"] = "", CommentDescriptor2["prototype"]["attributes"] = "", CommentDescriptor2["create"] = function(properties) {
      return new CommentDescriptor2(properties);
    }, CommentDescriptor2["encode"] = function(_0x1c4cf7, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x1c4cf7["commentId"] && Object["hasOwnProperty"]["call"](_0x1c4cf7, "commentId") && writer["uint32"](10)["string"](_0x1c4cf7["commentId"]), null != _0x1c4cf7["commentThreadId"] && Object["hasOwnProperty"]["call"](_0x1c4cf7, "commentThreadId") && writer["uint32"](18)["string"](_0x1c4cf7["commentThreadId"]), null != _0x1c4cf7["userId"] && Object["hasOwnProperty"]["call"](_0x1c4cf7, "userId") && writer["uint32"](26)["string"](_0x1c4cf7["userId"]), null != _0x1c4cf7["content"] && Object["hasOwnProperty"]["call"](_0x1c4cf7, "content") && writer["uint32"](34)["string"](_0x1c4cf7["content"]), null != _0x1c4cf7["documentId"] && Object["hasOwnProperty"]["call"](_0x1c4cf7, "documentId") && writer["uint32"](42)["string"](_0x1c4cf7["documentId"]), null != _0x1c4cf7["createdAt"] && Object["hasOwnProperty"]["call"](_0x1c4cf7, "createdAt") && writer["uint32"](50)["string"](_0x1c4cf7["createdAt"]), null != _0x1c4cf7["attributes"] && Object["hasOwnProperty"]["call"](_0x1c4cf7, "attributes") && writer["uint32"](58)["string"](_0x1c4cf7["attributes"]), writer;
    }, CommentDescriptor2["encodeDelimited"] = function(_0x2489bd, writer) {
      return this["encode"](_0x2489bd, writer)["ldelim"]();
    }, CommentDescriptor2["decode"] = function(_0x3decf7, length2) {
      _0x3decf7 instanceof _0x476e3c || (_0x3decf7 = _0x476e3c["create"](_0x3decf7));
      for (var _0x8a3c10 = void 0 === length2 ? _0x3decf7["len"] : _0x3decf7["pos"] + length2, _0x386885 = new $root["CommentDescriptor"](); _0x3decf7["pos"] < _0x8a3c10; ) {
        var tag = _0x3decf7["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x386885["commentId"] = _0x3decf7["string"]();
            break;
          case 2:
            _0x386885["commentThreadId"] = _0x3decf7["string"]();
            break;
          case 3:
            _0x386885["userId"] = _0x3decf7["string"]();
            break;
          case 4:
            _0x386885["content"] = _0x3decf7["string"]();
            break;
          case 5:
            _0x386885["documentId"] = _0x3decf7["string"]();
            break;
          case 6:
            _0x386885["createdAt"] = _0x3decf7["string"]();
            break;
          case 7:
            _0x386885["attributes"] = _0x3decf7["string"]();
            break;
          default:
            _0x3decf7["skipType"](7 & tag);
        }
      }
      return _0x386885;
    }, CommentDescriptor2["decodeDelimited"] = function(_0x35c3e9) {
      return _0x35c3e9 instanceof _0x476e3c || (_0x35c3e9 = new _0x476e3c(_0x35c3e9)), this["decode"](_0x35c3e9, _0x35c3e9["uint32"]());
    }, CommentDescriptor2["verify"] = function(_0x5112cf) {
      return "object" != typeof _0x5112cf || null === _0x5112cf ? "object expected" : null != _0x5112cf["commentId"] && _0x5112cf["hasOwnProperty"]("commentId") && !$util["isString"](_0x5112cf["commentId"]) ? "commentId: string expected" : null != _0x5112cf["commentThreadId"] && _0x5112cf["hasOwnProperty"]("commentThreadId") && !$util["isString"](_0x5112cf["commentThreadId"]) ? "commentThreadId: string expected" : null != _0x5112cf["userId"] && _0x5112cf["hasOwnProperty"]("userId") && !$util["isString"](_0x5112cf["userId"]) ? "userId: string expected" : null != _0x5112cf["content"] && _0x5112cf["hasOwnProperty"]("content") && !$util["isString"](_0x5112cf["content"]) ? "content: string expected" : null != _0x5112cf["documentId"] && _0x5112cf["hasOwnProperty"]("documentId") && !$util["isString"](_0x5112cf["documentId"]) ? "documentId: string expected" : null != _0x5112cf["createdAt"] && _0x5112cf["hasOwnProperty"]("createdAt") && !$util["isString"](_0x5112cf["createdAt"]) ? "createdAt: string expected" : null != _0x5112cf["attributes"] && _0x5112cf["hasOwnProperty"]("attributes") && !$util["isString"](_0x5112cf["attributes"]) ? "attributes: string expected" : null;
    }, CommentDescriptor2["fromObject"] = function(object) {
      if (object instanceof $root["CommentDescriptor"]) return object;
      var _0x3b172f = new $root["CommentDescriptor"]();
      return null != object["commentId"] && (_0x3b172f["commentId"] = String(object["commentId"])), null != object["commentThreadId"] && (_0x3b172f["commentThreadId"] = String(object["commentThreadId"])), null != object["userId"] && (_0x3b172f["userId"] = String(object["userId"])), null != object["content"] && (_0x3b172f["content"] = String(object["content"])), null != object["documentId"] && (_0x3b172f["documentId"] = String(object["documentId"])), null != object["createdAt"] && (_0x3b172f["createdAt"] = String(object["createdAt"])), null != object["attributes"] && (_0x3b172f["attributes"] = String(object["attributes"])), _0x3b172f;
    }, CommentDescriptor2["toObject"] = function(_0x1c4992, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["commentId"] = "", object["commentThreadId"] = "", object["userId"] = "", object["content"] = "", object["documentId"] = "", object["createdAt"] = "", object["attributes"] = ""), null != _0x1c4992["commentId"] && _0x1c4992["hasOwnProperty"]("commentId") && (object["commentId"] = _0x1c4992["commentId"]), null != _0x1c4992["commentThreadId"] && _0x1c4992["hasOwnProperty"]("commentThreadId") && (object["commentThreadId"] = _0x1c4992["commentThreadId"]), null != _0x1c4992["userId"] && _0x1c4992["hasOwnProperty"]("userId") && (object["userId"] = _0x1c4992["userId"]), null != _0x1c4992["content"] && _0x1c4992["hasOwnProperty"]("content") && (object["content"] = _0x1c4992["content"]), null != _0x1c4992["documentId"] && _0x1c4992["hasOwnProperty"]("documentId") && (object["documentId"] = _0x1c4992["documentId"]), null != _0x1c4992["createdAt"] && _0x1c4992["hasOwnProperty"]("createdAt") && (object["createdAt"] = _0x1c4992["createdAt"]), null != _0x1c4992["attributes"] && _0x1c4992["hasOwnProperty"]("attributes") && (object["attributes"] = _0x1c4992["attributes"]), object;
    }, CommentDescriptor2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, CommentDescriptor2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/CommentDescriptor";
    }, CommentDescriptor2;
  }(), $root["CommentsThreadDescriptor"] = function() {
    function CommentsThreadDescriptor2(properties) {
      if (this["comments"] = [], properties) {
        for (var _0x3071e5 = Object["keys"](properties), _0x487465 = 0; _0x487465 < _0x3071e5["length"]; ++_0x487465) null != properties[_0x3071e5[_0x487465]] && (this[_0x3071e5[_0x487465]] = properties[_0x3071e5[_0x487465]]);
      }
    }
    return CommentsThreadDescriptor2["prototype"]["commentThreadId"] = "", CommentsThreadDescriptor2["prototype"]["comments"] = $util["emptyArray"], CommentsThreadDescriptor2["prototype"]["resolvedAt"] = "", CommentsThreadDescriptor2["prototype"]["resolvedBy"] = "", CommentsThreadDescriptor2["prototype"]["context"] = "", CommentsThreadDescriptor2["prototype"]["createdAt"] = "", CommentsThreadDescriptor2["prototype"]["deletedAt"] = "", CommentsThreadDescriptor2["prototype"]["attributes"] = "", CommentsThreadDescriptor2["prototype"]["unlinkedAt"] = "", CommentsThreadDescriptor2["create"] = function(properties) {
      return new CommentsThreadDescriptor2(properties);
    }, CommentsThreadDescriptor2["encode"] = function(_0x207878, writer) {
      if (writer || (writer = $Writer["create"]()), null != _0x207878["commentThreadId"] && Object["hasOwnProperty"]["call"](_0x207878, "commentThreadId") && writer["uint32"](10)["string"](_0x207878["commentThreadId"]), null != _0x207878["comments"] && _0x207878["comments"]["length"]) {
        for (var _0xce93e4 = 0; _0xce93e4 < _0x207878["comments"]["length"]; ++_0xce93e4) $root["CommentDescriptor"]["encode"](_0x207878["comments"][_0xce93e4], writer["uint32"](18)["fork"]())["ldelim"]();
      }
      return null != _0x207878["resolvedAt"] && Object["hasOwnProperty"]["call"](_0x207878, "resolvedAt") && writer["uint32"](26)["string"](_0x207878["resolvedAt"]), null != _0x207878["resolvedBy"] && Object["hasOwnProperty"]["call"](_0x207878, "resolvedBy") && writer["uint32"](34)["string"](_0x207878["resolvedBy"]), null != _0x207878["context"] && Object["hasOwnProperty"]["call"](_0x207878, "context") && writer["uint32"](42)["string"](_0x207878["context"]), null != _0x207878["createdAt"] && Object["hasOwnProperty"]["call"](_0x207878, "createdAt") && writer["uint32"](50)["string"](_0x207878["createdAt"]), null != _0x207878["deletedAt"] && Object["hasOwnProperty"]["call"](_0x207878, "deletedAt") && writer["uint32"](58)["string"](_0x207878["deletedAt"]), null != _0x207878["attributes"] && Object["hasOwnProperty"]["call"](_0x207878, "attributes") && writer["uint32"](66)["string"](_0x207878["attributes"]), null != _0x207878["unlinkedAt"] && Object["hasOwnProperty"]["call"](_0x207878, "unlinkedAt") && writer["uint32"](74)["string"](_0x207878["unlinkedAt"]), writer;
    }, CommentsThreadDescriptor2["encodeDelimited"] = function(_0x228d3a, writer) {
      return this["encode"](_0x228d3a, writer)["ldelim"]();
    }, CommentsThreadDescriptor2["decode"] = function(_0x32ccdd, length2) {
      _0x32ccdd instanceof _0x476e3c || (_0x32ccdd = _0x476e3c["create"](_0x32ccdd));
      for (var _0x2d4189 = void 0 === length2 ? _0x32ccdd["len"] : _0x32ccdd["pos"] + length2, _0x269c1b = new $root["CommentsThreadDescriptor"](); _0x32ccdd["pos"] < _0x2d4189; ) {
        var tag = _0x32ccdd["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x269c1b["commentThreadId"] = _0x32ccdd["string"]();
            break;
          case 2:
            _0x269c1b["comments"] && _0x269c1b["comments"]["length"] || (_0x269c1b["comments"] = []), _0x269c1b["comments"]["push"]($root["CommentDescriptor"]["decode"](_0x32ccdd, _0x32ccdd["uint32"]()));
            break;
          case 3:
            _0x269c1b["resolvedAt"] = _0x32ccdd["string"]();
            break;
          case 4:
            _0x269c1b["resolvedBy"] = _0x32ccdd["string"]();
            break;
          case 5:
            _0x269c1b["context"] = _0x32ccdd["string"]();
            break;
          case 6:
            _0x269c1b["createdAt"] = _0x32ccdd["string"]();
            break;
          case 7:
            _0x269c1b["deletedAt"] = _0x32ccdd["string"]();
            break;
          case 8:
            _0x269c1b["attributes"] = _0x32ccdd["string"]();
            break;
          case 9:
            _0x269c1b["unlinkedAt"] = _0x32ccdd["string"]();
            break;
          default:
            _0x32ccdd["skipType"](7 & tag);
        }
      }
      return _0x269c1b;
    }, CommentsThreadDescriptor2["decodeDelimited"] = function(_0xf7474e) {
      return _0xf7474e instanceof _0x476e3c || (_0xf7474e = new _0x476e3c(_0xf7474e)), this["decode"](_0xf7474e, _0xf7474e["uint32"]());
    }, CommentsThreadDescriptor2["verify"] = function(_0x40d1a9) {
      if ("object" != typeof _0x40d1a9 || null === _0x40d1a9) return "object expected";
      if (null != _0x40d1a9["commentThreadId"] && _0x40d1a9["hasOwnProperty"]("commentThreadId") && !$util["isString"](_0x40d1a9["commentThreadId"])) return "commentThreadId: string expected";
      if (null != _0x40d1a9["comments"] && _0x40d1a9["hasOwnProperty"]("comments")) {
        if (!Array["isArray"](_0x40d1a9["comments"])) return "comments: array expected";
        for (var _0x42d783 = 0; _0x42d783 < _0x40d1a9["comments"]["length"]; ++_0x42d783) {
          var _0x51934a = $root["CommentDescriptor"]["verify"](_0x40d1a9["comments"][_0x42d783]);
          if (_0x51934a) return "comments." + _0x51934a;
        }
      }
      return null != _0x40d1a9["resolvedAt"] && _0x40d1a9["hasOwnProperty"]("resolvedAt") && !$util["isString"](_0x40d1a9["resolvedAt"]) ? "resolvedAt: string expected" : null != _0x40d1a9["resolvedBy"] && _0x40d1a9["hasOwnProperty"]("resolvedBy") && !$util["isString"](_0x40d1a9["resolvedBy"]) ? "resolvedBy: string expected" : null != _0x40d1a9["context"] && _0x40d1a9["hasOwnProperty"]("context") && !$util["isString"](_0x40d1a9["context"]) ? "context: string expected" : null != _0x40d1a9["createdAt"] && _0x40d1a9["hasOwnProperty"]("createdAt") && !$util["isString"](_0x40d1a9["createdAt"]) ? "createdAt: string expected" : null != _0x40d1a9["deletedAt"] && _0x40d1a9["hasOwnProperty"]("deletedAt") && !$util["isString"](_0x40d1a9["deletedAt"]) ? "deletedAt: string expected" : null != _0x40d1a9["attributes"] && _0x40d1a9["hasOwnProperty"]("attributes") && !$util["isString"](_0x40d1a9["attributes"]) ? "attributes: string expected" : null != _0x40d1a9["unlinkedAt"] && _0x40d1a9["hasOwnProperty"]("unlinkedAt") && !$util["isString"](_0x40d1a9["unlinkedAt"]) ? "unlinkedAt: string expected" : null;
    }, CommentsThreadDescriptor2["fromObject"] = function(object) {
      if (object instanceof $root["CommentsThreadDescriptor"]) return object;
      var _0x15be02 = new $root["CommentsThreadDescriptor"]();
      if (null != object["commentThreadId"] && (_0x15be02["commentThreadId"] = String(object["commentThreadId"])), object["comments"]) {
        if (!Array["isArray"](object["comments"])) throw TypeError(".CommentsThreadDescriptor.comments: array expected");
        _0x15be02["comments"] = [];
        for (var _0x50b3b0 = 0; _0x50b3b0 < object["comments"]["length"]; ++_0x50b3b0) {
          if ("object" != typeof object["comments"][_0x50b3b0]) throw TypeError(".CommentsThreadDescriptor.comments: object expected");
          _0x15be02["comments"][_0x50b3b0] = $root["CommentDescriptor"]["fromObject"](object["comments"][_0x50b3b0]);
        }
      }
      return null != object["resolvedAt"] && (_0x15be02["resolvedAt"] = String(object["resolvedAt"])), null != object["resolvedBy"] && (_0x15be02["resolvedBy"] = String(object["resolvedBy"])), null != object["context"] && (_0x15be02["context"] = String(object["context"])), null != object["createdAt"] && (_0x15be02["createdAt"] = String(object["createdAt"])), null != object["deletedAt"] && (_0x15be02["deletedAt"] = String(object["deletedAt"])), null != object["attributes"] && (_0x15be02["attributes"] = String(object["attributes"])), null != object["unlinkedAt"] && (_0x15be02["unlinkedAt"] = String(object["unlinkedAt"])), _0x15be02;
    }, CommentsThreadDescriptor2["toObject"] = function(_0x39c702, options) {
      options || (options = {});
      var object = {};
      if ((options["arrays"] || options["defaults"]) && (object["comments"] = []), options["defaults"] && (object["commentThreadId"] = "", object["resolvedAt"] = "", object["resolvedBy"] = "", object["context"] = "", object["createdAt"] = "", object["deletedAt"] = "", object["attributes"] = "", object["unlinkedAt"] = ""), null != _0x39c702["commentThreadId"] && _0x39c702["hasOwnProperty"]("commentThreadId") && (object["commentThreadId"] = _0x39c702["commentThreadId"]), _0x39c702["comments"] && _0x39c702["comments"]["length"]) {
        object["comments"] = [];
        for (var _0x4274fd = 0; _0x4274fd < _0x39c702["comments"]["length"]; ++_0x4274fd) object["comments"][_0x4274fd] = $root["CommentDescriptor"]["toObject"](_0x39c702["comments"][_0x4274fd], options);
      }
      return null != _0x39c702["resolvedAt"] && _0x39c702["hasOwnProperty"]("resolvedAt") && (object["resolvedAt"] = _0x39c702["resolvedAt"]), null != _0x39c702["resolvedBy"] && _0x39c702["hasOwnProperty"]("resolvedBy") && (object["resolvedBy"] = _0x39c702["resolvedBy"]), null != _0x39c702["context"] && _0x39c702["hasOwnProperty"]("context") && (object["context"] = _0x39c702["context"]), null != _0x39c702["createdAt"] && _0x39c702["hasOwnProperty"]("createdAt") && (object["createdAt"] = _0x39c702["createdAt"]), null != _0x39c702["deletedAt"] && _0x39c702["hasOwnProperty"]("deletedAt") && (object["deletedAt"] = _0x39c702["deletedAt"]), null != _0x39c702["attributes"] && _0x39c702["hasOwnProperty"]("attributes") && (object["attributes"] = _0x39c702["attributes"]), null != _0x39c702["unlinkedAt"] && _0x39c702["hasOwnProperty"]("unlinkedAt") && (object["unlinkedAt"] = _0x39c702["unlinkedAt"]), object;
    }, CommentsThreadDescriptor2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, CommentsThreadDescriptor2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/CommentsThreadDescriptor";
    }, CommentsThreadDescriptor2;
  }(), $root["CommentThreadAddedCommentDescriptor"] = function() {
    function CommentThreadAddedCommentDescriptor2(properties) {
      if (properties) {
        for (var _0x42b23c = Object["keys"](properties), _0x29e59a = 0; _0x29e59a < _0x42b23c["length"]; ++_0x29e59a) null != properties[_0x42b23c[_0x29e59a]] && (this[_0x42b23c[_0x29e59a]] = properties[_0x42b23c[_0x29e59a]]);
      }
    }
    return CommentThreadAddedCommentDescriptor2["prototype"]["commentId"] = "", CommentThreadAddedCommentDescriptor2["prototype"]["createdAt"] = "", CommentThreadAddedCommentDescriptor2["create"] = function(properties) {
      return new CommentThreadAddedCommentDescriptor2(properties);
    }, CommentThreadAddedCommentDescriptor2["encode"] = function(_0x4a1ffd, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x4a1ffd["commentId"] && Object["hasOwnProperty"]["call"](_0x4a1ffd, "commentId") && writer["uint32"](10)["string"](_0x4a1ffd["commentId"]), null != _0x4a1ffd["createdAt"] && Object["hasOwnProperty"]["call"](_0x4a1ffd, "createdAt") && writer["uint32"](18)["string"](_0x4a1ffd["createdAt"]), writer;
    }, CommentThreadAddedCommentDescriptor2["encodeDelimited"] = function(_0x222702, writer) {
      return this["encode"](_0x222702, writer)["ldelim"]();
    }, CommentThreadAddedCommentDescriptor2["decode"] = function(_0x453631, length2) {
      _0x453631 instanceof _0x476e3c || (_0x453631 = _0x476e3c["create"](_0x453631));
      for (var _0x688823 = void 0 === length2 ? _0x453631["len"] : _0x453631["pos"] + length2, _0x927480 = new $root["CommentThreadAddedCommentDescriptor"](); _0x453631["pos"] < _0x688823; ) {
        var tag = _0x453631["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x927480["commentId"] = _0x453631["string"]();
            break;
          case 2:
            _0x927480["createdAt"] = _0x453631["string"]();
            break;
          default:
            _0x453631["skipType"](7 & tag);
        }
      }
      return _0x927480;
    }, CommentThreadAddedCommentDescriptor2["decodeDelimited"] = function(_0x588612) {
      return _0x588612 instanceof _0x476e3c || (_0x588612 = new _0x476e3c(_0x588612)), this["decode"](_0x588612, _0x588612["uint32"]());
    }, CommentThreadAddedCommentDescriptor2["verify"] = function(_0x4a2de5) {
      return "object" != typeof _0x4a2de5 || null === _0x4a2de5 ? "object expected" : null != _0x4a2de5["commentId"] && _0x4a2de5["hasOwnProperty"]("commentId") && !$util["isString"](_0x4a2de5["commentId"]) ? "commentId: string expected" : null != _0x4a2de5["createdAt"] && _0x4a2de5["hasOwnProperty"]("createdAt") && !$util["isString"](_0x4a2de5["createdAt"]) ? "createdAt: string expected" : null;
    }, CommentThreadAddedCommentDescriptor2["fromObject"] = function(object) {
      if (object instanceof $root["CommentThreadAddedCommentDescriptor"]) return object;
      var _0xee6008 = new $root["CommentThreadAddedCommentDescriptor"]();
      return null != object["commentId"] && (_0xee6008["commentId"] = String(object["commentId"])), null != object["createdAt"] && (_0xee6008["createdAt"] = String(object["createdAt"])), _0xee6008;
    }, CommentThreadAddedCommentDescriptor2["toObject"] = function(_0x10c093, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["commentId"] = "", object["createdAt"] = ""), null != _0x10c093["commentId"] && _0x10c093["hasOwnProperty"]("commentId") && (object["commentId"] = _0x10c093["commentId"]), null != _0x10c093["createdAt"] && _0x10c093["hasOwnProperty"]("createdAt") && (object["createdAt"] = _0x10c093["createdAt"]), object;
    }, CommentThreadAddedCommentDescriptor2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, CommentThreadAddedCommentDescriptor2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/CommentThreadAddedCommentDescriptor";
    }, CommentThreadAddedCommentDescriptor2;
  }(), $root["CommentsV2AddCommentMessage"] = function() {
    function CommentsV2AddCommentMessage(properties) {
      if (properties) {
        for (var _0xace14e = Object["keys"](properties), _0x26e500 = 0; _0x26e500 < _0xace14e["length"]; ++_0x26e500) null != properties[_0xace14e[_0x26e500]] && (this[_0xace14e[_0x26e500]] = properties[_0xace14e[_0x26e500]]);
      }
    }
    return CommentsV2AddCommentMessage["prototype"]["commentThreadId"] = "", CommentsV2AddCommentMessage["prototype"]["content"] = "", CommentsV2AddCommentMessage["prototype"]["documentId"] = "", CommentsV2AddCommentMessage["prototype"]["commentId"] = "", CommentsV2AddCommentMessage["prototype"]["createdAt"] = "", CommentsV2AddCommentMessage["prototype"]["userId"] = "", CommentsV2AddCommentMessage["prototype"]["attributes"] = "", CommentsV2AddCommentMessage["prototype"]["commentThread"] = null, CommentsV2AddCommentMessage["create"] = function(properties) {
      return new CommentsV2AddCommentMessage(properties);
    }, CommentsV2AddCommentMessage["encode"] = function(_0x1503e4, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x1503e4["commentThreadId"] && Object["hasOwnProperty"]["call"](_0x1503e4, "commentThreadId") && writer["uint32"](10)["string"](_0x1503e4["commentThreadId"]), null != _0x1503e4["content"] && Object["hasOwnProperty"]["call"](_0x1503e4, "content") && writer["uint32"](18)["string"](_0x1503e4["content"]), null != _0x1503e4["documentId"] && Object["hasOwnProperty"]["call"](_0x1503e4, "documentId") && writer["uint32"](26)["string"](_0x1503e4["documentId"]), null != _0x1503e4["commentId"] && Object["hasOwnProperty"]["call"](_0x1503e4, "commentId") && writer["uint32"](34)["string"](_0x1503e4["commentId"]), null != _0x1503e4["createdAt"] && Object["hasOwnProperty"]["call"](_0x1503e4, "createdAt") && writer["uint32"](42)["string"](_0x1503e4["createdAt"]), null != _0x1503e4["userId"] && Object["hasOwnProperty"]["call"](_0x1503e4, "userId") && writer["uint32"](50)["string"](_0x1503e4["userId"]), null != _0x1503e4["attributes"] && Object["hasOwnProperty"]["call"](_0x1503e4, "attributes") && writer["uint32"](58)["string"](_0x1503e4["attributes"]), null != _0x1503e4["commentThread"] && Object["hasOwnProperty"]["call"](_0x1503e4, "commentThread") && $root["CommentsThreadDescriptor"]["encode"](_0x1503e4["commentThread"], writer["uint32"](66)["fork"]())["ldelim"](), writer;
    }, CommentsV2AddCommentMessage["encodeDelimited"] = function(_0x27343b, writer) {
      return this["encode"](_0x27343b, writer)["ldelim"]();
    }, CommentsV2AddCommentMessage["decode"] = function(_0x5b7c63, length2) {
      _0x5b7c63 instanceof _0x476e3c || (_0x5b7c63 = _0x476e3c["create"](_0x5b7c63));
      for (var _0x346cbe = void 0 === length2 ? _0x5b7c63["len"] : _0x5b7c63["pos"] + length2, _0x1d022c = new $root["CommentsV2AddCommentMessage"](); _0x5b7c63["pos"] < _0x346cbe; ) {
        var tag = _0x5b7c63["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x1d022c["commentThreadId"] = _0x5b7c63["string"]();
            break;
          case 2:
            _0x1d022c["content"] = _0x5b7c63["string"]();
            break;
          case 3:
            _0x1d022c["documentId"] = _0x5b7c63["string"]();
            break;
          case 4:
            _0x1d022c["commentId"] = _0x5b7c63["string"]();
            break;
          case 5:
            _0x1d022c["createdAt"] = _0x5b7c63["string"]();
            break;
          case 6:
            _0x1d022c["userId"] = _0x5b7c63["string"]();
            break;
          case 7:
            _0x1d022c["attributes"] = _0x5b7c63["string"]();
            break;
          case 8:
            _0x1d022c["commentThread"] = $root["CommentsThreadDescriptor"]["decode"](_0x5b7c63, _0x5b7c63["uint32"]());
            break;
          default:
            _0x5b7c63["skipType"](7 & tag);
        }
      }
      return _0x1d022c;
    }, CommentsV2AddCommentMessage["decodeDelimited"] = function(_0x27a7b9) {
      return _0x27a7b9 instanceof _0x476e3c || (_0x27a7b9 = new _0x476e3c(_0x27a7b9)), this["decode"](_0x27a7b9, _0x27a7b9["uint32"]());
    }, CommentsV2AddCommentMessage["verify"] = function(_0x43e236) {
      if ("object" != typeof _0x43e236 || null === _0x43e236) return "object expected";
      if (null != _0x43e236["commentThreadId"] && _0x43e236["hasOwnProperty"]("commentThreadId") && !$util["isString"](_0x43e236["commentThreadId"])) return "commentThreadId: string expected";
      if (null != _0x43e236["content"] && _0x43e236["hasOwnProperty"]("content") && !$util["isString"](_0x43e236["content"])) return "content: string expected";
      if (null != _0x43e236["documentId"] && _0x43e236["hasOwnProperty"]("documentId") && !$util["isString"](_0x43e236["documentId"])) return "documentId: string expected";
      if (null != _0x43e236["commentId"] && _0x43e236["hasOwnProperty"]("commentId") && !$util["isString"](_0x43e236["commentId"])) return "commentId: string expected";
      if (null != _0x43e236["createdAt"] && _0x43e236["hasOwnProperty"]("createdAt") && !$util["isString"](_0x43e236["createdAt"])) return "createdAt: string expected";
      if (null != _0x43e236["userId"] && _0x43e236["hasOwnProperty"]("userId") && !$util["isString"](_0x43e236["userId"])) return "userId: string expected";
      if (null != _0x43e236["attributes"] && _0x43e236["hasOwnProperty"]("attributes") && !$util["isString"](_0x43e236["attributes"])) return "attributes: string expected";
      if (null != _0x43e236["commentThread"] && _0x43e236["hasOwnProperty"]("commentThread")) {
        var _0x412a00 = $root["CommentsThreadDescriptor"]["verify"](_0x43e236["commentThread"]);
        if (_0x412a00) return "commentThread." + _0x412a00;
      }
      return null;
    }, CommentsV2AddCommentMessage["fromObject"] = function(object) {
      if (object instanceof $root["CommentsV2AddCommentMessage"]) return object;
      var _0x2bf224 = new $root["CommentsV2AddCommentMessage"]();
      if (null != object["commentThreadId"] && (_0x2bf224["commentThreadId"] = String(object["commentThreadId"])), null != object["content"] && (_0x2bf224["content"] = String(object["content"])), null != object["documentId"] && (_0x2bf224["documentId"] = String(object["documentId"])), null != object["commentId"] && (_0x2bf224["commentId"] = String(object["commentId"])), null != object["createdAt"] && (_0x2bf224["createdAt"] = String(object["createdAt"])), null != object["userId"] && (_0x2bf224["userId"] = String(object["userId"])), null != object["attributes"] && (_0x2bf224["attributes"] = String(object["attributes"])), null != object["commentThread"]) {
        if ("object" != typeof object["commentThread"]) throw TypeError(".CommentsV2AddCommentMessage.commentThread: object expected");
        _0x2bf224["commentThread"] = $root["CommentsThreadDescriptor"]["fromObject"](object["commentThread"]);
      }
      return _0x2bf224;
    }, CommentsV2AddCommentMessage["toObject"] = function(_0xe2dfde, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["commentThreadId"] = "", object["content"] = "", object["documentId"] = "", object["commentId"] = "", object["createdAt"] = "", object["userId"] = "", object["attributes"] = "", object["commentThread"] = null), null != _0xe2dfde["commentThreadId"] && _0xe2dfde["hasOwnProperty"]("commentThreadId") && (object["commentThreadId"] = _0xe2dfde["commentThreadId"]), null != _0xe2dfde["content"] && _0xe2dfde["hasOwnProperty"]("content") && (object["content"] = _0xe2dfde["content"]), null != _0xe2dfde["documentId"] && _0xe2dfde["hasOwnProperty"]("documentId") && (object["documentId"] = _0xe2dfde["documentId"]), null != _0xe2dfde["commentId"] && _0xe2dfde["hasOwnProperty"]("commentId") && (object["commentId"] = _0xe2dfde["commentId"]), null != _0xe2dfde["createdAt"] && _0xe2dfde["hasOwnProperty"]("createdAt") && (object["createdAt"] = _0xe2dfde["createdAt"]), null != _0xe2dfde["userId"] && _0xe2dfde["hasOwnProperty"]("userId") && (object["userId"] = _0xe2dfde["userId"]), null != _0xe2dfde["attributes"] && _0xe2dfde["hasOwnProperty"]("attributes") && (object["attributes"] = _0xe2dfde["attributes"]), null != _0xe2dfde["commentThread"] && _0xe2dfde["hasOwnProperty"]("commentThread") && (object["commentThread"] = $root["CommentsThreadDescriptor"]["toObject"](_0xe2dfde["commentThread"], options)), object;
    }, CommentsV2AddCommentMessage["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, CommentsV2AddCommentMessage["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/CommentsV2AddCommentMessage";
    }, CommentsV2AddCommentMessage;
  }(), $root["CommentsV2AddCommentThreadMessage"] = function() {
    function CommentsV2AddCommentThreadMessage(properties) {
      if (this["comments"] = [], properties) {
        for (var _0x4ad0cb = Object["keys"](properties), _0x39271d = 0; _0x39271d < _0x4ad0cb["length"]; ++_0x39271d) null != properties[_0x4ad0cb[_0x39271d]] && (this[_0x4ad0cb[_0x39271d]] = properties[_0x4ad0cb[_0x39271d]]);
      }
    }
    return CommentsV2AddCommentThreadMessage["prototype"]["documentId"] = "", CommentsV2AddCommentThreadMessage["prototype"]["commentThreadId"] = "", CommentsV2AddCommentThreadMessage["prototype"]["context"] = "", CommentsV2AddCommentThreadMessage["prototype"]["createdAt"] = "", CommentsV2AddCommentThreadMessage["prototype"]["resolvedAt"] = "", CommentsV2AddCommentThreadMessage["prototype"]["resolvedBy"] = "", CommentsV2AddCommentThreadMessage["prototype"]["attributes"] = "", CommentsV2AddCommentThreadMessage["prototype"]["deletedAt"] = "", CommentsV2AddCommentThreadMessage["prototype"]["comments"] = $util["emptyArray"], CommentsV2AddCommentThreadMessage["create"] = function(properties) {
      return new CommentsV2AddCommentThreadMessage(properties);
    }, CommentsV2AddCommentThreadMessage["encode"] = function(_0x275005, writer) {
      if (writer || (writer = $Writer["create"]()), null != _0x275005["documentId"] && Object["hasOwnProperty"]["call"](_0x275005, "documentId") && writer["uint32"](10)["string"](_0x275005["documentId"]), null != _0x275005["commentThreadId"] && Object["hasOwnProperty"]["call"](_0x275005, "commentThreadId") && writer["uint32"](18)["string"](_0x275005["commentThreadId"]), null != _0x275005["context"] && Object["hasOwnProperty"]["call"](_0x275005, "context") && writer["uint32"](26)["string"](_0x275005["context"]), null != _0x275005["createdAt"] && Object["hasOwnProperty"]["call"](_0x275005, "createdAt") && writer["uint32"](34)["string"](_0x275005["createdAt"]), null != _0x275005["resolvedAt"] && Object["hasOwnProperty"]["call"](_0x275005, "resolvedAt") && writer["uint32"](42)["string"](_0x275005["resolvedAt"]), null != _0x275005["resolvedBy"] && Object["hasOwnProperty"]["call"](_0x275005, "resolvedBy") && writer["uint32"](50)["string"](_0x275005["resolvedBy"]), null != _0x275005["attributes"] && Object["hasOwnProperty"]["call"](_0x275005, "attributes") && writer["uint32"](58)["string"](_0x275005["attributes"]), null != _0x275005["deletedAt"] && Object["hasOwnProperty"]["call"](_0x275005, "deletedAt") && writer["uint32"](66)["string"](_0x275005["deletedAt"]), null != _0x275005["comments"] && _0x275005["comments"]["length"]) {
        for (var _0x2b16c1 = 0; _0x2b16c1 < _0x275005["comments"]["length"]; ++_0x2b16c1) $root["CommentDescriptor"]["encode"](_0x275005["comments"][_0x2b16c1], writer["uint32"](74)["fork"]())["ldelim"]();
      }
      return writer;
    }, CommentsV2AddCommentThreadMessage["encodeDelimited"] = function(_0x5c7cb9, writer) {
      return this["encode"](_0x5c7cb9, writer)["ldelim"]();
    }, CommentsV2AddCommentThreadMessage["decode"] = function(_0x119430, length2) {
      _0x119430 instanceof _0x476e3c || (_0x119430 = _0x476e3c["create"](_0x119430));
      for (var _0x296ff1 = void 0 === length2 ? _0x119430["len"] : _0x119430["pos"] + length2, _0x1c0d9a = new $root["CommentsV2AddCommentThreadMessage"](); _0x119430["pos"] < _0x296ff1; ) {
        var tag = _0x119430["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x1c0d9a["documentId"] = _0x119430["string"]();
            break;
          case 2:
            _0x1c0d9a["commentThreadId"] = _0x119430["string"]();
            break;
          case 3:
            _0x1c0d9a["context"] = _0x119430["string"]();
            break;
          case 4:
            _0x1c0d9a["createdAt"] = _0x119430["string"]();
            break;
          case 5:
            _0x1c0d9a["resolvedAt"] = _0x119430["string"]();
            break;
          case 6:
            _0x1c0d9a["resolvedBy"] = _0x119430["string"]();
            break;
          case 7:
            _0x1c0d9a["attributes"] = _0x119430["string"]();
            break;
          case 8:
            _0x1c0d9a["deletedAt"] = _0x119430["string"]();
            break;
          case 9:
            _0x1c0d9a["comments"] && _0x1c0d9a["comments"]["length"] || (_0x1c0d9a["comments"] = []), _0x1c0d9a["comments"]["push"]($root["CommentDescriptor"]["decode"](_0x119430, _0x119430["uint32"]()));
            break;
          default:
            _0x119430["skipType"](7 & tag);
        }
      }
      return _0x1c0d9a;
    }, CommentsV2AddCommentThreadMessage["decodeDelimited"] = function(_0x38970c) {
      return _0x38970c instanceof _0x476e3c || (_0x38970c = new _0x476e3c(_0x38970c)), this["decode"](_0x38970c, _0x38970c["uint32"]());
    }, CommentsV2AddCommentThreadMessage["verify"] = function(_0x53a95f) {
      if ("object" != typeof _0x53a95f || null === _0x53a95f) return "object expected";
      if (null != _0x53a95f["documentId"] && _0x53a95f["hasOwnProperty"]("documentId") && !$util["isString"](_0x53a95f["documentId"])) return "documentId: string expected";
      if (null != _0x53a95f["commentThreadId"] && _0x53a95f["hasOwnProperty"]("commentThreadId") && !$util["isString"](_0x53a95f["commentThreadId"])) return "commentThreadId: string expected";
      if (null != _0x53a95f["context"] && _0x53a95f["hasOwnProperty"]("context") && !$util["isString"](_0x53a95f["context"])) return "context: string expected";
      if (null != _0x53a95f["createdAt"] && _0x53a95f["hasOwnProperty"]("createdAt") && !$util["isString"](_0x53a95f["createdAt"])) return "createdAt: string expected";
      if (null != _0x53a95f["resolvedAt"] && _0x53a95f["hasOwnProperty"]("resolvedAt") && !$util["isString"](_0x53a95f["resolvedAt"])) return "resolvedAt: string expected";
      if (null != _0x53a95f["resolvedBy"] && _0x53a95f["hasOwnProperty"]("resolvedBy") && !$util["isString"](_0x53a95f["resolvedBy"])) return "resolvedBy: string expected";
      if (null != _0x53a95f["attributes"] && _0x53a95f["hasOwnProperty"]("attributes") && !$util["isString"](_0x53a95f["attributes"])) return "attributes: string expected";
      if (null != _0x53a95f["deletedAt"] && _0x53a95f["hasOwnProperty"]("deletedAt") && !$util["isString"](_0x53a95f["deletedAt"])) return "deletedAt: string expected";
      if (null != _0x53a95f["comments"] && _0x53a95f["hasOwnProperty"]("comments")) {
        if (!Array["isArray"](_0x53a95f["comments"])) return "comments: array expected";
        for (var _0x1efa85 = 0; _0x1efa85 < _0x53a95f["comments"]["length"]; ++_0x1efa85) {
          var _0x4014f4 = $root["CommentDescriptor"]["verify"](_0x53a95f["comments"][_0x1efa85]);
          if (_0x4014f4) return "comments." + _0x4014f4;
        }
      }
      return null;
    }, CommentsV2AddCommentThreadMessage["fromObject"] = function(object) {
      if (object instanceof $root["CommentsV2AddCommentThreadMessage"]) return object;
      var _0x4c0816 = new $root["CommentsV2AddCommentThreadMessage"]();
      if (null != object["documentId"] && (_0x4c0816["documentId"] = String(object["documentId"])), null != object["commentThreadId"] && (_0x4c0816["commentThreadId"] = String(object["commentThreadId"])), null != object["context"] && (_0x4c0816["context"] = String(object["context"])), null != object["createdAt"] && (_0x4c0816["createdAt"] = String(object["createdAt"])), null != object["resolvedAt"] && (_0x4c0816["resolvedAt"] = String(object["resolvedAt"])), null != object["resolvedBy"] && (_0x4c0816["resolvedBy"] = String(object["resolvedBy"])), null != object["attributes"] && (_0x4c0816["attributes"] = String(object["attributes"])), null != object["deletedAt"] && (_0x4c0816["deletedAt"] = String(object["deletedAt"])), object["comments"]) {
        if (!Array["isArray"](object["comments"])) throw TypeError(".CommentsV2AddCommentThreadMessage.comments: array expected");
        _0x4c0816["comments"] = [];
        for (var _0x1e627a = 0; _0x1e627a < object["comments"]["length"]; ++_0x1e627a) {
          if ("object" != typeof object["comments"][_0x1e627a]) throw TypeError(".CommentsV2AddCommentThreadMessage.comments: object expected");
          _0x4c0816["comments"][_0x1e627a] = $root["CommentDescriptor"]["fromObject"](object["comments"][_0x1e627a]);
        }
      }
      return _0x4c0816;
    }, CommentsV2AddCommentThreadMessage["toObject"] = function(_0x4eae76, options) {
      options || (options = {});
      var object = {};
      if ((options["arrays"] || options["defaults"]) && (object["comments"] = []), options["defaults"] && (object["documentId"] = "", object["commentThreadId"] = "", object["context"] = "", object["createdAt"] = "", object["resolvedAt"] = "", object["resolvedBy"] = "", object["attributes"] = "", object["deletedAt"] = ""), null != _0x4eae76["documentId"] && _0x4eae76["hasOwnProperty"]("documentId") && (object["documentId"] = _0x4eae76["documentId"]), null != _0x4eae76["commentThreadId"] && _0x4eae76["hasOwnProperty"]("commentThreadId") && (object["commentThreadId"] = _0x4eae76["commentThreadId"]), null != _0x4eae76["context"] && _0x4eae76["hasOwnProperty"]("context") && (object["context"] = _0x4eae76["context"]), null != _0x4eae76["createdAt"] && _0x4eae76["hasOwnProperty"]("createdAt") && (object["createdAt"] = _0x4eae76["createdAt"]), null != _0x4eae76["resolvedAt"] && _0x4eae76["hasOwnProperty"]("resolvedAt") && (object["resolvedAt"] = _0x4eae76["resolvedAt"]), null != _0x4eae76["resolvedBy"] && _0x4eae76["hasOwnProperty"]("resolvedBy") && (object["resolvedBy"] = _0x4eae76["resolvedBy"]), null != _0x4eae76["attributes"] && _0x4eae76["hasOwnProperty"]("attributes") && (object["attributes"] = _0x4eae76["attributes"]), null != _0x4eae76["deletedAt"] && _0x4eae76["hasOwnProperty"]("deletedAt") && (object["deletedAt"] = _0x4eae76["deletedAt"]), _0x4eae76["comments"] && _0x4eae76["comments"]["length"]) {
        object["comments"] = [];
        for (var _0x39ca40 = 0; _0x39ca40 < _0x4eae76["comments"]["length"]; ++_0x39ca40) object["comments"][_0x39ca40] = $root["CommentDescriptor"]["toObject"](_0x4eae76["comments"][_0x39ca40], options);
      }
      return object;
    }, CommentsV2AddCommentThreadMessage["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, CommentsV2AddCommentThreadMessage["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/CommentsV2AddCommentThreadMessage";
    }, CommentsV2AddCommentThreadMessage;
  }(), $root["CommentsV2ReopenCommentThreadMessage"] = function() {
    function CommentsV2ReopenCommentThreadMessage(properties) {
      if (properties) {
        for (var _0x1ed11e = Object["keys"](properties), _0x78843c = 0; _0x78843c < _0x1ed11e["length"]; ++_0x78843c) null != properties[_0x1ed11e[_0x78843c]] && (this[_0x1ed11e[_0x78843c]] = properties[_0x1ed11e[_0x78843c]]);
      }
    }
    return CommentsV2ReopenCommentThreadMessage["prototype"]["commentThreadId"] = "", CommentsV2ReopenCommentThreadMessage["prototype"]["documentId"] = "", CommentsV2ReopenCommentThreadMessage["create"] = function(properties) {
      return new CommentsV2ReopenCommentThreadMessage(properties);
    }, CommentsV2ReopenCommentThreadMessage["encode"] = function(_0x2b5245, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x2b5245["commentThreadId"] && Object["hasOwnProperty"]["call"](_0x2b5245, "commentThreadId") && writer["uint32"](10)["string"](_0x2b5245["commentThreadId"]), null != _0x2b5245["documentId"] && Object["hasOwnProperty"]["call"](_0x2b5245, "documentId") && writer["uint32"](18)["string"](_0x2b5245["documentId"]), writer;
    }, CommentsV2ReopenCommentThreadMessage["encodeDelimited"] = function(_0x53b173, writer) {
      return this["encode"](_0x53b173, writer)["ldelim"]();
    }, CommentsV2ReopenCommentThreadMessage["decode"] = function(_0x29e167, length2) {
      _0x29e167 instanceof _0x476e3c || (_0x29e167 = _0x476e3c["create"](_0x29e167));
      for (var _0x3aae14 = void 0 === length2 ? _0x29e167["len"] : _0x29e167["pos"] + length2, _0x19d0ad = new $root["CommentsV2ReopenCommentThreadMessage"](); _0x29e167["pos"] < _0x3aae14; ) {
        var tag = _0x29e167["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x19d0ad["commentThreadId"] = _0x29e167["string"]();
            break;
          case 2:
            _0x19d0ad["documentId"] = _0x29e167["string"]();
            break;
          default:
            _0x29e167["skipType"](7 & tag);
        }
      }
      return _0x19d0ad;
    }, CommentsV2ReopenCommentThreadMessage["decodeDelimited"] = function(_0x55451b) {
      return _0x55451b instanceof _0x476e3c || (_0x55451b = new _0x476e3c(_0x55451b)), this["decode"](_0x55451b, _0x55451b["uint32"]());
    }, CommentsV2ReopenCommentThreadMessage["verify"] = function(_0x2e5e81) {
      return "object" != typeof _0x2e5e81 || null === _0x2e5e81 ? "object expected" : null != _0x2e5e81["commentThreadId"] && _0x2e5e81["hasOwnProperty"]("commentThreadId") && !$util["isString"](_0x2e5e81["commentThreadId"]) ? "commentThreadId: string expected" : null != _0x2e5e81["documentId"] && _0x2e5e81["hasOwnProperty"]("documentId") && !$util["isString"](_0x2e5e81["documentId"]) ? "documentId: string expected" : null;
    }, CommentsV2ReopenCommentThreadMessage["fromObject"] = function(object) {
      if (object instanceof $root["CommentsV2ReopenCommentThreadMessage"]) return object;
      var _0x5fab3b = new $root["CommentsV2ReopenCommentThreadMessage"]();
      return null != object["commentThreadId"] && (_0x5fab3b["commentThreadId"] = String(object["commentThreadId"])), null != object["documentId"] && (_0x5fab3b["documentId"] = String(object["documentId"])), _0x5fab3b;
    }, CommentsV2ReopenCommentThreadMessage["toObject"] = function(_0x2a8ff5, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["commentThreadId"] = "", object["documentId"] = ""), null != _0x2a8ff5["commentThreadId"] && _0x2a8ff5["hasOwnProperty"]("commentThreadId") && (object["commentThreadId"] = _0x2a8ff5["commentThreadId"]), null != _0x2a8ff5["documentId"] && _0x2a8ff5["hasOwnProperty"]("documentId") && (object["documentId"] = _0x2a8ff5["documentId"]), object;
    }, CommentsV2ReopenCommentThreadMessage["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, CommentsV2ReopenCommentThreadMessage["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/CommentsV2ReopenCommentThreadMessage";
    }, CommentsV2ReopenCommentThreadMessage;
  }(), $root["CommentsV2ResolveCommentThreadMessage"] = function() {
    function CommentsV2ResolveCommentThreadMessage(properties) {
      if (properties) {
        for (var _0x1c6a6c = Object["keys"](properties), _0x10959e = 0; _0x10959e < _0x1c6a6c["length"]; ++_0x10959e) null != properties[_0x1c6a6c[_0x10959e]] && (this[_0x1c6a6c[_0x10959e]] = properties[_0x1c6a6c[_0x10959e]]);
      }
    }
    return CommentsV2ResolveCommentThreadMessage["prototype"]["commentThreadId"] = "", CommentsV2ResolveCommentThreadMessage["prototype"]["documentId"] = "", CommentsV2ResolveCommentThreadMessage["prototype"]["resolvedBy"] = "", CommentsV2ResolveCommentThreadMessage["prototype"]["resolvedAt"] = "", CommentsV2ResolveCommentThreadMessage["create"] = function(properties) {
      return new CommentsV2ResolveCommentThreadMessage(properties);
    }, CommentsV2ResolveCommentThreadMessage["encode"] = function(_0x14e57c, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x14e57c["commentThreadId"] && Object["hasOwnProperty"]["call"](_0x14e57c, "commentThreadId") && writer["uint32"](10)["string"](_0x14e57c["commentThreadId"]), null != _0x14e57c["documentId"] && Object["hasOwnProperty"]["call"](_0x14e57c, "documentId") && writer["uint32"](18)["string"](_0x14e57c["documentId"]), null != _0x14e57c["resolvedBy"] && Object["hasOwnProperty"]["call"](_0x14e57c, "resolvedBy") && writer["uint32"](26)["string"](_0x14e57c["resolvedBy"]), null != _0x14e57c["resolvedAt"] && Object["hasOwnProperty"]["call"](_0x14e57c, "resolvedAt") && writer["uint32"](34)["string"](_0x14e57c["resolvedAt"]), writer;
    }, CommentsV2ResolveCommentThreadMessage["encodeDelimited"] = function(_0x209808, writer) {
      return this["encode"](_0x209808, writer)["ldelim"]();
    }, CommentsV2ResolveCommentThreadMessage["decode"] = function(_0x26bf69, length2) {
      _0x26bf69 instanceof _0x476e3c || (_0x26bf69 = _0x476e3c["create"](_0x26bf69));
      for (var _0x45bc65 = void 0 === length2 ? _0x26bf69["len"] : _0x26bf69["pos"] + length2, _0x1fc87c = new $root["CommentsV2ResolveCommentThreadMessage"](); _0x26bf69["pos"] < _0x45bc65; ) {
        var tag = _0x26bf69["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x1fc87c["commentThreadId"] = _0x26bf69["string"]();
            break;
          case 2:
            _0x1fc87c["documentId"] = _0x26bf69["string"]();
            break;
          case 3:
            _0x1fc87c["resolvedBy"] = _0x26bf69["string"]();
            break;
          case 4:
            _0x1fc87c["resolvedAt"] = _0x26bf69["string"]();
            break;
          default:
            _0x26bf69["skipType"](7 & tag);
        }
      }
      return _0x1fc87c;
    }, CommentsV2ResolveCommentThreadMessage["decodeDelimited"] = function(_0x23eab7) {
      return _0x23eab7 instanceof _0x476e3c || (_0x23eab7 = new _0x476e3c(_0x23eab7)), this["decode"](_0x23eab7, _0x23eab7["uint32"]());
    }, CommentsV2ResolveCommentThreadMessage["verify"] = function(_0x41900a) {
      return "object" != typeof _0x41900a || null === _0x41900a ? "object expected" : null != _0x41900a["commentThreadId"] && _0x41900a["hasOwnProperty"]("commentThreadId") && !$util["isString"](_0x41900a["commentThreadId"]) ? "commentThreadId: string expected" : null != _0x41900a["documentId"] && _0x41900a["hasOwnProperty"]("documentId") && !$util["isString"](_0x41900a["documentId"]) ? "documentId: string expected" : null != _0x41900a["resolvedBy"] && _0x41900a["hasOwnProperty"]("resolvedBy") && !$util["isString"](_0x41900a["resolvedBy"]) ? "resolvedBy: string expected" : null != _0x41900a["resolvedAt"] && _0x41900a["hasOwnProperty"]("resolvedAt") && !$util["isString"](_0x41900a["resolvedAt"]) ? "resolvedAt: string expected" : null;
    }, CommentsV2ResolveCommentThreadMessage["fromObject"] = function(object) {
      if (object instanceof $root["CommentsV2ResolveCommentThreadMessage"]) return object;
      var _0x1678d4 = new $root["CommentsV2ResolveCommentThreadMessage"]();
      return null != object["commentThreadId"] && (_0x1678d4["commentThreadId"] = String(object["commentThreadId"])), null != object["documentId"] && (_0x1678d4["documentId"] = String(object["documentId"])), null != object["resolvedBy"] && (_0x1678d4["resolvedBy"] = String(object["resolvedBy"])), null != object["resolvedAt"] && (_0x1678d4["resolvedAt"] = String(object["resolvedAt"])), _0x1678d4;
    }, CommentsV2ResolveCommentThreadMessage["toObject"] = function(_0x5f45aa, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["commentThreadId"] = "", object["documentId"] = "", object["resolvedBy"] = "", object["resolvedAt"] = ""), null != _0x5f45aa["commentThreadId"] && _0x5f45aa["hasOwnProperty"]("commentThreadId") && (object["commentThreadId"] = _0x5f45aa["commentThreadId"]), null != _0x5f45aa["documentId"] && _0x5f45aa["hasOwnProperty"]("documentId") && (object["documentId"] = _0x5f45aa["documentId"]), null != _0x5f45aa["resolvedBy"] && _0x5f45aa["hasOwnProperty"]("resolvedBy") && (object["resolvedBy"] = _0x5f45aa["resolvedBy"]), null != _0x5f45aa["resolvedAt"] && _0x5f45aa["hasOwnProperty"]("resolvedAt") && (object["resolvedAt"] = _0x5f45aa["resolvedAt"]), object;
    }, CommentsV2ResolveCommentThreadMessage["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, CommentsV2ResolveCommentThreadMessage["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/CommentsV2ResolveCommentThreadMessage";
    }, CommentsV2ResolveCommentThreadMessage;
  }(), $root["CommentsV2UpdateCommentThreadMessage"] = function() {
    function CommentsV2UpdateCommentThreadMessage(properties) {
      if (properties) {
        for (var _0x4bbf6e = Object["keys"](properties), _0x51a1fd = 0; _0x51a1fd < _0x4bbf6e["length"]; ++_0x51a1fd) null != properties[_0x4bbf6e[_0x51a1fd]] && (this[_0x4bbf6e[_0x51a1fd]] = properties[_0x4bbf6e[_0x51a1fd]]);
      }
    }
    return CommentsV2UpdateCommentThreadMessage["prototype"]["commentThreadId"] = "", CommentsV2UpdateCommentThreadMessage["prototype"]["documentId"] = "", CommentsV2UpdateCommentThreadMessage["prototype"]["context"] = "", CommentsV2UpdateCommentThreadMessage["prototype"]["attributes"] = "", CommentsV2UpdateCommentThreadMessage["prototype"]["unlinkedAt"] = "", CommentsV2UpdateCommentThreadMessage["create"] = function(properties) {
      return new CommentsV2UpdateCommentThreadMessage(properties);
    }, CommentsV2UpdateCommentThreadMessage["encode"] = function(_0x383134, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x383134["commentThreadId"] && Object["hasOwnProperty"]["call"](_0x383134, "commentThreadId") && writer["uint32"](10)["string"](_0x383134["commentThreadId"]), null != _0x383134["documentId"] && Object["hasOwnProperty"]["call"](_0x383134, "documentId") && writer["uint32"](18)["string"](_0x383134["documentId"]), null != _0x383134["context"] && Object["hasOwnProperty"]["call"](_0x383134, "context") && writer["uint32"](26)["string"](_0x383134["context"]), null != _0x383134["attributes"] && Object["hasOwnProperty"]["call"](_0x383134, "attributes") && writer["uint32"](34)["string"](_0x383134["attributes"]), null != _0x383134["unlinkedAt"] && Object["hasOwnProperty"]["call"](_0x383134, "unlinkedAt") && writer["uint32"](42)["string"](_0x383134["unlinkedAt"]), writer;
    }, CommentsV2UpdateCommentThreadMessage["encodeDelimited"] = function(_0x51a898, writer) {
      return this["encode"](_0x51a898, writer)["ldelim"]();
    }, CommentsV2UpdateCommentThreadMessage["decode"] = function(_0x41409e, length2) {
      _0x41409e instanceof _0x476e3c || (_0x41409e = _0x476e3c["create"](_0x41409e));
      for (var _0x33ccdf = void 0 === length2 ? _0x41409e["len"] : _0x41409e["pos"] + length2, _0x13997c = new $root["CommentsV2UpdateCommentThreadMessage"](); _0x41409e["pos"] < _0x33ccdf; ) {
        var tag = _0x41409e["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x13997c["commentThreadId"] = _0x41409e["string"]();
            break;
          case 2:
            _0x13997c["documentId"] = _0x41409e["string"]();
            break;
          case 3:
            _0x13997c["context"] = _0x41409e["string"]();
            break;
          case 4:
            _0x13997c["attributes"] = _0x41409e["string"]();
            break;
          case 5:
            _0x13997c["unlinkedAt"] = _0x41409e["string"]();
            break;
          default:
            _0x41409e["skipType"](7 & tag);
        }
      }
      return _0x13997c;
    }, CommentsV2UpdateCommentThreadMessage["decodeDelimited"] = function(_0x2efdc8) {
      return _0x2efdc8 instanceof _0x476e3c || (_0x2efdc8 = new _0x476e3c(_0x2efdc8)), this["decode"](_0x2efdc8, _0x2efdc8["uint32"]());
    }, CommentsV2UpdateCommentThreadMessage["verify"] = function(_0x43fbc2) {
      return "object" != typeof _0x43fbc2 || null === _0x43fbc2 ? "object expected" : null != _0x43fbc2["commentThreadId"] && _0x43fbc2["hasOwnProperty"]("commentThreadId") && !$util["isString"](_0x43fbc2["commentThreadId"]) ? "commentThreadId: string expected" : null != _0x43fbc2["documentId"] && _0x43fbc2["hasOwnProperty"]("documentId") && !$util["isString"](_0x43fbc2["documentId"]) ? "documentId: string expected" : null != _0x43fbc2["context"] && _0x43fbc2["hasOwnProperty"]("context") && !$util["isString"](_0x43fbc2["context"]) ? "context: string expected" : null != _0x43fbc2["attributes"] && _0x43fbc2["hasOwnProperty"]("attributes") && !$util["isString"](_0x43fbc2["attributes"]) ? "attributes: string expected" : null != _0x43fbc2["unlinkedAt"] && _0x43fbc2["hasOwnProperty"]("unlinkedAt") && !$util["isString"](_0x43fbc2["unlinkedAt"]) ? "unlinkedAt: string expected" : null;
    }, CommentsV2UpdateCommentThreadMessage["fromObject"] = function(object) {
      if (object instanceof $root["CommentsV2UpdateCommentThreadMessage"]) return object;
      var _0x3d94b9 = new $root["CommentsV2UpdateCommentThreadMessage"]();
      return null != object["commentThreadId"] && (_0x3d94b9["commentThreadId"] = String(object["commentThreadId"])), null != object["documentId"] && (_0x3d94b9["documentId"] = String(object["documentId"])), null != object["context"] && (_0x3d94b9["context"] = String(object["context"])), null != object["attributes"] && (_0x3d94b9["attributes"] = String(object["attributes"])), null != object["unlinkedAt"] && (_0x3d94b9["unlinkedAt"] = String(object["unlinkedAt"])), _0x3d94b9;
    }, CommentsV2UpdateCommentThreadMessage["toObject"] = function(_0x248c52, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["commentThreadId"] = "", object["documentId"] = "", object["context"] = "", object["attributes"] = "", object["unlinkedAt"] = ""), null != _0x248c52["commentThreadId"] && _0x248c52["hasOwnProperty"]("commentThreadId") && (object["commentThreadId"] = _0x248c52["commentThreadId"]), null != _0x248c52["documentId"] && _0x248c52["hasOwnProperty"]("documentId") && (object["documentId"] = _0x248c52["documentId"]), null != _0x248c52["context"] && _0x248c52["hasOwnProperty"]("context") && (object["context"] = _0x248c52["context"]), null != _0x248c52["attributes"] && _0x248c52["hasOwnProperty"]("attributes") && (object["attributes"] = _0x248c52["attributes"]), null != _0x248c52["unlinkedAt"] && _0x248c52["hasOwnProperty"]("unlinkedAt") && (object["unlinkedAt"] = _0x248c52["unlinkedAt"]), object;
    }, CommentsV2UpdateCommentThreadMessage["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, CommentsV2UpdateCommentThreadMessage["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/CommentsV2UpdateCommentThreadMessage";
    }, CommentsV2UpdateCommentThreadMessage;
  }(), $root["CommentsV2ConnectMessage"] = function() {
    function CommentsV2ConnectMessage(properties) {
      if (properties) {
        for (var _0xbc3fa2 = Object["keys"](properties), _0x2cf059 = 0; _0x2cf059 < _0xbc3fa2["length"]; ++_0x2cf059) null != properties[_0xbc3fa2[_0x2cf059]] && (this[_0xbc3fa2[_0x2cf059]] = properties[_0xbc3fa2[_0x2cf059]]);
      }
    }
    return CommentsV2ConnectMessage["prototype"]["documentId"] = "", CommentsV2ConnectMessage["create"] = function(properties) {
      return new CommentsV2ConnectMessage(properties);
    }, CommentsV2ConnectMessage["encode"] = function(_0x396274, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x396274["documentId"] && Object["hasOwnProperty"]["call"](_0x396274, "documentId") && writer["uint32"](10)["string"](_0x396274["documentId"]), writer;
    }, CommentsV2ConnectMessage["encodeDelimited"] = function(_0x5b5ac8, writer) {
      return this["encode"](_0x5b5ac8, writer)["ldelim"]();
    }, CommentsV2ConnectMessage["decode"] = function(_0x25285f, length2) {
      _0x25285f instanceof _0x476e3c || (_0x25285f = _0x476e3c["create"](_0x25285f));
      for (var _0x2fa4c3 = void 0 === length2 ? _0x25285f["len"] : _0x25285f["pos"] + length2, _0x2f4fb2 = new $root["CommentsV2ConnectMessage"](); _0x25285f["pos"] < _0x2fa4c3; ) {
        var tag = _0x25285f["uint32"]();
        if (tag >>> 3 == 1) _0x2f4fb2["documentId"] = _0x25285f["string"]();
        else _0x25285f["skipType"](7 & tag);
      }
      return _0x2f4fb2;
    }, CommentsV2ConnectMessage["decodeDelimited"] = function(_0x5e5c50) {
      return _0x5e5c50 instanceof _0x476e3c || (_0x5e5c50 = new _0x476e3c(_0x5e5c50)), this["decode"](_0x5e5c50, _0x5e5c50["uint32"]());
    }, CommentsV2ConnectMessage["verify"] = function(_0x362262) {
      return "object" != typeof _0x362262 || null === _0x362262 ? "object expected" : null != _0x362262["documentId"] && _0x362262["hasOwnProperty"]("documentId") && !$util["isString"](_0x362262["documentId"]) ? "documentId: string expected" : null;
    }, CommentsV2ConnectMessage["fromObject"] = function(object) {
      if (object instanceof $root["CommentsV2ConnectMessage"]) return object;
      var _0x46b7d4 = new $root["CommentsV2ConnectMessage"]();
      return null != object["documentId"] && (_0x46b7d4["documentId"] = String(object["documentId"])), _0x46b7d4;
    }, CommentsV2ConnectMessage["toObject"] = function(_0x392402, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["documentId"] = ""), null != _0x392402["documentId"] && _0x392402["hasOwnProperty"]("documentId") && (object["documentId"] = _0x392402["documentId"]), object;
    }, CommentsV2ConnectMessage["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, CommentsV2ConnectMessage["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/CommentsV2ConnectMessage";
    }, CommentsV2ConnectMessage;
  }(), $root["CommentsV2GetCommentThreadMessage"] = function() {
    function CommentsV2GetCommentThreadMessage(properties) {
      if (properties) {
        for (var _0x2643ce = Object["keys"](properties), _0x34afe6 = 0; _0x34afe6 < _0x2643ce["length"]; ++_0x34afe6) null != properties[_0x2643ce[_0x34afe6]] && (this[_0x2643ce[_0x34afe6]] = properties[_0x2643ce[_0x34afe6]]);
      }
    }
    return CommentsV2GetCommentThreadMessage["prototype"]["commentThreadId"] = "", CommentsV2GetCommentThreadMessage["prototype"]["documentId"] = "", CommentsV2GetCommentThreadMessage["create"] = function(properties) {
      return new CommentsV2GetCommentThreadMessage(properties);
    }, CommentsV2GetCommentThreadMessage["encode"] = function(_0x211238, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x211238["commentThreadId"] && Object["hasOwnProperty"]["call"](_0x211238, "commentThreadId") && writer["uint32"](10)["string"](_0x211238["commentThreadId"]), null != _0x211238["documentId"] && Object["hasOwnProperty"]["call"](_0x211238, "documentId") && writer["uint32"](18)["string"](_0x211238["documentId"]), writer;
    }, CommentsV2GetCommentThreadMessage["encodeDelimited"] = function(_0x12ec9f, writer) {
      return this["encode"](_0x12ec9f, writer)["ldelim"]();
    }, CommentsV2GetCommentThreadMessage["decode"] = function(_0x2204e1, length2) {
      _0x2204e1 instanceof _0x476e3c || (_0x2204e1 = _0x476e3c["create"](_0x2204e1));
      for (var _0x1ff4c1 = void 0 === length2 ? _0x2204e1["len"] : _0x2204e1["pos"] + length2, _0x414e8e = new $root["CommentsV2GetCommentThreadMessage"](); _0x2204e1["pos"] < _0x1ff4c1; ) {
        var tag = _0x2204e1["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x414e8e["commentThreadId"] = _0x2204e1["string"]();
            break;
          case 2:
            _0x414e8e["documentId"] = _0x2204e1["string"]();
            break;
          default:
            _0x2204e1["skipType"](7 & tag);
        }
      }
      return _0x414e8e;
    }, CommentsV2GetCommentThreadMessage["decodeDelimited"] = function(_0x2b8105) {
      return _0x2b8105 instanceof _0x476e3c || (_0x2b8105 = new _0x476e3c(_0x2b8105)), this["decode"](_0x2b8105, _0x2b8105["uint32"]());
    }, CommentsV2GetCommentThreadMessage["verify"] = function(_0xb0dee8) {
      return "object" != typeof _0xb0dee8 || null === _0xb0dee8 ? "object expected" : null != _0xb0dee8["commentThreadId"] && _0xb0dee8["hasOwnProperty"]("commentThreadId") && !$util["isString"](_0xb0dee8["commentThreadId"]) ? "commentThreadId: string expected" : null != _0xb0dee8["documentId"] && _0xb0dee8["hasOwnProperty"]("documentId") && !$util["isString"](_0xb0dee8["documentId"]) ? "documentId: string expected" : null;
    }, CommentsV2GetCommentThreadMessage["fromObject"] = function(object) {
      if (object instanceof $root["CommentsV2GetCommentThreadMessage"]) return object;
      var _0x163119 = new $root["CommentsV2GetCommentThreadMessage"]();
      return null != object["commentThreadId"] && (_0x163119["commentThreadId"] = String(object["commentThreadId"])), null != object["documentId"] && (_0x163119["documentId"] = String(object["documentId"])), _0x163119;
    }, CommentsV2GetCommentThreadMessage["toObject"] = function(_0xb85753, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["commentThreadId"] = "", object["documentId"] = ""), null != _0xb85753["commentThreadId"] && _0xb85753["hasOwnProperty"]("commentThreadId") && (object["commentThreadId"] = _0xb85753["commentThreadId"]), null != _0xb85753["documentId"] && _0xb85753["hasOwnProperty"]("documentId") && (object["documentId"] = _0xb85753["documentId"]), object;
    }, CommentsV2GetCommentThreadMessage["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, CommentsV2GetCommentThreadMessage["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/CommentsV2GetCommentThreadMessage";
    }, CommentsV2GetCommentThreadMessage;
  }(), $root["CommentsV2GetDocumentThreadsMessage"] = function() {
    function CommentsV2GetDocumentThreadsMessage(properties) {
      if (properties) {
        for (var _0x2d3056 = Object["keys"](properties), _0x19f08d = 0; _0x19f08d < _0x2d3056["length"]; ++_0x19f08d) null != properties[_0x2d3056[_0x19f08d]] && (this[_0x2d3056[_0x19f08d]] = properties[_0x2d3056[_0x19f08d]]);
      }
    }
    return CommentsV2GetDocumentThreadsMessage["prototype"]["documentId"] = "", CommentsV2GetDocumentThreadsMessage["create"] = function(properties) {
      return new CommentsV2GetDocumentThreadsMessage(properties);
    }, CommentsV2GetDocumentThreadsMessage["encode"] = function(_0x419ccd, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x419ccd["documentId"] && Object["hasOwnProperty"]["call"](_0x419ccd, "documentId") && writer["uint32"](10)["string"](_0x419ccd["documentId"]), writer;
    }, CommentsV2GetDocumentThreadsMessage["encodeDelimited"] = function(_0xf9229c, writer) {
      return this["encode"](_0xf9229c, writer)["ldelim"]();
    }, CommentsV2GetDocumentThreadsMessage["decode"] = function(_0x3016ce, length2) {
      _0x3016ce instanceof _0x476e3c || (_0x3016ce = _0x476e3c["create"](_0x3016ce));
      for (var _0x2581ea = void 0 === length2 ? _0x3016ce["len"] : _0x3016ce["pos"] + length2, _0x18d870 = new $root["CommentsV2GetDocumentThreadsMessage"](); _0x3016ce["pos"] < _0x2581ea; ) {
        var tag = _0x3016ce["uint32"]();
        if (tag >>> 3 == 1) _0x18d870["documentId"] = _0x3016ce["string"]();
        else _0x3016ce["skipType"](7 & tag);
      }
      return _0x18d870;
    }, CommentsV2GetDocumentThreadsMessage["decodeDelimited"] = function(_0x9cd640) {
      return _0x9cd640 instanceof _0x476e3c || (_0x9cd640 = new _0x476e3c(_0x9cd640)), this["decode"](_0x9cd640, _0x9cd640["uint32"]());
    }, CommentsV2GetDocumentThreadsMessage["verify"] = function(_0x2f9df9) {
      return "object" != typeof _0x2f9df9 || null === _0x2f9df9 ? "object expected" : null != _0x2f9df9["documentId"] && _0x2f9df9["hasOwnProperty"]("documentId") && !$util["isString"](_0x2f9df9["documentId"]) ? "documentId: string expected" : null;
    }, CommentsV2GetDocumentThreadsMessage["fromObject"] = function(object) {
      if (object instanceof $root["CommentsV2GetDocumentThreadsMessage"]) return object;
      var _0x49379c = new $root["CommentsV2GetDocumentThreadsMessage"]();
      return null != object["documentId"] && (_0x49379c["documentId"] = String(object["documentId"])), _0x49379c;
    }, CommentsV2GetDocumentThreadsMessage["toObject"] = function(_0x5c6431, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["documentId"] = ""), null != _0x5c6431["documentId"] && _0x5c6431["hasOwnProperty"]("documentId") && (object["documentId"] = _0x5c6431["documentId"]), object;
    }, CommentsV2GetDocumentThreadsMessage["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, CommentsV2GetDocumentThreadsMessage["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/CommentsV2GetDocumentThreadsMessage";
    }, CommentsV2GetDocumentThreadsMessage;
  }(), $root["CommentsV2RemoveCommentMessage"] = function() {
    function CommentsV2RemoveCommentMessage(properties) {
      if (properties) {
        for (var _0x52d6a8 = Object["keys"](properties), _0xe2936c = 0; _0xe2936c < _0x52d6a8["length"]; ++_0xe2936c) null != properties[_0x52d6a8[_0xe2936c]] && (this[_0x52d6a8[_0xe2936c]] = properties[_0x52d6a8[_0xe2936c]]);
      }
    }
    return CommentsV2RemoveCommentMessage["prototype"]["commentThreadId"] = "", CommentsV2RemoveCommentMessage["prototype"]["commentId"] = "", CommentsV2RemoveCommentMessage["prototype"]["documentId"] = "", CommentsV2RemoveCommentMessage["create"] = function(properties) {
      return new CommentsV2RemoveCommentMessage(properties);
    }, CommentsV2RemoveCommentMessage["encode"] = function(_0x1457a5, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x1457a5["commentThreadId"] && Object["hasOwnProperty"]["call"](_0x1457a5, "commentThreadId") && writer["uint32"](10)["string"](_0x1457a5["commentThreadId"]), null != _0x1457a5["commentId"] && Object["hasOwnProperty"]["call"](_0x1457a5, "commentId") && writer["uint32"](18)["string"](_0x1457a5["commentId"]), null != _0x1457a5["documentId"] && Object["hasOwnProperty"]["call"](_0x1457a5, "documentId") && writer["uint32"](26)["string"](_0x1457a5["documentId"]), writer;
    }, CommentsV2RemoveCommentMessage["encodeDelimited"] = function(_0x1bfc58, writer) {
      return this["encode"](_0x1bfc58, writer)["ldelim"]();
    }, CommentsV2RemoveCommentMessage["decode"] = function(_0x12e59a, length2) {
      _0x12e59a instanceof _0x476e3c || (_0x12e59a = _0x476e3c["create"](_0x12e59a));
      for (var _0x184e2e = void 0 === length2 ? _0x12e59a["len"] : _0x12e59a["pos"] + length2, _0xce97c2 = new $root["CommentsV2RemoveCommentMessage"](); _0x12e59a["pos"] < _0x184e2e; ) {
        var tag = _0x12e59a["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0xce97c2["commentThreadId"] = _0x12e59a["string"]();
            break;
          case 2:
            _0xce97c2["commentId"] = _0x12e59a["string"]();
            break;
          case 3:
            _0xce97c2["documentId"] = _0x12e59a["string"]();
            break;
          default:
            _0x12e59a["skipType"](7 & tag);
        }
      }
      return _0xce97c2;
    }, CommentsV2RemoveCommentMessage["decodeDelimited"] = function(_0x5618a7) {
      return _0x5618a7 instanceof _0x476e3c || (_0x5618a7 = new _0x476e3c(_0x5618a7)), this["decode"](_0x5618a7, _0x5618a7["uint32"]());
    }, CommentsV2RemoveCommentMessage["verify"] = function(_0x274576) {
      return "object" != typeof _0x274576 || null === _0x274576 ? "object expected" : null != _0x274576["commentThreadId"] && _0x274576["hasOwnProperty"]("commentThreadId") && !$util["isString"](_0x274576["commentThreadId"]) ? "commentThreadId: string expected" : null != _0x274576["commentId"] && _0x274576["hasOwnProperty"]("commentId") && !$util["isString"](_0x274576["commentId"]) ? "commentId: string expected" : null != _0x274576["documentId"] && _0x274576["hasOwnProperty"]("documentId") && !$util["isString"](_0x274576["documentId"]) ? "documentId: string expected" : null;
    }, CommentsV2RemoveCommentMessage["fromObject"] = function(object) {
      if (object instanceof $root["CommentsV2RemoveCommentMessage"]) return object;
      var _0x943ac5 = new $root["CommentsV2RemoveCommentMessage"]();
      return null != object["commentThreadId"] && (_0x943ac5["commentThreadId"] = String(object["commentThreadId"])), null != object["commentId"] && (_0x943ac5["commentId"] = String(object["commentId"])), null != object["documentId"] && (_0x943ac5["documentId"] = String(object["documentId"])), _0x943ac5;
    }, CommentsV2RemoveCommentMessage["toObject"] = function(_0x5c329f, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["commentThreadId"] = "", object["commentId"] = "", object["documentId"] = ""), null != _0x5c329f["commentThreadId"] && _0x5c329f["hasOwnProperty"]("commentThreadId") && (object["commentThreadId"] = _0x5c329f["commentThreadId"]), null != _0x5c329f["commentId"] && _0x5c329f["hasOwnProperty"]("commentId") && (object["commentId"] = _0x5c329f["commentId"]), null != _0x5c329f["documentId"] && _0x5c329f["hasOwnProperty"]("documentId") && (object["documentId"] = _0x5c329f["documentId"]), object;
    }, CommentsV2RemoveCommentMessage["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, CommentsV2RemoveCommentMessage["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/CommentsV2RemoveCommentMessage";
    }, CommentsV2RemoveCommentMessage;
  }(), $root["CommentsV2RemoveCommentThreadMessage"] = function() {
    function CommentsV2RemoveCommentThreadMessage(properties) {
      if (properties) {
        for (var _0x2b7485 = Object["keys"](properties), _0x23b632 = 0; _0x23b632 < _0x2b7485["length"]; ++_0x23b632) null != properties[_0x2b7485[_0x23b632]] && (this[_0x2b7485[_0x23b632]] = properties[_0x2b7485[_0x23b632]]);
      }
    }
    return CommentsV2RemoveCommentThreadMessage["prototype"]["commentThreadId"] = "", CommentsV2RemoveCommentThreadMessage["prototype"]["documentId"] = "", CommentsV2RemoveCommentThreadMessage["create"] = function(properties) {
      return new CommentsV2RemoveCommentThreadMessage(properties);
    }, CommentsV2RemoveCommentThreadMessage["encode"] = function(_0x2bbdbb, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x2bbdbb["commentThreadId"] && Object["hasOwnProperty"]["call"](_0x2bbdbb, "commentThreadId") && writer["uint32"](10)["string"](_0x2bbdbb["commentThreadId"]), null != _0x2bbdbb["documentId"] && Object["hasOwnProperty"]["call"](_0x2bbdbb, "documentId") && writer["uint32"](18)["string"](_0x2bbdbb["documentId"]), writer;
    }, CommentsV2RemoveCommentThreadMessage["encodeDelimited"] = function(_0x1dfaf4, writer) {
      return this["encode"](_0x1dfaf4, writer)["ldelim"]();
    }, CommentsV2RemoveCommentThreadMessage["decode"] = function(_0x4e258a, length2) {
      _0x4e258a instanceof _0x476e3c || (_0x4e258a = _0x476e3c["create"](_0x4e258a));
      for (var _0x15ce5d = void 0 === length2 ? _0x4e258a["len"] : _0x4e258a["pos"] + length2, _0x2c04b9 = new $root["CommentsV2RemoveCommentThreadMessage"](); _0x4e258a["pos"] < _0x15ce5d; ) {
        var tag = _0x4e258a["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x2c04b9["commentThreadId"] = _0x4e258a["string"]();
            break;
          case 2:
            _0x2c04b9["documentId"] = _0x4e258a["string"]();
            break;
          default:
            _0x4e258a["skipType"](7 & tag);
        }
      }
      return _0x2c04b9;
    }, CommentsV2RemoveCommentThreadMessage["decodeDelimited"] = function(_0x27c529) {
      return _0x27c529 instanceof _0x476e3c || (_0x27c529 = new _0x476e3c(_0x27c529)), this["decode"](_0x27c529, _0x27c529["uint32"]());
    }, CommentsV2RemoveCommentThreadMessage["verify"] = function(_0x2e5189) {
      return "object" != typeof _0x2e5189 || null === _0x2e5189 ? "object expected" : null != _0x2e5189["commentThreadId"] && _0x2e5189["hasOwnProperty"]("commentThreadId") && !$util["isString"](_0x2e5189["commentThreadId"]) ? "commentThreadId: string expected" : null != _0x2e5189["documentId"] && _0x2e5189["hasOwnProperty"]("documentId") && !$util["isString"](_0x2e5189["documentId"]) ? "documentId: string expected" : null;
    }, CommentsV2RemoveCommentThreadMessage["fromObject"] = function(object) {
      if (object instanceof $root["CommentsV2RemoveCommentThreadMessage"]) return object;
      var _0x1436a6 = new $root["CommentsV2RemoveCommentThreadMessage"]();
      return null != object["commentThreadId"] && (_0x1436a6["commentThreadId"] = String(object["commentThreadId"])), null != object["documentId"] && (_0x1436a6["documentId"] = String(object["documentId"])), _0x1436a6;
    }, CommentsV2RemoveCommentThreadMessage["toObject"] = function(_0x1a0ea4, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["commentThreadId"] = "", object["documentId"] = ""), null != _0x1a0ea4["commentThreadId"] && _0x1a0ea4["hasOwnProperty"]("commentThreadId") && (object["commentThreadId"] = _0x1a0ea4["commentThreadId"]), null != _0x1a0ea4["documentId"] && _0x1a0ea4["hasOwnProperty"]("documentId") && (object["documentId"] = _0x1a0ea4["documentId"]), object;
    }, CommentsV2RemoveCommentThreadMessage["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, CommentsV2RemoveCommentThreadMessage["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/CommentsV2RemoveCommentThreadMessage";
    }, CommentsV2RemoveCommentThreadMessage;
  }(), $root["CommentsV2UpdateCommentMessage"] = function() {
    function CommentsV2UpdateCommentMessage(properties) {
      if (properties) {
        for (var _0x24a41a = Object["keys"](properties), _0x2d4e92 = 0; _0x2d4e92 < _0x24a41a["length"]; ++_0x2d4e92) null != properties[_0x24a41a[_0x2d4e92]] && (this[_0x24a41a[_0x2d4e92]] = properties[_0x24a41a[_0x2d4e92]]);
      }
    }
    return CommentsV2UpdateCommentMessage["prototype"]["commentThreadId"] = "", CommentsV2UpdateCommentMessage["prototype"]["commentId"] = "", CommentsV2UpdateCommentMessage["prototype"]["content"] = "", CommentsV2UpdateCommentMessage["prototype"]["documentId"] = "", CommentsV2UpdateCommentMessage["prototype"]["attributes"] = "", CommentsV2UpdateCommentMessage["prototype"]["isAttributesUpdated"] = false, CommentsV2UpdateCommentMessage["prototype"]["commentThread"] = null, CommentsV2UpdateCommentMessage["create"] = function(properties) {
      return new CommentsV2UpdateCommentMessage(properties);
    }, CommentsV2UpdateCommentMessage["encode"] = function(_0x2e3879, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x2e3879["commentThreadId"] && Object["hasOwnProperty"]["call"](_0x2e3879, "commentThreadId") && writer["uint32"](10)["string"](_0x2e3879["commentThreadId"]), null != _0x2e3879["commentId"] && Object["hasOwnProperty"]["call"](_0x2e3879, "commentId") && writer["uint32"](18)["string"](_0x2e3879["commentId"]), null != _0x2e3879["content"] && Object["hasOwnProperty"]["call"](_0x2e3879, "content") && writer["uint32"](26)["string"](_0x2e3879["content"]), null != _0x2e3879["documentId"] && Object["hasOwnProperty"]["call"](_0x2e3879, "documentId") && writer["uint32"](34)["string"](_0x2e3879["documentId"]), null != _0x2e3879["attributes"] && Object["hasOwnProperty"]["call"](_0x2e3879, "attributes") && writer["uint32"](42)["string"](_0x2e3879["attributes"]), null != _0x2e3879["isAttributesUpdated"] && Object["hasOwnProperty"]["call"](_0x2e3879, "isAttributesUpdated") && writer["uint32"](48)["bool"](_0x2e3879["isAttributesUpdated"]), null != _0x2e3879["commentThread"] && Object["hasOwnProperty"]["call"](_0x2e3879, "commentThread") && $root["CommentsThreadDescriptor"]["encode"](_0x2e3879["commentThread"], writer["uint32"](58)["fork"]())["ldelim"](), writer;
    }, CommentsV2UpdateCommentMessage["encodeDelimited"] = function(_0x14a408, writer) {
      return this["encode"](_0x14a408, writer)["ldelim"]();
    }, CommentsV2UpdateCommentMessage["decode"] = function(_0x5afbee, length2) {
      _0x5afbee instanceof _0x476e3c || (_0x5afbee = _0x476e3c["create"](_0x5afbee));
      for (var _0x2f6e8e = void 0 === length2 ? _0x5afbee["len"] : _0x5afbee["pos"] + length2, _0x1d33cb = new $root["CommentsV2UpdateCommentMessage"](); _0x5afbee["pos"] < _0x2f6e8e; ) {
        var tag = _0x5afbee["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x1d33cb["commentThreadId"] = _0x5afbee["string"]();
            break;
          case 2:
            _0x1d33cb["commentId"] = _0x5afbee["string"]();
            break;
          case 3:
            _0x1d33cb["content"] = _0x5afbee["string"]();
            break;
          case 4:
            _0x1d33cb["documentId"] = _0x5afbee["string"]();
            break;
          case 5:
            _0x1d33cb["attributes"] = _0x5afbee["string"]();
            break;
          case 6:
            _0x1d33cb["isAttributesUpdated"] = _0x5afbee["bool"]();
            break;
          case 7:
            _0x1d33cb["commentThread"] = $root["CommentsThreadDescriptor"]["decode"](_0x5afbee, _0x5afbee["uint32"]());
            break;
          default:
            _0x5afbee["skipType"](7 & tag);
        }
      }
      return _0x1d33cb;
    }, CommentsV2UpdateCommentMessage["decodeDelimited"] = function(_0x54c35f) {
      return _0x54c35f instanceof _0x476e3c || (_0x54c35f = new _0x476e3c(_0x54c35f)), this["decode"](_0x54c35f, _0x54c35f["uint32"]());
    }, CommentsV2UpdateCommentMessage["verify"] = function(_0x2d71ac) {
      if ("object" != typeof _0x2d71ac || null === _0x2d71ac) return "object expected";
      if (null != _0x2d71ac["commentThreadId"] && _0x2d71ac["hasOwnProperty"]("commentThreadId") && !$util["isString"](_0x2d71ac["commentThreadId"])) return "commentThreadId: string expected";
      if (null != _0x2d71ac["commentId"] && _0x2d71ac["hasOwnProperty"]("commentId") && !$util["isString"](_0x2d71ac["commentId"])) return "commentId: string expected";
      if (null != _0x2d71ac["content"] && _0x2d71ac["hasOwnProperty"]("content") && !$util["isString"](_0x2d71ac["content"])) return "content: string expected";
      if (null != _0x2d71ac["documentId"] && _0x2d71ac["hasOwnProperty"]("documentId") && !$util["isString"](_0x2d71ac["documentId"])) return "documentId: string expected";
      if (null != _0x2d71ac["attributes"] && _0x2d71ac["hasOwnProperty"]("attributes") && !$util["isString"](_0x2d71ac["attributes"])) return "attributes: string expected";
      if (null != _0x2d71ac["isAttributesUpdated"] && _0x2d71ac["hasOwnProperty"]("isAttributesUpdated") && "boolean" != typeof _0x2d71ac["isAttributesUpdated"]) return "isAttributesUpdated: boolean expected";
      if (null != _0x2d71ac["commentThread"] && _0x2d71ac["hasOwnProperty"]("commentThread")) {
        var _0x14db33 = $root["CommentsThreadDescriptor"]["verify"](_0x2d71ac["commentThread"]);
        if (_0x14db33) return "commentThread." + _0x14db33;
      }
      return null;
    }, CommentsV2UpdateCommentMessage["fromObject"] = function(object) {
      if (object instanceof $root["CommentsV2UpdateCommentMessage"]) return object;
      var _0x4ad91d = new $root["CommentsV2UpdateCommentMessage"]();
      if (null != object["commentThreadId"] && (_0x4ad91d["commentThreadId"] = String(object["commentThreadId"])), null != object["commentId"] && (_0x4ad91d["commentId"] = String(object["commentId"])), null != object["content"] && (_0x4ad91d["content"] = String(object["content"])), null != object["documentId"] && (_0x4ad91d["documentId"] = String(object["documentId"])), null != object["attributes"] && (_0x4ad91d["attributes"] = String(object["attributes"])), null != object["isAttributesUpdated"] && (_0x4ad91d["isAttributesUpdated"] = Boolean(object["isAttributesUpdated"])), null != object["commentThread"]) {
        if ("object" != typeof object["commentThread"]) throw TypeError(".CommentsV2UpdateCommentMessage.commentThread: object expected");
        _0x4ad91d["commentThread"] = $root["CommentsThreadDescriptor"]["fromObject"](object["commentThread"]);
      }
      return _0x4ad91d;
    }, CommentsV2UpdateCommentMessage["toObject"] = function(_0x1a9f0f, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["commentThreadId"] = "", object["commentId"] = "", object["content"] = "", object["documentId"] = "", object["attributes"] = "", object["isAttributesUpdated"] = false, object["commentThread"] = null), null != _0x1a9f0f["commentThreadId"] && _0x1a9f0f["hasOwnProperty"]("commentThreadId") && (object["commentThreadId"] = _0x1a9f0f["commentThreadId"]), null != _0x1a9f0f["commentId"] && _0x1a9f0f["hasOwnProperty"]("commentId") && (object["commentId"] = _0x1a9f0f["commentId"]), null != _0x1a9f0f["content"] && _0x1a9f0f["hasOwnProperty"]("content") && (object["content"] = _0x1a9f0f["content"]), null != _0x1a9f0f["documentId"] && _0x1a9f0f["hasOwnProperty"]("documentId") && (object["documentId"] = _0x1a9f0f["documentId"]), null != _0x1a9f0f["attributes"] && _0x1a9f0f["hasOwnProperty"]("attributes") && (object["attributes"] = _0x1a9f0f["attributes"]), null != _0x1a9f0f["isAttributesUpdated"] && _0x1a9f0f["hasOwnProperty"]("isAttributesUpdated") && (object["isAttributesUpdated"] = _0x1a9f0f["isAttributesUpdated"]), null != _0x1a9f0f["commentThread"] && _0x1a9f0f["hasOwnProperty"]("commentThread") && (object["commentThread"] = $root["CommentsThreadDescriptor"]["toObject"](_0x1a9f0f["commentThread"], options)), object;
    }, CommentsV2UpdateCommentMessage["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, CommentsV2UpdateCommentMessage["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/CommentsV2UpdateCommentMessage";
    }, CommentsV2UpdateCommentMessage;
  }(), $root["CommentsV2AddCommentResponse"] = function() {
    function CommentsV2AddCommentResponse(properties) {
      if (properties) {
        for (var _0x2d4b03 = Object["keys"](properties), _0x7b552e = 0; _0x7b552e < _0x2d4b03["length"]; ++_0x7b552e) null != properties[_0x2d4b03[_0x7b552e]] && (this[_0x2d4b03[_0x7b552e]] = properties[_0x2d4b03[_0x7b552e]]);
      }
    }
    return CommentsV2AddCommentResponse["prototype"]["commentThreadId"] = "", CommentsV2AddCommentResponse["prototype"]["commentId"] = "", CommentsV2AddCommentResponse["prototype"]["createdAt"] = "", CommentsV2AddCommentResponse["create"] = function(properties) {
      return new CommentsV2AddCommentResponse(properties);
    }, CommentsV2AddCommentResponse["encode"] = function(_0x179583, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x179583["commentThreadId"] && Object["hasOwnProperty"]["call"](_0x179583, "commentThreadId") && writer["uint32"](10)["string"](_0x179583["commentThreadId"]), null != _0x179583["commentId"] && Object["hasOwnProperty"]["call"](_0x179583, "commentId") && writer["uint32"](18)["string"](_0x179583["commentId"]), null != _0x179583["createdAt"] && Object["hasOwnProperty"]["call"](_0x179583, "createdAt") && writer["uint32"](26)["string"](_0x179583["createdAt"]), writer;
    }, CommentsV2AddCommentResponse["encodeDelimited"] = function(_0x2f3d77, writer) {
      return this["encode"](_0x2f3d77, writer)["ldelim"]();
    }, CommentsV2AddCommentResponse["decode"] = function(_0x16087, length2) {
      _0x16087 instanceof _0x476e3c || (_0x16087 = _0x476e3c["create"](_0x16087));
      for (var _0x1c865c = void 0 === length2 ? _0x16087["len"] : _0x16087["pos"] + length2, _0x2cf7b3 = new $root["CommentsV2AddCommentResponse"](); _0x16087["pos"] < _0x1c865c; ) {
        var tag = _0x16087["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x2cf7b3["commentThreadId"] = _0x16087["string"]();
            break;
          case 2:
            _0x2cf7b3["commentId"] = _0x16087["string"]();
            break;
          case 3:
            _0x2cf7b3["createdAt"] = _0x16087["string"]();
            break;
          default:
            _0x16087["skipType"](7 & tag);
        }
      }
      return _0x2cf7b3;
    }, CommentsV2AddCommentResponse["decodeDelimited"] = function(_0x319cf6) {
      return _0x319cf6 instanceof _0x476e3c || (_0x319cf6 = new _0x476e3c(_0x319cf6)), this["decode"](_0x319cf6, _0x319cf6["uint32"]());
    }, CommentsV2AddCommentResponse["verify"] = function(_0x553cbc) {
      return "object" != typeof _0x553cbc || null === _0x553cbc ? "object expected" : null != _0x553cbc["commentThreadId"] && _0x553cbc["hasOwnProperty"]("commentThreadId") && !$util["isString"](_0x553cbc["commentThreadId"]) ? "commentThreadId: string expected" : null != _0x553cbc["commentId"] && _0x553cbc["hasOwnProperty"]("commentId") && !$util["isString"](_0x553cbc["commentId"]) ? "commentId: string expected" : null != _0x553cbc["createdAt"] && _0x553cbc["hasOwnProperty"]("createdAt") && !$util["isString"](_0x553cbc["createdAt"]) ? "createdAt: string expected" : null;
    }, CommentsV2AddCommentResponse["fromObject"] = function(object) {
      if (object instanceof $root["CommentsV2AddCommentResponse"]) return object;
      var _0x2731bc = new $root["CommentsV2AddCommentResponse"]();
      return null != object["commentThreadId"] && (_0x2731bc["commentThreadId"] = String(object["commentThreadId"])), null != object["commentId"] && (_0x2731bc["commentId"] = String(object["commentId"])), null != object["createdAt"] && (_0x2731bc["createdAt"] = String(object["createdAt"])), _0x2731bc;
    }, CommentsV2AddCommentResponse["toObject"] = function(_0x726257, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["commentThreadId"] = "", object["commentId"] = "", object["createdAt"] = ""), null != _0x726257["commentThreadId"] && _0x726257["hasOwnProperty"]("commentThreadId") && (object["commentThreadId"] = _0x726257["commentThreadId"]), null != _0x726257["commentId"] && _0x726257["hasOwnProperty"]("commentId") && (object["commentId"] = _0x726257["commentId"]), null != _0x726257["createdAt"] && _0x726257["hasOwnProperty"]("createdAt") && (object["createdAt"] = _0x726257["createdAt"]), object;
    }, CommentsV2AddCommentResponse["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, CommentsV2AddCommentResponse["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/CommentsV2AddCommentResponse";
    }, CommentsV2AddCommentResponse;
  }(), $root["CommentsV2AddCommentThreadResponse"] = function() {
    function CommentsV2AddCommentThreadResponse(properties) {
      if (this["comments"] = [], properties) {
        for (var _0x4cb9ae = Object["keys"](properties), _0x397f31 = 0; _0x397f31 < _0x4cb9ae["length"]; ++_0x397f31) null != properties[_0x4cb9ae[_0x397f31]] && (this[_0x4cb9ae[_0x397f31]] = properties[_0x4cb9ae[_0x397f31]]);
      }
    }
    return CommentsV2AddCommentThreadResponse["prototype"]["commentThreadId"] = "", CommentsV2AddCommentThreadResponse["prototype"]["createdAt"] = "", CommentsV2AddCommentThreadResponse["prototype"]["comments"] = $util["emptyArray"], CommentsV2AddCommentThreadResponse["create"] = function(properties) {
      return new CommentsV2AddCommentThreadResponse(properties);
    }, CommentsV2AddCommentThreadResponse["encode"] = function(_0x33d7c0, writer) {
      if (writer || (writer = $Writer["create"]()), null != _0x33d7c0["commentThreadId"] && Object["hasOwnProperty"]["call"](_0x33d7c0, "commentThreadId") && writer["uint32"](10)["string"](_0x33d7c0["commentThreadId"]), null != _0x33d7c0["createdAt"] && Object["hasOwnProperty"]["call"](_0x33d7c0, "createdAt") && writer["uint32"](18)["string"](_0x33d7c0["createdAt"]), null != _0x33d7c0["comments"] && _0x33d7c0["comments"]["length"]) {
        for (var _0x63140a = 0; _0x63140a < _0x33d7c0["comments"]["length"]; ++_0x63140a) $root["CommentThreadAddedCommentDescriptor"]["encode"](_0x33d7c0["comments"][_0x63140a], writer["uint32"](26)["fork"]())["ldelim"]();
      }
      return writer;
    }, CommentsV2AddCommentThreadResponse["encodeDelimited"] = function(_0x32b7b7, writer) {
      return this["encode"](_0x32b7b7, writer)["ldelim"]();
    }, CommentsV2AddCommentThreadResponse["decode"] = function(_0xa5aa3e, length2) {
      _0xa5aa3e instanceof _0x476e3c || (_0xa5aa3e = _0x476e3c["create"](_0xa5aa3e));
      for (var _0x3a733b = void 0 === length2 ? _0xa5aa3e["len"] : _0xa5aa3e["pos"] + length2, _0x2d0032 = new $root["CommentsV2AddCommentThreadResponse"](); _0xa5aa3e["pos"] < _0x3a733b; ) {
        var tag = _0xa5aa3e["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x2d0032["commentThreadId"] = _0xa5aa3e["string"]();
            break;
          case 2:
            _0x2d0032["createdAt"] = _0xa5aa3e["string"]();
            break;
          case 3:
            _0x2d0032["comments"] && _0x2d0032["comments"]["length"] || (_0x2d0032["comments"] = []), _0x2d0032["comments"]["push"]($root["CommentThreadAddedCommentDescriptor"]["decode"](_0xa5aa3e, _0xa5aa3e["uint32"]()));
            break;
          default:
            _0xa5aa3e["skipType"](7 & tag);
        }
      }
      return _0x2d0032;
    }, CommentsV2AddCommentThreadResponse["decodeDelimited"] = function(_0x510624) {
      return _0x510624 instanceof _0x476e3c || (_0x510624 = new _0x476e3c(_0x510624)), this["decode"](_0x510624, _0x510624["uint32"]());
    }, CommentsV2AddCommentThreadResponse["verify"] = function(_0x4c666f) {
      if ("object" != typeof _0x4c666f || null === _0x4c666f) return "object expected";
      if (null != _0x4c666f["commentThreadId"] && _0x4c666f["hasOwnProperty"]("commentThreadId") && !$util["isString"](_0x4c666f["commentThreadId"])) return "commentThreadId: string expected";
      if (null != _0x4c666f["createdAt"] && _0x4c666f["hasOwnProperty"]("createdAt") && !$util["isString"](_0x4c666f["createdAt"])) return "createdAt: string expected";
      if (null != _0x4c666f["comments"] && _0x4c666f["hasOwnProperty"]("comments")) {
        if (!Array["isArray"](_0x4c666f["comments"])) return "comments: array expected";
        for (var _0x124717 = 0; _0x124717 < _0x4c666f["comments"]["length"]; ++_0x124717) {
          var _0x5c7cd7 = $root["CommentThreadAddedCommentDescriptor"]["verify"](_0x4c666f["comments"][_0x124717]);
          if (_0x5c7cd7) return "comments." + _0x5c7cd7;
        }
      }
      return null;
    }, CommentsV2AddCommentThreadResponse["fromObject"] = function(object) {
      if (object instanceof $root["CommentsV2AddCommentThreadResponse"]) return object;
      var _0x5dbb3e = new $root["CommentsV2AddCommentThreadResponse"]();
      if (null != object["commentThreadId"] && (_0x5dbb3e["commentThreadId"] = String(object["commentThreadId"])), null != object["createdAt"] && (_0x5dbb3e["createdAt"] = String(object["createdAt"])), object["comments"]) {
        if (!Array["isArray"](object["comments"])) throw TypeError(".CommentsV2AddCommentThreadResponse.comments: array expected");
        _0x5dbb3e["comments"] = [];
        for (var _0x23daa0 = 0; _0x23daa0 < object["comments"]["length"]; ++_0x23daa0) {
          if ("object" != typeof object["comments"][_0x23daa0]) throw TypeError(".CommentsV2AddCommentThreadResponse.comments: object expected");
          _0x5dbb3e["comments"][_0x23daa0] = $root["CommentThreadAddedCommentDescriptor"]["fromObject"](object["comments"][_0x23daa0]);
        }
      }
      return _0x5dbb3e;
    }, CommentsV2AddCommentThreadResponse["toObject"] = function(_0xa6ced0, options) {
      options || (options = {});
      var object = {};
      if ((options["arrays"] || options["defaults"]) && (object["comments"] = []), options["defaults"] && (object["commentThreadId"] = "", object["createdAt"] = ""), null != _0xa6ced0["commentThreadId"] && _0xa6ced0["hasOwnProperty"]("commentThreadId") && (object["commentThreadId"] = _0xa6ced0["commentThreadId"]), null != _0xa6ced0["createdAt"] && _0xa6ced0["hasOwnProperty"]("createdAt") && (object["createdAt"] = _0xa6ced0["createdAt"]), _0xa6ced0["comments"] && _0xa6ced0["comments"]["length"]) {
        object["comments"] = [];
        for (var _0x3e58f1 = 0; _0x3e58f1 < _0xa6ced0["comments"]["length"]; ++_0x3e58f1) object["comments"][_0x3e58f1] = $root["CommentThreadAddedCommentDescriptor"]["toObject"](_0xa6ced0["comments"][_0x3e58f1], options);
      }
      return object;
    }, CommentsV2AddCommentThreadResponse["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, CommentsV2AddCommentThreadResponse["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/CommentsV2AddCommentThreadResponse";
    }, CommentsV2AddCommentThreadResponse;
  }(), $root["CommentsV2ResolveCommentThreadResponse"] = function() {
    function CommentsV2ResolveCommentThreadResponse(properties) {
      if (properties) {
        for (var _0x110348 = Object["keys"](properties), _0xd3df7 = 0; _0xd3df7 < _0x110348["length"]; ++_0xd3df7) null != properties[_0x110348[_0xd3df7]] && (this[_0x110348[_0xd3df7]] = properties[_0x110348[_0xd3df7]]);
      }
    }
    return CommentsV2ResolveCommentThreadResponse["prototype"]["commentThreadId"] = "", CommentsV2ResolveCommentThreadResponse["prototype"]["documentId"] = "", CommentsV2ResolveCommentThreadResponse["prototype"]["resolvedAt"] = "", CommentsV2ResolveCommentThreadResponse["prototype"]["resolvedBy"] = "", CommentsV2ResolveCommentThreadResponse["create"] = function(properties) {
      return new CommentsV2ResolveCommentThreadResponse(properties);
    }, CommentsV2ResolveCommentThreadResponse["encode"] = function(_0x3679de, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x3679de["commentThreadId"] && Object["hasOwnProperty"]["call"](_0x3679de, "commentThreadId") && writer["uint32"](10)["string"](_0x3679de["commentThreadId"]), null != _0x3679de["documentId"] && Object["hasOwnProperty"]["call"](_0x3679de, "documentId") && writer["uint32"](18)["string"](_0x3679de["documentId"]), null != _0x3679de["resolvedAt"] && Object["hasOwnProperty"]["call"](_0x3679de, "resolvedAt") && writer["uint32"](26)["string"](_0x3679de["resolvedAt"]), null != _0x3679de["resolvedBy"] && Object["hasOwnProperty"]["call"](_0x3679de, "resolvedBy") && writer["uint32"](34)["string"](_0x3679de["resolvedBy"]), writer;
    }, CommentsV2ResolveCommentThreadResponse["encodeDelimited"] = function(_0x4ca8f3, writer) {
      return this["encode"](_0x4ca8f3, writer)["ldelim"]();
    }, CommentsV2ResolveCommentThreadResponse["decode"] = function(_0x4fcbff, length2) {
      _0x4fcbff instanceof _0x476e3c || (_0x4fcbff = _0x476e3c["create"](_0x4fcbff));
      for (var _0x65f774 = void 0 === length2 ? _0x4fcbff["len"] : _0x4fcbff["pos"] + length2, _0x331814 = new $root["CommentsV2ResolveCommentThreadResponse"](); _0x4fcbff["pos"] < _0x65f774; ) {
        var tag = _0x4fcbff["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x331814["commentThreadId"] = _0x4fcbff["string"]();
            break;
          case 2:
            _0x331814["documentId"] = _0x4fcbff["string"]();
            break;
          case 3:
            _0x331814["resolvedAt"] = _0x4fcbff["string"]();
            break;
          case 4:
            _0x331814["resolvedBy"] = _0x4fcbff["string"]();
            break;
          default:
            _0x4fcbff["skipType"](7 & tag);
        }
      }
      return _0x331814;
    }, CommentsV2ResolveCommentThreadResponse["decodeDelimited"] = function(_0x2471a0) {
      return _0x2471a0 instanceof _0x476e3c || (_0x2471a0 = new _0x476e3c(_0x2471a0)), this["decode"](_0x2471a0, _0x2471a0["uint32"]());
    }, CommentsV2ResolveCommentThreadResponse["verify"] = function(_0x385ecc) {
      return "object" != typeof _0x385ecc || null === _0x385ecc ? "object expected" : null != _0x385ecc["commentThreadId"] && _0x385ecc["hasOwnProperty"]("commentThreadId") && !$util["isString"](_0x385ecc["commentThreadId"]) ? "commentThreadId: string expected" : null != _0x385ecc["documentId"] && _0x385ecc["hasOwnProperty"]("documentId") && !$util["isString"](_0x385ecc["documentId"]) ? "documentId: string expected" : null != _0x385ecc["resolvedAt"] && _0x385ecc["hasOwnProperty"]("resolvedAt") && !$util["isString"](_0x385ecc["resolvedAt"]) ? "resolvedAt: string expected" : null != _0x385ecc["resolvedBy"] && _0x385ecc["hasOwnProperty"]("resolvedBy") && !$util["isString"](_0x385ecc["resolvedBy"]) ? "resolvedBy: string expected" : null;
    }, CommentsV2ResolveCommentThreadResponse["fromObject"] = function(object) {
      if (object instanceof $root["CommentsV2ResolveCommentThreadResponse"]) return object;
      var _0x5b54b8 = new $root["CommentsV2ResolveCommentThreadResponse"]();
      return null != object["commentThreadId"] && (_0x5b54b8["commentThreadId"] = String(object["commentThreadId"])), null != object["documentId"] && (_0x5b54b8["documentId"] = String(object["documentId"])), null != object["resolvedAt"] && (_0x5b54b8["resolvedAt"] = String(object["resolvedAt"])), null != object["resolvedBy"] && (_0x5b54b8["resolvedBy"] = String(object["resolvedBy"])), _0x5b54b8;
    }, CommentsV2ResolveCommentThreadResponse["toObject"] = function(_0x27787f, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["commentThreadId"] = "", object["documentId"] = "", object["resolvedAt"] = "", object["resolvedBy"] = ""), null != _0x27787f["commentThreadId"] && _0x27787f["hasOwnProperty"]("commentThreadId") && (object["commentThreadId"] = _0x27787f["commentThreadId"]), null != _0x27787f["documentId"] && _0x27787f["hasOwnProperty"]("documentId") && (object["documentId"] = _0x27787f["documentId"]), null != _0x27787f["resolvedAt"] && _0x27787f["hasOwnProperty"]("resolvedAt") && (object["resolvedAt"] = _0x27787f["resolvedAt"]), null != _0x27787f["resolvedBy"] && _0x27787f["hasOwnProperty"]("resolvedBy") && (object["resolvedBy"] = _0x27787f["resolvedBy"]), object;
    }, CommentsV2ResolveCommentThreadResponse["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, CommentsV2ResolveCommentThreadResponse["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/CommentsV2ResolveCommentThreadResponse";
    }, CommentsV2ResolveCommentThreadResponse;
  }(), $root["CommentsV2ConnectResponse"] = function() {
    function CommentsV2ConnectResponse(properties) {
      if (this["threads"] = [], this["threadsV2"] = [], properties) {
        for (var _0x464c55 = Object["keys"](properties), _0x2ee282 = 0; _0x2ee282 < _0x464c55["length"]; ++_0x2ee282) null != properties[_0x464c55[_0x2ee282]] && (this[_0x464c55[_0x2ee282]] = properties[_0x464c55[_0x2ee282]]);
      }
    }
    return CommentsV2ConnectResponse["prototype"]["channel"] = "", CommentsV2ConnectResponse["prototype"]["threads"] = $util["emptyArray"], CommentsV2ConnectResponse["prototype"]["threadsV2"] = $util["emptyArray"], CommentsV2ConnectResponse["create"] = function(properties) {
      return new CommentsV2ConnectResponse(properties);
    }, CommentsV2ConnectResponse["encode"] = function(_0x2b0ade, writer) {
      if (writer || (writer = $Writer["create"]()), null != _0x2b0ade["channel"] && Object["hasOwnProperty"]["call"](_0x2b0ade, "channel") && writer["uint32"](10)["string"](_0x2b0ade["channel"]), null != _0x2b0ade["threads"] && _0x2b0ade["threads"]["length"]) {
        for (var _0x494f51 = 0; _0x494f51 < _0x2b0ade["threads"]["length"]; ++_0x494f51) writer["uint32"](18)["string"](_0x2b0ade["threads"][_0x494f51]);
      }
      if (null != _0x2b0ade["threadsV2"] && _0x2b0ade["threadsV2"]["length"]) {
        for (_0x494f51 = 0; _0x494f51 < _0x2b0ade["threadsV2"]["length"]; ++_0x494f51) $root["CommentsThreadDescriptor"]["encode"](_0x2b0ade["threadsV2"][_0x494f51], writer["uint32"](26)["fork"]())["ldelim"]();
      }
      return writer;
    }, CommentsV2ConnectResponse["encodeDelimited"] = function(_0x5ebe6b, writer) {
      return this["encode"](_0x5ebe6b, writer)["ldelim"]();
    }, CommentsV2ConnectResponse["decode"] = function(_0x302a54, length2) {
      _0x302a54 instanceof _0x476e3c || (_0x302a54 = _0x476e3c["create"](_0x302a54));
      for (var _0x945144 = void 0 === length2 ? _0x302a54["len"] : _0x302a54["pos"] + length2, _0x390dcb = new $root["CommentsV2ConnectResponse"](); _0x302a54["pos"] < _0x945144; ) {
        var tag = _0x302a54["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x390dcb["channel"] = _0x302a54["string"]();
            break;
          case 2:
            _0x390dcb["threads"] && _0x390dcb["threads"]["length"] || (_0x390dcb["threads"] = []), _0x390dcb["threads"]["push"](_0x302a54["string"]());
            break;
          case 3:
            _0x390dcb["threadsV2"] && _0x390dcb["threadsV2"]["length"] || (_0x390dcb["threadsV2"] = []), _0x390dcb["threadsV2"]["push"]($root["CommentsThreadDescriptor"]["decode"](_0x302a54, _0x302a54["uint32"]()));
            break;
          default:
            _0x302a54["skipType"](7 & tag);
        }
      }
      return _0x390dcb;
    }, CommentsV2ConnectResponse["decodeDelimited"] = function(_0x216f83) {
      return _0x216f83 instanceof _0x476e3c || (_0x216f83 = new _0x476e3c(_0x216f83)), this["decode"](_0x216f83, _0x216f83["uint32"]());
    }, CommentsV2ConnectResponse["verify"] = function(_0x24c118) {
      if ("object" != typeof _0x24c118 || null === _0x24c118) return "object expected";
      if (null != _0x24c118["channel"] && _0x24c118["hasOwnProperty"]("channel") && !$util["isString"](_0x24c118["channel"])) return "channel: string expected";
      if (null != _0x24c118["threads"] && _0x24c118["hasOwnProperty"]("threads")) {
        if (!Array["isArray"](_0x24c118["threads"])) return "threads: array expected";
        for (var _0x4c63d8 = 0; _0x4c63d8 < _0x24c118["threads"]["length"]; ++_0x4c63d8) if (!$util["isString"](_0x24c118["threads"][_0x4c63d8])) return "threads: string[] expected";
      }
      if (null != _0x24c118["threadsV2"] && _0x24c118["hasOwnProperty"]("threadsV2")) {
        if (!Array["isArray"](_0x24c118["threadsV2"])) return "threadsV2: array expected";
        for (_0x4c63d8 = 0; _0x4c63d8 < _0x24c118["threadsV2"]["length"]; ++_0x4c63d8) {
          var _0x58c93b = $root["CommentsThreadDescriptor"]["verify"](_0x24c118["threadsV2"][_0x4c63d8]);
          if (_0x58c93b) return "threadsV2." + _0x58c93b;
        }
      }
      return null;
    }, CommentsV2ConnectResponse["fromObject"] = function(object) {
      if (object instanceof $root["CommentsV2ConnectResponse"]) return object;
      var _0x466243 = new $root["CommentsV2ConnectResponse"]();
      if (null != object["channel"] && (_0x466243["channel"] = String(object["channel"])), object["threads"]) {
        if (!Array["isArray"](object["threads"])) throw TypeError(".CommentsV2ConnectResponse.threads: array expected");
        _0x466243["threads"] = [];
        for (var _0x3f53da = 0; _0x3f53da < object["threads"]["length"]; ++_0x3f53da) _0x466243["threads"][_0x3f53da] = String(object["threads"][_0x3f53da]);
      }
      if (object["threadsV2"]) {
        if (!Array["isArray"](object["threadsV2"])) throw TypeError(".CommentsV2ConnectResponse.threadsV2: array expected");
        _0x466243["threadsV2"] = [];
        for (_0x3f53da = 0; _0x3f53da < object["threadsV2"]["length"]; ++_0x3f53da) {
          if ("object" != typeof object["threadsV2"][_0x3f53da]) throw TypeError(".CommentsV2ConnectResponse.threadsV2: object expected");
          _0x466243["threadsV2"][_0x3f53da] = $root["CommentsThreadDescriptor"]["fromObject"](object["threadsV2"][_0x3f53da]);
        }
      }
      return _0x466243;
    }, CommentsV2ConnectResponse["toObject"] = function(_0x5dcdad, options) {
      options || (options = {});
      var object = {};
      if ((options["arrays"] || options["defaults"]) && (object["threads"] = [], object["threadsV2"] = []), options["defaults"] && (object["channel"] = ""), null != _0x5dcdad["channel"] && _0x5dcdad["hasOwnProperty"]("channel") && (object["channel"] = _0x5dcdad["channel"]), _0x5dcdad["threads"] && _0x5dcdad["threads"]["length"]) {
        object["threads"] = [];
        for (var _0x1ac65b = 0; _0x1ac65b < _0x5dcdad["threads"]["length"]; ++_0x1ac65b) object["threads"][_0x1ac65b] = _0x5dcdad["threads"][_0x1ac65b];
      }
      if (_0x5dcdad["threadsV2"] && _0x5dcdad["threadsV2"]["length"]) {
        object["threadsV2"] = [];
        for (_0x1ac65b = 0; _0x1ac65b < _0x5dcdad["threadsV2"]["length"]; ++_0x1ac65b) object["threadsV2"][_0x1ac65b] = $root["CommentsThreadDescriptor"]["toObject"](_0x5dcdad["threadsV2"][_0x1ac65b], options);
      }
      return object;
    }, CommentsV2ConnectResponse["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, CommentsV2ConnectResponse["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/CommentsV2ConnectResponse";
    }, CommentsV2ConnectResponse;
  }(), $root["CommentsV2GetCommentThreadResponse"] = function() {
    function CommentsV2GetCommentThreadResponse(properties) {
      if (this["comments"] = [], this["commentsV2"] = [], properties) {
        for (var _0x365806 = Object["keys"](properties), _0x21f15e = 0; _0x21f15e < _0x365806["length"]; ++_0x21f15e) null != properties[_0x365806[_0x21f15e]] && (this[_0x365806[_0x21f15e]] = properties[_0x365806[_0x21f15e]]);
      }
    }
    return CommentsV2GetCommentThreadResponse["prototype"]["commentThreadId"] = "", CommentsV2GetCommentThreadResponse["prototype"]["comments"] = $util["emptyArray"], CommentsV2GetCommentThreadResponse["prototype"]["commentsV2"] = $util["emptyArray"], CommentsV2GetCommentThreadResponse["prototype"]["resolvedAt"] = "", CommentsV2GetCommentThreadResponse["prototype"]["resolvedBy"] = "", CommentsV2GetCommentThreadResponse["prototype"]["context"] = "", CommentsV2GetCommentThreadResponse["prototype"]["createdAt"] = "", CommentsV2GetCommentThreadResponse["prototype"]["deletedAt"] = "", CommentsV2GetCommentThreadResponse["prototype"]["attributes"] = "", CommentsV2GetCommentThreadResponse["prototype"]["unlinkedAt"] = "", CommentsV2GetCommentThreadResponse["create"] = function(properties) {
      return new CommentsV2GetCommentThreadResponse(properties);
    }, CommentsV2GetCommentThreadResponse["encode"] = function(_0x564b01, writer) {
      if (writer || (writer = $Writer["create"]()), null != _0x564b01["commentThreadId"] && Object["hasOwnProperty"]["call"](_0x564b01, "commentThreadId") && writer["uint32"](10)["string"](_0x564b01["commentThreadId"]), null != _0x564b01["comments"] && _0x564b01["comments"]["length"]) {
        for (var _0x4d36d1 = 0; _0x4d36d1 < _0x564b01["comments"]["length"]; ++_0x4d36d1) writer["uint32"](18)["string"](_0x564b01["comments"][_0x4d36d1]);
      }
      if (null != _0x564b01["commentsV2"] && _0x564b01["commentsV2"]["length"]) {
        for (_0x4d36d1 = 0; _0x4d36d1 < _0x564b01["commentsV2"]["length"]; ++_0x4d36d1) $root["CommentDescriptor"]["encode"](_0x564b01["commentsV2"][_0x4d36d1], writer["uint32"](26)["fork"]())["ldelim"]();
      }
      return null != _0x564b01["resolvedAt"] && Object["hasOwnProperty"]["call"](_0x564b01, "resolvedAt") && writer["uint32"](34)["string"](_0x564b01["resolvedAt"]), null != _0x564b01["resolvedBy"] && Object["hasOwnProperty"]["call"](_0x564b01, "resolvedBy") && writer["uint32"](42)["string"](_0x564b01["resolvedBy"]), null != _0x564b01["context"] && Object["hasOwnProperty"]["call"](_0x564b01, "context") && writer["uint32"](50)["string"](_0x564b01["context"]), null != _0x564b01["createdAt"] && Object["hasOwnProperty"]["call"](_0x564b01, "createdAt") && writer["uint32"](58)["string"](_0x564b01["createdAt"]), null != _0x564b01["deletedAt"] && Object["hasOwnProperty"]["call"](_0x564b01, "deletedAt") && writer["uint32"](66)["string"](_0x564b01["deletedAt"]), null != _0x564b01["attributes"] && Object["hasOwnProperty"]["call"](_0x564b01, "attributes") && writer["uint32"](74)["string"](_0x564b01["attributes"]), null != _0x564b01["unlinkedAt"] && Object["hasOwnProperty"]["call"](_0x564b01, "unlinkedAt") && writer["uint32"](82)["string"](_0x564b01["unlinkedAt"]), writer;
    }, CommentsV2GetCommentThreadResponse["encodeDelimited"] = function(_0xeabc9, writer) {
      return this["encode"](_0xeabc9, writer)["ldelim"]();
    }, CommentsV2GetCommentThreadResponse["decode"] = function(_0x321522, length2) {
      _0x321522 instanceof _0x476e3c || (_0x321522 = _0x476e3c["create"](_0x321522));
      for (var _0x404a6c = void 0 === length2 ? _0x321522["len"] : _0x321522["pos"] + length2, _0x4f2f7e = new $root["CommentsV2GetCommentThreadResponse"](); _0x321522["pos"] < _0x404a6c; ) {
        var tag = _0x321522["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x4f2f7e["commentThreadId"] = _0x321522["string"]();
            break;
          case 2:
            _0x4f2f7e["comments"] && _0x4f2f7e["comments"]["length"] || (_0x4f2f7e["comments"] = []), _0x4f2f7e["comments"]["push"](_0x321522["string"]());
            break;
          case 3:
            _0x4f2f7e["commentsV2"] && _0x4f2f7e["commentsV2"]["length"] || (_0x4f2f7e["commentsV2"] = []), _0x4f2f7e["commentsV2"]["push"]($root["CommentDescriptor"]["decode"](_0x321522, _0x321522["uint32"]()));
            break;
          case 4:
            _0x4f2f7e["resolvedAt"] = _0x321522["string"]();
            break;
          case 5:
            _0x4f2f7e["resolvedBy"] = _0x321522["string"]();
            break;
          case 6:
            _0x4f2f7e["context"] = _0x321522["string"]();
            break;
          case 7:
            _0x4f2f7e["createdAt"] = _0x321522["string"]();
            break;
          case 8:
            _0x4f2f7e["deletedAt"] = _0x321522["string"]();
            break;
          case 9:
            _0x4f2f7e["attributes"] = _0x321522["string"]();
            break;
          case 10:
            _0x4f2f7e["unlinkedAt"] = _0x321522["string"]();
            break;
          default:
            _0x321522["skipType"](7 & tag);
        }
      }
      return _0x4f2f7e;
    }, CommentsV2GetCommentThreadResponse["decodeDelimited"] = function(_0x4c2413) {
      return _0x4c2413 instanceof _0x476e3c || (_0x4c2413 = new _0x476e3c(_0x4c2413)), this["decode"](_0x4c2413, _0x4c2413["uint32"]());
    }, CommentsV2GetCommentThreadResponse["verify"] = function(_0x3af326) {
      if ("object" != typeof _0x3af326 || null === _0x3af326) return "object expected";
      if (null != _0x3af326["commentThreadId"] && _0x3af326["hasOwnProperty"]("commentThreadId") && !$util["isString"](_0x3af326["commentThreadId"])) return "commentThreadId: string expected";
      if (null != _0x3af326["comments"] && _0x3af326["hasOwnProperty"]("comments")) {
        if (!Array["isArray"](_0x3af326["comments"])) return "comments: array expected";
        for (var _0x143659 = 0; _0x143659 < _0x3af326["comments"]["length"]; ++_0x143659) if (!$util["isString"](_0x3af326["comments"][_0x143659])) return "comments: string[] expected";
      }
      if (null != _0x3af326["commentsV2"] && _0x3af326["hasOwnProperty"]("commentsV2")) {
        if (!Array["isArray"](_0x3af326["commentsV2"])) return "commentsV2: array expected";
        for (_0x143659 = 0; _0x143659 < _0x3af326["commentsV2"]["length"]; ++_0x143659) {
          var _0x58c18a = $root["CommentDescriptor"]["verify"](_0x3af326["commentsV2"][_0x143659]);
          if (_0x58c18a) return "commentsV2." + _0x58c18a;
        }
      }
      return null != _0x3af326["resolvedAt"] && _0x3af326["hasOwnProperty"]("resolvedAt") && !$util["isString"](_0x3af326["resolvedAt"]) ? "resolvedAt: string expected" : null != _0x3af326["resolvedBy"] && _0x3af326["hasOwnProperty"]("resolvedBy") && !$util["isString"](_0x3af326["resolvedBy"]) ? "resolvedBy: string expected" : null != _0x3af326["context"] && _0x3af326["hasOwnProperty"]("context") && !$util["isString"](_0x3af326["context"]) ? "context: string expected" : null != _0x3af326["createdAt"] && _0x3af326["hasOwnProperty"]("createdAt") && !$util["isString"](_0x3af326["createdAt"]) ? "createdAt: string expected" : null != _0x3af326["deletedAt"] && _0x3af326["hasOwnProperty"]("deletedAt") && !$util["isString"](_0x3af326["deletedAt"]) ? "deletedAt: string expected" : null != _0x3af326["attributes"] && _0x3af326["hasOwnProperty"]("attributes") && !$util["isString"](_0x3af326["attributes"]) ? "attributes: string expected" : null != _0x3af326["unlinkedAt"] && _0x3af326["hasOwnProperty"]("unlinkedAt") && !$util["isString"](_0x3af326["unlinkedAt"]) ? "unlinkedAt: string expected" : null;
    }, CommentsV2GetCommentThreadResponse["fromObject"] = function(object) {
      if (object instanceof $root["CommentsV2GetCommentThreadResponse"]) return object;
      var _0x195144 = new $root["CommentsV2GetCommentThreadResponse"]();
      if (null != object["commentThreadId"] && (_0x195144["commentThreadId"] = String(object["commentThreadId"])), object["comments"]) {
        if (!Array["isArray"](object["comments"])) throw TypeError(".CommentsV2GetCommentThreadResponse.comments: array expected");
        _0x195144["comments"] = [];
        for (var _0x28a9c3 = 0; _0x28a9c3 < object["comments"]["length"]; ++_0x28a9c3) _0x195144["comments"][_0x28a9c3] = String(object["comments"][_0x28a9c3]);
      }
      if (object["commentsV2"]) {
        if (!Array["isArray"](object["commentsV2"])) throw TypeError(".CommentsV2GetCommentThreadResponse.commentsV2: array expected");
        _0x195144["commentsV2"] = [];
        for (_0x28a9c3 = 0; _0x28a9c3 < object["commentsV2"]["length"]; ++_0x28a9c3) {
          if ("object" != typeof object["commentsV2"][_0x28a9c3]) throw TypeError(".CommentsV2GetCommentThreadResponse.commentsV2: object expected");
          _0x195144["commentsV2"][_0x28a9c3] = $root["CommentDescriptor"]["fromObject"](object["commentsV2"][_0x28a9c3]);
        }
      }
      return null != object["resolvedAt"] && (_0x195144["resolvedAt"] = String(object["resolvedAt"])), null != object["resolvedBy"] && (_0x195144["resolvedBy"] = String(object["resolvedBy"])), null != object["context"] && (_0x195144["context"] = String(object["context"])), null != object["createdAt"] && (_0x195144["createdAt"] = String(object["createdAt"])), null != object["deletedAt"] && (_0x195144["deletedAt"] = String(object["deletedAt"])), null != object["attributes"] && (_0x195144["attributes"] = String(object["attributes"])), null != object["unlinkedAt"] && (_0x195144["unlinkedAt"] = String(object["unlinkedAt"])), _0x195144;
    }, CommentsV2GetCommentThreadResponse["toObject"] = function(_0x3624a7, options) {
      options || (options = {});
      var object = {};
      if ((options["arrays"] || options["defaults"]) && (object["comments"] = [], object["commentsV2"] = []), options["defaults"] && (object["commentThreadId"] = "", object["resolvedAt"] = "", object["resolvedBy"] = "", object["context"] = "", object["createdAt"] = "", object["deletedAt"] = "", object["attributes"] = "", object["unlinkedAt"] = ""), null != _0x3624a7["commentThreadId"] && _0x3624a7["hasOwnProperty"]("commentThreadId") && (object["commentThreadId"] = _0x3624a7["commentThreadId"]), _0x3624a7["comments"] && _0x3624a7["comments"]["length"]) {
        object["comments"] = [];
        for (var _0x3922e0 = 0; _0x3922e0 < _0x3624a7["comments"]["length"]; ++_0x3922e0) object["comments"][_0x3922e0] = _0x3624a7["comments"][_0x3922e0];
      }
      if (_0x3624a7["commentsV2"] && _0x3624a7["commentsV2"]["length"]) {
        object["commentsV2"] = [];
        for (_0x3922e0 = 0; _0x3922e0 < _0x3624a7["commentsV2"]["length"]; ++_0x3922e0) object["commentsV2"][_0x3922e0] = $root["CommentDescriptor"]["toObject"](_0x3624a7["commentsV2"][_0x3922e0], options);
      }
      return null != _0x3624a7["resolvedAt"] && _0x3624a7["hasOwnProperty"]("resolvedAt") && (object["resolvedAt"] = _0x3624a7["resolvedAt"]), null != _0x3624a7["resolvedBy"] && _0x3624a7["hasOwnProperty"]("resolvedBy") && (object["resolvedBy"] = _0x3624a7["resolvedBy"]), null != _0x3624a7["context"] && _0x3624a7["hasOwnProperty"]("context") && (object["context"] = _0x3624a7["context"]), null != _0x3624a7["createdAt"] && _0x3624a7["hasOwnProperty"]("createdAt") && (object["createdAt"] = _0x3624a7["createdAt"]), null != _0x3624a7["deletedAt"] && _0x3624a7["hasOwnProperty"]("deletedAt") && (object["deletedAt"] = _0x3624a7["deletedAt"]), null != _0x3624a7["attributes"] && _0x3624a7["hasOwnProperty"]("attributes") && (object["attributes"] = _0x3624a7["attributes"]), null != _0x3624a7["unlinkedAt"] && _0x3624a7["hasOwnProperty"]("unlinkedAt") && (object["unlinkedAt"] = _0x3624a7["unlinkedAt"]), object;
    }, CommentsV2GetCommentThreadResponse["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, CommentsV2GetCommentThreadResponse["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/CommentsV2GetCommentThreadResponse";
    }, CommentsV2GetCommentThreadResponse;
  }(), $root["CommentsV2GetDocumentThreadsResponse"] = function() {
    function CommentsV2GetDocumentThreadsResponse(properties) {
      if (this["threads"] = [], this["threadsV2"] = [], properties) {
        for (var _0x4d9678 = Object["keys"](properties), _0x3b9172 = 0; _0x3b9172 < _0x4d9678["length"]; ++_0x3b9172) null != properties[_0x4d9678[_0x3b9172]] && (this[_0x4d9678[_0x3b9172]] = properties[_0x4d9678[_0x3b9172]]);
      }
    }
    return CommentsV2GetDocumentThreadsResponse["prototype"]["threads"] = $util["emptyArray"], CommentsV2GetDocumentThreadsResponse["prototype"]["threadsV2"] = $util["emptyArray"], CommentsV2GetDocumentThreadsResponse["create"] = function(properties) {
      return new CommentsV2GetDocumentThreadsResponse(properties);
    }, CommentsV2GetDocumentThreadsResponse["encode"] = function(_0x54f643, writer) {
      if (writer || (writer = $Writer["create"]()), null != _0x54f643["threads"] && _0x54f643["threads"]["length"]) {
        for (var _0x41d591 = 0; _0x41d591 < _0x54f643["threads"]["length"]; ++_0x41d591) writer["uint32"](10)["string"](_0x54f643["threads"][_0x41d591]);
      }
      if (null != _0x54f643["threadsV2"] && _0x54f643["threadsV2"]["length"]) {
        for (_0x41d591 = 0; _0x41d591 < _0x54f643["threadsV2"]["length"]; ++_0x41d591) $root["CommentsThreadDescriptor"]["encode"](_0x54f643["threadsV2"][_0x41d591], writer["uint32"](18)["fork"]())["ldelim"]();
      }
      return writer;
    }, CommentsV2GetDocumentThreadsResponse["encodeDelimited"] = function(_0x5ca11c, writer) {
      return this["encode"](_0x5ca11c, writer)["ldelim"]();
    }, CommentsV2GetDocumentThreadsResponse["decode"] = function(_0x3f9639, length2) {
      _0x3f9639 instanceof _0x476e3c || (_0x3f9639 = _0x476e3c["create"](_0x3f9639));
      for (var _0x553349 = void 0 === length2 ? _0x3f9639["len"] : _0x3f9639["pos"] + length2, _0x10b159 = new $root["CommentsV2GetDocumentThreadsResponse"](); _0x3f9639["pos"] < _0x553349; ) {
        var tag = _0x3f9639["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x10b159["threads"] && _0x10b159["threads"]["length"] || (_0x10b159["threads"] = []), _0x10b159["threads"]["push"](_0x3f9639["string"]());
            break;
          case 2:
            _0x10b159["threadsV2"] && _0x10b159["threadsV2"]["length"] || (_0x10b159["threadsV2"] = []), _0x10b159["threadsV2"]["push"]($root["CommentsThreadDescriptor"]["decode"](_0x3f9639, _0x3f9639["uint32"]()));
            break;
          default:
            _0x3f9639["skipType"](7 & tag);
        }
      }
      return _0x10b159;
    }, CommentsV2GetDocumentThreadsResponse["decodeDelimited"] = function(_0x359a06) {
      return _0x359a06 instanceof _0x476e3c || (_0x359a06 = new _0x476e3c(_0x359a06)), this["decode"](_0x359a06, _0x359a06["uint32"]());
    }, CommentsV2GetDocumentThreadsResponse["verify"] = function(_0x1cef4d) {
      if ("object" != typeof _0x1cef4d || null === _0x1cef4d) return "object expected";
      if (null != _0x1cef4d["threads"] && _0x1cef4d["hasOwnProperty"]("threads")) {
        if (!Array["isArray"](_0x1cef4d["threads"])) return "threads: array expected";
        for (var _0x183ee3 = 0; _0x183ee3 < _0x1cef4d["threads"]["length"]; ++_0x183ee3) if (!$util["isString"](_0x1cef4d["threads"][_0x183ee3])) return "threads: string[] expected";
      }
      if (null != _0x1cef4d["threadsV2"] && _0x1cef4d["hasOwnProperty"]("threadsV2")) {
        if (!Array["isArray"](_0x1cef4d["threadsV2"])) return "threadsV2: array expected";
        for (_0x183ee3 = 0; _0x183ee3 < _0x1cef4d["threadsV2"]["length"]; ++_0x183ee3) {
          var _0x439709 = $root["CommentsThreadDescriptor"]["verify"](_0x1cef4d["threadsV2"][_0x183ee3]);
          if (_0x439709) return "threadsV2." + _0x439709;
        }
      }
      return null;
    }, CommentsV2GetDocumentThreadsResponse["fromObject"] = function(object) {
      if (object instanceof $root["CommentsV2GetDocumentThreadsResponse"]) return object;
      var _0x6cbfe1 = new $root["CommentsV2GetDocumentThreadsResponse"]();
      if (object["threads"]) {
        if (!Array["isArray"](object["threads"])) throw TypeError(".CommentsV2GetDocumentThreadsResponse.threads: array expected");
        _0x6cbfe1["threads"] = [];
        for (var _0x558d9d = 0; _0x558d9d < object["threads"]["length"]; ++_0x558d9d) _0x6cbfe1["threads"][_0x558d9d] = String(object["threads"][_0x558d9d]);
      }
      if (object["threadsV2"]) {
        if (!Array["isArray"](object["threadsV2"])) throw TypeError(".CommentsV2GetDocumentThreadsResponse.threadsV2: array expected");
        _0x6cbfe1["threadsV2"] = [];
        for (_0x558d9d = 0; _0x558d9d < object["threadsV2"]["length"]; ++_0x558d9d) {
          if ("object" != typeof object["threadsV2"][_0x558d9d]) throw TypeError(".CommentsV2GetDocumentThreadsResponse.threadsV2: object expected");
          _0x6cbfe1["threadsV2"][_0x558d9d] = $root["CommentsThreadDescriptor"]["fromObject"](object["threadsV2"][_0x558d9d]);
        }
      }
      return _0x6cbfe1;
    }, CommentsV2GetDocumentThreadsResponse["toObject"] = function(_0x46cbc5, options) {
      options || (options = {});
      var object = {};
      if ((options["arrays"] || options["defaults"]) && (object["threads"] = [], object["threadsV2"] = []), _0x46cbc5["threads"] && _0x46cbc5["threads"]["length"]) {
        object["threads"] = [];
        for (var _0x18174e = 0; _0x18174e < _0x46cbc5["threads"]["length"]; ++_0x18174e) object["threads"][_0x18174e] = _0x46cbc5["threads"][_0x18174e];
      }
      if (_0x46cbc5["threadsV2"] && _0x46cbc5["threadsV2"]["length"]) {
        object["threadsV2"] = [];
        for (_0x18174e = 0; _0x18174e < _0x46cbc5["threadsV2"]["length"]; ++_0x18174e) object["threadsV2"][_0x18174e] = $root["CommentsThreadDescriptor"]["toObject"](_0x46cbc5["threadsV2"][_0x18174e], options);
      }
      return object;
    }, CommentsV2GetDocumentThreadsResponse["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, CommentsV2GetDocumentThreadsResponse["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/CommentsV2GetDocumentThreadsResponse";
    }, CommentsV2GetDocumentThreadsResponse;
  }(), $root["KeyValueDescriptor"] = function() {
    function KeyValueDescriptor(properties) {
      if (properties) {
        for (var _0x47c876 = Object["keys"](properties), _0x794e7c = 0; _0x794e7c < _0x47c876["length"]; ++_0x794e7c) null != properties[_0x47c876[_0x794e7c]] && (this[_0x47c876[_0x794e7c]] = properties[_0x47c876[_0x794e7c]]);
      }
    }
    return KeyValueDescriptor["prototype"]["key"] = "", KeyValueDescriptor["prototype"]["value"] = "", KeyValueDescriptor["create"] = function(properties) {
      return new KeyValueDescriptor(properties);
    }, KeyValueDescriptor["encode"] = function(_0x4ab4df, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x4ab4df["key"] && Object["hasOwnProperty"]["call"](_0x4ab4df, "key") && writer["uint32"](10)["string"](_0x4ab4df["key"]), null != _0x4ab4df["value"] && Object["hasOwnProperty"]["call"](_0x4ab4df, "value") && writer["uint32"](18)["string"](_0x4ab4df["value"]), writer;
    }, KeyValueDescriptor["encodeDelimited"] = function(_0x57d7c9, writer) {
      return this["encode"](_0x57d7c9, writer)["ldelim"]();
    }, KeyValueDescriptor["decode"] = function(_0x9a5b34, length2) {
      _0x9a5b34 instanceof _0x476e3c || (_0x9a5b34 = _0x476e3c["create"](_0x9a5b34));
      for (var _0x454fd5 = void 0 === length2 ? _0x9a5b34["len"] : _0x9a5b34["pos"] + length2, _0x1bf4cf = new $root["KeyValueDescriptor"](); _0x9a5b34["pos"] < _0x454fd5; ) {
        var tag = _0x9a5b34["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x1bf4cf["key"] = _0x9a5b34["string"]();
            break;
          case 2:
            _0x1bf4cf["value"] = _0x9a5b34["string"]();
            break;
          default:
            _0x9a5b34["skipType"](7 & tag);
        }
      }
      return _0x1bf4cf;
    }, KeyValueDescriptor["decodeDelimited"] = function(_0x37b0b2) {
      return _0x37b0b2 instanceof _0x476e3c || (_0x37b0b2 = new _0x476e3c(_0x37b0b2)), this["decode"](_0x37b0b2, _0x37b0b2["uint32"]());
    }, KeyValueDescriptor["verify"] = function(_0x286215) {
      return "object" != typeof _0x286215 || null === _0x286215 ? "object expected" : null != _0x286215["key"] && _0x286215["hasOwnProperty"]("key") && !$util["isString"](_0x286215["key"]) ? "key: string expected" : null != _0x286215["value"] && _0x286215["hasOwnProperty"]("value") && !$util["isString"](_0x286215["value"]) ? "value: string expected" : null;
    }, KeyValueDescriptor["fromObject"] = function(object) {
      if (object instanceof $root["KeyValueDescriptor"]) return object;
      var _0x1e6ef3 = new $root["KeyValueDescriptor"]();
      return null != object["key"] && (_0x1e6ef3["key"] = String(object["key"])), null != object["value"] && (_0x1e6ef3["value"] = String(object["value"])), _0x1e6ef3;
    }, KeyValueDescriptor["toObject"] = function(_0x11eec5, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["key"] = "", object["value"] = ""), null != _0x11eec5["key"] && _0x11eec5["hasOwnProperty"]("key") && (object["key"] = _0x11eec5["key"]), null != _0x11eec5["value"] && _0x11eec5["hasOwnProperty"]("value") && (object["value"] = _0x11eec5["value"]), object;
    }, KeyValueDescriptor["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, KeyValueDescriptor["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/KeyValueDescriptor";
    }, KeyValueDescriptor;
  }(), $root["IsEditorBundleUploadedMessage"] = function() {
    function IsEditorBundleUploadedMessage2(properties) {
      if (properties) {
        for (var _0x58efbf = Object["keys"](properties), _0x5adda7 = 0; _0x5adda7 < _0x58efbf["length"]; ++_0x5adda7) null != properties[_0x58efbf[_0x5adda7]] && (this[_0x58efbf[_0x5adda7]] = properties[_0x58efbf[_0x5adda7]]);
      }
    }
    return IsEditorBundleUploadedMessage2["prototype"]["bundleVersion"] = "", IsEditorBundleUploadedMessage2["create"] = function(properties) {
      return new IsEditorBundleUploadedMessage2(properties);
    }, IsEditorBundleUploadedMessage2["encode"] = function(_0x29b33a, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x29b33a["bundleVersion"] && Object["hasOwnProperty"]["call"](_0x29b33a, "bundleVersion") && writer["uint32"](10)["string"](_0x29b33a["bundleVersion"]), writer;
    }, IsEditorBundleUploadedMessage2["encodeDelimited"] = function(_0x108036, writer) {
      return this["encode"](_0x108036, writer)["ldelim"]();
    }, IsEditorBundleUploadedMessage2["decode"] = function(_0xe7d3d6, length2) {
      _0xe7d3d6 instanceof _0x476e3c || (_0xe7d3d6 = _0x476e3c["create"](_0xe7d3d6));
      for (var _0xebc100 = void 0 === length2 ? _0xe7d3d6["len"] : _0xe7d3d6["pos"] + length2, _0x45fc65 = new $root["IsEditorBundleUploadedMessage"](); _0xe7d3d6["pos"] < _0xebc100; ) {
        var tag = _0xe7d3d6["uint32"]();
        if (tag >>> 3 == 1) _0x45fc65["bundleVersion"] = _0xe7d3d6["string"]();
        else _0xe7d3d6["skipType"](7 & tag);
      }
      return _0x45fc65;
    }, IsEditorBundleUploadedMessage2["decodeDelimited"] = function(_0x1e4925) {
      return _0x1e4925 instanceof _0x476e3c || (_0x1e4925 = new _0x476e3c(_0x1e4925)), this["decode"](_0x1e4925, _0x1e4925["uint32"]());
    }, IsEditorBundleUploadedMessage2["verify"] = function(_0x14b42e) {
      return "object" != typeof _0x14b42e || null === _0x14b42e ? "object expected" : null != _0x14b42e["bundleVersion"] && _0x14b42e["hasOwnProperty"]("bundleVersion") && !$util["isString"](_0x14b42e["bundleVersion"]) ? "bundleVersion: string expected" : null;
    }, IsEditorBundleUploadedMessage2["fromObject"] = function(object) {
      if (object instanceof $root["IsEditorBundleUploadedMessage"]) return object;
      var _0x292c38 = new $root["IsEditorBundleUploadedMessage"]();
      return null != object["bundleVersion"] && (_0x292c38["bundleVersion"] = String(object["bundleVersion"])), _0x292c38;
    }, IsEditorBundleUploadedMessage2["toObject"] = function(_0x4330e9, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["bundleVersion"] = ""), null != _0x4330e9["bundleVersion"] && _0x4330e9["hasOwnProperty"]("bundleVersion") && (object["bundleVersion"] = _0x4330e9["bundleVersion"]), object;
    }, IsEditorBundleUploadedMessage2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, IsEditorBundleUploadedMessage2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/IsEditorBundleUploadedMessage";
    }, IsEditorBundleUploadedMessage2;
  }(), $root["IsEditorBundleUploadedResponse"] = function() {
    function IsEditorBundleUploadedResponse2(properties) {
      if (properties) {
        for (var _0x5b4768 = Object["keys"](properties), _0x3d0202 = 0; _0x3d0202 < _0x5b4768["length"]; ++_0x3d0202) null != properties[_0x5b4768[_0x3d0202]] && (this[_0x5b4768[_0x3d0202]] = properties[_0x5b4768[_0x3d0202]]);
      }
    }
    return IsEditorBundleUploadedResponse2["prototype"]["isUploaded"] = false, IsEditorBundleUploadedResponse2["create"] = function(properties) {
      return new IsEditorBundleUploadedResponse2(properties);
    }, IsEditorBundleUploadedResponse2["encode"] = function(_0x712bd2, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x712bd2["isUploaded"] && Object["hasOwnProperty"]["call"](_0x712bd2, "isUploaded") && writer["uint32"](8)["bool"](_0x712bd2["isUploaded"]), writer;
    }, IsEditorBundleUploadedResponse2["encodeDelimited"] = function(_0x3e0ae6, writer) {
      return this["encode"](_0x3e0ae6, writer)["ldelim"]();
    }, IsEditorBundleUploadedResponse2["decode"] = function(_0x5413c6, length2) {
      _0x5413c6 instanceof _0x476e3c || (_0x5413c6 = _0x476e3c["create"](_0x5413c6));
      for (var _0x2aa460 = void 0 === length2 ? _0x5413c6["len"] : _0x5413c6["pos"] + length2, _0x2793fc = new $root["IsEditorBundleUploadedResponse"](); _0x5413c6["pos"] < _0x2aa460; ) {
        var tag = _0x5413c6["uint32"]();
        if (tag >>> 3 == 1) _0x2793fc["isUploaded"] = _0x5413c6["bool"]();
        else _0x5413c6["skipType"](7 & tag);
      }
      return _0x2793fc;
    }, IsEditorBundleUploadedResponse2["decodeDelimited"] = function(_0x5af182) {
      return _0x5af182 instanceof _0x476e3c || (_0x5af182 = new _0x476e3c(_0x5af182)), this["decode"](_0x5af182, _0x5af182["uint32"]());
    }, IsEditorBundleUploadedResponse2["verify"] = function(_0x44c970) {
      return "object" != typeof _0x44c970 || null === _0x44c970 ? "object expected" : null != _0x44c970["isUploaded"] && _0x44c970["hasOwnProperty"]("isUploaded") && "boolean" != typeof _0x44c970["isUploaded"] ? "isUploaded: boolean expected" : null;
    }, IsEditorBundleUploadedResponse2["fromObject"] = function(object) {
      if (object instanceof $root["IsEditorBundleUploadedResponse"]) return object;
      var _0x2ed321 = new $root["IsEditorBundleUploadedResponse"]();
      return null != object["isUploaded"] && (_0x2ed321["isUploaded"] = Boolean(object["isUploaded"])), _0x2ed321;
    }, IsEditorBundleUploadedResponse2["toObject"] = function(_0x26de22, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["isUploaded"] = false), null != _0x26de22["isUploaded"] && _0x26de22["hasOwnProperty"]("isUploaded") && (object["isUploaded"] = _0x26de22["isUploaded"]), object;
    }, IsEditorBundleUploadedResponse2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, IsEditorBundleUploadedResponse2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/IsEditorBundleUploadedResponse";
    }, IsEditorBundleUploadedResponse2;
  }(), $root["RevisionDescriptor"] = function() {
    function RevisionDescriptor2(properties) {
      if (properties) {
        for (var _0x5f1770 = Object["keys"](properties), _0x2d63c3 = 0; _0x2d63c3 < _0x5f1770["length"]; ++_0x2d63c3) null != properties[_0x5f1770[_0x2d63c3]] && (this[_0x5f1770[_0x2d63c3]] = properties[_0x5f1770[_0x2d63c3]]);
      }
    }
    return RevisionDescriptor2["prototype"]["revisionId"] = "", RevisionDescriptor2["prototype"]["name"] = "", RevisionDescriptor2["prototype"]["creatorId"] = "", RevisionDescriptor2["prototype"]["authorsIds"] = "", RevisionDescriptor2["prototype"]["diffData"] = "", RevisionDescriptor2["prototype"]["createdAt"] = "", RevisionDescriptor2["prototype"]["attributes"] = "", RevisionDescriptor2["prototype"]["toVersion"] = 0, RevisionDescriptor2["prototype"]["fromVersion"] = 0, RevisionDescriptor2["prototype"]["isEmptyCurrent"] = false, RevisionDescriptor2["create"] = function(properties) {
      return new RevisionDescriptor2(properties);
    }, RevisionDescriptor2["encode"] = function(_0x317572, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x317572["revisionId"] && Object["hasOwnProperty"]["call"](_0x317572, "revisionId") && writer["uint32"](10)["string"](_0x317572["revisionId"]), null != _0x317572["name"] && Object["hasOwnProperty"]["call"](_0x317572, "name") && writer["uint32"](18)["string"](_0x317572["name"]), null != _0x317572["creatorId"] && Object["hasOwnProperty"]["call"](_0x317572, "creatorId") && writer["uint32"](26)["string"](_0x317572["creatorId"]), null != _0x317572["authorsIds"] && Object["hasOwnProperty"]["call"](_0x317572, "authorsIds") && writer["uint32"](34)["string"](_0x317572["authorsIds"]), null != _0x317572["diffData"] && Object["hasOwnProperty"]["call"](_0x317572, "diffData") && writer["uint32"](42)["string"](_0x317572["diffData"]), null != _0x317572["createdAt"] && Object["hasOwnProperty"]["call"](_0x317572, "createdAt") && writer["uint32"](50)["string"](_0x317572["createdAt"]), null != _0x317572["attributes"] && Object["hasOwnProperty"]["call"](_0x317572, "attributes") && writer["uint32"](58)["string"](_0x317572["attributes"]), null != _0x317572["toVersion"] && Object["hasOwnProperty"]["call"](_0x317572, "toVersion") && writer["uint32"](64)["uint32"](_0x317572["toVersion"]), null != _0x317572["fromVersion"] && Object["hasOwnProperty"]["call"](_0x317572, "fromVersion") && writer["uint32"](72)["uint32"](_0x317572["fromVersion"]), null != _0x317572["isEmptyCurrent"] && Object["hasOwnProperty"]["call"](_0x317572, "isEmptyCurrent") && writer["uint32"](80)["bool"](_0x317572["isEmptyCurrent"]), writer;
    }, RevisionDescriptor2["encodeDelimited"] = function(_0x55b3d8, writer) {
      return this["encode"](_0x55b3d8, writer)["ldelim"]();
    }, RevisionDescriptor2["decode"] = function(_0x4f523b, length2) {
      _0x4f523b instanceof _0x476e3c || (_0x4f523b = _0x476e3c["create"](_0x4f523b));
      for (var _0x3c377a = void 0 === length2 ? _0x4f523b["len"] : _0x4f523b["pos"] + length2, _0x57c07e = new $root["RevisionDescriptor"](); _0x4f523b["pos"] < _0x3c377a; ) {
        var tag = _0x4f523b["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x57c07e["revisionId"] = _0x4f523b["string"]();
            break;
          case 2:
            _0x57c07e["name"] = _0x4f523b["string"]();
            break;
          case 3:
            _0x57c07e["creatorId"] = _0x4f523b["string"]();
            break;
          case 4:
            _0x57c07e["authorsIds"] = _0x4f523b["string"]();
            break;
          case 5:
            _0x57c07e["diffData"] = _0x4f523b["string"]();
            break;
          case 6:
            _0x57c07e["createdAt"] = _0x4f523b["string"]();
            break;
          case 7:
            _0x57c07e["attributes"] = _0x4f523b["string"]();
            break;
          case 8:
            _0x57c07e["toVersion"] = _0x4f523b["uint32"]();
            break;
          case 9:
            _0x57c07e["fromVersion"] = _0x4f523b["uint32"]();
            break;
          case 10:
            _0x57c07e["isEmptyCurrent"] = _0x4f523b["bool"]();
            break;
          default:
            _0x4f523b["skipType"](7 & tag);
        }
      }
      return _0x57c07e;
    }, RevisionDescriptor2["decodeDelimited"] = function(_0x59d01f) {
      return _0x59d01f instanceof _0x476e3c || (_0x59d01f = new _0x476e3c(_0x59d01f)), this["decode"](_0x59d01f, _0x59d01f["uint32"]());
    }, RevisionDescriptor2["verify"] = function(_0x391830) {
      return "object" != typeof _0x391830 || null === _0x391830 ? "object expected" : null != _0x391830["revisionId"] && _0x391830["hasOwnProperty"]("revisionId") && !$util["isString"](_0x391830["revisionId"]) ? "revisionId: string expected" : null != _0x391830["name"] && _0x391830["hasOwnProperty"]("name") && !$util["isString"](_0x391830["name"]) ? "name: string expected" : null != _0x391830["creatorId"] && _0x391830["hasOwnProperty"]("creatorId") && !$util["isString"](_0x391830["creatorId"]) ? "creatorId: string expected" : null != _0x391830["authorsIds"] && _0x391830["hasOwnProperty"]("authorsIds") && !$util["isString"](_0x391830["authorsIds"]) ? "authorsIds: string expected" : null != _0x391830["diffData"] && _0x391830["hasOwnProperty"]("diffData") && !$util["isString"](_0x391830["diffData"]) ? "diffData: string expected" : null != _0x391830["createdAt"] && _0x391830["hasOwnProperty"]("createdAt") && !$util["isString"](_0x391830["createdAt"]) ? "createdAt: string expected" : null != _0x391830["attributes"] && _0x391830["hasOwnProperty"]("attributes") && !$util["isString"](_0x391830["attributes"]) ? "attributes: string expected" : null != _0x391830["toVersion"] && _0x391830["hasOwnProperty"]("toVersion") && !$util["isInteger"](_0x391830["toVersion"]) ? "toVersion: integer expected" : null != _0x391830["fromVersion"] && _0x391830["hasOwnProperty"]("fromVersion") && !$util["isInteger"](_0x391830["fromVersion"]) ? "fromVersion: integer expected" : null != _0x391830["isEmptyCurrent"] && _0x391830["hasOwnProperty"]("isEmptyCurrent") && "boolean" != typeof _0x391830["isEmptyCurrent"] ? "isEmptyCurrent: boolean expected" : null;
    }, RevisionDescriptor2["fromObject"] = function(object) {
      if (object instanceof $root["RevisionDescriptor"]) return object;
      var _0x4adbcb = new $root["RevisionDescriptor"]();
      return null != object["revisionId"] && (_0x4adbcb["revisionId"] = String(object["revisionId"])), null != object["name"] && (_0x4adbcb["name"] = String(object["name"])), null != object["creatorId"] && (_0x4adbcb["creatorId"] = String(object["creatorId"])), null != object["authorsIds"] && (_0x4adbcb["authorsIds"] = String(object["authorsIds"])), null != object["diffData"] && (_0x4adbcb["diffData"] = String(object["diffData"])), null != object["createdAt"] && (_0x4adbcb["createdAt"] = String(object["createdAt"])), null != object["attributes"] && (_0x4adbcb["attributes"] = String(object["attributes"])), null != object["toVersion"] && (_0x4adbcb["toVersion"] = object["toVersion"] >>> 0), null != object["fromVersion"] && (_0x4adbcb["fromVersion"] = object["fromVersion"] >>> 0), null != object["isEmptyCurrent"] && (_0x4adbcb["isEmptyCurrent"] = Boolean(object["isEmptyCurrent"])), _0x4adbcb;
    }, RevisionDescriptor2["toObject"] = function(_0x58fa66, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["revisionId"] = "", object["name"] = "", object["creatorId"] = "", object["authorsIds"] = "", object["diffData"] = "", object["createdAt"] = "", object["attributes"] = "", object["toVersion"] = 0, object["fromVersion"] = 0, object["isEmptyCurrent"] = false), null != _0x58fa66["revisionId"] && _0x58fa66["hasOwnProperty"]("revisionId") && (object["revisionId"] = _0x58fa66["revisionId"]), null != _0x58fa66["name"] && _0x58fa66["hasOwnProperty"]("name") && (object["name"] = _0x58fa66["name"]), null != _0x58fa66["creatorId"] && _0x58fa66["hasOwnProperty"]("creatorId") && (object["creatorId"] = _0x58fa66["creatorId"]), null != _0x58fa66["authorsIds"] && _0x58fa66["hasOwnProperty"]("authorsIds") && (object["authorsIds"] = _0x58fa66["authorsIds"]), null != _0x58fa66["diffData"] && _0x58fa66["hasOwnProperty"]("diffData") && (object["diffData"] = _0x58fa66["diffData"]), null != _0x58fa66["createdAt"] && _0x58fa66["hasOwnProperty"]("createdAt") && (object["createdAt"] = _0x58fa66["createdAt"]), null != _0x58fa66["attributes"] && _0x58fa66["hasOwnProperty"]("attributes") && (object["attributes"] = _0x58fa66["attributes"]), null != _0x58fa66["toVersion"] && _0x58fa66["hasOwnProperty"]("toVersion") && (object["toVersion"] = _0x58fa66["toVersion"]), null != _0x58fa66["fromVersion"] && _0x58fa66["hasOwnProperty"]("fromVersion") && (object["fromVersion"] = _0x58fa66["fromVersion"]), null != _0x58fa66["isEmptyCurrent"] && _0x58fa66["hasOwnProperty"]("isEmptyCurrent") && (object["isEmptyCurrent"] = _0x58fa66["isEmptyCurrent"]), object;
    }, RevisionDescriptor2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, RevisionDescriptor2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/RevisionDescriptor";
    }, RevisionDescriptor2;
  }(), $root["RevisionHistoryConnectMessage"] = function() {
    function RevisionHistoryConnectMessage2(properties) {
      if (properties) {
        for (var _0x449b82 = Object["keys"](properties), _0x3a98f5 = 0; _0x3a98f5 < _0x449b82["length"]; ++_0x3a98f5) null != properties[_0x449b82[_0x3a98f5]] && (this[_0x449b82[_0x3a98f5]] = properties[_0x449b82[_0x3a98f5]]);
      }
    }
    return RevisionHistoryConnectMessage2["prototype"]["documentId"] = "", RevisionHistoryConnectMessage2["create"] = function(properties) {
      return new RevisionHistoryConnectMessage2(properties);
    }, RevisionHistoryConnectMessage2["encode"] = function(_0xb8b72f, writer) {
      return writer || (writer = $Writer["create"]()), null != _0xb8b72f["documentId"] && Object["hasOwnProperty"]["call"](_0xb8b72f, "documentId") && writer["uint32"](10)["string"](_0xb8b72f["documentId"]), writer;
    }, RevisionHistoryConnectMessage2["encodeDelimited"] = function(_0x50eb04, writer) {
      return this["encode"](_0x50eb04, writer)["ldelim"]();
    }, RevisionHistoryConnectMessage2["decode"] = function(_0x168ebf, length2) {
      _0x168ebf instanceof _0x476e3c || (_0x168ebf = _0x476e3c["create"](_0x168ebf));
      for (var _0x23b910 = void 0 === length2 ? _0x168ebf["len"] : _0x168ebf["pos"] + length2, _0x2403b6 = new $root["RevisionHistoryConnectMessage"](); _0x168ebf["pos"] < _0x23b910; ) {
        var tag = _0x168ebf["uint32"]();
        if (tag >>> 3 == 1) _0x2403b6["documentId"] = _0x168ebf["string"]();
        else _0x168ebf["skipType"](7 & tag);
      }
      return _0x2403b6;
    }, RevisionHistoryConnectMessage2["decodeDelimited"] = function(_0x1692ee) {
      return _0x1692ee instanceof _0x476e3c || (_0x1692ee = new _0x476e3c(_0x1692ee)), this["decode"](_0x1692ee, _0x1692ee["uint32"]());
    }, RevisionHistoryConnectMessage2["verify"] = function(_0x3c57a3) {
      return "object" != typeof _0x3c57a3 || null === _0x3c57a3 ? "object expected" : null != _0x3c57a3["documentId"] && _0x3c57a3["hasOwnProperty"]("documentId") && !$util["isString"](_0x3c57a3["documentId"]) ? "documentId: string expected" : null;
    }, RevisionHistoryConnectMessage2["fromObject"] = function(object) {
      if (object instanceof $root["RevisionHistoryConnectMessage"]) return object;
      var _0x297997 = new $root["RevisionHistoryConnectMessage"]();
      return null != object["documentId"] && (_0x297997["documentId"] = String(object["documentId"])), _0x297997;
    }, RevisionHistoryConnectMessage2["toObject"] = function(_0x1dca19, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["documentId"] = ""), null != _0x1dca19["documentId"] && _0x1dca19["hasOwnProperty"]("documentId") && (object["documentId"] = _0x1dca19["documentId"]), object;
    }, RevisionHistoryConnectMessage2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, RevisionHistoryConnectMessage2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/RevisionHistoryConnectMessage";
    }, RevisionHistoryConnectMessage2;
  }(), $root["RevisionHistoryGetRevisionMessage"] = function() {
    function RevisionHistoryGetRevisionMessage2(properties) {
      if (properties) {
        for (var _0x3a035b = Object["keys"](properties), _0x2005f2 = 0; _0x2005f2 < _0x3a035b["length"]; ++_0x2005f2) null != properties[_0x3a035b[_0x2005f2]] && (this[_0x3a035b[_0x2005f2]] = properties[_0x3a035b[_0x2005f2]]);
      }
    }
    return RevisionHistoryGetRevisionMessage2["prototype"]["documentId"] = "", RevisionHistoryGetRevisionMessage2["prototype"]["revisionId"] = "", RevisionHistoryGetRevisionMessage2["create"] = function(properties) {
      return new RevisionHistoryGetRevisionMessage2(properties);
    }, RevisionHistoryGetRevisionMessage2["encode"] = function(_0x17638f, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x17638f["documentId"] && Object["hasOwnProperty"]["call"](_0x17638f, "documentId") && writer["uint32"](10)["string"](_0x17638f["documentId"]), null != _0x17638f["revisionId"] && Object["hasOwnProperty"]["call"](_0x17638f, "revisionId") && writer["uint32"](18)["string"](_0x17638f["revisionId"]), writer;
    }, RevisionHistoryGetRevisionMessage2["encodeDelimited"] = function(_0x3050bf, writer) {
      return this["encode"](_0x3050bf, writer)["ldelim"]();
    }, RevisionHistoryGetRevisionMessage2["decode"] = function(_0x334279, length2) {
      _0x334279 instanceof _0x476e3c || (_0x334279 = _0x476e3c["create"](_0x334279));
      for (var _0x3a764f = void 0 === length2 ? _0x334279["len"] : _0x334279["pos"] + length2, _0x1d5c7a = new $root["RevisionHistoryGetRevisionMessage"](); _0x334279["pos"] < _0x3a764f; ) {
        var tag = _0x334279["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x1d5c7a["documentId"] = _0x334279["string"]();
            break;
          case 2:
            _0x1d5c7a["revisionId"] = _0x334279["string"]();
            break;
          default:
            _0x334279["skipType"](7 & tag);
        }
      }
      return _0x1d5c7a;
    }, RevisionHistoryGetRevisionMessage2["decodeDelimited"] = function(_0xb0a0a7) {
      return _0xb0a0a7 instanceof _0x476e3c || (_0xb0a0a7 = new _0x476e3c(_0xb0a0a7)), this["decode"](_0xb0a0a7, _0xb0a0a7["uint32"]());
    }, RevisionHistoryGetRevisionMessage2["verify"] = function(_0x3e0001) {
      return "object" != typeof _0x3e0001 || null === _0x3e0001 ? "object expected" : null != _0x3e0001["documentId"] && _0x3e0001["hasOwnProperty"]("documentId") && !$util["isString"](_0x3e0001["documentId"]) ? "documentId: string expected" : null != _0x3e0001["revisionId"] && _0x3e0001["hasOwnProperty"]("revisionId") && !$util["isString"](_0x3e0001["revisionId"]) ? "revisionId: string expected" : null;
    }, RevisionHistoryGetRevisionMessage2["fromObject"] = function(object) {
      if (object instanceof $root["RevisionHistoryGetRevisionMessage"]) return object;
      var _0x431cbf = new $root["RevisionHistoryGetRevisionMessage"]();
      return null != object["documentId"] && (_0x431cbf["documentId"] = String(object["documentId"])), null != object["revisionId"] && (_0x431cbf["revisionId"] = String(object["revisionId"])), _0x431cbf;
    }, RevisionHistoryGetRevisionMessage2["toObject"] = function(_0x495284, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["documentId"] = "", object["revisionId"] = ""), null != _0x495284["documentId"] && _0x495284["hasOwnProperty"]("documentId") && (object["documentId"] = _0x495284["documentId"]), null != _0x495284["revisionId"] && _0x495284["hasOwnProperty"]("revisionId") && (object["revisionId"] = _0x495284["revisionId"]), object;
    }, RevisionHistoryGetRevisionMessage2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, RevisionHistoryGetRevisionMessage2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/RevisionHistoryGetRevisionMessage";
    }, RevisionHistoryGetRevisionMessage2;
  }(), $root["RevisionHistoryReconnectMessage"] = function() {
    function RevisionHistoryReconnectMessage2(properties) {
      if (properties) {
        for (var _0x5d6282 = Object["keys"](properties), _0x52312c = 0; _0x52312c < _0x5d6282["length"]; ++_0x52312c) null != properties[_0x5d6282[_0x52312c]] && (this[_0x5d6282[_0x52312c]] = properties[_0x5d6282[_0x52312c]]);
      }
    }
    return RevisionHistoryReconnectMessage2["prototype"]["documentId"] = "", RevisionHistoryReconnectMessage2["prototype"]["requestId"] = 0, RevisionHistoryReconnectMessage2["create"] = function(properties) {
      return new RevisionHistoryReconnectMessage2(properties);
    }, RevisionHistoryReconnectMessage2["encode"] = function(_0x440510, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x440510["documentId"] && Object["hasOwnProperty"]["call"](_0x440510, "documentId") && writer["uint32"](10)["string"](_0x440510["documentId"]), null != _0x440510["requestId"] && Object["hasOwnProperty"]["call"](_0x440510, "requestId") && writer["uint32"](16)["uint32"](_0x440510["requestId"]), writer;
    }, RevisionHistoryReconnectMessage2["encodeDelimited"] = function(_0x39f8bb, writer) {
      return this["encode"](_0x39f8bb, writer)["ldelim"]();
    }, RevisionHistoryReconnectMessage2["decode"] = function(_0x182891, length2) {
      _0x182891 instanceof _0x476e3c || (_0x182891 = _0x476e3c["create"](_0x182891));
      for (var _0x188c3a = void 0 === length2 ? _0x182891["len"] : _0x182891["pos"] + length2, _0x193ad7 = new $root["RevisionHistoryReconnectMessage"](); _0x182891["pos"] < _0x188c3a; ) {
        var tag = _0x182891["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x193ad7["documentId"] = _0x182891["string"]();
            break;
          case 2:
            _0x193ad7["requestId"] = _0x182891["uint32"]();
            break;
          default:
            _0x182891["skipType"](7 & tag);
        }
      }
      return _0x193ad7;
    }, RevisionHistoryReconnectMessage2["decodeDelimited"] = function(_0x30bffe) {
      return _0x30bffe instanceof _0x476e3c || (_0x30bffe = new _0x476e3c(_0x30bffe)), this["decode"](_0x30bffe, _0x30bffe["uint32"]());
    }, RevisionHistoryReconnectMessage2["verify"] = function(_0xf75929) {
      return "object" != typeof _0xf75929 || null === _0xf75929 ? "object expected" : null != _0xf75929["documentId"] && _0xf75929["hasOwnProperty"]("documentId") && !$util["isString"](_0xf75929["documentId"]) ? "documentId: string expected" : null != _0xf75929["requestId"] && _0xf75929["hasOwnProperty"]("requestId") && !$util["isInteger"](_0xf75929["requestId"]) ? "requestId: integer expected" : null;
    }, RevisionHistoryReconnectMessage2["fromObject"] = function(object) {
      if (object instanceof $root["RevisionHistoryReconnectMessage"]) return object;
      var _0x1b27bf = new $root["RevisionHistoryReconnectMessage"]();
      return null != object["documentId"] && (_0x1b27bf["documentId"] = String(object["documentId"])), null != object["requestId"] && (_0x1b27bf["requestId"] = object["requestId"] >>> 0), _0x1b27bf;
    }, RevisionHistoryReconnectMessage2["toObject"] = function(_0x5b9220, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["documentId"] = "", object["requestId"] = 0), null != _0x5b9220["documentId"] && _0x5b9220["hasOwnProperty"]("documentId") && (object["documentId"] = _0x5b9220["documentId"]), null != _0x5b9220["requestId"] && _0x5b9220["hasOwnProperty"]("requestId") && (object["requestId"] = _0x5b9220["requestId"]), object;
    }, RevisionHistoryReconnectMessage2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, RevisionHistoryReconnectMessage2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/RevisionHistoryReconnectMessage";
    }, RevisionHistoryReconnectMessage2;
  }(), $root["RevisionHistoryUpdateRevisionsMessage"] = function() {
    function RevisionHistoryUpdateRevisionsMessage2(properties) {
      if (this["revisions"] = [], properties) {
        for (var _0x18aea5 = Object["keys"](properties), _0x448352 = 0; _0x448352 < _0x18aea5["length"]; ++_0x448352) null != properties[_0x18aea5[_0x448352]] && (this[_0x18aea5[_0x448352]] = properties[_0x18aea5[_0x448352]]);
      }
    }
    return RevisionHistoryUpdateRevisionsMessage2["prototype"]["documentId"] = "", RevisionHistoryUpdateRevisionsMessage2["prototype"]["requestId"] = 0, RevisionHistoryUpdateRevisionsMessage2["prototype"]["revisions"] = $util["emptyArray"], RevisionHistoryUpdateRevisionsMessage2["create"] = function(properties) {
      return new RevisionHistoryUpdateRevisionsMessage2(properties);
    }, RevisionHistoryUpdateRevisionsMessage2["encode"] = function(_0x1457fe, writer) {
      if (writer || (writer = $Writer["create"]()), null != _0x1457fe["documentId"] && Object["hasOwnProperty"]["call"](_0x1457fe, "documentId") && writer["uint32"](10)["string"](_0x1457fe["documentId"]), null != _0x1457fe["requestId"] && Object["hasOwnProperty"]["call"](_0x1457fe, "requestId") && writer["uint32"](16)["uint32"](_0x1457fe["requestId"]), null != _0x1457fe["revisions"] && _0x1457fe["revisions"]["length"]) {
        for (var _0xcb312 = 0; _0xcb312 < _0x1457fe["revisions"]["length"]; ++_0xcb312) $root["RevisionDescriptor"]["encode"](_0x1457fe["revisions"][_0xcb312], writer["uint32"](26)["fork"]())["ldelim"]();
      }
      return writer;
    }, RevisionHistoryUpdateRevisionsMessage2["encodeDelimited"] = function(_0x340495, writer) {
      return this["encode"](_0x340495, writer)["ldelim"]();
    }, RevisionHistoryUpdateRevisionsMessage2["decode"] = function(_0x206a1c, length2) {
      _0x206a1c instanceof _0x476e3c || (_0x206a1c = _0x476e3c["create"](_0x206a1c));
      for (var _0x4d4b29 = void 0 === length2 ? _0x206a1c["len"] : _0x206a1c["pos"] + length2, _0x50dafb = new $root["RevisionHistoryUpdateRevisionsMessage"](); _0x206a1c["pos"] < _0x4d4b29; ) {
        var tag = _0x206a1c["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x50dafb["documentId"] = _0x206a1c["string"]();
            break;
          case 2:
            _0x50dafb["requestId"] = _0x206a1c["uint32"]();
            break;
          case 3:
            _0x50dafb["revisions"] && _0x50dafb["revisions"]["length"] || (_0x50dafb["revisions"] = []), _0x50dafb["revisions"]["push"]($root["RevisionDescriptor"]["decode"](_0x206a1c, _0x206a1c["uint32"]()));
            break;
          default:
            _0x206a1c["skipType"](7 & tag);
        }
      }
      return _0x50dafb;
    }, RevisionHistoryUpdateRevisionsMessage2["decodeDelimited"] = function(_0x188886) {
      return _0x188886 instanceof _0x476e3c || (_0x188886 = new _0x476e3c(_0x188886)), this["decode"](_0x188886, _0x188886["uint32"]());
    }, RevisionHistoryUpdateRevisionsMessage2["verify"] = function(_0x195dd3) {
      if ("object" != typeof _0x195dd3 || null === _0x195dd3) return "object expected";
      if (null != _0x195dd3["documentId"] && _0x195dd3["hasOwnProperty"]("documentId") && !$util["isString"](_0x195dd3["documentId"])) return "documentId: string expected";
      if (null != _0x195dd3["requestId"] && _0x195dd3["hasOwnProperty"]("requestId") && !$util["isInteger"](_0x195dd3["requestId"])) return "requestId: integer expected";
      if (null != _0x195dd3["revisions"] && _0x195dd3["hasOwnProperty"]("revisions")) {
        if (!Array["isArray"](_0x195dd3["revisions"])) return "revisions: array expected";
        for (var _0x4dd02c = 0; _0x4dd02c < _0x195dd3["revisions"]["length"]; ++_0x4dd02c) {
          var _0x269d6c = $root["RevisionDescriptor"]["verify"](_0x195dd3["revisions"][_0x4dd02c]);
          if (_0x269d6c) return "revisions." + _0x269d6c;
        }
      }
      return null;
    }, RevisionHistoryUpdateRevisionsMessage2["fromObject"] = function(object) {
      if (object instanceof $root["RevisionHistoryUpdateRevisionsMessage"]) return object;
      var _0x5363f8 = new $root["RevisionHistoryUpdateRevisionsMessage"]();
      if (null != object["documentId"] && (_0x5363f8["documentId"] = String(object["documentId"])), null != object["requestId"] && (_0x5363f8["requestId"] = object["requestId"] >>> 0), object["revisions"]) {
        if (!Array["isArray"](object["revisions"])) throw TypeError(".RevisionHistoryUpdateRevisionsMessage.revisions: array expected");
        _0x5363f8["revisions"] = [];
        for (var _0x13434e = 0; _0x13434e < object["revisions"]["length"]; ++_0x13434e) {
          if ("object" != typeof object["revisions"][_0x13434e]) throw TypeError(".RevisionHistoryUpdateRevisionsMessage.revisions: object expected");
          _0x5363f8["revisions"][_0x13434e] = $root["RevisionDescriptor"]["fromObject"](object["revisions"][_0x13434e]);
        }
      }
      return _0x5363f8;
    }, RevisionHistoryUpdateRevisionsMessage2["toObject"] = function(_0x19f7b8, options) {
      options || (options = {});
      var object = {};
      if ((options["arrays"] || options["defaults"]) && (object["revisions"] = []), options["defaults"] && (object["documentId"] = "", object["requestId"] = 0), null != _0x19f7b8["documentId"] && _0x19f7b8["hasOwnProperty"]("documentId") && (object["documentId"] = _0x19f7b8["documentId"]), null != _0x19f7b8["requestId"] && _0x19f7b8["hasOwnProperty"]("requestId") && (object["requestId"] = _0x19f7b8["requestId"]), _0x19f7b8["revisions"] && _0x19f7b8["revisions"]["length"]) {
        object["revisions"] = [];
        for (var _0xaf1b20 = 0; _0xaf1b20 < _0x19f7b8["revisions"]["length"]; ++_0xaf1b20) object["revisions"][_0xaf1b20] = $root["RevisionDescriptor"]["toObject"](_0x19f7b8["revisions"][_0xaf1b20], options);
      }
      return object;
    }, RevisionHistoryUpdateRevisionsMessage2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, RevisionHistoryUpdateRevisionsMessage2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/RevisionHistoryUpdateRevisionsMessage";
    }, RevisionHistoryUpdateRevisionsMessage2;
  }(), $root["RevisionHistoryConnectResponse"] = function() {
    function RevisionHistoryConnectResponse2(properties) {
      if (this["revisions"] = [], properties) {
        for (var _0x8d0c76 = Object["keys"](properties), _0x28628d = 0; _0x28628d < _0x8d0c76["length"]; ++_0x28628d) null != properties[_0x8d0c76[_0x28628d]] && (this[_0x8d0c76[_0x28628d]] = properties[_0x8d0c76[_0x28628d]]);
      }
    }
    return RevisionHistoryConnectResponse2["prototype"]["channel"] = "", RevisionHistoryConnectResponse2["prototype"]["requestId"] = 0, RevisionHistoryConnectResponse2["prototype"]["revisions"] = $util["emptyArray"], RevisionHistoryConnectResponse2["create"] = function(properties) {
      return new RevisionHistoryConnectResponse2(properties);
    }, RevisionHistoryConnectResponse2["encode"] = function(_0x324430, writer) {
      if (writer || (writer = $Writer["create"]()), null != _0x324430["channel"] && Object["hasOwnProperty"]["call"](_0x324430, "channel") && writer["uint32"](10)["string"](_0x324430["channel"]), null != _0x324430["requestId"] && Object["hasOwnProperty"]["call"](_0x324430, "requestId") && writer["uint32"](16)["uint32"](_0x324430["requestId"]), null != _0x324430["revisions"] && _0x324430["revisions"]["length"]) {
        for (var _0x8b2128 = 0; _0x8b2128 < _0x324430["revisions"]["length"]; ++_0x8b2128) $root["RevisionDescriptor"]["encode"](_0x324430["revisions"][_0x8b2128], writer["uint32"](26)["fork"]())["ldelim"]();
      }
      return writer;
    }, RevisionHistoryConnectResponse2["encodeDelimited"] = function(_0x402976, writer) {
      return this["encode"](_0x402976, writer)["ldelim"]();
    }, RevisionHistoryConnectResponse2["decode"] = function(_0x4090ba, length2) {
      _0x4090ba instanceof _0x476e3c || (_0x4090ba = _0x476e3c["create"](_0x4090ba));
      for (var _0x19f43e = void 0 === length2 ? _0x4090ba["len"] : _0x4090ba["pos"] + length2, _0x25adc2 = new $root["RevisionHistoryConnectResponse"](); _0x4090ba["pos"] < _0x19f43e; ) {
        var tag = _0x4090ba["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x25adc2["channel"] = _0x4090ba["string"]();
            break;
          case 2:
            _0x25adc2["requestId"] = _0x4090ba["uint32"]();
            break;
          case 3:
            _0x25adc2["revisions"] && _0x25adc2["revisions"]["length"] || (_0x25adc2["revisions"] = []), _0x25adc2["revisions"]["push"]($root["RevisionDescriptor"]["decode"](_0x4090ba, _0x4090ba["uint32"]()));
            break;
          default:
            _0x4090ba["skipType"](7 & tag);
        }
      }
      return _0x25adc2;
    }, RevisionHistoryConnectResponse2["decodeDelimited"] = function(_0x1314a6) {
      return _0x1314a6 instanceof _0x476e3c || (_0x1314a6 = new _0x476e3c(_0x1314a6)), this["decode"](_0x1314a6, _0x1314a6["uint32"]());
    }, RevisionHistoryConnectResponse2["verify"] = function(_0x4f4ab3) {
      if ("object" != typeof _0x4f4ab3 || null === _0x4f4ab3) return "object expected";
      if (null != _0x4f4ab3["channel"] && _0x4f4ab3["hasOwnProperty"]("channel") && !$util["isString"](_0x4f4ab3["channel"])) return "channel: string expected";
      if (null != _0x4f4ab3["requestId"] && _0x4f4ab3["hasOwnProperty"]("requestId") && !$util["isInteger"](_0x4f4ab3["requestId"])) return "requestId: integer expected";
      if (null != _0x4f4ab3["revisions"] && _0x4f4ab3["hasOwnProperty"]("revisions")) {
        if (!Array["isArray"](_0x4f4ab3["revisions"])) return "revisions: array expected";
        for (var _0x3d703a = 0; _0x3d703a < _0x4f4ab3["revisions"]["length"]; ++_0x3d703a) {
          var _0x3c5e02 = $root["RevisionDescriptor"]["verify"](_0x4f4ab3["revisions"][_0x3d703a]);
          if (_0x3c5e02) return "revisions." + _0x3c5e02;
        }
      }
      return null;
    }, RevisionHistoryConnectResponse2["fromObject"] = function(object) {
      if (object instanceof $root["RevisionHistoryConnectResponse"]) return object;
      var _0x43eccc = new $root["RevisionHistoryConnectResponse"]();
      if (null != object["channel"] && (_0x43eccc["channel"] = String(object["channel"])), null != object["requestId"] && (_0x43eccc["requestId"] = object["requestId"] >>> 0), object["revisions"]) {
        if (!Array["isArray"](object["revisions"])) throw TypeError(".RevisionHistoryConnectResponse.revisions: array expected");
        _0x43eccc["revisions"] = [];
        for (var _0x4faec2 = 0; _0x4faec2 < object["revisions"]["length"]; ++_0x4faec2) {
          if ("object" != typeof object["revisions"][_0x4faec2]) throw TypeError(".RevisionHistoryConnectResponse.revisions: object expected");
          _0x43eccc["revisions"][_0x4faec2] = $root["RevisionDescriptor"]["fromObject"](object["revisions"][_0x4faec2]);
        }
      }
      return _0x43eccc;
    }, RevisionHistoryConnectResponse2["toObject"] = function(_0x5b4773, options) {
      options || (options = {});
      var object = {};
      if ((options["arrays"] || options["defaults"]) && (object["revisions"] = []), options["defaults"] && (object["channel"] = "", object["requestId"] = 0), null != _0x5b4773["channel"] && _0x5b4773["hasOwnProperty"]("channel") && (object["channel"] = _0x5b4773["channel"]), null != _0x5b4773["requestId"] && _0x5b4773["hasOwnProperty"]("requestId") && (object["requestId"] = _0x5b4773["requestId"]), _0x5b4773["revisions"] && _0x5b4773["revisions"]["length"]) {
        object["revisions"] = [];
        for (var _0x5a9228 = 0; _0x5a9228 < _0x5b4773["revisions"]["length"]; ++_0x5a9228) object["revisions"][_0x5a9228] = $root["RevisionDescriptor"]["toObject"](_0x5b4773["revisions"][_0x5a9228], options);
      }
      return object;
    }, RevisionHistoryConnectResponse2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, RevisionHistoryConnectResponse2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/RevisionHistoryConnectResponse";
    }, RevisionHistoryConnectResponse2;
  }(), $root["RevisionHistoryGetRevisionResponse"] = function() {
    function RevisionHistoryGetRevisionResponse2(properties) {
      if (properties) {
        for (var _0x4346d2 = Object["keys"](properties), _0x5d599e = 0; _0x5d599e < _0x4346d2["length"]; ++_0x5d599e) null != properties[_0x4346d2[_0x5d599e]] && (this[_0x4346d2[_0x5d599e]] = properties[_0x4346d2[_0x5d599e]]);
      }
    }
    return RevisionHistoryGetRevisionResponse2["prototype"]["revisionId"] = "", RevisionHistoryGetRevisionResponse2["prototype"]["name"] = "", RevisionHistoryGetRevisionResponse2["prototype"]["creatorId"] = "", RevisionHistoryGetRevisionResponse2["prototype"]["authorsIds"] = "", RevisionHistoryGetRevisionResponse2["prototype"]["diffData"] = "", RevisionHistoryGetRevisionResponse2["prototype"]["createdAt"] = "", RevisionHistoryGetRevisionResponse2["prototype"]["attributes"] = "", RevisionHistoryGetRevisionResponse2["prototype"]["toVersion"] = 0, RevisionHistoryGetRevisionResponse2["prototype"]["fromVersion"] = 0, RevisionHistoryGetRevisionResponse2["prototype"]["isEmptyCurrent"] = false, RevisionHistoryGetRevisionResponse2["create"] = function(properties) {
      return new RevisionHistoryGetRevisionResponse2(properties);
    }, RevisionHistoryGetRevisionResponse2["encode"] = function(_0x4137cf, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x4137cf["revisionId"] && Object["hasOwnProperty"]["call"](_0x4137cf, "revisionId") && writer["uint32"](10)["string"](_0x4137cf["revisionId"]), null != _0x4137cf["name"] && Object["hasOwnProperty"]["call"](_0x4137cf, "name") && writer["uint32"](18)["string"](_0x4137cf["name"]), null != _0x4137cf["creatorId"] && Object["hasOwnProperty"]["call"](_0x4137cf, "creatorId") && writer["uint32"](26)["string"](_0x4137cf["creatorId"]), null != _0x4137cf["authorsIds"] && Object["hasOwnProperty"]["call"](_0x4137cf, "authorsIds") && writer["uint32"](34)["string"](_0x4137cf["authorsIds"]), null != _0x4137cf["diffData"] && Object["hasOwnProperty"]["call"](_0x4137cf, "diffData") && writer["uint32"](42)["string"](_0x4137cf["diffData"]), null != _0x4137cf["createdAt"] && Object["hasOwnProperty"]["call"](_0x4137cf, "createdAt") && writer["uint32"](50)["string"](_0x4137cf["createdAt"]), null != _0x4137cf["attributes"] && Object["hasOwnProperty"]["call"](_0x4137cf, "attributes") && writer["uint32"](58)["string"](_0x4137cf["attributes"]), null != _0x4137cf["toVersion"] && Object["hasOwnProperty"]["call"](_0x4137cf, "toVersion") && writer["uint32"](64)["uint32"](_0x4137cf["toVersion"]), null != _0x4137cf["fromVersion"] && Object["hasOwnProperty"]["call"](_0x4137cf, "fromVersion") && writer["uint32"](72)["uint32"](_0x4137cf["fromVersion"]), null != _0x4137cf["isEmptyCurrent"] && Object["hasOwnProperty"]["call"](_0x4137cf, "isEmptyCurrent") && writer["uint32"](80)["bool"](_0x4137cf["isEmptyCurrent"]), writer;
    }, RevisionHistoryGetRevisionResponse2["encodeDelimited"] = function(_0x48e04c, writer) {
      return this["encode"](_0x48e04c, writer)["ldelim"]();
    }, RevisionHistoryGetRevisionResponse2["decode"] = function(_0x52562a, length2) {
      _0x52562a instanceof _0x476e3c || (_0x52562a = _0x476e3c["create"](_0x52562a));
      for (var _0x3a8f64 = void 0 === length2 ? _0x52562a["len"] : _0x52562a["pos"] + length2, _0x4dcc27 = new $root["RevisionHistoryGetRevisionResponse"](); _0x52562a["pos"] < _0x3a8f64; ) {
        var tag = _0x52562a["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x4dcc27["revisionId"] = _0x52562a["string"]();
            break;
          case 2:
            _0x4dcc27["name"] = _0x52562a["string"]();
            break;
          case 3:
            _0x4dcc27["creatorId"] = _0x52562a["string"]();
            break;
          case 4:
            _0x4dcc27["authorsIds"] = _0x52562a["string"]();
            break;
          case 5:
            _0x4dcc27["diffData"] = _0x52562a["string"]();
            break;
          case 6:
            _0x4dcc27["createdAt"] = _0x52562a["string"]();
            break;
          case 7:
            _0x4dcc27["attributes"] = _0x52562a["string"]();
            break;
          case 8:
            _0x4dcc27["toVersion"] = _0x52562a["uint32"]();
            break;
          case 9:
            _0x4dcc27["fromVersion"] = _0x52562a["uint32"]();
            break;
          case 10:
            _0x4dcc27["isEmptyCurrent"] = _0x52562a["bool"]();
            break;
          default:
            _0x52562a["skipType"](7 & tag);
        }
      }
      return _0x4dcc27;
    }, RevisionHistoryGetRevisionResponse2["decodeDelimited"] = function(_0x2d8b37) {
      return _0x2d8b37 instanceof _0x476e3c || (_0x2d8b37 = new _0x476e3c(_0x2d8b37)), this["decode"](_0x2d8b37, _0x2d8b37["uint32"]());
    }, RevisionHistoryGetRevisionResponse2["verify"] = function(_0x459960) {
      return "object" != typeof _0x459960 || null === _0x459960 ? "object expected" : null != _0x459960["revisionId"] && _0x459960["hasOwnProperty"]("revisionId") && !$util["isString"](_0x459960["revisionId"]) ? "revisionId: string expected" : null != _0x459960["name"] && _0x459960["hasOwnProperty"]("name") && !$util["isString"](_0x459960["name"]) ? "name: string expected" : null != _0x459960["creatorId"] && _0x459960["hasOwnProperty"]("creatorId") && !$util["isString"](_0x459960["creatorId"]) ? "creatorId: string expected" : null != _0x459960["authorsIds"] && _0x459960["hasOwnProperty"]("authorsIds") && !$util["isString"](_0x459960["authorsIds"]) ? "authorsIds: string expected" : null != _0x459960["diffData"] && _0x459960["hasOwnProperty"]("diffData") && !$util["isString"](_0x459960["diffData"]) ? "diffData: string expected" : null != _0x459960["createdAt"] && _0x459960["hasOwnProperty"]("createdAt") && !$util["isString"](_0x459960["createdAt"]) ? "createdAt: string expected" : null != _0x459960["attributes"] && _0x459960["hasOwnProperty"]("attributes") && !$util["isString"](_0x459960["attributes"]) ? "attributes: string expected" : null != _0x459960["toVersion"] && _0x459960["hasOwnProperty"]("toVersion") && !$util["isInteger"](_0x459960["toVersion"]) ? "toVersion: integer expected" : null != _0x459960["fromVersion"] && _0x459960["hasOwnProperty"]("fromVersion") && !$util["isInteger"](_0x459960["fromVersion"]) ? "fromVersion: integer expected" : null != _0x459960["isEmptyCurrent"] && _0x459960["hasOwnProperty"]("isEmptyCurrent") && "boolean" != typeof _0x459960["isEmptyCurrent"] ? "isEmptyCurrent: boolean expected" : null;
    }, RevisionHistoryGetRevisionResponse2["fromObject"] = function(object) {
      if (object instanceof $root["RevisionHistoryGetRevisionResponse"]) return object;
      var _0x3cf7ff = new $root["RevisionHistoryGetRevisionResponse"]();
      return null != object["revisionId"] && (_0x3cf7ff["revisionId"] = String(object["revisionId"])), null != object["name"] && (_0x3cf7ff["name"] = String(object["name"])), null != object["creatorId"] && (_0x3cf7ff["creatorId"] = String(object["creatorId"])), null != object["authorsIds"] && (_0x3cf7ff["authorsIds"] = String(object["authorsIds"])), null != object["diffData"] && (_0x3cf7ff["diffData"] = String(object["diffData"])), null != object["createdAt"] && (_0x3cf7ff["createdAt"] = String(object["createdAt"])), null != object["attributes"] && (_0x3cf7ff["attributes"] = String(object["attributes"])), null != object["toVersion"] && (_0x3cf7ff["toVersion"] = object["toVersion"] >>> 0), null != object["fromVersion"] && (_0x3cf7ff["fromVersion"] = object["fromVersion"] >>> 0), null != object["isEmptyCurrent"] && (_0x3cf7ff["isEmptyCurrent"] = Boolean(object["isEmptyCurrent"])), _0x3cf7ff;
    }, RevisionHistoryGetRevisionResponse2["toObject"] = function(_0x140727, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["revisionId"] = "", object["name"] = "", object["creatorId"] = "", object["authorsIds"] = "", object["diffData"] = "", object["createdAt"] = "", object["attributes"] = "", object["toVersion"] = 0, object["fromVersion"] = 0, object["isEmptyCurrent"] = false), null != _0x140727["revisionId"] && _0x140727["hasOwnProperty"]("revisionId") && (object["revisionId"] = _0x140727["revisionId"]), null != _0x140727["name"] && _0x140727["hasOwnProperty"]("name") && (object["name"] = _0x140727["name"]), null != _0x140727["creatorId"] && _0x140727["hasOwnProperty"]("creatorId") && (object["creatorId"] = _0x140727["creatorId"]), null != _0x140727["authorsIds"] && _0x140727["hasOwnProperty"]("authorsIds") && (object["authorsIds"] = _0x140727["authorsIds"]), null != _0x140727["diffData"] && _0x140727["hasOwnProperty"]("diffData") && (object["diffData"] = _0x140727["diffData"]), null != _0x140727["createdAt"] && _0x140727["hasOwnProperty"]("createdAt") && (object["createdAt"] = _0x140727["createdAt"]), null != _0x140727["attributes"] && _0x140727["hasOwnProperty"]("attributes") && (object["attributes"] = _0x140727["attributes"]), null != _0x140727["toVersion"] && _0x140727["hasOwnProperty"]("toVersion") && (object["toVersion"] = _0x140727["toVersion"]), null != _0x140727["fromVersion"] && _0x140727["hasOwnProperty"]("fromVersion") && (object["fromVersion"] = _0x140727["fromVersion"]), null != _0x140727["isEmptyCurrent"] && _0x140727["hasOwnProperty"]("isEmptyCurrent") && (object["isEmptyCurrent"] = _0x140727["isEmptyCurrent"]), object;
    }, RevisionHistoryGetRevisionResponse2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, RevisionHistoryGetRevisionResponse2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/RevisionHistoryGetRevisionResponse";
    }, RevisionHistoryGetRevisionResponse2;
  }(), $root["RevisionHistoryUpdateRevisionsResponse"] = function() {
    function RevisionHistoryUpdateRevisionsResponse2(properties) {
      if (properties) {
        for (var _0x39ee14 = Object["keys"](properties), _0x52e83d = 0; _0x52e83d < _0x39ee14["length"]; ++_0x52e83d) null != properties[_0x39ee14[_0x52e83d]] && (this[_0x39ee14[_0x52e83d]] = properties[_0x39ee14[_0x52e83d]]);
      }
    }
    return RevisionHistoryUpdateRevisionsResponse2["prototype"]["requestId"] = 0, RevisionHistoryUpdateRevisionsResponse2["create"] = function(properties) {
      return new RevisionHistoryUpdateRevisionsResponse2(properties);
    }, RevisionHistoryUpdateRevisionsResponse2["encode"] = function(_0x302315, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x302315["requestId"] && Object["hasOwnProperty"]["call"](_0x302315, "requestId") && writer["uint32"](8)["uint32"](_0x302315["requestId"]), writer;
    }, RevisionHistoryUpdateRevisionsResponse2["encodeDelimited"] = function(_0x6b1e75, writer) {
      return this["encode"](_0x6b1e75, writer)["ldelim"]();
    }, RevisionHistoryUpdateRevisionsResponse2["decode"] = function(_0x253adb, length2) {
      _0x253adb instanceof _0x476e3c || (_0x253adb = _0x476e3c["create"](_0x253adb));
      for (var _0x1ada45 = void 0 === length2 ? _0x253adb["len"] : _0x253adb["pos"] + length2, _0x48ac21 = new $root["RevisionHistoryUpdateRevisionsResponse"](); _0x253adb["pos"] < _0x1ada45; ) {
        var tag = _0x253adb["uint32"]();
        if (tag >>> 3 == 1) _0x48ac21["requestId"] = _0x253adb["uint32"]();
        else _0x253adb["skipType"](7 & tag);
      }
      return _0x48ac21;
    }, RevisionHistoryUpdateRevisionsResponse2["decodeDelimited"] = function(_0x4cabee) {
      return _0x4cabee instanceof _0x476e3c || (_0x4cabee = new _0x476e3c(_0x4cabee)), this["decode"](_0x4cabee, _0x4cabee["uint32"]());
    }, RevisionHistoryUpdateRevisionsResponse2["verify"] = function(_0x4a8ec9) {
      return "object" != typeof _0x4a8ec9 || null === _0x4a8ec9 ? "object expected" : null != _0x4a8ec9["requestId"] && _0x4a8ec9["hasOwnProperty"]("requestId") && !$util["isInteger"](_0x4a8ec9["requestId"]) ? "requestId: integer expected" : null;
    }, RevisionHistoryUpdateRevisionsResponse2["fromObject"] = function(object) {
      if (object instanceof $root["RevisionHistoryUpdateRevisionsResponse"]) return object;
      var _0x2675f5 = new $root["RevisionHistoryUpdateRevisionsResponse"]();
      return null != object["requestId"] && (_0x2675f5["requestId"] = object["requestId"] >>> 0), _0x2675f5;
    }, RevisionHistoryUpdateRevisionsResponse2["toObject"] = function(_0x20a444, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["requestId"] = 0), null != _0x20a444["requestId"] && _0x20a444["hasOwnProperty"]("requestId") && (object["requestId"] = _0x20a444["requestId"]), object;
    }, RevisionHistoryUpdateRevisionsResponse2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, RevisionHistoryUpdateRevisionsResponse2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/RevisionHistoryUpdateRevisionsResponse";
    }, RevisionHistoryUpdateRevisionsResponse2;
  }(), $root["SessionsSocketDescriptor"] = function() {
    function SessionsSocketDescriptor(properties) {
      if (this["permissions"] = [], properties) {
        for (var _0x495dc4 = Object["keys"](properties), _0x35077a = 0; _0x35077a < _0x495dc4["length"]; ++_0x35077a) null != properties[_0x495dc4[_0x35077a]] && (this[_0x495dc4[_0x35077a]] = properties[_0x495dc4[_0x35077a]]);
      }
    }
    return SessionsSocketDescriptor["prototype"]["session"] = "", SessionsSocketDescriptor["prototype"]["user"] = "", SessionsSocketDescriptor["prototype"]["role"] = "", SessionsSocketDescriptor["prototype"]["permissions"] = $util["emptyArray"], SessionsSocketDescriptor["create"] = function(properties) {
      return new SessionsSocketDescriptor(properties);
    }, SessionsSocketDescriptor["encode"] = function(_0x5e1346, writer) {
      if (writer || (writer = $Writer["create"]()), null != _0x5e1346["session"] && Object["hasOwnProperty"]["call"](_0x5e1346, "session") && writer["uint32"](10)["string"](_0x5e1346["session"]), null != _0x5e1346["user"] && Object["hasOwnProperty"]["call"](_0x5e1346, "user") && writer["uint32"](18)["string"](_0x5e1346["user"]), null != _0x5e1346["role"] && Object["hasOwnProperty"]["call"](_0x5e1346, "role") && writer["uint32"](26)["string"](_0x5e1346["role"]), null != _0x5e1346["permissions"] && _0x5e1346["permissions"]["length"]) {
        for (var _0x45f540 = 0; _0x45f540 < _0x5e1346["permissions"]["length"]; ++_0x45f540) writer["uint32"](34)["string"](_0x5e1346["permissions"][_0x45f540]);
      }
      return writer;
    }, SessionsSocketDescriptor["encodeDelimited"] = function(_0x5efaef, writer) {
      return this["encode"](_0x5efaef, writer)["ldelim"]();
    }, SessionsSocketDescriptor["decode"] = function(_0x4cc1b9, length2) {
      _0x4cc1b9 instanceof _0x476e3c || (_0x4cc1b9 = _0x476e3c["create"](_0x4cc1b9));
      for (var _0x4336e8 = void 0 === length2 ? _0x4cc1b9["len"] : _0x4cc1b9["pos"] + length2, _0x1a06ca = new $root["SessionsSocketDescriptor"](); _0x4cc1b9["pos"] < _0x4336e8; ) {
        var tag = _0x4cc1b9["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x1a06ca["session"] = _0x4cc1b9["string"]();
            break;
          case 2:
            _0x1a06ca["user"] = _0x4cc1b9["string"]();
            break;
          case 3:
            _0x1a06ca["role"] = _0x4cc1b9["string"]();
            break;
          case 4:
            _0x1a06ca["permissions"] && _0x1a06ca["permissions"]["length"] || (_0x1a06ca["permissions"] = []), _0x1a06ca["permissions"]["push"](_0x4cc1b9["string"]());
            break;
          default:
            _0x4cc1b9["skipType"](7 & tag);
        }
      }
      return _0x1a06ca;
    }, SessionsSocketDescriptor["decodeDelimited"] = function(_0x55ad4a) {
      return _0x55ad4a instanceof _0x476e3c || (_0x55ad4a = new _0x476e3c(_0x55ad4a)), this["decode"](_0x55ad4a, _0x55ad4a["uint32"]());
    }, SessionsSocketDescriptor["verify"] = function(_0x16a82d) {
      if ("object" != typeof _0x16a82d || null === _0x16a82d) return "object expected";
      if (null != _0x16a82d["session"] && _0x16a82d["hasOwnProperty"]("session") && !$util["isString"](_0x16a82d["session"])) return "session: string expected";
      if (null != _0x16a82d["user"] && _0x16a82d["hasOwnProperty"]("user") && !$util["isString"](_0x16a82d["user"])) return "user: string expected";
      if (null != _0x16a82d["role"] && _0x16a82d["hasOwnProperty"]("role") && !$util["isString"](_0x16a82d["role"])) return "role: string expected";
      if (null != _0x16a82d["permissions"] && _0x16a82d["hasOwnProperty"]("permissions")) {
        if (!Array["isArray"](_0x16a82d["permissions"])) return "permissions: array expected";
        for (var _0x29115f = 0; _0x29115f < _0x16a82d["permissions"]["length"]; ++_0x29115f) if (!$util["isString"](_0x16a82d["permissions"][_0x29115f])) return "permissions: string[] expected";
      }
      return null;
    }, SessionsSocketDescriptor["fromObject"] = function(object) {
      if (object instanceof $root["SessionsSocketDescriptor"]) return object;
      var _0xa23686 = new $root["SessionsSocketDescriptor"]();
      if (null != object["session"] && (_0xa23686["session"] = String(object["session"])), null != object["user"] && (_0xa23686["user"] = String(object["user"])), null != object["role"] && (_0xa23686["role"] = String(object["role"])), object["permissions"]) {
        if (!Array["isArray"](object["permissions"])) throw TypeError(".SessionsSocketDescriptor.permissions: array expected");
        _0xa23686["permissions"] = [];
        for (var _0x2cd0fe = 0; _0x2cd0fe < object["permissions"]["length"]; ++_0x2cd0fe) _0xa23686["permissions"][_0x2cd0fe] = String(object["permissions"][_0x2cd0fe]);
      }
      return _0xa23686;
    }, SessionsSocketDescriptor["toObject"] = function(_0x36dbb6, options) {
      options || (options = {});
      var object = {};
      if ((options["arrays"] || options["defaults"]) && (object["permissions"] = []), options["defaults"] && (object["session"] = "", object["user"] = "", object["role"] = ""), null != _0x36dbb6["session"] && _0x36dbb6["hasOwnProperty"]("session") && (object["session"] = _0x36dbb6["session"]), null != _0x36dbb6["user"] && _0x36dbb6["hasOwnProperty"]("user") && (object["user"] = _0x36dbb6["user"]), null != _0x36dbb6["role"] && _0x36dbb6["hasOwnProperty"]("role") && (object["role"] = _0x36dbb6["role"]), _0x36dbb6["permissions"] && _0x36dbb6["permissions"]["length"]) {
        object["permissions"] = [];
        for (var _0x524b82 = 0; _0x524b82 < _0x36dbb6["permissions"]["length"]; ++_0x524b82) object["permissions"][_0x524b82] = _0x36dbb6["permissions"][_0x524b82];
      }
      return object;
    }, SessionsSocketDescriptor["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, SessionsSocketDescriptor["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/SessionsSocketDescriptor";
    }, SessionsSocketDescriptor;
  }(), $root["SessionsConnectMessage"] = function() {
    function SessionsConnectMessage2(properties) {
      if (properties) {
        for (var _0x13cb83 = Object["keys"](properties), _0x306cd5 = 0; _0x306cd5 < _0x13cb83["length"]; ++_0x306cd5) null != properties[_0x13cb83[_0x306cd5]] && (this[_0x13cb83[_0x306cd5]] = properties[_0x13cb83[_0x306cd5]]);
      }
    }
    return SessionsConnectMessage2["prototype"]["id"] = "", SessionsConnectMessage2["prototype"]["sessionType"] = 0, SessionsConnectMessage2["create"] = function(properties) {
      return new SessionsConnectMessage2(properties);
    }, SessionsConnectMessage2["encode"] = function(_0x18869f, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x18869f["id"] && Object["hasOwnProperty"]["call"](_0x18869f, "id") && writer["uint32"](10)["string"](_0x18869f["id"]), null != _0x18869f["sessionType"] && Object["hasOwnProperty"]["call"](_0x18869f, "sessionType") && writer["uint32"](16)["uint32"](_0x18869f["sessionType"]), writer;
    }, SessionsConnectMessage2["encodeDelimited"] = function(_0x3a7d79, writer) {
      return this["encode"](_0x3a7d79, writer)["ldelim"]();
    }, SessionsConnectMessage2["decode"] = function(_0x2d85bc, length2) {
      _0x2d85bc instanceof _0x476e3c || (_0x2d85bc = _0x476e3c["create"](_0x2d85bc));
      for (var _0x129073 = void 0 === length2 ? _0x2d85bc["len"] : _0x2d85bc["pos"] + length2, _0x1e3f4c = new $root["SessionsConnectMessage"](); _0x2d85bc["pos"] < _0x129073; ) {
        var tag = _0x2d85bc["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x1e3f4c["id"] = _0x2d85bc["string"]();
            break;
          case 2:
            _0x1e3f4c["sessionType"] = _0x2d85bc["uint32"]();
            break;
          default:
            _0x2d85bc["skipType"](7 & tag);
        }
      }
      return _0x1e3f4c;
    }, SessionsConnectMessage2["decodeDelimited"] = function(_0x4cbdaf) {
      return _0x4cbdaf instanceof _0x476e3c || (_0x4cbdaf = new _0x476e3c(_0x4cbdaf)), this["decode"](_0x4cbdaf, _0x4cbdaf["uint32"]());
    }, SessionsConnectMessage2["verify"] = function(_0x36a3c2) {
      return "object" != typeof _0x36a3c2 || null === _0x36a3c2 ? "object expected" : null != _0x36a3c2["id"] && _0x36a3c2["hasOwnProperty"]("id") && !$util["isString"](_0x36a3c2["id"]) ? "id: string expected" : null != _0x36a3c2["sessionType"] && _0x36a3c2["hasOwnProperty"]("sessionType") && !$util["isInteger"](_0x36a3c2["sessionType"]) ? "sessionType: integer expected" : null;
    }, SessionsConnectMessage2["fromObject"] = function(object) {
      if (object instanceof $root["SessionsConnectMessage"]) return object;
      var _0x324fe0 = new $root["SessionsConnectMessage"]();
      return null != object["id"] && (_0x324fe0["id"] = String(object["id"])), null != object["sessionType"] && (_0x324fe0["sessionType"] = object["sessionType"] >>> 0), _0x324fe0;
    }, SessionsConnectMessage2["toObject"] = function(_0x27f0d7, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["id"] = "", object["sessionType"] = 0), null != _0x27f0d7["id"] && _0x27f0d7["hasOwnProperty"]("id") && (object["id"] = _0x27f0d7["id"]), null != _0x27f0d7["sessionType"] && _0x27f0d7["hasOwnProperty"]("sessionType") && (object["sessionType"] = _0x27f0d7["sessionType"]), object;
    }, SessionsConnectMessage2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, SessionsConnectMessage2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/SessionsConnectMessage";
    }, SessionsConnectMessage2;
  }(), $root["SocketConnectMessage"] = function() {
    function SocketConnectMessage2(properties) {
      if (this["permissions"] = [], properties) {
        for (var _0x44d9f0 = Object["keys"](properties), _0x64b31 = 0; _0x64b31 < _0x44d9f0["length"]; ++_0x64b31) null != properties[_0x44d9f0[_0x64b31]] && (this[_0x44d9f0[_0x64b31]] = properties[_0x44d9f0[_0x64b31]]);
      }
    }
    return SocketConnectMessage2["prototype"]["id"] = "", SocketConnectMessage2["prototype"]["userId"] = "", SocketConnectMessage2["prototype"]["role"] = "", SocketConnectMessage2["prototype"]["permissions"] = $util["emptyArray"], SocketConnectMessage2["create"] = function(properties) {
      return new SocketConnectMessage2(properties);
    }, SocketConnectMessage2["encode"] = function(_0xfc3b4c, writer) {
      if (writer || (writer = $Writer["create"]()), null != _0xfc3b4c["id"] && Object["hasOwnProperty"]["call"](_0xfc3b4c, "id") && writer["uint32"](10)["string"](_0xfc3b4c["id"]), null != _0xfc3b4c["userId"] && Object["hasOwnProperty"]["call"](_0xfc3b4c, "userId") && writer["uint32"](18)["string"](_0xfc3b4c["userId"]), null != _0xfc3b4c["role"] && Object["hasOwnProperty"]["call"](_0xfc3b4c, "role") && writer["uint32"](26)["string"](_0xfc3b4c["role"]), null != _0xfc3b4c["permissions"] && _0xfc3b4c["permissions"]["length"]) {
        for (var _0xa7169b = 0; _0xa7169b < _0xfc3b4c["permissions"]["length"]; ++_0xa7169b) writer["uint32"](34)["string"](_0xfc3b4c["permissions"][_0xa7169b]);
      }
      return writer;
    }, SocketConnectMessage2["encodeDelimited"] = function(_0x554f1d, writer) {
      return this["encode"](_0x554f1d, writer)["ldelim"]();
    }, SocketConnectMessage2["decode"] = function(_0x4d867f, length2) {
      _0x4d867f instanceof _0x476e3c || (_0x4d867f = _0x476e3c["create"](_0x4d867f));
      for (var _0x5b63c3 = void 0 === length2 ? _0x4d867f["len"] : _0x4d867f["pos"] + length2, _0x5207f8 = new $root["SocketConnectMessage"](); _0x4d867f["pos"] < _0x5b63c3; ) {
        var tag = _0x4d867f["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x5207f8["id"] = _0x4d867f["string"]();
            break;
          case 2:
            _0x5207f8["userId"] = _0x4d867f["string"]();
            break;
          case 3:
            _0x5207f8["role"] = _0x4d867f["string"]();
            break;
          case 4:
            _0x5207f8["permissions"] && _0x5207f8["permissions"]["length"] || (_0x5207f8["permissions"] = []), _0x5207f8["permissions"]["push"](_0x4d867f["string"]());
            break;
          default:
            _0x4d867f["skipType"](7 & tag);
        }
      }
      return _0x5207f8;
    }, SocketConnectMessage2["decodeDelimited"] = function(_0x4d10c4) {
      return _0x4d10c4 instanceof _0x476e3c || (_0x4d10c4 = new _0x476e3c(_0x4d10c4)), this["decode"](_0x4d10c4, _0x4d10c4["uint32"]());
    }, SocketConnectMessage2["verify"] = function(_0xfe9b36) {
      if ("object" != typeof _0xfe9b36 || null === _0xfe9b36) return "object expected";
      if (null != _0xfe9b36["id"] && _0xfe9b36["hasOwnProperty"]("id") && !$util["isString"](_0xfe9b36["id"])) return "id: string expected";
      if (null != _0xfe9b36["userId"] && _0xfe9b36["hasOwnProperty"]("userId") && !$util["isString"](_0xfe9b36["userId"])) return "userId: string expected";
      if (null != _0xfe9b36["role"] && _0xfe9b36["hasOwnProperty"]("role") && !$util["isString"](_0xfe9b36["role"])) return "role: string expected";
      if (null != _0xfe9b36["permissions"] && _0xfe9b36["hasOwnProperty"]("permissions")) {
        if (!Array["isArray"](_0xfe9b36["permissions"])) return "permissions: array expected";
        for (var _0x1a2ca7 = 0; _0x1a2ca7 < _0xfe9b36["permissions"]["length"]; ++_0x1a2ca7) if (!$util["isString"](_0xfe9b36["permissions"][_0x1a2ca7])) return "permissions: string[] expected";
      }
      return null;
    }, SocketConnectMessage2["fromObject"] = function(object) {
      if (object instanceof $root["SocketConnectMessage"]) return object;
      var _0x5ae0d4 = new $root["SocketConnectMessage"]();
      if (null != object["id"] && (_0x5ae0d4["id"] = String(object["id"])), null != object["userId"] && (_0x5ae0d4["userId"] = String(object["userId"])), null != object["role"] && (_0x5ae0d4["role"] = String(object["role"])), object["permissions"]) {
        if (!Array["isArray"](object["permissions"])) throw TypeError(".SocketConnectMessage.permissions: array expected");
        _0x5ae0d4["permissions"] = [];
        for (var _0x55f56d = 0; _0x55f56d < object["permissions"]["length"]; ++_0x55f56d) _0x5ae0d4["permissions"][_0x55f56d] = String(object["permissions"][_0x55f56d]);
      }
      return _0x5ae0d4;
    }, SocketConnectMessage2["toObject"] = function(_0x111f8d, options) {
      options || (options = {});
      var object = {};
      if ((options["arrays"] || options["defaults"]) && (object["permissions"] = []), options["defaults"] && (object["id"] = "", object["userId"] = "", object["role"] = ""), null != _0x111f8d["id"] && _0x111f8d["hasOwnProperty"]("id") && (object["id"] = _0x111f8d["id"]), null != _0x111f8d["userId"] && _0x111f8d["hasOwnProperty"]("userId") && (object["userId"] = _0x111f8d["userId"]), null != _0x111f8d["role"] && _0x111f8d["hasOwnProperty"]("role") && (object["role"] = _0x111f8d["role"]), _0x111f8d["permissions"] && _0x111f8d["permissions"]["length"]) {
        object["permissions"] = [];
        for (var _0x2a2efb = 0; _0x2a2efb < _0x111f8d["permissions"]["length"]; ++_0x2a2efb) object["permissions"][_0x2a2efb] = _0x111f8d["permissions"][_0x2a2efb];
      }
      return object;
    }, SocketConnectMessage2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, SocketConnectMessage2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/SocketConnectMessage";
    }, SocketConnectMessage2;
  }(), $root["SocketDisconnectMessage"] = function() {
    function SocketDisconnectMessage2(properties) {
      if (properties) {
        for (var _0x1e20d9 = Object["keys"](properties), _0xe7fb39 = 0; _0xe7fb39 < _0x1e20d9["length"]; ++_0xe7fb39) null != properties[_0x1e20d9[_0xe7fb39]] && (this[_0x1e20d9[_0xe7fb39]] = properties[_0x1e20d9[_0xe7fb39]]);
      }
    }
    return SocketDisconnectMessage2["prototype"]["id"] = "", SocketDisconnectMessage2["create"] = function(properties) {
      return new SocketDisconnectMessage2(properties);
    }, SocketDisconnectMessage2["encode"] = function(_0x1bc05b, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x1bc05b["id"] && Object["hasOwnProperty"]["call"](_0x1bc05b, "id") && writer["uint32"](10)["string"](_0x1bc05b["id"]), writer;
    }, SocketDisconnectMessage2["encodeDelimited"] = function(_0x4fe0ef, writer) {
      return this["encode"](_0x4fe0ef, writer)["ldelim"]();
    }, SocketDisconnectMessage2["decode"] = function(_0x1145f4, length2) {
      _0x1145f4 instanceof _0x476e3c || (_0x1145f4 = _0x476e3c["create"](_0x1145f4));
      for (var _0x527fea = void 0 === length2 ? _0x1145f4["len"] : _0x1145f4["pos"] + length2, _0x4df12d = new $root["SocketDisconnectMessage"](); _0x1145f4["pos"] < _0x527fea; ) {
        var tag = _0x1145f4["uint32"]();
        if (tag >>> 3 == 1) _0x4df12d["id"] = _0x1145f4["string"]();
        else _0x1145f4["skipType"](7 & tag);
      }
      return _0x4df12d;
    }, SocketDisconnectMessage2["decodeDelimited"] = function(_0x2a7d04) {
      return _0x2a7d04 instanceof _0x476e3c || (_0x2a7d04 = new _0x476e3c(_0x2a7d04)), this["decode"](_0x2a7d04, _0x2a7d04["uint32"]());
    }, SocketDisconnectMessage2["verify"] = function(_0x4a5caf) {
      return "object" != typeof _0x4a5caf || null === _0x4a5caf ? "object expected" : null != _0x4a5caf["id"] && _0x4a5caf["hasOwnProperty"]("id") && !$util["isString"](_0x4a5caf["id"]) ? "id: string expected" : null;
    }, SocketDisconnectMessage2["fromObject"] = function(object) {
      if (object instanceof $root["SocketDisconnectMessage"]) return object;
      var _0x152c85 = new $root["SocketDisconnectMessage"]();
      return null != object["id"] && (_0x152c85["id"] = String(object["id"])), _0x152c85;
    }, SocketDisconnectMessage2["toObject"] = function(_0x520b23, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["id"] = ""), null != _0x520b23["id"] && _0x520b23["hasOwnProperty"]("id") && (object["id"] = _0x520b23["id"]), object;
    }, SocketDisconnectMessage2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, SocketDisconnectMessage2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/SocketDisconnectMessage";
    }, SocketDisconnectMessage2;
  }(), $root["SessionsConnectResponse"] = function() {
    function SessionsConnectResponse2(properties) {
      if (this["sockets"] = [], properties) {
        for (var _0x590981 = Object["keys"](properties), _0x40f48f = 0; _0x40f48f < _0x590981["length"]; ++_0x40f48f) null != properties[_0x590981[_0x40f48f]] && (this[_0x590981[_0x40f48f]] = properties[_0x590981[_0x40f48f]]);
      }
    }
    return SessionsConnectResponse2["prototype"]["channel"] = "", SessionsConnectResponse2["prototype"]["sockets"] = $util["emptyArray"], SessionsConnectResponse2["create"] = function(properties) {
      return new SessionsConnectResponse2(properties);
    }, SessionsConnectResponse2["encode"] = function(_0x364345, writer) {
      if (writer || (writer = $Writer["create"]()), null != _0x364345["channel"] && Object["hasOwnProperty"]["call"](_0x364345, "channel") && writer["uint32"](10)["string"](_0x364345["channel"]), null != _0x364345["sockets"] && _0x364345["sockets"]["length"]) {
        for (var _0x359bba = 0; _0x359bba < _0x364345["sockets"]["length"]; ++_0x359bba) $root["SessionsSocketDescriptor"]["encode"](_0x364345["sockets"][_0x359bba], writer["uint32"](18)["fork"]())["ldelim"]();
      }
      return writer;
    }, SessionsConnectResponse2["encodeDelimited"] = function(_0x532c66, writer) {
      return this["encode"](_0x532c66, writer)["ldelim"]();
    }, SessionsConnectResponse2["decode"] = function(_0x392074, length2) {
      _0x392074 instanceof _0x476e3c || (_0x392074 = _0x476e3c["create"](_0x392074));
      for (var _0x153ed3 = void 0 === length2 ? _0x392074["len"] : _0x392074["pos"] + length2, _0x3b2e57 = new $root["SessionsConnectResponse"](); _0x392074["pos"] < _0x153ed3; ) {
        var tag = _0x392074["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x3b2e57["channel"] = _0x392074["string"]();
            break;
          case 2:
            _0x3b2e57["sockets"] && _0x3b2e57["sockets"]["length"] || (_0x3b2e57["sockets"] = []), _0x3b2e57["sockets"]["push"]($root["SessionsSocketDescriptor"]["decode"](_0x392074, _0x392074["uint32"]()));
            break;
          default:
            _0x392074["skipType"](7 & tag);
        }
      }
      return _0x3b2e57;
    }, SessionsConnectResponse2["decodeDelimited"] = function(_0x3402c0) {
      return _0x3402c0 instanceof _0x476e3c || (_0x3402c0 = new _0x476e3c(_0x3402c0)), this["decode"](_0x3402c0, _0x3402c0["uint32"]());
    }, SessionsConnectResponse2["verify"] = function(_0xc1152b) {
      if ("object" != typeof _0xc1152b || null === _0xc1152b) return "object expected";
      if (null != _0xc1152b["channel"] && _0xc1152b["hasOwnProperty"]("channel") && !$util["isString"](_0xc1152b["channel"])) return "channel: string expected";
      if (null != _0xc1152b["sockets"] && _0xc1152b["hasOwnProperty"]("sockets")) {
        if (!Array["isArray"](_0xc1152b["sockets"])) return "sockets: array expected";
        for (var _0x244c65 = 0; _0x244c65 < _0xc1152b["sockets"]["length"]; ++_0x244c65) {
          var _0x3f6766 = $root["SessionsSocketDescriptor"]["verify"](_0xc1152b["sockets"][_0x244c65]);
          if (_0x3f6766) return "sockets." + _0x3f6766;
        }
      }
      return null;
    }, SessionsConnectResponse2["fromObject"] = function(object) {
      if (object instanceof $root["SessionsConnectResponse"]) return object;
      var _0xa6e703 = new $root["SessionsConnectResponse"]();
      if (null != object["channel"] && (_0xa6e703["channel"] = String(object["channel"])), object["sockets"]) {
        if (!Array["isArray"](object["sockets"])) throw TypeError(".SessionsConnectResponse.sockets: array expected");
        _0xa6e703["sockets"] = [];
        for (var _0x3f5c40 = 0; _0x3f5c40 < object["sockets"]["length"]; ++_0x3f5c40) {
          if ("object" != typeof object["sockets"][_0x3f5c40]) throw TypeError(".SessionsConnectResponse.sockets: object expected");
          _0xa6e703["sockets"][_0x3f5c40] = $root["SessionsSocketDescriptor"]["fromObject"](object["sockets"][_0x3f5c40]);
        }
      }
      return _0xa6e703;
    }, SessionsConnectResponse2["toObject"] = function(_0x29aa51, options) {
      options || (options = {});
      var object = {};
      if ((options["arrays"] || options["defaults"]) && (object["sockets"] = []), options["defaults"] && (object["channel"] = ""), null != _0x29aa51["channel"] && _0x29aa51["hasOwnProperty"]("channel") && (object["channel"] = _0x29aa51["channel"]), _0x29aa51["sockets"] && _0x29aa51["sockets"]["length"]) {
        object["sockets"] = [];
        for (var _0xbcfd42 = 0; _0xbcfd42 < _0x29aa51["sockets"]["length"]; ++_0xbcfd42) object["sockets"][_0xbcfd42] = $root["SessionsSocketDescriptor"]["toObject"](_0x29aa51["sockets"][_0xbcfd42], options);
      }
      return object;
    }, SessionsConnectResponse2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, SessionsConnectResponse2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/SessionsConnectResponse";
    }, SessionsConnectResponse2;
  }(), $root["SuggestionDescriptor"] = function() {
    function SuggestionDescriptor2(properties) {
      if (properties) {
        for (var _0x41af60 = Object["keys"](properties), _0x2b2247 = 0; _0x2b2247 < _0x41af60["length"]; ++_0x2b2247) null != properties[_0x41af60[_0x2b2247]] && (this[_0x41af60[_0x2b2247]] = properties[_0x41af60[_0x2b2247]]);
      }
    }
    return SuggestionDescriptor2["prototype"]["id"] = "", SuggestionDescriptor2["prototype"]["authorId"] = "", SuggestionDescriptor2["prototype"]["type"] = "", SuggestionDescriptor2["prototype"]["createdAt"] = "", SuggestionDescriptor2["prototype"]["data"] = "", SuggestionDescriptor2["prototype"]["hasComments"] = false, SuggestionDescriptor2["prototype"]["state"] = "", SuggestionDescriptor2["prototype"]["attributes"] = "", SuggestionDescriptor2["create"] = function(properties) {
      return new SuggestionDescriptor2(properties);
    }, SuggestionDescriptor2["encode"] = function(_0xeb0b59, writer) {
      return writer || (writer = $Writer["create"]()), null != _0xeb0b59["id"] && Object["hasOwnProperty"]["call"](_0xeb0b59, "id") && writer["uint32"](10)["string"](_0xeb0b59["id"]), null != _0xeb0b59["authorId"] && Object["hasOwnProperty"]["call"](_0xeb0b59, "authorId") && writer["uint32"](18)["string"](_0xeb0b59["authorId"]), null != _0xeb0b59["type"] && Object["hasOwnProperty"]["call"](_0xeb0b59, "type") && writer["uint32"](26)["string"](_0xeb0b59["type"]), null != _0xeb0b59["createdAt"] && Object["hasOwnProperty"]["call"](_0xeb0b59, "createdAt") && writer["uint32"](34)["string"](_0xeb0b59["createdAt"]), null != _0xeb0b59["data"] && Object["hasOwnProperty"]["call"](_0xeb0b59, "data") && writer["uint32"](42)["string"](_0xeb0b59["data"]), null != _0xeb0b59["hasComments"] && Object["hasOwnProperty"]["call"](_0xeb0b59, "hasComments") && writer["uint32"](48)["bool"](_0xeb0b59["hasComments"]), null != _0xeb0b59["state"] && Object["hasOwnProperty"]["call"](_0xeb0b59, "state") && writer["uint32"](58)["string"](_0xeb0b59["state"]), null != _0xeb0b59["attributes"] && Object["hasOwnProperty"]["call"](_0xeb0b59, "attributes") && writer["uint32"](66)["string"](_0xeb0b59["attributes"]), writer;
    }, SuggestionDescriptor2["encodeDelimited"] = function(_0x46acc2, writer) {
      return this["encode"](_0x46acc2, writer)["ldelim"]();
    }, SuggestionDescriptor2["decode"] = function(_0x271129, length2) {
      _0x271129 instanceof _0x476e3c || (_0x271129 = _0x476e3c["create"](_0x271129));
      for (var _0x492ecf = void 0 === length2 ? _0x271129["len"] : _0x271129["pos"] + length2, _0xf8303c = new $root["SuggestionDescriptor"](); _0x271129["pos"] < _0x492ecf; ) {
        var tag = _0x271129["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0xf8303c["id"] = _0x271129["string"]();
            break;
          case 2:
            _0xf8303c["authorId"] = _0x271129["string"]();
            break;
          case 3:
            _0xf8303c["type"] = _0x271129["string"]();
            break;
          case 4:
            _0xf8303c["createdAt"] = _0x271129["string"]();
            break;
          case 5:
            _0xf8303c["data"] = _0x271129["string"]();
            break;
          case 6:
            _0xf8303c["hasComments"] = _0x271129["bool"]();
            break;
          case 7:
            _0xf8303c["state"] = _0x271129["string"]();
            break;
          case 8:
            _0xf8303c["attributes"] = _0x271129["string"]();
            break;
          default:
            _0x271129["skipType"](7 & tag);
        }
      }
      return _0xf8303c;
    }, SuggestionDescriptor2["decodeDelimited"] = function(_0xef570a) {
      return _0xef570a instanceof _0x476e3c || (_0xef570a = new _0x476e3c(_0xef570a)), this["decode"](_0xef570a, _0xef570a["uint32"]());
    }, SuggestionDescriptor2["verify"] = function(_0x3f653e) {
      return "object" != typeof _0x3f653e || null === _0x3f653e ? "object expected" : null != _0x3f653e["id"] && _0x3f653e["hasOwnProperty"]("id") && !$util["isString"](_0x3f653e["id"]) ? "id: string expected" : null != _0x3f653e["authorId"] && _0x3f653e["hasOwnProperty"]("authorId") && !$util["isString"](_0x3f653e["authorId"]) ? "authorId: string expected" : null != _0x3f653e["type"] && _0x3f653e["hasOwnProperty"]("type") && !$util["isString"](_0x3f653e["type"]) ? "type: string expected" : null != _0x3f653e["createdAt"] && _0x3f653e["hasOwnProperty"]("createdAt") && !$util["isString"](_0x3f653e["createdAt"]) ? "createdAt: string expected" : null != _0x3f653e["data"] && _0x3f653e["hasOwnProperty"]("data") && !$util["isString"](_0x3f653e["data"]) ? "data: string expected" : null != _0x3f653e["hasComments"] && _0x3f653e["hasOwnProperty"]("hasComments") && "boolean" != typeof _0x3f653e["hasComments"] ? "hasComments: boolean expected" : null != _0x3f653e["state"] && _0x3f653e["hasOwnProperty"]("state") && !$util["isString"](_0x3f653e["state"]) ? "state: string expected" : null != _0x3f653e["attributes"] && _0x3f653e["hasOwnProperty"]("attributes") && !$util["isString"](_0x3f653e["attributes"]) ? "attributes: string expected" : null;
    }, SuggestionDescriptor2["fromObject"] = function(object) {
      if (object instanceof $root["SuggestionDescriptor"]) return object;
      var _0xf0fba = new $root["SuggestionDescriptor"]();
      return null != object["id"] && (_0xf0fba["id"] = String(object["id"])), null != object["authorId"] && (_0xf0fba["authorId"] = String(object["authorId"])), null != object["type"] && (_0xf0fba["type"] = String(object["type"])), null != object["createdAt"] && (_0xf0fba["createdAt"] = String(object["createdAt"])), null != object["data"] && (_0xf0fba["data"] = String(object["data"])), null != object["hasComments"] && (_0xf0fba["hasComments"] = Boolean(object["hasComments"])), null != object["state"] && (_0xf0fba["state"] = String(object["state"])), null != object["attributes"] && (_0xf0fba["attributes"] = String(object["attributes"])), _0xf0fba;
    }, SuggestionDescriptor2["toObject"] = function(_0x14bd2e, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["id"] = "", object["authorId"] = "", object["type"] = "", object["createdAt"] = "", object["data"] = "", object["hasComments"] = false, object["state"] = "", object["attributes"] = ""), null != _0x14bd2e["id"] && _0x14bd2e["hasOwnProperty"]("id") && (object["id"] = _0x14bd2e["id"]), null != _0x14bd2e["authorId"] && _0x14bd2e["hasOwnProperty"]("authorId") && (object["authorId"] = _0x14bd2e["authorId"]), null != _0x14bd2e["type"] && _0x14bd2e["hasOwnProperty"]("type") && (object["type"] = _0x14bd2e["type"]), null != _0x14bd2e["createdAt"] && _0x14bd2e["hasOwnProperty"]("createdAt") && (object["createdAt"] = _0x14bd2e["createdAt"]), null != _0x14bd2e["data"] && _0x14bd2e["hasOwnProperty"]("data") && (object["data"] = _0x14bd2e["data"]), null != _0x14bd2e["hasComments"] && _0x14bd2e["hasOwnProperty"]("hasComments") && (object["hasComments"] = _0x14bd2e["hasComments"]), null != _0x14bd2e["state"] && _0x14bd2e["hasOwnProperty"]("state") && (object["state"] = _0x14bd2e["state"]), null != _0x14bd2e["attributes"] && _0x14bd2e["hasOwnProperty"]("attributes") && (object["attributes"] = _0x14bd2e["attributes"]), object;
    }, SuggestionDescriptor2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, SuggestionDescriptor2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/SuggestionDescriptor";
    }, SuggestionDescriptor2;
  }(), $root["TrackChangesAddSuggestionMessage"] = function() {
    function TrackChangesAddSuggestionMessage(properties) {
      if (properties) {
        for (var _0x390206 = Object["keys"](properties), _0x22ab2b = 0; _0x22ab2b < _0x390206["length"]; ++_0x22ab2b) null != properties[_0x390206[_0x22ab2b]] && (this[_0x390206[_0x22ab2b]] = properties[_0x390206[_0x22ab2b]]);
      }
    }
    return TrackChangesAddSuggestionMessage["prototype"]["id"] = "", TrackChangesAddSuggestionMessage["prototype"]["documentId"] = "", TrackChangesAddSuggestionMessage["prototype"]["type"] = "", TrackChangesAddSuggestionMessage["prototype"]["data"] = "", TrackChangesAddSuggestionMessage["prototype"]["originalSuggestionId"] = "", TrackChangesAddSuggestionMessage["prototype"]["attributes"] = "", TrackChangesAddSuggestionMessage["create"] = function(properties) {
      return new TrackChangesAddSuggestionMessage(properties);
    }, TrackChangesAddSuggestionMessage["encode"] = function(_0x1397b6, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x1397b6["id"] && Object["hasOwnProperty"]["call"](_0x1397b6, "id") && writer["uint32"](10)["string"](_0x1397b6["id"]), null != _0x1397b6["documentId"] && Object["hasOwnProperty"]["call"](_0x1397b6, "documentId") && writer["uint32"](18)["string"](_0x1397b6["documentId"]), null != _0x1397b6["type"] && Object["hasOwnProperty"]["call"](_0x1397b6, "type") && writer["uint32"](26)["string"](_0x1397b6["type"]), null != _0x1397b6["data"] && Object["hasOwnProperty"]["call"](_0x1397b6, "data") && writer["uint32"](34)["string"](_0x1397b6["data"]), null != _0x1397b6["originalSuggestionId"] && Object["hasOwnProperty"]["call"](_0x1397b6, "originalSuggestionId") && writer["uint32"](42)["string"](_0x1397b6["originalSuggestionId"]), null != _0x1397b6["attributes"] && Object["hasOwnProperty"]["call"](_0x1397b6, "attributes") && writer["uint32"](50)["string"](_0x1397b6["attributes"]), writer;
    }, TrackChangesAddSuggestionMessage["encodeDelimited"] = function(_0x3501ff, writer) {
      return this["encode"](_0x3501ff, writer)["ldelim"]();
    }, TrackChangesAddSuggestionMessage["decode"] = function(_0x158ef3, length2) {
      _0x158ef3 instanceof _0x476e3c || (_0x158ef3 = _0x476e3c["create"](_0x158ef3));
      for (var _0x36d3ae = void 0 === length2 ? _0x158ef3["len"] : _0x158ef3["pos"] + length2, _0x47bcea = new $root["TrackChangesAddSuggestionMessage"](); _0x158ef3["pos"] < _0x36d3ae; ) {
        var tag = _0x158ef3["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x47bcea["id"] = _0x158ef3["string"]();
            break;
          case 2:
            _0x47bcea["documentId"] = _0x158ef3["string"]();
            break;
          case 3:
            _0x47bcea["type"] = _0x158ef3["string"]();
            break;
          case 4:
            _0x47bcea["data"] = _0x158ef3["string"]();
            break;
          case 5:
            _0x47bcea["originalSuggestionId"] = _0x158ef3["string"]();
            break;
          case 6:
            _0x47bcea["attributes"] = _0x158ef3["string"]();
            break;
          default:
            _0x158ef3["skipType"](7 & tag);
        }
      }
      return _0x47bcea;
    }, TrackChangesAddSuggestionMessage["decodeDelimited"] = function(_0x583a09) {
      return _0x583a09 instanceof _0x476e3c || (_0x583a09 = new _0x476e3c(_0x583a09)), this["decode"](_0x583a09, _0x583a09["uint32"]());
    }, TrackChangesAddSuggestionMessage["verify"] = function(_0x1e4686) {
      return "object" != typeof _0x1e4686 || null === _0x1e4686 ? "object expected" : null != _0x1e4686["id"] && _0x1e4686["hasOwnProperty"]("id") && !$util["isString"](_0x1e4686["id"]) ? "id: string expected" : null != _0x1e4686["documentId"] && _0x1e4686["hasOwnProperty"]("documentId") && !$util["isString"](_0x1e4686["documentId"]) ? "documentId: string expected" : null != _0x1e4686["type"] && _0x1e4686["hasOwnProperty"]("type") && !$util["isString"](_0x1e4686["type"]) ? "type: string expected" : null != _0x1e4686["data"] && _0x1e4686["hasOwnProperty"]("data") && !$util["isString"](_0x1e4686["data"]) ? "data: string expected" : null != _0x1e4686["originalSuggestionId"] && _0x1e4686["hasOwnProperty"]("originalSuggestionId") && !$util["isString"](_0x1e4686["originalSuggestionId"]) ? "originalSuggestionId: string expected" : null != _0x1e4686["attributes"] && _0x1e4686["hasOwnProperty"]("attributes") && !$util["isString"](_0x1e4686["attributes"]) ? "attributes: string expected" : null;
    }, TrackChangesAddSuggestionMessage["fromObject"] = function(object) {
      if (object instanceof $root["TrackChangesAddSuggestionMessage"]) return object;
      var _0x66b2ce = new $root["TrackChangesAddSuggestionMessage"]();
      return null != object["id"] && (_0x66b2ce["id"] = String(object["id"])), null != object["documentId"] && (_0x66b2ce["documentId"] = String(object["documentId"])), null != object["type"] && (_0x66b2ce["type"] = String(object["type"])), null != object["data"] && (_0x66b2ce["data"] = String(object["data"])), null != object["originalSuggestionId"] && (_0x66b2ce["originalSuggestionId"] = String(object["originalSuggestionId"])), null != object["attributes"] && (_0x66b2ce["attributes"] = String(object["attributes"])), _0x66b2ce;
    }, TrackChangesAddSuggestionMessage["toObject"] = function(_0x360c14, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["id"] = "", object["documentId"] = "", object["type"] = "", object["data"] = "", object["originalSuggestionId"] = "", object["attributes"] = ""), null != _0x360c14["id"] && _0x360c14["hasOwnProperty"]("id") && (object["id"] = _0x360c14["id"]), null != _0x360c14["documentId"] && _0x360c14["hasOwnProperty"]("documentId") && (object["documentId"] = _0x360c14["documentId"]), null != _0x360c14["type"] && _0x360c14["hasOwnProperty"]("type") && (object["type"] = _0x360c14["type"]), null != _0x360c14["data"] && _0x360c14["hasOwnProperty"]("data") && (object["data"] = _0x360c14["data"]), null != _0x360c14["originalSuggestionId"] && _0x360c14["hasOwnProperty"]("originalSuggestionId") && (object["originalSuggestionId"] = _0x360c14["originalSuggestionId"]), null != _0x360c14["attributes"] && _0x360c14["hasOwnProperty"]("attributes") && (object["attributes"] = _0x360c14["attributes"]), object;
    }, TrackChangesAddSuggestionMessage["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, TrackChangesAddSuggestionMessage["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/TrackChangesAddSuggestionMessage";
    }, TrackChangesAddSuggestionMessage;
  }(), $root["TrackChangesBatchUpdateSuggestionsStateMessage"] = function() {
    function TrackChangesBatchUpdateSuggestionsStateMessage(properties) {
      if (this["ids"] = [], properties) {
        for (var _0x3f1e3c = Object["keys"](properties), _0x938858 = 0; _0x938858 < _0x3f1e3c["length"]; ++_0x938858) null != properties[_0x3f1e3c[_0x938858]] && (this[_0x3f1e3c[_0x938858]] = properties[_0x3f1e3c[_0x938858]]);
      }
    }
    return TrackChangesBatchUpdateSuggestionsStateMessage["prototype"]["ids"] = $util["emptyArray"], TrackChangesBatchUpdateSuggestionsStateMessage["prototype"]["documentId"] = "", TrackChangesBatchUpdateSuggestionsStateMessage["prototype"]["state"] = "", TrackChangesBatchUpdateSuggestionsStateMessage["create"] = function(properties) {
      return new TrackChangesBatchUpdateSuggestionsStateMessage(properties);
    }, TrackChangesBatchUpdateSuggestionsStateMessage["encode"] = function(_0x5c5a86, writer) {
      if (writer || (writer = $Writer["create"]()), null != _0x5c5a86["ids"] && _0x5c5a86["ids"]["length"]) {
        for (var _0x33a4f3 = 0; _0x33a4f3 < _0x5c5a86["ids"]["length"]; ++_0x33a4f3) writer["uint32"](10)["string"](_0x5c5a86["ids"][_0x33a4f3]);
      }
      return null != _0x5c5a86["documentId"] && Object["hasOwnProperty"]["call"](_0x5c5a86, "documentId") && writer["uint32"](18)["string"](_0x5c5a86["documentId"]), null != _0x5c5a86["state"] && Object["hasOwnProperty"]["call"](_0x5c5a86, "state") && writer["uint32"](26)["string"](_0x5c5a86["state"]), writer;
    }, TrackChangesBatchUpdateSuggestionsStateMessage["encodeDelimited"] = function(_0x2cc565, writer) {
      return this["encode"](_0x2cc565, writer)["ldelim"]();
    }, TrackChangesBatchUpdateSuggestionsStateMessage["decode"] = function(_0x457843, length2) {
      _0x457843 instanceof _0x476e3c || (_0x457843 = _0x476e3c["create"](_0x457843));
      for (var _0x368907 = void 0 === length2 ? _0x457843["len"] : _0x457843["pos"] + length2, _0x39dcac = new $root["TrackChangesBatchUpdateSuggestionsStateMessage"](); _0x457843["pos"] < _0x368907; ) {
        var tag = _0x457843["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x39dcac["ids"] && _0x39dcac["ids"]["length"] || (_0x39dcac["ids"] = []), _0x39dcac["ids"]["push"](_0x457843["string"]());
            break;
          case 2:
            _0x39dcac["documentId"] = _0x457843["string"]();
            break;
          case 3:
            _0x39dcac["state"] = _0x457843["string"]();
            break;
          default:
            _0x457843["skipType"](7 & tag);
        }
      }
      return _0x39dcac;
    }, TrackChangesBatchUpdateSuggestionsStateMessage["decodeDelimited"] = function(_0x3896ba) {
      return _0x3896ba instanceof _0x476e3c || (_0x3896ba = new _0x476e3c(_0x3896ba)), this["decode"](_0x3896ba, _0x3896ba["uint32"]());
    }, TrackChangesBatchUpdateSuggestionsStateMessage["verify"] = function(_0x5d4fcf) {
      if ("object" != typeof _0x5d4fcf || null === _0x5d4fcf) return "object expected";
      if (null != _0x5d4fcf["ids"] && _0x5d4fcf["hasOwnProperty"]("ids")) {
        if (!Array["isArray"](_0x5d4fcf["ids"])) return "ids: array expected";
        for (var _0xb35ddf = 0; _0xb35ddf < _0x5d4fcf["ids"]["length"]; ++_0xb35ddf) if (!$util["isString"](_0x5d4fcf["ids"][_0xb35ddf])) return "ids: string[] expected";
      }
      return null != _0x5d4fcf["documentId"] && _0x5d4fcf["hasOwnProperty"]("documentId") && !$util["isString"](_0x5d4fcf["documentId"]) ? "documentId: string expected" : null != _0x5d4fcf["state"] && _0x5d4fcf["hasOwnProperty"]("state") && !$util["isString"](_0x5d4fcf["state"]) ? "state: string expected" : null;
    }, TrackChangesBatchUpdateSuggestionsStateMessage["fromObject"] = function(object) {
      if (object instanceof $root["TrackChangesBatchUpdateSuggestionsStateMessage"]) return object;
      var _0x4a3326 = new $root["TrackChangesBatchUpdateSuggestionsStateMessage"]();
      if (object["ids"]) {
        if (!Array["isArray"](object["ids"])) throw TypeError(".TrackChangesBatchUpdateSuggestionsStateMessage.ids: array expected");
        _0x4a3326["ids"] = [];
        for (var _0x268830 = 0; _0x268830 < object["ids"]["length"]; ++_0x268830) _0x4a3326["ids"][_0x268830] = String(object["ids"][_0x268830]);
      }
      return null != object["documentId"] && (_0x4a3326["documentId"] = String(object["documentId"])), null != object["state"] && (_0x4a3326["state"] = String(object["state"])), _0x4a3326;
    }, TrackChangesBatchUpdateSuggestionsStateMessage["toObject"] = function(_0x3844b2, options) {
      options || (options = {});
      var object = {};
      if ((options["arrays"] || options["defaults"]) && (object["ids"] = []), options["defaults"] && (object["documentId"] = "", object["state"] = ""), _0x3844b2["ids"] && _0x3844b2["ids"]["length"]) {
        object["ids"] = [];
        for (var _0x2060db = 0; _0x2060db < _0x3844b2["ids"]["length"]; ++_0x2060db) object["ids"][_0x2060db] = _0x3844b2["ids"][_0x2060db];
      }
      return null != _0x3844b2["documentId"] && _0x3844b2["hasOwnProperty"]("documentId") && (object["documentId"] = _0x3844b2["documentId"]), null != _0x3844b2["state"] && _0x3844b2["hasOwnProperty"]("state") && (object["state"] = _0x3844b2["state"]), object;
    }, TrackChangesBatchUpdateSuggestionsStateMessage["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, TrackChangesBatchUpdateSuggestionsStateMessage["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/TrackChangesBatchUpdateSuggestionsStateMessage";
    }, TrackChangesBatchUpdateSuggestionsStateMessage;
  }(), $root["TrackChangesConnectMessage"] = function() {
    function TrackChangesConnectMessage(properties) {
      if (properties) {
        for (var _0x2a3549 = Object["keys"](properties), _0x5ede21 = 0; _0x5ede21 < _0x2a3549["length"]; ++_0x5ede21) null != properties[_0x2a3549[_0x5ede21]] && (this[_0x2a3549[_0x5ede21]] = properties[_0x2a3549[_0x5ede21]]);
      }
    }
    return TrackChangesConnectMessage["prototype"]["documentId"] = "", TrackChangesConnectMessage["create"] = function(properties) {
      return new TrackChangesConnectMessage(properties);
    }, TrackChangesConnectMessage["encode"] = function(_0x568661, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x568661["documentId"] && Object["hasOwnProperty"]["call"](_0x568661, "documentId") && writer["uint32"](10)["string"](_0x568661["documentId"]), writer;
    }, TrackChangesConnectMessage["encodeDelimited"] = function(_0x14a3b0, writer) {
      return this["encode"](_0x14a3b0, writer)["ldelim"]();
    }, TrackChangesConnectMessage["decode"] = function(_0x2d3404, length2) {
      _0x2d3404 instanceof _0x476e3c || (_0x2d3404 = _0x476e3c["create"](_0x2d3404));
      for (var _0x2be70e = void 0 === length2 ? _0x2d3404["len"] : _0x2d3404["pos"] + length2, _0x186c2e = new $root["TrackChangesConnectMessage"](); _0x2d3404["pos"] < _0x2be70e; ) {
        var tag = _0x2d3404["uint32"]();
        if (tag >>> 3 == 1) _0x186c2e["documentId"] = _0x2d3404["string"]();
        else _0x2d3404["skipType"](7 & tag);
      }
      return _0x186c2e;
    }, TrackChangesConnectMessage["decodeDelimited"] = function(_0x3097e4) {
      return _0x3097e4 instanceof _0x476e3c || (_0x3097e4 = new _0x476e3c(_0x3097e4)), this["decode"](_0x3097e4, _0x3097e4["uint32"]());
    }, TrackChangesConnectMessage["verify"] = function(_0x4b32e6) {
      return "object" != typeof _0x4b32e6 || null === _0x4b32e6 ? "object expected" : null != _0x4b32e6["documentId"] && _0x4b32e6["hasOwnProperty"]("documentId") && !$util["isString"](_0x4b32e6["documentId"]) ? "documentId: string expected" : null;
    }, TrackChangesConnectMessage["fromObject"] = function(object) {
      if (object instanceof $root["TrackChangesConnectMessage"]) return object;
      var _0x48f821 = new $root["TrackChangesConnectMessage"]();
      return null != object["documentId"] && (_0x48f821["documentId"] = String(object["documentId"])), _0x48f821;
    }, TrackChangesConnectMessage["toObject"] = function(_0x55a629, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["documentId"] = ""), null != _0x55a629["documentId"] && _0x55a629["hasOwnProperty"]("documentId") && (object["documentId"] = _0x55a629["documentId"]), object;
    }, TrackChangesConnectMessage["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, TrackChangesConnectMessage["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/TrackChangesConnectMessage";
    }, TrackChangesConnectMessage;
  }(), $root["TrackChangesGetAllSuggestionMessage"] = function() {
    function TrackChangesGetAllSuggestionMessage(properties) {
      if (properties) {
        for (var _0x23d9fa = Object["keys"](properties), _0x5efde8 = 0; _0x5efde8 < _0x23d9fa["length"]; ++_0x5efde8) null != properties[_0x23d9fa[_0x5efde8]] && (this[_0x23d9fa[_0x5efde8]] = properties[_0x23d9fa[_0x5efde8]]);
      }
    }
    return TrackChangesGetAllSuggestionMessage["prototype"]["documentId"] = "", TrackChangesGetAllSuggestionMessage["create"] = function(properties) {
      return new TrackChangesGetAllSuggestionMessage(properties);
    }, TrackChangesGetAllSuggestionMessage["encode"] = function(_0x45f290, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x45f290["documentId"] && Object["hasOwnProperty"]["call"](_0x45f290, "documentId") && writer["uint32"](10)["string"](_0x45f290["documentId"]), writer;
    }, TrackChangesGetAllSuggestionMessage["encodeDelimited"] = function(_0x55f5be, writer) {
      return this["encode"](_0x55f5be, writer)["ldelim"]();
    }, TrackChangesGetAllSuggestionMessage["decode"] = function(_0x355bae, length2) {
      _0x355bae instanceof _0x476e3c || (_0x355bae = _0x476e3c["create"](_0x355bae));
      for (var _0x37a1ba = void 0 === length2 ? _0x355bae["len"] : _0x355bae["pos"] + length2, _0x562b5b = new $root["TrackChangesGetAllSuggestionMessage"](); _0x355bae["pos"] < _0x37a1ba; ) {
        var tag = _0x355bae["uint32"]();
        if (tag >>> 3 == 1) _0x562b5b["documentId"] = _0x355bae["string"]();
        else _0x355bae["skipType"](7 & tag);
      }
      return _0x562b5b;
    }, TrackChangesGetAllSuggestionMessage["decodeDelimited"] = function(_0x2ea17e) {
      return _0x2ea17e instanceof _0x476e3c || (_0x2ea17e = new _0x476e3c(_0x2ea17e)), this["decode"](_0x2ea17e, _0x2ea17e["uint32"]());
    }, TrackChangesGetAllSuggestionMessage["verify"] = function(_0x12d88b) {
      return "object" != typeof _0x12d88b || null === _0x12d88b ? "object expected" : null != _0x12d88b["documentId"] && _0x12d88b["hasOwnProperty"]("documentId") && !$util["isString"](_0x12d88b["documentId"]) ? "documentId: string expected" : null;
    }, TrackChangesGetAllSuggestionMessage["fromObject"] = function(object) {
      if (object instanceof $root["TrackChangesGetAllSuggestionMessage"]) return object;
      var _0x508efe = new $root["TrackChangesGetAllSuggestionMessage"]();
      return null != object["documentId"] && (_0x508efe["documentId"] = String(object["documentId"])), _0x508efe;
    }, TrackChangesGetAllSuggestionMessage["toObject"] = function(_0x326b66, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["documentId"] = ""), null != _0x326b66["documentId"] && _0x326b66["hasOwnProperty"]("documentId") && (object["documentId"] = _0x326b66["documentId"]), object;
    }, TrackChangesGetAllSuggestionMessage["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, TrackChangesGetAllSuggestionMessage["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/TrackChangesGetAllSuggestionMessage";
    }, TrackChangesGetAllSuggestionMessage;
  }(), $root["TrackChangesGetSuggestionMessage"] = function() {
    function TrackChangesGetSuggestionMessage(properties) {
      if (properties) {
        for (var _0x5263d8 = Object["keys"](properties), _0x2763ba = 0; _0x2763ba < _0x5263d8["length"]; ++_0x2763ba) null != properties[_0x5263d8[_0x2763ba]] && (this[_0x5263d8[_0x2763ba]] = properties[_0x5263d8[_0x2763ba]]);
      }
    }
    return TrackChangesGetSuggestionMessage["prototype"]["id"] = "", TrackChangesGetSuggestionMessage["prototype"]["documentId"] = "", TrackChangesGetSuggestionMessage["create"] = function(properties) {
      return new TrackChangesGetSuggestionMessage(properties);
    }, TrackChangesGetSuggestionMessage["encode"] = function(_0x3aff32, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x3aff32["id"] && Object["hasOwnProperty"]["call"](_0x3aff32, "id") && writer["uint32"](10)["string"](_0x3aff32["id"]), null != _0x3aff32["documentId"] && Object["hasOwnProperty"]["call"](_0x3aff32, "documentId") && writer["uint32"](18)["string"](_0x3aff32["documentId"]), writer;
    }, TrackChangesGetSuggestionMessage["encodeDelimited"] = function(_0x239a51, writer) {
      return this["encode"](_0x239a51, writer)["ldelim"]();
    }, TrackChangesGetSuggestionMessage["decode"] = function(_0x4471a1, length2) {
      _0x4471a1 instanceof _0x476e3c || (_0x4471a1 = _0x476e3c["create"](_0x4471a1));
      for (var _0x268694 = void 0 === length2 ? _0x4471a1["len"] : _0x4471a1["pos"] + length2, _0x446a4c = new $root["TrackChangesGetSuggestionMessage"](); _0x4471a1["pos"] < _0x268694; ) {
        var tag = _0x4471a1["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x446a4c["id"] = _0x4471a1["string"]();
            break;
          case 2:
            _0x446a4c["documentId"] = _0x4471a1["string"]();
            break;
          default:
            _0x4471a1["skipType"](7 & tag);
        }
      }
      return _0x446a4c;
    }, TrackChangesGetSuggestionMessage["decodeDelimited"] = function(_0x5e7502) {
      return _0x5e7502 instanceof _0x476e3c || (_0x5e7502 = new _0x476e3c(_0x5e7502)), this["decode"](_0x5e7502, _0x5e7502["uint32"]());
    }, TrackChangesGetSuggestionMessage["verify"] = function(_0x127610) {
      return "object" != typeof _0x127610 || null === _0x127610 ? "object expected" : null != _0x127610["id"] && _0x127610["hasOwnProperty"]("id") && !$util["isString"](_0x127610["id"]) ? "id: string expected" : null != _0x127610["documentId"] && _0x127610["hasOwnProperty"]("documentId") && !$util["isString"](_0x127610["documentId"]) ? "documentId: string expected" : null;
    }, TrackChangesGetSuggestionMessage["fromObject"] = function(object) {
      if (object instanceof $root["TrackChangesGetSuggestionMessage"]) return object;
      var _0x4a703c = new $root["TrackChangesGetSuggestionMessage"]();
      return null != object["id"] && (_0x4a703c["id"] = String(object["id"])), null != object["documentId"] && (_0x4a703c["documentId"] = String(object["documentId"])), _0x4a703c;
    }, TrackChangesGetSuggestionMessage["toObject"] = function(_0x5de3ac, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["id"] = "", object["documentId"] = ""), null != _0x5de3ac["id"] && _0x5de3ac["hasOwnProperty"]("id") && (object["id"] = _0x5de3ac["id"]), null != _0x5de3ac["documentId"] && _0x5de3ac["hasOwnProperty"]("documentId") && (object["documentId"] = _0x5de3ac["documentId"]), object;
    }, TrackChangesGetSuggestionMessage["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, TrackChangesGetSuggestionMessage["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/TrackChangesGetSuggestionMessage";
    }, TrackChangesGetSuggestionMessage;
  }(), $root["TrackChangesUpdateSuggestionMessage"] = function() {
    function TrackChangesUpdateSuggestionMessage(properties) {
      if (properties) {
        for (var _0x37f11c = Object["keys"](properties), _0x255f49 = 0; _0x255f49 < _0x37f11c["length"]; ++_0x255f49) null != properties[_0x37f11c[_0x255f49]] && (this[_0x37f11c[_0x255f49]] = properties[_0x37f11c[_0x255f49]]);
      }
    }
    return TrackChangesUpdateSuggestionMessage["prototype"]["id"] = "", TrackChangesUpdateSuggestionMessage["prototype"]["documentId"] = "", TrackChangesUpdateSuggestionMessage["prototype"]["hasComments"] = false, TrackChangesUpdateSuggestionMessage["prototype"]["isHasCommentsModified"] = false, TrackChangesUpdateSuggestionMessage["prototype"]["state"] = "", TrackChangesUpdateSuggestionMessage["prototype"]["attributes"] = "", TrackChangesUpdateSuggestionMessage["create"] = function(properties) {
      return new TrackChangesUpdateSuggestionMessage(properties);
    }, TrackChangesUpdateSuggestionMessage["encode"] = function(_0x40776b, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x40776b["id"] && Object["hasOwnProperty"]["call"](_0x40776b, "id") && writer["uint32"](10)["string"](_0x40776b["id"]), null != _0x40776b["documentId"] && Object["hasOwnProperty"]["call"](_0x40776b, "documentId") && writer["uint32"](18)["string"](_0x40776b["documentId"]), null != _0x40776b["hasComments"] && Object["hasOwnProperty"]["call"](_0x40776b, "hasComments") && writer["uint32"](24)["bool"](_0x40776b["hasComments"]), null != _0x40776b["isHasCommentsModified"] && Object["hasOwnProperty"]["call"](_0x40776b, "isHasCommentsModified") && writer["uint32"](32)["bool"](_0x40776b["isHasCommentsModified"]), null != _0x40776b["state"] && Object["hasOwnProperty"]["call"](_0x40776b, "state") && writer["uint32"](42)["string"](_0x40776b["state"]), null != _0x40776b["attributes"] && Object["hasOwnProperty"]["call"](_0x40776b, "attributes") && writer["uint32"](50)["string"](_0x40776b["attributes"]), writer;
    }, TrackChangesUpdateSuggestionMessage["encodeDelimited"] = function(_0x32b4e4, writer) {
      return this["encode"](_0x32b4e4, writer)["ldelim"]();
    }, TrackChangesUpdateSuggestionMessage["decode"] = function(_0xcf116, length2) {
      _0xcf116 instanceof _0x476e3c || (_0xcf116 = _0x476e3c["create"](_0xcf116));
      for (var _0x1eee97 = void 0 === length2 ? _0xcf116["len"] : _0xcf116["pos"] + length2, _0x38fc6e = new $root["TrackChangesUpdateSuggestionMessage"](); _0xcf116["pos"] < _0x1eee97; ) {
        var tag = _0xcf116["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x38fc6e["id"] = _0xcf116["string"]();
            break;
          case 2:
            _0x38fc6e["documentId"] = _0xcf116["string"]();
            break;
          case 3:
            _0x38fc6e["hasComments"] = _0xcf116["bool"]();
            break;
          case 4:
            _0x38fc6e["isHasCommentsModified"] = _0xcf116["bool"]();
            break;
          case 5:
            _0x38fc6e["state"] = _0xcf116["string"]();
            break;
          case 6:
            _0x38fc6e["attributes"] = _0xcf116["string"]();
            break;
          default:
            _0xcf116["skipType"](7 & tag);
        }
      }
      return _0x38fc6e;
    }, TrackChangesUpdateSuggestionMessage["decodeDelimited"] = function(_0xdc48fa) {
      return _0xdc48fa instanceof _0x476e3c || (_0xdc48fa = new _0x476e3c(_0xdc48fa)), this["decode"](_0xdc48fa, _0xdc48fa["uint32"]());
    }, TrackChangesUpdateSuggestionMessage["verify"] = function(_0x37287a) {
      return "object" != typeof _0x37287a || null === _0x37287a ? "object expected" : null != _0x37287a["id"] && _0x37287a["hasOwnProperty"]("id") && !$util["isString"](_0x37287a["id"]) ? "id: string expected" : null != _0x37287a["documentId"] && _0x37287a["hasOwnProperty"]("documentId") && !$util["isString"](_0x37287a["documentId"]) ? "documentId: string expected" : null != _0x37287a["hasComments"] && _0x37287a["hasOwnProperty"]("hasComments") && "boolean" != typeof _0x37287a["hasComments"] ? "hasComments: boolean expected" : null != _0x37287a["isHasCommentsModified"] && _0x37287a["hasOwnProperty"]("isHasCommentsModified") && "boolean" != typeof _0x37287a["isHasCommentsModified"] ? "isHasCommentsModified: boolean expected" : null != _0x37287a["state"] && _0x37287a["hasOwnProperty"]("state") && !$util["isString"](_0x37287a["state"]) ? "state: string expected" : null != _0x37287a["attributes"] && _0x37287a["hasOwnProperty"]("attributes") && !$util["isString"](_0x37287a["attributes"]) ? "attributes: string expected" : null;
    }, TrackChangesUpdateSuggestionMessage["fromObject"] = function(object) {
      if (object instanceof $root["TrackChangesUpdateSuggestionMessage"]) return object;
      var _0x18c8bf = new $root["TrackChangesUpdateSuggestionMessage"]();
      return null != object["id"] && (_0x18c8bf["id"] = String(object["id"])), null != object["documentId"] && (_0x18c8bf["documentId"] = String(object["documentId"])), null != object["hasComments"] && (_0x18c8bf["hasComments"] = Boolean(object["hasComments"])), null != object["isHasCommentsModified"] && (_0x18c8bf["isHasCommentsModified"] = Boolean(object["isHasCommentsModified"])), null != object["state"] && (_0x18c8bf["state"] = String(object["state"])), null != object["attributes"] && (_0x18c8bf["attributes"] = String(object["attributes"])), _0x18c8bf;
    }, TrackChangesUpdateSuggestionMessage["toObject"] = function(_0x17a65b, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["id"] = "", object["documentId"] = "", object["hasComments"] = false, object["isHasCommentsModified"] = false, object["state"] = "", object["attributes"] = ""), null != _0x17a65b["id"] && _0x17a65b["hasOwnProperty"]("id") && (object["id"] = _0x17a65b["id"]), null != _0x17a65b["documentId"] && _0x17a65b["hasOwnProperty"]("documentId") && (object["documentId"] = _0x17a65b["documentId"]), null != _0x17a65b["hasComments"] && _0x17a65b["hasOwnProperty"]("hasComments") && (object["hasComments"] = _0x17a65b["hasComments"]), null != _0x17a65b["isHasCommentsModified"] && _0x17a65b["hasOwnProperty"]("isHasCommentsModified") && (object["isHasCommentsModified"] = _0x17a65b["isHasCommentsModified"]), null != _0x17a65b["state"] && _0x17a65b["hasOwnProperty"]("state") && (object["state"] = _0x17a65b["state"]), null != _0x17a65b["attributes"] && _0x17a65b["hasOwnProperty"]("attributes") && (object["attributes"] = _0x17a65b["attributes"]), object;
    }, TrackChangesUpdateSuggestionMessage["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, TrackChangesUpdateSuggestionMessage["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/TrackChangesUpdateSuggestionMessage";
    }, TrackChangesUpdateSuggestionMessage;
  }(), $root["TrackChangesAddSuggestionResponse"] = function() {
    function TrackChangesAddSuggestionResponse(properties) {
      if (properties) {
        for (var _0x5a10f3 = Object["keys"](properties), _0xbb001b = 0; _0xbb001b < _0x5a10f3["length"]; ++_0xbb001b) null != properties[_0x5a10f3[_0xbb001b]] && (this[_0x5a10f3[_0xbb001b]] = properties[_0x5a10f3[_0xbb001b]]);
      }
    }
    return TrackChangesAddSuggestionResponse["prototype"]["id"] = "", TrackChangesAddSuggestionResponse["prototype"]["authorId"] = "", TrackChangesAddSuggestionResponse["prototype"]["type"] = "", TrackChangesAddSuggestionResponse["prototype"]["createdAt"] = "", TrackChangesAddSuggestionResponse["prototype"]["data"] = "", TrackChangesAddSuggestionResponse["prototype"]["hasComments"] = false, TrackChangesAddSuggestionResponse["prototype"]["state"] = "", TrackChangesAddSuggestionResponse["prototype"]["attributes"] = "", TrackChangesAddSuggestionResponse["create"] = function(properties) {
      return new TrackChangesAddSuggestionResponse(properties);
    }, TrackChangesAddSuggestionResponse["encode"] = function(_0x2b40ed, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x2b40ed["id"] && Object["hasOwnProperty"]["call"](_0x2b40ed, "id") && writer["uint32"](10)["string"](_0x2b40ed["id"]), null != _0x2b40ed["authorId"] && Object["hasOwnProperty"]["call"](_0x2b40ed, "authorId") && writer["uint32"](18)["string"](_0x2b40ed["authorId"]), null != _0x2b40ed["type"] && Object["hasOwnProperty"]["call"](_0x2b40ed, "type") && writer["uint32"](26)["string"](_0x2b40ed["type"]), null != _0x2b40ed["createdAt"] && Object["hasOwnProperty"]["call"](_0x2b40ed, "createdAt") && writer["uint32"](34)["string"](_0x2b40ed["createdAt"]), null != _0x2b40ed["data"] && Object["hasOwnProperty"]["call"](_0x2b40ed, "data") && writer["uint32"](42)["string"](_0x2b40ed["data"]), null != _0x2b40ed["hasComments"] && Object["hasOwnProperty"]["call"](_0x2b40ed, "hasComments") && writer["uint32"](48)["bool"](_0x2b40ed["hasComments"]), null != _0x2b40ed["state"] && Object["hasOwnProperty"]["call"](_0x2b40ed, "state") && writer["uint32"](58)["string"](_0x2b40ed["state"]), null != _0x2b40ed["attributes"] && Object["hasOwnProperty"]["call"](_0x2b40ed, "attributes") && writer["uint32"](66)["string"](_0x2b40ed["attributes"]), writer;
    }, TrackChangesAddSuggestionResponse["encodeDelimited"] = function(_0x14db54, writer) {
      return this["encode"](_0x14db54, writer)["ldelim"]();
    }, TrackChangesAddSuggestionResponse["decode"] = function(_0x1bf827, length2) {
      _0x1bf827 instanceof _0x476e3c || (_0x1bf827 = _0x476e3c["create"](_0x1bf827));
      for (var _0x4e3a87 = void 0 === length2 ? _0x1bf827["len"] : _0x1bf827["pos"] + length2, _0x1507a0 = new $root["TrackChangesAddSuggestionResponse"](); _0x1bf827["pos"] < _0x4e3a87; ) {
        var tag = _0x1bf827["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x1507a0["id"] = _0x1bf827["string"]();
            break;
          case 2:
            _0x1507a0["authorId"] = _0x1bf827["string"]();
            break;
          case 3:
            _0x1507a0["type"] = _0x1bf827["string"]();
            break;
          case 4:
            _0x1507a0["createdAt"] = _0x1bf827["string"]();
            break;
          case 5:
            _0x1507a0["data"] = _0x1bf827["string"]();
            break;
          case 6:
            _0x1507a0["hasComments"] = _0x1bf827["bool"]();
            break;
          case 7:
            _0x1507a0["state"] = _0x1bf827["string"]();
            break;
          case 8:
            _0x1507a0["attributes"] = _0x1bf827["string"]();
            break;
          default:
            _0x1bf827["skipType"](7 & tag);
        }
      }
      return _0x1507a0;
    }, TrackChangesAddSuggestionResponse["decodeDelimited"] = function(_0x1efa52) {
      return _0x1efa52 instanceof _0x476e3c || (_0x1efa52 = new _0x476e3c(_0x1efa52)), this["decode"](_0x1efa52, _0x1efa52["uint32"]());
    }, TrackChangesAddSuggestionResponse["verify"] = function(_0x29b2b6) {
      return "object" != typeof _0x29b2b6 || null === _0x29b2b6 ? "object expected" : null != _0x29b2b6["id"] && _0x29b2b6["hasOwnProperty"]("id") && !$util["isString"](_0x29b2b6["id"]) ? "id: string expected" : null != _0x29b2b6["authorId"] && _0x29b2b6["hasOwnProperty"]("authorId") && !$util["isString"](_0x29b2b6["authorId"]) ? "authorId: string expected" : null != _0x29b2b6["type"] && _0x29b2b6["hasOwnProperty"]("type") && !$util["isString"](_0x29b2b6["type"]) ? "type: string expected" : null != _0x29b2b6["createdAt"] && _0x29b2b6["hasOwnProperty"]("createdAt") && !$util["isString"](_0x29b2b6["createdAt"]) ? "createdAt: string expected" : null != _0x29b2b6["data"] && _0x29b2b6["hasOwnProperty"]("data") && !$util["isString"](_0x29b2b6["data"]) ? "data: string expected" : null != _0x29b2b6["hasComments"] && _0x29b2b6["hasOwnProperty"]("hasComments") && "boolean" != typeof _0x29b2b6["hasComments"] ? "hasComments: boolean expected" : null != _0x29b2b6["state"] && _0x29b2b6["hasOwnProperty"]("state") && !$util["isString"](_0x29b2b6["state"]) ? "state: string expected" : null != _0x29b2b6["attributes"] && _0x29b2b6["hasOwnProperty"]("attributes") && !$util["isString"](_0x29b2b6["attributes"]) ? "attributes: string expected" : null;
    }, TrackChangesAddSuggestionResponse["fromObject"] = function(object) {
      if (object instanceof $root["TrackChangesAddSuggestionResponse"]) return object;
      var _0x55588e = new $root["TrackChangesAddSuggestionResponse"]();
      return null != object["id"] && (_0x55588e["id"] = String(object["id"])), null != object["authorId"] && (_0x55588e["authorId"] = String(object["authorId"])), null != object["type"] && (_0x55588e["type"] = String(object["type"])), null != object["createdAt"] && (_0x55588e["createdAt"] = String(object["createdAt"])), null != object["data"] && (_0x55588e["data"] = String(object["data"])), null != object["hasComments"] && (_0x55588e["hasComments"] = Boolean(object["hasComments"])), null != object["state"] && (_0x55588e["state"] = String(object["state"])), null != object["attributes"] && (_0x55588e["attributes"] = String(object["attributes"])), _0x55588e;
    }, TrackChangesAddSuggestionResponse["toObject"] = function(_0x1d3f2f, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["id"] = "", object["authorId"] = "", object["type"] = "", object["createdAt"] = "", object["data"] = "", object["hasComments"] = false, object["state"] = "", object["attributes"] = ""), null != _0x1d3f2f["id"] && _0x1d3f2f["hasOwnProperty"]("id") && (object["id"] = _0x1d3f2f["id"]), null != _0x1d3f2f["authorId"] && _0x1d3f2f["hasOwnProperty"]("authorId") && (object["authorId"] = _0x1d3f2f["authorId"]), null != _0x1d3f2f["type"] && _0x1d3f2f["hasOwnProperty"]("type") && (object["type"] = _0x1d3f2f["type"]), null != _0x1d3f2f["createdAt"] && _0x1d3f2f["hasOwnProperty"]("createdAt") && (object["createdAt"] = _0x1d3f2f["createdAt"]), null != _0x1d3f2f["data"] && _0x1d3f2f["hasOwnProperty"]("data") && (object["data"] = _0x1d3f2f["data"]), null != _0x1d3f2f["hasComments"] && _0x1d3f2f["hasOwnProperty"]("hasComments") && (object["hasComments"] = _0x1d3f2f["hasComments"]), null != _0x1d3f2f["state"] && _0x1d3f2f["hasOwnProperty"]("state") && (object["state"] = _0x1d3f2f["state"]), null != _0x1d3f2f["attributes"] && _0x1d3f2f["hasOwnProperty"]("attributes") && (object["attributes"] = _0x1d3f2f["attributes"]), object;
    }, TrackChangesAddSuggestionResponse["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, TrackChangesAddSuggestionResponse["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/TrackChangesAddSuggestionResponse";
    }, TrackChangesAddSuggestionResponse;
  }(), $root["TrackChangesConnectResponse"] = function() {
    function TrackChangesConnectResponse(properties) {
      if (this["suggestions"] = [], this["suggestionsV2"] = [], properties) {
        for (var _0x169c2a = Object["keys"](properties), _0x4efee2 = 0; _0x4efee2 < _0x169c2a["length"]; ++_0x4efee2) null != properties[_0x169c2a[_0x4efee2]] && (this[_0x169c2a[_0x4efee2]] = properties[_0x169c2a[_0x4efee2]]);
      }
    }
    return TrackChangesConnectResponse["prototype"]["channel"] = "", TrackChangesConnectResponse["prototype"]["suggestions"] = $util["emptyArray"], TrackChangesConnectResponse["prototype"]["suggestionsV2"] = $util["emptyArray"], TrackChangesConnectResponse["create"] = function(properties) {
      return new TrackChangesConnectResponse(properties);
    }, TrackChangesConnectResponse["encode"] = function(_0x16c9a9, writer) {
      if (writer || (writer = $Writer["create"]()), null != _0x16c9a9["channel"] && Object["hasOwnProperty"]["call"](_0x16c9a9, "channel") && writer["uint32"](10)["string"](_0x16c9a9["channel"]), null != _0x16c9a9["suggestions"] && _0x16c9a9["suggestions"]["length"]) {
        for (var _0x5d1221 = 0; _0x5d1221 < _0x16c9a9["suggestions"]["length"]; ++_0x5d1221) writer["uint32"](18)["string"](_0x16c9a9["suggestions"][_0x5d1221]);
      }
      if (null != _0x16c9a9["suggestionsV2"] && _0x16c9a9["suggestionsV2"]["length"]) {
        for (_0x5d1221 = 0; _0x5d1221 < _0x16c9a9["suggestionsV2"]["length"]; ++_0x5d1221) $root["SuggestionDescriptor"]["encode"](_0x16c9a9["suggestionsV2"][_0x5d1221], writer["uint32"](26)["fork"]())["ldelim"]();
      }
      return writer;
    }, TrackChangesConnectResponse["encodeDelimited"] = function(_0x5ba9aa, writer) {
      return this["encode"](_0x5ba9aa, writer)["ldelim"]();
    }, TrackChangesConnectResponse["decode"] = function(_0x1ce1a7, length2) {
      _0x1ce1a7 instanceof _0x476e3c || (_0x1ce1a7 = _0x476e3c["create"](_0x1ce1a7));
      for (var _0x1a5ed8 = void 0 === length2 ? _0x1ce1a7["len"] : _0x1ce1a7["pos"] + length2, _0x4d65a8 = new $root["TrackChangesConnectResponse"](); _0x1ce1a7["pos"] < _0x1a5ed8; ) {
        var tag = _0x1ce1a7["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x4d65a8["channel"] = _0x1ce1a7["string"]();
            break;
          case 2:
            _0x4d65a8["suggestions"] && _0x4d65a8["suggestions"]["length"] || (_0x4d65a8["suggestions"] = []), _0x4d65a8["suggestions"]["push"](_0x1ce1a7["string"]());
            break;
          case 3:
            _0x4d65a8["suggestionsV2"] && _0x4d65a8["suggestionsV2"]["length"] || (_0x4d65a8["suggestionsV2"] = []), _0x4d65a8["suggestionsV2"]["push"]($root["SuggestionDescriptor"]["decode"](_0x1ce1a7, _0x1ce1a7["uint32"]()));
            break;
          default:
            _0x1ce1a7["skipType"](7 & tag);
        }
      }
      return _0x4d65a8;
    }, TrackChangesConnectResponse["decodeDelimited"] = function(_0x112f2a) {
      return _0x112f2a instanceof _0x476e3c || (_0x112f2a = new _0x476e3c(_0x112f2a)), this["decode"](_0x112f2a, _0x112f2a["uint32"]());
    }, TrackChangesConnectResponse["verify"] = function(_0x38aaaf) {
      if ("object" != typeof _0x38aaaf || null === _0x38aaaf) return "object expected";
      if (null != _0x38aaaf["channel"] && _0x38aaaf["hasOwnProperty"]("channel") && !$util["isString"](_0x38aaaf["channel"])) return "channel: string expected";
      if (null != _0x38aaaf["suggestions"] && _0x38aaaf["hasOwnProperty"]("suggestions")) {
        if (!Array["isArray"](_0x38aaaf["suggestions"])) return "suggestions: array expected";
        for (var _0x6fb0fa = 0; _0x6fb0fa < _0x38aaaf["suggestions"]["length"]; ++_0x6fb0fa) if (!$util["isString"](_0x38aaaf["suggestions"][_0x6fb0fa])) return "suggestions: string[] expected";
      }
      if (null != _0x38aaaf["suggestionsV2"] && _0x38aaaf["hasOwnProperty"]("suggestionsV2")) {
        if (!Array["isArray"](_0x38aaaf["suggestionsV2"])) return "suggestionsV2: array expected";
        for (_0x6fb0fa = 0; _0x6fb0fa < _0x38aaaf["suggestionsV2"]["length"]; ++_0x6fb0fa) {
          var _0x5475e7 = $root["SuggestionDescriptor"]["verify"](_0x38aaaf["suggestionsV2"][_0x6fb0fa]);
          if (_0x5475e7) return "suggestionsV2." + _0x5475e7;
        }
      }
      return null;
    }, TrackChangesConnectResponse["fromObject"] = function(object) {
      if (object instanceof $root["TrackChangesConnectResponse"]) return object;
      var _0x3dd6e8 = new $root["TrackChangesConnectResponse"]();
      if (null != object["channel"] && (_0x3dd6e8["channel"] = String(object["channel"])), object["suggestions"]) {
        if (!Array["isArray"](object["suggestions"])) throw TypeError(".TrackChangesConnectResponse.suggestions: array expected");
        _0x3dd6e8["suggestions"] = [];
        for (var _0x6402f6 = 0; _0x6402f6 < object["suggestions"]["length"]; ++_0x6402f6) _0x3dd6e8["suggestions"][_0x6402f6] = String(object["suggestions"][_0x6402f6]);
      }
      if (object["suggestionsV2"]) {
        if (!Array["isArray"](object["suggestionsV2"])) throw TypeError(".TrackChangesConnectResponse.suggestionsV2: array expected");
        _0x3dd6e8["suggestionsV2"] = [];
        for (_0x6402f6 = 0; _0x6402f6 < object["suggestionsV2"]["length"]; ++_0x6402f6) {
          if ("object" != typeof object["suggestionsV2"][_0x6402f6]) throw TypeError(".TrackChangesConnectResponse.suggestionsV2: object expected");
          _0x3dd6e8["suggestionsV2"][_0x6402f6] = $root["SuggestionDescriptor"]["fromObject"](object["suggestionsV2"][_0x6402f6]);
        }
      }
      return _0x3dd6e8;
    }, TrackChangesConnectResponse["toObject"] = function(_0x98c965, options) {
      options || (options = {});
      var object = {};
      if ((options["arrays"] || options["defaults"]) && (object["suggestions"] = [], object["suggestionsV2"] = []), options["defaults"] && (object["channel"] = ""), null != _0x98c965["channel"] && _0x98c965["hasOwnProperty"]("channel") && (object["channel"] = _0x98c965["channel"]), _0x98c965["suggestions"] && _0x98c965["suggestions"]["length"]) {
        object["suggestions"] = [];
        for (var _0x26b997 = 0; _0x26b997 < _0x98c965["suggestions"]["length"]; ++_0x26b997) object["suggestions"][_0x26b997] = _0x98c965["suggestions"][_0x26b997];
      }
      if (_0x98c965["suggestionsV2"] && _0x98c965["suggestionsV2"]["length"]) {
        object["suggestionsV2"] = [];
        for (_0x26b997 = 0; _0x26b997 < _0x98c965["suggestionsV2"]["length"]; ++_0x26b997) object["suggestionsV2"][_0x26b997] = $root["SuggestionDescriptor"]["toObject"](_0x98c965["suggestionsV2"][_0x26b997], options);
      }
      return object;
    }, TrackChangesConnectResponse["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, TrackChangesConnectResponse["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/TrackChangesConnectResponse";
    }, TrackChangesConnectResponse;
  }(), $root["TrackChangesGetAllSuggestionsResponse"] = function() {
    function TrackChangesGetAllSuggestionsResponse(properties) {
      if (this["suggestions"] = [], this["suggestionsV2"] = [], properties) {
        for (var _0x96e785 = Object["keys"](properties), _0x411362 = 0; _0x411362 < _0x96e785["length"]; ++_0x411362) null != properties[_0x96e785[_0x411362]] && (this[_0x96e785[_0x411362]] = properties[_0x96e785[_0x411362]]);
      }
    }
    return TrackChangesGetAllSuggestionsResponse["prototype"]["suggestions"] = $util["emptyArray"], TrackChangesGetAllSuggestionsResponse["prototype"]["suggestionsV2"] = $util["emptyArray"], TrackChangesGetAllSuggestionsResponse["create"] = function(properties) {
      return new TrackChangesGetAllSuggestionsResponse(properties);
    }, TrackChangesGetAllSuggestionsResponse["encode"] = function(_0x5d5bc, writer) {
      if (writer || (writer = $Writer["create"]()), null != _0x5d5bc["suggestions"] && _0x5d5bc["suggestions"]["length"]) {
        for (var _0x30fe70 = 0; _0x30fe70 < _0x5d5bc["suggestions"]["length"]; ++_0x30fe70) writer["uint32"](10)["string"](_0x5d5bc["suggestions"][_0x30fe70]);
      }
      if (null != _0x5d5bc["suggestionsV2"] && _0x5d5bc["suggestionsV2"]["length"]) {
        for (_0x30fe70 = 0; _0x30fe70 < _0x5d5bc["suggestionsV2"]["length"]; ++_0x30fe70) $root["SuggestionDescriptor"]["encode"](_0x5d5bc["suggestionsV2"][_0x30fe70], writer["uint32"](18)["fork"]())["ldelim"]();
      }
      return writer;
    }, TrackChangesGetAllSuggestionsResponse["encodeDelimited"] = function(_0x34694b, writer) {
      return this["encode"](_0x34694b, writer)["ldelim"]();
    }, TrackChangesGetAllSuggestionsResponse["decode"] = function(_0x3e04e4, length2) {
      _0x3e04e4 instanceof _0x476e3c || (_0x3e04e4 = _0x476e3c["create"](_0x3e04e4));
      for (var _0x2c7207 = void 0 === length2 ? _0x3e04e4["len"] : _0x3e04e4["pos"] + length2, _0x5e38d4 = new $root["TrackChangesGetAllSuggestionsResponse"](); _0x3e04e4["pos"] < _0x2c7207; ) {
        var tag = _0x3e04e4["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x5e38d4["suggestions"] && _0x5e38d4["suggestions"]["length"] || (_0x5e38d4["suggestions"] = []), _0x5e38d4["suggestions"]["push"](_0x3e04e4["string"]());
            break;
          case 2:
            _0x5e38d4["suggestionsV2"] && _0x5e38d4["suggestionsV2"]["length"] || (_0x5e38d4["suggestionsV2"] = []), _0x5e38d4["suggestionsV2"]["push"]($root["SuggestionDescriptor"]["decode"](_0x3e04e4, _0x3e04e4["uint32"]()));
            break;
          default:
            _0x3e04e4["skipType"](7 & tag);
        }
      }
      return _0x5e38d4;
    }, TrackChangesGetAllSuggestionsResponse["decodeDelimited"] = function(_0x5eab4f) {
      return _0x5eab4f instanceof _0x476e3c || (_0x5eab4f = new _0x476e3c(_0x5eab4f)), this["decode"](_0x5eab4f, _0x5eab4f["uint32"]());
    }, TrackChangesGetAllSuggestionsResponse["verify"] = function(_0x3dca36) {
      if ("object" != typeof _0x3dca36 || null === _0x3dca36) return "object expected";
      if (null != _0x3dca36["suggestions"] && _0x3dca36["hasOwnProperty"]("suggestions")) {
        if (!Array["isArray"](_0x3dca36["suggestions"])) return "suggestions: array expected";
        for (var _0x19b24c = 0; _0x19b24c < _0x3dca36["suggestions"]["length"]; ++_0x19b24c) if (!$util["isString"](_0x3dca36["suggestions"][_0x19b24c])) return "suggestions: string[] expected";
      }
      if (null != _0x3dca36["suggestionsV2"] && _0x3dca36["hasOwnProperty"]("suggestionsV2")) {
        if (!Array["isArray"](_0x3dca36["suggestionsV2"])) return "suggestionsV2: array expected";
        for (_0x19b24c = 0; _0x19b24c < _0x3dca36["suggestionsV2"]["length"]; ++_0x19b24c) {
          var _0x26c9d6 = $root["SuggestionDescriptor"]["verify"](_0x3dca36["suggestionsV2"][_0x19b24c]);
          if (_0x26c9d6) return "suggestionsV2." + _0x26c9d6;
        }
      }
      return null;
    }, TrackChangesGetAllSuggestionsResponse["fromObject"] = function(object) {
      if (object instanceof $root["TrackChangesGetAllSuggestionsResponse"]) return object;
      var _0x4e419c = new $root["TrackChangesGetAllSuggestionsResponse"]();
      if (object["suggestions"]) {
        if (!Array["isArray"](object["suggestions"])) throw TypeError(".TrackChangesGetAllSuggestionsResponse.suggestions: array expected");
        _0x4e419c["suggestions"] = [];
        for (var _0x311783 = 0; _0x311783 < object["suggestions"]["length"]; ++_0x311783) _0x4e419c["suggestions"][_0x311783] = String(object["suggestions"][_0x311783]);
      }
      if (object["suggestionsV2"]) {
        if (!Array["isArray"](object["suggestionsV2"])) throw TypeError(".TrackChangesGetAllSuggestionsResponse.suggestionsV2: array expected");
        _0x4e419c["suggestionsV2"] = [];
        for (_0x311783 = 0; _0x311783 < object["suggestionsV2"]["length"]; ++_0x311783) {
          if ("object" != typeof object["suggestionsV2"][_0x311783]) throw TypeError(".TrackChangesGetAllSuggestionsResponse.suggestionsV2: object expected");
          _0x4e419c["suggestionsV2"][_0x311783] = $root["SuggestionDescriptor"]["fromObject"](object["suggestionsV2"][_0x311783]);
        }
      }
      return _0x4e419c;
    }, TrackChangesGetAllSuggestionsResponse["toObject"] = function(_0x5e01a6, options) {
      options || (options = {});
      var object = {};
      if ((options["arrays"] || options["defaults"]) && (object["suggestions"] = [], object["suggestionsV2"] = []), _0x5e01a6["suggestions"] && _0x5e01a6["suggestions"]["length"]) {
        object["suggestions"] = [];
        for (var _0x1c1e27 = 0; _0x1c1e27 < _0x5e01a6["suggestions"]["length"]; ++_0x1c1e27) object["suggestions"][_0x1c1e27] = _0x5e01a6["suggestions"][_0x1c1e27];
      }
      if (_0x5e01a6["suggestionsV2"] && _0x5e01a6["suggestionsV2"]["length"]) {
        object["suggestionsV2"] = [];
        for (_0x1c1e27 = 0; _0x1c1e27 < _0x5e01a6["suggestionsV2"]["length"]; ++_0x1c1e27) object["suggestionsV2"][_0x1c1e27] = $root["SuggestionDescriptor"]["toObject"](_0x5e01a6["suggestionsV2"][_0x1c1e27], options);
      }
      return object;
    }, TrackChangesGetAllSuggestionsResponse["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, TrackChangesGetAllSuggestionsResponse["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/TrackChangesGetAllSuggestionsResponse";
    }, TrackChangesGetAllSuggestionsResponse;
  }(), $root["TrackChangesGetSuggestionResponse"] = function() {
    function TrackChangesGetSuggestionResponse(properties) {
      if (properties) {
        for (var _0x69351f = Object["keys"](properties), _0x3db7f5 = 0; _0x3db7f5 < _0x69351f["length"]; ++_0x3db7f5) null != properties[_0x69351f[_0x3db7f5]] && (this[_0x69351f[_0x3db7f5]] = properties[_0x69351f[_0x3db7f5]]);
      }
    }
    return TrackChangesGetSuggestionResponse["prototype"]["id"] = "", TrackChangesGetSuggestionResponse["prototype"]["authorId"] = "", TrackChangesGetSuggestionResponse["prototype"]["type"] = "", TrackChangesGetSuggestionResponse["prototype"]["createdAt"] = "", TrackChangesGetSuggestionResponse["prototype"]["data"] = "", TrackChangesGetSuggestionResponse["prototype"]["hasComments"] = false, TrackChangesGetSuggestionResponse["prototype"]["state"] = "", TrackChangesGetSuggestionResponse["prototype"]["attributes"] = "", TrackChangesGetSuggestionResponse["create"] = function(properties) {
      return new TrackChangesGetSuggestionResponse(properties);
    }, TrackChangesGetSuggestionResponse["encode"] = function(_0xdd9dc3, writer) {
      return writer || (writer = $Writer["create"]()), null != _0xdd9dc3["id"] && Object["hasOwnProperty"]["call"](_0xdd9dc3, "id") && writer["uint32"](10)["string"](_0xdd9dc3["id"]), null != _0xdd9dc3["authorId"] && Object["hasOwnProperty"]["call"](_0xdd9dc3, "authorId") && writer["uint32"](18)["string"](_0xdd9dc3["authorId"]), null != _0xdd9dc3["type"] && Object["hasOwnProperty"]["call"](_0xdd9dc3, "type") && writer["uint32"](26)["string"](_0xdd9dc3["type"]), null != _0xdd9dc3["createdAt"] && Object["hasOwnProperty"]["call"](_0xdd9dc3, "createdAt") && writer["uint32"](34)["string"](_0xdd9dc3["createdAt"]), null != _0xdd9dc3["data"] && Object["hasOwnProperty"]["call"](_0xdd9dc3, "data") && writer["uint32"](42)["string"](_0xdd9dc3["data"]), null != _0xdd9dc3["hasComments"] && Object["hasOwnProperty"]["call"](_0xdd9dc3, "hasComments") && writer["uint32"](48)["bool"](_0xdd9dc3["hasComments"]), null != _0xdd9dc3["state"] && Object["hasOwnProperty"]["call"](_0xdd9dc3, "state") && writer["uint32"](58)["string"](_0xdd9dc3["state"]), null != _0xdd9dc3["attributes"] && Object["hasOwnProperty"]["call"](_0xdd9dc3, "attributes") && writer["uint32"](66)["string"](_0xdd9dc3["attributes"]), writer;
    }, TrackChangesGetSuggestionResponse["encodeDelimited"] = function(_0x370071, writer) {
      return this["encode"](_0x370071, writer)["ldelim"]();
    }, TrackChangesGetSuggestionResponse["decode"] = function(_0x56ef71, length2) {
      _0x56ef71 instanceof _0x476e3c || (_0x56ef71 = _0x476e3c["create"](_0x56ef71));
      for (var _0x183e6c = void 0 === length2 ? _0x56ef71["len"] : _0x56ef71["pos"] + length2, _0xe3251d = new $root["TrackChangesGetSuggestionResponse"](); _0x56ef71["pos"] < _0x183e6c; ) {
        var tag = _0x56ef71["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0xe3251d["id"] = _0x56ef71["string"]();
            break;
          case 2:
            _0xe3251d["authorId"] = _0x56ef71["string"]();
            break;
          case 3:
            _0xe3251d["type"] = _0x56ef71["string"]();
            break;
          case 4:
            _0xe3251d["createdAt"] = _0x56ef71["string"]();
            break;
          case 5:
            _0xe3251d["data"] = _0x56ef71["string"]();
            break;
          case 6:
            _0xe3251d["hasComments"] = _0x56ef71["bool"]();
            break;
          case 7:
            _0xe3251d["state"] = _0x56ef71["string"]();
            break;
          case 8:
            _0xe3251d["attributes"] = _0x56ef71["string"]();
            break;
          default:
            _0x56ef71["skipType"](7 & tag);
        }
      }
      return _0xe3251d;
    }, TrackChangesGetSuggestionResponse["decodeDelimited"] = function(_0x1df4cb) {
      return _0x1df4cb instanceof _0x476e3c || (_0x1df4cb = new _0x476e3c(_0x1df4cb)), this["decode"](_0x1df4cb, _0x1df4cb["uint32"]());
    }, TrackChangesGetSuggestionResponse["verify"] = function(_0x132e0c) {
      return "object" != typeof _0x132e0c || null === _0x132e0c ? "object expected" : null != _0x132e0c["id"] && _0x132e0c["hasOwnProperty"]("id") && !$util["isString"](_0x132e0c["id"]) ? "id: string expected" : null != _0x132e0c["authorId"] && _0x132e0c["hasOwnProperty"]("authorId") && !$util["isString"](_0x132e0c["authorId"]) ? "authorId: string expected" : null != _0x132e0c["type"] && _0x132e0c["hasOwnProperty"]("type") && !$util["isString"](_0x132e0c["type"]) ? "type: string expected" : null != _0x132e0c["createdAt"] && _0x132e0c["hasOwnProperty"]("createdAt") && !$util["isString"](_0x132e0c["createdAt"]) ? "createdAt: string expected" : null != _0x132e0c["data"] && _0x132e0c["hasOwnProperty"]("data") && !$util["isString"](_0x132e0c["data"]) ? "data: string expected" : null != _0x132e0c["hasComments"] && _0x132e0c["hasOwnProperty"]("hasComments") && "boolean" != typeof _0x132e0c["hasComments"] ? "hasComments: boolean expected" : null != _0x132e0c["state"] && _0x132e0c["hasOwnProperty"]("state") && !$util["isString"](_0x132e0c["state"]) ? "state: string expected" : null != _0x132e0c["attributes"] && _0x132e0c["hasOwnProperty"]("attributes") && !$util["isString"](_0x132e0c["attributes"]) ? "attributes: string expected" : null;
    }, TrackChangesGetSuggestionResponse["fromObject"] = function(object) {
      if (object instanceof $root["TrackChangesGetSuggestionResponse"]) return object;
      var _0x49f68c = new $root["TrackChangesGetSuggestionResponse"]();
      return null != object["id"] && (_0x49f68c["id"] = String(object["id"])), null != object["authorId"] && (_0x49f68c["authorId"] = String(object["authorId"])), null != object["type"] && (_0x49f68c["type"] = String(object["type"])), null != object["createdAt"] && (_0x49f68c["createdAt"] = String(object["createdAt"])), null != object["data"] && (_0x49f68c["data"] = String(object["data"])), null != object["hasComments"] && (_0x49f68c["hasComments"] = Boolean(object["hasComments"])), null != object["state"] && (_0x49f68c["state"] = String(object["state"])), null != object["attributes"] && (_0x49f68c["attributes"] = String(object["attributes"])), _0x49f68c;
    }, TrackChangesGetSuggestionResponse["toObject"] = function(_0x400ccb, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["id"] = "", object["authorId"] = "", object["type"] = "", object["createdAt"] = "", object["data"] = "", object["hasComments"] = false, object["state"] = "", object["attributes"] = ""), null != _0x400ccb["id"] && _0x400ccb["hasOwnProperty"]("id") && (object["id"] = _0x400ccb["id"]), null != _0x400ccb["authorId"] && _0x400ccb["hasOwnProperty"]("authorId") && (object["authorId"] = _0x400ccb["authorId"]), null != _0x400ccb["type"] && _0x400ccb["hasOwnProperty"]("type") && (object["type"] = _0x400ccb["type"]), null != _0x400ccb["createdAt"] && _0x400ccb["hasOwnProperty"]("createdAt") && (object["createdAt"] = _0x400ccb["createdAt"]), null != _0x400ccb["data"] && _0x400ccb["hasOwnProperty"]("data") && (object["data"] = _0x400ccb["data"]), null != _0x400ccb["hasComments"] && _0x400ccb["hasOwnProperty"]("hasComments") && (object["hasComments"] = _0x400ccb["hasComments"]), null != _0x400ccb["state"] && _0x400ccb["hasOwnProperty"]("state") && (object["state"] = _0x400ccb["state"]), null != _0x400ccb["attributes"] && _0x400ccb["hasOwnProperty"]("attributes") && (object["attributes"] = _0x400ccb["attributes"]), object;
    }, TrackChangesGetSuggestionResponse["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, TrackChangesGetSuggestionResponse["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/TrackChangesGetSuggestionResponse";
    }, TrackChangesGetSuggestionResponse;
  }(), $root["UserDescriptor"] = function() {
    function UserDescriptor(properties) {
      if (this["attributes"] = [], properties) {
        for (var _0x564607 = Object["keys"](properties), _0xda18b7 = 0; _0xda18b7 < _0x564607["length"]; ++_0xda18b7) null != properties[_0x564607[_0xda18b7]] && (this[_0x564607[_0xda18b7]] = properties[_0x564607[_0xda18b7]]);
      }
    }
    return UserDescriptor["prototype"]["attributes"] = $util["emptyArray"], UserDescriptor["create"] = function(properties) {
      return new UserDescriptor(properties);
    }, UserDescriptor["encode"] = function(_0x2eb5af, writer) {
      if (writer || (writer = $Writer["create"]()), null != _0x2eb5af["attributes"] && _0x2eb5af["attributes"]["length"]) {
        for (var _0x4dff48 = 0; _0x4dff48 < _0x2eb5af["attributes"]["length"]; ++_0x4dff48) $root["KeyValueDescriptor"]["encode"](_0x2eb5af["attributes"][_0x4dff48], writer["uint32"](10)["fork"]())["ldelim"]();
      }
      return writer;
    }, UserDescriptor["encodeDelimited"] = function(_0x1b45be, writer) {
      return this["encode"](_0x1b45be, writer)["ldelim"]();
    }, UserDescriptor["decode"] = function(_0xc0e75b, length2) {
      _0xc0e75b instanceof _0x476e3c || (_0xc0e75b = _0x476e3c["create"](_0xc0e75b));
      for (var _0x4a13c9 = void 0 === length2 ? _0xc0e75b["len"] : _0xc0e75b["pos"] + length2, _0x48f683 = new $root["UserDescriptor"](); _0xc0e75b["pos"] < _0x4a13c9; ) {
        var tag = _0xc0e75b["uint32"]();
        if (tag >>> 3 == 1) _0x48f683["attributes"] && _0x48f683["attributes"]["length"] || (_0x48f683["attributes"] = []), _0x48f683["attributes"]["push"]($root["KeyValueDescriptor"]["decode"](_0xc0e75b, _0xc0e75b["uint32"]()));
        else _0xc0e75b["skipType"](7 & tag);
      }
      return _0x48f683;
    }, UserDescriptor["decodeDelimited"] = function(_0x530d91) {
      return _0x530d91 instanceof _0x476e3c || (_0x530d91 = new _0x476e3c(_0x530d91)), this["decode"](_0x530d91, _0x530d91["uint32"]());
    }, UserDescriptor["verify"] = function(_0x2aca3b) {
      if ("object" != typeof _0x2aca3b || null === _0x2aca3b) return "object expected";
      if (null != _0x2aca3b["attributes"] && _0x2aca3b["hasOwnProperty"]("attributes")) {
        if (!Array["isArray"](_0x2aca3b["attributes"])) return "attributes: array expected";
        for (var _0x3a1f12 = 0; _0x3a1f12 < _0x2aca3b["attributes"]["length"]; ++_0x3a1f12) {
          var _0x1f1ce3 = $root["KeyValueDescriptor"]["verify"](_0x2aca3b["attributes"][_0x3a1f12]);
          if (_0x1f1ce3) return "attributes." + _0x1f1ce3;
        }
      }
      return null;
    }, UserDescriptor["fromObject"] = function(object) {
      if (object instanceof $root["UserDescriptor"]) return object;
      var _0x661479 = new $root["UserDescriptor"]();
      if (object["attributes"]) {
        if (!Array["isArray"](object["attributes"])) throw TypeError(".UserDescriptor.attributes: array expected");
        _0x661479["attributes"] = [];
        for (var _0x56ac2a = 0; _0x56ac2a < object["attributes"]["length"]; ++_0x56ac2a) {
          if ("object" != typeof object["attributes"][_0x56ac2a]) throw TypeError(".UserDescriptor.attributes: object expected");
          _0x661479["attributes"][_0x56ac2a] = $root["KeyValueDescriptor"]["fromObject"](object["attributes"][_0x56ac2a]);
        }
      }
      return _0x661479;
    }, UserDescriptor["toObject"] = function(_0x4caea4, options) {
      options || (options = {});
      var object = {};
      if ((options["arrays"] || options["defaults"]) && (object["attributes"] = []), _0x4caea4["attributes"] && _0x4caea4["attributes"]["length"]) {
        object["attributes"] = [];
        for (var _0x5ee1aa = 0; _0x5ee1aa < _0x4caea4["attributes"]["length"]; ++_0x5ee1aa) object["attributes"][_0x5ee1aa] = $root["KeyValueDescriptor"]["toObject"](_0x4caea4["attributes"][_0x5ee1aa], options);
      }
      return object;
    }, UserDescriptor["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, UserDescriptor["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/UserDescriptor";
    }, UserDescriptor;
  }(), $root["GetManyUsersMessage"] = function() {
    function GetManyUsersMessage2(properties) {
      if (this["ids"] = [], properties) {
        for (var _0xa4ceb = Object["keys"](properties), _0x56b463 = 0; _0x56b463 < _0xa4ceb["length"]; ++_0x56b463) null != properties[_0xa4ceb[_0x56b463]] && (this[_0xa4ceb[_0x56b463]] = properties[_0xa4ceb[_0x56b463]]);
      }
    }
    return GetManyUsersMessage2["prototype"]["ids"] = $util["emptyArray"], GetManyUsersMessage2["create"] = function(properties) {
      return new GetManyUsersMessage2(properties);
    }, GetManyUsersMessage2["encode"] = function(_0x28a56a, writer) {
      if (writer || (writer = $Writer["create"]()), null != _0x28a56a["ids"] && _0x28a56a["ids"]["length"]) {
        for (var _0x5034e4 = 0; _0x5034e4 < _0x28a56a["ids"]["length"]; ++_0x5034e4) writer["uint32"](10)["string"](_0x28a56a["ids"][_0x5034e4]);
      }
      return writer;
    }, GetManyUsersMessage2["encodeDelimited"] = function(_0x59c28d, writer) {
      return this["encode"](_0x59c28d, writer)["ldelim"]();
    }, GetManyUsersMessage2["decode"] = function(_0x19060c, length2) {
      _0x19060c instanceof _0x476e3c || (_0x19060c = _0x476e3c["create"](_0x19060c));
      for (var _0x4c252f = void 0 === length2 ? _0x19060c["len"] : _0x19060c["pos"] + length2, _0x3f4850 = new $root["GetManyUsersMessage"](); _0x19060c["pos"] < _0x4c252f; ) {
        var tag = _0x19060c["uint32"]();
        if (tag >>> 3 == 1) _0x3f4850["ids"] && _0x3f4850["ids"]["length"] || (_0x3f4850["ids"] = []), _0x3f4850["ids"]["push"](_0x19060c["string"]());
        else _0x19060c["skipType"](7 & tag);
      }
      return _0x3f4850;
    }, GetManyUsersMessage2["decodeDelimited"] = function(_0x3a7ce9) {
      return _0x3a7ce9 instanceof _0x476e3c || (_0x3a7ce9 = new _0x476e3c(_0x3a7ce9)), this["decode"](_0x3a7ce9, _0x3a7ce9["uint32"]());
    }, GetManyUsersMessage2["verify"] = function(_0x3f9420) {
      if ("object" != typeof _0x3f9420 || null === _0x3f9420) return "object expected";
      if (null != _0x3f9420["ids"] && _0x3f9420["hasOwnProperty"]("ids")) {
        if (!Array["isArray"](_0x3f9420["ids"])) return "ids: array expected";
        for (var _0x3b0624 = 0; _0x3b0624 < _0x3f9420["ids"]["length"]; ++_0x3b0624) if (!$util["isString"](_0x3f9420["ids"][_0x3b0624])) return "ids: string[] expected";
      }
      return null;
    }, GetManyUsersMessage2["fromObject"] = function(object) {
      if (object instanceof $root["GetManyUsersMessage"]) return object;
      var _0x2e4971 = new $root["GetManyUsersMessage"]();
      if (object["ids"]) {
        if (!Array["isArray"](object["ids"])) throw TypeError(".GetManyUsersMessage.ids: array expected");
        _0x2e4971["ids"] = [];
        for (var _0x14f3c0 = 0; _0x14f3c0 < object["ids"]["length"]; ++_0x14f3c0) _0x2e4971["ids"][_0x14f3c0] = String(object["ids"][_0x14f3c0]);
      }
      return _0x2e4971;
    }, GetManyUsersMessage2["toObject"] = function(_0x7a1318, options) {
      options || (options = {});
      var object = {};
      if ((options["arrays"] || options["defaults"]) && (object["ids"] = []), _0x7a1318["ids"] && _0x7a1318["ids"]["length"]) {
        object["ids"] = [];
        for (var _0x52daf3 = 0; _0x52daf3 < _0x7a1318["ids"]["length"]; ++_0x52daf3) object["ids"][_0x52daf3] = _0x7a1318["ids"][_0x52daf3];
      }
      return object;
    }, GetManyUsersMessage2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, GetManyUsersMessage2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/GetManyUsersMessage";
    }, GetManyUsersMessage2;
  }(), $root["GetUserMessage"] = function() {
    function GetUserMessage2(properties) {
      if (properties) {
        for (var _0x21fa15 = Object["keys"](properties), _0x442ba1 = 0; _0x442ba1 < _0x21fa15["length"]; ++_0x442ba1) null != properties[_0x21fa15[_0x442ba1]] && (this[_0x21fa15[_0x442ba1]] = properties[_0x21fa15[_0x442ba1]]);
      }
    }
    return GetUserMessage2["prototype"]["id"] = "", GetUserMessage2["create"] = function(properties) {
      return new GetUserMessage2(properties);
    }, GetUserMessage2["encode"] = function(_0x4cd253, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x4cd253["id"] && Object["hasOwnProperty"]["call"](_0x4cd253, "id") && writer["uint32"](10)["string"](_0x4cd253["id"]), writer;
    }, GetUserMessage2["encodeDelimited"] = function(_0x1c3e3f, writer) {
      return this["encode"](_0x1c3e3f, writer)["ldelim"]();
    }, GetUserMessage2["decode"] = function(_0x4dafa8, length2) {
      _0x4dafa8 instanceof _0x476e3c || (_0x4dafa8 = _0x476e3c["create"](_0x4dafa8));
      for (var _0x1b4196 = void 0 === length2 ? _0x4dafa8["len"] : _0x4dafa8["pos"] + length2, _0x1a1eb8 = new $root["GetUserMessage"](); _0x4dafa8["pos"] < _0x1b4196; ) {
        var tag = _0x4dafa8["uint32"]();
        if (tag >>> 3 == 1) _0x1a1eb8["id"] = _0x4dafa8["string"]();
        else _0x4dafa8["skipType"](7 & tag);
      }
      return _0x1a1eb8;
    }, GetUserMessage2["decodeDelimited"] = function(_0x5af72d) {
      return _0x5af72d instanceof _0x476e3c || (_0x5af72d = new _0x476e3c(_0x5af72d)), this["decode"](_0x5af72d, _0x5af72d["uint32"]());
    }, GetUserMessage2["verify"] = function(_0x1a1599) {
      return "object" != typeof _0x1a1599 || null === _0x1a1599 ? "object expected" : null != _0x1a1599["id"] && _0x1a1599["hasOwnProperty"]("id") && !$util["isString"](_0x1a1599["id"]) ? "id: string expected" : null;
    }, GetUserMessage2["fromObject"] = function(object) {
      if (object instanceof $root["GetUserMessage"]) return object;
      var _0x2b08ae = new $root["GetUserMessage"]();
      return null != object["id"] && (_0x2b08ae["id"] = String(object["id"])), _0x2b08ae;
    }, GetUserMessage2["toObject"] = function(_0x2a12da, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["id"] = ""), null != _0x2a12da["id"] && _0x2a12da["hasOwnProperty"]("id") && (object["id"] = _0x2a12da["id"]), object;
    }, GetUserMessage2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, GetUserMessage2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/GetUserMessage";
    }, GetUserMessage2;
  }(), $root["GetManyUsersResponse"] = function() {
    function GetManyUsersResponse2(properties) {
      if (this["users"] = [], properties) {
        for (var _0x21ca40 = Object["keys"](properties), _0x14e3ea = 0; _0x14e3ea < _0x21ca40["length"]; ++_0x14e3ea) null != properties[_0x21ca40[_0x14e3ea]] && (this[_0x21ca40[_0x14e3ea]] = properties[_0x21ca40[_0x14e3ea]]);
      }
    }
    return GetManyUsersResponse2["prototype"]["users"] = $util["emptyArray"], GetManyUsersResponse2["create"] = function(properties) {
      return new GetManyUsersResponse2(properties);
    }, GetManyUsersResponse2["encode"] = function(_0x3e86e0, writer) {
      if (writer || (writer = $Writer["create"]()), null != _0x3e86e0["users"] && _0x3e86e0["users"]["length"]) {
        for (var _0x596522 = 0; _0x596522 < _0x3e86e0["users"]["length"]; ++_0x596522) $root["UserDescriptor"]["encode"](_0x3e86e0["users"][_0x596522], writer["uint32"](10)["fork"]())["ldelim"]();
      }
      return writer;
    }, GetManyUsersResponse2["encodeDelimited"] = function(_0x1682c9, writer) {
      return this["encode"](_0x1682c9, writer)["ldelim"]();
    }, GetManyUsersResponse2["decode"] = function(_0x29b635, length2) {
      _0x29b635 instanceof _0x476e3c || (_0x29b635 = _0x476e3c["create"](_0x29b635));
      for (var _0x344fd1 = void 0 === length2 ? _0x29b635["len"] : _0x29b635["pos"] + length2, _0x15a22a = new $root["GetManyUsersResponse"](); _0x29b635["pos"] < _0x344fd1; ) {
        var tag = _0x29b635["uint32"]();
        if (tag >>> 3 == 1) _0x15a22a["users"] && _0x15a22a["users"]["length"] || (_0x15a22a["users"] = []), _0x15a22a["users"]["push"]($root["UserDescriptor"]["decode"](_0x29b635, _0x29b635["uint32"]()));
        else _0x29b635["skipType"](7 & tag);
      }
      return _0x15a22a;
    }, GetManyUsersResponse2["decodeDelimited"] = function(_0x3354d2) {
      return _0x3354d2 instanceof _0x476e3c || (_0x3354d2 = new _0x476e3c(_0x3354d2)), this["decode"](_0x3354d2, _0x3354d2["uint32"]());
    }, GetManyUsersResponse2["verify"] = function(_0x13fb2c) {
      if ("object" != typeof _0x13fb2c || null === _0x13fb2c) return "object expected";
      if (null != _0x13fb2c["users"] && _0x13fb2c["hasOwnProperty"]("users")) {
        if (!Array["isArray"](_0x13fb2c["users"])) return "users: array expected";
        for (var _0x3ed24c = 0; _0x3ed24c < _0x13fb2c["users"]["length"]; ++_0x3ed24c) {
          var _0x19e61b = $root["UserDescriptor"]["verify"](_0x13fb2c["users"][_0x3ed24c]);
          if (_0x19e61b) return "users." + _0x19e61b;
        }
      }
      return null;
    }, GetManyUsersResponse2["fromObject"] = function(object) {
      if (object instanceof $root["GetManyUsersResponse"]) return object;
      var _0x439c27 = new $root["GetManyUsersResponse"]();
      if (object["users"]) {
        if (!Array["isArray"](object["users"])) throw TypeError(".GetManyUsersResponse.users: array expected");
        _0x439c27["users"] = [];
        for (var _0x26062e = 0; _0x26062e < object["users"]["length"]; ++_0x26062e) {
          if ("object" != typeof object["users"][_0x26062e]) throw TypeError(".GetManyUsersResponse.users: object expected");
          _0x439c27["users"][_0x26062e] = $root["UserDescriptor"]["fromObject"](object["users"][_0x26062e]);
        }
      }
      return _0x439c27;
    }, GetManyUsersResponse2["toObject"] = function(_0x47781c, options) {
      options || (options = {});
      var object = {};
      if ((options["arrays"] || options["defaults"]) && (object["users"] = []), _0x47781c["users"] && _0x47781c["users"]["length"]) {
        object["users"] = [];
        for (var _0x4f891f = 0; _0x4f891f < _0x47781c["users"]["length"]; ++_0x4f891f) object["users"][_0x4f891f] = $root["UserDescriptor"]["toObject"](_0x47781c["users"][_0x4f891f], options);
      }
      return object;
    }, GetManyUsersResponse2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, GetManyUsersResponse2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/GetManyUsersResponse";
    }, GetManyUsersResponse2;
  }(), $root["GetUserResponse"] = function() {
    function GetUserResponse2(properties) {
      if (this["attributes"] = [], properties) {
        for (var _0x5cc5cd = Object["keys"](properties), _0x379161 = 0; _0x379161 < _0x5cc5cd["length"]; ++_0x379161) null != properties[_0x5cc5cd[_0x379161]] && (this[_0x5cc5cd[_0x379161]] = properties[_0x5cc5cd[_0x379161]]);
      }
    }
    return GetUserResponse2["prototype"]["attributes"] = $util["emptyArray"], GetUserResponse2["create"] = function(properties) {
      return new GetUserResponse2(properties);
    }, GetUserResponse2["encode"] = function(_0x3dbe1b, writer) {
      if (writer || (writer = $Writer["create"]()), null != _0x3dbe1b["attributes"] && _0x3dbe1b["attributes"]["length"]) {
        for (var _0x1d21aa = 0; _0x1d21aa < _0x3dbe1b["attributes"]["length"]; ++_0x1d21aa) $root["KeyValueDescriptor"]["encode"](_0x3dbe1b["attributes"][_0x1d21aa], writer["uint32"](10)["fork"]())["ldelim"]();
      }
      return writer;
    }, GetUserResponse2["encodeDelimited"] = function(_0x42c065, writer) {
      return this["encode"](_0x42c065, writer)["ldelim"]();
    }, GetUserResponse2["decode"] = function(_0x18c44f, length2) {
      _0x18c44f instanceof _0x476e3c || (_0x18c44f = _0x476e3c["create"](_0x18c44f));
      for (var _0x42cd92 = void 0 === length2 ? _0x18c44f["len"] : _0x18c44f["pos"] + length2, _0x2410c5 = new $root["GetUserResponse"](); _0x18c44f["pos"] < _0x42cd92; ) {
        var tag = _0x18c44f["uint32"]();
        if (tag >>> 3 == 1) _0x2410c5["attributes"] && _0x2410c5["attributes"]["length"] || (_0x2410c5["attributes"] = []), _0x2410c5["attributes"]["push"]($root["KeyValueDescriptor"]["decode"](_0x18c44f, _0x18c44f["uint32"]()));
        else _0x18c44f["skipType"](7 & tag);
      }
      return _0x2410c5;
    }, GetUserResponse2["decodeDelimited"] = function(_0x22b9c0) {
      return _0x22b9c0 instanceof _0x476e3c || (_0x22b9c0 = new _0x476e3c(_0x22b9c0)), this["decode"](_0x22b9c0, _0x22b9c0["uint32"]());
    }, GetUserResponse2["verify"] = function(_0x5991aa) {
      if ("object" != typeof _0x5991aa || null === _0x5991aa) return "object expected";
      if (null != _0x5991aa["attributes"] && _0x5991aa["hasOwnProperty"]("attributes")) {
        if (!Array["isArray"](_0x5991aa["attributes"])) return "attributes: array expected";
        for (var _0x26c769 = 0; _0x26c769 < _0x5991aa["attributes"]["length"]; ++_0x26c769) {
          var _0x4e98f6 = $root["KeyValueDescriptor"]["verify"](_0x5991aa["attributes"][_0x26c769]);
          if (_0x4e98f6) return "attributes." + _0x4e98f6;
        }
      }
      return null;
    }, GetUserResponse2["fromObject"] = function(object) {
      if (object instanceof $root["GetUserResponse"]) return object;
      var _0x192949 = new $root["GetUserResponse"]();
      if (object["attributes"]) {
        if (!Array["isArray"](object["attributes"])) throw TypeError(".GetUserResponse.attributes: array expected");
        _0x192949["attributes"] = [];
        for (var _0x2afb8d = 0; _0x2afb8d < object["attributes"]["length"]; ++_0x2afb8d) {
          if ("object" != typeof object["attributes"][_0x2afb8d]) throw TypeError(".GetUserResponse.attributes: object expected");
          _0x192949["attributes"][_0x2afb8d] = $root["KeyValueDescriptor"]["fromObject"](object["attributes"][_0x2afb8d]);
        }
      }
      return _0x192949;
    }, GetUserResponse2["toObject"] = function(_0x1fb76b, options) {
      options || (options = {});
      var object = {};
      if ((options["arrays"] || options["defaults"]) && (object["attributes"] = []), _0x1fb76b["attributes"] && _0x1fb76b["attributes"]["length"]) {
        object["attributes"] = [];
        for (var _0x4eece8 = 0; _0x4eece8 < _0x1fb76b["attributes"]["length"]; ++_0x4eece8) object["attributes"][_0x4eece8] = $root["KeyValueDescriptor"]["toObject"](_0x1fb76b["attributes"][_0x4eece8], options);
      }
      return object;
    }, GetUserResponse2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, GetUserResponse2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/GetUserResponse";
    }, GetUserResponse2;
  }(), $root["ChannelMessage"] = function() {
    function _0x5bfb5f(properties) {
      if (properties) {
        for (var _0x3eb01e = Object["keys"](properties), _0x3b5988 = 0; _0x3b5988 < _0x3eb01e["length"]; ++_0x3b5988) null != properties[_0x3eb01e[_0x3b5988]] && (this[_0x3eb01e[_0x3b5988]] = properties[_0x3eb01e[_0x3b5988]]);
      }
    }
    return _0x5bfb5f["prototype"]["type"] = 0, _0x5bfb5f["prototype"]["socketId"] = "", _0x5bfb5f["prototype"]["data"] = $util["newBuffer"]([]), _0x5bfb5f["create"] = function(properties) {
      return new _0x5bfb5f(properties);
    }, _0x5bfb5f["encode"] = function(_0xf84ef7, writer) {
      return writer || (writer = $Writer["create"]()), null != _0xf84ef7["type"] && Object["hasOwnProperty"]["call"](_0xf84ef7, "type") && writer["uint32"](8)["uint32"](_0xf84ef7["type"]), null != _0xf84ef7["socketId"] && Object["hasOwnProperty"]["call"](_0xf84ef7, "socketId") && writer["uint32"](18)["string"](_0xf84ef7["socketId"]), null != _0xf84ef7["data"] && Object["hasOwnProperty"]["call"](_0xf84ef7, "data") && writer["uint32"](26)["bytes"](_0xf84ef7["data"]), writer;
    }, _0x5bfb5f["encodeDelimited"] = function(_0x52756c, writer) {
      return this["encode"](_0x52756c, writer)["ldelim"]();
    }, _0x5bfb5f["decode"] = function(_0x210d94, length2) {
      _0x210d94 instanceof _0x476e3c || (_0x210d94 = _0x476e3c["create"](_0x210d94));
      for (var _0x586c21 = void 0 === length2 ? _0x210d94["len"] : _0x210d94["pos"] + length2, _0x140986 = new $root["ChannelMessage"](); _0x210d94["pos"] < _0x586c21; ) {
        var tag = _0x210d94["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x140986["type"] = _0x210d94["uint32"]();
            break;
          case 2:
            _0x140986["socketId"] = _0x210d94["string"]();
            break;
          case 3:
            _0x140986["data"] = _0x210d94["bytes"]();
            break;
          default:
            _0x210d94["skipType"](7 & tag);
        }
      }
      return _0x140986;
    }, _0x5bfb5f["decodeDelimited"] = function(_0x2db768) {
      return _0x2db768 instanceof _0x476e3c || (_0x2db768 = new _0x476e3c(_0x2db768)), this["decode"](_0x2db768, _0x2db768["uint32"]());
    }, _0x5bfb5f["verify"] = function(_0x333aa5) {
      return "object" != typeof _0x333aa5 || null === _0x333aa5 ? "object expected" : null != _0x333aa5["type"] && _0x333aa5["hasOwnProperty"]("type") && !$util["isInteger"](_0x333aa5["type"]) ? "type: integer expected" : null != _0x333aa5["socketId"] && _0x333aa5["hasOwnProperty"]("socketId") && !$util["isString"](_0x333aa5["socketId"]) ? "socketId: string expected" : null != _0x333aa5["data"] && _0x333aa5["hasOwnProperty"]("data") && !(_0x333aa5["data"] && "number" == typeof _0x333aa5["data"]["length"] || $util["isString"](_0x333aa5["data"])) ? "data: buffer expected" : null;
    }, _0x5bfb5f["fromObject"] = function(object) {
      if (object instanceof $root["ChannelMessage"]) return object;
      var _0xf66910 = new $root["ChannelMessage"]();
      return null != object["type"] && (_0xf66910["type"] = object["type"] >>> 0), null != object["socketId"] && (_0xf66910["socketId"] = String(object["socketId"])), null != object["data"] && ("string" == typeof object["data"] ? $util["base64"]["decode"](object["data"], _0xf66910["data"] = $util["newBuffer"]($util["base64"]["length"](object["data"])), 0) : object["data"]["length"] >= 0 && (_0xf66910["data"] = object["data"])), _0xf66910;
    }, _0x5bfb5f["toObject"] = function(_0x2e3c61, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["type"] = 0, object["socketId"] = "", options["bytes"] === String ? object["data"] = "" : (object["data"] = [], options["bytes"] !== Array && (object["data"] = $util["newBuffer"](object["data"])))), null != _0x2e3c61["type"] && _0x2e3c61["hasOwnProperty"]("type") && (object["type"] = _0x2e3c61["type"]), null != _0x2e3c61["socketId"] && _0x2e3c61["hasOwnProperty"]("socketId") && (object["socketId"] = _0x2e3c61["socketId"]), null != _0x2e3c61["data"] && _0x2e3c61["hasOwnProperty"]("data") && (object["data"] = options["bytes"] === String ? $util["base64"]["encode"](_0x2e3c61["data"], 0, _0x2e3c61["data"]["length"]) : options["bytes"] === Array ? Array["prototype"]["slice"]["call"](_0x2e3c61["data"]) : _0x2e3c61["data"]), object;
    }, _0x5bfb5f["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, _0x5bfb5f["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/ChannelMessage";
    }, _0x5bfb5f;
  }(), $root["BytesBytesPacketDataMessage"] = function() {
    function BytesBytesPacketDataMessage2(properties) {
      if (properties) {
        for (var _0x9e34ed = Object["keys"](properties), _0x51cf59 = 0; _0x51cf59 < _0x9e34ed["length"]; ++_0x51cf59) null != properties[_0x9e34ed[_0x51cf59]] && (this[_0x9e34ed[_0x51cf59]] = properties[_0x9e34ed[_0x51cf59]]);
      }
    }
    return BytesBytesPacketDataMessage2["prototype"]["data"] = $util["newBuffer"]([]), BytesBytesPacketDataMessage2["prototype"]["data1"] = $util["newBuffer"]([]), BytesBytesPacketDataMessage2["create"] = function(properties) {
      return new BytesBytesPacketDataMessage2(properties);
    }, BytesBytesPacketDataMessage2["encode"] = function(_0xf22989, writer) {
      return writer || (writer = $Writer["create"]()), null != _0xf22989["data"] && Object["hasOwnProperty"]["call"](_0xf22989, "data") && writer["uint32"](10)["bytes"](_0xf22989["data"]), null != _0xf22989["data1"] && Object["hasOwnProperty"]["call"](_0xf22989, "data1") && writer["uint32"](18)["bytes"](_0xf22989["data1"]), writer;
    }, BytesBytesPacketDataMessage2["encodeDelimited"] = function(_0x4385bd, writer) {
      return this["encode"](_0x4385bd, writer)["ldelim"]();
    }, BytesBytesPacketDataMessage2["decode"] = function(_0x12b66b, length2) {
      _0x12b66b instanceof _0x476e3c || (_0x12b66b = _0x476e3c["create"](_0x12b66b));
      for (var _0x288d29 = void 0 === length2 ? _0x12b66b["len"] : _0x12b66b["pos"] + length2, _0x413344 = new $root["BytesBytesPacketDataMessage"](); _0x12b66b["pos"] < _0x288d29; ) {
        var tag = _0x12b66b["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x413344["data"] = _0x12b66b["bytes"]();
            break;
          case 2:
            _0x413344["data1"] = _0x12b66b["bytes"]();
            break;
          default:
            _0x12b66b["skipType"](7 & tag);
        }
      }
      return _0x413344;
    }, BytesBytesPacketDataMessage2["decodeDelimited"] = function(_0x3344a2) {
      return _0x3344a2 instanceof _0x476e3c || (_0x3344a2 = new _0x476e3c(_0x3344a2)), this["decode"](_0x3344a2, _0x3344a2["uint32"]());
    }, BytesBytesPacketDataMessage2["verify"] = function(_0x328bbc) {
      return "object" != typeof _0x328bbc || null === _0x328bbc ? "object expected" : null != _0x328bbc["data"] && _0x328bbc["hasOwnProperty"]("data") && !(_0x328bbc["data"] && "number" == typeof _0x328bbc["data"]["length"] || $util["isString"](_0x328bbc["data"])) ? "data: buffer expected" : null != _0x328bbc["data1"] && _0x328bbc["hasOwnProperty"]("data1") && !(_0x328bbc["data1"] && "number" == typeof _0x328bbc["data1"]["length"] || $util["isString"](_0x328bbc["data1"])) ? "data1: buffer expected" : null;
    }, BytesBytesPacketDataMessage2["fromObject"] = function(object) {
      if (object instanceof $root["BytesBytesPacketDataMessage"]) return object;
      var _0x281409 = new $root["BytesBytesPacketDataMessage"]();
      return null != object["data"] && ("string" == typeof object["data"] ? $util["base64"]["decode"](object["data"], _0x281409["data"] = $util["newBuffer"]($util["base64"]["length"](object["data"])), 0) : object["data"]["length"] >= 0 && (_0x281409["data"] = object["data"])), null != object["data1"] && ("string" == typeof object["data1"] ? $util["base64"]["decode"](object["data1"], _0x281409["data1"] = $util["newBuffer"]($util["base64"]["length"](object["data1"])), 0) : object["data1"]["length"] >= 0 && (_0x281409["data1"] = object["data1"])), _0x281409;
    }, BytesBytesPacketDataMessage2["toObject"] = function(_0x493bb3, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (options["bytes"] === String ? object["data"] = "" : (object["data"] = [], options["bytes"] !== Array && (object["data"] = $util["newBuffer"](object["data"]))), options["bytes"] === String ? object["data1"] = "" : (object["data1"] = [], options["bytes"] !== Array && (object["data1"] = $util["newBuffer"](object["data1"])))), null != _0x493bb3["data"] && _0x493bb3["hasOwnProperty"]("data") && (object["data"] = options["bytes"] === String ? $util["base64"]["encode"](_0x493bb3["data"], 0, _0x493bb3["data"]["length"]) : options["bytes"] === Array ? Array["prototype"]["slice"]["call"](_0x493bb3["data"]) : _0x493bb3["data"]), null != _0x493bb3["data1"] && _0x493bb3["hasOwnProperty"]("data1") && (object["data1"] = options["bytes"] === String ? $util["base64"]["encode"](_0x493bb3["data1"], 0, _0x493bb3["data1"]["length"]) : options["bytes"] === Array ? Array["prototype"]["slice"]["call"](_0x493bb3["data1"]) : _0x493bb3["data1"]), object;
    }, BytesBytesPacketDataMessage2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, BytesBytesPacketDataMessage2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/BytesBytesPacketDataMessage";
    }, BytesBytesPacketDataMessage2;
  }(), $root["NumberBytesPacketDataMessage"] = function() {
    function NumberBytesPacketDataMessage2(properties) {
      if (properties) {
        for (var _0x1df086 = Object["keys"](properties), _0x2f3cea = 0; _0x2f3cea < _0x1df086["length"]; ++_0x2f3cea) null != properties[_0x1df086[_0x2f3cea]] && (this[_0x1df086[_0x2f3cea]] = properties[_0x1df086[_0x2f3cea]]);
      }
    }
    return NumberBytesPacketDataMessage2["prototype"]["data"] = 0, NumberBytesPacketDataMessage2["prototype"]["data1"] = $util["newBuffer"]([]), NumberBytesPacketDataMessage2["create"] = function(properties) {
      return new NumberBytesPacketDataMessage2(properties);
    }, NumberBytesPacketDataMessage2["encode"] = function(_0x3a5656, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x3a5656["data"] && Object["hasOwnProperty"]["call"](_0x3a5656, "data") && writer["uint32"](8)["uint32"](_0x3a5656["data"]), null != _0x3a5656["data1"] && Object["hasOwnProperty"]["call"](_0x3a5656, "data1") && writer["uint32"](18)["bytes"](_0x3a5656["data1"]), writer;
    }, NumberBytesPacketDataMessage2["encodeDelimited"] = function(_0x145684, writer) {
      return this["encode"](_0x145684, writer)["ldelim"]();
    }, NumberBytesPacketDataMessage2["decode"] = function(_0x155da8, length2) {
      _0x155da8 instanceof _0x476e3c || (_0x155da8 = _0x476e3c["create"](_0x155da8));
      for (var _0x4ba1af = void 0 === length2 ? _0x155da8["len"] : _0x155da8["pos"] + length2, _0x3fe763 = new $root["NumberBytesPacketDataMessage"](); _0x155da8["pos"] < _0x4ba1af; ) {
        var tag = _0x155da8["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x3fe763["data"] = _0x155da8["uint32"]();
            break;
          case 2:
            _0x3fe763["data1"] = _0x155da8["bytes"]();
            break;
          default:
            _0x155da8["skipType"](7 & tag);
        }
      }
      return _0x3fe763;
    }, NumberBytesPacketDataMessage2["decodeDelimited"] = function(_0x146ad9) {
      return _0x146ad9 instanceof _0x476e3c || (_0x146ad9 = new _0x476e3c(_0x146ad9)), this["decode"](_0x146ad9, _0x146ad9["uint32"]());
    }, NumberBytesPacketDataMessage2["verify"] = function(_0x2cb152) {
      return "object" != typeof _0x2cb152 || null === _0x2cb152 ? "object expected" : null != _0x2cb152["data"] && _0x2cb152["hasOwnProperty"]("data") && !$util["isInteger"](_0x2cb152["data"]) ? "data: integer expected" : null != _0x2cb152["data1"] && _0x2cb152["hasOwnProperty"]("data1") && !(_0x2cb152["data1"] && "number" == typeof _0x2cb152["data1"]["length"] || $util["isString"](_0x2cb152["data1"])) ? "data1: buffer expected" : null;
    }, NumberBytesPacketDataMessage2["fromObject"] = function(object) {
      if (object instanceof $root["NumberBytesPacketDataMessage"]) return object;
      var _0x521dc4 = new $root["NumberBytesPacketDataMessage"]();
      return null != object["data"] && (_0x521dc4["data"] = object["data"] >>> 0), null != object["data1"] && ("string" == typeof object["data1"] ? $util["base64"]["decode"](object["data1"], _0x521dc4["data1"] = $util["newBuffer"]($util["base64"]["length"](object["data1"])), 0) : object["data1"]["length"] >= 0 && (_0x521dc4["data1"] = object["data1"])), _0x521dc4;
    }, NumberBytesPacketDataMessage2["toObject"] = function(_0x1162b5, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["data"] = 0, options["bytes"] === String ? object["data1"] = "" : (object["data1"] = [], options["bytes"] !== Array && (object["data1"] = $util["newBuffer"](object["data1"])))), null != _0x1162b5["data"] && _0x1162b5["hasOwnProperty"]("data") && (object["data"] = _0x1162b5["data"]), null != _0x1162b5["data1"] && _0x1162b5["hasOwnProperty"]("data1") && (object["data1"] = options["bytes"] === String ? $util["base64"]["encode"](_0x1162b5["data1"], 0, _0x1162b5["data1"]["length"]) : options["bytes"] === Array ? Array["prototype"]["slice"]["call"](_0x1162b5["data1"]) : _0x1162b5["data1"]), object;
    }, NumberBytesPacketDataMessage2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, NumberBytesPacketDataMessage2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/NumberBytesPacketDataMessage";
    }, NumberBytesPacketDataMessage2;
  }(), $root["NumberNumberPacketDataMessage"] = function() {
    function NumberNumberPacketDataMessage2(properties) {
      if (properties) {
        for (var _0x2dc4d6 = Object["keys"](properties), _0x23b446 = 0; _0x23b446 < _0x2dc4d6["length"]; ++_0x23b446) null != properties[_0x2dc4d6[_0x23b446]] && (this[_0x2dc4d6[_0x23b446]] = properties[_0x2dc4d6[_0x23b446]]);
      }
    }
    return NumberNumberPacketDataMessage2["prototype"]["data"] = 0, NumberNumberPacketDataMessage2["prototype"]["data1"] = 0, NumberNumberPacketDataMessage2["create"] = function(properties) {
      return new NumberNumberPacketDataMessage2(properties);
    }, NumberNumberPacketDataMessage2["encode"] = function(_0x1a24ba, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x1a24ba["data"] && Object["hasOwnProperty"]["call"](_0x1a24ba, "data") && writer["uint32"](8)["uint32"](_0x1a24ba["data"]), null != _0x1a24ba["data1"] && Object["hasOwnProperty"]["call"](_0x1a24ba, "data1") && writer["uint32"](16)["uint32"](_0x1a24ba["data1"]), writer;
    }, NumberNumberPacketDataMessage2["encodeDelimited"] = function(_0x192569, writer) {
      return this["encode"](_0x192569, writer)["ldelim"]();
    }, NumberNumberPacketDataMessage2["decode"] = function(_0x5e9a1d, length2) {
      _0x5e9a1d instanceof _0x476e3c || (_0x5e9a1d = _0x476e3c["create"](_0x5e9a1d));
      for (var _0x4e6744 = void 0 === length2 ? _0x5e9a1d["len"] : _0x5e9a1d["pos"] + length2, _0x1fa616 = new $root["NumberNumberPacketDataMessage"](); _0x5e9a1d["pos"] < _0x4e6744; ) {
        var tag = _0x5e9a1d["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x1fa616["data"] = _0x5e9a1d["uint32"]();
            break;
          case 2:
            _0x1fa616["data1"] = _0x5e9a1d["uint32"]();
            break;
          default:
            _0x5e9a1d["skipType"](7 & tag);
        }
      }
      return _0x1fa616;
    }, NumberNumberPacketDataMessage2["decodeDelimited"] = function(_0x129127) {
      return _0x129127 instanceof _0x476e3c || (_0x129127 = new _0x476e3c(_0x129127)), this["decode"](_0x129127, _0x129127["uint32"]());
    }, NumberNumberPacketDataMessage2["verify"] = function(_0x17c0df) {
      return "object" != typeof _0x17c0df || null === _0x17c0df ? "object expected" : null != _0x17c0df["data"] && _0x17c0df["hasOwnProperty"]("data") && !$util["isInteger"](_0x17c0df["data"]) ? "data: integer expected" : null != _0x17c0df["data1"] && _0x17c0df["hasOwnProperty"]("data1") && !$util["isInteger"](_0x17c0df["data1"]) ? "data1: integer expected" : null;
    }, NumberNumberPacketDataMessage2["fromObject"] = function(object) {
      if (object instanceof $root["NumberNumberPacketDataMessage"]) return object;
      var _0x4e800c = new $root["NumberNumberPacketDataMessage"]();
      return null != object["data"] && (_0x4e800c["data"] = object["data"] >>> 0), null != object["data1"] && (_0x4e800c["data1"] = object["data1"] >>> 0), _0x4e800c;
    }, NumberNumberPacketDataMessage2["toObject"] = function(_0x4f66dc, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["data"] = 0, object["data1"] = 0), null != _0x4f66dc["data"] && _0x4f66dc["hasOwnProperty"]("data") && (object["data"] = _0x4f66dc["data"]), null != _0x4f66dc["data1"] && _0x4f66dc["hasOwnProperty"]("data1") && (object["data1"] = _0x4f66dc["data1"]), object;
    }, NumberNumberPacketDataMessage2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, NumberNumberPacketDataMessage2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/NumberNumberPacketDataMessage";
    }, NumberNumberPacketDataMessage2;
  }(), $root["NumberObjectPacketDataMessage"] = function() {
    function NumberObjectPacketDataMessage2(properties) {
      if (properties) {
        for (var _0x3c82f4 = Object["keys"](properties), _0x1c1d30 = 0; _0x1c1d30 < _0x3c82f4["length"]; ++_0x1c1d30) null != properties[_0x3c82f4[_0x1c1d30]] && (this[_0x3c82f4[_0x1c1d30]] = properties[_0x3c82f4[_0x1c1d30]]);
      }
    }
    return NumberObjectPacketDataMessage2["prototype"]["data"] = 0, NumberObjectPacketDataMessage2["prototype"]["data1"] = "", NumberObjectPacketDataMessage2["create"] = function(properties) {
      return new NumberObjectPacketDataMessage2(properties);
    }, NumberObjectPacketDataMessage2["encode"] = function(_0xd6adaa, writer) {
      return writer || (writer = $Writer["create"]()), null != _0xd6adaa["data"] && Object["hasOwnProperty"]["call"](_0xd6adaa, "data") && writer["uint32"](8)["uint32"](_0xd6adaa["data"]), null != _0xd6adaa["data1"] && Object["hasOwnProperty"]["call"](_0xd6adaa, "data1") && writer["uint32"](18)["string"](_0xd6adaa["data1"]), writer;
    }, NumberObjectPacketDataMessage2["encodeDelimited"] = function(_0x56c1b1, writer) {
      return this["encode"](_0x56c1b1, writer)["ldelim"]();
    }, NumberObjectPacketDataMessage2["decode"] = function(_0x60cd8a, length2) {
      _0x60cd8a instanceof _0x476e3c || (_0x60cd8a = _0x476e3c["create"](_0x60cd8a));
      for (var _0x269b98 = void 0 === length2 ? _0x60cd8a["len"] : _0x60cd8a["pos"] + length2, _0x225c7c = new $root["NumberObjectPacketDataMessage"](); _0x60cd8a["pos"] < _0x269b98; ) {
        var tag = _0x60cd8a["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x225c7c["data"] = _0x60cd8a["uint32"]();
            break;
          case 2:
            _0x225c7c["data1"] = _0x60cd8a["string"]();
            break;
          default:
            _0x60cd8a["skipType"](7 & tag);
        }
      }
      return _0x225c7c;
    }, NumberObjectPacketDataMessage2["decodeDelimited"] = function(_0x24b81a) {
      return _0x24b81a instanceof _0x476e3c || (_0x24b81a = new _0x476e3c(_0x24b81a)), this["decode"](_0x24b81a, _0x24b81a["uint32"]());
    }, NumberObjectPacketDataMessage2["verify"] = function(_0x36919f) {
      return "object" != typeof _0x36919f || null === _0x36919f ? "object expected" : null != _0x36919f["data"] && _0x36919f["hasOwnProperty"]("data") && !$util["isInteger"](_0x36919f["data"]) ? "data: integer expected" : null != _0x36919f["data1"] && _0x36919f["hasOwnProperty"]("data1") && !$util["isString"](_0x36919f["data1"]) ? "data1: string expected" : null;
    }, NumberObjectPacketDataMessage2["fromObject"] = function(object) {
      if (object instanceof $root["NumberObjectPacketDataMessage"]) return object;
      var _0x1c4766 = new $root["NumberObjectPacketDataMessage"]();
      return null != object["data"] && (_0x1c4766["data"] = object["data"] >>> 0), null != object["data1"] && (_0x1c4766["data1"] = String(object["data1"])), _0x1c4766;
    }, NumberObjectPacketDataMessage2["toObject"] = function(_0x40d16f, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["data"] = 0, object["data1"] = ""), null != _0x40d16f["data"] && _0x40d16f["hasOwnProperty"]("data") && (object["data"] = _0x40d16f["data"]), null != _0x40d16f["data1"] && _0x40d16f["hasOwnProperty"]("data1") && (object["data1"] = _0x40d16f["data1"]), object;
    }, NumberObjectPacketDataMessage2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, NumberObjectPacketDataMessage2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/NumberObjectPacketDataMessage";
    }, NumberObjectPacketDataMessage2;
  }(), $root["NumberStringPacketDataMessage"] = function() {
    function NumberStringPacketDataMessage2(properties) {
      if (properties) {
        for (var _0x566a6d = Object["keys"](properties), _0x11afbd = 0; _0x11afbd < _0x566a6d["length"]; ++_0x11afbd) null != properties[_0x566a6d[_0x11afbd]] && (this[_0x566a6d[_0x11afbd]] = properties[_0x566a6d[_0x11afbd]]);
      }
    }
    return NumberStringPacketDataMessage2["prototype"]["data"] = 0, NumberStringPacketDataMessage2["prototype"]["data1"] = "", NumberStringPacketDataMessage2["create"] = function(properties) {
      return new NumberStringPacketDataMessage2(properties);
    }, NumberStringPacketDataMessage2["encode"] = function(_0x3f0ca7, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x3f0ca7["data"] && Object["hasOwnProperty"]["call"](_0x3f0ca7, "data") && writer["uint32"](8)["uint32"](_0x3f0ca7["data"]), null != _0x3f0ca7["data1"] && Object["hasOwnProperty"]["call"](_0x3f0ca7, "data1") && writer["uint32"](18)["string"](_0x3f0ca7["data1"]), writer;
    }, NumberStringPacketDataMessage2["encodeDelimited"] = function(_0x549e5f, writer) {
      return this["encode"](_0x549e5f, writer)["ldelim"]();
    }, NumberStringPacketDataMessage2["decode"] = function(_0x55407d, length2) {
      _0x55407d instanceof _0x476e3c || (_0x55407d = _0x476e3c["create"](_0x55407d));
      for (var _0x29a039 = void 0 === length2 ? _0x55407d["len"] : _0x55407d["pos"] + length2, _0x37cd3b = new $root["NumberStringPacketDataMessage"](); _0x55407d["pos"] < _0x29a039; ) {
        var tag = _0x55407d["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x37cd3b["data"] = _0x55407d["uint32"]();
            break;
          case 2:
            _0x37cd3b["data1"] = _0x55407d["string"]();
            break;
          default:
            _0x55407d["skipType"](7 & tag);
        }
      }
      return _0x37cd3b;
    }, NumberStringPacketDataMessage2["decodeDelimited"] = function(_0x10a2b3) {
      return _0x10a2b3 instanceof _0x476e3c || (_0x10a2b3 = new _0x476e3c(_0x10a2b3)), this["decode"](_0x10a2b3, _0x10a2b3["uint32"]());
    }, NumberStringPacketDataMessage2["verify"] = function(_0x3b9f1b) {
      return "object" != typeof _0x3b9f1b || null === _0x3b9f1b ? "object expected" : null != _0x3b9f1b["data"] && _0x3b9f1b["hasOwnProperty"]("data") && !$util["isInteger"](_0x3b9f1b["data"]) ? "data: integer expected" : null != _0x3b9f1b["data1"] && _0x3b9f1b["hasOwnProperty"]("data1") && !$util["isString"](_0x3b9f1b["data1"]) ? "data1: string expected" : null;
    }, NumberStringPacketDataMessage2["fromObject"] = function(object) {
      if (object instanceof $root["NumberStringPacketDataMessage"]) return object;
      var _0x57f860 = new $root["NumberStringPacketDataMessage"]();
      return null != object["data"] && (_0x57f860["data"] = object["data"] >>> 0), null != object["data1"] && (_0x57f860["data1"] = String(object["data1"])), _0x57f860;
    }, NumberStringPacketDataMessage2["toObject"] = function(_0x2ad2c2, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["data"] = 0, object["data1"] = ""), null != _0x2ad2c2["data"] && _0x2ad2c2["hasOwnProperty"]("data") && (object["data"] = _0x2ad2c2["data"]), null != _0x2ad2c2["data1"] && _0x2ad2c2["hasOwnProperty"]("data1") && (object["data1"] = _0x2ad2c2["data1"]), object;
    }, NumberStringPacketDataMessage2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, NumberStringPacketDataMessage2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/NumberStringPacketDataMessage";
    }, NumberStringPacketDataMessage2;
  }(), $root["ObjectBufferPacketDataMessage"] = function() {
    function ObjectBufferPacketDataMessage2(properties) {
      if (properties) {
        for (var _0x486c01 = Object["keys"](properties), _0x1092fc = 0; _0x1092fc < _0x486c01["length"]; ++_0x1092fc) null != properties[_0x486c01[_0x1092fc]] && (this[_0x486c01[_0x1092fc]] = properties[_0x486c01[_0x1092fc]]);
      }
    }
    return ObjectBufferPacketDataMessage2["prototype"]["data"] = "", ObjectBufferPacketDataMessage2["prototype"]["data1"] = $util["newBuffer"]([]), ObjectBufferPacketDataMessage2["create"] = function(properties) {
      return new ObjectBufferPacketDataMessage2(properties);
    }, ObjectBufferPacketDataMessage2["encode"] = function(_0x34a1dc, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x34a1dc["data"] && Object["hasOwnProperty"]["call"](_0x34a1dc, "data") && writer["uint32"](10)["string"](_0x34a1dc["data"]), null != _0x34a1dc["data1"] && Object["hasOwnProperty"]["call"](_0x34a1dc, "data1") && writer["uint32"](18)["bytes"](_0x34a1dc["data1"]), writer;
    }, ObjectBufferPacketDataMessage2["encodeDelimited"] = function(_0x32a3d0, writer) {
      return this["encode"](_0x32a3d0, writer)["ldelim"]();
    }, ObjectBufferPacketDataMessage2["decode"] = function(_0x10da64, length2) {
      _0x10da64 instanceof _0x476e3c || (_0x10da64 = _0x476e3c["create"](_0x10da64));
      for (var _0x4e32a4 = void 0 === length2 ? _0x10da64["len"] : _0x10da64["pos"] + length2, _0x30ed1b = new $root["ObjectBufferPacketDataMessage"](); _0x10da64["pos"] < _0x4e32a4; ) {
        var tag = _0x10da64["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x30ed1b["data"] = _0x10da64["string"]();
            break;
          case 2:
            _0x30ed1b["data1"] = _0x10da64["bytes"]();
            break;
          default:
            _0x10da64["skipType"](7 & tag);
        }
      }
      return _0x30ed1b;
    }, ObjectBufferPacketDataMessage2["decodeDelimited"] = function(_0x390f3f) {
      return _0x390f3f instanceof _0x476e3c || (_0x390f3f = new _0x476e3c(_0x390f3f)), this["decode"](_0x390f3f, _0x390f3f["uint32"]());
    }, ObjectBufferPacketDataMessage2["verify"] = function(_0x16a0ee) {
      return "object" != typeof _0x16a0ee || null === _0x16a0ee ? "object expected" : null != _0x16a0ee["data"] && _0x16a0ee["hasOwnProperty"]("data") && !$util["isString"](_0x16a0ee["data"]) ? "data: string expected" : null != _0x16a0ee["data1"] && _0x16a0ee["hasOwnProperty"]("data1") && !(_0x16a0ee["data1"] && "number" == typeof _0x16a0ee["data1"]["length"] || $util["isString"](_0x16a0ee["data1"])) ? "data1: buffer expected" : null;
    }, ObjectBufferPacketDataMessage2["fromObject"] = function(object) {
      if (object instanceof $root["ObjectBufferPacketDataMessage"]) return object;
      var _0x27f455 = new $root["ObjectBufferPacketDataMessage"]();
      return null != object["data"] && (_0x27f455["data"] = String(object["data"])), null != object["data1"] && ("string" == typeof object["data1"] ? $util["base64"]["decode"](object["data1"], _0x27f455["data1"] = $util["newBuffer"]($util["base64"]["length"](object["data1"])), 0) : object["data1"]["length"] >= 0 && (_0x27f455["data1"] = object["data1"])), _0x27f455;
    }, ObjectBufferPacketDataMessage2["toObject"] = function(_0x558d48, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["data"] = "", options["bytes"] === String ? object["data1"] = "" : (object["data1"] = [], options["bytes"] !== Array && (object["data1"] = $util["newBuffer"](object["data1"])))), null != _0x558d48["data"] && _0x558d48["hasOwnProperty"]("data") && (object["data"] = _0x558d48["data"]), null != _0x558d48["data1"] && _0x558d48["hasOwnProperty"]("data1") && (object["data1"] = options["bytes"] === String ? $util["base64"]["encode"](_0x558d48["data1"], 0, _0x558d48["data1"]["length"]) : options["bytes"] === Array ? Array["prototype"]["slice"]["call"](_0x558d48["data1"]) : _0x558d48["data1"]), object;
    }, ObjectBufferPacketDataMessage2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, ObjectBufferPacketDataMessage2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/ObjectBufferPacketDataMessage";
    }, ObjectBufferPacketDataMessage2;
  }(), $root["ObjectObjectPacketDataMessage"] = function() {
    function ObjectObjectPacketDataMessage2(properties) {
      if (properties) {
        for (var _0x387ecf = Object["keys"](properties), _0x59d581 = 0; _0x59d581 < _0x387ecf["length"]; ++_0x59d581) null != properties[_0x387ecf[_0x59d581]] && (this[_0x387ecf[_0x59d581]] = properties[_0x387ecf[_0x59d581]]);
      }
    }
    return ObjectObjectPacketDataMessage2["prototype"]["data"] = "", ObjectObjectPacketDataMessage2["prototype"]["data1"] = "", ObjectObjectPacketDataMessage2["create"] = function(properties) {
      return new ObjectObjectPacketDataMessage2(properties);
    }, ObjectObjectPacketDataMessage2["encode"] = function(_0x1a8667, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x1a8667["data"] && Object["hasOwnProperty"]["call"](_0x1a8667, "data") && writer["uint32"](10)["string"](_0x1a8667["data"]), null != _0x1a8667["data1"] && Object["hasOwnProperty"]["call"](_0x1a8667, "data1") && writer["uint32"](18)["string"](_0x1a8667["data1"]), writer;
    }, ObjectObjectPacketDataMessage2["encodeDelimited"] = function(_0x2e60dc, writer) {
      return this["encode"](_0x2e60dc, writer)["ldelim"]();
    }, ObjectObjectPacketDataMessage2["decode"] = function(_0x558239, length2) {
      _0x558239 instanceof _0x476e3c || (_0x558239 = _0x476e3c["create"](_0x558239));
      for (var _0x1bb95c = void 0 === length2 ? _0x558239["len"] : _0x558239["pos"] + length2, _0x30a09f = new $root["ObjectObjectPacketDataMessage"](); _0x558239["pos"] < _0x1bb95c; ) {
        var tag = _0x558239["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x30a09f["data"] = _0x558239["string"]();
            break;
          case 2:
            _0x30a09f["data1"] = _0x558239["string"]();
            break;
          default:
            _0x558239["skipType"](7 & tag);
        }
      }
      return _0x30a09f;
    }, ObjectObjectPacketDataMessage2["decodeDelimited"] = function(_0x41fa88) {
      return _0x41fa88 instanceof _0x476e3c || (_0x41fa88 = new _0x476e3c(_0x41fa88)), this["decode"](_0x41fa88, _0x41fa88["uint32"]());
    }, ObjectObjectPacketDataMessage2["verify"] = function(_0x1aaaf) {
      return "object" != typeof _0x1aaaf || null === _0x1aaaf ? "object expected" : null != _0x1aaaf["data"] && _0x1aaaf["hasOwnProperty"]("data") && !$util["isString"](_0x1aaaf["data"]) ? "data: string expected" : null != _0x1aaaf["data1"] && _0x1aaaf["hasOwnProperty"]("data1") && !$util["isString"](_0x1aaaf["data1"]) ? "data1: string expected" : null;
    }, ObjectObjectPacketDataMessage2["fromObject"] = function(object) {
      if (object instanceof $root["ObjectObjectPacketDataMessage"]) return object;
      var _0x4c9c19 = new $root["ObjectObjectPacketDataMessage"]();
      return null != object["data"] && (_0x4c9c19["data"] = String(object["data"])), null != object["data1"] && (_0x4c9c19["data1"] = String(object["data1"])), _0x4c9c19;
    }, ObjectObjectPacketDataMessage2["toObject"] = function(_0x171a5c, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["data"] = "", object["data1"] = ""), null != _0x171a5c["data"] && _0x171a5c["hasOwnProperty"]("data") && (object["data"] = _0x171a5c["data"]), null != _0x171a5c["data1"] && _0x171a5c["hasOwnProperty"]("data1") && (object["data1"] = _0x171a5c["data1"]), object;
    }, ObjectObjectPacketDataMessage2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, ObjectObjectPacketDataMessage2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/ObjectObjectPacketDataMessage";
    }, ObjectObjectPacketDataMessage2;
  }(), $root["PacketMessage"] = function() {
    function PacketMessage2(properties) {
      if (properties) {
        for (var _0x4ff1cb = Object["keys"](properties), _0x4597e2 = 0; _0x4597e2 < _0x4ff1cb["length"]; ++_0x4597e2) null != properties[_0x4ff1cb[_0x4597e2]] && (this[_0x4ff1cb[_0x4597e2]] = properties[_0x4ff1cb[_0x4597e2]]);
      }
    }
    return PacketMessage2["prototype"]["type"] = 0, PacketMessage2["prototype"]["id"] = 0, PacketMessage2["prototype"]["nsp"] = "", PacketMessage2["prototype"]["data"] = $util["newBuffer"]([]), PacketMessage2["prototype"]["options"] = $util["newBuffer"]([]), PacketMessage2["create"] = function(properties) {
      return new PacketMessage2(properties);
    }, PacketMessage2["encode"] = function(_0x119f54, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x119f54["type"] && Object["hasOwnProperty"]["call"](_0x119f54, "type") && writer["uint32"](8)["uint32"](_0x119f54["type"]), null != _0x119f54["id"] && Object["hasOwnProperty"]["call"](_0x119f54, "id") && writer["uint32"](16)["uint32"](_0x119f54["id"]), null != _0x119f54["nsp"] && Object["hasOwnProperty"]["call"](_0x119f54, "nsp") && writer["uint32"](26)["string"](_0x119f54["nsp"]), null != _0x119f54["data"] && Object["hasOwnProperty"]["call"](_0x119f54, "data") && writer["uint32"](34)["bytes"](_0x119f54["data"]), null != _0x119f54["options"] && Object["hasOwnProperty"]["call"](_0x119f54, "options") && writer["uint32"](42)["bytes"](_0x119f54["options"]), writer;
    }, PacketMessage2["encodeDelimited"] = function(_0x321091, writer) {
      return this["encode"](_0x321091, writer)["ldelim"]();
    }, PacketMessage2["decode"] = function(_0x536a97, length2) {
      _0x536a97 instanceof _0x476e3c || (_0x536a97 = _0x476e3c["create"](_0x536a97));
      for (var _0xbbbec0 = void 0 === length2 ? _0x536a97["len"] : _0x536a97["pos"] + length2, _0x889417 = new $root["PacketMessage"](); _0x536a97["pos"] < _0xbbbec0; ) {
        var tag = _0x536a97["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x889417["type"] = _0x536a97["uint32"]();
            break;
          case 2:
            _0x889417["id"] = _0x536a97["uint32"]();
            break;
          case 3:
            _0x889417["nsp"] = _0x536a97["string"]();
            break;
          case 4:
            _0x889417["data"] = _0x536a97["bytes"]();
            break;
          case 5:
            _0x889417["options"] = _0x536a97["bytes"]();
            break;
          default:
            _0x536a97["skipType"](7 & tag);
        }
      }
      return _0x889417;
    }, PacketMessage2["decodeDelimited"] = function(_0x47d050) {
      return _0x47d050 instanceof _0x476e3c || (_0x47d050 = new _0x476e3c(_0x47d050)), this["decode"](_0x47d050, _0x47d050["uint32"]());
    }, PacketMessage2["verify"] = function(_0xb1468b) {
      return "object" != typeof _0xb1468b || null === _0xb1468b ? "object expected" : null != _0xb1468b["type"] && _0xb1468b["hasOwnProperty"]("type") && !$util["isInteger"](_0xb1468b["type"]) ? "type: integer expected" : null != _0xb1468b["id"] && _0xb1468b["hasOwnProperty"]("id") && !$util["isInteger"](_0xb1468b["id"]) ? "id: integer expected" : null != _0xb1468b["nsp"] && _0xb1468b["hasOwnProperty"]("nsp") && !$util["isString"](_0xb1468b["nsp"]) ? "nsp: string expected" : null != _0xb1468b["data"] && _0xb1468b["hasOwnProperty"]("data") && !(_0xb1468b["data"] && "number" == typeof _0xb1468b["data"]["length"] || $util["isString"](_0xb1468b["data"])) ? "data: buffer expected" : null != _0xb1468b["options"] && _0xb1468b["hasOwnProperty"]("options") && !(_0xb1468b["options"] && "number" == typeof _0xb1468b["options"]["length"] || $util["isString"](_0xb1468b["options"])) ? "options: buffer expected" : null;
    }, PacketMessage2["fromObject"] = function(object) {
      if (object instanceof $root["PacketMessage"]) return object;
      var _0x15d7ce = new $root["PacketMessage"]();
      return null != object["type"] && (_0x15d7ce["type"] = object["type"] >>> 0), null != object["id"] && (_0x15d7ce["id"] = object["id"] >>> 0), null != object["nsp"] && (_0x15d7ce["nsp"] = String(object["nsp"])), null != object["data"] && ("string" == typeof object["data"] ? $util["base64"]["decode"](object["data"], _0x15d7ce["data"] = $util["newBuffer"]($util["base64"]["length"](object["data"])), 0) : object["data"]["length"] >= 0 && (_0x15d7ce["data"] = object["data"])), null != object["options"] && ("string" == typeof object["options"] ? $util["base64"]["decode"](object["options"], _0x15d7ce["options"] = $util["newBuffer"]($util["base64"]["length"](object["options"])), 0) : object["options"]["length"] >= 0 && (_0x15d7ce["options"] = object["options"])), _0x15d7ce;
    }, PacketMessage2["toObject"] = function(_0x3126ce, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["type"] = 0, object["id"] = 0, object["nsp"] = "", options["bytes"] === String ? object["data"] = "" : (object["data"] = [], options["bytes"] !== Array && (object["data"] = $util["newBuffer"](object["data"]))), options["bytes"] === String ? object["options"] = "" : (object["options"] = [], options["bytes"] !== Array && (object["options"] = $util["newBuffer"](object["options"])))), null != _0x3126ce["type"] && _0x3126ce["hasOwnProperty"]("type") && (object["type"] = _0x3126ce["type"]), null != _0x3126ce["id"] && _0x3126ce["hasOwnProperty"]("id") && (object["id"] = _0x3126ce["id"]), null != _0x3126ce["nsp"] && _0x3126ce["hasOwnProperty"]("nsp") && (object["nsp"] = _0x3126ce["nsp"]), null != _0x3126ce["data"] && _0x3126ce["hasOwnProperty"]("data") && (object["data"] = options["bytes"] === String ? $util["base64"]["encode"](_0x3126ce["data"], 0, _0x3126ce["data"]["length"]) : options["bytes"] === Array ? Array["prototype"]["slice"]["call"](_0x3126ce["data"]) : _0x3126ce["data"]), null != _0x3126ce["options"] && _0x3126ce["hasOwnProperty"]("options") && (object["options"] = options["bytes"] === String ? $util["base64"]["encode"](_0x3126ce["options"], 0, _0x3126ce["options"]["length"]) : options["bytes"] === Array ? Array["prototype"]["slice"]["call"](_0x3126ce["options"]) : _0x3126ce["options"]), object;
    }, PacketMessage2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, PacketMessage2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/PacketMessage";
    }, PacketMessage2;
  }(), $root["PacketOptionsMessage"] = function() {
    function PacketOptionsMessage2(properties) {
      if (this["rooms"] = [], this["except"] = [], properties) {
        for (var _0x5e5926 = Object["keys"](properties), _0x29b4c1 = 0; _0x29b4c1 < _0x5e5926["length"]; ++_0x29b4c1) null != properties[_0x5e5926[_0x29b4c1]] && (this[_0x5e5926[_0x29b4c1]] = properties[_0x5e5926[_0x29b4c1]]);
      }
    }
    return PacketOptionsMessage2["prototype"]["flags"] = "", PacketOptionsMessage2["prototype"]["rooms"] = $util["emptyArray"], PacketOptionsMessage2["prototype"]["except"] = $util["emptyArray"], PacketOptionsMessage2["create"] = function(properties) {
      return new PacketOptionsMessage2(properties);
    }, PacketOptionsMessage2["encode"] = function(_0x2427de, writer) {
      if (writer || (writer = $Writer["create"]()), null != _0x2427de["flags"] && Object["hasOwnProperty"]["call"](_0x2427de, "flags") && writer["uint32"](10)["string"](_0x2427de["flags"]), null != _0x2427de["rooms"] && _0x2427de["rooms"]["length"]) {
        for (var _0x2abe23 = 0; _0x2abe23 < _0x2427de["rooms"]["length"]; ++_0x2abe23) writer["uint32"](18)["string"](_0x2427de["rooms"][_0x2abe23]);
      }
      if (null != _0x2427de["except"] && _0x2427de["except"]["length"]) {
        for (_0x2abe23 = 0; _0x2abe23 < _0x2427de["except"]["length"]; ++_0x2abe23) writer["uint32"](26)["string"](_0x2427de["except"][_0x2abe23]);
      }
      return writer;
    }, PacketOptionsMessage2["encodeDelimited"] = function(_0x316be5, writer) {
      return this["encode"](_0x316be5, writer)["ldelim"]();
    }, PacketOptionsMessage2["decode"] = function(_0x27ae61, length2) {
      _0x27ae61 instanceof _0x476e3c || (_0x27ae61 = _0x476e3c["create"](_0x27ae61));
      for (var _0x430be6 = void 0 === length2 ? _0x27ae61["len"] : _0x27ae61["pos"] + length2, _0x5d9f7b = new $root["PacketOptionsMessage"](); _0x27ae61["pos"] < _0x430be6; ) {
        var tag = _0x27ae61["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x5d9f7b["flags"] = _0x27ae61["string"]();
            break;
          case 2:
            _0x5d9f7b["rooms"] && _0x5d9f7b["rooms"]["length"] || (_0x5d9f7b["rooms"] = []), _0x5d9f7b["rooms"]["push"](_0x27ae61["string"]());
            break;
          case 3:
            _0x5d9f7b["except"] && _0x5d9f7b["except"]["length"] || (_0x5d9f7b["except"] = []), _0x5d9f7b["except"]["push"](_0x27ae61["string"]());
            break;
          default:
            _0x27ae61["skipType"](7 & tag);
        }
      }
      return _0x5d9f7b;
    }, PacketOptionsMessage2["decodeDelimited"] = function(_0x502642) {
      return _0x502642 instanceof _0x476e3c || (_0x502642 = new _0x476e3c(_0x502642)), this["decode"](_0x502642, _0x502642["uint32"]());
    }, PacketOptionsMessage2["verify"] = function(_0x106eae) {
      if ("object" != typeof _0x106eae || null === _0x106eae) return "object expected";
      if (null != _0x106eae["flags"] && _0x106eae["hasOwnProperty"]("flags") && !$util["isString"](_0x106eae["flags"])) return "flags: string expected";
      if (null != _0x106eae["rooms"] && _0x106eae["hasOwnProperty"]("rooms")) {
        if (!Array["isArray"](_0x106eae["rooms"])) return "rooms: array expected";
        for (var _0x30c489 = 0; _0x30c489 < _0x106eae["rooms"]["length"]; ++_0x30c489) if (!$util["isString"](_0x106eae["rooms"][_0x30c489])) return "rooms: string[] expected";
      }
      if (null != _0x106eae["except"] && _0x106eae["hasOwnProperty"]("except")) {
        if (!Array["isArray"](_0x106eae["except"])) return "except: array expected";
        for (_0x30c489 = 0; _0x30c489 < _0x106eae["except"]["length"]; ++_0x30c489) if (!$util["isString"](_0x106eae["except"][_0x30c489])) return "except: string[] expected";
      }
      return null;
    }, PacketOptionsMessage2["fromObject"] = function(object) {
      if (object instanceof $root["PacketOptionsMessage"]) return object;
      var _0x35c7e5 = new $root["PacketOptionsMessage"]();
      if (null != object["flags"] && (_0x35c7e5["flags"] = String(object["flags"])), object["rooms"]) {
        if (!Array["isArray"](object["rooms"])) throw TypeError(".PacketOptionsMessage.rooms: array expected");
        _0x35c7e5["rooms"] = [];
        for (var _0xd3741f = 0; _0xd3741f < object["rooms"]["length"]; ++_0xd3741f) _0x35c7e5["rooms"][_0xd3741f] = String(object["rooms"][_0xd3741f]);
      }
      if (object["except"]) {
        if (!Array["isArray"](object["except"])) throw TypeError(".PacketOptionsMessage.except: array expected");
        _0x35c7e5["except"] = [];
        for (_0xd3741f = 0; _0xd3741f < object["except"]["length"]; ++_0xd3741f) _0x35c7e5["except"][_0xd3741f] = String(object["except"][_0xd3741f]);
      }
      return _0x35c7e5;
    }, PacketOptionsMessage2["toObject"] = function(_0x23e76c, options) {
      options || (options = {});
      var object = {};
      if ((options["arrays"] || options["defaults"]) && (object["rooms"] = [], object["except"] = []), options["defaults"] && (object["flags"] = ""), null != _0x23e76c["flags"] && _0x23e76c["hasOwnProperty"]("flags") && (object["flags"] = _0x23e76c["flags"]), _0x23e76c["rooms"] && _0x23e76c["rooms"]["length"]) {
        object["rooms"] = [];
        for (var _0x684545 = 0; _0x684545 < _0x23e76c["rooms"]["length"]; ++_0x684545) object["rooms"][_0x684545] = _0x23e76c["rooms"][_0x684545];
      }
      if (_0x23e76c["except"] && _0x23e76c["except"]["length"]) {
        object["except"] = [];
        for (_0x684545 = 0; _0x684545 < _0x23e76c["except"]["length"]; ++_0x684545) object["except"][_0x684545] = _0x23e76c["except"][_0x684545];
      }
      return object;
    }, PacketOptionsMessage2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, PacketOptionsMessage2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/PacketOptionsMessage";
    }, PacketOptionsMessage2;
  }(), $root["StringBytesPacketDataMessage"] = function() {
    function StringBytesPacketDataMessage2(properties) {
      if (properties) {
        for (var _0x333a2e = Object["keys"](properties), _0x3c11d0 = 0; _0x3c11d0 < _0x333a2e["length"]; ++_0x3c11d0) null != properties[_0x333a2e[_0x3c11d0]] && (this[_0x333a2e[_0x3c11d0]] = properties[_0x333a2e[_0x3c11d0]]);
      }
    }
    return StringBytesPacketDataMessage2["prototype"]["data"] = "", StringBytesPacketDataMessage2["prototype"]["data1"] = $util["newBuffer"]([]), StringBytesPacketDataMessage2["create"] = function(properties) {
      return new StringBytesPacketDataMessage2(properties);
    }, StringBytesPacketDataMessage2["encode"] = function(_0xaa4f7f, writer) {
      return writer || (writer = $Writer["create"]()), null != _0xaa4f7f["data"] && Object["hasOwnProperty"]["call"](_0xaa4f7f, "data") && writer["uint32"](10)["string"](_0xaa4f7f["data"]), null != _0xaa4f7f["data1"] && Object["hasOwnProperty"]["call"](_0xaa4f7f, "data1") && writer["uint32"](18)["bytes"](_0xaa4f7f["data1"]), writer;
    }, StringBytesPacketDataMessage2["encodeDelimited"] = function(_0x3046ef, writer) {
      return this["encode"](_0x3046ef, writer)["ldelim"]();
    }, StringBytesPacketDataMessage2["decode"] = function(_0x1eae46, length2) {
      _0x1eae46 instanceof _0x476e3c || (_0x1eae46 = _0x476e3c["create"](_0x1eae46));
      for (var _0xedd25e = void 0 === length2 ? _0x1eae46["len"] : _0x1eae46["pos"] + length2, _0x5af013 = new $root["StringBytesPacketDataMessage"](); _0x1eae46["pos"] < _0xedd25e; ) {
        var tag = _0x1eae46["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x5af013["data"] = _0x1eae46["string"]();
            break;
          case 2:
            _0x5af013["data1"] = _0x1eae46["bytes"]();
            break;
          default:
            _0x1eae46["skipType"](7 & tag);
        }
      }
      return _0x5af013;
    }, StringBytesPacketDataMessage2["decodeDelimited"] = function(_0x21fdab) {
      return _0x21fdab instanceof _0x476e3c || (_0x21fdab = new _0x476e3c(_0x21fdab)), this["decode"](_0x21fdab, _0x21fdab["uint32"]());
    }, StringBytesPacketDataMessage2["verify"] = function(_0x55c509) {
      return "object" != typeof _0x55c509 || null === _0x55c509 ? "object expected" : null != _0x55c509["data"] && _0x55c509["hasOwnProperty"]("data") && !$util["isString"](_0x55c509["data"]) ? "data: string expected" : null != _0x55c509["data1"] && _0x55c509["hasOwnProperty"]("data1") && !(_0x55c509["data1"] && "number" == typeof _0x55c509["data1"]["length"] || $util["isString"](_0x55c509["data1"])) ? "data1: buffer expected" : null;
    }, StringBytesPacketDataMessage2["fromObject"] = function(object) {
      if (object instanceof $root["StringBytesPacketDataMessage"]) return object;
      var _0x5ec5c8 = new $root["StringBytesPacketDataMessage"]();
      return null != object["data"] && (_0x5ec5c8["data"] = String(object["data"])), null != object["data1"] && ("string" == typeof object["data1"] ? $util["base64"]["decode"](object["data1"], _0x5ec5c8["data1"] = $util["newBuffer"]($util["base64"]["length"](object["data1"])), 0) : object["data1"]["length"] >= 0 && (_0x5ec5c8["data1"] = object["data1"])), _0x5ec5c8;
    }, StringBytesPacketDataMessage2["toObject"] = function(_0x1ef861, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["data"] = "", options["bytes"] === String ? object["data1"] = "" : (object["data1"] = [], options["bytes"] !== Array && (object["data1"] = $util["newBuffer"](object["data1"])))), null != _0x1ef861["data"] && _0x1ef861["hasOwnProperty"]("data") && (object["data"] = _0x1ef861["data"]), null != _0x1ef861["data1"] && _0x1ef861["hasOwnProperty"]("data1") && (object["data1"] = options["bytes"] === String ? $util["base64"]["encode"](_0x1ef861["data1"], 0, _0x1ef861["data1"]["length"]) : options["bytes"] === Array ? Array["prototype"]["slice"]["call"](_0x1ef861["data1"]) : _0x1ef861["data1"]), object;
    }, StringBytesPacketDataMessage2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, StringBytesPacketDataMessage2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/StringBytesPacketDataMessage";
    }, StringBytesPacketDataMessage2;
  }(), $root["StringNumberPacketDataMessage"] = function() {
    function StringNumberPacketDataMessage2(properties) {
      if (properties) {
        for (var _0x24c466 = Object["keys"](properties), _0x40e212 = 0; _0x40e212 < _0x24c466["length"]; ++_0x40e212) null != properties[_0x24c466[_0x40e212]] && (this[_0x24c466[_0x40e212]] = properties[_0x24c466[_0x40e212]]);
      }
    }
    return StringNumberPacketDataMessage2["prototype"]["data"] = "", StringNumberPacketDataMessage2["prototype"]["data1"] = 0, StringNumberPacketDataMessage2["create"] = function(properties) {
      return new StringNumberPacketDataMessage2(properties);
    }, StringNumberPacketDataMessage2["encode"] = function(_0x3f4a20, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x3f4a20["data"] && Object["hasOwnProperty"]["call"](_0x3f4a20, "data") && writer["uint32"](10)["string"](_0x3f4a20["data"]), null != _0x3f4a20["data1"] && Object["hasOwnProperty"]["call"](_0x3f4a20, "data1") && writer["uint32"](16)["uint32"](_0x3f4a20["data1"]), writer;
    }, StringNumberPacketDataMessage2["encodeDelimited"] = function(_0x516c30, writer) {
      return this["encode"](_0x516c30, writer)["ldelim"]();
    }, StringNumberPacketDataMessage2["decode"] = function(_0x36ce9a, length2) {
      _0x36ce9a instanceof _0x476e3c || (_0x36ce9a = _0x476e3c["create"](_0x36ce9a));
      for (var _0x304503 = void 0 === length2 ? _0x36ce9a["len"] : _0x36ce9a["pos"] + length2, _0xbce99b = new $root["StringNumberPacketDataMessage"](); _0x36ce9a["pos"] < _0x304503; ) {
        var tag = _0x36ce9a["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0xbce99b["data"] = _0x36ce9a["string"]();
            break;
          case 2:
            _0xbce99b["data1"] = _0x36ce9a["uint32"]();
            break;
          default:
            _0x36ce9a["skipType"](7 & tag);
        }
      }
      return _0xbce99b;
    }, StringNumberPacketDataMessage2["decodeDelimited"] = function(_0x2716a5) {
      return _0x2716a5 instanceof _0x476e3c || (_0x2716a5 = new _0x476e3c(_0x2716a5)), this["decode"](_0x2716a5, _0x2716a5["uint32"]());
    }, StringNumberPacketDataMessage2["verify"] = function(_0x1842c0) {
      return "object" != typeof _0x1842c0 || null === _0x1842c0 ? "object expected" : null != _0x1842c0["data"] && _0x1842c0["hasOwnProperty"]("data") && !$util["isString"](_0x1842c0["data"]) ? "data: string expected" : null != _0x1842c0["data1"] && _0x1842c0["hasOwnProperty"]("data1") && !$util["isInteger"](_0x1842c0["data1"]) ? "data1: integer expected" : null;
    }, StringNumberPacketDataMessage2["fromObject"] = function(object) {
      if (object instanceof $root["StringNumberPacketDataMessage"]) return object;
      var _0x36c28a = new $root["StringNumberPacketDataMessage"]();
      return null != object["data"] && (_0x36c28a["data"] = String(object["data"])), null != object["data1"] && (_0x36c28a["data1"] = object["data1"] >>> 0), _0x36c28a;
    }, StringNumberPacketDataMessage2["toObject"] = function(_0x257a50, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["data"] = "", object["data1"] = 0), null != _0x257a50["data"] && _0x257a50["hasOwnProperty"]("data") && (object["data"] = _0x257a50["data"]), null != _0x257a50["data1"] && _0x257a50["hasOwnProperty"]("data1") && (object["data1"] = _0x257a50["data1"]), object;
    }, StringNumberPacketDataMessage2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, StringNumberPacketDataMessage2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/StringNumberPacketDataMessage";
    }, StringNumberPacketDataMessage2;
  }(), $root["StringObjectPacketDataMessage"] = function() {
    function StringObjectPacketDataMessage2(properties) {
      if (properties) {
        for (var _0x203fe7 = Object["keys"](properties), _0x48314f = 0; _0x48314f < _0x203fe7["length"]; ++_0x48314f) null != properties[_0x203fe7[_0x48314f]] && (this[_0x203fe7[_0x48314f]] = properties[_0x203fe7[_0x48314f]]);
      }
    }
    return StringObjectPacketDataMessage2["prototype"]["data"] = "", StringObjectPacketDataMessage2["prototype"]["data1"] = "", StringObjectPacketDataMessage2["create"] = function(properties) {
      return new StringObjectPacketDataMessage2(properties);
    }, StringObjectPacketDataMessage2["encode"] = function(_0x495f8d, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x495f8d["data"] && Object["hasOwnProperty"]["call"](_0x495f8d, "data") && writer["uint32"](10)["string"](_0x495f8d["data"]), null != _0x495f8d["data1"] && Object["hasOwnProperty"]["call"](_0x495f8d, "data1") && writer["uint32"](18)["string"](_0x495f8d["data1"]), writer;
    }, StringObjectPacketDataMessage2["encodeDelimited"] = function(_0x2e8a9b, writer) {
      return this["encode"](_0x2e8a9b, writer)["ldelim"]();
    }, StringObjectPacketDataMessage2["decode"] = function(_0x4ff97c, length2) {
      _0x4ff97c instanceof _0x476e3c || (_0x4ff97c = _0x476e3c["create"](_0x4ff97c));
      for (var _0x5ee527 = void 0 === length2 ? _0x4ff97c["len"] : _0x4ff97c["pos"] + length2, _0x2d12dd = new $root["StringObjectPacketDataMessage"](); _0x4ff97c["pos"] < _0x5ee527; ) {
        var tag = _0x4ff97c["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x2d12dd["data"] = _0x4ff97c["string"]();
            break;
          case 2:
            _0x2d12dd["data1"] = _0x4ff97c["string"]();
            break;
          default:
            _0x4ff97c["skipType"](7 & tag);
        }
      }
      return _0x2d12dd;
    }, StringObjectPacketDataMessage2["decodeDelimited"] = function(_0x4caa46) {
      return _0x4caa46 instanceof _0x476e3c || (_0x4caa46 = new _0x476e3c(_0x4caa46)), this["decode"](_0x4caa46, _0x4caa46["uint32"]());
    }, StringObjectPacketDataMessage2["verify"] = function(_0x153cd4) {
      return "object" != typeof _0x153cd4 || null === _0x153cd4 ? "object expected" : null != _0x153cd4["data"] && _0x153cd4["hasOwnProperty"]("data") && !$util["isString"](_0x153cd4["data"]) ? "data: string expected" : null != _0x153cd4["data1"] && _0x153cd4["hasOwnProperty"]("data1") && !$util["isString"](_0x153cd4["data1"]) ? "data1: string expected" : null;
    }, StringObjectPacketDataMessage2["fromObject"] = function(object) {
      if (object instanceof $root["StringObjectPacketDataMessage"]) return object;
      var _0x13af08 = new $root["StringObjectPacketDataMessage"]();
      return null != object["data"] && (_0x13af08["data"] = String(object["data"])), null != object["data1"] && (_0x13af08["data1"] = String(object["data1"])), _0x13af08;
    }, StringObjectPacketDataMessage2["toObject"] = function(_0xc2954a, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["data"] = "", object["data1"] = ""), null != _0xc2954a["data"] && _0xc2954a["hasOwnProperty"]("data") && (object["data"] = _0xc2954a["data"]), null != _0xc2954a["data1"] && _0xc2954a["hasOwnProperty"]("data1") && (object["data1"] = _0xc2954a["data1"]), object;
    }, StringObjectPacketDataMessage2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, StringObjectPacketDataMessage2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/StringObjectPacketDataMessage";
    }, StringObjectPacketDataMessage2;
  }(), $root["StringStringPacketDataMessage"] = function() {
    function StringStringPacketDataMessage2(properties) {
      if (properties) {
        for (var _0x57c8fd = Object["keys"](properties), _0x3c1572 = 0; _0x3c1572 < _0x57c8fd["length"]; ++_0x3c1572) null != properties[_0x57c8fd[_0x3c1572]] && (this[_0x57c8fd[_0x3c1572]] = properties[_0x57c8fd[_0x3c1572]]);
      }
    }
    return StringStringPacketDataMessage2["prototype"]["data"] = "", StringStringPacketDataMessage2["prototype"]["data1"] = "", StringStringPacketDataMessage2["create"] = function(properties) {
      return new StringStringPacketDataMessage2(properties);
    }, StringStringPacketDataMessage2["encode"] = function(_0x29fda9, writer) {
      return writer || (writer = $Writer["create"]()), null != _0x29fda9["data"] && Object["hasOwnProperty"]["call"](_0x29fda9, "data") && writer["uint32"](10)["string"](_0x29fda9["data"]), null != _0x29fda9["data1"] && Object["hasOwnProperty"]["call"](_0x29fda9, "data1") && writer["uint32"](18)["string"](_0x29fda9["data1"]), writer;
    }, StringStringPacketDataMessage2["encodeDelimited"] = function(_0x4f8781, writer) {
      return this["encode"](_0x4f8781, writer)["ldelim"]();
    }, StringStringPacketDataMessage2["decode"] = function(_0x3ba4e2, length2) {
      _0x3ba4e2 instanceof _0x476e3c || (_0x3ba4e2 = _0x476e3c["create"](_0x3ba4e2));
      for (var _0x2c9fa3 = void 0 === length2 ? _0x3ba4e2["len"] : _0x3ba4e2["pos"] + length2, _0x57ac7f = new $root["StringStringPacketDataMessage"](); _0x3ba4e2["pos"] < _0x2c9fa3; ) {
        var tag = _0x3ba4e2["uint32"]();
        switch (tag >>> 3) {
          case 1:
            _0x57ac7f["data"] = _0x3ba4e2["string"]();
            break;
          case 2:
            _0x57ac7f["data1"] = _0x3ba4e2["string"]();
            break;
          default:
            _0x3ba4e2["skipType"](7 & tag);
        }
      }
      return _0x57ac7f;
    }, StringStringPacketDataMessage2["decodeDelimited"] = function(_0x3b2277) {
      return _0x3b2277 instanceof _0x476e3c || (_0x3b2277 = new _0x476e3c(_0x3b2277)), this["decode"](_0x3b2277, _0x3b2277["uint32"]());
    }, StringStringPacketDataMessage2["verify"] = function(_0x463b7a) {
      return "object" != typeof _0x463b7a || null === _0x463b7a ? "object expected" : null != _0x463b7a["data"] && _0x463b7a["hasOwnProperty"]("data") && !$util["isString"](_0x463b7a["data"]) ? "data: string expected" : null != _0x463b7a["data1"] && _0x463b7a["hasOwnProperty"]("data1") && !$util["isString"](_0x463b7a["data1"]) ? "data1: string expected" : null;
    }, StringStringPacketDataMessage2["fromObject"] = function(object) {
      if (object instanceof $root["StringStringPacketDataMessage"]) return object;
      var _0x49bec9 = new $root["StringStringPacketDataMessage"]();
      return null != object["data"] && (_0x49bec9["data"] = String(object["data"])), null != object["data1"] && (_0x49bec9["data1"] = String(object["data1"])), _0x49bec9;
    }, StringStringPacketDataMessage2["toObject"] = function(_0x2bc84e, options) {
      options || (options = {});
      var object = {};
      return options["defaults"] && (object["data"] = "", object["data1"] = ""), null != _0x2bc84e["data"] && _0x2bc84e["hasOwnProperty"]("data") && (object["data"] = _0x2bc84e["data"]), null != _0x2bc84e["data1"] && _0x2bc84e["hasOwnProperty"]("data1") && (object["data1"] = _0x2bc84e["data1"]), object;
    }, StringStringPacketDataMessage2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal.default["util"]["toJSONOptions"]);
    }, StringStringPacketDataMessage2["getTypeUrl"] = function(typeUrlPrefix) {
      return void 0 === typeUrlPrefix && (typeUrlPrefix = "type.googleapis.com"), typeUrlPrefix + "/StringStringPacketDataMessage";
    }, StringStringPacketDataMessage2;
  }(), $root;
})();
var MessagesCompressor = class {
  static ["decode"](_0x3b38c1, _0xbb3c95) {
    const data = _getType(_0xbb3c95)["decode"]("undefined" == typeof window ? _0x3b38c1 : new Uint8Array(_0x3b38c1));
    return _0xbb3c95["fromJSON"]({ ...data });
  }
  static ["encode"](_0x6f7242) {
    const protobufMessage = _getType(_0x6f7242["constructor"]), data = _0x6f7242["toJSON"](), _0x126d18 = protobufMessage["verify"](data);
    if (_0x126d18) throw Error(_0x126d18);
    return protobufMessage["encode"](protobufMessage["create"](data))["finish"]();
  }
};
function _getType(_0x3f30d2) {
  return messages[_0x3f30d2["DESCRIPTOR_NAME"]];
}
var _GetManyUsersMessage = class _GetManyUsersMessage extends Message {
  constructor(_0x36cda6) {
    super();
    __publicField(this, "ids");
    this["ids"] = _0x36cda6;
  }
  ["toJSON"]() {
    return { "ids": this["ids"] };
  }
  static ["fromJSON"](data) {
    return new _GetManyUsersMessage(data["ids"]);
  }
};
__publicField(_GetManyUsersMessage, "TYPE", "22");
__publicField(_GetManyUsersMessage, "READABLE_TYPE_NAME", "getManyUsers");
__publicField(_GetManyUsersMessage, "DESCRIPTOR_NAME", "GetManyUsersMessage");
__publicField(_GetManyUsersMessage, "DESCRIPTOR", { "fields": { "ids": { "id": 1, "type": "string", "rule": "repeated" } } });
var GetManyUsersMessage = _GetManyUsersMessage;
var _GetManyUsersResponse = class _GetManyUsersResponse extends Message {
  constructor(_0xd42aa2) {
    super();
    __publicField(this, "users");
    this["users"] = _0xd42aa2;
  }
  ["toJSON"]() {
    return { "users": this["users"]["map"](_userToJson) };
  }
  static ["fromJSON"](data) {
    return new _GetManyUsersResponse(data["users"]["map"](_userFromJson));
  }
};
__publicField(_GetManyUsersResponse, "DESCRIPTOR_NAME", "GetManyUsersResponse");
__publicField(_GetManyUsersResponse, "DESCRIPTOR", { "fields": { "users": { "rule": "repeated", "type": "UserDescriptor", "id": 1 } } });
var GetManyUsersResponse = _GetManyUsersResponse;
function _userToJson(_0x5362eb) {
  return { "attributes": Object["keys"](_0x5362eb)["map"]((_0x17bb1e) => ({ "key": _0x17bb1e, "value": JSON["stringify"](_0x5362eb[_0x17bb1e]) })) };
}
function _userFromJson(data) {
  return data["attributes"]["reduce"]((result, _0x1f40e0) => (result[_0x1f40e0["key"]] = _0x1f40e0["value"] ? JSON["parse"](_0x1f40e0["value"]) : null, result), {});
}
var _User = class _User {
  constructor(attributes = {}) {
    __publicField(this, "id");
    __publicField(this, "_attributes");
    this["_attributes"] = /* @__PURE__ */ new Map();
    for (const _0x1be1e2 of Object["keys"](attributes)) "id" !== _0x1be1e2 ? (this["_attributes"]["set"](_0x1be1e2, attributes[_0x1be1e2]), Object["defineProperty"](this, _0x1be1e2, { "enumerable": true, "configurable": false, "get": () => this["_attributes"]["get"](_0x1be1e2) })) : this["id"] = attributes["id"];
  }
  static ["fromData"](data) {
    return new _User(data);
  }
  static async ["get"](wsGateway, _0x1c2ae8) {
    const _0x3bb1c9 = new GetUserMessage(_0x1c2ae8);
    try {
      const _0x56c24d = await wsGateway["_sendRequest"](_User["_SERVICE"], GetUserMessage["TYPE"], MessagesCompressor["encode"](_0x3bb1c9)), getUserResponse = MessagesCompressor["decode"](_0x56c24d, GetUserResponse);
      return new _User(getUserResponse["attributes"]);
    } catch (_0x237bc6) {
      return new _User({ "id": _0x1c2ae8 });
    }
  }
  static async ["getMany"](wsGateway, _0x40b04f) {
    const _0x33dce3 = new GetManyUsersMessage(_0x40b04f);
    try {
      const _0x24f485 = await wsGateway["_sendRequest"](_User["_SERVICE"], GetManyUsersMessage["TYPE"], MessagesCompressor["encode"](_0x33dce3));
      return MessagesCompressor["decode"](_0x24f485, GetManyUsersResponse)["users"]["map"]((_0xd8201a) => new _User(_0xd8201a));
    } catch (_0x580eab) {
      return _0x40b04f["map"]((_0x5bdf13) => new _User({ "id": _0x5bdf13 }));
    }
  }
};
__publicField(_User, "_SERVICE", 2);
var User = _User;
var _ChannelMessage = class _ChannelMessage extends Message {
  constructor(type, socketId, data) {
    super();
    __publicField(this, "type");
    __publicField(this, "socketId");
    __publicField(this, "data");
    this["type"] = type, this["socketId"] = socketId, this["data"] = data;
  }
  ["toJSON"]() {
    return { "type": this["type"], "socketId": this["socketId"], "data": this["data"] };
  }
  static ["fromJSON"](data) {
    return new _ChannelMessage(data["type"], data["socketId"], data["data"]);
  }
};
__publicField(_ChannelMessage, "DESCRIPTOR_NAME", "ChannelMessage");
__publicField(_ChannelMessage, "DESCRIPTOR", { "fields": { "type": { "type": "uint32", "id": 1 }, "socketId": { "type": "string", "id": 2 }, "data": { "type": "bytes", "id": 3 } } });
var ChannelMessage = _ChannelMessage;
var Channel = class extends EmitterMixin() {
  constructor(_0x1a7af4, _wsGateway, _socket) {
    super();
    __publicField(this, "_channelName");
    __publicField(this, "_wsGateway");
    __publicField(this, "_socket");
    this["_channelName"] = _0x1a7af4, this["_wsGateway"] = _wsGateway, this["_socket"] = _socket, this["_subscribeToChannel"]();
  }
  ["remove"]() {
    this["_socket"]["off"](this["_channelName"]);
  }
  ["getEventName"](eventName, _0x1d8ce0 = false) {
    let fullEventName = "";
    return _0x1d8ce0 && (fullEventName += "all:"), fullEventName += "event", eventName && (fullEventName += ":" + eventName), fullEventName;
  }
  ["_subscribeToChannel"]() {
    this["_socket"]["on"](this["_channelName"], (_0x6265d8) => {
      const _0x4bcc3c = MessagesCompressor["decode"](_0x6265d8, ChannelMessage);
      this["fire"](this["getEventName"](_0x4bcc3c["type"], true), _0x4bcc3c["data"], _0x4bcc3c["socketId"]), _0x4bcc3c["socketId"] !== this["_wsGateway"]["socketId"] && this["fire"](this["getEventName"](_0x4bcc3c["type"]), _0x4bcc3c["data"], _0x4bcc3c["socketId"]);
    });
  }
};
var CKEditorCloudServicesError = class _CKEditorCloudServicesError extends Error {
  constructor(_0x4f1c82, context, _0x4b09bb = null, data = {}) {
    super("cloud-services-internal-error: " + _0x4f1c82);
    __publicField(this, "context");
    __publicField(this, "code");
    __publicField(this, "data");
    this["context"] = context, this["code"] = _0x4b09bb, this["data"] = data, this["name"] = "CKEditorError";
  }
  static ["fromPublicError"](_0x702968) {
    return new _CKEditorCloudServicesError(function(_0x5d7841) {
      let _0xf422a = "cloud-services-error: " + _0x5d7841["message"];
      return _0x5d7841["data"] && (_0xf422a += "\nError data: " + JSON["stringify"](_0x5d7841["data"])), _0x5d7841["explanation"] && (_0xf422a += "\nExplanation: " + _0x5d7841["explanation"]), _0x5d7841["action"] && (_0xf422a += "\nAction: " + _0x5d7841["action"]), _0x5d7841["traceId"] && (_0xf422a += "\nTraceId: " + _0x5d7841["traceId"]), _0x5d7841["code"] && (_0xf422a += "\nCode: " + _0x5d7841["code"]), _0xf422a;
    }(_0x702968), _0x702968);
  }
};
var CKEditorCloudServicesServerError = class _CKEditorCloudServicesServerError extends Error {
  constructor(_0x2ebc52, _0x1da550) {
    super();
    __publicField(this, "code");
    __publicField(this, "traceId");
    __publicField(this, "data");
    this["name"] = "CKEditorCloudServicesServerError", this["stack"] = void 0, this["message"] = _0x2ebc52, this["code"] = _0x1da550["code"], this["traceId"] = _0x1da550["traceId"], this["data"] = _0x1da550["data"];
  }
  static ["fromPublicError"](_0x401e86) {
    return new _CKEditorCloudServicesServerError(function(_0x29052f) {
      let _0x1be851 = "cloud-services-server-error: " + _0x29052f["message"];
      return _0x29052f["explanation"] && (_0x1be851 += "\nExplanation: " + _0x29052f["explanation"]), _0x29052f["action"] && (_0x1be851 += "\nAction: " + _0x29052f["action"]), _0x29052f["traceId"] && (_0x1be851 += "\nTraceId: " + _0x29052f["traceId"]), _0x29052f["code"] && (_0x1be851 += "\nCode: " + _0x29052f["code"]), _0x1be851;
    }(_0x401e86), _0x401e86);
  }
};
var _PacketOptionsMessage = class _PacketOptionsMessage extends Message {
  constructor(_0x29c33f, _0x3433a6 = [], except = []) {
    super();
    __publicField(this, "flags");
    __publicField(this, "rooms");
    __publicField(this, "except");
    this["flags"] = _0x29c33f, this["rooms"] = _0x3433a6, this["except"] = except;
  }
  ["toJSON"]() {
    var _a5, _b;
    return { "flags": this["flags"] ? JSON["stringify"](this["flags"]) : void 0, "rooms": ((_a5 = this["rooms"]) == null ? void 0 : _a5["length"]) ? this["rooms"] : void 0, "except": ((_b = this["except"]) == null ? void 0 : _b["length"]) ? this["except"] : void 0 };
  }
  static ["fromJSON"](data) {
    return new _PacketOptionsMessage(data["flags"] && JSON["parse"](data["flags"]), data["rooms"], data["except"]);
  }
};
__publicField(_PacketOptionsMessage, "TYPE", 11);
__publicField(_PacketOptionsMessage, "DESCRIPTOR_NAME", "PacketOptionsMessage");
__publicField(_PacketOptionsMessage, "DESCRIPTOR", /* @__PURE__ */ (() => ({ "fields": { "flags": { "type": "string", "id": 1 }, "rooms": { "type": "string", "id": 2, "rule": "repeated" }, "except": { "type": "string", "id": 3, "rule": "repeated" } } }))());
var PacketOptionsMessage = _PacketOptionsMessage;
var IS_NODE = (() => !("undefined" == typeof process || !process["versions"] || !process["versions"]["node"]))();
var MessageDataTypes_BUFFER = 1;
var MessageDataTypes_STRING = 2;
var MessageDataTypes_NUMBER = 3;
var MessageDataTypes_OBJECT = 4;
var ParserUtils = class _ParserUtils {
  static ["getPacketType"](...types) {
    let _0xe9f654 = 0;
    for (let _0x1274a8 = 0; _0x1274a8 < types["length"]; _0x1274a8++) {
      _0xe9f654 += types[_0x1274a8] * Math["pow"](10, types["length"] - _0x1274a8 - 1);
    }
    return _0xe9f654;
  }
  static ["getType"](_0x372edb) {
    if (_ParserUtils["isBuffer"](_0x372edb)) return MessageDataTypes_BUFFER;
    const type = typeof _0x372edb;
    return "string" === type ? MessageDataTypes_STRING : "number" === type ? MessageDataTypes_NUMBER : MessageDataTypes_OBJECT;
  }
  static ["isBuffer"](_0x26eaad) {
    return IS_NODE && Buffer["isBuffer"](_0x26eaad) || _0x26eaad instanceof ArrayBuffer || _0x26eaad instanceof Uint8Array || this["_isBufferView"](_0x26eaad);
  }
  static ["_isBufferView"](_0x2cdeea) {
    return "function" == typeof ArrayBuffer["isView"] ? ArrayBuffer["isView"](_0x2cdeea) : _0x2cdeea["buffer"] instanceof ArrayBuffer;
  }
};
var PackageDataMessage = class extends Message {
  constructor() {
    super(...arguments);
    __publicField(this, "data");
    __publicField(this, "data1");
  }
  static ["create"](data, data1) {
    throw new TypeError("Must be implemented in a child class!");
  }
};
var _NumberBytesPacketDataMessage = class _NumberBytesPacketDataMessage extends PackageDataMessage {
  constructor(data, data1) {
    super();
    __publicField(this, "data");
    __publicField(this, "data1");
    this["data"] = data, this["data1"] = data1;
  }
  ["toJSON"]() {
    return { "data": this["data"], "data1": this["data1"] };
  }
  static ["fromJSON"](data) {
    return new _NumberBytesPacketDataMessage(data["data"], data["data1"]);
  }
  static ["create"](data, data1) {
    return new _NumberBytesPacketDataMessage(data, data1);
  }
};
__publicField(_NumberBytesPacketDataMessage, "TYPE", (() => ParserUtils["getPacketType"](MessageDataTypes_NUMBER, MessageDataTypes_BUFFER))());
__publicField(_NumberBytesPacketDataMessage, "DESCRIPTOR_NAME", "NumberBytesPacketDataMessage");
__publicField(_NumberBytesPacketDataMessage, "DESCRIPTOR", /* @__PURE__ */ (() => ({ "fields": { "data": { "type": "uint32", "id": 1 }, "data1": { "type": "bytes", "id": 2 } } }))());
var NumberBytesPacketDataMessage = _NumberBytesPacketDataMessage;
var _StringBytesPacketDataMessage = class _StringBytesPacketDataMessage extends PackageDataMessage {
  constructor(data, data1) {
    super();
    __publicField(this, "data");
    __publicField(this, "data1");
    this["data"] = data, this["data1"] = data1;
  }
  ["toJSON"]() {
    return { "data": this["data"], "data1": this["data1"] };
  }
  static ["fromJSON"](data) {
    return new _StringBytesPacketDataMessage(data["data"], data["data1"]);
  }
  static ["create"](data, data1) {
    return new _StringBytesPacketDataMessage(data, data1);
  }
};
__publicField(_StringBytesPacketDataMessage, "TYPE", (() => ParserUtils["getPacketType"](MessageDataTypes_STRING, MessageDataTypes_BUFFER))());
__publicField(_StringBytesPacketDataMessage, "DESCRIPTOR_NAME", "StringBytesPacketDataMessage");
__publicField(_StringBytesPacketDataMessage, "DESCRIPTOR", /* @__PURE__ */ (() => ({ "fields": { "data": { "type": "string", "id": 1 }, "data1": { "type": "bytes", "id": 2 } } }))());
var StringBytesPacketDataMessage = _StringBytesPacketDataMessage;
var _BytesBytesPacketDataMessage = class _BytesBytesPacketDataMessage extends PackageDataMessage {
  constructor(data, data1) {
    super();
    __publicField(this, "data");
    __publicField(this, "data1");
    this["data"] = data, this["data1"] = data1;
  }
  ["toJSON"]() {
    return { "data": this["data"], "data1": this["data1"] };
  }
  static ["fromJSON"](data) {
    return new _BytesBytesPacketDataMessage(data["data"], data["data1"]);
  }
  static ["create"](data, data1) {
    return new _BytesBytesPacketDataMessage(data, data1);
  }
};
__publicField(_BytesBytesPacketDataMessage, "TYPE", (() => ParserUtils["getPacketType"](MessageDataTypes_BUFFER, MessageDataTypes_BUFFER))());
__publicField(_BytesBytesPacketDataMessage, "DESCRIPTOR_NAME", "BytesBytesPacketDataMessage");
__publicField(_BytesBytesPacketDataMessage, "DESCRIPTOR", /* @__PURE__ */ (() => ({ "fields": { "data": { "type": "bytes", "id": 1 }, "data1": { "type": "bytes", "id": 2 } } }))());
var BytesBytesPacketDataMessage = _BytesBytesPacketDataMessage;
var _StringObjectPacketDataMessage = class _StringObjectPacketDataMessage extends PackageDataMessage {
  constructor(data, data1) {
    super();
    __publicField(this, "data");
    __publicField(this, "data1");
    this["data"] = data, this["data1"] = data1;
  }
  ["toJSON"]() {
    return { "data": this["data"], "data1": this["data1"] ? JSON["stringify"](this["data1"]) : void 0 };
  }
  static ["fromJSON"](data) {
    return new _StringObjectPacketDataMessage(data["data"], data["data1"] && JSON["parse"](data["data1"]));
  }
  static ["create"](data, data1) {
    return new _StringObjectPacketDataMessage(data, data1);
  }
};
__publicField(_StringObjectPacketDataMessage, "TYPE", (() => ParserUtils["getPacketType"](MessageDataTypes_STRING, MessageDataTypes_OBJECT))());
__publicField(_StringObjectPacketDataMessage, "DESCRIPTOR_NAME", "StringObjectPacketDataMessage");
__publicField(_StringObjectPacketDataMessage, "DESCRIPTOR", /* @__PURE__ */ (() => ({ "fields": { "data": { "type": "string", "id": 1 }, "data1": { "type": "string", "id": 2 } } }))());
var StringObjectPacketDataMessage = _StringObjectPacketDataMessage;
var _NumberObjectPacketDataMessage = class _NumberObjectPacketDataMessage extends PackageDataMessage {
  constructor(data, data1) {
    super();
    __publicField(this, "data");
    __publicField(this, "data1");
    this["data"] = data, this["data1"] = data1;
  }
  ["toJSON"]() {
    return { "data": this["data"], "data1": this["data1"] ? JSON["stringify"](this["data1"]) : void 0 };
  }
  static ["fromJSON"](data) {
    return new _NumberObjectPacketDataMessage(data["data"], data["data1"] && JSON["parse"](data["data1"]));
  }
  static ["create"](data, data1) {
    return new _NumberObjectPacketDataMessage(data, data1);
  }
};
__publicField(_NumberObjectPacketDataMessage, "TYPE", (() => ParserUtils["getPacketType"](MessageDataTypes_NUMBER, MessageDataTypes_OBJECT))());
__publicField(_NumberObjectPacketDataMessage, "DESCRIPTOR_NAME", "NumberObjectPacketDataMessage");
__publicField(_NumberObjectPacketDataMessage, "DESCRIPTOR", /* @__PURE__ */ (() => ({ "fields": { "data": { "type": "uint32", "id": 1 }, "data1": { "type": "string", "id": 2 } } }))());
var NumberObjectPacketDataMessage = _NumberObjectPacketDataMessage;
var _ObjectObjectPacketDataMessage = class _ObjectObjectPacketDataMessage extends PackageDataMessage {
  constructor(data, data1) {
    super();
    __publicField(this, "data");
    __publicField(this, "data1");
    this["data"] = data, this["data1"] = data1;
  }
  ["toJSON"]() {
    return { "data": this["data"] ? JSON["stringify"](this["data"]) : void 0, "data1": this["data1"] ? JSON["stringify"](this["data1"]) : void 0 };
  }
  static ["fromJSON"](data) {
    return new _ObjectObjectPacketDataMessage(data["data"] && JSON["parse"](data["data"]), data["data1"] && JSON["parse"](data["data1"]));
  }
  static ["create"](data, data1) {
    return new _ObjectObjectPacketDataMessage(data, data1);
  }
};
__publicField(_ObjectObjectPacketDataMessage, "TYPE", (() => ParserUtils["getPacketType"](MessageDataTypes_OBJECT, MessageDataTypes_OBJECT))());
__publicField(_ObjectObjectPacketDataMessage, "DESCRIPTOR_NAME", "ObjectObjectPacketDataMessage");
__publicField(_ObjectObjectPacketDataMessage, "DESCRIPTOR", /* @__PURE__ */ (() => ({ "fields": { "data": { "type": "string", "id": 1 }, "data1": { "type": "string", "id": 2 } } }))());
var ObjectObjectPacketDataMessage = _ObjectObjectPacketDataMessage;
var _ObjectBufferPacketDataMessage = class _ObjectBufferPacketDataMessage extends PackageDataMessage {
  constructor(data, data1) {
    super();
    __publicField(this, "data");
    __publicField(this, "data1");
    this["data"] = data, this["data1"] = data1;
  }
  ["toJSON"]() {
    return { "data": this["data"] ? JSON["stringify"](this["data"]) : void 0, "data1": this["data1"] };
  }
  static ["fromJSON"](data) {
    return new _ObjectBufferPacketDataMessage(data["data"] && JSON["parse"](data["data"]), data["data1"]);
  }
  static ["create"](data, data1) {
    return new _ObjectBufferPacketDataMessage(data, data1);
  }
};
__publicField(_ObjectBufferPacketDataMessage, "TYPE", (() => ParserUtils["getPacketType"](MessageDataTypes_OBJECT, MessageDataTypes_BUFFER))());
__publicField(_ObjectBufferPacketDataMessage, "DESCRIPTOR_NAME", "ObjectBufferPacketDataMessage");
__publicField(_ObjectBufferPacketDataMessage, "DESCRIPTOR", /* @__PURE__ */ (() => ({ "fields": { "data": { "type": "string", "id": 1 }, "data1": { "type": "bytes", "id": 2 } } }))());
var ObjectBufferPacketDataMessage = _ObjectBufferPacketDataMessage;
var _StringStringPacketDataMessage = class _StringStringPacketDataMessage extends PackageDataMessage {
  constructor(data, data1) {
    super();
    __publicField(this, "data");
    __publicField(this, "data1");
    this["data"] = data, this["data1"] = data1;
  }
  ["toJSON"]() {
    return { "data": this["data"], "data1": this["data1"] };
  }
  static ["fromJSON"](data) {
    return new _StringStringPacketDataMessage(data["data"], data["data1"]);
  }
  static ["create"](data, data1) {
    return new _StringStringPacketDataMessage(data, data1);
  }
};
__publicField(_StringStringPacketDataMessage, "TYPE", (() => ParserUtils["getPacketType"](MessageDataTypes_STRING, MessageDataTypes_STRING))());
__publicField(_StringStringPacketDataMessage, "DESCRIPTOR_NAME", "StringStringPacketDataMessage");
__publicField(_StringStringPacketDataMessage, "DESCRIPTOR", /* @__PURE__ */ (() => ({ "fields": { "data": { "type": "string", "id": 1 }, "data1": { "type": "string", "id": 2 } } }))());
var StringStringPacketDataMessage = _StringStringPacketDataMessage;
var _StringNumberPacketDataMessage = class _StringNumberPacketDataMessage extends PackageDataMessage {
  constructor(data, data1) {
    super();
    __publicField(this, "data");
    __publicField(this, "data1");
    this["data"] = data, this["data1"] = data1;
  }
  ["toJSON"]() {
    return { "data": this["data"], "data1": this["data1"] };
  }
  static ["fromJSON"](data) {
    return new _StringNumberPacketDataMessage(data["data"], data["data1"]);
  }
  static ["create"](data, data1) {
    return new _StringNumberPacketDataMessage(data, data1);
  }
};
__publicField(_StringNumberPacketDataMessage, "TYPE", (() => ParserUtils["getPacketType"](MessageDataTypes_STRING, MessageDataTypes_NUMBER))());
__publicField(_StringNumberPacketDataMessage, "DESCRIPTOR_NAME", "StringNumberPacketDataMessage");
__publicField(_StringNumberPacketDataMessage, "DESCRIPTOR", /* @__PURE__ */ (() => ({ "fields": { "data": { "type": "string", "id": 1 }, "data1": { "type": "uint32", "id": 2 } } }))());
var StringNumberPacketDataMessage = _StringNumberPacketDataMessage;
var _NumberNumberPacketDataMessage = class _NumberNumberPacketDataMessage extends PackageDataMessage {
  constructor(data, data1) {
    super();
    __publicField(this, "data");
    __publicField(this, "data1");
    this["data"] = data, this["data1"] = data1;
  }
  ["toJSON"]() {
    return { "data": this["data"], "data1": this["data1"] };
  }
  static ["fromJSON"](data) {
    return new _NumberNumberPacketDataMessage(data["data"], data["data1"]);
  }
  static ["create"](data, data1) {
    return new _NumberNumberPacketDataMessage(data, data1);
  }
};
__publicField(_NumberNumberPacketDataMessage, "TYPE", (() => ParserUtils["getPacketType"](MessageDataTypes_NUMBER, MessageDataTypes_NUMBER))());
__publicField(_NumberNumberPacketDataMessage, "DESCRIPTOR_NAME", "NumberNumberPacketDataMessage");
__publicField(_NumberNumberPacketDataMessage, "DESCRIPTOR", { "fields": { "data": { "type": "uint32", "id": 1 }, "data1": { "type": "uint32", "id": 2 } } });
var NumberNumberPacketDataMessage = _NumberNumberPacketDataMessage;
var _NumberStringPacketDataMessage = class _NumberStringPacketDataMessage extends PackageDataMessage {
  constructor(data, data1) {
    super();
    __publicField(this, "data");
    __publicField(this, "data1");
    this["data"] = data, this["data1"] = data1;
  }
  ["toJSON"]() {
    return { "data": this["data"], "data1": this["data1"] };
  }
  static ["fromJSON"](data) {
    return new _NumberStringPacketDataMessage(data["data"], data["data1"]);
  }
  static ["create"](data, data1) {
    return new _NumberStringPacketDataMessage(data, data1);
  }
};
__publicField(_NumberStringPacketDataMessage, "TYPE", (() => ParserUtils["getPacketType"](MessageDataTypes_NUMBER, MessageDataTypes_STRING))());
__publicField(_NumberStringPacketDataMessage, "DESCRIPTOR_NAME", "NumberStringPacketDataMessage");
__publicField(_NumberStringPacketDataMessage, "DESCRIPTOR", /* @__PURE__ */ (() => ({ "fields": { "data": { "type": "uint32", "id": 1 }, "data1": { "type": "string", "id": 2 } } }))());
var NumberStringPacketDataMessage = _NumberStringPacketDataMessage;
var PACKET_DATA_MESSAGES = (() => [NumberBytesPacketDataMessage, StringBytesPacketDataMessage, BytesBytesPacketDataMessage, StringObjectPacketDataMessage, NumberObjectPacketDataMessage, ObjectObjectPacketDataMessage, ObjectBufferPacketDataMessage, StringStringPacketDataMessage, StringNumberPacketDataMessage, NumberNumberPacketDataMessage, NumberStringPacketDataMessage]["reduce"]((result, PacketDataMessageConstructor) => (result[PacketDataMessageConstructor["TYPE"]] = PacketDataMessageConstructor, result), {}))();
var _PacketMessage = class _PacketMessage extends Message {
  constructor(type, data, _0x2bfdce, _0x357b6a = "/", options) {
    super();
    __publicField(this, "type");
    __publicField(this, "data");
    __publicField(this, "id");
    __publicField(this, "nsp");
    __publicField(this, "options");
    this["type"] = type, this["data"] = data, this["id"] = _0x2bfdce, this["nsp"] = _0x357b6a, this["options"] = options ?? new PacketOptionsMessage();
  }
  get ["packetData"]() {
    return void 0 === this["data"]["data"] && void 0 === this["data"]["data1"] ? [] : this["data"]["data"] && void 0 === this["data"]["data1"] ? [this["data"]["data"]] : [this["data"]["data"], this["data"]["data1"]];
  }
  ["toJSON"]() {
    const options = MessagesCompressor["encode"](this["options"]), data = MessagesCompressor["encode"](this["data"]);
    return { "type": this["type"] + 10 * this["data"]["constructor"]["TYPE"], "id": this["id"], "nsp": "/" === this["nsp"] ? void 0 : this["nsp"], "data": data, "options": options };
  }
  static ["fromJSON"](data) {
    const frameDataType = Math["floor"](data["type"] / 10);
    return new _PacketMessage(data["type"] - 10 * frameDataType, MessagesCompressor["decode"](data["data"], PACKET_DATA_MESSAGES[frameDataType]), data["id"], data["nsp"], data["options"] ? MessagesCompressor["decode"](data["options"], PacketOptionsMessage) : new PacketOptionsMessage());
  }
  static ["create"](packet, options = {}) {
    const frameDataType = ParserUtils["getPacketType"](ParserUtils["getType"](packet["data"][0]), ParserUtils["getType"](packet["data"][1] ?? packet["data"][0]));
    return new _PacketMessage(packet["type"], PACKET_DATA_MESSAGES[frameDataType]["create"](packet["data"][0], packet["data"][1]), packet["id"], packet["nsp"], new PacketOptionsMessage(options["flags"], options["rooms"], options["except"]));
  }
};
__publicField(_PacketMessage, "TYPE", 10);
__publicField(_PacketMessage, "DESCRIPTOR_NAME", "PacketMessage");
__publicField(_PacketMessage, "DESCRIPTOR", /* @__PURE__ */ (() => ({ "fields": { "type": { "type": "uint32", "id": 1 }, "id": { "type": "uint32", "id": 2 }, "nsp": { "type": "string", "id": 3 }, "data": { "type": "bytes", "id": 4 }, "options": { "type": "bytes", "id": 5 } } }))());
var PacketMessage = _PacketMessage;
var PacketParser = class {
  ["encode"](type, data, _0x4e9de5, _0x3ad778 = "/", options = {}) {
    if (data["length"] > 2) throw new Error("PacketParser supports only 2 elements in data");
    const packet = { "type": type, "data": data, "id": _0x4e9de5, "nsp": _0x3ad778 };
    return MessagesCompressor["encode"](PacketMessage["create"](packet, options));
  }
  ["decode"](_0x2fa41a) {
    const packetMessage = MessagesCompressor["decode"](_0x2fa41a, PacketMessage);
    return { "packet": { "id": packetMessage["id"], "type": packetMessage["type"], "data": packetMessage["packetData"], "nsp": packetMessage["nsp"] }, "options": { "flags": packetMessage["options"]["flags"], "rooms": packetMessage["options"]["rooms"], "except": packetMessage["options"]["except"] } };
  }
};
var ENCODED_TYPES = (() => [PacketType["EVENT"], PacketType["ACK"], PacketType["BINARY_ACK"], PacketType["BINARY_EVENT"]])();
var Encoder2 = class extends Encoder {
  constructor(packetParser) {
    super();
    __publicField(this, "_packetParser");
    this["_packetParser"] = packetParser ?? new PacketParser();
  }
  ["encode"](packet) {
    if (ENCODED_TYPES["includes"](packet["type"])) try {
      return [this["_packetParser"]["encode"](packet["type"], packet["data"], packet["id"], packet["nsp"])];
    } catch (_0x46563b) {
      console["error"]("Can not properly serialize or deserialize messages. Check the original error.", { "originalError": { "message": _0x46563b["message"] } });
    }
    return super["encode"](packet);
  }
};
var Decoder2 = class extends Decoder {
  constructor(packetParser) {
    super();
    __publicField(this, "_packetParser");
    this["_packetParser"] = packetParser ?? new PacketParser();
  }
  ["add"](_0xeed0fe) {
    if (!ParserUtils["isBuffer"](_0xeed0fe)) return super["add"](_0xeed0fe);
    let packet;
    try {
      packet = this["_packetParser"]["decode"](_0xeed0fe)["packet"];
    } catch (_0x30df51) {
      return super["add"](_0xeed0fe);
    }
    super["emitReserved"]("decoded", packet);
  }
};
var WebSocketRequest = class {
  constructor(_context, timeoutMs) {
    __publicField(this, "_context");
    __publicField(this, "_deferredPromise");
    __publicField(this, "timeout");
    this["_context"] = _context, this["_deferredPromise"] = _deferPromise(), this["timeout"] = setTimeout(() => this["error"](new CKEditorCloudServicesError("Request timeout.", this["_context"])), timeoutMs);
  }
  get ["promise"]() {
    return this["_deferredPromise"]["promise"];
  }
  ["response"](_0x313242) {
    this["_deferredPromise"]["resolve"](_0x313242);
  }
  ["error"](_0x28c533) {
    this["_deferredPromise"]["reject"](_0x28c533);
  }
};
var WebSocketGatewayRequestsManager = class {
  constructor(_context) {
    __publicField(this, "_context");
    __publicField(this, "_requests");
    this["_context"] = _context, this["_requests"] = /* @__PURE__ */ new Set();
  }
  async ["send"](sendFunction, timeoutMs = 45e3) {
    const _0x25f880 = this["_createRequest"](timeoutMs);
    try {
      return sendFunction(_0x25f880), await _0x25f880["promise"];
    } finally {
      this["_finishRequest"](_0x25f880);
    }
  }
  ["errorAll"](_0x11aadd) {
    for (const _0x1d875a of this["_requests"]) _0x1d875a["error"](_0x11aadd);
  }
  ["waitForAllRequests"](time = 45e3) {
    return this["_waitForRequests"](time);
  }
  ["_createRequest"](timeoutMs) {
    const _0x293073 = new WebSocketRequest(this["_context"], timeoutMs);
    return this["_requests"]["add"](_0x293073), _0x293073;
  }
  ["_finishRequest"](_0x7f8e25) {
    this["_requests"]["delete"](_0x7f8e25), clearTimeout(_0x7f8e25["timeout"]);
  }
  async ["_waitForRequests"](time = 5e3, attempt = 0) {
    return !this["_requests"]["size"] || attempt >= time / 500 ? Promise["resolve"]() : (await new Promise((_0x4e4425) => {
      setTimeout(_0x4e4425, 500);
    }), this["_waitForRequests"](time, attempt++));
  }
};
function _deferPromise() {
  let _0xa63f37, reject;
  const _0xb5afda = new Promise((_0x24d58c, promiseReject) => {
    _0xa63f37 = _0x24d58c, reject = promiseReject;
  });
  return { "resolve": _0xa63f37, "reject": reject, "promise": _0xb5afda };
}
var WEB_SOCKET_GATEWAY_STATES = { "DISCONNECTED": "disconnected", "CONNECTING": "connecting", "CONNECTED": "connected" };
var _WebSocketGateway = class _WebSocketGateway extends ObservableMixin() {
  constructor(_0x3bad19, token, options, connectionProvider, userFactory) {
    super();
    __publicField(this, "_requestsManager");
    __publicField(this, "_url");
    __publicField(this, "_socket");
    __publicField(this, "_socketAuth");
    __publicField(this, "_channels");
    __publicField(this, "_connectionAttempt", 0);
    __publicField(this, "_token");
    __publicField(this, "_options");
    __publicField(this, "_connectionProvider");
    __publicField(this, "_userFactory");
    if (this["_token"] = token, this["_options"] = options ?? {}, this["_connectionProvider"] = connectionProvider ?? lookup2, this["_userFactory"] = userFactory ?? User["get"], this["_requestsManager"] = new WebSocketGatewayRequestsManager(this), this["_channels"] = /* @__PURE__ */ new Map(), !_0x3bad19) throw new TypeError("Api address must be provided.");
    if (!this["_token"]) throw new TypeError("Token must be provided.");
    this["_options"]["requestTimeout"] || (this["_options"]["requestTimeout"] = 2e4), this["_url"] = (0, import_url_parse.default)(_0x3bad19["replace"](/^(?!(?:\w+:)?\/\/)/, "https://")), this["set"]("state", WEB_SOCKET_GATEWAY_STATES["DISCONNECTED"]), this["set"]("socketId", void 0), this["set"]("me", void 0), this["on"]("change:state", async (event, _0x294318, _0x1a2142) => {
      var _a5;
      if (this["_debugEvent"]("ws-gw:change:state", _0x1a2142), _0x1a2142 !== _WebSocketGateway["STATE_CONNECTED"]) {
        if (_0x1a2142 === _WebSocketGateway["STATE_DISCONNECTED"]) return this["_requestsManager"]["errorAll"](new CKEditorCloudServicesError("Not connected.", this));
      } else try {
        this["me"] = await this["_userFactory"]["call"](User, this, (_a5 = this["_socketAuth"]) == null ? void 0 : _a5["userId"]);
      } catch (_0x5963c6) {
      }
    }, { "priority": _WebSocketGateway["_CHANGE_STATE_EVENT_PRIORITY"] }), this["on"]("error", (event, _0xda9936) => {
      this["_options"]["onError"] ? this["_options"]["onError"](_0xda9936) : console["error"](_0xda9936);
    });
  }
  get ["sessionId"]() {
    return this["socketId"];
  }
  ["waitForAllRequests"](time) {
    return this["_requestsManager"]["waitForAllRequests"](time);
  }
  ["disconnect"]() {
    var _a5;
    this["state"] !== WEB_SOCKET_GATEWAY_STATES["DISCONNECTED"] && ((_a5 = this["_socket"]) == null ? void 0 : _a5["disconnect"](), this["_socket"] = void 0, this["state"] = WEB_SOCKET_GATEWAY_STATES["DISCONNECTED"]);
  }
  async ["reconnect"]() {
    this["_socket"] || this["state"] !== WEB_SOCKET_GATEWAY_STATES["DISCONNECTED"] || (await this["_token"]["refreshToken"](), await this["_connect"]());
  }
  static async ["connect"](token, _0x1dcac2 = "local.cs.dev:443/ws-v2", options = {}, _0x20913d = lookup2, userFactory = User["get"]) {
    const webSocketGateway = new _WebSocketGateway(_0x1dcac2, token, options, _0x20913d, userFactory);
    return await webSocketGateway["_connect"](), webSocketGateway;
  }
  ["_sendRequest"](_0xcc86b2, method, _0x6374e7) {
    if (!_0xcc86b2) throw new CKEditorCloudServicesError("`serviceName` must be provided.", this);
    if (this["state"] !== _WebSocketGateway["STATE_CONNECTED"]) throw new CKEditorCloudServicesError("Not connected.", this);
    if (!this["_socketAuth"] || !this["_socketAuth"]["isAuthenticated"]) throw new CKEditorCloudServicesError("Not authenticated.", this);
    const _0x232d13 = new ArrayBuffer(_0x6374e7["length"] + 2), _0x7b5000 = new Uint8Array(_0x232d13);
    return _0x7b5000[0] = _0xcc86b2, _0x7b5000[1] = parseInt(method), _0x7b5000["set"](_0x6374e7, 2), this["_emit"](1, _0x7b5000);
  }
  ["_getChannel"](_0x5774e0, _0x384812) {
    const _0x1b0e96 = "" + _0x5774e0 + _0x384812;
    return !this["_channels"]["has"](_0x1b0e96) && this["_socket"] && this["_channels"]["set"](_0x1b0e96, new Channel(_0x1b0e96, this, this["_socket"])), this["_channels"]["get"](_0x1b0e96);
  }
  ["_connect"]() {
    return new Promise((_0x386e73, reject) => {
      const socket = this["_setupSocket"]();
      !this["socketId"] && socket["io"]["on"]("reconnect_error", () => {
        this["_debugEvent"]("reconnect_error"), this["_reconnectionAttemptError"](reject);
      }), socket["once"]("connect", async () => {
        this["_debugEvent"]("once-connect");
        try {
          await this["_onConnect"](), _0x386e73();
        } catch (_0x31f78d) {
          reject(_0x31f78d);
        }
      }), socket["connect"]();
    });
  }
  ["_getPortByProtocol"](protocol4) {
    return ["http:", "ws:"]["includes"](protocol4) ? 80 : 443;
  }
  ["_setupSocket"]() {
    if (this["_socket"]) return this["_socket"];
    const port = this["_url"]["port"] || this["_getPortByProtocol"](this["_url"]["protocol"]), _0x2115b0 = (this["_url"]["protocol"] || "https:") + "//" + this["_url"]["hostname"] + ":" + port, pathPrefix = this["_url"]["pathname"]["match"](/^\/.*\/ws/) ? this["_url"]["pathname"]["split"]("/ws")[0] : "", socket = this["_connectionProvider"](_0x2115b0, { "parser": { "Encoder": Encoder2, "Decoder": Decoder2 }, "path": pathPrefix + "/ws-v2/ws", "transports": ["websocket"], "timeout": void 0 !== this["_options"]["timeout"] ? this["_options"]["timeout"] : 5e3, "reconnection": void 0 === this["_options"]["autoReconnect"] || this["_options"]["autoReconnect"], "reconnectionDelay": 1e3, "reconnectionDelayMax": 5e3, "rejectUnauthorized": void 0 === this["_options"]["rejectUnauthorized"] || this["_options"]["rejectUnauthorized"], "query": { "version": "52.6.11" }, "agent": this["_options"]["agent"] ?? false, "closeOnBeforeunload": false });
    return this["state"] = WEB_SOCKET_GATEWAY_STATES["CONNECTING"], socket["on"]("connect", () => {
      this["_debugEvent"]("connect"), this["socketId"] = socket["id"];
    }), socket["on"]("connect_error", (_0x5ae957) => {
      this["_debugEvent"]("connect_error", _0x5ae957);
    }), socket["on"]("disconnect", () => {
      this["_debugEvent"]("disconnect"), this["_onDisconnect"]();
    }), socket["io"]["on"]("reconnect", async () => {
      this["_debugEvent"]("reconnect"), await this["_onReconnect"]();
    }), socket["io"]["on"]("reconnect_attempt", (attempt) => {
      this["_debugEvent"]("reconnect_attempt", attempt), this["state"] = WEB_SOCKET_GATEWAY_STATES["CONNECTING"], this["_connectionAttempt"] = attempt;
    }), socket["on"]("unauthorized", (data) => {
      this["_debugEvent"]("unauthorized"), this["_onUnauthorized"](data);
    }), socket["on"]("authenticationRequest", async (data) => {
      this["_debugEvent"]("authenticationRequest", data["attempt"]), await this["_onReconnect"]();
    }), this["_socket"] = socket, socket;
  }
  ["_emit"](eventName, _0x56f97c) {
    const socket = this["_socket"];
    return this["_requestsManager"]["send"]((_0x4c2062) => {
      socket["emit"](eventName, _0x56f97c, (_0x167e3b, _0x4e286c) => {
        if (_0x167e3b) return _0x4c2062["error"](CKEditorCloudServicesServerError["fromPublicError"](_0x167e3b));
        _0x4c2062["response"](_0x4e286c);
      });
    }, this["_options"]["requestTimeout"]);
  }
  ["_addAuthData"](environmentId, _0x597444) {
    this["_socketAuth"] = { "environmentId": environmentId, "userId": _0x597444, "isAuthenticated": true };
  }
  ["_removeAuthData"]() {
    this["_socketAuth"] = void 0;
  }
  async ["_onConnect"]() {
    await this["_authenticate"](this["_token"]["value"]), this["state"] = WEB_SOCKET_GATEWAY_STATES["CONNECTED"];
    const _0xd8aac3 = async (event, _0x2b630b, _0x34950b) => {
      this["_debugEvent"]("token:value:change");
      try {
        await this["_authenticate"](_0x34950b);
      } catch (_0x9d2e5) {
      }
    };
    this["_token"]["on"]("change:value", _0xd8aac3), this["_socket"]["io"]["off"]("reconnect_error"), this["on"]("disconnect", () => {
      this["_token"]["off"]("change:value", _0xd8aac3);
    });
  }
  async ["_onReconnect"]() {
    await this["_token"]["refreshToken"](), await this["_onConnect"]();
  }
  ["_onDisconnect"]() {
    this["state"] = WEB_SOCKET_GATEWAY_STATES["DISCONNECTED"], this["_connectionAttempt"] = 0, this["fire"]("disconnect");
    for (const _0x18b7c5 of this["_channels"]["values"]()) _0x18b7c5["remove"]();
    this["_channels"]["clear"](), void 0 === this["_options"]["autoReconnect"] || this["_options"]["autoReconnect"] || (this["_socket"] = void 0);
  }
  ["_debugEvent"](eventName, eventData) {
    if (!this["_isDebugModeEnabled"]()) return;
    const eventDataString = void 0 !== eventData ? ", data: " + eventData : "";
    console["info"]((/* @__PURE__ */ new Date())["toLocaleString"]() + " " + eventName + eventDataString);
  }
  ["_reconnectionAttemptError"](_0x5e5848) {
    this["_connectionAttempt"] >= 2 && (this["disconnect"](), _0x5e5848(CKEditorCloudServicesError["fromPublicError"]({ "message": "The number of initial connection attempts exceeded.", "explanation": "Three initial connection attempts failed. It can be caused by a slow, unstable, missing or blocked Internet connection.", "action": "Please verify the stability of your Internet connection and ensure that no antivirus or firewall software blocks the Web Socket protocol connections." })));
  }
  ["_onUnauthorized"]({ error: _0x473055 }) {
    this["_removeAuthData"](), this["fire"]("error", CKEditorCloudServicesServerError["fromPublicError"](_0x473055));
  }
  async ["_authenticate"](token) {
    try {
      this["_debugEvent"]("authenticate:start");
      const _0x425a4d = await this["_emit"](2, { "token": token });
      this["_debugEvent"]("authenticate:success", "envId: " + _0x425a4d["environmentId"] + ", userId: " + _0x425a4d["userId"]), this["_addAuthData"](_0x425a4d["environmentId"], _0x425a4d["userId"]);
    } catch (_0x509c75) {
      throw this["_debugEvent"]("authenticate:error", _0x509c75["message"]), this["_removeAuthData"](), _0x509c75;
    }
  }
  ["_isDebugModeEnabled"]() {
    if (!global2["window"]["localStorage"]) return false;
    return "true" === (global2["window"]["localStorage"]["getItem"]("csClientDebugMode") ?? "false")["toLowerCase"]();
  }
};
__publicField(_WebSocketGateway, "STATE_DISCONNECTED", (() => WEB_SOCKET_GATEWAY_STATES["DISCONNECTED"])());
__publicField(_WebSocketGateway, "STATE_CONNECTING", (() => WEB_SOCKET_GATEWAY_STATES["CONNECTING"])());
__publicField(_WebSocketGateway, "STATE_CONNECTED", (() => WEB_SOCKET_GATEWAY_STATES["CONNECTED"])());
__publicField(_WebSocketGateway, "_CHANGE_STATE_EVENT_PRIORITY", (() => priorities["get"]("highest") + 999999)());
var WebSocketGateway = _WebSocketGateway;
var _IsEditorBundleUploadedMessage = class _IsEditorBundleUploadedMessage extends Message {
  constructor(_0x5609ea) {
    super();
    __publicField(this, "bundleVersion");
    this["bundleVersion"] = _0x5609ea;
  }
  ["toJSON"]() {
    return { "bundleVersion": this["bundleVersion"] };
  }
  static ["fromJSON"](object) {
    return new _IsEditorBundleUploadedMessage(object["bundleVersion"]);
  }
};
__publicField(_IsEditorBundleUploadedMessage, "TYPE", "131");
__publicField(_IsEditorBundleUploadedMessage, "READABLE_TYPE_NAME", "isEditorBundleUploaded");
__publicField(_IsEditorBundleUploadedMessage, "DESCRIPTOR_NAME", "IsEditorBundleUploadedMessage");
__publicField(_IsEditorBundleUploadedMessage, "DESCRIPTOR", { "fields": { "bundleVersion": { "type": "string", "id": 1 } } });
var IsEditorBundleUploadedMessage = _IsEditorBundleUploadedMessage;
var _IsEditorBundleUploadedResponse = class _IsEditorBundleUploadedResponse extends Message {
  constructor(_0x47fdfb) {
    super();
    __publicField(this, "isUploaded");
    this["isUploaded"] = _0x47fdfb;
  }
  ["toJSON"]() {
    return { "isUploaded": this["isUploaded"] };
  }
  static ["fromJSON"](_0x1767f8) {
    return new _IsEditorBundleUploadedResponse(_0x1767f8["isUploaded"]);
  }
};
__publicField(_IsEditorBundleUploadedResponse, "DESCRIPTOR_NAME", "IsEditorBundleUploadedResponse");
__publicField(_IsEditorBundleUploadedResponse, "DESCRIPTOR", { "fields": { "isUploaded": { "type": "bool", "id": 1 } } });
var IsEditorBundleUploadedResponse = _IsEditorBundleUploadedResponse;
var _EditorService = class _EditorService extends EmitterMixin() {
  static async ["isBundleUploaded"](wsGateway, _0x3be197) {
    const _0x49adfb = new IsEditorBundleUploadedMessage(_0x3be197);
    if (wsGateway["state"] !== WEB_SOCKET_GATEWAY_STATES["CONNECTED"]) throw new CKEditorCloudServicesError("WebSocket Gateway is not connected.", wsGateway);
    const _0x3ab1cd = await wsGateway["_sendRequest"](_EditorService["_SERVICE"], IsEditorBundleUploadedMessage["TYPE"], MessagesCompressor["encode"](_0x49adfb));
    return MessagesCompressor["decode"](_0x3ab1cd, IsEditorBundleUploadedResponse)["isUploaded"];
  }
};
__publicField(_EditorService, "_SERVICE", 13);
var EditorService = _EditorService;
var _RevisionHistoryGetRevisionMessage = class _RevisionHistoryGetRevisionMessage extends Message {
  constructor(documentId, _0x17f89e) {
    super();
    __publicField(this, "documentId");
    __publicField(this, "revisionId");
    this["documentId"] = documentId, this["revisionId"] = _0x17f89e;
  }
  ["toJSON"]() {
    return { "documentId": this["documentId"], "revisionId": this["revisionId"] };
  }
  static ["fromJSON"](object) {
    return new _RevisionHistoryGetRevisionMessage(object["documentId"], object["revisionId"]);
  }
};
__publicField(_RevisionHistoryGetRevisionMessage, "TYPE", "123");
__publicField(_RevisionHistoryGetRevisionMessage, "READABLE_TYPE_NAME", "getRevision");
__publicField(_RevisionHistoryGetRevisionMessage, "DESCRIPTOR_NAME", "RevisionHistoryGetRevisionMessage");
__publicField(_RevisionHistoryGetRevisionMessage, "DESCRIPTOR", { "fields": { "documentId": { "type": "string", "id": 1 }, "revisionId": { "type": "string", "id": 2 } } });
var RevisionHistoryGetRevisionMessage = _RevisionHistoryGetRevisionMessage;
var RevisionDescriptor = class extends Descriptor {
  static ["create"](object) {
    return { "revisionId": object["id"], "name": object["name"], "creatorId": object["creatorId"], "createdAt": object["createdAt"], "fromVersion": object["fromVersion"], "toVersion": object["toVersion"], "isEmptyCurrent": object["isEmptyCurrent"], "diffData": object["diffData"] ? JSON["stringify"](object["diffData"]) : void 0, "attributes": object["attributes"], "authorsIds": object["authorsIds"] };
  }
  static ["toJSON"](_0x790a74) {
    var _a5;
    return { "revisionId": _0x790a74["revisionId"], "name": _0x790a74["name"], "creatorId": _0x790a74["creatorId"], "authorsIds": _0x790a74["authorsIds"] ? JSON["stringify"](_0x790a74["authorsIds"]) : void 0, "diffData": _0x790a74["diffData"], "createdAt": (_a5 = _0x790a74["createdAt"]) == null ? void 0 : _a5["toISOString"](), "attributes": _0x790a74["attributes"] ? JSON["stringify"](_0x790a74["attributes"]) : void 0, "toVersion": _0x790a74["toVersion"], "fromVersion": _0x790a74["fromVersion"], "isEmptyCurrent": _0x790a74["isEmptyCurrent"] };
  }
  static ["fromJSON"](_0x225ed8) {
    return { "revisionId": (_0x225ed8 = { ..._0x225ed8 })["revisionId"], "name": _0x225ed8["name"], "creatorId": _0x225ed8["creatorId"], "authorsIds": _0x225ed8["authorsIds"] ? JSON["parse"](_0x225ed8["authorsIds"]) : void 0, "diffData": _0x225ed8["diffData"], "createdAt": _0x225ed8["createdAt"] ? new Date(_0x225ed8["createdAt"]) : void 0, "attributes": _0x225ed8["attributes"] ? JSON["parse"](_0x225ed8["attributes"]) : void 0, "toVersion": _0x225ed8["toVersion"], "fromVersion": _0x225ed8["fromVersion"], "isEmptyCurrent": _0x225ed8["isEmptyCurrent"] };
  }
  static ["toObject"](_0x279804) {
    return function(revisionObject) {
      for (const [_0x3dd43f, _0x1d36ae] of Object["entries"](revisionObject)) void 0 === _0x1d36ae && delete revisionObject[_0x3dd43f];
      return revisionObject;
    }({ "id": _0x279804["revisionId"], "name": _0x279804["name"], "creatorId": _0x279804["creatorId"], "createdAt": _0x279804["createdAt"], "fromVersion": _0x279804["fromVersion"], "toVersion": _0x279804["toVersion"], "isEmptyCurrent": _0x279804["isEmptyCurrent"], "diffData": _0x279804["diffData"] ? JSON["parse"](_0x279804["diffData"]) : void 0, "attributes": _0x279804["attributes"], "authorsIds": _0x279804["authorsIds"] });
  }
};
__publicField(RevisionDescriptor, "DESCRIPTOR_NAME", "RevisionDescriptor");
__publicField(RevisionDescriptor, "DESCRIPTOR", /* @__PURE__ */ (() => ({ "fields": { "revisionId": { "type": "string", "id": 1 }, "name": { "type": "string", "id": 2 }, "creatorId": { "type": "string", "id": 3 }, "authorsIds": { "type": "string", "id": 4 }, "diffData": { "type": "string", "id": 5 }, "createdAt": { "type": "string", "id": 6 }, "attributes": { "type": "string", "id": 7 }, "toVersion": { "type": "uint32", "id": 8 }, "fromVersion": { "type": "uint32", "id": 9 }, "isEmptyCurrent": { "type": "bool", "id": 10 } } }))());
var _RevisionHistoryGetRevisionResponse = class _RevisionHistoryGetRevisionResponse extends Message {
  constructor(_0x11542b, _0x330105, creatorId, authorsIds, createdAt, diffData, attributes, _0x57b25d, toVersion, isEmptyCurrent) {
    super();
    __publicField(this, "revisionId");
    __publicField(this, "name");
    __publicField(this, "creatorId");
    __publicField(this, "authorsIds");
    __publicField(this, "createdAt");
    __publicField(this, "diffData");
    __publicField(this, "attributes");
    __publicField(this, "fromVersion");
    __publicField(this, "toVersion");
    __publicField(this, "isEmptyCurrent");
    this["revisionId"] = _0x11542b, this["name"] = _0x330105, this["creatorId"] = creatorId, this["authorsIds"] = authorsIds, this["createdAt"] = createdAt, this["diffData"] = diffData, this["attributes"] = attributes, this["fromVersion"] = _0x57b25d, this["toVersion"] = toVersion, this["isEmptyCurrent"] = isEmptyCurrent;
  }
  ["toJSON"]() {
    return RevisionDescriptor["toJSON"](this);
  }
  ["toObject"]() {
    return RevisionDescriptor["toObject"](this);
  }
  static ["create"](_0x473bb5) {
    return new _RevisionHistoryGetRevisionResponse(_0x473bb5["revisionId"], _0x473bb5["name"], _0x473bb5["creatorId"], _0x473bb5["authorsIds"], _0x473bb5["createdAt"], _0x473bb5["diffData"], _0x473bb5["attributes"], _0x473bb5["fromVersion"], _0x473bb5["toVersion"], _0x473bb5["isEmptyCurrent"]);
  }
  static ["fromJSON"](_0x21c715) {
    return new _RevisionHistoryGetRevisionResponse(_0x21c715["revisionId"], _0x21c715["name"], _0x21c715["creatorId"], _0x21c715["authorsIds"] ? JSON["parse"](_0x21c715["authorsIds"]) : void 0, _0x21c715["createdAt"] ? new Date(_0x21c715["createdAt"]) : void 0, _0x21c715["diffData"], _0x21c715["attributes"] ? JSON["parse"](_0x21c715["attributes"]) : void 0, _0x21c715["fromVersion"], _0x21c715["toVersion"], _0x21c715["isEmptyCurrent"]);
  }
};
__publicField(_RevisionHistoryGetRevisionResponse, "DESCRIPTOR_NAME", "RevisionHistoryGetRevisionResponse");
__publicField(_RevisionHistoryGetRevisionResponse, "DESCRIPTOR", (() => RevisionDescriptor["DESCRIPTOR"])());
var RevisionHistoryGetRevisionResponse = _RevisionHistoryGetRevisionResponse;
var _RevisionHistoryUpdateRevisionsMessage = class _RevisionHistoryUpdateRevisionsMessage extends Message {
  constructor(documentId, requestId, _0xdea4bf) {
    super();
    __publicField(this, "documentId");
    __publicField(this, "requestId");
    __publicField(this, "revisions");
    this["documentId"] = documentId, this["requestId"] = requestId, this["revisions"] = _0xdea4bf;
  }
  ["toJSON"]() {
    return { "documentId": this["documentId"], "requestId": this["requestId"], "revisions": this["revisions"]["map"](RevisionDescriptor["toJSON"]) };
  }
  ["toObject"]() {
    return { "documentId": this["documentId"], "requestId": this["requestId"], "revisions": this["revisions"]["map"](RevisionDescriptor["toObject"]) };
  }
  static ["create"](_0x3a0dd6) {
    return new _RevisionHistoryUpdateRevisionsMessage(_0x3a0dd6["documentId"], _0x3a0dd6["requestId"], _0x3a0dd6["revisions"]["map"](RevisionDescriptor["create"]));
  }
  static ["fromJSON"](_0xe5368d) {
    return new _RevisionHistoryUpdateRevisionsMessage(_0xe5368d["documentId"], _0xe5368d["requestId"], _0xe5368d["revisions"]["map"](RevisionDescriptor["fromJSON"]));
  }
};
__publicField(_RevisionHistoryUpdateRevisionsMessage, "TYPE", "124");
__publicField(_RevisionHistoryUpdateRevisionsMessage, "READABLE_TYPE_NAME", "updateRevisions");
__publicField(_RevisionHistoryUpdateRevisionsMessage, "DESCRIPTOR_NAME", "RevisionHistoryUpdateRevisionsMessage");
__publicField(_RevisionHistoryUpdateRevisionsMessage, "DESCRIPTOR", { "fields": { "documentId": { "type": "string", "id": 1 }, "requestId": { "type": "uint32", "id": 2 }, "revisions": { "type": "RevisionDescriptor", "id": 3, "rule": "repeated" } } });
var RevisionHistoryUpdateRevisionsMessage = _RevisionHistoryUpdateRevisionsMessage;
var _RevisionHistoryUpdateRevisionsResponse = class _RevisionHistoryUpdateRevisionsResponse extends Message {
  constructor(requestId) {
    super();
    __publicField(this, "requestId");
    this["requestId"] = requestId;
  }
  ["toJSON"]() {
    return { "requestId": this["requestId"] };
  }
  static ["fromJSON"](_0x37be76) {
    return new _RevisionHistoryUpdateRevisionsResponse(_0x37be76["requestId"]);
  }
};
__publicField(_RevisionHistoryUpdateRevisionsResponse, "DESCRIPTOR_NAME", "RevisionHistoryUpdateRevisionsResponse");
__publicField(_RevisionHistoryUpdateRevisionsResponse, "DESCRIPTOR", { "fields": { "requestId": { "type": "uint32", "id": 1 } } });
var RevisionHistoryUpdateRevisionsResponse = _RevisionHistoryUpdateRevisionsResponse;
var _RevisionHistoryConnectMessage = class _RevisionHistoryConnectMessage extends Message {
  constructor(documentId) {
    super();
    __publicField(this, "documentId");
    this["documentId"] = documentId;
  }
  ["toJSON"]() {
    return { "documentId": this["documentId"] };
  }
  static ["fromJSON"](object) {
    return new _RevisionHistoryConnectMessage(object["documentId"]);
  }
};
__publicField(_RevisionHistoryConnectMessage, "TYPE", "121");
__publicField(_RevisionHistoryConnectMessage, "READABLE_TYPE_NAME", "connectToRevisionHistory");
__publicField(_RevisionHistoryConnectMessage, "DESCRIPTOR_NAME", "RevisionHistoryConnectMessage");
__publicField(_RevisionHistoryConnectMessage, "DESCRIPTOR", { "fields": { "documentId": { "type": "string", "id": 1 } } });
var RevisionHistoryConnectMessage = _RevisionHistoryConnectMessage;
var _RevisionHistoryConnectResponse = class _RevisionHistoryConnectResponse extends Message {
  constructor(_0x434e14, requestId, _0x242666) {
    super();
    __publicField(this, "channel");
    __publicField(this, "requestId");
    __publicField(this, "revisions");
    this["channel"] = _0x434e14, this["requestId"] = requestId, this["revisions"] = _0x242666;
  }
  ["toJSON"]() {
    return { "channel": this["channel"], "requestId": this["requestId"], "revisions": this["revisions"]["map"](RevisionDescriptor["toJSON"]) };
  }
  ["toObject"]() {
    return { "channel": this["channel"], "requestId": this["requestId"], "revisions": this["revisions"]["map"](RevisionDescriptor["toObject"]) };
  }
  static ["fromJSON"](_0x4f38b0) {
    return new _RevisionHistoryConnectResponse(_0x4f38b0["channel"], _0x4f38b0["requestId"], _0x4f38b0["revisions"]["map"](RevisionDescriptor["fromJSON"]));
  }
};
__publicField(_RevisionHistoryConnectResponse, "DESCRIPTOR_NAME", "RevisionHistoryConnectResponse");
__publicField(_RevisionHistoryConnectResponse, "DESCRIPTOR", /* @__PURE__ */ (() => ({ "fields": { "channel": { "type": "string", "id": 1 }, "requestId": { "type": "uint32", "id": 2 }, "revisions": { "type": "RevisionDescriptor", "id": 3, "rule": "repeated" } } }))());
var RevisionHistoryConnectResponse = _RevisionHistoryConnectResponse;
var _RevisionHistoryReconnectMessage = class _RevisionHistoryReconnectMessage extends Message {
  constructor(documentId, requestId) {
    super();
    __publicField(this, "documentId");
    __publicField(this, "requestId");
    this["documentId"] = documentId, this["requestId"] = requestId;
  }
  ["toJSON"]() {
    return { "documentId": this["documentId"], "requestId": this["requestId"] };
  }
  static ["fromJSON"](object) {
    return new _RevisionHistoryReconnectMessage(object["documentId"], object["requestId"]);
  }
};
__publicField(_RevisionHistoryReconnectMessage, "TYPE", "122");
__publicField(_RevisionHistoryReconnectMessage, "READABLE_TYPE_NAME", "reconnectToRevisionHistory");
__publicField(_RevisionHistoryReconnectMessage, "DESCRIPTOR_NAME", "RevisionHistoryReconnectMessage");
__publicField(_RevisionHistoryReconnectMessage, "DESCRIPTOR", { "fields": { "documentId": { "type": "string", "id": 1 }, "requestId": { "type": "uint32", "id": 2 } } });
var RevisionHistoryReconnectMessage = _RevisionHistoryReconnectMessage;
var ServiceNotConnectedError = class extends CKEditorCloudServicesError {
  constructor(_0x1c5f02, context) {
    super(_0x1c5f02 + " Service is not connected.", context);
  }
};
var _RevisionHistoryService = class _RevisionHistoryService extends EmitterMixin() {
  constructor(_documentId) {
    super();
    __publicField(this, "_documentId");
    __publicField(this, "_isConnected");
    __publicField(this, "_wsGateway");
    __publicField(this, "_channel");
    this["_documentId"] = _documentId, this["_isConnected"] = false;
  }
  get ["isConnected"]() {
    return this["_isConnected"];
  }
  ["connect"](wsGateway) {
    return this["_isConnected"] ? Promise["resolve"]() : this["_connect"](wsGateway, new RevisionHistoryConnectMessage(this["_documentId"]));
  }
  ["disconnect"]() {
    this["_isConnected"] && (this["_isConnected"] = false, this["_wsGateway"] && (this["stopListening"](this["_wsGateway"]), this["_wsGateway"] = void 0), this["_channel"] && (this["stopListening"](this["_channel"]), this["_channel"] = void 0), this["fire"]("disconnected"), this["stopListening"]());
  }
  ["reconnect"](wsGateway, lastRequestId) {
    if (this["isConnected"]) throw new CKEditorCloudServicesError("Cannot reconnect to already connected service.", wsGateway);
    return this["_connect"](wsGateway, new RevisionHistoryReconnectMessage(this["_documentId"], lastRequestId));
  }
  async ["updateRevisions"](_0x5aef42, lastRequestId) {
    const _0x31253b = RevisionHistoryUpdateRevisionsMessage["create"]({ "documentId": this["_documentId"], "requestId": lastRequestId, "revisions": _0x5aef42 }), _0x499991 = await this["_sendRequest"](RevisionHistoryUpdateRevisionsMessage["TYPE"], _0x31253b), { requestId } = MessagesCompressor["decode"](_0x499991, RevisionHistoryUpdateRevisionsResponse);
    return requestId;
  }
  async ["getRevision"](_0x527bd4) {
    const _0x3b4a75 = new RevisionHistoryGetRevisionMessage(this["_documentId"], _0x527bd4), _0x54f7cb = await this["_sendRequest"](RevisionHistoryGetRevisionMessage["TYPE"], _0x3b4a75);
    return MessagesCompressor["decode"](_0x54f7cb, RevisionHistoryGetRevisionResponse)["toObject"]();
  }
  async ["_connect"](wsGateway, _0x69a8ff) {
    if (wsGateway["state"] !== WEB_SOCKET_GATEWAY_STATES["CONNECTED"]) throw new CKEditorCloudServicesError("WebSocket Gateway is not connected.", wsGateway);
    this["_wsGateway"] = wsGateway, this["stopListening"](wsGateway, "change:state");
    const _0x285268 = await wsGateway["_sendRequest"](12, _0x69a8ff["constructor"]["TYPE"], MessagesCompressor["encode"](_0x69a8ff)), { channel: _0x4990e8, requestId, revisions: _0x769210 } = MessagesCompressor["decode"](_0x285268, RevisionHistoryConnectResponse)["toObject"]();
    return this["listenTo"](wsGateway, "change:state", (_0x3f13b9, _0x54a05a, state) => this["_onWsGatewayStateChange"](state), { "priority": WebSocketGateway["_CHANGE_STATE_EVENT_PRIORITY"] }), this["_connectToChannel"](wsGateway, _0x4990e8), this["_isConnected"] = true, this["fire"]("connected"), { "revisions": _0x769210, "requestId": requestId };
  }
  ["_connectToChannel"](wsGateway, _0x41d2cf) {
    this["_channel"] = wsGateway["_getChannel"](_RevisionHistoryService["_SERVICE"], _0x41d2cf), this["_channel"] && this["listenTo"](this["_channel"], this["_channel"]["getEventName"](RevisionHistoryUpdateRevisionsMessage["TYPE"]), (event, data) => {
      const { documentId, requestId, revisions: _0x1d26ff } = MessagesCompressor["decode"](data, RevisionHistoryUpdateRevisionsMessage)["toObject"]();
      this["fire"]("revisionsUpdated", { "documentId": documentId, "requestId": requestId, "revisionsData": _0x1d26ff });
    });
  }
  ["_onWsGatewayStateChange"](_0x4cbf58) {
    _0x4cbf58 === WEB_SOCKET_GATEWAY_STATES["DISCONNECTED"] && this["disconnect"]();
  }
  ["_sendRequest"](method, _0x9dc567) {
    if (!this["_wsGateway"] || !this["_isConnected"]) throw new ServiceNotConnectedError("Revision History", this);
    return this["_wsGateway"]["_sendRequest"](12, method, MessagesCompressor["encode"](_0x9dc567));
  }
};
__publicField(_RevisionHistoryService, "_SERVICE", 12);
var RevisionHistoryService = _RevisionHistoryService;
var _AddSuggestionMessage = class _AddSuggestionMessage extends Message {
  constructor(_0x245bf6, documentId, type, data = {}, originalSuggestionId = null, attributes = null) {
    super();
    __publicField(this, "id");
    __publicField(this, "documentId");
    __publicField(this, "type");
    __publicField(this, "data");
    __publicField(this, "originalSuggestionId");
    __publicField(this, "attributes");
    this["id"] = _0x245bf6, this["documentId"] = documentId, this["type"] = type, this["data"] = data, this["originalSuggestionId"] = originalSuggestionId, this["attributes"] = attributes;
  }
  ["toJSON"]() {
    return { "id": this["id"], "documentId": this["documentId"], "type": this["type"], "data": JSON["stringify"](this["data"]), "originalSuggestionId": this["originalSuggestionId"], "attributes": JSON["stringify"](this["attributes"]) };
  }
  static ["fromJSON"](object) {
    return new _AddSuggestionMessage(object["id"], object["documentId"], object["type"], JSON["parse"](object["data"]), object["originalSuggestionId"] ?? null, object["attributes"] ? JSON["parse"](object["attributes"]) : null);
  }
};
__publicField(_AddSuggestionMessage, "TYPE", "101");
__publicField(_AddSuggestionMessage, "READABLE_TYPE_NAME", "addSuggestion");
__publicField(_AddSuggestionMessage, "DESCRIPTOR_NAME", "TrackChangesAddSuggestionMessage");
__publicField(_AddSuggestionMessage, "DESCRIPTOR", { "fields": { "id": { "type": "string", "id": 1 }, "documentId": { "type": "string", "id": 2 }, "type": { "type": "string", "id": 3 }, "data": { "type": "string", "id": 4 }, "originalSuggestionId": { "type": "string", "id": 5 }, "attributes": { "type": "string", "id": 6 } } });
var AddSuggestionMessage = _AddSuggestionMessage;
var _AddSuggestionResponse = class _AddSuggestionResponse extends Message {
  constructor(_0x4194c5, authorId, type, createdAt, hasComments, state, data = {}, attributes = null) {
    super();
    __publicField(this, "id");
    __publicField(this, "authorId");
    __publicField(this, "type");
    __publicField(this, "hasComments");
    __publicField(this, "state");
    __publicField(this, "data");
    __publicField(this, "attributes");
    __publicField(this, "createdAt");
    this["id"] = _0x4194c5, this["authorId"] = authorId, this["type"] = type, this["hasComments"] = hasComments, this["state"] = state, this["data"] = data, this["attributes"] = attributes, this["createdAt"] = createdAt ? new Date(createdAt) : void 0;
  }
  ["toJSON"]() {
    var _a5;
    return { "id": this["id"], "authorId": this["authorId"], "type": this["type"], "createdAt": (_a5 = this["createdAt"]) == null ? void 0 : _a5["toISOString"](), "data": JSON["stringify"](this["data"]), "hasComments": this["hasComments"], "state": this["state"], "attributes": JSON["stringify"](this["attributes"]) };
  }
  static ["fromJSON"](data) {
    return new _AddSuggestionResponse(data["id"], data["authorId"], data["type"], data["createdAt"], data["hasComments"], data["state"], JSON["parse"](data["data"]), data["attributes"] ? JSON["parse"](data["attributes"]) : null);
  }
};
__publicField(_AddSuggestionResponse, "DESCRIPTOR_NAME", "TrackChangesAddSuggestionResponse");
__publicField(_AddSuggestionResponse, "DESCRIPTOR", { "fields": { "id": { "type": "string", "id": 1 }, "authorId": { "type": "string", "id": 2 }, "type": { "type": "string", "id": 3 }, "createdAt": { "type": "string", "id": 4 }, "data": { "type": "string", "id": 5 }, "hasComments": { "type": "bool", "id": 6 }, "state": { "type": "string", "id": 7 }, "attributes": { "type": "string", "id": 8 } } });
var AddSuggestionResponse = _AddSuggestionResponse;
var _GetSuggestionMessage = class _GetSuggestionMessage extends Message {
  constructor(_0x37f3a1, documentId) {
    super();
    __publicField(this, "id");
    __publicField(this, "documentId");
    this["id"] = _0x37f3a1, this["documentId"] = documentId;
  }
  ["toJSON"]() {
    return { "id": this["id"], "documentId": this["documentId"] };
  }
  static ["fromJSON"](object) {
    return new _GetSuggestionMessage(object["id"], object["documentId"]);
  }
};
__publicField(_GetSuggestionMessage, "TYPE", "103");
__publicField(_GetSuggestionMessage, "READABLE_TYPE_NAME", "getSuggestion");
__publicField(_GetSuggestionMessage, "DESCRIPTOR_NAME", "TrackChangesGetSuggestionMessage");
__publicField(_GetSuggestionMessage, "DESCRIPTOR", { "fields": { "id": { "type": "string", "id": 1 }, "documentId": { "type": "string", "id": 2 } } });
var GetSuggestionMessage = _GetSuggestionMessage;
var _GetSuggestionResponse = class _GetSuggestionResponse extends Message {
  constructor(_0x25c945, authorId, type, createdAt, hasComments, state, data = {}, attributes = null) {
    super();
    __publicField(this, "id");
    __publicField(this, "authorId");
    __publicField(this, "type");
    __publicField(this, "hasComments");
    __publicField(this, "state");
    __publicField(this, "data");
    __publicField(this, "attributes");
    __publicField(this, "createdAt");
    this["id"] = _0x25c945, this["authorId"] = authorId, this["type"] = type, this["hasComments"] = hasComments, this["state"] = state, this["data"] = data, this["attributes"] = attributes, this["createdAt"] = new Date(createdAt);
  }
  ["toJSON"]() {
    return { "id": this["id"], "authorId": this["authorId"], "type": this["type"], "createdAt": this["createdAt"]["toISOString"](), "data": JSON["stringify"](this["data"]), "hasComments": this["hasComments"], "state": this["state"], "attributes": JSON["stringify"](this["attributes"]) };
  }
  static ["fromJSON"](data) {
    return new _GetSuggestionResponse(data["id"], data["authorId"], data["type"], data["createdAt"], data["hasComments"], data["state"], JSON["parse"](data["data"]), data["attributes"] ? JSON["parse"](data["attributes"]) : null);
  }
};
__publicField(_GetSuggestionResponse, "DESCRIPTOR_NAME", "TrackChangesGetSuggestionResponse");
__publicField(_GetSuggestionResponse, "DESCRIPTOR", { "fields": { "id": { "type": "string", "id": 1 }, "authorId": { "type": "string", "id": 2 }, "type": { "type": "string", "id": 3 }, "createdAt": { "type": "string", "id": 4 }, "data": { "type": "string", "id": 5 }, "hasComments": { "type": "bool", "id": 6 }, "state": { "type": "string", "id": 7 }, "attributes": { "type": "string", "id": 8 } } });
var GetSuggestionResponse = _GetSuggestionResponse;
var _GetAllSuggestionsMessage = class _GetAllSuggestionsMessage extends Message {
  constructor(documentId) {
    super();
    __publicField(this, "documentId");
    this["documentId"] = documentId;
  }
  ["toJSON"]() {
    return { "documentId": this["documentId"] };
  }
  static ["fromJSON"](object) {
    return new _GetAllSuggestionsMessage(object["documentId"]);
  }
};
__publicField(_GetAllSuggestionsMessage, "TYPE", "102");
__publicField(_GetAllSuggestionsMessage, "READABLE_TYPE_NAME", "getAllSuggestions");
__publicField(_GetAllSuggestionsMessage, "DESCRIPTOR_NAME", "TrackChangesGetAllSuggestionMessage");
__publicField(_GetAllSuggestionsMessage, "DESCRIPTOR", { "fields": { "documentId": { "type": "string", "id": 1 } } });
var GetAllSuggestionsMessage = _GetAllSuggestionsMessage;
var SuggestionDescriptor = class extends Descriptor {
  static ["toJSON"](suggestion) {
    var _a5;
    return { ...suggestion, "data": suggestion["data"] ? JSON["stringify"](suggestion["data"]) : suggestion["data"], "attributes": suggestion["attributes"] ? JSON["stringify"](suggestion["attributes"]) : suggestion["attributes"], "createdAt": (_a5 = suggestion["createdAt"]) == null ? void 0 : _a5["toISOString"]() };
  }
  static ["fromJSON"](suggestion) {
    return { ...suggestion, "data": suggestion["data"] ? JSON["parse"](suggestion["data"]) : suggestion["data"], "attributes": suggestion["attributes"] ? JSON["parse"](suggestion["attributes"]) : suggestion["attributes"], "createdAt": suggestion["createdAt"] ? new Date(suggestion["createdAt"]) : void 0 };
  }
};
__publicField(SuggestionDescriptor, "DESCRIPTOR_NAME", "SuggestionDescriptor");
__publicField(SuggestionDescriptor, "DESCRIPTOR", { "fields": { "id": { "id": 1, "type": "string" }, "authorId": { "id": 2, "type": "string" }, "type": { "id": 3, "type": "string" }, "createdAt": { "id": 4, "type": "string" }, "data": { "id": 5, "type": "string" }, "hasComments": { "id": 6, "type": "bool" }, "state": { "id": 7, "type": "string" }, "attributes": { "id": 8, "type": "string" } } });
var _GetAllSuggestionResponse = class _GetAllSuggestionResponse extends Message {
  constructor(_suggestions, _suggestionsV2) {
    super();
    __publicField(this, "_suggestions");
    __publicField(this, "_suggestionsV2");
    __publicField(this, "suggestions");
    this["_suggestions"] = _suggestions, this["_suggestionsV2"] = _suggestionsV2, this["suggestions"] = (_suggestionsV2 == null ? void 0 : _suggestionsV2["length"]) ? _suggestionsV2 : _suggestions;
  }
  ["toJSON"]() {
    var _a5, _b;
    return { "suggestions": (_a5 = this["_suggestions"]) == null ? void 0 : _a5["map"]((suggestion) => JSON["stringify"](suggestion)), "suggestionsV2": (_b = this["_suggestionsV2"]) == null ? void 0 : _b["map"](SuggestionDescriptor["toJSON"]) };
  }
  static ["fromJSON"](data) {
    var _a5, _b;
    return new _GetAllSuggestionResponse((_a5 = data["suggestions"]) == null ? void 0 : _a5["map"](_suggestionFromString), (_b = data["suggestionsV2"]) == null ? void 0 : _b["map"](SuggestionDescriptor["fromJSON"]));
  }
};
__publicField(_GetAllSuggestionResponse, "DESCRIPTOR_NAME", "TrackChangesGetAllSuggestionsResponse");
__publicField(_GetAllSuggestionResponse, "DESCRIPTOR", { "fields": { "suggestions": { "type": "string", "rule": "repeated", "id": 1 }, "suggestionsV2": { "type": "SuggestionDescriptor", "rule": "repeated", "id": 2 } } });
var GetAllSuggestionResponse = _GetAllSuggestionResponse;
function _suggestionFromString(suggestion) {
  const parsedSuggestion = JSON["parse"](suggestion);
  return parsedSuggestion["createdAt"] = parsedSuggestion["createdAt"] ? new Date(parsedSuggestion["createdAt"]) : void 0, parsedSuggestion;
}
var _UpdateSuggestionMessage = class _UpdateSuggestionMessage extends Message {
  constructor(_0x1b6a04, documentId, hasComments, isHasCommentsModified, state, attributes = null) {
    super();
    __publicField(this, "id");
    __publicField(this, "documentId");
    __publicField(this, "hasComments");
    __publicField(this, "isHasCommentsModified");
    __publicField(this, "state");
    __publicField(this, "attributes");
    this["id"] = _0x1b6a04, this["documentId"] = documentId, this["hasComments"] = hasComments, this["isHasCommentsModified"] = isHasCommentsModified, this["state"] = state, this["attributes"] = attributes;
  }
  ["toJSON"]() {
    return { "id": this["id"], "documentId": this["documentId"], "hasComments": this["hasComments"], "isHasCommentsModified": this["isHasCommentsModified"], "state": this["state"], "attributes": JSON["stringify"](this["attributes"]) };
  }
  static ["fromJSON"](object) {
    return new _UpdateSuggestionMessage(object["id"], object["documentId"], object["hasComments"], object["isHasCommentsModified"], object["state"], object["attributes"] ? JSON["parse"](object["attributes"]) : null);
  }
};
__publicField(_UpdateSuggestionMessage, "TYPE", "104");
__publicField(_UpdateSuggestionMessage, "READABLE_TYPE_NAME", "updateSuggestion");
__publicField(_UpdateSuggestionMessage, "DESCRIPTOR_NAME", "TrackChangesUpdateSuggestionMessage");
__publicField(_UpdateSuggestionMessage, "DESCRIPTOR", { "fields": { "id": { "type": "string", "id": 1 }, "documentId": { "type": "string", "id": 2 }, "hasComments": { "type": "bool", "id": 3 }, "isHasCommentsModified": { "type": "bool", "id": 4 }, "state": { "type": "string", "id": 5 }, "attributes": { "type": "string", "id": 6 } } });
var UpdateSuggestionMessage = _UpdateSuggestionMessage;
var _a2;
var ConnectMessage$1 = (_a2 = class extends Message {
  constructor(documentId) {
    super();
    __publicField(this, "documentId");
    this["documentId"] = documentId;
  }
  ["toJSON"]() {
    return { "documentId": this["documentId"] };
  }
  static ["fromJSON"](object) {
    return new _a2(object["documentId"]);
  }
}, __publicField(_a2, "TYPE", "105"), __publicField(_a2, "READABLE_TYPE_NAME", "connectToSuggestions"), __publicField(_a2, "DESCRIPTOR_NAME", "TrackChangesConnectMessage"), __publicField(_a2, "DESCRIPTOR", { "fields": { "documentId": { "type": "string", "id": 1 } } }), _a2);
var _a3;
var ConnectResponse$1 = (_a3 = class extends Message {
  constructor(_0x57d092, _suggestions, _suggestionsV2) {
    super();
    __publicField(this, "channel");
    __publicField(this, "_suggestions");
    __publicField(this, "_suggestionsV2");
    __publicField(this, "suggestions");
    this["channel"] = _0x57d092, this["_suggestions"] = _suggestions, this["_suggestionsV2"] = _suggestionsV2, this["suggestions"] = (_suggestionsV2 == null ? void 0 : _suggestionsV2["length"]) ? _suggestionsV2 : _suggestions;
  }
  ["toJSON"]() {
    var _a5, _b;
    return { "channel": this["channel"], "suggestions": (_a5 = this["_suggestions"]) == null ? void 0 : _a5["map"]((suggestion) => JSON["stringify"](suggestion)), "suggestionsV2": (_b = this["_suggestionsV2"]) == null ? void 0 : _b["map"](SuggestionDescriptor["toJSON"]) };
  }
  static ["fromJSON"](object) {
    var _a5, _b;
    return new _a3(object["channel"], (_a5 = object["suggestions"]) == null ? void 0 : _a5["map"]((suggestion) => JSON["parse"](suggestion)), (_b = object["suggestionsV2"]) == null ? void 0 : _b["map"](SuggestionDescriptor["fromJSON"]));
  }
}, __publicField(_a3, "DESCRIPTOR_NAME", "TrackChangesConnectResponse"), __publicField(_a3, "DESCRIPTOR", { "fields": { "channel": { "type": "string", "id": 1 }, "suggestions": { "type": "string", "rule": "repeated", "id": 2 }, "suggestionsV2": { "type": "SuggestionDescriptor", "rule": "repeated", "id": 3 } } }), _a3);
var _BatchUpdateSuggestionsStateMessage = class _BatchUpdateSuggestionsStateMessage extends Message {
  constructor(_0x2e5ad7, documentId, state) {
    super();
    __publicField(this, "ids");
    __publicField(this, "documentId");
    __publicField(this, "state");
    this["ids"] = _0x2e5ad7, this["documentId"] = documentId, this["state"] = state;
  }
  ["toJSON"]() {
    return { "ids": this["ids"], "documentId": this["documentId"], "state": this["state"] };
  }
  static ["fromJSON"](object) {
    return new _BatchUpdateSuggestionsStateMessage(object["ids"], object["documentId"], object["state"]);
  }
};
__publicField(_BatchUpdateSuggestionsStateMessage, "TYPE", "106");
__publicField(_BatchUpdateSuggestionsStateMessage, "READABLE_TYPE_NAME", "batchUpdateSuggestionsState");
__publicField(_BatchUpdateSuggestionsStateMessage, "DESCRIPTOR_NAME", "TrackChangesBatchUpdateSuggestionsStateMessage");
__publicField(_BatchUpdateSuggestionsStateMessage, "DESCRIPTOR", { "fields": { "ids": { "type": "string", "rule": "repeated", "id": 1 }, "documentId": { "type": "string", "id": 2 }, "state": { "type": "string", "id": 3 } } });
var BatchUpdateSuggestionsStateMessage = _BatchUpdateSuggestionsStateMessage;
var _TrackChangesService = class _TrackChangesService extends EmitterMixin() {
  constructor(_documentId) {
    super();
    __publicField(this, "_documentId");
    __publicField(this, "_isConnected");
    __publicField(this, "_wsGateway");
    __publicField(this, "_channel");
    this["_documentId"] = _documentId, this["_isConnected"] = false;
  }
  get ["isConnected"]() {
    return this["_isConnected"];
  }
  async ["connect"](wsGateway) {
    if (this["_isConnected"]) return;
    if (wsGateway["state"] !== WEB_SOCKET_GATEWAY_STATES["CONNECTED"]) throw new CKEditorCloudServicesError("WebSocket Gateway is not connected.", wsGateway);
    const connectMessage = new ConnectMessage$1(this["_documentId"]);
    this["_wsGateway"] = wsGateway, this["stopListening"](wsGateway, "change:state");
    const _0x281fe5 = await wsGateway["_sendRequest"](10, ConnectMessage$1["TYPE"], MessagesCompressor["encode"](connectMessage)), connectResponse = MessagesCompressor["decode"](_0x281fe5, ConnectResponse$1);
    return this["listenTo"](wsGateway, "change:state", (_0x3ca2c5, _0x1be137, _0x5c653b) => this["_onWsGatewayStateChange"](_0x5c653b), { "priority": WebSocketGateway["_CHANGE_STATE_EVENT_PRIORITY"] }), this["_connectToChannel"](wsGateway, connectResponse["channel"]), this["_isConnected"] = true, this["fire"]("connected"), connectResponse["suggestions"];
  }
  ["disconnect"]() {
    this["_isConnected"] && (this["_isConnected"] = false, this["_wsGateway"] && (this["stopListening"](this["_wsGateway"]), this["_wsGateway"] = void 0), this["_channel"] && (this["stopListening"](this["_channel"]), this["_channel"] = void 0), this["fire"]("disconnected"), this["stopListening"]());
  }
  async ["add"](_0x1bf34e, type, data, originalSuggestionId = null, attributes) {
    const _0xd551c7 = new AddSuggestionMessage(_0x1bf34e, this["_documentId"], type, data, originalSuggestionId, attributes), _0x497a32 = await this["_sendRequest"](AddSuggestionMessage["TYPE"], _0xd551c7);
    return MessagesCompressor["decode"](_0x497a32, AddSuggestionResponse);
  }
  async ["get"](_0x5a7e07, attempt = 1) {
    const _0x14db5e = new GetSuggestionMessage(_0x5a7e07, this["_documentId"]);
    try {
      const _0x124347 = await this["_sendRequest"](GetSuggestionMessage["TYPE"], _0x14db5e);
      return MessagesCompressor["decode"](_0x124347, GetSuggestionResponse);
    } catch (_0x3b433b) {
      if ("CKEditorCloudServicesServerError" === _0x3b433b["name"] && "404" === _0x3b433b["code"] && attempt < 5) return await (time = 100 * attempt, new Promise((_0x403d42) => {
        setTimeout(_0x403d42, time);
      })), this["get"](_0x5a7e07, attempt + 1);
      if ("CKEditorCloudServicesServerError" === _0x3b433b["name"]) throw _0x3b433b;
      throw CKEditorCloudServicesServerError["fromPublicError"](_0x3b433b);
    }
    var time;
  }
  async ["getAll"]() {
    const _0x1484a0 = new GetAllSuggestionsMessage(this["_documentId"]), _0x2625da = await this["_sendRequest"](GetAllSuggestionsMessage["TYPE"], _0x1484a0), { suggestions } = MessagesCompressor["decode"](_0x2625da, GetAllSuggestionResponse);
    return suggestions;
  }
  async ["update"](_0x4a5776, _0x3327f3 = {}) {
    const { hasComments, state, attributes } = _0x3327f3, isHasCommentsUpdated = void 0 !== hasComments, _0x55bf75 = new UpdateSuggestionMessage(_0x4a5776, this["_documentId"], hasComments, isHasCommentsUpdated, state, attributes);
    await this["_sendRequest"](UpdateSuggestionMessage["TYPE"], _0x55bf75);
  }
  async ["batchUpdateState"](_0x27b5fc) {
    const _0x5935cc = new BatchUpdateSuggestionsStateMessage(_0x27b5fc["ids"], this["_documentId"], _0x27b5fc["state"]);
    await this["_sendRequest"](BatchUpdateSuggestionsStateMessage["TYPE"], _0x5935cc);
  }
  ["_connectToChannel"](wsGateway, _0x25949b) {
    this["_channel"] = wsGateway["_getChannel"](_TrackChangesService["_SERVICE"], _0x25949b), this["_channel"] && this["listenTo"](this["_channel"], this["_channel"]["getEventName"](UpdateSuggestionMessage["TYPE"]), (event, data) => {
      const updateSuggestionMessage = MessagesCompressor["decode"](data, UpdateSuggestionMessage);
      this["fire"]("suggestionUpdated", updateSuggestionMessage);
    });
  }
  ["_onWsGatewayStateChange"](_0x4e9751) {
    _0x4e9751 === WEB_SOCKET_GATEWAY_STATES["DISCONNECTED"] && this["disconnect"]();
  }
  ["_sendRequest"](method, _0x5363ef) {
    if (!this["_wsGateway"] || !this["_isConnected"]) throw new ServiceNotConnectedError("Track Changes", this);
    return this["_wsGateway"]["_sendRequest"](10, method, MessagesCompressor["encode"](_0x5363ef));
  }
};
__publicField(_TrackChangesService, "_SERVICE", 10);
var TrackChangesService = _TrackChangesService;
var _SessionsConnectResponse = class _SessionsConnectResponse extends Message {
  constructor(_0x1d64ab, sockets = []) {
    super();
    __publicField(this, "channel");
    __publicField(this, "sockets");
    this["channel"] = _0x1d64ab, this["sockets"] = sockets;
  }
  ["toJSON"]() {
    return { "channel": this["channel"], "sockets": this["sockets"]["map"]((socket) => ({ "user": socket["userId"], "session": socket["id"], "role": socket["role"], "permissions": socket["permissions"] })) };
  }
  static ["fromJSON"](data) {
    return new _SessionsConnectResponse(data["channel"], data["sockets"]["map"]((socket) => ({ "id": socket["session"], "userId": socket["user"], "role": socket["role"], "permissions": socket["permissions"] })));
  }
};
__publicField(_SessionsConnectResponse, "DESCRIPTOR_NAME", "SessionsConnectResponse");
__publicField(_SessionsConnectResponse, "DESCRIPTOR", { "fields": { "channel": { "type": "string", "id": 1 }, "sockets": { "rule": "repeated", "type": "SessionsSocketDescriptor", "id": 2 } } });
var SessionsConnectResponse = _SessionsConnectResponse;
var _SessionsConnectMessage = class _SessionsConnectMessage extends Message {
  constructor(_0x3d4161, _0x43d5e0) {
    super();
    __publicField(this, "id");
    __publicField(this, "sessionType");
    this["id"] = _0x3d4161, this["sessionType"] = _0x43d5e0;
  }
  ["toJSON"]() {
    return { "id": this["id"], "sessionType": this["sessionType"] };
  }
  static ["fromJSON"](data) {
    return new _SessionsConnectMessage(data["id"], data["sessionType"]);
  }
};
__publicField(_SessionsConnectMessage, "TYPE", "31");
__publicField(_SessionsConnectMessage, "READABLE_TYPE_NAME", "getConnectedSockets");
__publicField(_SessionsConnectMessage, "DESCRIPTOR_NAME", "SessionsConnectMessage");
__publicField(_SessionsConnectMessage, "DESCRIPTOR", { "fields": { "id": { "type": "string", "id": 1 }, "sessionType": { "type": "uint32", "id": 2 } } });
var SessionsConnectMessage = _SessionsConnectMessage;
var _SocketConnectMessage = class _SocketConnectMessage extends Message {
  constructor(_0x16cf2c, _0x17dec8, _0x443c06, _0x4dcd09) {
    super();
    __publicField(this, "id");
    __publicField(this, "userId");
    __publicField(this, "role");
    __publicField(this, "permissions");
    this["id"] = _0x16cf2c, this["userId"] = _0x17dec8, this["role"] = _0x443c06, this["permissions"] = _0x4dcd09;
  }
  ["toJSON"]() {
    return { "id": this["id"], "userId": this["userId"] ?? void 0, "role": this["role"] ?? void 0, "permissions": this["permissions"] ?? void 0 };
  }
  static ["fromJSON"](data) {
    return new _SocketConnectMessage(data["id"], data["userId"], data["role"], data["permissions"]);
  }
};
__publicField(_SocketConnectMessage, "TYPE", "32");
__publicField(_SocketConnectMessage, "READABLE_TYPE_NAME", "connectSocket");
__publicField(_SocketConnectMessage, "DESCRIPTOR_NAME", "SocketConnectMessage");
__publicField(_SocketConnectMessage, "DESCRIPTOR", { "fields": { "id": { "type": "string", "id": 1 }, "userId": { "type": "string", "id": 2 }, "role": { "type": "string", "id": 3 }, "permissions": { "rule": "repeated", "type": "string", "id": 4 } } });
var SocketConnectMessage = _SocketConnectMessage;
var _SocketDisconnectMessage = class _SocketDisconnectMessage extends Message {
  constructor(_0x409ba2) {
    super();
    __publicField(this, "id");
    this["id"] = _0x409ba2;
  }
  ["toJSON"]() {
    return { "id": this["id"] };
  }
  static ["fromJSON"](data) {
    return new _SocketDisconnectMessage(data["id"]);
  }
};
__publicField(_SocketDisconnectMessage, "TYPE", "33");
__publicField(_SocketDisconnectMessage, "READABLE_TYPE_NAME", "disconnectSocket");
__publicField(_SocketDisconnectMessage, "DESCRIPTOR_NAME", "SocketDisconnectMessage");
__publicField(_SocketDisconnectMessage, "DESCRIPTOR", { "fields": { "id": { "type": "string", "id": 1 } } });
var SocketDisconnectMessage = _SocketDisconnectMessage;
var SessionCollection = class extends Collection {
  constructor(_0x7188e2, _0x35f907) {
    super({ "idProperty": "id" });
    __publicField(this, "_id");
    __publicField(this, "_sessionType");
    __publicField(this, "_handlers");
    __publicField(this, "_channel");
    __publicField(this, "_wsGateway");
    __publicField(this, "_connected");
    __publicField(this, "_eventsQueue");
    __publicField(this, "_isRunning");
    this["_id"] = _0x7188e2, this["_sessionType"] = _0x35f907, this["_handlers"] = /* @__PURE__ */ new Map(), this["_eventsQueue"] = [], this["_isRunning"] = false;
  }
  async ["connect"](wsGateway) {
    this["_wsGateway"] = wsGateway, this["stopListening"](wsGateway, "change:state");
    const _0xe46bf = new SessionsConnectMessage(this["_id"], this["_sessionType"]);
    let sessionsConnectResponse;
    try {
      const _0x2a3956 = await this["_wsGateway"]["_sendRequest"](3, SessionsConnectMessage["TYPE"], MessagesCompressor["encode"](_0xe46bf));
      sessionsConnectResponse = MessagesCompressor["decode"](_0x2a3956, SessionsConnectResponse);
    } catch (_0x4b84dd) {
      sessionsConnectResponse = new SessionsConnectResponse(this["_id"], []);
    }
    this["_connectToChannel"](this["_wsGateway"], sessionsConnectResponse["channel"], this["_sessionType"]);
    const _0x363968 = await async function(wsGateway2, _0x12e9a4) {
      const _0x2f5e4b = _0x12e9a4["map"]((socket) => socket["userId"]), _0x23ad91 = _0x2f5e4b["length"] ? await User["getMany"](wsGateway2, _0x2f5e4b) : [];
      return _0x12e9a4["map"]((socket) => {
        const item = { "id": socket["id"], "role": socket["role"], "permissions": socket["permissions"] };
        return item["user"] = socket["userId"] && _0x23ad91["find"]((_0xd5409d) => _0xd5409d["id"] === socket["userId"]) || new User(), item;
      });
    }(this["_wsGateway"], sessionsConnectResponse["sockets"]);
    for (const _0x1361a1 of _0x363968) super["add"](_0x1361a1);
    this["_connected"] = true, this["fire"]("connected"), this["listenTo"](this["_wsGateway"], "change:state", (_0x44d229, _0x224899, _0x17777a) => this["_onWsGatewayStateChange"](_0x17777a), { "priority": WebSocketGateway["_CHANGE_STATE_EVENT_PRIORITY"] }), await this["_runQueue"]();
  }
  ["disconnect"](_0x22413a = true) {
    if (this["_connected"]) {
      for (this["_connected"] = false, this["_eventsQueue"] = []; this["length"]; ) super["remove"](0);
      this["_channel"] && (this["stopListening"](this["_channel"]), this["_channel"] = void 0), this["_wsGateway"] && _0x22413a && (this["stopListening"](this["_wsGateway"]), this["_wsGateway"] = void 0), this["fire"]("disconnected"), _0x22413a && this["stopListening"]();
    }
  }
  ["add"](_0x1ee82f, _0xa0f8b8) {
    throw new TypeError("The collection is read-only.");
  }
  ["remove"](_0x30b1b8) {
    throw new TypeError("The collection is read-only.");
  }
  ["_connectToChannel"](wsGateway, _0x2e50db, _0x5e1349) {
    this["_channel"] = wsGateway["_getChannel"](_0x5e1349, _0x2e50db), this["_channel"] && (this["_addHandler"](this["_channel"], SocketConnectMessage["TYPE"], async (data) => {
      const socketConnectMessage = MessagesCompressor["decode"](data, SocketConnectMessage);
      if (-1 === this["getIndex"](socketConnectMessage["id"])) {
        const socket = { "id": socketConnectMessage["id"], "role": socketConnectMessage["role"], "permissions": socketConnectMessage["permissions"] };
        socketConnectMessage["userId"] && (socket["user"] = await User["get"](wsGateway, socketConnectMessage["userId"])), super["add"](socket);
      }
    }), this["_addHandler"](this["_channel"], SocketDisconnectMessage["TYPE"], (data) => {
      const socketDisconnectMessage = MessagesCompressor["decode"](data, SocketDisconnectMessage);
      -1 !== this["getIndex"](socketDisconnectMessage["id"]) && super["remove"](socketDisconnectMessage["id"]);
    }));
  }
  async ["_onWsGatewayStateChange"](state) {
    state === WebSocketGateway["STATE_DISCONNECTED"] && this["disconnect"](false), state === WebSocketGateway["STATE_CONNECTED"] && await this["connect"](this["_wsGateway"]);
  }
  async ["_runQueue"]() {
    if (this["_isRunning"] || !this["_connected"]) return;
    let event;
    for (this["_isRunning"] = true; event = this["_eventsQueue"]["shift"](); ) {
      const _0x15147e = this["_handlers"]["get"](event["eventName"]);
      _0x15147e && await _0x15147e(event["data"]);
    }
    this["_isRunning"] = false;
  }
  ["_addHandler"](_0x5c6cb3, eventType, _0x35b744) {
    const eventName = _0x5c6cb3["getEventName"](eventType, true);
    this["listenTo"](_0x5c6cb3, eventName, async (event, data) => {
      const _0x510b06 = event["name"];
      this["_eventsQueue"]["push"]({ "eventName": _0x510b06, "data": data }), await this["_runQueue"]();
    }), this["_handlers"]["set"](eventName, _0x35b744);
  }
};
var Sessions = class {
  static async ["getConnectedSessions"](wsGateway, _0x33450b, _0x127d31) {
    const sessionCollection = new SessionCollection(_0x33450b, _0x127d31);
    return await sessionCollection["connect"](wsGateway), sessionCollection;
  }
};
var _CollaborativeEditingConnectMessage = class _CollaborativeEditingConnectMessage extends Message {
  constructor(_0x2909c1, _0x8bba33, types, _0x3e4bda, lastOperationId = "") {
    super();
    __publicField(this, "id");
    __publicField(this, "buffers");
    __publicField(this, "types");
    __publicField(this, "bundleVersion");
    __publicField(this, "lastOperationId");
    this["id"] = _0x2909c1, this["buffers"] = _0x8bba33, this["types"] = types, this["bundleVersion"] = _0x3e4bda, this["lastOperationId"] = lastOperationId;
  }
  ["toJSON"]() {
    return { "id": this["id"], "buffers": this["buffers"], "types": this["types"], "bundleVersion": this["bundleVersion"], "lastOperationId": this["lastOperationId"] };
  }
  static ["fromJSON"](data) {
    return new _CollaborativeEditingConnectMessage(data["id"], data["buffers"], data["types"], data["bundleVersion"], data["lastOperationId"]);
  }
};
__publicField(_CollaborativeEditingConnectMessage, "TYPE", "11");
__publicField(_CollaborativeEditingConnectMessage, "READABLE_TYPE_NAME", "connectToDocument");
__publicField(_CollaborativeEditingConnectMessage, "DESCRIPTOR_NAME", "CollaborativeEditingConnectMessage");
__publicField(_CollaborativeEditingConnectMessage, "DESCRIPTOR", { "fields": { "id": { "type": "string", "id": 1 }, "bundleVersion": { "type": "string", "id": 2 }, "buffers": { "rule": "repeated", "type": "bytes", "id": 3 }, "types": { "rule": "repeated", "type": "uint32", "id": 4 }, "lastOperationId": { "type": "string", "id": 5 } } });
var CollaborativeEditingConnectMessage = _CollaborativeEditingConnectMessage;
var OperationMetadataHelpers = class {
  static ["prepareMetadataForOperations"](types, metadata) {
    if (!(types && types["length"] && metadata && metadata["length"])) return [];
    const result = [];
    let _0x1a8096 = 0;
    for (const type of types) if (0 !== type) {
      if (!metadata[_0x1a8096]) throw new Error("Missing metadata for a operation");
      result["push"](metadata[_0x1a8096]), _0x1a8096++;
    } else result["push"](result[result["length"] - 1]);
    return result;
  }
  static ["removeUnnecessaryMetadata"](types, metadata) {
    if (!(types && types["length"] && metadata && metadata["length"])) return [];
    const result = [];
    for (let _0x202b5b = 0; _0x202b5b < types["length"]; _0x202b5b++) if (0 !== types[_0x202b5b]) {
      if (!metadata[_0x202b5b]) throw new Error("Missing metadata for a operation");
      result["push"](metadata[_0x202b5b]);
    }
    return result;
  }
};
var OperationMetadataDescriptor = class extends Descriptor {
  static ["toJSON"]({ createdAt, ...metadata }) {
    const parsedMetadata = { ...metadata };
    return (createdAt == null ? void 0 : createdAt["toISOString"]) && (parsedMetadata["createdAt"] = createdAt["toISOString"]()), parsedMetadata;
  }
  static ["fromJSON"]({ createdAt, ...metadata }) {
    const parsedMetadata = { ...metadata };
    return createdAt && (parsedMetadata["createdAt"] = new Date(createdAt)), parsedMetadata;
  }
};
__publicField(OperationMetadataDescriptor, "DESCRIPTOR_NAME", "OperationMetadataDescriptor");
__publicField(OperationMetadataDescriptor, "DESCRIPTOR", /* @__PURE__ */ (() => ({ "fields": { "userId": { "type": "string", "id": 1 }, "type": { "type": "string", "id": 2 }, "createdAt": { "type": "string", "id": 3 } } }))());
var _CollaborativeEditingUpdateMessage = class _CollaborativeEditingUpdateMessage extends Message {
  constructor(_0x34a5f0, _0xe2d7a8, types, _0x2a4717, metadata = [], lastOperationId = "") {
    super();
    __publicField(this, "id");
    __publicField(this, "buffers");
    __publicField(this, "types");
    __publicField(this, "baseVersion");
    __publicField(this, "metadata");
    __publicField(this, "lastOperationId");
    this["id"] = _0x34a5f0, this["buffers"] = _0xe2d7a8, this["types"] = types, this["baseVersion"] = _0x2a4717, this["metadata"] = metadata, this["lastOperationId"] = lastOperationId;
  }
  get ["data"]() {
    return { "buffers": this["buffers"], "types": this["types"], "baseVersion": this["baseVersion"], "lastOperationId": this["lastOperationId"] };
  }
  ["toJSON"]() {
    return { "id": this["id"], "buffers": this["buffers"], "types": this["types"], "baseVersion": this["baseVersion"], "metadata": OperationMetadataHelpers["removeUnnecessaryMetadata"](this["types"], this["metadata"])["map"](OperationMetadataDescriptor["toJSON"]), "lastOperationId": this["lastOperationId"] };
  }
  static ["fromJSON"](data) {
    return new _CollaborativeEditingUpdateMessage(data["id"], data["buffers"], data["types"], data["baseVersion"], OperationMetadataHelpers["prepareMetadataForOperations"](data["types"], data["metadata"])["map"](OperationMetadataDescriptor["fromJSON"]), data["lastOperationId"]);
  }
};
__publicField(_CollaborativeEditingUpdateMessage, "TYPE", "13");
__publicField(_CollaborativeEditingUpdateMessage, "READABLE_TYPE_NAME", "updateDocument");
__publicField(_CollaborativeEditingUpdateMessage, "DESCRIPTOR_NAME", "CollaborativeEditingUpdateMessage");
__publicField(_CollaborativeEditingUpdateMessage, "DESCRIPTOR", { "fields": { "id": { "type": "string", "id": 1 }, "baseVersion": { "type": "uint32", "id": 2 }, "buffers": { "rule": "repeated", "type": "bytes", "id": 3 }, "types": { "rule": "repeated", "type": "uint32", "id": 4 }, "metadata": { "rule": "repeated", "type": "OperationMetadataDescriptor", "id": 6 }, "lastOperationId": { "type": "string", "id": 7 } } });
var CollaborativeEditingUpdateMessage = _CollaborativeEditingUpdateMessage;
var _CollaborativeEditingReconnectMessage = class _CollaborativeEditingReconnectMessage extends Message {
  constructor(_0x131ae6, lastKnowVersion, _0x24c623) {
    super();
    __publicField(this, "id");
    __publicField(this, "lastKnowVersion");
    __publicField(this, "bundleVersion");
    this["id"] = _0x131ae6, this["lastKnowVersion"] = lastKnowVersion, this["bundleVersion"] = _0x24c623;
  }
  ["toJSON"]() {
    return { "id": this["id"], "bundleVersion": this["bundleVersion"], "lastKnowVersion": this["lastKnowVersion"] };
  }
  static ["fromJSON"](data) {
    return new _CollaborativeEditingReconnectMessage(data["id"], data["lastKnowVersion"], data["bundleVersion"]);
  }
};
__publicField(_CollaborativeEditingReconnectMessage, "TYPE", "12");
__publicField(_CollaborativeEditingReconnectMessage, "READABLE_TYPE_NAME", "reconnectToDocument");
__publicField(_CollaborativeEditingReconnectMessage, "DESCRIPTOR_NAME", "CollaborativeEditingReconnectMessage");
__publicField(_CollaborativeEditingReconnectMessage, "DESCRIPTOR", { "fields": { "id": { "type": "string", "id": 1 }, "bundleVersion": { "type": "string", "id": 2 }, "lastKnowVersion": { "type": "uint32", "id": 3 } } });
var CollaborativeEditingReconnectMessage = _CollaborativeEditingReconnectMessage;
var _CollaborativeEditingResponse = class _CollaborativeEditingResponse extends Message {
  constructor(_0x269b5a, _0x37093c = [], types = [], metadata = [], lastOperationId = "", lastOperationAcceptedAt = null) {
    super();
    __publicField(this, "version");
    __publicField(this, "buffers");
    __publicField(this, "types");
    __publicField(this, "metadata");
    __publicField(this, "lastOperationId");
    __publicField(this, "lastOperationAcceptedAt");
    this["version"] = _0x269b5a, this["buffers"] = _0x37093c, this["types"] = types, this["metadata"] = metadata, this["lastOperationId"] = lastOperationId, this["lastOperationAcceptedAt"] = lastOperationAcceptedAt;
  }
  get ["data"]() {
    return { "buffers": this["buffers"], "types": this["types"], "baseVersion": this["version"] - this["types"]["length"], "lastOperationId": this["lastOperationId"], "lastOperationAcceptedAt": this["lastOperationAcceptedAt"] };
  }
  get ["wereChangesApplied"]() {
    var _a5;
    return !((_a5 = this["types"]) == null ? void 0 : _a5["length"]);
  }
  ["toJSON"]() {
    return { "version": this["version"], "buffers": this["buffers"], "types": this["types"], "metadata": OperationMetadataHelpers["removeUnnecessaryMetadata"](this["types"], this["metadata"])["map"](OperationMetadataDescriptor["toJSON"]), "lastOperationId": this["lastOperationId"], "lastOperationAcceptedAt": this["lastOperationAcceptedAt"] instanceof Date ? this["lastOperationAcceptedAt"]["toISOString"]() : this["lastOperationAcceptedAt"] };
  }
  static ["fromJSON"](data) {
    return new _CollaborativeEditingResponse(data["version"], data["buffers"], data["types"], OperationMetadataHelpers["prepareMetadataForOperations"](data["types"], data["metadata"])["map"](OperationMetadataDescriptor["fromJSON"]), data["lastOperationId"], data["lastOperationAcceptedAt"] ? new Date(data["lastOperationAcceptedAt"]) : null);
  }
  static ["create"](data) {
    return new _CollaborativeEditingResponse(data["version"], data["buffers"], data["types"], data["metadata"], data["lastOperationId"], data["lastOperationAcceptedAt"] ? new Date(data["lastOperationAcceptedAt"]) : null);
  }
};
__publicField(_CollaborativeEditingResponse, "DESCRIPTOR_NAME", "CollaborativeEditingResponse");
__publicField(_CollaborativeEditingResponse, "DESCRIPTOR", { "fields": { "version": { "type": "uint32", "id": 1 }, "buffers": { "rule": "repeated", "type": "bytes", "id": 2 }, "types": { "rule": "repeated", "type": "uint32", "id": 3 }, "metadata": { "rule": "repeated", "type": "OperationMetadataDescriptor", "id": 5 }, "lastOperationId": { "type": "string", "id": 6 }, "lastOperationAcceptedAt": { "type": "string", "id": 7 } } });
var CollaborativeEditingResponse = _CollaborativeEditingResponse;
var _CollaborativeEditingConnectResponse = class _CollaborativeEditingConnectResponse extends Message {
  constructor(_0x295e15, _0x3362a3, _0x4b2f9f = [], types = [], offset2 = 0, metadata = [], initData = null, _0x1073d5 = "", lastOperationId = "", sessionCreatedAt = null) {
    super();
    __publicField(this, "channel");
    __publicField(this, "version");
    __publicField(this, "buffers");
    __publicField(this, "types");
    __publicField(this, "offset");
    __publicField(this, "metadata");
    __publicField(this, "initData");
    __publicField(this, "sessionId");
    __publicField(this, "lastOperationId");
    __publicField(this, "sessionCreatedAt");
    this["channel"] = _0x295e15, this["version"] = _0x3362a3, this["buffers"] = _0x4b2f9f, this["types"] = types, this["offset"] = offset2, this["metadata"] = metadata, this["initData"] = initData, this["sessionId"] = _0x1073d5, this["lastOperationId"] = lastOperationId, this["sessionCreatedAt"] = sessionCreatedAt;
  }
  get ["data"]() {
    return { "buffers": this["buffers"], "types": this["types"], "baseVersion": this["version"] - this["types"]["length"], "lastOperationId": this["lastOperationId"], "sessionCreatedAt": this["sessionCreatedAt"] };
  }
  get ["wereChangesApplied"]() {
    var _a5;
    return !((_a5 = this["types"]) == null ? void 0 : _a5["length"]) && null === this["initData"];
  }
  ["toJSON"]() {
    return { "channel": this["channel"], "version": this["version"], "sessionId": this["sessionId"], "buffers": this["buffers"], "types": this["types"], "offset": this["offset"], "metadata": OperationMetadataHelpers["removeUnnecessaryMetadata"](this["types"], this["metadata"])["map"](OperationMetadataDescriptor["toJSON"]), "initData": this["initData"] ?? "", "isInitialized": "string" == typeof this["initData"], "lastOperationId": this["lastOperationId"], "sessionCreatedAt": this["sessionCreatedAt"] ? this["sessionCreatedAt"]["toISOString"]() : null };
  }
  static ["create"](_0x51d28a) {
    return new _CollaborativeEditingConnectResponse(_0x51d28a["channel"], _0x51d28a["version"], _0x51d28a["buffers"], _0x51d28a["types"], _0x51d28a["offset"], _0x51d28a["metadata"], _0x51d28a["initData"], _0x51d28a["sessionId"], _0x51d28a["lastOperationId"], _0x51d28a["sessionCreatedAt"]);
  }
  static ["fromJSON"](data) {
    let initData = null;
    return true === data["isInitialized"] ? initData = data["initData"] ?? "" : "boolean" != typeof data["isInitialized"] && data["initData"] && (initData = data["initData"]), _CollaborativeEditingConnectResponse["create"]({ "channel": data["channel"], "version": data["version"], "buffers": data["buffers"], "types": data["types"], "offset": data["offset"], "metadata": OperationMetadataHelpers["prepareMetadataForOperations"](data["types"], data["metadata"])["map"](OperationMetadataDescriptor["fromJSON"]), "initData": initData, "sessionId": data["sessionId"], "lastOperationId": data["lastOperationId"], "sessionCreatedAt": data["sessionCreatedAt"] ? new Date(data["sessionCreatedAt"]) : null });
  }
};
__publicField(_CollaborativeEditingConnectResponse, "DESCRIPTOR_NAME", "CollaborativeEditingConnectResponse");
__publicField(_CollaborativeEditingConnectResponse, "DESCRIPTOR", (() => ({ "fields": { "channel": { "type": "string", "id": 1 }, "offset": { "type": "uint32", "id": 2 }, "version": { "type": "uint32", "id": 3 }, "buffers": { "rule": "repeated", "type": "bytes", "id": 4 }, "types": { "rule": "repeated", "type": "uint32", "id": 5 }, "metadata": { "rule": "repeated", "type": OperationMetadataDescriptor["DESCRIPTOR_NAME"], "id": 7 }, "initData": { "type": "string", "id": 8 }, "isInitialized": { "type": "bool", "id": 9 }, "sessionId": { "type": "string", "id": 10 }, "lastOperationId": { "type": "string", "id": 11 }, "sessionCreatedAt": { "type": "string", "id": 12 } } }))());
var CollaborativeEditingConnectResponse = _CollaborativeEditingConnectResponse;
var _GetDocumentDetailsResponse = class _GetDocumentDetailsResponse extends Message {
  constructor(lastDocumentSession, currentDocumentSession) {
    super();
    __publicField(this, "lastDocumentSession");
    __publicField(this, "currentDocumentSession");
    this["lastDocumentSession"] = lastDocumentSession, this["currentDocumentSession"] = currentDocumentSession;
  }
  get ["data"]() {
    var _a5, _b, _c2, _d, _e2;
    return { "lastDocumentSessionId": (_a5 = this["lastDocumentSession"]) == null ? void 0 : _a5["id"], "lastDocumentSessionOperationId": (_b = this["lastDocumentSession"]) == null ? void 0 : _b["lastOperationId"], "currentDocumentSessionId": (_c2 = this["currentDocumentSession"]) == null ? void 0 : _c2["id"], "currentDocumentSessionVersion": (_d = this["currentDocumentSession"]) == null ? void 0 : _d["version"], "currentDocumentSessionOperationId": (_e2 = this["currentDocumentSession"]) == null ? void 0 : _e2["lastOperationId"] };
  }
  ["toJSON"]() {
    var _a5, _b, _c2, _d, _e2;
    return { "lastDocumentSessionId": (_a5 = this["lastDocumentSession"]) == null ? void 0 : _a5["id"], "lastDocumentSessionOperationId": (_b = this["lastDocumentSession"]) == null ? void 0 : _b["lastOperationId"], "currentDocumentSessionId": (_c2 = this["currentDocumentSession"]) == null ? void 0 : _c2["id"], "currentDocumentSessionVersion": (_d = this["currentDocumentSession"]) == null ? void 0 : _d["version"], "currentDocumentSessionOperationId": (_e2 = this["currentDocumentSession"]) == null ? void 0 : _e2["lastOperationId"] };
  }
  static ["fromJSON"](data) {
    const lastDocumentSession = data["lastDocumentSessionId"] ? { "id": data["lastDocumentSessionId"], "lastOperationId": data["lastDocumentSessionOperationId"] } : void 0, currentDocumentSession = data["currentDocumentSessionId"] ? { "lastOperationId": data["currentDocumentSessionOperationId"], "version": data["currentDocumentSessionVersion"], "id": data["currentDocumentSessionId"] } : void 0;
    return new _GetDocumentDetailsResponse(lastDocumentSession, currentDocumentSession);
  }
};
__publicField(_GetDocumentDetailsResponse, "DESCRIPTOR_NAME", "GetDocumentDetailsResponse");
__publicField(_GetDocumentDetailsResponse, "DESCRIPTOR", { "fields": { "lastDocumentSessionId": { "type": "string", "id": 1 }, "lastDocumentSessionOperationId": { "type": "string", "id": 2 }, "currentDocumentSessionId": { "type": "string", "id": 3 }, "currentDocumentSessionVersion": { "type": "uint32", "id": 4 }, "currentDocumentSessionOperationId": { "type": "string", "id": 5 } } });
var GetDocumentDetailsResponse = _GetDocumentDetailsResponse;
var _GetDocumentDetailsMessage = class _GetDocumentDetailsMessage extends Message {
  constructor(documentId) {
    super();
    __publicField(this, "documentId");
    this["documentId"] = documentId;
  }
  get ["data"]() {
    return { "documentId": this["documentId"] };
  }
  ["toJSON"]() {
    return { "documentId": this["documentId"] };
  }
  static ["fromJSON"](data) {
    return new _GetDocumentDetailsMessage(data["documentId"]);
  }
};
__publicField(_GetDocumentDetailsMessage, "TYPE", "14");
__publicField(_GetDocumentDetailsMessage, "READABLE_TYPE_NAME", "getDocumentDetails");
__publicField(_GetDocumentDetailsMessage, "DESCRIPTOR_NAME", "GetDocumentDetailsMessage");
__publicField(_GetDocumentDetailsMessage, "DESCRIPTOR", { "fields": { "documentId": { "type": "string", "id": 1 }, "environmentId": { "type": "string", "id": 2 } } });
var GetDocumentDetailsMessage = _GetDocumentDetailsMessage;
var CollaborativeEditingService = class extends EmitterMixin() {
  constructor(_0x59f6a1, _0x2014ec) {
    super();
    __publicField(this, "_bundleVersion");
    __publicField(this, "_id");
    __publicField(this, "_isConnected");
    __publicField(this, "_wsGateway");
    __publicField(this, "_channel");
    __publicField(this, "_connectedSessions");
    if (!_0x59f6a1) throw new TypeError('Param "bundleVersion" must be provided.');
    this["_id"] = _0x2014ec ?? v4_default(), this["_isConnected"] = false, this["_bundleVersion"] = _0x59f6a1;
  }
  ["getId"]() {
    return this["_id"];
  }
  ["isConnected"]() {
    return this["_isConnected"];
  }
  ["connect"](wsGateway, data = { "buffers": [], "types": [] }, lastOperationId) {
    const _0x369a7d = new CollaborativeEditingConnectMessage(this["getId"](), data["buffers"], data["types"], this["_bundleVersion"], lastOperationId);
    return this["_connect"](wsGateway, _0x369a7d);
  }
  ["reconnect"](wsGateway, lastKnowVersion) {
    if (this["isConnected"]()) throw new CKEditorCloudServicesError("Cannot reconnect to already connected service.", wsGateway);
    return this["_connect"](wsGateway, new CollaborativeEditingReconnectMessage(this["getId"](), lastKnowVersion, this["_bundleVersion"]));
  }
  ["disconnect"]() {
    this["_isConnected"] && (this["_isConnected"] = false, this["_wsGateway"] && (this["stopListening"](this["_wsGateway"]), this["_wsGateway"] = void 0), this["_channel"] && (this["stopListening"](this["_channel"]), this["_channel"] = void 0), this["_connectedSessions"] && (this["_connectedSessions"]["disconnect"](), this["_connectedSessions"] = void 0), this["fire"]("disconnected"), this["stopListening"]());
  }
  async ["getDocumentDetails"]() {
    const _0x42bfbe = new GetDocumentDetailsMessage(this["getId"]());
    if (!this["_wsGateway"]) throw new ServiceNotConnectedError("Collaborative Editing", this);
    const _0x4de5b7 = await this["_wsGateway"]["_sendRequest"](1, GetDocumentDetailsMessage["TYPE"], MessagesCompressor["encode"](_0x42bfbe));
    return MessagesCompressor["decode"](_0x4de5b7, GetDocumentDetailsResponse);
  }
  async ["sendOperations"](data, _0x1822b8, lastOperationId) {
    if (!data || !data["types"] || !data["types"]["length"]) throw new CKEditorCloudServicesError("Cannot send empty update.", this["_wsGateway"]);
    const _0x1c4d6f = "number" == typeof _0x1822b8 ? _0x1822b8 : parseInt(_0x1822b8);
    if (!Number["isInteger"](_0x1c4d6f) || _0x1c4d6f < 0) throw new CKEditorCloudServicesError("Base version not provided.", this["_wsGateway"]);
    const _0x1c8346 = new CollaborativeEditingUpdateMessage(this["getId"](), data["buffers"], data["types"], _0x1c4d6f, [], lastOperationId);
    if (!this["_wsGateway"] || !this["_isConnected"]) throw new ServiceNotConnectedError("Collaborative Editing", this);
    const _0x2d5892 = await this["_wsGateway"]["_sendRequest"](1, CollaborativeEditingUpdateMessage["TYPE"], MessagesCompressor["encode"](_0x1c8346));
    return MessagesCompressor["decode"](_0x2d5892, CollaborativeEditingResponse);
  }
  async ["getConnectedSessions"]() {
    if (!this["_isConnected"]) throw new ServiceNotConnectedError("Collaborative Editing", this);
    return this["_connectedSessions"] || (this["_connectedSessions"] = await Sessions["getConnectedSessions"](this["_wsGateway"], this["_id"], 1)), this["_connectedSessions"];
  }
  static ["getConnectedSessions"](wsGateway, _0x3566fd) {
    return Sessions["getConnectedSessions"](wsGateway, _0x3566fd, 1);
  }
  async ["_connect"](wsGateway, _0x9640c2) {
    if (this["isConnected"]()) return;
    if (wsGateway["state"] !== WebSocketGateway["STATE_CONNECTED"]) throw new CKEditorCloudServicesError("WebSocket Gateway is not connected.", wsGateway);
    this["_wsGateway"] = wsGateway, this["stopListening"](wsGateway, "change:state");
    const _0x8a576f = await wsGateway["_sendRequest"](1, _0x9640c2["constructor"]["TYPE"], MessagesCompressor["encode"](_0x9640c2)), collaborativeEditingConnectResponse = MessagesCompressor["decode"](_0x8a576f, CollaborativeEditingConnectResponse);
    return this["listenTo"](wsGateway, "change:state", (_0x2986e1, _0x2741b2, _0x845204) => this["_onWsGatewayStateChange"](_0x845204), { "priority": WebSocketGateway["_CHANGE_STATE_EVENT_PRIORITY"] }), this["_connectToChannel"](wsGateway, collaborativeEditingConnectResponse["channel"]), this["_isConnected"] = true, this["fire"]("connected"), collaborativeEditingConnectResponse;
  }
  ["_connectToChannel"](wsGateway, _0x510bba) {
    this["_channel"] = wsGateway["_getChannel"](1, _0x510bba), this["listenTo"](this["_channel"], this["_channel"]["getEventName"](CollaborativeEditingUpdateMessage["TYPE"]), (event, data) => {
      const updateMessage = MessagesCompressor["decode"](data, CollaborativeEditingUpdateMessage);
      this["fire"]("operationsReceived", updateMessage["baseVersion"], updateMessage["data"], updateMessage["metadata"]);
    });
  }
  ["_onWsGatewayStateChange"](_0x599e66) {
    _0x599e66 === WebSocketGateway["STATE_DISCONNECTED"] && this["disconnect"]();
  }
};
__publicField(CollaborativeEditingService, "_SERVICE", 1);
var CommentDescriptor = class extends Descriptor {
  static ["toJSON"](comment) {
    var _a5;
    return { ...comment, "createdAt": (_a5 = comment["createdAt"]) == null ? void 0 : _a5["toISOString"](), "attributes": comment["attributes"] ? JSON["stringify"](comment["attributes"]) : null };
  }
  static ["fromJSON"](comment) {
    return { ...comment, "createdAt": new Date(comment["createdAt"]), "attributes": comment["attributes"] ? JSON["parse"](comment["attributes"]) : null };
  }
};
__publicField(CommentDescriptor, "DESCRIPTOR_NAME", "CommentDescriptor");
__publicField(CommentDescriptor, "DESCRIPTOR", { "fields": { "commentId": { "id": 1, "type": "string" }, "commentThreadId": { "id": 2, "type": "string" }, "userId": { "id": 3, "type": "string" }, "content": { "id": 4, "type": "string" }, "documentId": { "id": 5, "type": "string" }, "createdAt": { "id": 6, "type": "string" }, "attributes": { "id": 7, "type": "string" } } });
var CommentsThreadDescriptor = class extends Descriptor {
  static ["toJSON"](thread) {
    var _a5, _b, _c2, _d, _e2;
    return { ...thread, "createdAt": (_a5 = thread["createdAt"]) == null ? void 0 : _a5["toISOString"](), "deletedAt": (_b = thread["deletedAt"]) == null ? void 0 : _b["toISOString"](), "resolvedAt": (_c2 = thread["resolvedAt"]) == null ? void 0 : _c2["toISOString"](), "attributes": thread["attributes"] ? JSON["stringify"](thread["attributes"]) : null, "context": thread["context"] ? JSON["stringify"](thread["context"]) : thread["context"], "comments": (_d = thread["comments"]) == null ? void 0 : _d["map"](CommentDescriptor["toJSON"]), "unlinkedAt": (_e2 = thread["unlinkedAt"]) == null ? void 0 : _e2["toISOString"]() };
  }
  static ["fromJSON"](thread) {
    var _a5;
    return { ...thread, "createdAt": thread["createdAt"] ? new Date(thread["createdAt"]) : void 0, "deletedAt": thread["deletedAt"] ? new Date(thread["deletedAt"]) : void 0, "resolvedAt": thread["resolvedAt"] ? new Date(thread["resolvedAt"]) : void 0, "attributes": thread["attributes"] ? JSON["parse"](thread["attributes"]) : null, "context": thread["context"] ? JSON["parse"](thread["context"]) : void 0, "comments": (_a5 = thread["comments"]) == null ? void 0 : _a5["map"](CommentDescriptor["fromJSON"]), "unlinkedAt": thread["unlinkedAt"] ? new Date(thread["unlinkedAt"]) : void 0 };
  }
};
__publicField(CommentsThreadDescriptor, "DESCRIPTOR_NAME", "CommentsThreadDescriptor");
__publicField(CommentsThreadDescriptor, "DESCRIPTOR", { "fields": { "commentThreadId": { "type": "string", "id": 1 }, "comments": { "type": "CommentDescriptor", "rule": "repeated", "id": 2 }, "resolvedAt": { "type": "string", "id": 3 }, "resolvedBy": { "type": "string", "id": 4 }, "context": { "type": "string", "id": 5 }, "createdAt": { "type": "string", "id": 6 }, "deletedAt": { "type": "string", "id": 7 }, "attributes": { "type": "string", "id": 8 }, "unlinkedAt": { "type": "string", "id": 9 } } });
var _AddCommentMessage = class _AddCommentMessage extends Message {
  constructor(documentId, commentThreadId, content, commentId = "", createdAt, _0xd8c095 = "", attributes = null, commentThread) {
    super();
    __publicField(this, "documentId");
    __publicField(this, "commentThreadId");
    __publicField(this, "content");
    __publicField(this, "commentId");
    __publicField(this, "userId");
    __publicField(this, "attributes");
    __publicField(this, "commentThread");
    __publicField(this, "createdAt");
    this["documentId"] = documentId, this["commentThreadId"] = commentThreadId, this["content"] = content, this["commentId"] = commentId, this["userId"] = _0xd8c095, this["attributes"] = attributes, this["commentThread"] = commentThread, this["createdAt"] = createdAt ? new Date(createdAt) : "";
  }
  ["toJSON"]() {
    return { "commentThreadId": this["commentThreadId"], "content": this["content"], "documentId": this["documentId"], "commentId": this["commentId"], "createdAt": this["createdAt"] instanceof Date ? this["createdAt"]["toISOString"]() : this["createdAt"], "userId": this["userId"], "attributes": JSON["stringify"](this["attributes"]), "commentThread": this["commentThread"] ? CommentsThreadDescriptor["toJSON"](this["commentThread"]) : void 0 };
  }
  static ["fromJSON"](object) {
    return new _AddCommentMessage(object["documentId"], object["commentThreadId"], object["content"], object["commentId"] ? object["commentId"] : void 0, object["createdAt"] ? new Date(object["createdAt"]) : void 0, object["userId"] ? object["userId"] : void 0, object["attributes"] ? JSON["parse"](object["attributes"]) : {}, object["commentThread"] ? CommentsThreadDescriptor["fromJSON"](object["commentThread"]) : void 0);
  }
};
__publicField(_AddCommentMessage, "TYPE", "91");
__publicField(_AddCommentMessage, "READABLE_TYPE_NAME", "addComment");
__publicField(_AddCommentMessage, "DESCRIPTOR_NAME", "CommentsV2AddCommentMessage");
__publicField(_AddCommentMessage, "DESCRIPTOR", { "fields": { "commentThreadId": { "type": "string", "id": 1 }, "content": { "type": "string", "id": 2 }, "documentId": { "type": "string", "id": 3 }, "commentId": { "type": "string", "id": 4 }, "createdAt": { "type": "string", "id": 5 }, "userId": { "type": "string", "id": 6 }, "attributes": { "type": "string", "id": 7 }, "commentThread": { "type": "CommentsThreadDescriptor", "id": 8 } } });
var AddCommentMessage = _AddCommentMessage;
var _AddCommentResponse = class _AddCommentResponse extends Message {
  constructor(commentThreadId, commentId, createdAt) {
    super();
    __publicField(this, "commentThreadId");
    __publicField(this, "commentId");
    __publicField(this, "createdAt");
    this["commentThreadId"] = commentThreadId, this["commentId"] = commentId, this["createdAt"] = new Date(createdAt);
  }
  ["toJSON"]() {
    return { "commentThreadId": this["commentThreadId"], "commentId": this["commentId"], "createdAt": this["createdAt"]["toISOString"]() };
  }
  static ["fromJSON"](data) {
    return new _AddCommentResponse(data["commentThreadId"], data["commentId"], data["createdAt"]);
  }
};
__publicField(_AddCommentResponse, "DESCRIPTOR_NAME", "CommentsV2AddCommentResponse");
__publicField(_AddCommentResponse, "DESCRIPTOR", { "fields": { "commentThreadId": { "type": "string", "id": 1 }, "commentId": { "type": "string", "id": 2 }, "createdAt": { "type": "string", "id": 3 } } });
var AddCommentResponse = _AddCommentResponse;
var _ConnectMessage = class _ConnectMessage extends Message {
  constructor(documentId) {
    super();
    __publicField(this, "documentId");
    this["documentId"] = documentId;
  }
  ["toJSON"]() {
    return { "documentId": this["documentId"] };
  }
  static ["fromJSON"](object) {
    return new _ConnectMessage(object["documentId"]);
  }
};
__publicField(_ConnectMessage, "TYPE", "92");
__publicField(_ConnectMessage, "READABLE_TYPE_NAME", "connectToComment");
__publicField(_ConnectMessage, "DESCRIPTOR_NAME", "CommentsV2ConnectMessage");
__publicField(_ConnectMessage, "DESCRIPTOR", { "fields": { "documentId": { "type": "string", "id": 1 } } });
var ConnectMessage = _ConnectMessage;
var _ConnectResponse = class _ConnectResponse extends Message {
  constructor(_0x397c1f, _threads, _threadsV2) {
    super();
    __publicField(this, "channel");
    __publicField(this, "_threads");
    __publicField(this, "_threadsV2");
    __publicField(this, "threads");
    this["channel"] = _0x397c1f, this["_threads"] = _threads, this["_threadsV2"] = _threadsV2, this["threads"] = (_threadsV2 == null ? void 0 : _threadsV2["length"]) ? _threadsV2 : _threads;
  }
  ["toJSON"]() {
    var _a5, _b;
    return { "channel": this["channel"], "threads": (_a5 = this["_threads"]) == null ? void 0 : _a5["map"]((thread) => JSON["stringify"](thread)), "threadsV2": (_b = this["_threadsV2"]) == null ? void 0 : _b["map"](CommentsThreadDescriptor["toJSON"]) };
  }
  static ["fromJSON"](object) {
    var _a5, _b;
    return new _ConnectResponse(object["channel"], (_a5 = object["threads"]) == null ? void 0 : _a5["map"]((thread) => JSON["parse"](thread)), (_b = object["threadsV2"]) == null ? void 0 : _b["map"](CommentsThreadDescriptor["fromJSON"]));
  }
};
__publicField(_ConnectResponse, "DESCRIPTOR_NAME", "CommentsV2ConnectResponse");
__publicField(_ConnectResponse, "DESCRIPTOR", { "fields": { "channel": { "type": "string", "id": 1 }, "threads": { "type": "string", "rule": "repeated", "id": 2 }, "threadsV2": { "type": "CommentsThreadDescriptor", "rule": "repeated", "id": 3 } } });
var ConnectResponse = _ConnectResponse;
var _RemoveCommentMessage = class _RemoveCommentMessage extends Message {
  constructor(documentId, commentThreadId, commentId) {
    super();
    __publicField(this, "documentId");
    __publicField(this, "commentThreadId");
    __publicField(this, "commentId");
    this["documentId"] = documentId, this["commentThreadId"] = commentThreadId, this["commentId"] = commentId;
  }
  ["toJSON"]() {
    return { "documentId": this["documentId"], "commentThreadId": this["commentThreadId"], "commentId": this["commentId"] };
  }
  static ["fromJSON"](object) {
    return new _RemoveCommentMessage(object["documentId"], object["commentThreadId"], object["commentId"]);
  }
};
__publicField(_RemoveCommentMessage, "TYPE", "95");
__publicField(_RemoveCommentMessage, "READABLE_TYPE_NAME", "removeComment");
__publicField(_RemoveCommentMessage, "DESCRIPTOR_NAME", "CommentsV2RemoveCommentMessage");
__publicField(_RemoveCommentMessage, "DESCRIPTOR", { "fields": { "commentThreadId": { "type": "string", "id": 1 }, "commentId": { "type": "string", "id": 2 }, "documentId": { "type": "string", "id": 3 } } });
var RemoveCommentMessage = _RemoveCommentMessage;
var _RemoveCommentThreadMessage = class _RemoveCommentThreadMessage extends Message {
  constructor(documentId, commentThreadId) {
    super();
    __publicField(this, "documentId");
    __publicField(this, "commentThreadId");
    this["documentId"] = documentId, this["commentThreadId"] = commentThreadId;
  }
  ["toJSON"]() {
    return { "documentId": this["documentId"], "commentThreadId": this["commentThreadId"] };
  }
  static ["fromJSON"](object) {
    return new _RemoveCommentThreadMessage(object["documentId"], object["commentThreadId"]);
  }
};
__publicField(_RemoveCommentThreadMessage, "TYPE", "97");
__publicField(_RemoveCommentThreadMessage, "READABLE_TYPE_NAME", "removeCommentThread");
__publicField(_RemoveCommentThreadMessage, "DESCRIPTOR_NAME", "CommentsV2RemoveCommentThreadMessage");
__publicField(_RemoveCommentThreadMessage, "DESCRIPTOR", { "fields": { "commentThreadId": { "type": "string", "id": 1 }, "documentId": { "type": "string", "id": 2 } } });
var RemoveCommentThreadMessage = _RemoveCommentThreadMessage;
var _UpdateCommentMessage = class _UpdateCommentMessage extends Message {
  constructor(documentId, commentThreadId, commentId, content, attributes = null, isAttributesUpdated = false, commentThread) {
    super();
    __publicField(this, "documentId");
    __publicField(this, "commentThreadId");
    __publicField(this, "commentId");
    __publicField(this, "content");
    __publicField(this, "attributes");
    __publicField(this, "isAttributesUpdated");
    __publicField(this, "commentThread");
    this["documentId"] = documentId, this["commentThreadId"] = commentThreadId, this["commentId"] = commentId, this["content"] = content, this["attributes"] = attributes, this["isAttributesUpdated"] = isAttributesUpdated, this["commentThread"] = commentThread;
  }
  ["toJSON"]() {
    return { "documentId": this["documentId"], "commentThreadId": this["commentThreadId"], "commentId": this["commentId"], "content": this["content"], "attributes": this["attributes"] ? JSON["stringify"](this["attributes"]) : null, "isAttributesUpdated": this["isAttributesUpdated"], "commentThread": this["commentThread"] ? CommentsThreadDescriptor["toJSON"](this["commentThread"]) : void 0 };
  }
  static ["fromJSON"](object) {
    return new _UpdateCommentMessage(object["documentId"], object["commentThreadId"], object["commentId"], object["content"], object["attributes"] ? JSON["parse"](object["attributes"]) : null, object["isAttributesUpdated"], object["commentThread"] ? CommentsThreadDescriptor["fromJSON"](object["commentThread"]) : void 0);
  }
};
__publicField(_UpdateCommentMessage, "TYPE", "96");
__publicField(_UpdateCommentMessage, "READABLE_TYPE_NAME", "updateComment");
__publicField(_UpdateCommentMessage, "DESCRIPTOR_NAME", "CommentsV2UpdateCommentMessage");
__publicField(_UpdateCommentMessage, "DESCRIPTOR", { "fields": { "commentThreadId": { "type": "string", "id": 1 }, "commentId": { "type": "string", "id": 2 }, "content": { "type": "string", "id": 3 }, "documentId": { "type": "string", "id": 4 }, "attributes": { "type": "string", "id": 5 }, "isAttributesUpdated": { "type": "bool", "id": 6 }, "commentThread": { "type": "CommentsThreadDescriptor", "id": 7 } } });
var UpdateCommentMessage = _UpdateCommentMessage;
var _GetCommentThreadMessage = class _GetCommentThreadMessage extends Message {
  constructor(commentThreadId, documentId) {
    super();
    __publicField(this, "commentThreadId");
    __publicField(this, "documentId");
    this["commentThreadId"] = commentThreadId, this["documentId"] = documentId;
  }
  ["toJSON"]() {
    return { "commentThreadId": this["commentThreadId"], "documentId": this["documentId"] };
  }
  static ["fromJSON"](object) {
    return new _GetCommentThreadMessage(object["commentThreadId"], object["documentId"]);
  }
};
__publicField(_GetCommentThreadMessage, "TYPE", "93");
__publicField(_GetCommentThreadMessage, "READABLE_TYPE_NAME", "getComment");
__publicField(_GetCommentThreadMessage, "DESCRIPTOR_NAME", "CommentsV2GetCommentThreadMessage");
__publicField(_GetCommentThreadMessage, "DESCRIPTOR", { "fields": { "commentThreadId": { "type": "string", "id": 1 }, "documentId": { "type": "string", "id": 2 } } });
var GetCommentThreadMessage = _GetCommentThreadMessage;
var _GetCommentThreadResponse = class _GetCommentThreadResponse extends Message {
  constructor(commentThreadId, _comments, _commentsV2, attributes, _0x24b87b, context, createdAt, deletedAt, resolvedAt, unlinkedAt) {
    super();
    __publicField(this, "commentThreadId");
    __publicField(this, "_comments");
    __publicField(this, "_commentsV2");
    __publicField(this, "resolvedBy");
    __publicField(this, "comments");
    __publicField(this, "createdAt");
    __publicField(this, "deletedAt");
    __publicField(this, "resolvedAt");
    __publicField(this, "attributes");
    __publicField(this, "context");
    __publicField(this, "unlinkedAt");
    this["commentThreadId"] = commentThreadId, this["_comments"] = _comments, this["_commentsV2"] = _commentsV2, this["resolvedBy"] = _0x24b87b, this["comments"] = (_commentsV2 == null ? void 0 : _commentsV2["length"]) ? _commentsV2 : _comments, this["createdAt"] = createdAt ? new Date(createdAt) : void 0, this["deletedAt"] = "string" == typeof deletedAt ? new Date(deletedAt) : deletedAt, this["resolvedAt"] = "string" == typeof resolvedAt ? new Date(resolvedAt) : resolvedAt, this["unlinkedAt"] = "string" == typeof unlinkedAt ? new Date(unlinkedAt) : unlinkedAt, this["attributes"] = "string" == typeof attributes ? JSON["parse"](attributes) : attributes, this["context"] = "string" == typeof context ? JSON["parse"](context) : context;
  }
  ["toJSON"]() {
    var _a5, _b, _c2, _d, _e2, _f2;
    return { "commentThreadId": this["commentThreadId"], "comments": (_a5 = this["_comments"]) == null ? void 0 : _a5["map"]((comment) => JSON["stringify"](comment)), "commentsV2": (_b = this["_commentsV2"]) == null ? void 0 : _b["map"](CommentDescriptor["toJSON"]), "attributes": this["attributes"] ? JSON["stringify"](this["attributes"]) : this["attributes"], "context": this["context"] ? JSON["stringify"](this["context"]) : this["context"], "resolvedBy": this["resolvedBy"], "createdAt": (_c2 = this["createdAt"]) == null ? void 0 : _c2["toISOString"](), "deletedAt": (_d = this["deletedAt"]) == null ? void 0 : _d["toISOString"](), "resolvedAt": (_e2 = this["resolvedAt"]) == null ? void 0 : _e2["toISOString"](), "unlinkedAt": (_f2 = this["unlinkedAt"]) == null ? void 0 : _f2["toISOString"]() };
  }
  static ["fromJSON"](object) {
    var _a5, _b;
    return new _GetCommentThreadResponse(object["commentThreadId"], (_a5 = object["comments"]) == null ? void 0 : _a5["map"]((comment) => function(commentString) {
      const comment2 = JSON["parse"](commentString);
      return { ...comment2, "createdAt": new Date(comment2["createdAt"]) };
    }(comment)), (_b = object["commentsV2"]) == null ? void 0 : _b["map"](CommentDescriptor["fromJSON"]), object["attributes"] ? JSON["parse"](object["attributes"]) : object["attributes"], object["resolvedBy"], object["context"] ? JSON["parse"](object["context"]) : object["context"], object["createdAt"], object["deletedAt"], object["resolvedAt"], object["unlinkedAt"]);
  }
};
__publicField(_GetCommentThreadResponse, "DESCRIPTOR_NAME", "CommentsV2GetCommentThreadResponse");
__publicField(_GetCommentThreadResponse, "DESCRIPTOR", { "fields": { "commentThreadId": { "type": "string", "id": 1 }, "comments": { "type": "string", "rule": "repeated", "id": 2 }, "commentsV2": { "type": "CommentDescriptor", "rule": "repeated", "id": 3 }, "resolvedAt": { "type": "string", "id": 4 }, "resolvedBy": { "type": "string", "id": 5 }, "context": { "type": "string", "id": 6 }, "createdAt": { "type": "string", "id": 7 }, "deletedAt": { "type": "string", "id": 8 }, "attributes": { "type": "string", "id": 9 }, "unlinkedAt": { "type": "string", "id": 10 } } });
var GetCommentThreadResponse = _GetCommentThreadResponse;
var _GetDocumentThreadsMessage = class _GetDocumentThreadsMessage extends Message {
  constructor(documentId) {
    super();
    __publicField(this, "documentId");
    this["documentId"] = documentId;
  }
  ["toJSON"]() {
    return { "documentId": this["documentId"] };
  }
  static ["fromJSON"](object) {
    return new _GetDocumentThreadsMessage(object["documentId"]);
  }
};
__publicField(_GetDocumentThreadsMessage, "TYPE", "94");
__publicField(_GetDocumentThreadsMessage, "READABLE_TYPE_NAME", "getDocumentThreads");
__publicField(_GetDocumentThreadsMessage, "DESCRIPTOR_NAME", "CommentsV2GetDocumentThreadsMessage");
__publicField(_GetDocumentThreadsMessage, "DESCRIPTOR", { "fields": { "documentId": { "type": "string", "id": 1 } } });
var GetDocumentThreadsMessage = _GetDocumentThreadsMessage;
var _GetDocumentThreadsResponse = class _GetDocumentThreadsResponse extends Message {
  constructor(_threads, _threadsV2) {
    super();
    __publicField(this, "_threads");
    __publicField(this, "_threadsV2");
    __publicField(this, "threads");
    this["_threads"] = _threads, this["_threadsV2"] = _threadsV2, this["threads"] = (_threadsV2 == null ? void 0 : _threadsV2["length"]) ? _threadsV2 : _threads;
  }
  ["toJSON"]() {
    var _a5, _b;
    return { "threads": (_a5 = this["_threads"]) == null ? void 0 : _a5["map"]((thread) => JSON["stringify"](thread)), "threadsV2": (_b = this["_threadsV2"]) == null ? void 0 : _b["map"](CommentsThreadDescriptor["toJSON"]) };
  }
  static ["fromJSON"](object) {
    var _a5, _b;
    return new _GetDocumentThreadsResponse((_a5 = object["threads"]) == null ? void 0 : _a5["map"]((thread) => function(threadString) {
      var _a6;
      const threadRaw = JSON["parse"](threadString), thread2 = { ...threadRaw };
      return threadRaw["comments"] && (thread2["comments"] = (_a6 = threadRaw["comments"]) == null ? void 0 : _a6["map"]((comment) => ({ ...comment, "createdAt": new Date(comment["createdAt"]) }))), thread2;
    }(thread)), (_b = object["threadsV2"]) == null ? void 0 : _b["map"](CommentsThreadDescriptor["fromJSON"]));
  }
};
__publicField(_GetDocumentThreadsResponse, "DESCRIPTOR_NAME", "CommentsV2GetDocumentThreadsResponse");
__publicField(_GetDocumentThreadsResponse, "DESCRIPTOR", { "fields": { "threads": { "type": "string", "rule": "repeated", "id": 1 }, "threadsV2": { "type": "CommentsThreadDescriptor", "rule": "repeated", "id": 2 } } });
var GetDocumentThreadsResponse = _GetDocumentThreadsResponse;
var CommentThreadAddedCommentDescriptor = class extends Descriptor {
  static ["toJSON"](comment) {
    var _a5;
    return { "commentId": comment["commentId"], "createdAt": (_a5 = comment["createdAt"]) == null ? void 0 : _a5["toISOString"]() };
  }
  static ["fromJSON"](comment) {
    return { "commentId": comment["commentId"], "createdAt": new Date(comment["createdAt"]) };
  }
};
__publicField(CommentThreadAddedCommentDescriptor, "DESCRIPTOR_NAME", "CommentThreadAddedCommentDescriptor");
__publicField(CommentThreadAddedCommentDescriptor, "DESCRIPTOR", { "fields": { "commentId": { "id": 1, "type": "string" }, "createdAt": { "id": 2, "type": "string" } } });
var _AddCommentThreadResponse = class _AddCommentThreadResponse extends Message {
  constructor(commentThreadId, createdAt, comments = []) {
    super();
    __publicField(this, "commentThreadId");
    __publicField(this, "comments");
    __publicField(this, "createdAt");
    this["commentThreadId"] = commentThreadId, this["comments"] = comments, this["createdAt"] = new Date(createdAt);
  }
  ["toJSON"]() {
    return { "commentThreadId": this["commentThreadId"], "createdAt": this["createdAt"]["toISOString"](), "comments": this["comments"]["map"]((comment) => CommentThreadAddedCommentDescriptor["toJSON"](comment)) };
  }
  static ["fromJSON"](data) {
    return new _AddCommentThreadResponse(data["commentThreadId"], data["createdAt"], data["comments"]["map"]((comment) => CommentThreadAddedCommentDescriptor["fromJSON"](comment)));
  }
};
__publicField(_AddCommentThreadResponse, "DESCRIPTOR_NAME", "CommentsV2AddCommentThreadResponse");
__publicField(_AddCommentThreadResponse, "DESCRIPTOR", { "fields": { "commentThreadId": { "type": "string", "id": 1 }, "createdAt": { "type": "string", "id": 2 }, "comments": { "type": "CommentThreadAddedCommentDescriptor", "rule": "repeated", "id": 3 } } });
var AddCommentThreadResponse = _AddCommentThreadResponse;
var _AddCommentThreadMessage = class _AddCommentThreadMessage extends Message {
  constructor(documentId, commentThreadId, comments = [], context, _0x2ef654 = null, createdAt = null, resolvedAt = null, deletedAt = null, attributes = null) {
    super();
    __publicField(this, "documentId");
    __publicField(this, "commentThreadId");
    __publicField(this, "comments");
    __publicField(this, "context");
    __publicField(this, "resolvedBy");
    __publicField(this, "attributes");
    __publicField(this, "createdAt");
    __publicField(this, "resolvedAt");
    __publicField(this, "deletedAt");
    this["documentId"] = documentId, this["commentThreadId"] = commentThreadId, this["comments"] = comments, this["context"] = context, this["resolvedBy"] = _0x2ef654, this["attributes"] = attributes, this["createdAt"] = createdAt ? new Date(createdAt) : "", this["resolvedAt"] = resolvedAt ? new Date(resolvedAt) : "", this["deletedAt"] = deletedAt ? new Date(deletedAt) : "";
  }
  ["toJSON"]() {
    var _a5;
    return { "commentThreadId": this["commentThreadId"], "context": this["context"] ? JSON["stringify"](this["context"]) : this["context"], "documentId": this["documentId"], "resolvedBy": this["resolvedBy"], "resolvedAt": this["resolvedAt"] instanceof Date ? this["resolvedAt"]["toISOString"]() : this["resolvedAt"], "deletedAt": this["deletedAt"] instanceof Date ? this["deletedAt"]["toISOString"]() : this["deletedAt"], "createdAt": this["createdAt"] instanceof Date ? this["createdAt"]["toISOString"]() : this["createdAt"], "attributes": this["attributes"] ? JSON["stringify"](this["attributes"]) : this["attributes"], "comments": (_a5 = this["comments"]) == null ? void 0 : _a5["map"]((_0x2349fe) => CommentDescriptor["toJSON"](_0x2349fe)) };
  }
  static ["fromJSON"](object) {
    var _a5;
    return new _AddCommentThreadMessage(object["documentId"], object["commentThreadId"], (_a5 = object["comments"]) == null ? void 0 : _a5["map"]((_0x69c400) => CommentDescriptor["fromJSON"]({ ..._0x69c400, "documentId": object["documentId"], "commentThreadId": object["commentThreadId"] })), object["context"] ? JSON["parse"](object["context"]) : object["context"], object["resolvedBy"], object["createdAt"] ? new Date(object["createdAt"]) : void 0, object["resolvedAt"] ? new Date(object["resolvedAt"]) : void 0, object["deletedAt"] ? new Date(object["deletedAt"]) : void 0, object["attributes"] ? JSON["parse"](object["attributes"]) : object["attributes"]);
  }
};
__publicField(_AddCommentThreadMessage, "TYPE", "140");
__publicField(_AddCommentThreadMessage, "READABLE_TYPE_NAME", "addCommentThread");
__publicField(_AddCommentThreadMessage, "DESCRIPTOR_NAME", "CommentsV2AddCommentThreadMessage");
__publicField(_AddCommentThreadMessage, "DESCRIPTOR", { "fields": { "documentId": { "type": "string", "id": 1 }, "commentThreadId": { "type": "string", "id": 2 }, "context": { "type": "string", "id": 3 }, "createdAt": { "type": "string", "id": 4 }, "resolvedAt": { "type": "string", "id": 5 }, "resolvedBy": { "type": "string", "id": 6 }, "attributes": { "type": "string", "id": 7 }, "deletedAt": { "type": "string", "id": 8 }, "comments": { "type": "CommentDescriptor", "rule": "repeated", "id": 9 } } });
var AddCommentThreadMessage = _AddCommentThreadMessage;
var _ResolveCommentThreadMessage = class _ResolveCommentThreadMessage extends Message {
  constructor(commentThreadId, documentId, _0x4ef4c3, resolvedAt) {
    super();
    __publicField(this, "commentThreadId");
    __publicField(this, "documentId");
    __publicField(this, "resolvedBy");
    __publicField(this, "resolvedAt");
    this["commentThreadId"] = commentThreadId, this["documentId"] = documentId, this["resolvedBy"] = _0x4ef4c3, this["resolvedAt"] = resolvedAt ? new Date(resolvedAt) : void 0;
  }
  ["toJSON"]() {
    var _a5;
    return { "documentId": this["documentId"], "commentThreadId": this["commentThreadId"], "resolvedBy": this["resolvedBy"], "resolvedAt": (_a5 = this["resolvedAt"]) == null ? void 0 : _a5["toISOString"]() };
  }
  static ["fromJSON"](object) {
    return new _ResolveCommentThreadMessage(object["commentThreadId"], object["documentId"], object["resolvedBy"], object["resolvedAt"]);
  }
};
__publicField(_ResolveCommentThreadMessage, "TYPE", "142");
__publicField(_ResolveCommentThreadMessage, "READABLE_TYPE_NAME", "resolveCommentThread");
__publicField(_ResolveCommentThreadMessage, "DESCRIPTOR_NAME", "CommentsV2ResolveCommentThreadMessage");
__publicField(_ResolveCommentThreadMessage, "DESCRIPTOR", { "fields": { "commentThreadId": { "type": "string", "id": 1 }, "documentId": { "type": "string", "id": 2 }, "resolvedBy": { "type": "string", "id": 3 }, "resolvedAt": { "type": "string", "id": 4 } } });
var ResolveCommentThreadMessage = _ResolveCommentThreadMessage;
var _ReopenCommentThreadMessage = class _ReopenCommentThreadMessage extends Message {
  constructor(commentThreadId, documentId) {
    super();
    __publicField(this, "commentThreadId");
    __publicField(this, "documentId");
    this["commentThreadId"] = commentThreadId, this["documentId"] = documentId;
  }
  ["toJSON"]() {
    return { "documentId": this["documentId"], "commentThreadId": this["commentThreadId"] };
  }
  static ["fromJSON"](object) {
    return new _ReopenCommentThreadMessage(object["commentThreadId"], object["documentId"]);
  }
};
__publicField(_ReopenCommentThreadMessage, "TYPE", "141");
__publicField(_ReopenCommentThreadMessage, "READABLE_TYPE_NAME", "reopenCommentThread");
__publicField(_ReopenCommentThreadMessage, "DESCRIPTOR_NAME", "CommentsV2ReopenCommentThreadMessage");
__publicField(_ReopenCommentThreadMessage, "DESCRIPTOR", { "fields": { "commentThreadId": { "type": "string", "id": 1 }, "documentId": { "type": "string", "id": 2 } } });
var ReopenCommentThreadMessage = _ReopenCommentThreadMessage;
var _UpdateCommentThreadMessage = class _UpdateCommentThreadMessage extends Message {
  constructor(commentThreadId, documentId, context, attributes = null, unlinkedAt = null) {
    super();
    __publicField(this, "commentThreadId");
    __publicField(this, "documentId");
    __publicField(this, "context");
    __publicField(this, "attributes");
    __publicField(this, "unlinkedAt");
    this["commentThreadId"] = commentThreadId, this["documentId"] = documentId, this["context"] = context, this["attributes"] = attributes, this["unlinkedAt"] = unlinkedAt ? new Date(unlinkedAt) : "";
  }
  ["toJSON"]() {
    return { "documentId": this["documentId"], "commentThreadId": this["commentThreadId"], "context": this["context"] ? JSON["stringify"](this["context"]) : this["context"], "attributes": this["attributes"] ? JSON["stringify"](this["attributes"]) : null, "unlinkedAt": this["unlinkedAt"] instanceof Date ? this["unlinkedAt"]["toISOString"]() : this["unlinkedAt"] };
  }
  static ["fromJSON"](object) {
    return new _UpdateCommentThreadMessage(object["commentThreadId"], object["documentId"], object["context"] ? JSON["parse"](object["context"]) : object["context"], object["attributes"] ? JSON["parse"](object["attributes"]) : null, object["unlinkedAt"] ? new Date(object["unlinkedAt"]) : null);
  }
};
__publicField(_UpdateCommentThreadMessage, "TYPE", "143");
__publicField(_UpdateCommentThreadMessage, "READABLE_TYPE_NAME", "updateCommentThread");
__publicField(_UpdateCommentThreadMessage, "DESCRIPTOR_NAME", "CommentsV2UpdateCommentThreadMessage");
__publicField(_UpdateCommentThreadMessage, "DESCRIPTOR", { "fields": { "commentThreadId": { "type": "string", "id": 1 }, "documentId": { "type": "string", "id": 2 }, "context": { "type": "string", "id": 3 }, "attributes": { "type": "string", "id": 4 }, "unlinkedAt": { "type": "string", "id": 5 } } });
var UpdateCommentThreadMessage = _UpdateCommentThreadMessage;
var _ResolveCommentThreadResponse = class _ResolveCommentThreadResponse extends Message {
  constructor(commentThreadId, documentId, _0x459b6e, resolvedAt) {
    super();
    __publicField(this, "commentThreadId");
    __publicField(this, "documentId");
    __publicField(this, "resolvedBy");
    __publicField(this, "resolvedAt");
    this["commentThreadId"] = commentThreadId, this["documentId"] = documentId, this["resolvedBy"] = _0x459b6e, this["resolvedAt"] = new Date(resolvedAt);
  }
  ["toJSON"]() {
    return { "commentThreadId": this["commentThreadId"], "documentId": this["documentId"], "resolvedBy": this["resolvedBy"], "resolvedAt": this["resolvedAt"]["toISOString"]() };
  }
  static ["fromJSON"](data) {
    return new _ResolveCommentThreadResponse(data["commentThreadId"], data["documentId"], data["resolvedBy"], data["resolvedAt"]);
  }
};
__publicField(_ResolveCommentThreadResponse, "DESCRIPTOR_NAME", "CommentsV2ResolveCommentThreadResponse");
__publicField(_ResolveCommentThreadResponse, "DESCRIPTOR", { "fields": { "commentThreadId": { "type": "string", "id": 1 }, "documentId": { "type": "string", "id": 2 }, "resolvedAt": { "type": "string", "id": 3 }, "resolvedBy": { "type": "string", "id": 4 } } });
var ResolveCommentThreadResponse = _ResolveCommentThreadResponse;
var _CommentsService = class _CommentsService extends EmitterMixin() {
  constructor(_documentId) {
    super();
    __publicField(this, "_documentId");
    __publicField(this, "_isConnected");
    __publicField(this, "_wsGateway");
    __publicField(this, "_channel");
    __publicField(this, "_connectedSessions");
    this["_documentId"] = _documentId, this["_isConnected"] = false;
  }
  get ["isConnected"]() {
    return this["_isConnected"];
  }
  async ["connect"](wsGateway) {
    if (this["_isConnected"]) return;
    if (wsGateway["state"] !== WEB_SOCKET_GATEWAY_STATES["CONNECTED"]) throw new CKEditorCloudServicesError("WebSocket Gateway is not connected.", wsGateway);
    const connectMessage = new ConnectMessage(this["_documentId"]);
    this["_wsGateway"] = wsGateway, this["stopListening"](wsGateway, "change:state");
    const _0x443bda = await wsGateway["_sendRequest"](9, ConnectMessage["TYPE"], MessagesCompressor["encode"](connectMessage)), { channel: _0x1766c4, threads } = MessagesCompressor["decode"](_0x443bda, ConnectResponse);
    return this["listenTo"](wsGateway, "change:state", (_0x3c11aa, _0x1f9083, _0x156ffc) => this["_onWsGatewayStateChange"](_0x156ffc), { "priority": WebSocketGateway["_CHANGE_STATE_EVENT_PRIORITY"] }), this["_connectToChannel"](wsGateway, _0x1766c4), this["_isConnected"] = true, this["fire"]("connected"), threads;
  }
  ["disconnect"]() {
    this["_isConnected"] && (this["_isConnected"] = false, this["_wsGateway"] && (this["stopListening"](this["_wsGateway"]), this["_wsGateway"] = void 0), this["_channel"] && (this["stopListening"](this["_channel"]), this["_channel"] = void 0), this["_connectedSessions"] && (this["_connectedSessions"]["disconnect"](), this["_connectedSessions"] = void 0), this["fire"]("disconnected"), this["stopListening"]());
  }
  async ["addComment"](commentThreadId, commentId, content, attributes) {
    const _0x368e26 = new AddCommentMessage(this["_documentId"], commentThreadId, content, commentId, void 0, void 0, attributes), _0x4f5ac0 = await this["_sendRequest"](AddCommentMessage["TYPE"], _0x368e26);
    return MessagesCompressor["decode"](_0x4f5ac0, AddCommentResponse);
  }
  async ["updateComment"](commentThreadId, commentId, content, attributes) {
    const isAttributesUpdated = void 0 !== attributes, _0x3ca551 = new UpdateCommentMessage(this["_documentId"], commentThreadId, commentId, content, attributes, isAttributesUpdated);
    await this["_sendRequest"](UpdateCommentMessage["TYPE"], _0x3ca551);
  }
  async ["removeComment"](commentThreadId, commentId) {
    const _0x51979f = new RemoveCommentMessage(this["_documentId"], commentThreadId, commentId);
    await this["_sendRequest"](RemoveCommentMessage["TYPE"], _0x51979f);
  }
  async ["removeCommentThread"](commentThreadId) {
    const _0x52650d = new RemoveCommentThreadMessage(this["_documentId"], commentThreadId);
    await this["_sendRequest"](RemoveCommentThreadMessage["TYPE"], _0x52650d);
  }
  async ["addCommentThread"](addCommentThreadParams) {
    var _a5;
    const _0x22f92e = new AddCommentThreadMessage(this["_documentId"], addCommentThreadParams["commentThreadId"], (_a5 = addCommentThreadParams["comments"]) == null ? void 0 : _a5["map"]((comment) => ({ ...comment, "documentId": this["_documentId"], "commentThreadId": addCommentThreadParams["commentThreadId"] })), addCommentThreadParams["context"], addCommentThreadParams["resolvedBy"], addCommentThreadParams["createdAt"], addCommentThreadParams["resolvedAt"], addCommentThreadParams["deletedAt"], addCommentThreadParams["attributes"]), _0x789dba = await this["_sendRequest"](AddCommentThreadMessage["TYPE"], _0x22f92e);
    return MessagesCompressor["decode"](_0x789dba, AddCommentThreadResponse);
  }
  async ["resolveCommentThread"](commentThreadId) {
    const _0x1f5fc9 = new ResolveCommentThreadMessage(commentThreadId, this["_documentId"]), _0x156f4e = await this["_sendRequest"](ResolveCommentThreadMessage["TYPE"], _0x1f5fc9);
    return MessagesCompressor["decode"](_0x156f4e, ResolveCommentThreadResponse);
  }
  async ["reopenCommentThread"](commentThreadId) {
    const _0x297530 = new ReopenCommentThreadMessage(commentThreadId, this["_documentId"]);
    await this["_sendRequest"](ReopenCommentThreadMessage["TYPE"], _0x297530);
  }
  async ["updateCommentThread"](_0xe5738d) {
    const _0xd5578 = new UpdateCommentThreadMessage(_0xe5738d["commentThreadId"], this["_documentId"], _0xe5738d["context"], _0xe5738d["attributes"], _0xe5738d["unlinkedAt"]);
    await this["_sendRequest"](UpdateCommentThreadMessage["TYPE"], _0xd5578);
  }
  async ["getCommentThread"](commentThreadId, attempt = 1) {
    const _0x5894f5 = new GetCommentThreadMessage(commentThreadId, this["_documentId"]);
    try {
      const _0x12adac = await this["_sendRequest"](GetCommentThreadMessage["TYPE"], _0x5894f5), commentThreadResponse = MessagesCompressor["decode"](_0x12adac, GetCommentThreadResponse);
      return { "commentThreadId": commentThreadResponse["commentThreadId"], "comments": commentThreadResponse["comments"], "attributes": commentThreadResponse["attributes"], "context": commentThreadResponse["context"], "resolvedAt": commentThreadResponse["resolvedAt"], "resolvedBy": commentThreadResponse["resolvedBy"], "deletedAt": commentThreadResponse["deletedAt"], "unlinkedAt": commentThreadResponse["unlinkedAt"] };
    } catch (_0x560db4) {
      if ("CKEditorCloudServicesServerError" === _0x560db4["name"] && "404" === _0x560db4["code"] && attempt < 5) return await (time = 100 * attempt, new Promise((_0x5e18b5) => {
        setTimeout(_0x5e18b5, time);
      })), this["getCommentThread"](commentThreadId, attempt + 1);
      if ("CKEditorCloudServicesServerError" === _0x560db4["name"]) throw _0x560db4;
      throw CKEditorCloudServicesServerError["fromPublicError"](_0x560db4);
    }
    var time;
  }
  async ["getDocumentThreads"]() {
    const _0x1f8e81 = new GetDocumentThreadsMessage(this["_documentId"]), _0x3e82f6 = await this["_sendRequest"](GetDocumentThreadsMessage["TYPE"], _0x1f8e81), { threads } = MessagesCompressor["decode"](_0x3e82f6, GetDocumentThreadsResponse);
    return { "threads": threads };
  }
  async ["getConnectedSessions"]() {
    if (!this["_isConnected"]) throw new ServiceNotConnectedError("Comments", this);
    return this["_connectedSessions"] || (this["_connectedSessions"] = await Sessions["getConnectedSessions"](this["_wsGateway"], this["_documentId"], 9)), this["_connectedSessions"];
  }
  ["_connectToChannel"](wsGateway, _0x4d807c) {
    this["_channel"] = wsGateway["_getChannel"](_CommentsService["_SERVICE"], _0x4d807c), this["_channel"] && (this["listenTo"](this["_channel"], this["_channel"]["getEventName"](AddCommentMessage["TYPE"]), (event, data) => {
      const addCommentMessage = MessagesCompressor["decode"](data, AddCommentMessage);
      this["fire"]("commentAdded", addCommentMessage);
    }), this["listenTo"](this["_channel"], this["_channel"]["getEventName"](RemoveCommentMessage["TYPE"]), (event, data) => {
      const removeCommentMessage = MessagesCompressor["decode"](data, RemoveCommentMessage);
      this["fire"]("commentRemoved", removeCommentMessage);
    }), this["listenTo"](this["_channel"], this["_channel"]["getEventName"](UpdateCommentMessage["TYPE"]), (event, data) => {
      const updateCommentMessage = MessagesCompressor["decode"](data, UpdateCommentMessage);
      this["fire"]("commentUpdated", updateCommentMessage);
    }), this["listenTo"](this["_channel"], this["_channel"]["getEventName"](RemoveCommentThreadMessage["TYPE"]), (event, data) => {
      const removeCommentThreadMessage = MessagesCompressor["decode"](data, RemoveCommentThreadMessage);
      this["fire"]("commentThreadRemoved", removeCommentThreadMessage);
    }), this["listenTo"](this["_channel"], this["_channel"]["getEventName"](AddCommentThreadMessage["TYPE"]), (event, data) => {
      const addCommentThreadMessage = MessagesCompressor["decode"](data, AddCommentThreadMessage);
      this["fire"]("commentThreadAdded", addCommentThreadMessage);
    }), this["listenTo"](this["_channel"], this["_channel"]["getEventName"](UpdateCommentThreadMessage["TYPE"]), (event, data) => {
      const updateCommentThreadMessage = MessagesCompressor["decode"](data, UpdateCommentThreadMessage);
      this["fire"]("commentThreadUpdated", updateCommentThreadMessage);
    }), this["listenTo"](this["_channel"], this["_channel"]["getEventName"](ResolveCommentThreadMessage["TYPE"]), (event, data) => {
      const resolveCommentThreadMessage = MessagesCompressor["decode"](data, ResolveCommentThreadMessage);
      this["fire"]("commentThreadResolved", resolveCommentThreadMessage);
    }), this["listenTo"](this["_channel"], this["_channel"]["getEventName"](ReopenCommentThreadMessage["TYPE"]), (event, data) => {
      const reopenCommentThreadMessage = MessagesCompressor["decode"](data, ReopenCommentThreadMessage);
      this["fire"]("commentThreadReopened", reopenCommentThreadMessage);
    }));
  }
  ["_onWsGatewayStateChange"](_0x42891d) {
    _0x42891d === WEB_SOCKET_GATEWAY_STATES["DISCONNECTED"] && this["disconnect"]();
  }
  ["_sendRequest"](method, _0x2b008a) {
    if (!this["_wsGateway"] || !this["_isConnected"]) throw new ServiceNotConnectedError("Comments", this);
    return this["_wsGateway"]["_sendRequest"](9, method, MessagesCompressor["encode"](_0x2b008a));
  }
};
__publicField(_CommentsService, "_SERVICE", 9);
var CommentsService = _CommentsService;

// node_modules/@ckeditor/ckeditor5-operations-compressor/dist/index.js
var import_minimal2 = __toESM(require_minimal2());
var u5 = (() => {
  var _0x2a3711 = import_minimal2.default["Reader"], _0x3f90b9 = import_minimal2.default["Writer"], _0x2d424b = import_minimal2.default["util"], _0x39c05c = import_minimal2.default["roots"]["default"] || (import_minimal2.default["roots"]["default"] = {});
  return _0x39c05c["AttributeOperation"] = function() {
    function _0x274d77(_0x3aa44e) {
      if (_0x3aa44e) {
        for (var _0x5ef3b4 = Object["keys"](_0x3aa44e), _0x29e696 = 0; _0x29e696 < _0x5ef3b4["length"]; ++_0x29e696) null != _0x3aa44e[_0x5ef3b4[_0x29e696]] && (this[_0x5ef3b4[_0x29e696]] = _0x3aa44e[_0x5ef3b4[_0x29e696]]);
      }
    }
    return _0x274d77["prototype"]["range"] = null, _0x274d77["prototype"]["key"] = "", _0x274d77["prototype"]["oldValueBoolean"] = false, _0x274d77["prototype"]["oldValueJson"] = "", _0x274d77["prototype"]["newValueBoolean"] = false, _0x274d77["prototype"]["newValueJson"] = "", _0x274d77["prototype"]["wasUndone"] = false, _0x274d77["create"] = function(_0x4c04fe) {
      return new _0x274d77(_0x4c04fe);
    }, _0x274d77["encode"] = function(_0x323777, _0x9e71c5) {
      return _0x9e71c5 || (_0x9e71c5 = _0x3f90b9["create"]()), null != _0x323777["range"] && Object["hasOwnProperty"]["call"](_0x323777, "range") && _0x39c05c["Range"]["encode"](_0x323777["range"], _0x9e71c5["uint32"](10)["fork"]())["ldelim"](), null != _0x323777["key"] && Object["hasOwnProperty"]["call"](_0x323777, "key") && _0x9e71c5["uint32"](18)["string"](_0x323777["key"]), null != _0x323777["oldValueBoolean"] && Object["hasOwnProperty"]["call"](_0x323777, "oldValueBoolean") && _0x9e71c5["uint32"](24)["bool"](_0x323777["oldValueBoolean"]), null != _0x323777["oldValueJson"] && Object["hasOwnProperty"]["call"](_0x323777, "oldValueJson") && _0x9e71c5["uint32"](34)["string"](_0x323777["oldValueJson"]), null != _0x323777["newValueBoolean"] && Object["hasOwnProperty"]["call"](_0x323777, "newValueBoolean") && _0x9e71c5["uint32"](40)["bool"](_0x323777["newValueBoolean"]), null != _0x323777["newValueJson"] && Object["hasOwnProperty"]["call"](_0x323777, "newValueJson") && _0x9e71c5["uint32"](50)["string"](_0x323777["newValueJson"]), null != _0x323777["wasUndone"] && Object["hasOwnProperty"]["call"](_0x323777, "wasUndone") && _0x9e71c5["uint32"](56)["bool"](_0x323777["wasUndone"]), _0x9e71c5;
    }, _0x274d77["encodeDelimited"] = function(_0x3569b2, _0x14010a) {
      return this["encode"](_0x3569b2, _0x14010a)["ldelim"]();
    }, _0x274d77["decode"] = function(_0x53a095, _0x2a6f54) {
      _0x53a095 instanceof _0x2a3711 || (_0x53a095 = _0x2a3711["create"](_0x53a095));
      for (var _0x5b2bf4 = void 0 === _0x2a6f54 ? _0x53a095["len"] : _0x53a095["pos"] + _0x2a6f54, _0x5d8722 = new _0x39c05c["AttributeOperation"](); _0x53a095["pos"] < _0x5b2bf4; ) {
        var _0x26ff30 = _0x53a095["uint32"]();
        switch (_0x26ff30 >>> 3) {
          case 1:
            _0x5d8722["range"] = _0x39c05c["Range"]["decode"](_0x53a095, _0x53a095["uint32"]());
            break;
          case 2:
            _0x5d8722["key"] = _0x53a095["string"]();
            break;
          case 3:
            _0x5d8722["oldValueBoolean"] = _0x53a095["bool"]();
            break;
          case 4:
            _0x5d8722["oldValueJson"] = _0x53a095["string"]();
            break;
          case 5:
            _0x5d8722["newValueBoolean"] = _0x53a095["bool"]();
            break;
          case 6:
            _0x5d8722["newValueJson"] = _0x53a095["string"]();
            break;
          case 7:
            _0x5d8722["wasUndone"] = _0x53a095["bool"]();
            break;
          default:
            _0x53a095["skipType"](7 & _0x26ff30);
        }
      }
      return _0x5d8722;
    }, _0x274d77["decodeDelimited"] = function(_0x33de17) {
      return _0x33de17 instanceof _0x2a3711 || (_0x33de17 = new _0x2a3711(_0x33de17)), this["decode"](_0x33de17, _0x33de17["uint32"]());
    }, _0x274d77["verify"] = function(_0x3ab1d2) {
      if ("object" != typeof _0x3ab1d2 || null === _0x3ab1d2) return "object expected";
      if (null != _0x3ab1d2["range"] && _0x3ab1d2["hasOwnProperty"]("range")) {
        var _0x54b549 = _0x39c05c["Range"]["verify"](_0x3ab1d2["range"]);
        if (_0x54b549) return "range." + _0x54b549;
      }
      return null != _0x3ab1d2["key"] && _0x3ab1d2["hasOwnProperty"]("key") && !_0x2d424b["isString"](_0x3ab1d2["key"]) ? "key: string expected" : null != _0x3ab1d2["oldValueBoolean"] && _0x3ab1d2["hasOwnProperty"]("oldValueBoolean") && "boolean" != typeof _0x3ab1d2["oldValueBoolean"] ? "oldValueBoolean: boolean expected" : null != _0x3ab1d2["oldValueJson"] && _0x3ab1d2["hasOwnProperty"]("oldValueJson") && !_0x2d424b["isString"](_0x3ab1d2["oldValueJson"]) ? "oldValueJson: string expected" : null != _0x3ab1d2["newValueBoolean"] && _0x3ab1d2["hasOwnProperty"]("newValueBoolean") && "boolean" != typeof _0x3ab1d2["newValueBoolean"] ? "newValueBoolean: boolean expected" : null != _0x3ab1d2["newValueJson"] && _0x3ab1d2["hasOwnProperty"]("newValueJson") && !_0x2d424b["isString"](_0x3ab1d2["newValueJson"]) ? "newValueJson: string expected" : null != _0x3ab1d2["wasUndone"] && _0x3ab1d2["hasOwnProperty"]("wasUndone") && "boolean" != typeof _0x3ab1d2["wasUndone"] ? "wasUndone: boolean expected" : null;
    }, _0x274d77["fromObject"] = function(_0x3e835f) {
      if (_0x3e835f instanceof _0x39c05c["AttributeOperation"]) return _0x3e835f;
      var _0x4cf75a = new _0x39c05c["AttributeOperation"]();
      if (null != _0x3e835f["range"]) {
        if ("object" != typeof _0x3e835f["range"]) throw TypeError(".AttributeOperation.range: object expected");
        _0x4cf75a["range"] = _0x39c05c["Range"]["fromObject"](_0x3e835f["range"]);
      }
      return null != _0x3e835f["key"] && (_0x4cf75a["key"] = String(_0x3e835f["key"])), null != _0x3e835f["oldValueBoolean"] && (_0x4cf75a["oldValueBoolean"] = Boolean(_0x3e835f["oldValueBoolean"])), null != _0x3e835f["oldValueJson"] && (_0x4cf75a["oldValueJson"] = String(_0x3e835f["oldValueJson"])), null != _0x3e835f["newValueBoolean"] && (_0x4cf75a["newValueBoolean"] = Boolean(_0x3e835f["newValueBoolean"])), null != _0x3e835f["newValueJson"] && (_0x4cf75a["newValueJson"] = String(_0x3e835f["newValueJson"])), null != _0x3e835f["wasUndone"] && (_0x4cf75a["wasUndone"] = Boolean(_0x3e835f["wasUndone"])), _0x4cf75a;
    }, _0x274d77["toObject"] = function(_0x39dcf4, _0x6125d4) {
      _0x6125d4 || (_0x6125d4 = {});
      var _0xcae604 = {};
      return _0x6125d4["defaults"] && (_0xcae604["range"] = null, _0xcae604["key"] = "", _0xcae604["oldValueBoolean"] = false, _0xcae604["oldValueJson"] = "", _0xcae604["newValueBoolean"] = false, _0xcae604["newValueJson"] = "", _0xcae604["wasUndone"] = false), null != _0x39dcf4["range"] && _0x39dcf4["hasOwnProperty"]("range") && (_0xcae604["range"] = _0x39c05c["Range"]["toObject"](_0x39dcf4["range"], _0x6125d4)), null != _0x39dcf4["key"] && _0x39dcf4["hasOwnProperty"]("key") && (_0xcae604["key"] = _0x39dcf4["key"]), null != _0x39dcf4["oldValueBoolean"] && _0x39dcf4["hasOwnProperty"]("oldValueBoolean") && (_0xcae604["oldValueBoolean"] = _0x39dcf4["oldValueBoolean"]), null != _0x39dcf4["oldValueJson"] && _0x39dcf4["hasOwnProperty"]("oldValueJson") && (_0xcae604["oldValueJson"] = _0x39dcf4["oldValueJson"]), null != _0x39dcf4["newValueBoolean"] && _0x39dcf4["hasOwnProperty"]("newValueBoolean") && (_0xcae604["newValueBoolean"] = _0x39dcf4["newValueBoolean"]), null != _0x39dcf4["newValueJson"] && _0x39dcf4["hasOwnProperty"]("newValueJson") && (_0xcae604["newValueJson"] = _0x39dcf4["newValueJson"]), null != _0x39dcf4["wasUndone"] && _0x39dcf4["hasOwnProperty"]("wasUndone") && (_0xcae604["wasUndone"] = _0x39dcf4["wasUndone"]), _0xcae604;
    }, _0x274d77["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal2.default["util"]["toJSONOptions"]);
    }, _0x274d77["getTypeUrl"] = function(_0x3366d0) {
      return void 0 === _0x3366d0 && (_0x3366d0 = "type.googleapis.com"), _0x3366d0 + "/AttributeOperation";
    }, _0x274d77;
  }(), _0x39c05c["InsertOperation"] = function() {
    function _0xe30895(_0x3de116) {
      if (this["nodes"] = [], _0x3de116) {
        for (var _0x217986 = Object["keys"](_0x3de116), _0x2054ab = 0; _0x2054ab < _0x217986["length"]; ++_0x2054ab) null != _0x3de116[_0x217986[_0x2054ab]] && (this[_0x217986[_0x2054ab]] = _0x3de116[_0x217986[_0x2054ab]]);
      }
    }
    return _0xe30895["prototype"]["position"] = null, _0xe30895["prototype"]["nodes"] = _0x2d424b["emptyArray"], _0xe30895["prototype"]["shouldReceiveAttributes"] = false, _0xe30895["prototype"]["wasUndone"] = false, _0xe30895["create"] = function(_0x479f30) {
      return new _0xe30895(_0x479f30);
    }, _0xe30895["encode"] = function(_0x4541b3, _0x4da3cf) {
      if (_0x4da3cf || (_0x4da3cf = _0x3f90b9["create"]()), null != _0x4541b3["position"] && Object["hasOwnProperty"]["call"](_0x4541b3, "position") && _0x39c05c["Position"]["encode"](_0x4541b3["position"], _0x4da3cf["uint32"](10)["fork"]())["ldelim"](), null != _0x4541b3["nodes"] && _0x4541b3["nodes"]["length"]) {
        for (var _0x1066bd = 0; _0x1066bd < _0x4541b3["nodes"]["length"]; ++_0x1066bd) _0x39c05c["Element"]["encode"](_0x4541b3["nodes"][_0x1066bd], _0x4da3cf["uint32"](18)["fork"]())["ldelim"]();
      }
      return null != _0x4541b3["shouldReceiveAttributes"] && Object["hasOwnProperty"]["call"](_0x4541b3, "shouldReceiveAttributes") && _0x4da3cf["uint32"](24)["bool"](_0x4541b3["shouldReceiveAttributes"]), null != _0x4541b3["wasUndone"] && Object["hasOwnProperty"]["call"](_0x4541b3, "wasUndone") && _0x4da3cf["uint32"](32)["bool"](_0x4541b3["wasUndone"]), _0x4da3cf;
    }, _0xe30895["encodeDelimited"] = function(_0x359067, _0x5e23ce) {
      return this["encode"](_0x359067, _0x5e23ce)["ldelim"]();
    }, _0xe30895["decode"] = function(_0x153141, _0xef3f81) {
      _0x153141 instanceof _0x2a3711 || (_0x153141 = _0x2a3711["create"](_0x153141));
      for (var _0x49a7b4 = void 0 === _0xef3f81 ? _0x153141["len"] : _0x153141["pos"] + _0xef3f81, _0x174388 = new _0x39c05c["InsertOperation"](); _0x153141["pos"] < _0x49a7b4; ) {
        var _0x20df66 = _0x153141["uint32"]();
        switch (_0x20df66 >>> 3) {
          case 1:
            _0x174388["position"] = _0x39c05c["Position"]["decode"](_0x153141, _0x153141["uint32"]());
            break;
          case 2:
            _0x174388["nodes"] && _0x174388["nodes"]["length"] || (_0x174388["nodes"] = []), _0x174388["nodes"]["push"](_0x39c05c["Element"]["decode"](_0x153141, _0x153141["uint32"]()));
            break;
          case 3:
            _0x174388["shouldReceiveAttributes"] = _0x153141["bool"]();
            break;
          case 4:
            _0x174388["wasUndone"] = _0x153141["bool"]();
            break;
          default:
            _0x153141["skipType"](7 & _0x20df66);
        }
      }
      return _0x174388;
    }, _0xe30895["decodeDelimited"] = function(_0x521f6d) {
      return _0x521f6d instanceof _0x2a3711 || (_0x521f6d = new _0x2a3711(_0x521f6d)), this["decode"](_0x521f6d, _0x521f6d["uint32"]());
    }, _0xe30895["verify"] = function(_0x47af6a) {
      if ("object" != typeof _0x47af6a || null === _0x47af6a) return "object expected";
      if (null != _0x47af6a["position"] && _0x47af6a["hasOwnProperty"]("position") && (_0x888e5a = _0x39c05c["Position"]["verify"](_0x47af6a["position"]))) return "position." + _0x888e5a;
      if (null != _0x47af6a["nodes"] && _0x47af6a["hasOwnProperty"]("nodes")) {
        if (!Array["isArray"](_0x47af6a["nodes"])) return "nodes: array expected";
        for (var _0x39e7ce = 0; _0x39e7ce < _0x47af6a["nodes"]["length"]; ++_0x39e7ce) {
          var _0x888e5a;
          if (_0x888e5a = _0x39c05c["Element"]["verify"](_0x47af6a["nodes"][_0x39e7ce])) return "nodes." + _0x888e5a;
        }
      }
      return null != _0x47af6a["shouldReceiveAttributes"] && _0x47af6a["hasOwnProperty"]("shouldReceiveAttributes") && "boolean" != typeof _0x47af6a["shouldReceiveAttributes"] ? "shouldReceiveAttributes: boolean expected" : null != _0x47af6a["wasUndone"] && _0x47af6a["hasOwnProperty"]("wasUndone") && "boolean" != typeof _0x47af6a["wasUndone"] ? "wasUndone: boolean expected" : null;
    }, _0xe30895["fromObject"] = function(_0x4ba9cd) {
      if (_0x4ba9cd instanceof _0x39c05c["InsertOperation"]) return _0x4ba9cd;
      var _0x2f8c5a = new _0x39c05c["InsertOperation"]();
      if (null != _0x4ba9cd["position"]) {
        if ("object" != typeof _0x4ba9cd["position"]) throw TypeError(".InsertOperation.position: object expected");
        _0x2f8c5a["position"] = _0x39c05c["Position"]["fromObject"](_0x4ba9cd["position"]);
      }
      if (_0x4ba9cd["nodes"]) {
        if (!Array["isArray"](_0x4ba9cd["nodes"])) throw TypeError(".InsertOperation.nodes: array expected");
        _0x2f8c5a["nodes"] = [];
        for (var _0x588ff9 = 0; _0x588ff9 < _0x4ba9cd["nodes"]["length"]; ++_0x588ff9) {
          if ("object" != typeof _0x4ba9cd["nodes"][_0x588ff9]) throw TypeError(".InsertOperation.nodes: object expected");
          _0x2f8c5a["nodes"][_0x588ff9] = _0x39c05c["Element"]["fromObject"](_0x4ba9cd["nodes"][_0x588ff9]);
        }
      }
      return null != _0x4ba9cd["shouldReceiveAttributes"] && (_0x2f8c5a["shouldReceiveAttributes"] = Boolean(_0x4ba9cd["shouldReceiveAttributes"])), null != _0x4ba9cd["wasUndone"] && (_0x2f8c5a["wasUndone"] = Boolean(_0x4ba9cd["wasUndone"])), _0x2f8c5a;
    }, _0xe30895["toObject"] = function(_0x49a00c, _0x1bc297) {
      _0x1bc297 || (_0x1bc297 = {});
      var _0xfee039 = {};
      if ((_0x1bc297["arrays"] || _0x1bc297["defaults"]) && (_0xfee039["nodes"] = []), _0x1bc297["defaults"] && (_0xfee039["position"] = null, _0xfee039["shouldReceiveAttributes"] = false, _0xfee039["wasUndone"] = false), null != _0x49a00c["position"] && _0x49a00c["hasOwnProperty"]("position") && (_0xfee039["position"] = _0x39c05c["Position"]["toObject"](_0x49a00c["position"], _0x1bc297)), _0x49a00c["nodes"] && _0x49a00c["nodes"]["length"]) {
        _0xfee039["nodes"] = [];
        for (var _0x38652c = 0; _0x38652c < _0x49a00c["nodes"]["length"]; ++_0x38652c) _0xfee039["nodes"][_0x38652c] = _0x39c05c["Element"]["toObject"](_0x49a00c["nodes"][_0x38652c], _0x1bc297);
      }
      return null != _0x49a00c["shouldReceiveAttributes"] && _0x49a00c["hasOwnProperty"]("shouldReceiveAttributes") && (_0xfee039["shouldReceiveAttributes"] = _0x49a00c["shouldReceiveAttributes"]), null != _0x49a00c["wasUndone"] && _0x49a00c["hasOwnProperty"]("wasUndone") && (_0xfee039["wasUndone"] = _0x49a00c["wasUndone"]), _0xfee039;
    }, _0xe30895["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal2.default["util"]["toJSONOptions"]);
    }, _0xe30895["getTypeUrl"] = function(_0xa5837f) {
      return void 0 === _0xa5837f && (_0xa5837f = "type.googleapis.com"), _0xa5837f + "/InsertOperation";
    }, _0xe30895;
  }(), _0x39c05c["MarkerOperation"] = function() {
    function _0x8e6229(_0x26ca5f) {
      if (_0x26ca5f) {
        for (var _0x163263 = Object["keys"](_0x26ca5f), _0x4380ec = 0; _0x4380ec < _0x163263["length"]; ++_0x4380ec) null != _0x26ca5f[_0x163263[_0x4380ec]] && (this[_0x163263[_0x4380ec]] = _0x26ca5f[_0x163263[_0x4380ec]]);
      }
    }
    return _0x8e6229["prototype"]["name"] = "", _0x8e6229["prototype"]["oldRange"] = null, _0x8e6229["prototype"]["newRange"] = null, _0x8e6229["prototype"]["affectsData"] = false, _0x8e6229["prototype"]["wasUndone"] = false, _0x8e6229["create"] = function(_0x5ae4b2) {
      return new _0x8e6229(_0x5ae4b2);
    }, _0x8e6229["encode"] = function(_0x56a0d1, _0x30b459) {
      return _0x30b459 || (_0x30b459 = _0x3f90b9["create"]()), null != _0x56a0d1["name"] && Object["hasOwnProperty"]["call"](_0x56a0d1, "name") && _0x30b459["uint32"](10)["string"](_0x56a0d1["name"]), null != _0x56a0d1["oldRange"] && Object["hasOwnProperty"]["call"](_0x56a0d1, "oldRange") && _0x39c05c["Range"]["encode"](_0x56a0d1["oldRange"], _0x30b459["uint32"](18)["fork"]())["ldelim"](), null != _0x56a0d1["newRange"] && Object["hasOwnProperty"]["call"](_0x56a0d1, "newRange") && _0x39c05c["Range"]["encode"](_0x56a0d1["newRange"], _0x30b459["uint32"](26)["fork"]())["ldelim"](), null != _0x56a0d1["affectsData"] && Object["hasOwnProperty"]["call"](_0x56a0d1, "affectsData") && _0x30b459["uint32"](32)["bool"](_0x56a0d1["affectsData"]), null != _0x56a0d1["wasUndone"] && Object["hasOwnProperty"]["call"](_0x56a0d1, "wasUndone") && _0x30b459["uint32"](40)["bool"](_0x56a0d1["wasUndone"]), _0x30b459;
    }, _0x8e6229["encodeDelimited"] = function(_0x5909fb, _0x2e7ad9) {
      return this["encode"](_0x5909fb, _0x2e7ad9)["ldelim"]();
    }, _0x8e6229["decode"] = function(_0x27bbec, _0x2ebc3f) {
      _0x27bbec instanceof _0x2a3711 || (_0x27bbec = _0x2a3711["create"](_0x27bbec));
      for (var _0x4c9f79 = void 0 === _0x2ebc3f ? _0x27bbec["len"] : _0x27bbec["pos"] + _0x2ebc3f, _0x33b5c0 = new _0x39c05c["MarkerOperation"](); _0x27bbec["pos"] < _0x4c9f79; ) {
        var _0xd5b29b = _0x27bbec["uint32"]();
        switch (_0xd5b29b >>> 3) {
          case 1:
            _0x33b5c0["name"] = _0x27bbec["string"]();
            break;
          case 2:
            _0x33b5c0["oldRange"] = _0x39c05c["Range"]["decode"](_0x27bbec, _0x27bbec["uint32"]());
            break;
          case 3:
            _0x33b5c0["newRange"] = _0x39c05c["Range"]["decode"](_0x27bbec, _0x27bbec["uint32"]());
            break;
          case 4:
            _0x33b5c0["affectsData"] = _0x27bbec["bool"]();
            break;
          case 5:
            _0x33b5c0["wasUndone"] = _0x27bbec["bool"]();
            break;
          default:
            _0x27bbec["skipType"](7 & _0xd5b29b);
        }
      }
      return _0x33b5c0;
    }, _0x8e6229["decodeDelimited"] = function(_0x19ca04) {
      return _0x19ca04 instanceof _0x2a3711 || (_0x19ca04 = new _0x2a3711(_0x19ca04)), this["decode"](_0x19ca04, _0x19ca04["uint32"]());
    }, _0x8e6229["verify"] = function(_0x1f2f8a) {
      if ("object" != typeof _0x1f2f8a || null === _0x1f2f8a) return "object expected";
      if (null != _0x1f2f8a["name"] && _0x1f2f8a["hasOwnProperty"]("name") && !_0x2d424b["isString"](_0x1f2f8a["name"])) return "name: string expected";
      var _0x2dfe4a;
      if (null != _0x1f2f8a["oldRange"] && _0x1f2f8a["hasOwnProperty"]("oldRange") && (_0x2dfe4a = _0x39c05c["Range"]["verify"](_0x1f2f8a["oldRange"]))) return "oldRange." + _0x2dfe4a;
      if (null != _0x1f2f8a["newRange"] && _0x1f2f8a["hasOwnProperty"]("newRange") && (_0x2dfe4a = _0x39c05c["Range"]["verify"](_0x1f2f8a["newRange"]))) return "newRange." + _0x2dfe4a;
      return null != _0x1f2f8a["affectsData"] && _0x1f2f8a["hasOwnProperty"]("affectsData") && "boolean" != typeof _0x1f2f8a["affectsData"] ? "affectsData: boolean expected" : null != _0x1f2f8a["wasUndone"] && _0x1f2f8a["hasOwnProperty"]("wasUndone") && "boolean" != typeof _0x1f2f8a["wasUndone"] ? "wasUndone: boolean expected" : null;
    }, _0x8e6229["fromObject"] = function(_0x3f1c89) {
      if (_0x3f1c89 instanceof _0x39c05c["MarkerOperation"]) return _0x3f1c89;
      var _0x15e46f = new _0x39c05c["MarkerOperation"]();
      if (null != _0x3f1c89["name"] && (_0x15e46f["name"] = String(_0x3f1c89["name"])), null != _0x3f1c89["oldRange"]) {
        if ("object" != typeof _0x3f1c89["oldRange"]) throw TypeError(".MarkerOperation.oldRange: object expected");
        _0x15e46f["oldRange"] = _0x39c05c["Range"]["fromObject"](_0x3f1c89["oldRange"]);
      }
      if (null != _0x3f1c89["newRange"]) {
        if ("object" != typeof _0x3f1c89["newRange"]) throw TypeError(".MarkerOperation.newRange: object expected");
        _0x15e46f["newRange"] = _0x39c05c["Range"]["fromObject"](_0x3f1c89["newRange"]);
      }
      return null != _0x3f1c89["affectsData"] && (_0x15e46f["affectsData"] = Boolean(_0x3f1c89["affectsData"])), null != _0x3f1c89["wasUndone"] && (_0x15e46f["wasUndone"] = Boolean(_0x3f1c89["wasUndone"])), _0x15e46f;
    }, _0x8e6229["toObject"] = function(_0x1075e7, _0x5ea0cb) {
      _0x5ea0cb || (_0x5ea0cb = {});
      var _0x2dbaf0 = {};
      return _0x5ea0cb["defaults"] && (_0x2dbaf0["name"] = "", _0x2dbaf0["oldRange"] = null, _0x2dbaf0["newRange"] = null, _0x2dbaf0["affectsData"] = false, _0x2dbaf0["wasUndone"] = false), null != _0x1075e7["name"] && _0x1075e7["hasOwnProperty"]("name") && (_0x2dbaf0["name"] = _0x1075e7["name"]), null != _0x1075e7["oldRange"] && _0x1075e7["hasOwnProperty"]("oldRange") && (_0x2dbaf0["oldRange"] = _0x39c05c["Range"]["toObject"](_0x1075e7["oldRange"], _0x5ea0cb)), null != _0x1075e7["newRange"] && _0x1075e7["hasOwnProperty"]("newRange") && (_0x2dbaf0["newRange"] = _0x39c05c["Range"]["toObject"](_0x1075e7["newRange"], _0x5ea0cb)), null != _0x1075e7["affectsData"] && _0x1075e7["hasOwnProperty"]("affectsData") && (_0x2dbaf0["affectsData"] = _0x1075e7["affectsData"]), null != _0x1075e7["wasUndone"] && _0x1075e7["hasOwnProperty"]("wasUndone") && (_0x2dbaf0["wasUndone"] = _0x1075e7["wasUndone"]), _0x2dbaf0;
    }, _0x8e6229["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal2.default["util"]["toJSONOptions"]);
    }, _0x8e6229["getTypeUrl"] = function(_0x475c3b) {
      return void 0 === _0x475c3b && (_0x475c3b = "type.googleapis.com"), _0x475c3b + "/MarkerOperation";
    }, _0x8e6229;
  }(), _0x39c05c["MergeOperation"] = function() {
    function _0x1adbb1(_0x5d32d8) {
      if (_0x5d32d8) {
        for (var _0xc50aec = Object["keys"](_0x5d32d8), _0xaba8d8 = 0; _0xaba8d8 < _0xc50aec["length"]; ++_0xaba8d8) null != _0x5d32d8[_0xc50aec[_0xaba8d8]] && (this[_0xc50aec[_0xaba8d8]] = _0x5d32d8[_0xc50aec[_0xaba8d8]]);
      }
    }
    return _0x1adbb1["prototype"]["sourcePosition"] = null, _0x1adbb1["prototype"]["targetPosition"] = null, _0x1adbb1["prototype"]["graveyardPosition"] = null, _0x1adbb1["prototype"]["howMany"] = 0, _0x1adbb1["prototype"]["wasUndone"] = false, _0x1adbb1["create"] = function(_0x497ae0) {
      return new _0x1adbb1(_0x497ae0);
    }, _0x1adbb1["encode"] = function(_0x3eb2ad, _0x1b5fd1) {
      return _0x1b5fd1 || (_0x1b5fd1 = _0x3f90b9["create"]()), null != _0x3eb2ad["sourcePosition"] && Object["hasOwnProperty"]["call"](_0x3eb2ad, "sourcePosition") && _0x39c05c["Position"]["encode"](_0x3eb2ad["sourcePosition"], _0x1b5fd1["uint32"](10)["fork"]())["ldelim"](), null != _0x3eb2ad["targetPosition"] && Object["hasOwnProperty"]["call"](_0x3eb2ad, "targetPosition") && _0x39c05c["Position"]["encode"](_0x3eb2ad["targetPosition"], _0x1b5fd1["uint32"](18)["fork"]())["ldelim"](), null != _0x3eb2ad["graveyardPosition"] && Object["hasOwnProperty"]["call"](_0x3eb2ad, "graveyardPosition") && _0x39c05c["Position"]["encode"](_0x3eb2ad["graveyardPosition"], _0x1b5fd1["uint32"](26)["fork"]())["ldelim"](), null != _0x3eb2ad["howMany"] && Object["hasOwnProperty"]["call"](_0x3eb2ad, "howMany") && _0x1b5fd1["uint32"](32)["uint32"](_0x3eb2ad["howMany"]), null != _0x3eb2ad["wasUndone"] && Object["hasOwnProperty"]["call"](_0x3eb2ad, "wasUndone") && _0x1b5fd1["uint32"](40)["bool"](_0x3eb2ad["wasUndone"]), _0x1b5fd1;
    }, _0x1adbb1["encodeDelimited"] = function(_0x436f96, _0x3cbae3) {
      return this["encode"](_0x436f96, _0x3cbae3)["ldelim"]();
    }, _0x1adbb1["decode"] = function(_0x2eba32, _0xe9f068) {
      _0x2eba32 instanceof _0x2a3711 || (_0x2eba32 = _0x2a3711["create"](_0x2eba32));
      for (var _0xd0b6e5 = void 0 === _0xe9f068 ? _0x2eba32["len"] : _0x2eba32["pos"] + _0xe9f068, _0xe7e0f3 = new _0x39c05c["MergeOperation"](); _0x2eba32["pos"] < _0xd0b6e5; ) {
        var _0x5c6a87 = _0x2eba32["uint32"]();
        switch (_0x5c6a87 >>> 3) {
          case 1:
            _0xe7e0f3["sourcePosition"] = _0x39c05c["Position"]["decode"](_0x2eba32, _0x2eba32["uint32"]());
            break;
          case 2:
            _0xe7e0f3["targetPosition"] = _0x39c05c["Position"]["decode"](_0x2eba32, _0x2eba32["uint32"]());
            break;
          case 3:
            _0xe7e0f3["graveyardPosition"] = _0x39c05c["Position"]["decode"](_0x2eba32, _0x2eba32["uint32"]());
            break;
          case 4:
            _0xe7e0f3["howMany"] = _0x2eba32["uint32"]();
            break;
          case 5:
            _0xe7e0f3["wasUndone"] = _0x2eba32["bool"]();
            break;
          default:
            _0x2eba32["skipType"](7 & _0x5c6a87);
        }
      }
      return _0xe7e0f3;
    }, _0x1adbb1["decodeDelimited"] = function(_0x2a3fd8) {
      return _0x2a3fd8 instanceof _0x2a3711 || (_0x2a3fd8 = new _0x2a3711(_0x2a3fd8)), this["decode"](_0x2a3fd8, _0x2a3fd8["uint32"]());
    }, _0x1adbb1["verify"] = function(_0x1a16ae) {
      if ("object" != typeof _0x1a16ae || null === _0x1a16ae) return "object expected";
      var _0x298364;
      if (null != _0x1a16ae["sourcePosition"] && _0x1a16ae["hasOwnProperty"]("sourcePosition") && (_0x298364 = _0x39c05c["Position"]["verify"](_0x1a16ae["sourcePosition"]))) return "sourcePosition." + _0x298364;
      if (null != _0x1a16ae["targetPosition"] && _0x1a16ae["hasOwnProperty"]("targetPosition") && (_0x298364 = _0x39c05c["Position"]["verify"](_0x1a16ae["targetPosition"]))) return "targetPosition." + _0x298364;
      if (null != _0x1a16ae["graveyardPosition"] && _0x1a16ae["hasOwnProperty"]("graveyardPosition") && (_0x298364 = _0x39c05c["Position"]["verify"](_0x1a16ae["graveyardPosition"]))) return "graveyardPosition." + _0x298364;
      return null != _0x1a16ae["howMany"] && _0x1a16ae["hasOwnProperty"]("howMany") && !_0x2d424b["isInteger"](_0x1a16ae["howMany"]) ? "howMany: integer expected" : null != _0x1a16ae["wasUndone"] && _0x1a16ae["hasOwnProperty"]("wasUndone") && "boolean" != typeof _0x1a16ae["wasUndone"] ? "wasUndone: boolean expected" : null;
    }, _0x1adbb1["fromObject"] = function(_0x403ffb) {
      if (_0x403ffb instanceof _0x39c05c["MergeOperation"]) return _0x403ffb;
      var _0x4a6144 = new _0x39c05c["MergeOperation"]();
      if (null != _0x403ffb["sourcePosition"]) {
        if ("object" != typeof _0x403ffb["sourcePosition"]) throw TypeError(".MergeOperation.sourcePosition: object expected");
        _0x4a6144["sourcePosition"] = _0x39c05c["Position"]["fromObject"](_0x403ffb["sourcePosition"]);
      }
      if (null != _0x403ffb["targetPosition"]) {
        if ("object" != typeof _0x403ffb["targetPosition"]) throw TypeError(".MergeOperation.targetPosition: object expected");
        _0x4a6144["targetPosition"] = _0x39c05c["Position"]["fromObject"](_0x403ffb["targetPosition"]);
      }
      if (null != _0x403ffb["graveyardPosition"]) {
        if ("object" != typeof _0x403ffb["graveyardPosition"]) throw TypeError(".MergeOperation.graveyardPosition: object expected");
        _0x4a6144["graveyardPosition"] = _0x39c05c["Position"]["fromObject"](_0x403ffb["graveyardPosition"]);
      }
      return null != _0x403ffb["howMany"] && (_0x4a6144["howMany"] = _0x403ffb["howMany"] >>> 0), null != _0x403ffb["wasUndone"] && (_0x4a6144["wasUndone"] = Boolean(_0x403ffb["wasUndone"])), _0x4a6144;
    }, _0x1adbb1["toObject"] = function(_0x335d36, _0x554ef7) {
      _0x554ef7 || (_0x554ef7 = {});
      var _0xf70f35 = {};
      return _0x554ef7["defaults"] && (_0xf70f35["sourcePosition"] = null, _0xf70f35["targetPosition"] = null, _0xf70f35["graveyardPosition"] = null, _0xf70f35["howMany"] = 0, _0xf70f35["wasUndone"] = false), null != _0x335d36["sourcePosition"] && _0x335d36["hasOwnProperty"]("sourcePosition") && (_0xf70f35["sourcePosition"] = _0x39c05c["Position"]["toObject"](_0x335d36["sourcePosition"], _0x554ef7)), null != _0x335d36["targetPosition"] && _0x335d36["hasOwnProperty"]("targetPosition") && (_0xf70f35["targetPosition"] = _0x39c05c["Position"]["toObject"](_0x335d36["targetPosition"], _0x554ef7)), null != _0x335d36["graveyardPosition"] && _0x335d36["hasOwnProperty"]("graveyardPosition") && (_0xf70f35["graveyardPosition"] = _0x39c05c["Position"]["toObject"](_0x335d36["graveyardPosition"], _0x554ef7)), null != _0x335d36["howMany"] && _0x335d36["hasOwnProperty"]("howMany") && (_0xf70f35["howMany"] = _0x335d36["howMany"]), null != _0x335d36["wasUndone"] && _0x335d36["hasOwnProperty"]("wasUndone") && (_0xf70f35["wasUndone"] = _0x335d36["wasUndone"]), _0xf70f35;
    }, _0x1adbb1["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal2.default["util"]["toJSONOptions"]);
    }, _0x1adbb1["getTypeUrl"] = function(_0x2eb7de) {
      return void 0 === _0x2eb7de && (_0x2eb7de = "type.googleapis.com"), _0x2eb7de + "/MergeOperation";
    }, _0x1adbb1;
  }(), _0x39c05c["MoveOperation"] = function() {
    function _0x5a35e2(_0x3670bd) {
      if (_0x3670bd) {
        for (var _0x58cffe = Object["keys"](_0x3670bd), _0x56d358 = 0; _0x56d358 < _0x58cffe["length"]; ++_0x56d358) null != _0x3670bd[_0x58cffe[_0x56d358]] && (this[_0x58cffe[_0x56d358]] = _0x3670bd[_0x58cffe[_0x56d358]]);
      }
    }
    return _0x5a35e2["prototype"]["sourcePosition"] = null, _0x5a35e2["prototype"]["howMany"] = 0, _0x5a35e2["prototype"]["targetPosition"] = null, _0x5a35e2["prototype"]["wasUndone"] = false, _0x5a35e2["create"] = function(_0x11355c) {
      return new _0x5a35e2(_0x11355c);
    }, _0x5a35e2["encode"] = function(_0x342095, _0x5177d2) {
      return _0x5177d2 || (_0x5177d2 = _0x3f90b9["create"]()), null != _0x342095["sourcePosition"] && Object["hasOwnProperty"]["call"](_0x342095, "sourcePosition") && _0x39c05c["Position"]["encode"](_0x342095["sourcePosition"], _0x5177d2["uint32"](10)["fork"]())["ldelim"](), null != _0x342095["howMany"] && Object["hasOwnProperty"]["call"](_0x342095, "howMany") && _0x5177d2["uint32"](16)["uint32"](_0x342095["howMany"]), null != _0x342095["targetPosition"] && Object["hasOwnProperty"]["call"](_0x342095, "targetPosition") && _0x39c05c["Position"]["encode"](_0x342095["targetPosition"], _0x5177d2["uint32"](26)["fork"]())["ldelim"](), null != _0x342095["wasUndone"] && Object["hasOwnProperty"]["call"](_0x342095, "wasUndone") && _0x5177d2["uint32"](32)["bool"](_0x342095["wasUndone"]), _0x5177d2;
    }, _0x5a35e2["encodeDelimited"] = function(_0x2d5944, _0x140aae) {
      return this["encode"](_0x2d5944, _0x140aae)["ldelim"]();
    }, _0x5a35e2["decode"] = function(_0x41a921, _0x35ee7d) {
      _0x41a921 instanceof _0x2a3711 || (_0x41a921 = _0x2a3711["create"](_0x41a921));
      for (var _0x354cba = void 0 === _0x35ee7d ? _0x41a921["len"] : _0x41a921["pos"] + _0x35ee7d, _0xa7b773 = new _0x39c05c["MoveOperation"](); _0x41a921["pos"] < _0x354cba; ) {
        var _0x36b3bf = _0x41a921["uint32"]();
        switch (_0x36b3bf >>> 3) {
          case 1:
            _0xa7b773["sourcePosition"] = _0x39c05c["Position"]["decode"](_0x41a921, _0x41a921["uint32"]());
            break;
          case 2:
            _0xa7b773["howMany"] = _0x41a921["uint32"]();
            break;
          case 3:
            _0xa7b773["targetPosition"] = _0x39c05c["Position"]["decode"](_0x41a921, _0x41a921["uint32"]());
            break;
          case 4:
            _0xa7b773["wasUndone"] = _0x41a921["bool"]();
            break;
          default:
            _0x41a921["skipType"](7 & _0x36b3bf);
        }
      }
      return _0xa7b773;
    }, _0x5a35e2["decodeDelimited"] = function(_0x14dcac) {
      return _0x14dcac instanceof _0x2a3711 || (_0x14dcac = new _0x2a3711(_0x14dcac)), this["decode"](_0x14dcac, _0x14dcac["uint32"]());
    }, _0x5a35e2["verify"] = function(_0x656394) {
      if ("object" != typeof _0x656394 || null === _0x656394) return "object expected";
      var _0xdb3627;
      if (null != _0x656394["sourcePosition"] && _0x656394["hasOwnProperty"]("sourcePosition") && (_0xdb3627 = _0x39c05c["Position"]["verify"](_0x656394["sourcePosition"]))) return "sourcePosition." + _0xdb3627;
      if (null != _0x656394["howMany"] && _0x656394["hasOwnProperty"]("howMany") && !_0x2d424b["isInteger"](_0x656394["howMany"])) return "howMany: integer expected";
      if (null != _0x656394["targetPosition"] && _0x656394["hasOwnProperty"]("targetPosition") && (_0xdb3627 = _0x39c05c["Position"]["verify"](_0x656394["targetPosition"]))) return "targetPosition." + _0xdb3627;
      return null != _0x656394["wasUndone"] && _0x656394["hasOwnProperty"]("wasUndone") && "boolean" != typeof _0x656394["wasUndone"] ? "wasUndone: boolean expected" : null;
    }, _0x5a35e2["fromObject"] = function(_0x21025b) {
      if (_0x21025b instanceof _0x39c05c["MoveOperation"]) return _0x21025b;
      var _0x977db9 = new _0x39c05c["MoveOperation"]();
      if (null != _0x21025b["sourcePosition"]) {
        if ("object" != typeof _0x21025b["sourcePosition"]) throw TypeError(".MoveOperation.sourcePosition: object expected");
        _0x977db9["sourcePosition"] = _0x39c05c["Position"]["fromObject"](_0x21025b["sourcePosition"]);
      }
      if (null != _0x21025b["howMany"] && (_0x977db9["howMany"] = _0x21025b["howMany"] >>> 0), null != _0x21025b["targetPosition"]) {
        if ("object" != typeof _0x21025b["targetPosition"]) throw TypeError(".MoveOperation.targetPosition: object expected");
        _0x977db9["targetPosition"] = _0x39c05c["Position"]["fromObject"](_0x21025b["targetPosition"]);
      }
      return null != _0x21025b["wasUndone"] && (_0x977db9["wasUndone"] = Boolean(_0x21025b["wasUndone"])), _0x977db9;
    }, _0x5a35e2["toObject"] = function(_0x544696, _0x1a0c6a) {
      _0x1a0c6a || (_0x1a0c6a = {});
      var _0x180c77 = {};
      return _0x1a0c6a["defaults"] && (_0x180c77["sourcePosition"] = null, _0x180c77["howMany"] = 0, _0x180c77["targetPosition"] = null, _0x180c77["wasUndone"] = false), null != _0x544696["sourcePosition"] && _0x544696["hasOwnProperty"]("sourcePosition") && (_0x180c77["sourcePosition"] = _0x39c05c["Position"]["toObject"](_0x544696["sourcePosition"], _0x1a0c6a)), null != _0x544696["howMany"] && _0x544696["hasOwnProperty"]("howMany") && (_0x180c77["howMany"] = _0x544696["howMany"]), null != _0x544696["targetPosition"] && _0x544696["hasOwnProperty"]("targetPosition") && (_0x180c77["targetPosition"] = _0x39c05c["Position"]["toObject"](_0x544696["targetPosition"], _0x1a0c6a)), null != _0x544696["wasUndone"] && _0x544696["hasOwnProperty"]("wasUndone") && (_0x180c77["wasUndone"] = _0x544696["wasUndone"]), _0x180c77;
    }, _0x5a35e2["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal2.default["util"]["toJSONOptions"]);
    }, _0x5a35e2["getTypeUrl"] = function(_0x29ef4f) {
      return void 0 === _0x29ef4f && (_0x29ef4f = "type.googleapis.com"), _0x29ef4f + "/MoveOperation";
    }, _0x5a35e2;
  }(), _0x39c05c["RenameOperation"] = function() {
    function _0x5ee9bb(_0x5c3cd8) {
      if (_0x5c3cd8) {
        for (var _0x45a8a8 = Object["keys"](_0x5c3cd8), _0x5909dd = 0; _0x5909dd < _0x45a8a8["length"]; ++_0x5909dd) null != _0x5c3cd8[_0x45a8a8[_0x5909dd]] && (this[_0x45a8a8[_0x5909dd]] = _0x5c3cd8[_0x45a8a8[_0x5909dd]]);
      }
    }
    return _0x5ee9bb["prototype"]["position"] = null, _0x5ee9bb["prototype"]["oldName"] = "", _0x5ee9bb["prototype"]["newName"] = "", _0x5ee9bb["prototype"]["wasUndone"] = false, _0x5ee9bb["create"] = function(_0x155c91) {
      return new _0x5ee9bb(_0x155c91);
    }, _0x5ee9bb["encode"] = function(_0x5eb254, _0x31edd6) {
      return _0x31edd6 || (_0x31edd6 = _0x3f90b9["create"]()), null != _0x5eb254["position"] && Object["hasOwnProperty"]["call"](_0x5eb254, "position") && _0x39c05c["Position"]["encode"](_0x5eb254["position"], _0x31edd6["uint32"](10)["fork"]())["ldelim"](), null != _0x5eb254["oldName"] && Object["hasOwnProperty"]["call"](_0x5eb254, "oldName") && _0x31edd6["uint32"](18)["string"](_0x5eb254["oldName"]), null != _0x5eb254["newName"] && Object["hasOwnProperty"]["call"](_0x5eb254, "newName") && _0x31edd6["uint32"](26)["string"](_0x5eb254["newName"]), null != _0x5eb254["wasUndone"] && Object["hasOwnProperty"]["call"](_0x5eb254, "wasUndone") && _0x31edd6["uint32"](32)["bool"](_0x5eb254["wasUndone"]), _0x31edd6;
    }, _0x5ee9bb["encodeDelimited"] = function(_0x1a62bb, _0x467c82) {
      return this["encode"](_0x1a62bb, _0x467c82)["ldelim"]();
    }, _0x5ee9bb["decode"] = function(_0x483db3, _0x1039b) {
      _0x483db3 instanceof _0x2a3711 || (_0x483db3 = _0x2a3711["create"](_0x483db3));
      for (var _0x5314c9 = void 0 === _0x1039b ? _0x483db3["len"] : _0x483db3["pos"] + _0x1039b, _0x59877a = new _0x39c05c["RenameOperation"](); _0x483db3["pos"] < _0x5314c9; ) {
        var _0x452049 = _0x483db3["uint32"]();
        switch (_0x452049 >>> 3) {
          case 1:
            _0x59877a["position"] = _0x39c05c["Position"]["decode"](_0x483db3, _0x483db3["uint32"]());
            break;
          case 2:
            _0x59877a["oldName"] = _0x483db3["string"]();
            break;
          case 3:
            _0x59877a["newName"] = _0x483db3["string"]();
            break;
          case 4:
            _0x59877a["wasUndone"] = _0x483db3["bool"]();
            break;
          default:
            _0x483db3["skipType"](7 & _0x452049);
        }
      }
      return _0x59877a;
    }, _0x5ee9bb["decodeDelimited"] = function(_0x32e374) {
      return _0x32e374 instanceof _0x2a3711 || (_0x32e374 = new _0x2a3711(_0x32e374)), this["decode"](_0x32e374, _0x32e374["uint32"]());
    }, _0x5ee9bb["verify"] = function(_0x34b20a) {
      if ("object" != typeof _0x34b20a || null === _0x34b20a) return "object expected";
      if (null != _0x34b20a["position"] && _0x34b20a["hasOwnProperty"]("position")) {
        var _0xa5b701 = _0x39c05c["Position"]["verify"](_0x34b20a["position"]);
        if (_0xa5b701) return "position." + _0xa5b701;
      }
      return null != _0x34b20a["oldName"] && _0x34b20a["hasOwnProperty"]("oldName") && !_0x2d424b["isString"](_0x34b20a["oldName"]) ? "oldName: string expected" : null != _0x34b20a["newName"] && _0x34b20a["hasOwnProperty"]("newName") && !_0x2d424b["isString"](_0x34b20a["newName"]) ? "newName: string expected" : null != _0x34b20a["wasUndone"] && _0x34b20a["hasOwnProperty"]("wasUndone") && "boolean" != typeof _0x34b20a["wasUndone"] ? "wasUndone: boolean expected" : null;
    }, _0x5ee9bb["fromObject"] = function(_0xd21e68) {
      if (_0xd21e68 instanceof _0x39c05c["RenameOperation"]) return _0xd21e68;
      var _0x40953c = new _0x39c05c["RenameOperation"]();
      if (null != _0xd21e68["position"]) {
        if ("object" != typeof _0xd21e68["position"]) throw TypeError(".RenameOperation.position: object expected");
        _0x40953c["position"] = _0x39c05c["Position"]["fromObject"](_0xd21e68["position"]);
      }
      return null != _0xd21e68["oldName"] && (_0x40953c["oldName"] = String(_0xd21e68["oldName"])), null != _0xd21e68["newName"] && (_0x40953c["newName"] = String(_0xd21e68["newName"])), null != _0xd21e68["wasUndone"] && (_0x40953c["wasUndone"] = Boolean(_0xd21e68["wasUndone"])), _0x40953c;
    }, _0x5ee9bb["toObject"] = function(_0x103888, _0x525e66) {
      _0x525e66 || (_0x525e66 = {});
      var _0x48cfd8 = {};
      return _0x525e66["defaults"] && (_0x48cfd8["position"] = null, _0x48cfd8["oldName"] = "", _0x48cfd8["newName"] = "", _0x48cfd8["wasUndone"] = false), null != _0x103888["position"] && _0x103888["hasOwnProperty"]("position") && (_0x48cfd8["position"] = _0x39c05c["Position"]["toObject"](_0x103888["position"], _0x525e66)), null != _0x103888["oldName"] && _0x103888["hasOwnProperty"]("oldName") && (_0x48cfd8["oldName"] = _0x103888["oldName"]), null != _0x103888["newName"] && _0x103888["hasOwnProperty"]("newName") && (_0x48cfd8["newName"] = _0x103888["newName"]), null != _0x103888["wasUndone"] && _0x103888["hasOwnProperty"]("wasUndone") && (_0x48cfd8["wasUndone"] = _0x103888["wasUndone"]), _0x48cfd8;
    }, _0x5ee9bb["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal2.default["util"]["toJSONOptions"]);
    }, _0x5ee9bb["getTypeUrl"] = function(_0x24eb01) {
      return void 0 === _0x24eb01 && (_0x24eb01 = "type.googleapis.com"), _0x24eb01 + "/RenameOperation";
    }, _0x5ee9bb;
  }(), _0x39c05c["RootAttributeOperation"] = function() {
    function _0x15cdca(_0x4a899a) {
      if (_0x4a899a) {
        for (var _0x272ae0 = Object["keys"](_0x4a899a), _0x3ff85a = 0; _0x3ff85a < _0x272ae0["length"]; ++_0x3ff85a) null != _0x4a899a[_0x272ae0[_0x3ff85a]] && (this[_0x272ae0[_0x3ff85a]] = _0x4a899a[_0x272ae0[_0x3ff85a]]);
      }
    }
    return _0x15cdca["prototype"]["root"] = "", _0x15cdca["prototype"]["key"] = "", _0x15cdca["prototype"]["oldValueBoolean"] = false, _0x15cdca["prototype"]["oldValueJson"] = "", _0x15cdca["prototype"]["newValueBoolean"] = false, _0x15cdca["prototype"]["newValueJson"] = "", _0x15cdca["prototype"]["wasUndone"] = false, _0x15cdca["create"] = function(_0x58d3d2) {
      return new _0x15cdca(_0x58d3d2);
    }, _0x15cdca["encode"] = function(_0x55b86e, _0x43c527) {
      return _0x43c527 || (_0x43c527 = _0x3f90b9["create"]()), null != _0x55b86e["root"] && Object["hasOwnProperty"]["call"](_0x55b86e, "root") && _0x43c527["uint32"](10)["string"](_0x55b86e["root"]), null != _0x55b86e["key"] && Object["hasOwnProperty"]["call"](_0x55b86e, "key") && _0x43c527["uint32"](18)["string"](_0x55b86e["key"]), null != _0x55b86e["oldValueBoolean"] && Object["hasOwnProperty"]["call"](_0x55b86e, "oldValueBoolean") && _0x43c527["uint32"](24)["bool"](_0x55b86e["oldValueBoolean"]), null != _0x55b86e["oldValueJson"] && Object["hasOwnProperty"]["call"](_0x55b86e, "oldValueJson") && _0x43c527["uint32"](34)["string"](_0x55b86e["oldValueJson"]), null != _0x55b86e["newValueBoolean"] && Object["hasOwnProperty"]["call"](_0x55b86e, "newValueBoolean") && _0x43c527["uint32"](40)["bool"](_0x55b86e["newValueBoolean"]), null != _0x55b86e["newValueJson"] && Object["hasOwnProperty"]["call"](_0x55b86e, "newValueJson") && _0x43c527["uint32"](50)["string"](_0x55b86e["newValueJson"]), null != _0x55b86e["wasUndone"] && Object["hasOwnProperty"]["call"](_0x55b86e, "wasUndone") && _0x43c527["uint32"](56)["bool"](_0x55b86e["wasUndone"]), _0x43c527;
    }, _0x15cdca["encodeDelimited"] = function(_0x38db81, _0x345a73) {
      return this["encode"](_0x38db81, _0x345a73)["ldelim"]();
    }, _0x15cdca["decode"] = function(_0x4c1e50, _0x1a218a) {
      _0x4c1e50 instanceof _0x2a3711 || (_0x4c1e50 = _0x2a3711["create"](_0x4c1e50));
      for (var _0x5447c2 = void 0 === _0x1a218a ? _0x4c1e50["len"] : _0x4c1e50["pos"] + _0x1a218a, _0xf7c3dd = new _0x39c05c["RootAttributeOperation"](); _0x4c1e50["pos"] < _0x5447c2; ) {
        var _0x5e087a = _0x4c1e50["uint32"]();
        switch (_0x5e087a >>> 3) {
          case 1:
            _0xf7c3dd["root"] = _0x4c1e50["string"]();
            break;
          case 2:
            _0xf7c3dd["key"] = _0x4c1e50["string"]();
            break;
          case 3:
            _0xf7c3dd["oldValueBoolean"] = _0x4c1e50["bool"]();
            break;
          case 4:
            _0xf7c3dd["oldValueJson"] = _0x4c1e50["string"]();
            break;
          case 5:
            _0xf7c3dd["newValueBoolean"] = _0x4c1e50["bool"]();
            break;
          case 6:
            _0xf7c3dd["newValueJson"] = _0x4c1e50["string"]();
            break;
          case 7:
            _0xf7c3dd["wasUndone"] = _0x4c1e50["bool"]();
            break;
          default:
            _0x4c1e50["skipType"](7 & _0x5e087a);
        }
      }
      return _0xf7c3dd;
    }, _0x15cdca["decodeDelimited"] = function(_0x1f1949) {
      return _0x1f1949 instanceof _0x2a3711 || (_0x1f1949 = new _0x2a3711(_0x1f1949)), this["decode"](_0x1f1949, _0x1f1949["uint32"]());
    }, _0x15cdca["verify"] = function(_0x4645c0) {
      return "object" != typeof _0x4645c0 || null === _0x4645c0 ? "object expected" : null != _0x4645c0["root"] && _0x4645c0["hasOwnProperty"]("root") && !_0x2d424b["isString"](_0x4645c0["root"]) ? "root: string expected" : null != _0x4645c0["key"] && _0x4645c0["hasOwnProperty"]("key") && !_0x2d424b["isString"](_0x4645c0["key"]) ? "key: string expected" : null != _0x4645c0["oldValueBoolean"] && _0x4645c0["hasOwnProperty"]("oldValueBoolean") && "boolean" != typeof _0x4645c0["oldValueBoolean"] ? "oldValueBoolean: boolean expected" : null != _0x4645c0["oldValueJson"] && _0x4645c0["hasOwnProperty"]("oldValueJson") && !_0x2d424b["isString"](_0x4645c0["oldValueJson"]) ? "oldValueJson: string expected" : null != _0x4645c0["newValueBoolean"] && _0x4645c0["hasOwnProperty"]("newValueBoolean") && "boolean" != typeof _0x4645c0["newValueBoolean"] ? "newValueBoolean: boolean expected" : null != _0x4645c0["newValueJson"] && _0x4645c0["hasOwnProperty"]("newValueJson") && !_0x2d424b["isString"](_0x4645c0["newValueJson"]) ? "newValueJson: string expected" : null != _0x4645c0["wasUndone"] && _0x4645c0["hasOwnProperty"]("wasUndone") && "boolean" != typeof _0x4645c0["wasUndone"] ? "wasUndone: boolean expected" : null;
    }, _0x15cdca["fromObject"] = function(_0x38bd99) {
      if (_0x38bd99 instanceof _0x39c05c["RootAttributeOperation"]) return _0x38bd99;
      var _0x26f217 = new _0x39c05c["RootAttributeOperation"]();
      return null != _0x38bd99["root"] && (_0x26f217["root"] = String(_0x38bd99["root"])), null != _0x38bd99["key"] && (_0x26f217["key"] = String(_0x38bd99["key"])), null != _0x38bd99["oldValueBoolean"] && (_0x26f217["oldValueBoolean"] = Boolean(_0x38bd99["oldValueBoolean"])), null != _0x38bd99["oldValueJson"] && (_0x26f217["oldValueJson"] = String(_0x38bd99["oldValueJson"])), null != _0x38bd99["newValueBoolean"] && (_0x26f217["newValueBoolean"] = Boolean(_0x38bd99["newValueBoolean"])), null != _0x38bd99["newValueJson"] && (_0x26f217["newValueJson"] = String(_0x38bd99["newValueJson"])), null != _0x38bd99["wasUndone"] && (_0x26f217["wasUndone"] = Boolean(_0x38bd99["wasUndone"])), _0x26f217;
    }, _0x15cdca["toObject"] = function(_0x45a443, _0x14288c) {
      _0x14288c || (_0x14288c = {});
      var _0x747731 = {};
      return _0x14288c["defaults"] && (_0x747731["root"] = "", _0x747731["key"] = "", _0x747731["oldValueBoolean"] = false, _0x747731["oldValueJson"] = "", _0x747731["newValueBoolean"] = false, _0x747731["newValueJson"] = "", _0x747731["wasUndone"] = false), null != _0x45a443["root"] && _0x45a443["hasOwnProperty"]("root") && (_0x747731["root"] = _0x45a443["root"]), null != _0x45a443["key"] && _0x45a443["hasOwnProperty"]("key") && (_0x747731["key"] = _0x45a443["key"]), null != _0x45a443["oldValueBoolean"] && _0x45a443["hasOwnProperty"]("oldValueBoolean") && (_0x747731["oldValueBoolean"] = _0x45a443["oldValueBoolean"]), null != _0x45a443["oldValueJson"] && _0x45a443["hasOwnProperty"]("oldValueJson") && (_0x747731["oldValueJson"] = _0x45a443["oldValueJson"]), null != _0x45a443["newValueBoolean"] && _0x45a443["hasOwnProperty"]("newValueBoolean") && (_0x747731["newValueBoolean"] = _0x45a443["newValueBoolean"]), null != _0x45a443["newValueJson"] && _0x45a443["hasOwnProperty"]("newValueJson") && (_0x747731["newValueJson"] = _0x45a443["newValueJson"]), null != _0x45a443["wasUndone"] && _0x45a443["hasOwnProperty"]("wasUndone") && (_0x747731["wasUndone"] = _0x45a443["wasUndone"]), _0x747731;
    }, _0x15cdca["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal2.default["util"]["toJSONOptions"]);
    }, _0x15cdca["getTypeUrl"] = function(_0x8e8dc3) {
      return void 0 === _0x8e8dc3 && (_0x8e8dc3 = "type.googleapis.com"), _0x8e8dc3 + "/RootAttributeOperation";
    }, _0x15cdca;
  }(), _0x39c05c["RootOperation"] = function() {
    function _0x5ddb86(_0x30a8fe) {
      if (_0x30a8fe) {
        for (var _0x211122 = Object["keys"](_0x30a8fe), _0x1ac68a = 0; _0x1ac68a < _0x211122["length"]; ++_0x1ac68a) null != _0x30a8fe[_0x211122[_0x1ac68a]] && (this[_0x211122[_0x1ac68a]] = _0x30a8fe[_0x211122[_0x1ac68a]]);
      }
    }
    return _0x5ddb86["prototype"]["rootName"] = "", _0x5ddb86["prototype"]["elementName"] = "", _0x5ddb86["prototype"]["isAdd"] = false, _0x5ddb86["prototype"]["wasUndone"] = false, _0x5ddb86["create"] = function(_0x391267) {
      return new _0x5ddb86(_0x391267);
    }, _0x5ddb86["encode"] = function(_0x3fd20a, _0x2d6ec7) {
      return _0x2d6ec7 || (_0x2d6ec7 = _0x3f90b9["create"]()), null != _0x3fd20a["rootName"] && Object["hasOwnProperty"]["call"](_0x3fd20a, "rootName") && _0x2d6ec7["uint32"](10)["string"](_0x3fd20a["rootName"]), null != _0x3fd20a["elementName"] && Object["hasOwnProperty"]["call"](_0x3fd20a, "elementName") && _0x2d6ec7["uint32"](18)["string"](_0x3fd20a["elementName"]), null != _0x3fd20a["isAdd"] && Object["hasOwnProperty"]["call"](_0x3fd20a, "isAdd") && _0x2d6ec7["uint32"](24)["bool"](_0x3fd20a["isAdd"]), null != _0x3fd20a["wasUndone"] && Object["hasOwnProperty"]["call"](_0x3fd20a, "wasUndone") && _0x2d6ec7["uint32"](32)["bool"](_0x3fd20a["wasUndone"]), _0x2d6ec7;
    }, _0x5ddb86["encodeDelimited"] = function(_0x85e8fe, _0x7b51d7) {
      return this["encode"](_0x85e8fe, _0x7b51d7)["ldelim"]();
    }, _0x5ddb86["decode"] = function(_0x2761cb, _0x476a07) {
      _0x2761cb instanceof _0x2a3711 || (_0x2761cb = _0x2a3711["create"](_0x2761cb));
      for (var _0x2def47 = void 0 === _0x476a07 ? _0x2761cb["len"] : _0x2761cb["pos"] + _0x476a07, _0x11eeee = new _0x39c05c["RootOperation"](); _0x2761cb["pos"] < _0x2def47; ) {
        var _0x190f14 = _0x2761cb["uint32"]();
        switch (_0x190f14 >>> 3) {
          case 1:
            _0x11eeee["rootName"] = _0x2761cb["string"]();
            break;
          case 2:
            _0x11eeee["elementName"] = _0x2761cb["string"]();
            break;
          case 3:
            _0x11eeee["isAdd"] = _0x2761cb["bool"]();
            break;
          case 4:
            _0x11eeee["wasUndone"] = _0x2761cb["bool"]();
            break;
          default:
            _0x2761cb["skipType"](7 & _0x190f14);
        }
      }
      return _0x11eeee;
    }, _0x5ddb86["decodeDelimited"] = function(_0x3ee972) {
      return _0x3ee972 instanceof _0x2a3711 || (_0x3ee972 = new _0x2a3711(_0x3ee972)), this["decode"](_0x3ee972, _0x3ee972["uint32"]());
    }, _0x5ddb86["verify"] = function(_0x332af3) {
      return "object" != typeof _0x332af3 || null === _0x332af3 ? "object expected" : null != _0x332af3["rootName"] && _0x332af3["hasOwnProperty"]("rootName") && !_0x2d424b["isString"](_0x332af3["rootName"]) ? "rootName: string expected" : null != _0x332af3["elementName"] && _0x332af3["hasOwnProperty"]("elementName") && !_0x2d424b["isString"](_0x332af3["elementName"]) ? "elementName: string expected" : null != _0x332af3["isAdd"] && _0x332af3["hasOwnProperty"]("isAdd") && "boolean" != typeof _0x332af3["isAdd"] ? "isAdd: boolean expected" : null != _0x332af3["wasUndone"] && _0x332af3["hasOwnProperty"]("wasUndone") && "boolean" != typeof _0x332af3["wasUndone"] ? "wasUndone: boolean expected" : null;
    }, _0x5ddb86["fromObject"] = function(_0x53f5de) {
      if (_0x53f5de instanceof _0x39c05c["RootOperation"]) return _0x53f5de;
      var _0x46dd92 = new _0x39c05c["RootOperation"]();
      return null != _0x53f5de["rootName"] && (_0x46dd92["rootName"] = String(_0x53f5de["rootName"])), null != _0x53f5de["elementName"] && (_0x46dd92["elementName"] = String(_0x53f5de["elementName"])), null != _0x53f5de["isAdd"] && (_0x46dd92["isAdd"] = Boolean(_0x53f5de["isAdd"])), null != _0x53f5de["wasUndone"] && (_0x46dd92["wasUndone"] = Boolean(_0x53f5de["wasUndone"])), _0x46dd92;
    }, _0x5ddb86["toObject"] = function(_0x5e5291, _0x1edf5d) {
      _0x1edf5d || (_0x1edf5d = {});
      var _0x488154 = {};
      return _0x1edf5d["defaults"] && (_0x488154["rootName"] = "", _0x488154["elementName"] = "", _0x488154["isAdd"] = false, _0x488154["wasUndone"] = false), null != _0x5e5291["rootName"] && _0x5e5291["hasOwnProperty"]("rootName") && (_0x488154["rootName"] = _0x5e5291["rootName"]), null != _0x5e5291["elementName"] && _0x5e5291["hasOwnProperty"]("elementName") && (_0x488154["elementName"] = _0x5e5291["elementName"]), null != _0x5e5291["isAdd"] && _0x5e5291["hasOwnProperty"]("isAdd") && (_0x488154["isAdd"] = _0x5e5291["isAdd"]), null != _0x5e5291["wasUndone"] && _0x5e5291["hasOwnProperty"]("wasUndone") && (_0x488154["wasUndone"] = _0x5e5291["wasUndone"]), _0x488154;
    }, _0x5ddb86["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal2.default["util"]["toJSONOptions"]);
    }, _0x5ddb86["getTypeUrl"] = function(_0x361bf2) {
      return void 0 === _0x361bf2 && (_0x361bf2 = "type.googleapis.com"), _0x361bf2 + "/RootOperation";
    }, _0x5ddb86;
  }(), _0x39c05c["SplitOperation"] = function() {
    function _0x3f84a3(_0x3b575e) {
      if (_0x3b575e) {
        for (var _0x4b10d7 = Object["keys"](_0x3b575e), _0x4f4691 = 0; _0x4f4691 < _0x4b10d7["length"]; ++_0x4f4691) null != _0x3b575e[_0x4b10d7[_0x4f4691]] && (this[_0x4b10d7[_0x4f4691]] = _0x3b575e[_0x4b10d7[_0x4f4691]]);
      }
    }
    return _0x3f84a3["prototype"]["splitPosition"] = null, _0x3f84a3["prototype"]["graveyardPosition"] = null, _0x3f84a3["prototype"]["howMany"] = 0, _0x3f84a3["prototype"]["insertionPosition"] = null, _0x3f84a3["prototype"]["wasUndone"] = false, _0x3f84a3["create"] = function(_0x16e234) {
      return new _0x3f84a3(_0x16e234);
    }, _0x3f84a3["encode"] = function(_0x5ea558, _0x539d2c) {
      return _0x539d2c || (_0x539d2c = _0x3f90b9["create"]()), null != _0x5ea558["splitPosition"] && Object["hasOwnProperty"]["call"](_0x5ea558, "splitPosition") && _0x39c05c["Position"]["encode"](_0x5ea558["splitPosition"], _0x539d2c["uint32"](10)["fork"]())["ldelim"](), null != _0x5ea558["graveyardPosition"] && Object["hasOwnProperty"]["call"](_0x5ea558, "graveyardPosition") && _0x39c05c["Position"]["encode"](_0x5ea558["graveyardPosition"], _0x539d2c["uint32"](18)["fork"]())["ldelim"](), null != _0x5ea558["howMany"] && Object["hasOwnProperty"]["call"](_0x5ea558, "howMany") && _0x539d2c["uint32"](24)["uint32"](_0x5ea558["howMany"]), null != _0x5ea558["insertionPosition"] && Object["hasOwnProperty"]["call"](_0x5ea558, "insertionPosition") && _0x39c05c["Position"]["encode"](_0x5ea558["insertionPosition"], _0x539d2c["uint32"](34)["fork"]())["ldelim"](), null != _0x5ea558["wasUndone"] && Object["hasOwnProperty"]["call"](_0x5ea558, "wasUndone") && _0x539d2c["uint32"](40)["bool"](_0x5ea558["wasUndone"]), _0x539d2c;
    }, _0x3f84a3["encodeDelimited"] = function(_0xd4037c, _0xa0cef4) {
      return this["encode"](_0xd4037c, _0xa0cef4)["ldelim"]();
    }, _0x3f84a3["decode"] = function(_0x10cde6, _0xa922cd) {
      _0x10cde6 instanceof _0x2a3711 || (_0x10cde6 = _0x2a3711["create"](_0x10cde6));
      for (var _0x2c61a4 = void 0 === _0xa922cd ? _0x10cde6["len"] : _0x10cde6["pos"] + _0xa922cd, _0x11f5d9 = new _0x39c05c["SplitOperation"](); _0x10cde6["pos"] < _0x2c61a4; ) {
        var _0x2bf4c7 = _0x10cde6["uint32"]();
        switch (_0x2bf4c7 >>> 3) {
          case 1:
            _0x11f5d9["splitPosition"] = _0x39c05c["Position"]["decode"](_0x10cde6, _0x10cde6["uint32"]());
            break;
          case 2:
            _0x11f5d9["graveyardPosition"] = _0x39c05c["Position"]["decode"](_0x10cde6, _0x10cde6["uint32"]());
            break;
          case 3:
            _0x11f5d9["howMany"] = _0x10cde6["uint32"]();
            break;
          case 4:
            _0x11f5d9["insertionPosition"] = _0x39c05c["Position"]["decode"](_0x10cde6, _0x10cde6["uint32"]());
            break;
          case 5:
            _0x11f5d9["wasUndone"] = _0x10cde6["bool"]();
            break;
          default:
            _0x10cde6["skipType"](7 & _0x2bf4c7);
        }
      }
      return _0x11f5d9;
    }, _0x3f84a3["decodeDelimited"] = function(_0x2aeba1) {
      return _0x2aeba1 instanceof _0x2a3711 || (_0x2aeba1 = new _0x2a3711(_0x2aeba1)), this["decode"](_0x2aeba1, _0x2aeba1["uint32"]());
    }, _0x3f84a3["verify"] = function(_0x582c68) {
      if ("object" != typeof _0x582c68 || null === _0x582c68) return "object expected";
      var _0x57cd7e;
      if (null != _0x582c68["splitPosition"] && _0x582c68["hasOwnProperty"]("splitPosition") && (_0x57cd7e = _0x39c05c["Position"]["verify"](_0x582c68["splitPosition"]))) return "splitPosition." + _0x57cd7e;
      if (null != _0x582c68["graveyardPosition"] && _0x582c68["hasOwnProperty"]("graveyardPosition") && (_0x57cd7e = _0x39c05c["Position"]["verify"](_0x582c68["graveyardPosition"]))) return "graveyardPosition." + _0x57cd7e;
      if (null != _0x582c68["howMany"] && _0x582c68["hasOwnProperty"]("howMany") && !_0x2d424b["isInteger"](_0x582c68["howMany"])) return "howMany: integer expected";
      if (null != _0x582c68["insertionPosition"] && _0x582c68["hasOwnProperty"]("insertionPosition") && (_0x57cd7e = _0x39c05c["Position"]["verify"](_0x582c68["insertionPosition"]))) return "insertionPosition." + _0x57cd7e;
      return null != _0x582c68["wasUndone"] && _0x582c68["hasOwnProperty"]("wasUndone") && "boolean" != typeof _0x582c68["wasUndone"] ? "wasUndone: boolean expected" : null;
    }, _0x3f84a3["fromObject"] = function(_0x52e8e9) {
      if (_0x52e8e9 instanceof _0x39c05c["SplitOperation"]) return _0x52e8e9;
      var _0x1289e0 = new _0x39c05c["SplitOperation"]();
      if (null != _0x52e8e9["splitPosition"]) {
        if ("object" != typeof _0x52e8e9["splitPosition"]) throw TypeError(".SplitOperation.splitPosition: object expected");
        _0x1289e0["splitPosition"] = _0x39c05c["Position"]["fromObject"](_0x52e8e9["splitPosition"]);
      }
      if (null != _0x52e8e9["graveyardPosition"]) {
        if ("object" != typeof _0x52e8e9["graveyardPosition"]) throw TypeError(".SplitOperation.graveyardPosition: object expected");
        _0x1289e0["graveyardPosition"] = _0x39c05c["Position"]["fromObject"](_0x52e8e9["graveyardPosition"]);
      }
      if (null != _0x52e8e9["howMany"] && (_0x1289e0["howMany"] = _0x52e8e9["howMany"] >>> 0), null != _0x52e8e9["insertionPosition"]) {
        if ("object" != typeof _0x52e8e9["insertionPosition"]) throw TypeError(".SplitOperation.insertionPosition: object expected");
        _0x1289e0["insertionPosition"] = _0x39c05c["Position"]["fromObject"](_0x52e8e9["insertionPosition"]);
      }
      return null != _0x52e8e9["wasUndone"] && (_0x1289e0["wasUndone"] = Boolean(_0x52e8e9["wasUndone"])), _0x1289e0;
    }, _0x3f84a3["toObject"] = function(_0x3e9186, _0x2b1d56) {
      _0x2b1d56 || (_0x2b1d56 = {});
      var _0x310ece = {};
      return _0x2b1d56["defaults"] && (_0x310ece["splitPosition"] = null, _0x310ece["graveyardPosition"] = null, _0x310ece["howMany"] = 0, _0x310ece["insertionPosition"] = null, _0x310ece["wasUndone"] = false), null != _0x3e9186["splitPosition"] && _0x3e9186["hasOwnProperty"]("splitPosition") && (_0x310ece["splitPosition"] = _0x39c05c["Position"]["toObject"](_0x3e9186["splitPosition"], _0x2b1d56)), null != _0x3e9186["graveyardPosition"] && _0x3e9186["hasOwnProperty"]("graveyardPosition") && (_0x310ece["graveyardPosition"] = _0x39c05c["Position"]["toObject"](_0x3e9186["graveyardPosition"], _0x2b1d56)), null != _0x3e9186["howMany"] && _0x3e9186["hasOwnProperty"]("howMany") && (_0x310ece["howMany"] = _0x3e9186["howMany"]), null != _0x3e9186["insertionPosition"] && _0x3e9186["hasOwnProperty"]("insertionPosition") && (_0x310ece["insertionPosition"] = _0x39c05c["Position"]["toObject"](_0x3e9186["insertionPosition"], _0x2b1d56)), null != _0x3e9186["wasUndone"] && _0x3e9186["hasOwnProperty"]("wasUndone") && (_0x310ece["wasUndone"] = _0x3e9186["wasUndone"]), _0x310ece;
    }, _0x3f84a3["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal2.default["util"]["toJSONOptions"]);
    }, _0x3f84a3["getTypeUrl"] = function(_0x372e6c) {
      return void 0 === _0x372e6c && (_0x372e6c = "type.googleapis.com"), _0x372e6c + "/SplitOperation";
    }, _0x3f84a3;
  }(), _0x39c05c["Position"] = function() {
    function _0x376d26(_0xcbbca2) {
      if (this["path"] = [], _0xcbbca2) {
        for (var _0x141c09 = Object["keys"](_0xcbbca2), _0x5bd627 = 0; _0x5bd627 < _0x141c09["length"]; ++_0x5bd627) null != _0xcbbca2[_0x141c09[_0x5bd627]] && (this[_0x141c09[_0x5bd627]] = _0xcbbca2[_0x141c09[_0x5bd627]]);
      }
    }
    return _0x376d26["prototype"]["root"] = "", _0x376d26["prototype"]["rootMain"] = false, _0x376d26["prototype"]["rootGraveyard"] = false, _0x376d26["prototype"]["path"] = _0x2d424b["emptyArray"], _0x376d26["prototype"]["stickiness"] = "", _0x376d26["create"] = function(_0x33c11b) {
      return new _0x376d26(_0x33c11b);
    }, _0x376d26["encode"] = function(_0x57b814, _0x147fdd) {
      if (_0x147fdd || (_0x147fdd = _0x3f90b9["create"]()), null != _0x57b814["root"] && Object["hasOwnProperty"]["call"](_0x57b814, "root") && _0x147fdd["uint32"](10)["string"](_0x57b814["root"]), null != _0x57b814["rootMain"] && Object["hasOwnProperty"]["call"](_0x57b814, "rootMain") && _0x147fdd["uint32"](16)["bool"](_0x57b814["rootMain"]), null != _0x57b814["rootGraveyard"] && Object["hasOwnProperty"]["call"](_0x57b814, "rootGraveyard") && _0x147fdd["uint32"](24)["bool"](_0x57b814["rootGraveyard"]), null != _0x57b814["path"] && _0x57b814["path"]["length"]) {
        _0x147fdd["uint32"](34)["fork"]();
        for (var _0x4f778d = 0; _0x4f778d < _0x57b814["path"]["length"]; ++_0x4f778d) _0x147fdd["uint32"](_0x57b814["path"][_0x4f778d]);
        _0x147fdd["ldelim"]();
      }
      return null != _0x57b814["stickiness"] && Object["hasOwnProperty"]["call"](_0x57b814, "stickiness") && _0x147fdd["uint32"](42)["string"](_0x57b814["stickiness"]), _0x147fdd;
    }, _0x376d26["encodeDelimited"] = function(_0x39eb45, _0x4bf10c) {
      return this["encode"](_0x39eb45, _0x4bf10c)["ldelim"]();
    }, _0x376d26["decode"] = function(_0x19c0c8, _0x13f6d0) {
      _0x19c0c8 instanceof _0x2a3711 || (_0x19c0c8 = _0x2a3711["create"](_0x19c0c8));
      for (var _0x24b91a = void 0 === _0x13f6d0 ? _0x19c0c8["len"] : _0x19c0c8["pos"] + _0x13f6d0, _0x5a7ed6 = new _0x39c05c["Position"](); _0x19c0c8["pos"] < _0x24b91a; ) {
        var _0x2d0e4b = _0x19c0c8["uint32"]();
        switch (_0x2d0e4b >>> 3) {
          case 1:
            _0x5a7ed6["root"] = _0x19c0c8["string"]();
            break;
          case 2:
            _0x5a7ed6["rootMain"] = _0x19c0c8["bool"]();
            break;
          case 3:
            _0x5a7ed6["rootGraveyard"] = _0x19c0c8["bool"]();
            break;
          case 4:
            if (_0x5a7ed6["path"] && _0x5a7ed6["path"]["length"] || (_0x5a7ed6["path"] = []), 2 == (7 & _0x2d0e4b)) {
              for (var _0x3c83f1 = _0x19c0c8["uint32"]() + _0x19c0c8["pos"]; _0x19c0c8["pos"] < _0x3c83f1; ) _0x5a7ed6["path"]["push"](_0x19c0c8["uint32"]());
            } else _0x5a7ed6["path"]["push"](_0x19c0c8["uint32"]());
            break;
          case 5:
            _0x5a7ed6["stickiness"] = _0x19c0c8["string"]();
            break;
          default:
            _0x19c0c8["skipType"](7 & _0x2d0e4b);
        }
      }
      return _0x5a7ed6;
    }, _0x376d26["decodeDelimited"] = function(_0x7b6be2) {
      return _0x7b6be2 instanceof _0x2a3711 || (_0x7b6be2 = new _0x2a3711(_0x7b6be2)), this["decode"](_0x7b6be2, _0x7b6be2["uint32"]());
    }, _0x376d26["verify"] = function(_0x35f8c5) {
      if ("object" != typeof _0x35f8c5 || null === _0x35f8c5) return "object expected";
      if (null != _0x35f8c5["root"] && _0x35f8c5["hasOwnProperty"]("root") && !_0x2d424b["isString"](_0x35f8c5["root"])) return "root: string expected";
      if (null != _0x35f8c5["rootMain"] && _0x35f8c5["hasOwnProperty"]("rootMain") && "boolean" != typeof _0x35f8c5["rootMain"]) return "rootMain: boolean expected";
      if (null != _0x35f8c5["rootGraveyard"] && _0x35f8c5["hasOwnProperty"]("rootGraveyard") && "boolean" != typeof _0x35f8c5["rootGraveyard"]) return "rootGraveyard: boolean expected";
      if (null != _0x35f8c5["path"] && _0x35f8c5["hasOwnProperty"]("path")) {
        if (!Array["isArray"](_0x35f8c5["path"])) return "path: array expected";
        for (var _0x4e67d7 = 0; _0x4e67d7 < _0x35f8c5["path"]["length"]; ++_0x4e67d7) if (!_0x2d424b["isInteger"](_0x35f8c5["path"][_0x4e67d7])) return "path: integer[] expected";
      }
      return null != _0x35f8c5["stickiness"] && _0x35f8c5["hasOwnProperty"]("stickiness") && !_0x2d424b["isString"](_0x35f8c5["stickiness"]) ? "stickiness: string expected" : null;
    }, _0x376d26["fromObject"] = function(_0x3d973d) {
      if (_0x3d973d instanceof _0x39c05c["Position"]) return _0x3d973d;
      var _0x2790e5 = new _0x39c05c["Position"]();
      if (null != _0x3d973d["root"] && (_0x2790e5["root"] = String(_0x3d973d["root"])), null != _0x3d973d["rootMain"] && (_0x2790e5["rootMain"] = Boolean(_0x3d973d["rootMain"])), null != _0x3d973d["rootGraveyard"] && (_0x2790e5["rootGraveyard"] = Boolean(_0x3d973d["rootGraveyard"])), _0x3d973d["path"]) {
        if (!Array["isArray"](_0x3d973d["path"])) throw TypeError(".Position.path: array expected");
        _0x2790e5["path"] = [];
        for (var _0x7e89aa = 0; _0x7e89aa < _0x3d973d["path"]["length"]; ++_0x7e89aa) _0x2790e5["path"][_0x7e89aa] = _0x3d973d["path"][_0x7e89aa] >>> 0;
      }
      return null != _0x3d973d["stickiness"] && (_0x2790e5["stickiness"] = String(_0x3d973d["stickiness"])), _0x2790e5;
    }, _0x376d26["toObject"] = function(_0x423f86, _0x38635d) {
      _0x38635d || (_0x38635d = {});
      var _0x2bbd78 = {};
      if ((_0x38635d["arrays"] || _0x38635d["defaults"]) && (_0x2bbd78["path"] = []), _0x38635d["defaults"] && (_0x2bbd78["root"] = "", _0x2bbd78["rootMain"] = false, _0x2bbd78["rootGraveyard"] = false, _0x2bbd78["stickiness"] = ""), null != _0x423f86["root"] && _0x423f86["hasOwnProperty"]("root") && (_0x2bbd78["root"] = _0x423f86["root"]), null != _0x423f86["rootMain"] && _0x423f86["hasOwnProperty"]("rootMain") && (_0x2bbd78["rootMain"] = _0x423f86["rootMain"]), null != _0x423f86["rootGraveyard"] && _0x423f86["hasOwnProperty"]("rootGraveyard") && (_0x2bbd78["rootGraveyard"] = _0x423f86["rootGraveyard"]), _0x423f86["path"] && _0x423f86["path"]["length"]) {
        _0x2bbd78["path"] = [];
        for (var _0x20341b = 0; _0x20341b < _0x423f86["path"]["length"]; ++_0x20341b) _0x2bbd78["path"][_0x20341b] = _0x423f86["path"][_0x20341b];
      }
      return null != _0x423f86["stickiness"] && _0x423f86["hasOwnProperty"]("stickiness") && (_0x2bbd78["stickiness"] = _0x423f86["stickiness"]), _0x2bbd78;
    }, _0x376d26["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal2.default["util"]["toJSONOptions"]);
    }, _0x376d26["getTypeUrl"] = function(_0x25a907) {
      return void 0 === _0x25a907 && (_0x25a907 = "type.googleapis.com"), _0x25a907 + "/Position";
    }, _0x376d26;
  }(), _0x39c05c["Range"] = function() {
    function _0x4239cb(_0x4cc981) {
      if (_0x4cc981) {
        for (var _0x48e10d = Object["keys"](_0x4cc981), _0x332cf6 = 0; _0x332cf6 < _0x48e10d["length"]; ++_0x332cf6) null != _0x4cc981[_0x48e10d[_0x332cf6]] && (this[_0x48e10d[_0x332cf6]] = _0x4cc981[_0x48e10d[_0x332cf6]]);
      }
    }
    return _0x4239cb["prototype"]["start"] = null, _0x4239cb["prototype"]["end"] = null, _0x4239cb["create"] = function(_0x51dcc8) {
      return new _0x4239cb(_0x51dcc8);
    }, _0x4239cb["encode"] = function(_0x1fb0b8, _0x43cc85) {
      return _0x43cc85 || (_0x43cc85 = _0x3f90b9["create"]()), null != _0x1fb0b8["start"] && Object["hasOwnProperty"]["call"](_0x1fb0b8, "start") && _0x39c05c["Position"]["encode"](_0x1fb0b8["start"], _0x43cc85["uint32"](10)["fork"]())["ldelim"](), null != _0x1fb0b8["end"] && Object["hasOwnProperty"]["call"](_0x1fb0b8, "end") && _0x39c05c["Position"]["encode"](_0x1fb0b8["end"], _0x43cc85["uint32"](18)["fork"]())["ldelim"](), _0x43cc85;
    }, _0x4239cb["encodeDelimited"] = function(_0x116d69, _0x376c20) {
      return this["encode"](_0x116d69, _0x376c20)["ldelim"]();
    }, _0x4239cb["decode"] = function(_0x215ed0, _0x38d5aa) {
      _0x215ed0 instanceof _0x2a3711 || (_0x215ed0 = _0x2a3711["create"](_0x215ed0));
      for (var _0x5a3135 = void 0 === _0x38d5aa ? _0x215ed0["len"] : _0x215ed0["pos"] + _0x38d5aa, _0x300dfb = new _0x39c05c["Range"](); _0x215ed0["pos"] < _0x5a3135; ) {
        var _0x3e2276 = _0x215ed0["uint32"]();
        switch (_0x3e2276 >>> 3) {
          case 1:
            _0x300dfb["start"] = _0x39c05c["Position"]["decode"](_0x215ed0, _0x215ed0["uint32"]());
            break;
          case 2:
            _0x300dfb["end"] = _0x39c05c["Position"]["decode"](_0x215ed0, _0x215ed0["uint32"]());
            break;
          default:
            _0x215ed0["skipType"](7 & _0x3e2276);
        }
      }
      return _0x300dfb;
    }, _0x4239cb["decodeDelimited"] = function(_0x2ab8fb) {
      return _0x2ab8fb instanceof _0x2a3711 || (_0x2ab8fb = new _0x2a3711(_0x2ab8fb)), this["decode"](_0x2ab8fb, _0x2ab8fb["uint32"]());
    }, _0x4239cb["verify"] = function(_0x13a7a0) {
      if ("object" != typeof _0x13a7a0 || null === _0x13a7a0) return "object expected";
      var _0x18b978;
      if (null != _0x13a7a0["start"] && _0x13a7a0["hasOwnProperty"]("start") && (_0x18b978 = _0x39c05c["Position"]["verify"](_0x13a7a0["start"]))) return "start." + _0x18b978;
      if (null != _0x13a7a0["end"] && _0x13a7a0["hasOwnProperty"]("end") && (_0x18b978 = _0x39c05c["Position"]["verify"](_0x13a7a0["end"]))) return "end." + _0x18b978;
      return null;
    }, _0x4239cb["fromObject"] = function(_0x34c179) {
      if (_0x34c179 instanceof _0x39c05c["Range"]) return _0x34c179;
      var _0x2d2f10 = new _0x39c05c["Range"]();
      if (null != _0x34c179["start"]) {
        if ("object" != typeof _0x34c179["start"]) throw TypeError(".Range.start: object expected");
        _0x2d2f10["start"] = _0x39c05c["Position"]["fromObject"](_0x34c179["start"]);
      }
      if (null != _0x34c179["end"]) {
        if ("object" != typeof _0x34c179["end"]) throw TypeError(".Range.end: object expected");
        _0x2d2f10["end"] = _0x39c05c["Position"]["fromObject"](_0x34c179["end"]);
      }
      return _0x2d2f10;
    }, _0x4239cb["toObject"] = function(_0x151faa, _0x432339) {
      _0x432339 || (_0x432339 = {});
      var _0xc69f9c = {};
      return _0x432339["defaults"] && (_0xc69f9c["start"] = null, _0xc69f9c["end"] = null), null != _0x151faa["start"] && _0x151faa["hasOwnProperty"]("start") && (_0xc69f9c["start"] = _0x39c05c["Position"]["toObject"](_0x151faa["start"], _0x432339)), null != _0x151faa["end"] && _0x151faa["hasOwnProperty"]("end") && (_0xc69f9c["end"] = _0x39c05c["Position"]["toObject"](_0x151faa["end"], _0x432339)), _0xc69f9c;
    }, _0x4239cb["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal2.default["util"]["toJSONOptions"]);
    }, _0x4239cb["getTypeUrl"] = function(_0x3a166d) {
      return void 0 === _0x3a166d && (_0x3a166d = "type.googleapis.com"), _0x3a166d + "/Range";
    }, _0x4239cb;
  }(), _0x39c05c["Element"] = function() {
    function _0x43b1bc(_0x20716c) {
      if (this["children"] = [], this["attributesBoolean"] = {}, _0x20716c) {
        for (var _0x2d1f93 = Object["keys"](_0x20716c), _0x165a67 = 0; _0x165a67 < _0x2d1f93["length"]; ++_0x165a67) null != _0x20716c[_0x2d1f93[_0x165a67]] && (this[_0x2d1f93[_0x165a67]] = _0x20716c[_0x2d1f93[_0x165a67]]);
      }
    }
    return _0x43b1bc["prototype"]["name"] = "", _0x43b1bc["prototype"]["children"] = _0x2d424b["emptyArray"], _0x43b1bc["prototype"]["data"] = "", _0x43b1bc["prototype"]["attributesBoolean"] = _0x2d424b["emptyObject"], _0x43b1bc["prototype"]["attributesJson"] = "", _0x43b1bc["create"] = function(_0x4a97f7) {
      return new _0x43b1bc(_0x4a97f7);
    }, _0x43b1bc["encode"] = function(_0x1db634, _0xd32d01) {
      if (_0xd32d01 || (_0xd32d01 = _0x3f90b9["create"]()), null != _0x1db634["name"] && Object["hasOwnProperty"]["call"](_0x1db634, "name") && _0xd32d01["uint32"](10)["string"](_0x1db634["name"]), null != _0x1db634["children"] && _0x1db634["children"]["length"]) {
        for (var _0x387b55 = 0; _0x387b55 < _0x1db634["children"]["length"]; ++_0x387b55) _0x39c05c["Element"]["encode"](_0x1db634["children"][_0x387b55], _0xd32d01["uint32"](18)["fork"]())["ldelim"]();
      }
      if (null != _0x1db634["data"] && Object["hasOwnProperty"]["call"](_0x1db634, "data") && _0xd32d01["uint32"](26)["string"](_0x1db634["data"]), null != _0x1db634["attributesBoolean"] && Object["hasOwnProperty"]["call"](_0x1db634, "attributesBoolean")) {
        var _0xafe439 = Object["keys"](_0x1db634["attributesBoolean"]);
        for (_0x387b55 = 0; _0x387b55 < _0xafe439["length"]; ++_0x387b55) _0xd32d01["uint32"](34)["fork"]()["uint32"](10)["string"](_0xafe439[_0x387b55])["uint32"](16)["bool"](_0x1db634["attributesBoolean"][_0xafe439[_0x387b55]])["ldelim"]();
      }
      return null != _0x1db634["attributesJson"] && Object["hasOwnProperty"]["call"](_0x1db634, "attributesJson") && _0xd32d01["uint32"](42)["string"](_0x1db634["attributesJson"]), _0xd32d01;
    }, _0x43b1bc["encodeDelimited"] = function(_0x109d39, _0x449e99) {
      return this["encode"](_0x109d39, _0x449e99)["ldelim"]();
    }, _0x43b1bc["decode"] = function(_0x483298, _0x109290) {
      _0x483298 instanceof _0x2a3711 || (_0x483298 = _0x2a3711["create"](_0x483298));
      for (var _0x5b17ab, _0x32fa3b, _0x448f7a = void 0 === _0x109290 ? _0x483298["len"] : _0x483298["pos"] + _0x109290, _0x5eedb1 = new _0x39c05c["Element"](); _0x483298["pos"] < _0x448f7a; ) {
        var _0x50d6ae = _0x483298["uint32"]();
        switch (_0x50d6ae >>> 3) {
          case 1:
            _0x5eedb1["name"] = _0x483298["string"]();
            break;
          case 2:
            _0x5eedb1["children"] && _0x5eedb1["children"]["length"] || (_0x5eedb1["children"] = []), _0x5eedb1["children"]["push"](_0x39c05c["Element"]["decode"](_0x483298, _0x483298["uint32"]()));
            break;
          case 3:
            _0x5eedb1["data"] = _0x483298["string"]();
            break;
          case 4:
            _0x5eedb1["attributesBoolean"] === _0x2d424b["emptyObject"] && (_0x5eedb1["attributesBoolean"] = {});
            var _0x4c5c73 = _0x483298["uint32"]() + _0x483298["pos"];
            for (_0x5b17ab = "", _0x32fa3b = false; _0x483298["pos"] < _0x4c5c73; ) {
              var _0x9989b8 = _0x483298["uint32"]();
              switch (_0x9989b8 >>> 3) {
                case 1:
                  _0x5b17ab = _0x483298["string"]();
                  break;
                case 2:
                  _0x32fa3b = _0x483298["bool"]();
                  break;
                default:
                  _0x483298["skipType"](7 & _0x9989b8);
              }
            }
            _0x5eedb1["attributesBoolean"][_0x5b17ab] = _0x32fa3b;
            break;
          case 5:
            _0x5eedb1["attributesJson"] = _0x483298["string"]();
            break;
          default:
            _0x483298["skipType"](7 & _0x50d6ae);
        }
      }
      return _0x5eedb1;
    }, _0x43b1bc["decodeDelimited"] = function(_0x206f7b) {
      return _0x206f7b instanceof _0x2a3711 || (_0x206f7b = new _0x2a3711(_0x206f7b)), this["decode"](_0x206f7b, _0x206f7b["uint32"]());
    }, _0x43b1bc["verify"] = function(_0x21408e) {
      if ("object" != typeof _0x21408e || null === _0x21408e) return "object expected";
      if (null != _0x21408e["name"] && _0x21408e["hasOwnProperty"]("name") && !_0x2d424b["isString"](_0x21408e["name"])) return "name: string expected";
      if (null != _0x21408e["children"] && _0x21408e["hasOwnProperty"]("children")) {
        if (!Array["isArray"](_0x21408e["children"])) return "children: array expected";
        for (var _0x5aedd7 = 0; _0x5aedd7 < _0x21408e["children"]["length"]; ++_0x5aedd7) {
          var _0x1c8ec3 = _0x39c05c["Element"]["verify"](_0x21408e["children"][_0x5aedd7]);
          if (_0x1c8ec3) return "children." + _0x1c8ec3;
        }
      }
      if (null != _0x21408e["data"] && _0x21408e["hasOwnProperty"]("data") && !_0x2d424b["isString"](_0x21408e["data"])) return "data: string expected";
      if (null != _0x21408e["attributesBoolean"] && _0x21408e["hasOwnProperty"]("attributesBoolean")) {
        if (!_0x2d424b["isObject"](_0x21408e["attributesBoolean"])) return "attributesBoolean: object expected";
        var _0x7ffb5b = Object["keys"](_0x21408e["attributesBoolean"]);
        for (_0x5aedd7 = 0; _0x5aedd7 < _0x7ffb5b["length"]; ++_0x5aedd7) if ("boolean" != typeof _0x21408e["attributesBoolean"][_0x7ffb5b[_0x5aedd7]]) return "attributesBoolean: boolean{k:string} expected";
      }
      return null != _0x21408e["attributesJson"] && _0x21408e["hasOwnProperty"]("attributesJson") && !_0x2d424b["isString"](_0x21408e["attributesJson"]) ? "attributesJson: string expected" : null;
    }, _0x43b1bc["fromObject"] = function(_0x52c3b0) {
      if (_0x52c3b0 instanceof _0x39c05c["Element"]) return _0x52c3b0;
      var _0x55c904 = new _0x39c05c["Element"]();
      if (null != _0x52c3b0["name"] && (_0x55c904["name"] = String(_0x52c3b0["name"])), _0x52c3b0["children"]) {
        if (!Array["isArray"](_0x52c3b0["children"])) throw TypeError(".Element.children: array expected");
        _0x55c904["children"] = [];
        for (var _0x6b97ff = 0; _0x6b97ff < _0x52c3b0["children"]["length"]; ++_0x6b97ff) {
          if ("object" != typeof _0x52c3b0["children"][_0x6b97ff]) throw TypeError(".Element.children: object expected");
          _0x55c904["children"][_0x6b97ff] = _0x39c05c["Element"]["fromObject"](_0x52c3b0["children"][_0x6b97ff]);
        }
      }
      if (null != _0x52c3b0["data"] && (_0x55c904["data"] = String(_0x52c3b0["data"])), _0x52c3b0["attributesBoolean"]) {
        if ("object" != typeof _0x52c3b0["attributesBoolean"]) throw TypeError(".Element.attributesBoolean: object expected");
        _0x55c904["attributesBoolean"] = {};
        var _0x52aeba = Object["keys"](_0x52c3b0["attributesBoolean"]);
        for (_0x6b97ff = 0; _0x6b97ff < _0x52aeba["length"]; ++_0x6b97ff) _0x55c904["attributesBoolean"][_0x52aeba[_0x6b97ff]] = Boolean(_0x52c3b0["attributesBoolean"][_0x52aeba[_0x6b97ff]]);
      }
      return null != _0x52c3b0["attributesJson"] && (_0x55c904["attributesJson"] = String(_0x52c3b0["attributesJson"])), _0x55c904;
    }, _0x43b1bc["toObject"] = function(_0x11dae2, _0x41dc66) {
      _0x41dc66 || (_0x41dc66 = {});
      var _0x531fcb, _0x382cd1 = {};
      if ((_0x41dc66["arrays"] || _0x41dc66["defaults"]) && (_0x382cd1["children"] = []), (_0x41dc66["objects"] || _0x41dc66["defaults"]) && (_0x382cd1["attributesBoolean"] = {}), _0x41dc66["defaults"] && (_0x382cd1["name"] = "", _0x382cd1["data"] = "", _0x382cd1["attributesJson"] = ""), null != _0x11dae2["name"] && _0x11dae2["hasOwnProperty"]("name") && (_0x382cd1["name"] = _0x11dae2["name"]), _0x11dae2["children"] && _0x11dae2["children"]["length"]) {
        _0x382cd1["children"] = [];
        for (var _0xd3f835 = 0; _0xd3f835 < _0x11dae2["children"]["length"]; ++_0xd3f835) _0x382cd1["children"][_0xd3f835] = _0x39c05c["Element"]["toObject"](_0x11dae2["children"][_0xd3f835], _0x41dc66);
      }
      if (null != _0x11dae2["data"] && _0x11dae2["hasOwnProperty"]("data") && (_0x382cd1["data"] = _0x11dae2["data"]), _0x11dae2["attributesBoolean"] && (_0x531fcb = Object["keys"](_0x11dae2["attributesBoolean"]))["length"]) {
        _0x382cd1["attributesBoolean"] = {};
        for (_0xd3f835 = 0; _0xd3f835 < _0x531fcb["length"]; ++_0xd3f835) _0x382cd1["attributesBoolean"][_0x531fcb[_0xd3f835]] = _0x11dae2["attributesBoolean"][_0x531fcb[_0xd3f835]];
      }
      return null != _0x11dae2["attributesJson"] && _0x11dae2["hasOwnProperty"]("attributesJson") && (_0x382cd1["attributesJson"] = _0x11dae2["attributesJson"]), _0x382cd1;
    }, _0x43b1bc["prototype"]["toJSON"] = function() {
      return this["constructor"]["toObject"](this, import_minimal2.default["util"]["toJSONOptions"]);
    }, _0x43b1bc["getTypeUrl"] = function(_0x51f318) {
      return void 0 === _0x51f318 && (_0x51f318 = "type.googleapis.com"), _0x51f318 + "/Element";
    }, _0x43b1bc;
  }(), _0x39c05c;
})();
var r12 = class {
  constructor() {
    __publicField(this, "_protobufRoot");
    this["_protobufRoot"] = u5;
  }
  ["getDescriptor"](_0x465478) {
    return new y8(this["_protobufRoot"][_0x465478]);
  }
};
var y8 = class {
  constructor(_0x3bad7e) {
    __publicField(this, "_protobuf");
    this["_protobuf"] = _0x3bad7e;
  }
  ["compress"](_0xb5878a) {
    const _0xc181b = this["_protobuf"]["verify"](_0xb5878a);
    if (_0xc181b) throw Error(_0xc181b);
    return this["_protobuf"]["encode"](this["_protobuf"]["create"](_0xb5878a))["finish"]();
  }
  ["decompress"](_0x49637b) {
    return this["_protobuf"]["toObject"](this["_protobuf"]["decode"](_0x49637b), { "oneofs": true });
  }
};
function _4(_0x1c82fa, _0x547a61) {
  const _0x2d08cd = cloneDeep_default(_0x1c82fa);
  return _0x2d08cd["path"][_0x2d08cd["path"]["length"] - 1] += _0x547a61, _0x2d08cd;
}
function O5(_0x219a48, _0x173bac) {
  return _0x219a48["root"] === _0x173bac["root"] && isEqual_default(_0x219a48["path"], _0x173bac["path"]);
}
function $4(_0x1b25f7) {
  P7(_0x1b25f7, (_0x4f6550) => ("main" == _0x4f6550["root"] ? (_0x4f6550["rootMain"] = true, delete _0x4f6550["root"]) : "$graveyard" == _0x4f6550["root"] && (_0x4f6550["rootGraveyard"] = true, delete _0x4f6550["root"]), _0x4f6550));
}
function J4(_0x1911c7) {
  P7(_0x1911c7, (_0x2ad91c) => (_0x2ad91c["rootMain"] ? (_0x2ad91c["root"] = "main", delete _0x2ad91c["rootMain"]) : _0x2ad91c["rootGraveyard"] && (_0x2ad91c["root"] = "$graveyard", delete _0x2ad91c["rootGraveyard"]), _0x2ad91c));
}
function P7(_0x25caa8, _0x2766b7) {
  for (const _0x47d89d in _0x25caa8) {
    const _0x34ab82 = _0x25caa8[_0x47d89d];
    "nodes" !== _0x47d89d && isObject_default(_0x34ab82) && (_0x34ab82["path"] && (_0x34ab82["root"] || _0x34ab82["rootMain"] || _0x34ab82["rootGraveyard"]) ? _0x25caa8[_0x47d89d] = _0x2766b7(_0x34ab82) : P7(_0x34ab82, _0x2766b7));
  }
  return _0x25caa8;
}
var e7 = class {
  constructor(_0x567177, _0x25a66b, _0x1d5bec) {
    __publicField(this, "_id");
    __publicField(this, "_operationName");
    __publicField(this, "_protobufDescriptor");
    this["_id"] = _0x567177, this["_operationName"] = _0x25a66b, this["_protobufDescriptor"] = _0x1d5bec;
  }
  ["compress"](_0xd9844f, _0x1387ac) {
    const _0x2e58e4 = _0x1387ac["shift"]();
    return $4(_0x2e58e4), _0xd9844f["buffers"]["push"](this["_protobufDescriptor"]["compress"](_0x2e58e4)), _0xd9844f["types"]["push"](this["_id"]), true;
  }
  ["decompress"](_0x2665ec, _0x496f04) {
    _0x496f04["types"]["shift"]();
    const _0x4767cd = this["_protobufDescriptor"]["decompress"](_0x496f04["buffers"]["shift"]());
    J4(_0x4767cd), _0x4767cd["__className"] = this["_operationName"], _0x2665ec["push"](_0x4767cd);
  }
};
var s10 = class extends e7 {
  ["compress"](_0x231213, _0x4fd47f) {
    const _0x83e039 = _0x4fd47f["shift"]();
    return this["_serializeOneOf"]("oldValue", _0x83e039), this["_serializeOneOf"]("newValue", _0x83e039), $4(_0x83e039), _0x231213["buffers"]["push"](this["_protobufDescriptor"]["compress"](_0x83e039)), _0x231213["types"]["push"](this["_id"]), true;
  }
  ["decompress"](_0x31e315, _0x4e0897) {
    const { types: _0x2ab560, buffers: _0x2d8bb9 } = _0x4e0897, _0x285b40 = this["_protobufDescriptor"]["decompress"](_0x2d8bb9["shift"]());
    _0x2ab560["shift"](), this["_deserializeOneOf"]("oldValue", _0x285b40), this["_deserializeOneOf"]("newValue", _0x285b40), J4(_0x285b40), _0x285b40["__className"] = this["_operationName"], _0x31e315["push"](_0x285b40);
  }
  ["_serializeOneOf"](_0x1558bc, _0x3de53c) {
    const _0x5d516f = _0x3de53c[_0x1558bc];
    "boolean" == typeof _0x5d516f ? _0x3de53c[_0x1558bc + "Boolean"] = _0x5d516f : _0x3de53c[_0x1558bc + "Json"] = JSON["stringify"](_0x5d516f);
  }
  ["_deserializeOneOf"](_0x57c96c, _0x5624f4) {
    const _0x3593a1 = _0x57c96c + "Json";
    _0x5624f4[_0x3593a1] ? (_0x5624f4[_0x57c96c] = JSON["parse"](_0x5624f4[_0x3593a1]), delete _0x5624f4[_0x3593a1]) : (_0x5624f4[_0x57c96c] = _0x5624f4[_0x57c96c + "Boolean"], delete _0x5624f4[_0x57c96c + "Boolean"]);
  }
};
var i8 = class extends e7 {
  ["compress"](_0xaa871d, _0x5b536a) {
    const _0x23c72c = _0x5b536a["shift"]();
    return this["_serializeNodesAttributes"](_0x23c72c["nodes"]), $4(_0x23c72c), _0xaa871d["buffers"]["push"](this["_protobufDescriptor"]["compress"](_0x23c72c)), _0xaa871d["types"]["push"](this["_id"]), true;
  }
  ["decompress"](_0x3f88fd, _0x26970d) {
    const { types: _0x2794b8, buffers: _0x558605 } = _0x26970d, _0x45737d = this["_protobufDescriptor"]["decompress"](_0x558605["shift"]());
    _0x2794b8["shift"](), _0x45737d["nodes"] || (_0x45737d["nodes"] = []), this["_deserializeNodesAttributes"](_0x45737d["nodes"]), J4(_0x45737d), _0x45737d["__className"] = this["_operationName"], _0x3f88fd["push"](_0x45737d);
  }
  ["_serializeNodesAttributes"](_0x97339) {
    for (const _0x47f526 of _0x97339) {
      if (_0x47f526["attributes"]) {
        const _0x530d5c = _0x47f526["attributes"];
        this["_areValuesBoolean"](_0x530d5c) ? _0x47f526["attributesBoolean"] = _0x530d5c : _0x47f526["attributesJson"] = JSON["stringify"](_0x530d5c);
      }
      _0x47f526["children"] && this["_serializeNodesAttributes"](_0x47f526["children"]);
    }
  }
  ["_deserializeNodesAttributes"](_0x179395) {
    for (const _0x377d3e of _0x179395) (_0x377d3e["attributesBoolean"] || _0x377d3e["attributesJson"]) && (_0x377d3e["attributesBoolean"] ? (_0x377d3e["attributes"] = _0x377d3e["attributesBoolean"], delete _0x377d3e["attributesBoolean"]) : (_0x377d3e["attributes"] = JSON["parse"](_0x377d3e["attributesJson"]), delete _0x377d3e["attributesJson"])), _0x377d3e["children"] && this["_deserializeNodesAttributes"](_0x377d3e["children"]);
  }
  ["_areValuesBoolean"](_0x4d2843) {
    return Object["keys"](_0x4d2843)["every"]((_0x46cdd1) => "boolean" == typeof _0x4d2843[_0x46cdd1]);
  }
};
var n8 = class extends e7 {
  ["decompress"](_0x2886f2, _0x5c4843) {
    super["decompress"](_0x2886f2, _0x5c4843);
    const _0x9d9fb0 = _0x2886f2[_0x2886f2["length"] - 1];
    _0x9d9fb0["oldRange"] || (_0x9d9fb0["oldRange"] = null), _0x9d9fb0["newRange"] || (_0x9d9fb0["newRange"] = null);
  }
};
var p7 = class extends e7 {
  ["compress"](_0x3edbec, _0x8008a6) {
    return _0x8008a6["shift"](), _0x3edbec["types"]["push"](this["_id"]), true;
  }
  ["decompress"](_0x4d8d91, _0x589dec) {
    _0x589dec["types"]["shift"](), _0x4d8d91["push"]({ "__className": this["_operationName"] });
  }
};
var a12 = class extends n8 {
  constructor(_0x2d5066, _0x4893e4, _0x169888, _0x4f989b) {
    super(_0x2d5066, _0x4893e4, _0x169888);
    __publicField(this, "_omittedNamespace");
    this["_omittedNamespace"] = _0x4f989b + ":";
  }
  ["compress"](_0x2025d9, _0x2c6a65) {
    return !("MarkerOperation" != _0x2c6a65[0]["__className"] || !_0x2c6a65[0]["name"]["startsWith"](this["_omittedNamespace"])) && (_0x2c6a65[0]["name"] = _0x2c6a65[0]["name"]["replace"](new RegExp("^" + this["_omittedNamespace"]), ""), super["compress"](_0x2025d9, _0x2c6a65), true);
  }
  ["decompress"](_0x2c24ab, _0x19147a) {
    super["decompress"](_0x2c24ab, _0x19147a);
    const _0x208c74 = _0x2c24ab[_0x2c24ab["length"] - 1];
    _0x208c74["name"] = this["_omittedNamespace"] + _0x208c74["name"];
  }
};
var b4 = class {
  constructor(_0x2255f5, _0x44d889) {
    __publicField(this, "_id");
    __publicField(this, "_context");
    this["_id"] = _0x2255f5, this["_context"] = _0x44d889;
  }
  ["compress"](_0x2fbc53, _0x5c1d3b) {
    let _0x1a2bf4;
    for (; _0x5c1d3b["length"] > 1 && this["_compareOperations"](_0x5c1d3b[0], _0x5c1d3b[1]); ) _0x1a2bf4 ? (_0x1a2bf4 = this["_combineNext"](_0x5c1d3b["shift"](), _0x1a2bf4), _0x2fbc53["types"]["push"](0)) : (_0x1a2bf4 = cloneDeep_default(_0x5c1d3b["shift"]()), _0x2fbc53["types"]["push"](this["_id"]));
    return !!_0x1a2bf4 && (_0x1a2bf4 = this["_combineNext"](_0x5c1d3b["shift"](), _0x1a2bf4), _0x2fbc53["types"]["push"](0), _0x2fbc53["buffers"]["push"](this["_compressSingleOperation"](_0x1a2bf4)), true);
  }
  ["decompress"](_0x5bd9d0, _0x13b80b) {
    const _0x4c2cde = this["_decompressSingleOperation"](_0x13b80b);
    for (; 0 == _0x13b80b["types"][0]; ) _0x13b80b["types"]["shift"](), _0x5bd9d0["push"](this["_splitCurrent"](_0x4c2cde));
    _0x5bd9d0["push"](_0x4c2cde);
  }
};
var m8 = class extends b4 {
  ["_combineNext"](_0x44e798, _0x3fa293) {
    return _0x3fa293["nodes"][0]["data"] += _0x44e798["nodes"][0]["data"], _0x3fa293;
  }
  ["_splitCurrent"](_0x4c184b) {
    const _0x4ad96e = cloneDeep_default(_0x4c184b), _0x1f4fa2 = _0x4ad96e["nodes"][0], _0x174ec7 = _0x4c184b["nodes"][0], _0x5a2cff = _0x174ec7["data"][Symbol["iterator"]]()["next"]()["value"], _0x1ec67e = _0x5a2cff["length"];
    return _0x1f4fa2["data"] = _0x5a2cff, _0x174ec7["data"] = _0x174ec7["data"]["substr"](_0x1ec67e), _0x4c184b["position"] = _4(_0x4c184b["position"], _0x1ec67e), _0x4ad96e;
  }
  ["_compareOperations"](_0x1e20d8, _0x467dc8) {
    if (this["_checkOperation"](_0x1e20d8) && this["_checkOperation"](_0x467dc8)) {
      const _0x121cfc = _0x1e20d8["nodes"][0]["data"]["length"], _0x128a8b = O5(_4(_0x1e20d8["position"], _0x121cfc), _0x467dc8["position"]), _0x4e1065 = _0x1e20d8["nodes"][0], _0x4d7a91 = _0x467dc8["nodes"][0];
      return _0x128a8b && this["_compareAttributes"](_0x4e1065, _0x4d7a91);
    }
    return false;
  }
  ["_compressSingleOperation"](_0x21ab92) {
    const _0x3cf70d = { "types": [], "buffers": [], "baseVersion": 0 };
    return this["_context"]["_getCompressorByName"]("InsertOperation")["compress"](_0x3cf70d, [_0x21ab92]), _0x3cf70d["buffers"][0];
  }
  ["_decompressSingleOperation"](_0xd19134) {
    const _0x7db180 = [];
    return this["_context"]["_getCompressorByName"]("InsertOperation")["decompress"](_0x7db180, _0xd19134), _0x7db180[0];
  }
  ["_checkOperation"](_0x415181) {
    return "InsertOperation" == _0x415181["__className"] && 1 == _0x415181["nodes"]["length"] && _0x415181["nodes"][0]["data"] && !_0x415181["wasUndone"] && 1 == Array["from"](_0x415181["nodes"][0]["data"])["length"];
  }
  ["_compareAttributes"](_0x2095bc, _0x41044f) {
    const _0x20dd00 = Object["keys"](_0x2095bc["attributes"] || {}), _0x229b5e = Object["keys"](_0x41044f["attributes"] || {});
    return _0x20dd00["length"] === _0x229b5e["length"] && _0x20dd00["every"]((_0x2c9763) => _0x41044f["attributes"][_0x2c9763] && _0x41044f["attributes"][_0x2c9763] === _0x2095bc["attributes"][_0x2c9763]);
  }
};
var c8 = class extends b4 {
  ["_combineNext"](_0x5f458f, _0x1f8db4) {
    return _0x1f8db4["howMany"]++, _0x1f8db4["sourcePosition"] = cloneDeep_default(_0x5f458f["sourcePosition"]), _0x1f8db4;
  }
  ["_splitCurrent"](_0x4334db) {
    const _0x28db65 = cloneDeep_default(_0x4334db);
    return _0x4334db["howMany"]--, _0x28db65["howMany"] = 1, _0x28db65["sourcePosition"] = _4(_0x28db65["sourcePosition"], _0x4334db["howMany"]), _0x28db65;
  }
  ["_compareOperations"](_0x464268, _0x978047) {
    return !(!this["_checkOperation"](_0x464268) || !this["_checkOperation"](_0x978047)) && (O5(_4(_0x464268["sourcePosition"], -1), _0x978047["sourcePosition"]) && O5(_0x464268["targetPosition"], _0x978047["targetPosition"]));
  }
  ["_compressSingleOperation"](_0x3dd762) {
    const _0x54ffa3 = { "types": [], "buffers": [], "baseVersion": 0 };
    return this["_context"]["_getCompressorByName"]("MoveOperation")["compress"](_0x54ffa3, [_0x3dd762]), _0x54ffa3["buffers"][0];
  }
  ["_decompressSingleOperation"](_0x40c77f) {
    const _0x288361 = [];
    return this["_context"]["_getCompressorByName"]("MoveOperation")["decompress"](_0x288361, _0x40c77f), _0x288361[0];
  }
  ["_checkOperation"](_0x36b65a) {
    return "MoveOperation" == _0x36b65a["__className"] && "$graveyard" == _0x36b65a["targetPosition"]["root"] && 1 == _0x36b65a["howMany"] && !_0x36b65a["wasUndone"];
  }
};
var h6 = class extends b4 {
  ["_combineNext"](_0x15cf0a, _0x2cafd8) {
    return _0x2cafd8["howMany"]++, _0x2cafd8;
  }
  ["_splitCurrent"](_0x29012a) {
    const _0x987e97 = cloneDeep_default(_0x29012a);
    return _0x987e97["howMany"] = 1, _0x29012a["howMany"]--, _0x987e97;
  }
  ["_compareOperations"](_0x5f14dd, _0x2c4d29) {
    return !(!this["_checkOperation"](_0x5f14dd) || !this["_checkOperation"](_0x2c4d29)) && (O5(_0x5f14dd["sourcePosition"], _0x2c4d29["sourcePosition"]) && O5(_0x5f14dd["targetPosition"], _0x2c4d29["targetPosition"]));
  }
  ["_compressSingleOperation"](_0x1bd157) {
    const _0x12261a = { "types": [], "buffers": [], "baseVersion": 0 };
    return this["_context"]["_getCompressorByName"]("MoveOperation")["compress"](_0x12261a, [_0x1bd157]), _0x12261a["buffers"][0];
  }
  ["_decompressSingleOperation"](_0x52d697) {
    const _0x4ca9bd = [];
    return this["_context"]["_getCompressorByName"]("MoveOperation")["decompress"](_0x4ca9bd, _0x52d697), _0x4ca9bd[0];
  }
  ["_checkOperation"](_0x3f4e02) {
    return "MoveOperation" == _0x3f4e02["__className"] && "$graveyard" == _0x3f4e02["targetPosition"]["root"] && 1 == _0x3f4e02["howMany"] && !_0x3f4e02["wasUndone"];
  }
};
var f5 = class extends b4 {
  ["compress"](_0x5e56a3, _0x5d6fc6) {
    if (!this["_compareOperations"](_0x5d6fc6[0], _0x5d6fc6[1])) return false;
    const _0x567f7e = _0x5d6fc6["shift"]();
    return _0x567f7e["oldRange"] = null, _0x567f7e["newRange"] && O5(_0x567f7e["newRange"]["start"], _0x567f7e["newRange"]["end"]) && (_0x567f7e["newRange"]["end"] = null), _0x5d6fc6["shift"](), _0x5e56a3["types"]["push"](this["_id"]), _0x5e56a3["types"]["push"](0), _0x5e56a3["buffers"]["push"](this["_compressSingleOperation"](_0x567f7e)), true;
  }
  ["decompress"](_0x642fb4, _0x3dc1b6) {
    const _0xd7225d = this["_decompressSingleOperation"](_0x3dc1b6);
    _0xd7225d["newRange"] && !_0xd7225d["newRange"]["end"] && (_0xd7225d["newRange"]["end"] = cloneDeep_default(_0xd7225d["newRange"]["start"]));
    const _0xd1bf62 = cloneDeep_default(_0xd7225d);
    _0xd1bf62["newRange"] && (_0xd1bf62["newRange"]["start"]["stickiness"] = "toNone", _0xd1bf62["newRange"]["end"] = cloneDeep_default(_0xd1bf62["newRange"]["start"])), _0xd1bf62["name"] = "user:position:" + _0xd1bf62["name"]["split"](":")[2], _0x3dc1b6["types"]["shift"](), _0x642fb4["push"](_0xd7225d), _0x642fb4["push"](_0xd1bf62);
  }
  ["_compressSingleOperation"](_0x46cf73) {
    const _0x51777b = { "types": [], "buffers": [], "baseVersion": 0 };
    return this["_context"]["_getCompressorByName"]("MarkerOperation")["compress"](_0x51777b, [_0x46cf73]), _0x51777b["buffers"][0];
  }
  ["_decompressSingleOperation"](_0x4e223e) {
    const _0x4f2099 = [];
    return this["_context"]["_getCompressorByName"]("MarkerOperation")["decompress"](_0x4f2099, _0x4e223e), _0x4f2099[0];
  }
  ["_compareOperations"](_0x3c03ab, _0x275491) {
    return !(!_0x3c03ab || !_0x275491) && ("MarkerOperation" == _0x3c03ab["__className"] && "MarkerOperation" == _0x275491["__className"] && !(!_0x3c03ab["name"]["startsWith"]("user:") || !_0x275491["name"]["startsWith"]("user:") || _0x3c03ab["name"] == _0x275491["name"]));
  }
};
var g6 = class {
  constructor() {
    __publicField(this, "_compressorById");
    __publicField(this, "_compressorByName");
    __publicField(this, "_protobufFactory");
    this["_compressorById"] = /* @__PURE__ */ new Map(), this["_compressorByName"] = /* @__PURE__ */ new Map(), this["_protobufFactory"] = new r12();
    const _0x2efb88 = this["_protobufFactory"]["getDescriptor"]("MarkerOperation");
    this["_registerCompressor"](1, "NoOperation", new p7(1, "NoOperation", void 0)), this["_registerOperationCompressor"](10, "AttributeOperation", s10), this["_registerOperationCompressor"](11, "InsertOperation", i8), this["_registerOperationCompressor"](12, "MarkerOperation", n8), this["_registerOperationCompressor"](13, "MergeOperation", e7), this["_registerOperationCompressor"](14, "MoveOperation", e7), this["_registerOperationCompressor"](15, "RenameOperation", e7), this["_registerOperationCompressor"](16, "RootAttributeOperation", s10), this["_registerOperationCompressor"](17, "SplitOperation", e7), this["_registerCompressor"](18, "CommentMarkerOperation", new a12(18, "MarkerOperation", _0x2efb88, "comment")), this["_registerCompressor"](19, "SuggestionMarkerOperation", new a12(19, "MarkerOperation", _0x2efb88, "suggestion")), this["_registerOperationCompressor"](20, "RootOperation", e7), this["_registerActionCompressor"](100, "TypingAction", m8), this["_registerActionCompressor"](101, "DeletingAction", c8), this["_registerActionCompressor"](102, "ForwardDeletingAction", h6), this["_registerActionCompressor"](103, "UserSelectionAction", f5);
  }
  ["compress"](_0x5c40f0) {
    if (!_0x5c40f0 || !_0x5c40f0[0]) throw new CKEditorError("no-operations-provided", this);
    const _0x456078 = { "types": [], "buffers": [], "baseVersion": _0x5c40f0[0]["baseVersion"] };
    for (; _0x5c40f0["length"]; ) this["_getCompressorByName"]("UserSelectionAction")["compress"](_0x456078, _0x5c40f0) || this["_getCompressorByName"]("TypingAction")["compress"](_0x456078, _0x5c40f0) || this["_getCompressorByName"]("DeletingAction")["compress"](_0x456078, _0x5c40f0) || this["_getCompressorByName"]("ForwardDeletingAction")["compress"](_0x456078, _0x5c40f0) || this["_getCompressorByName"]("CommentMarkerOperation")["compress"](_0x456078, _0x5c40f0) || this["_getCompressorByName"]("SuggestionMarkerOperation")["compress"](_0x456078, _0x5c40f0) || this["_getCompressorByName"](_0x5c40f0[0]["__className"])["compress"](_0x456078, _0x5c40f0);
    return _0x456078;
  }
  ["decompress"](_0x29e0ee) {
    const _0x231e57 = [];
    for (; _0x29e0ee["types"]["length"]; ) {
      this["_compressorById"]["get"](_0x29e0ee["types"][0])["decompress"](_0x231e57, _0x29e0ee);
    }
    return _0x231e57["forEach"]((_0x452646, _0x149c1b) => _0x452646["baseVersion"] = _0x29e0ee["baseVersion"] + _0x149c1b), _0x231e57;
  }
  ["_getCompressorByName"](_0x25432b) {
    return this["_compressorByName"]["get"](_0x25432b);
  }
  ["_registerOperationCompressor"](_0x1caad4, _0x2f3793, _0x47e9c5) {
    const _0x34e9de = new _0x47e9c5(_0x1caad4, _0x2f3793, this["_protobufFactory"]["getDescriptor"](_0x2f3793));
    this["_registerCompressor"](_0x1caad4, _0x2f3793, _0x34e9de);
  }
  ["_registerActionCompressor"](_0x62bebd, _0x50233d, _0x4b8723) {
    const _0x14e490 = new _0x4b8723(_0x62bebd, this);
    this["_registerCompressor"](_0x62bebd, _0x50233d, _0x14e490);
  }
  ["_registerCompressor"](_0xf2bc2f, _0x344de4, _0x3288a5) {
    this["_compressorById"]["set"](_0xf2bc2f, _0x3288a5), this["_compressorByName"]["set"](_0x344de4, _0x3288a5);
  }
};

// node_modules/@ckeditor/ckeditor5-real-time-collaboration/dist/index.js
var _c = class _c extends ContextPlugin {
  constructor(_0x1af6c0) {
    super(_0x1af6c0);
    __publicField(this, "connection");
    __publicField(this, "_reconnectionStack");
    __publicField(this, "_shouldPluginsReconnect");
    __publicField(this, "_domEmitter");
    this["set"]("state", WEB_SOCKET_GATEWAY_STATES["CONNECTED"]), this["set"]("_isBrowserOffline", false), this["_reconnectionStack"] = /* @__PURE__ */ new Set(), this["_shouldPluginsReconnect"] = false, this["_domEmitter"] = Object["create"](DomEmitterMixin);
  }
  static get ["requires"]() {
    return ["CloudServices", Notification];
  }
  static get ["pluginName"]() {
    return "WebSocketGateway";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    const _0x44ff3d = this["context"], _0x5c6474 = _0x44ff3d["plugins"]["get"]("CloudServices"), _0x931ff2 = _0x44ff3d["plugins"]["get"](Notification);
    if (!_0x5c6474["token"]) throw new CKEditorError("websocketgateway-missing-token", this);
    if (!_0x5c6474["webSocketUrl"]) throw new CKEditorError("websocketgateway-missing-websocket-url", this);
    return this["_domEmitter"]["listenTo"](window, "offline", () => this["_isBrowserOffline"] = true), this["_domEmitter"]["listenTo"](window, "online", () => this["_isBrowserOffline"] = false), this["context"]["config"]["define"]("cloudServices.connectionTimeout", 10), this["context"]["config"]["define"]("cloudServices.requestTimeout", 20), _c["WebSocketGateway"]["connect"](_0x5c6474["token"], _0x5c6474["webSocketUrl"], { "timeout": 1e3 * this["context"]["config"]["get"]("cloudServices.connectionTimeout"), "requestTimeout": 1e3 * this["context"]["config"]["get"]("cloudServices.requestTimeout") })["then"]((_0x281e87) => {
      if (this["connection"] = _0x281e87, this["bind"]("state")["to"](_0x281e87, "state", this, "_isBrowserOffline", (_0x2f6a3e, _0x267b3f) => ("connected" !== _0x2f6a3e && (this["_shouldPluginsReconnect"] = true), _0x267b3f || _0x2f6a3e !== WEB_SOCKET_GATEWAY_STATES["CONNECTED"] ? WEB_SOCKET_GATEWAY_STATES["DISCONNECTED"] : this["state"] == WEB_SOCKET_GATEWAY_STATES["DISCONNECTED"] && this["_shouldPluginsReconnect"] ? (this["_shouldPluginsReconnect"] = false, this["_reconnect"](), WEB_SOCKET_GATEWAY_STATES["CONNECTING"]) : WEB_SOCKET_GATEWAY_STATES["CONNECTED"])), this["connection"]["on"]("error", (_0x5eba96, _0x2df828) => {
        if ("limitExceeded" !== _0x2df828["code"]) throw console["error"](_0x2df828), new CKEditorError("cloudservices-init", null, { "originalError": _0x2df828 });
        _0x931ff2["showWarning"]("The limit of maximum concurrent connections that the collaboration server can handle has been reached. Try opening the document again in a few minutes. Please contact your system administrator if the problem persists.", { "title": "Connected users limit exceeded", "namespace": "real-time-collaboration" });
      }), !_0x281e87["me"]) return new Promise((_0x373a90) => _0x281e87["on"]("change:me", _0x373a90));
    })["catch"]((_0x55a49b) => {
      throw console["error"](_0x55a49b), new CKEditorError("cloudservices-init", null, { "originalError": _0x55a49b });
    });
  }
  ["addToReconnectionStack"](_0x1e8c5b) {
    if ("function" != typeof _0x1e8c5b["reconnect"]) throw new CKEditorError("websocketgateway-invalid-plugin-interface", this);
    if (this["isInReconnectionStack"](_0x1e8c5b)) throw new CKEditorError("websocketgateway-plugin-already-registered", this, { "name": _0x1e8c5b["constructor"]["pluginName"] });
    this["_reconnectionStack"]["add"](_0x1e8c5b);
  }
  ["removeFromReconnectionStack"](_0x5b1fe4) {
    this["_reconnectionStack"]["delete"](_0x5b1fe4);
  }
  ["isInReconnectionStack"](_0x527a4c) {
    return this["_reconnectionStack"]["has"](_0x527a4c);
  }
  ["_reconnect"]() {
    return this["connection"]["reconnect"]()["then"](() => Promise["all"](Array["from"](this["_reconnectionStack"], (_0x15d40f) => _0x15d40f["reconnect"]())))["then"](() => this["state"] = WEB_SOCKET_GATEWAY_STATES["CONNECTED"])["catch"]((_0x349563) => {
      throw console["error"](_0x349563), new CKEditorError("cloudservices-reconnection-error", this["context"]);
    });
  }
  ["destroy"]() {
    this["connection"] && this["connection"]["disconnect"](), this["state"] = WEB_SOCKET_GATEWAY_STATES["DISCONNECTED"], this["_domEmitter"]["stopListening"](), super["destroy"]();
  }
};
__publicField(_c, "WebSocketGateway", /* @__PURE__ */ (() => WebSocketGateway)());
__publicField(_c, "initialReconnectionInterval", 1e3);
var c9 = _c;
var i9 = class extends ContextPlugin {
  constructor(_0x3d424f) {
    super(_0x3d424f);
    __publicField(this, "channelSessions");
    __publicField(this, "channelConnectedUsers");
    __publicField(this, "allConnectedUsers");
    __publicField(this, "_registeredSessions");
    __publicField(this, "_uniqueUsersCount");
    __publicField(this, "_users");
    this["channelSessions"] = /* @__PURE__ */ new Map(), this["channelConnectedUsers"] = /* @__PURE__ */ new Map(), this["allConnectedUsers"] = new Collection(), this["_registeredSessions"] = /* @__PURE__ */ new Map(), this["_uniqueUsersCount"] = 0, this["_users"] = this["context"]["plugins"]["get"](l);
  }
  static get ["pluginName"]() {
    return "Sessions";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  static get ["requires"]() {
    return [c9, l];
  }
  ["init"]() {
    const _0x1da43e = this["context"]["plugins"]["get"](c9);
    this["listenTo"](_0x1da43e, "change:state", (_0x73dab9, _0x20b065, _0x572631) => {
      if ("connected" !== _0x572631) this["channelSessions"]["forEach"]((_0x450d45) => _0x450d45["clear"]()), this["channelConnectedUsers"]["forEach"]((_0x26147d) => _0x26147d["clear"]()), this["allConnectedUsers"]["clear"]();
      else {
        for (const [_0x203da9, _0x1eea89] of this["_registeredSessions"]) for (const _0x504434 of _0x1eea89) this["_handleSessionAdd"](_0x203da9, _0x504434);
      }
    }), this["_createUser"](_0x1da43e["connection"]["me"], true);
  }
  ["register"](_0x36db49, _0x512423) {
    if (this["_registeredSessions"]["has"](_0x36db49)) throw new CKEditorError("sessions-register-already-registered", null, { "channelId": _0x36db49 });
    this["_registeredSessions"]["set"](_0x36db49, _0x512423), this["channelSessions"]["set"](_0x36db49, new Collection()), this["channelConnectedUsers"]["set"](_0x36db49, new Collection()), this["listenTo"](_0x512423, "add", (_0x2b33f6, _0x290f58) => this["_handleSessionAdd"](_0x36db49, _0x290f58)), this["listenTo"](_0x512423, "remove", (_0x26d258, _0x59c1c4) => this["_handleSessionRemove"](_0x36db49, _0x59c1c4));
    for (const _0x71333b of _0x512423) this["_handleSessionAdd"](_0x36db49, _0x71333b);
  }
  ["unregister"](_0x3b13c3) {
    if (!this["_registeredSessions"]["has"](_0x3b13c3)) throw new CKEditorError("sessions-unregister-not-exist", null, { "channelId": _0x3b13c3 });
    const _0x52da9c = this["_registeredSessions"]["get"](_0x3b13c3);
    this["stopListening"](_0x52da9c);
    for (const _0x267636 of _0x52da9c) "connected" === this["context"]["plugins"]["get"](c9)["state"] && this["_handleSessionRemove"](_0x3b13c3, _0x267636);
    this["_registeredSessions"]["delete"](_0x3b13c3), this["channelSessions"]["delete"](_0x3b13c3), this["channelConnectedUsers"]["delete"](_0x3b13c3);
  }
  get ["mySessionId"]() {
    return this["context"]["plugins"]["get"](c9)["connection"]["sessionId"];
  }
  ["getUserBySessionId"](_0x3b41e9) {
    for (const _0x2271f7 of this["channelSessions"]["values"]()) for (const _0x49628e of _0x2271f7) if (_0x49628e["id"] === _0x3b41e9) return _0x49628e["user"];
  }
  ["getUserSessions"](_0x566e6a, _0xfe67a1) {
    const _0x234591 = _0xfe67a1 ? [this["channelSessions"]["get"](_0xfe67a1)] : this["channelSessions"]["values"](), _0x4450ca = /* @__PURE__ */ new Set();
    for (const _0x2e17ec of _0x234591) for (const _0x26f435 of _0x2e17ec) _0x26f435["user"]["id"] === _0x566e6a["id"] && _0x4450ca["add"](_0x26f435["id"]);
    return _0x4450ca;
  }
  ["getUserRole"](_0x108f2a) {
    for (const _0x597e25 of this["channelSessions"]["values"]()) for (const _0x3a645a of _0x597e25) if (_0x3a645a["user"] === _0x108f2a) return _0x3a645a["role"];
  }
  ["_handleSessionAdd"](_0x4d17f2, _0x22ea3d) {
    if ("connected" !== this["context"]["plugins"]["get"](c9)["state"]) return;
    const _0x49d5ec = _0x22ea3d["user"], _0x1852c5 = this["_users"]["getUser"](_0x49d5ec["id"]) || this["_createUser"](_0x49d5ec), _0x179ada = Object["assign"]({}, _0x22ea3d, { "user": _0x1852c5 });
    this["channelSessions"]["get"](_0x4d17f2)["add"](_0x179ada);
    const _0xb42c75 = this["channelConnectedUsers"]["get"](_0x4d17f2);
    _0xb42c75["has"](_0x1852c5["id"]) || _0xb42c75["add"](_0x1852c5), this["allConnectedUsers"]["has"](_0x1852c5["id"]) || this["allConnectedUsers"]["add"](_0x1852c5, _0x1852c5["isMe"] ? 0 : void 0), this["fire"]("sessionAdd:" + _0x4d17f2, { "channelId": _0x4d17f2, "session": _0x179ada });
  }
  ["_handleSessionRemove"](_0x449733, _0x2d496b) {
    if ("connected" !== this["context"]["plugins"]["get"](c9)["state"]) return;
    const _0x49243d = this["channelConnectedUsers"]["get"](_0x449733), _0x30b812 = _0x2d496b["user"];
    _0x30b812["id"] && (this["channelSessions"]["get"](_0x449733)["remove"](_0x2d496b["id"]), _0x49243d["has"](_0x30b812["id"]) && !this["getUserSessions"](_0x30b812, _0x449733)["size"] && _0x49243d["remove"](_0x30b812["id"]), this["allConnectedUsers"]["get"](_0x30b812["id"]) && !this["getUserSessions"](_0x30b812)["size"] && this["allConnectedUsers"]["remove"](_0x30b812["id"]));
  }
  ["_createUser"](_0x480bc0, _0x3122b9) {
    const _0x5ea2f3 = this["_users"]["addUser"](_0x480bc0);
    return _0x3122b9 && this["_users"]["defineMe"](_0x480bc0["id"]), _0x5ea2f3["orderNumber"] = this["_uniqueUsersCount"]++, _0x5ea2f3;
  }
};
var E5 = class extends Plugin {
  constructor() {
    super(...arguments);
    __publicField(this, "_domEmitter", new (DomEmitterMixin())());
  }
  static get ["requires"]() {
    return [i9];
  }
  static get ["pluginName"]() {
    return "UserMarkers";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    const _0x3172a0 = this["editor"], _0x2da34c = _0x3172a0["plugins"]["get"](i9);
    _0x3172a0["conversion"]["for"]("editingDowncast")["markerToElement"]({ "model": "user:position", "view": (_0x423d62, { writer: _0x3d1039 }) => function(_0x54b039, _0x5abcc0, _0x58700d, _0x33f814) {
      const _0x271aeb = _0x54b039["markerName"]["split"](":")[2], _0x3007ad = _0x58700d["getUserBySessionId"](_0x271aeb);
      if (!_0x3007ad || _0x271aeb === _0x58700d["mySessionId"]) return;
      if (!_0x33f814["model"]["schema"]["checkChild"](_0x54b039["markerRange"]["start"], "$text")) return;
      const _0x46a8d2 = { "class": "ck-user__marker " + _0x3007ad["color"]["getMarkerClass"](), "data-name": _0x3007ad["name"], "data-session-id": _0x271aeb }, _0x2ce975 = _0x33f814["model"]["markers"]["get"](_0x54b039["markerName"]), _0x578990 = _0x2ce975["getStart"](), _0x312573 = _0x578990["nodeAfter"], _0x396ec4 = _0x33f814["model"]["schema"];
      if (_0x312573 && _0x396ec4["isObject"](_0x312573) && _0x396ec4["isInline"](_0x312573) && !_0x33f814["model"]["markers"]["get"]("user:range:" + _0x271aeb)["getRange"]()["isCollapsed"]) return;
      const _0x408d40 = _0x578990["parent"];
      return _0x33f814["model"]["schema"]["isLimit"](_0x408d40) && !_0x33f814["model"]["hasContent"](_0x408d40) && (_0x46a8d2["contenteditable"] = false), function(_0x4cb4e9, _0x273df0, _0x3c3920) {
        const _0x2782b3 = _0x4cb4e9["createUIElement"]("span", _0x273df0);
        return _0x4cb4e9["setCustomProperty"]("userPositionMarker", true, _0x2782b3), _0x2782b3["render"] = function(_0x3d716b) {
          const _0x22debe = this["toDomElement"](_0x3d716b);
          return _0x22debe["innerHTML"] = '⁠<span class="ck-user__marker-line" contenteditable="false"><span class="ck-user__marker-dot"></span></span><span class="ck-user__marker-tooltip" contenteditable="false" spellcheck="false">' + _0x3c3920["name"] + "</span>⁠", _0x22debe["addEventListener"]("mouseenter", () => {
            _0x22debe["classList"]["add"]("ck-user__marker_hovered");
          }), _0x22debe["addEventListener"]("mouseleave", () => {
            _0x22debe["classList"]["remove"]("ck-user__marker_hovered");
          }), _0x22debe;
        }, _0x2782b3["isSimilar"] = function(_0x370a07) {
          return !(!this["getCustomProperty"]("userPositionMarker") || !_0x370a07["getCustomProperty"]("userPositionMarker") || this["getAttribute"]("data-session-id") != _0x370a07["getAttribute"]("data-session-id"));
        }, _0x2782b3;
      }(_0x5abcc0, _0x46a8d2, _0x3007ad);
    }(_0x423d62, _0x3d1039, _0x2da34c, _0x3172a0) }), _0x3172a0["conversion"]["for"]("editingDowncast")["markerToHighlight"]({ "model": "user:range", "view": (_0x315fd1) => function(_0x41aeda, _0x1004a5) {
      const _0x141472 = _0x41aeda["markerName"]["split"](":")[2];
      if (_0x141472 === _0x1004a5["mySessionId"]) return null;
      const _0xc4efaf = _0x1004a5["getUserBySessionId"](_0x141472);
      if (!_0xc4efaf) return { "id": _0x141472, "classes": [] };
      return { "id": _0x141472, "classes": ["ck-user__selection", _0xc4efaf["color"]["getSelectionClass"]()], "attributes": { "data-session-id": _0x141472 }, "priority": 2e3 + _0xc4efaf["orderNumber"] };
    }(_0x315fd1, _0x2da34c) }), function(_0x1a647b) {
      const _0x2623b6 = _0x1a647b["model"], _0x267fac = /* @__PURE__ */ new Map(), _0x43f853 = _0x1a647b["plugins"]["get"](i9);
      _0x2623b6["markers"]["on"]("update:user:range", (_0x53810b, _0xc2e742, _0x331de4, _0x31af6d) => {
        if (!_0x31af6d && _0x267fac["get"](_0xc2e742["name"])) return _0x267fac["get"](_0xc2e742["name"])["detach"](), void _0x267fac["delete"](_0xc2e742["name"]);
        const _0x45d6ef = _0xc2e742["name"]["split"](":")[2];
        if (_0x45d6ef === _0x43f853["mySessionId"]) return;
        const _0x2430b1 = "user:position:" + _0x45d6ef;
        _0x2623b6["markers"]["has"](_0x2430b1) && _0x1a647b["editing"]["reconvertMarker"](_0x2430b1), _0xc2e742["on"]("change:range", (_0x31c694, _0x351163, _0x53beae) => {
          if ("$graveyard" != _0x351163["root"]["rootName"] && "$graveyard" == _0xc2e742["getRange"]()["root"]["rootName"] && !_0x267fac["has"](_0xc2e742["name"])) {
            const _0x296023 = _0x2623b6["schema"]["getNearestSelectionRange"](_0x53beae["deletionPosition"]);
            if (_0x296023) {
              const _0x23ddcf = LiveRange["fromRange"](_0x296023);
              _0x267fac["set"](_0xc2e742["name"], _0x23ddcf), _0x23ddcf["on"]("change:range", (_0x6b7af2, _0x273e61, _0xe59134) => {
                if ("$graveyard" == _0x23ddcf["root"]["rootName"]) {
                  const _0x5026b3 = _0x2623b6["schema"]["getNearestSelectionRange"](_0xe59134["deletionPosition"]);
                  _0x5026b3 ? (_0x23ddcf["start"] = _0x5026b3["start"], _0x23ddcf["end"] = _0x5026b3["end"]) : (_0x267fac["delete"](_0xc2e742["name"]), _0x23ddcf["detach"]());
                }
              });
            }
          }
        });
      }), _0x2623b6["document"]["on"]("change", () => {
        _0x267fac["size"] > 0 && _0x2623b6["enqueueChange"]({ "isUndoable": false }, (_0x18a230) => {
          for (const [_0x35218d, _0xefd8b3] of _0x267fac) "$graveyard" == _0x2623b6["markers"]["get"](_0x35218d)["getRange"]()["root"]["rootName"] && (Q2(_0x35218d["split"](":")[2], _0xefd8b3["toRange"](), _0x2623b6, _0x18a230), _0xefd8b3["detach"]());
          _0x267fac["clear"]();
        });
      });
    }(_0x3172a0), this["_domEmitter"]["listenTo"](global2["document"], "keydown", (_0x33ce15, { key: _0x2ae922 }) => {
      "Escape" === _0x2ae922 && function(_0x565ae7) {
        _0x565ae7["editing"]["view"]["change"]((_0x4442cb) => {
          for (const _0x3d4bc8 of _0x565ae7["model"]["markers"]) {
            if (!_0x3d4bc8["name"]["startsWith"]("user:position")) continue;
            const _0x25757d = _0x565ae7["editing"]["mapper"]["markerNameToElements"](_0x3d4bc8["name"]);
            if (_0x25757d) {
              for (const _0x20199f of _0x25757d) _0x4442cb["removeClass"]("ck-user__marker_hovered", _0x20199f);
            }
          }
        });
      }(_0x3172a0);
    }, { "useCapture": true });
  }
  ["afterInit"]() {
    const _0x21826e = this["editor"], _0x4a30aa = _0x21826e["commands"]["get"]("undo");
    _0x4a30aa && _0x21826e["model"]["on"]("applyOperation", (_0x2c33d4, _0x202b6d) => {
      const _0x8026ee = _0x202b6d[0];
      if ("marker" != _0x8026ee["type"] || !_0x8026ee["name"]["startsWith"]("user:")) return;
      const _0x5f1901 = _0x8026ee["batch"];
      _0x4a30aa["_createdBatches"]["has"](_0x5f1901) && (_0x8026ee["newRange"] = _0x8026ee["oldRange"] ? _0x21826e["model"]["createRange"](_0x8026ee["oldRange"]["start"], _0x8026ee["oldRange"]["end"]) : null);
    }, { "priority": "highest" });
  }
  ["destroy"]() {
    return this["_domEmitter"]["stopListening"](), super["destroy"]();
  }
  ["createUserMarkerOperations"]() {
    const _0x5dc1e5 = this["editor"], _0x232148 = _0x5dc1e5["model"]["document"], _0x24d335 = _0x5dc1e5["plugins"]["get"](i9);
    _0x5dc1e5["model"]["enqueueChange"]({ "isUndoable": false }, (_0x572a0a) => {
      const _0xb71e1d = "user:range:" + _0x24d335["mySessionId"], _0x227bf3 = "user:position:" + _0x24d335["mySessionId"], _0x3ae1a3 = _0x5dc1e5["model"]["markers"]["has"](_0xb71e1d);
      _0x5dc1e5["editing"]["view"]["hasDomSelection"] ? Q2(_0x24d335["mySessionId"], _0x232148["selection"]["getFirstRange"](), _0x5dc1e5["model"], _0x572a0a) : _0x3ae1a3 && (_0x572a0a["removeMarker"](_0xb71e1d), _0x572a0a["removeMarker"](_0x227bf3));
    });
  }
};
function Q2(_0x34c20e, _0x10b871, _0x527c31, _0x492e57) {
  const _0x382fae = "user:range:" + _0x34c20e, _0x98ad61 = "user:position:" + _0x34c20e, _0xce0b99 = _0x10b871["getContainedElement"]();
  let _0xbbdb91 = _0x10b871["start"];
  _0xce0b99 && _0xce0b99["is"]("element", "tableCell") && (_0xbbdb91 = function(_0xd03d8a, _0x5c8a43) {
    for (const _0x417eeb of _0xd03d8a["getPositions"]()) if (_0x5c8a43["schema"]["checkChild"](_0x417eeb, "$text")) return _0x417eeb;
  }(_0x10b871, _0x527c31), _0x10b871 = _0x492e57["createRange"](_0xbbdb91));
  const _0x56e8d6 = _0x492e57["createRange"](_0xbbdb91);
  _0x527c31["markers"]["has"](_0x382fae) ? (_0x492e57["updateMarker"](_0x382fae, { "range": _0x10b871 }), _0x492e57["updateMarker"](_0x98ad61, { "range": _0x56e8d6 })) : (_0x492e57["addMarker"](_0x382fae, { "range": _0x10b871, "usingOperation": true }), _0x492e57["addMarker"](_0x98ad61, { "range": _0x56e8d6, "usingOperation": true }));
}
function B3(_0x4c9214, _0x1d280f, _0x597c7e) {
  const _0x28bbd6 = _0x4c9214["t"], t2 = _0x4c9214["t"];
  switch (_0x1d280f) {
    case "PENDING_ACTION_SENDING_DATA":
      return t2({ "string": "Sending data to the server.", "id": "PENDING_ACTION_SENDING_DATA" });
    case "The local document and server document differ and merging them can cause unexpected behavior. To not lose your content save it locally and refresh the editor.":
      return t2("The local document and server document differ and merging them can cause unexpected behavior. To not lose your content save it locally and refresh the editor.");
    case "The document cannot be connected back to the server. To not lose your content save it locally and refresh the editor.":
      return t2("The document cannot be connected back to the server. To not lose your content save it locally and refresh the editor.");
    case "The document details could not be taken during the reconnection. To not lose your content save it locally and refresh the editor.":
      return t2("The document details could not be taken during the reconnection. To not lose your content save it locally and refresh the editor.");
    case "The last saved version of the document does not match the local version. To not lose your content save it locally and refresh the editor.":
      return t2("The last saved version of the document does not match the local version. To not lose your content save it locally and refresh the editor.");
    case "Synchronization issue":
      return t2("Synchronization issue");
    case "Connected users list dropdown menu":
      return t2("Connected users list dropdown menu");
    case "Collapsed connected users list (press ENTER to open it)":
      return t2("Collapsed connected users list (press ENTER to open it)");
    case "Connected users list":
      return t2("Connected users list");
    case "PENDING_ACTION_REVISION_HISTORY":
      return _0x28bbd6({ "string": "Unsaved change in revision history.", "id": "PENDING_ACTION_REVISION_HISTORY" });
    case "CONNECTED_USERS":
      return t2({ "string": "1 connected user (me)", "plural": "%0 connected users", "id": "CONNECTED_USERS" }, _0x597c7e);
    default:
      return "";
  }
}
var F2 = 1;
var _l = class _l extends Plugin {
  constructor(_0x2053fa) {
    super(_0x2053fa);
    __publicField(this, "_offset");
    __publicField(this, "sessionId");
    __publicField(this, "serverHistory");
    __publicField(this, "_channelId");
    __publicField(this, "_service");
    __publicField(this, "_document");
    __publicField(this, "_compressor");
    __publicField(this, "_bufferedOperations");
    __publicField(this, "_knownOperations");
    __publicField(this, "_knownRootNames");
    __publicField(this, "_pendingAction");
    __publicField(this, "_hasSelectionChanged");
    __publicField(this, "_sendBufferedOperationsDelayId");
    __publicField(this, "_baseBufferDelay");
    __publicField(this, "_currentBufferDelay");
    __publicField(this, "_lastSyncedOperationId");
    __publicField(this, "_disconnectionOperations");
    __publicField(this, "_operationIdentifier");
    if (this["_offset"] = 0, this["sessionId"] = null, this["serverHistory"] = new History(), this["editor"]["config"]["define"]("collaboration", {}), this["_channelId"] = this["editor"]["config"]["get"]("collaboration.channelId"), !this["_channelId"]) throw new CKEditorError("collaboration-missing-channelid", this);
    const _0x2fa2b2 = _0x2053fa["config"]["get"]("cloudServices.bundleVersion") || version;
    this["_service"] = new _l["CollaborativeEditingService"](_0x2fa2b2, this["_channelId"]), this["_document"] = this["editor"]["model"]["document"], this["_compressor"] = new g6(), this["_bufferedOperations"] = [], this["_knownOperations"] = /* @__PURE__ */ new WeakSet(), this["_knownRootNames"] = /* @__PURE__ */ new Set(), this["set"]("_isPendingUpdate", false), this["set"]("_hasSynchronizationProblem", false), this["_pendingAction"] = null, this["_hasSelectionChanged"] = false, this["_sendBufferedOperationsDelayId"] = null, this["_baseBufferDelay"] = 300, this["_currentBufferDelay"] = this["_baseBufferDelay"], this["_lastSyncedOperationId"] = null, this["_disconnectionOperations"] = /* @__PURE__ */ new WeakSet(), this["_operationIdentifier"] = new G2(this["_disconnectionOperations"]);
  }
  static get ["requires"]() {
    return [c9, i9, E5, PendingActions, l, Notification];
  }
  static get ["pluginName"]() {
    return "RealTimeCollaborationClient";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  get ["cloudDocumentVersion"]() {
    return this["_lastServerVersion"] + this["_offset"];
  }
  get ["_lastServerVersion"]() {
    return this["serverHistory"]["version"] - this["_offset"];
  }
  get ["lastSyncVersion"]() {
    const _0x4e35fb = this["serverHistory"]["getOperations"]();
    for (let _0x500850 = _0x4e35fb["length"] - 1; _0x500850 >= 0; _0x500850--) {
      const _0x3b433f = _0x4e35fb[_0x500850];
      if (!this["_disconnectionOperations"]["has"](_0x3b433f)) return _0x3b433f["baseVersion"] + 1 - this["_offset"];
    }
    return 0;
  }
  ["init"]() {
    const _0x4f7cbc = this["editor"], _0x2a6d6d = _0x4f7cbc["plugins"]["get"](l), _0xe52e4b = _0x4f7cbc["plugins"]["get"](c9);
    this["listenTo"](_0x2a6d6d, "getOperationAuthor", (_0x47c472, _0x1c8d96) => {
      const _0x499ee2 = _0x1c8d96[0];
      _0x499ee2["_authorId"] && (_0x47c472["return"] = _0x2a6d6d["getUser"](_0x499ee2["_authorId"]), _0x47c472["stop"]()), null === _0x499ee2["_authorId"] && (_0x47c472["return"] = null, _0x47c472["stop"]());
    }, { "priority": "high" }), this["listenTo"](_0x4f7cbc["model"]["document"]["selection"], "change:range", (_0x34cea2, _0x1845f9) => {
      _0x1845f9["directChange"] && this["_refreshUserSelectionMarkers"]();
    }), this["listenTo"](_0x4f7cbc["editing"]["view"], "change:hasDomSelection", () => {
      this["_refreshUserSelectionMarkers"]();
    }), this["_initThrowingOnDataSet"](), _0x4f7cbc["model"]["on"]("applyOperation", (_0x83d0e3, _0x1d1969) => {
      const _0x6e37eb = _0x1d1969[0];
      _0x6e37eb["isDocumentOperation"] && (this["_saveOperationInBuffer"](_0x6e37eb), this["_shouldSendUpdate"]() && this["_sendBufferedOperationsDelayed"]());
    }), this["_setUpDataInit"](), this["bind"]("_isEditingAllowed")["to"](_0xe52e4b, "state", this, "_hasSynchronizationProblem", (_0x4a9ae9, _0x3bdc24) => "connected" === _0x4a9ae9 && !_0x3bdc24), this["on"]("change:_isEditingAllowed", () => {
      this["_isEditingAllowed"] ? _0x4f7cbc["disableReadOnlyMode"]("rtc-offline") : _0x4f7cbc["enableReadOnlyMode"]("rtc-offline");
    }), this["_isEditingAllowed"] ? _0x4f7cbc["disableReadOnlyMode"]("rtc-offline") : _0x4f7cbc["enableReadOnlyMode"]("rtc-offline"), this["set"]("_isConnected", false);
  }
  async ["reconnect"]() {
    const _0x11220b = this["editor"]["plugins"]["get"](i9), _0xdd58c5 = this["editor"]["plugins"]["get"](c9);
    try {
      this["_isPendingUpdate"] = true, _0x11220b["unregister"](this["_channelId"]);
      const _0x1d4e98 = await this["_service"]["reconnect"](_0xdd58c5["connection"], this["lastSyncVersion"]);
      await this["_handleReconnectionResponse"](_0x1d4e98) && (this["_isPendingUpdate"] = false, this["_clearPendingAction"]());
      const _0x1d5a0f = await this["_service"]["getConnectedSessions"]();
      _0x11220b["register"](this["_channelId"], _0x1d5a0f), this["_handleSendingSelectionMarkers"](), this["_isConnected"] = true;
    } catch (_0x1882a9) {
      if (function(_0xdc8272) {
        return "404" === _0xdc8272["code"];
      }(_0x1882a9) && this["sessionId"]) await this["_connectAfterSessionHasBeenFlushed"]();
      else {
        if (function(_0x20a869) {
          return "409" === _0x20a869["code"];
        }(_0x1882a9)) {
          const _0x5afc3f = B3(this["editor"]["locale"], "The document cannot be connected back to the server. To not lose your content save it locally and refresh the editor.");
          this["_handleReconnectionError"](_0x5afc3f);
        } else {
          if (!(_0x1882a9 instanceof H5)) throw _0x1882a9;
          this["_handleReconnectionError"]();
        }
      }
    }
  }
  ["destroy"]() {
    const _0x22bdca = this["editor"]["plugins"]["get"](c9), _0x3b6426 = this["editor"]["plugins"]["get"](i9);
    this["editor"]["enableReadOnlyMode"]("rtc-destroyed"), _0x3b6426["channelSessions"]["has"](this["_channelId"]) && _0x3b6426["unregister"](this["_channelId"]), _0x22bdca["removeFromReconnectionStack"](this), this["_disconnectService"](), super["destroy"]();
  }
  async ["_handleReconnectionResponse"](_0x1e96d8) {
    if (this["sessionId"] !== _0x1e96d8["sessionId"] && this["_lastSyncedOperationId"] !== _0x1e96d8["lastOperationId"]) throw new H5();
    return this["sessionId"] = _0x1e96d8["sessionId"], this["_handleServerResponse"]([], { ..._0x1e96d8, "wereChangesApplied": false, "data": _0x1e96d8["data"] }, "reconnect");
  }
  async ["_connectService"](_0x2493e7, _0x5a08eb = false) {
    const { connection: _0x31cded } = this["editor"]["plugins"]["get"](c9);
    _l["CollaborativeEditingService"]["getConnectedSessions"](_0x31cded, this["_channelId"])["then"]((_0x3d62e5) => this["_initSessionsHandling"](_0x3d62e5))["catch"]((_0x169dd9) => {
      this["_crash"]("realtimecollaborationclient-init-session-connection-error", _0x169dd9);
    }), this["listenTo"](this["_service"], "operationsReceived", this["_handleReceivedOperations"]["bind"](this)), this["listenTo"](this["_service"], "error", (_0x390fb8, _0x1fa49e) => {
      this["_crash"]("realtimecollaborationclient-initservice-internal-error", _0x1fa49e);
    }), this["listenTo"](this["_service"], "disconnected", () => {
      this["_isConnected"] = false;
    });
    const _0x4530e9 = this["_operationIdentifier"]["getIdOfTheLastOperation"](_0x2493e7);
    this["_isPendingUpdate"] = true;
    const _0xb7d4b3 = await this["_service"]["connect"](_0x31cded, this["_compressOperations"](_0x2493e7), _0x4530e9);
    if (this["sessionId"] = _0xb7d4b3["sessionId"], _0x5a08eb) {
      if (!_0xb7d4b3["wereChangesApplied"]) return void this["_handleReconnectionError"]();
      this["_isPendingUpdate"] = false, this["_clearPendingAction"](), this["serverHistory"]["reset"](), this["_offset"] = _0xb7d4b3["offset"], this["serverHistory"]["version"] = this["_offset"], await this["_handleServerResponse"](_0x2493e7, _0xb7d4b3, "reconnection: flushed session");
    } else await this["_handleInitialConnectionData"](_0xb7d4b3, _0x2493e7);
    this["_handleSendingSelectionMarkers"](), this["_isConnected"] = true;
  }
  ["_handleSendingSelectionMarkers"]() {
    const _0xd3b93a = this["editor"]["plugins"]["get"](i9), _0x5d1b20 = this["editor"]["plugins"]["get"](E5), _0x38c144 = _0xd3b93a["channelSessions"]["get"](this["_channelId"]);
    _0x38c144 && _0x38c144["length"] > 1 ? _0x5d1b20["createUserMarkerOperations"]() : this["listenTo"](_0xd3b93a, "sessionAdd:" + this["_channelId"], () => {
      2 === _0xd3b93a["channelSessions"]["get"](this["_channelId"])["length"] && _0x5d1b20["createUserMarkerOperations"]();
    });
  }
  async ["_handleReceivedOperations"](_0x327c7d, _0x1021e8, _0x3363d3, _0x13555d) {
    if (!this["_isPendingUpdate"] && this["_document"]["version"] == _0x1021e8) {
      const _0x5b717e = this["_decompressOperations"](_0x3363d3, _0x13555d);
      await this["_fetchMissingUsers"](_0x5b717e), this["_handleExternalOperations"](_0x5b717e, _0x1021e8, _0x3363d3["lastOperationId"]) || this["_crash"]("realtimecollaborationclient-initservice-incorrect-server-operation");
    }
  }
  async ["_connectAfterSessionHasBeenFlushed"]() {
    this["_disconnectService"]();
    const { locale: _0x1f1be3 } = this["editor"];
    let _0x3b2115;
    try {
      _0x3b2115 = await this["_service"]["getDocumentDetails"]();
    } catch (_0x4e109f) {
      const _0xfb7bd3 = B3(_0x1f1be3, "The document details could not be taken during the reconnection. To not lose your content save it locally and refresh the editor.");
      return void this["_handleReconnectionError"](_0xfb7bd3);
    }
    const _0x1f27a6 = _0x3b2115["currentDocumentSession"] || _0x3b2115["lastDocumentSession"];
    if (this["_lastSyncedOperationId"] === _0x1f27a6["lastOperationId"]) await this["_connectService"](this["editor"]["model"]["document"]["history"]["getOperations"](), true);
    else {
      const _0x83cb96 = B3(_0x1f1be3, "The last saved version of the document does not match the local version. To not lose your content save it locally and refresh the editor.");
      this["_handleReconnectionError"](_0x83cb96);
    }
  }
  ["_disconnectService"]() {
    this["_service"]["disconnect"](), this["_bufferedOperations"] = [], clearTimeout(this["_sendBufferedOperationsDelayId"]), this["stopListening"](this["_service"]);
  }
  ["_initSessionsHandling"](_0x3894dd) {
    const _0xde1783 = this["editor"]["plugins"]["get"](i9);
    this["listenTo"](_0xde1783, "sessionAdd:" + this["_channelId"], (_0x4d50dd, { session: _0x36dcba }) => {
      if (_0x36dcba["id"] === _0xde1783["mySessionId"]) {
        _0x4d50dd["off"]();
        const _0x1c338a = this["editor"]["plugins"]["has"]("CommentsOnly") && this["editor"]["plugins"]["get"]("CommentsOnly");
        let _0xf4d1cd = _0x36dcba["permissions"];
        _0x1c338a && _0x1c338a["isEnabled"] && (_0xf4d1cd = _0xf4d1cd["filter"]((_0x9471d) => "document:write" !== _0x9471d)), this["editor"]["plugins"]["get"]("Permissions")["setPermissions"](_0xf4d1cd, this["_channelId"]);
      }
    }), _0xde1783["register"](this["_channelId"], _0x3894dd);
  }
  ["_initThrowingOnDataSet"]() {
    const _0x3a5df9 = this["editor"]["data"]["set"];
    this["editor"]["data"]["set"] = (..._0x2c3e7d) => {
      if (!_0x2c3e7d[_0x2c3e7d["length"] - 1]["suppressErrorInCollaboration"]) throw new CKEditorError("realtimecollaborationclient-editor-setdata-and-editor-data-set-are-forbidden-in-real-time-collaboration", this);
      _0x3a5df9["apply"](this["editor"]["data"], _0x2c3e7d);
    };
  }
  ["_setUpDataInit"]() {
    this["editor"]["data"]["on"]("init", (_0x1b9be8, [_0x1bf265]) => {
      if (this["_document"]["version"]) throw new CKEditorError("realtimecollaborationclient-init-document-already-initialized", this);
      _0x1b9be8["stop"](), this["_setPendingAction"]();
      const _0x169fce = this["editor"]["config"]["get"]("rootsAttributes"), _0x407a49 = this["_getOperationsFromInitData"](_0x1bf265, _0x169fce);
      0 == _0x407a49["length"] && _0x407a49["push"](new NoOperation(0)), _0x1b9be8["return"] = this["_connectService"](_0x407a49)["then"](() => {
        this["editor"]["plugins"]["get"](c9)["addToReconnectionStack"](this), this["editor"]["data"]["fire"]("ready");
      })["catch"]((_0x3a5176) => this["_crash"]("realtimecollaborationclient-init-connection-failed", _0x3a5176))["finally"](() => this["_clearPendingAction"]());
    }, { "priority": "high" }), this["editor"]["on"]("loadRoot", async (_0x369836, [_0x3a89d3, _0x3a272b]) => {
      _0x369836["stop"]();
      const _0x193272 = this["editor"]["model"]["document"]["getRoot"](_0x3a89d3);
      if (!this["_knownRootNames"]["has"](_0x3a89d3)) {
        const _0x29f0d6 = _0x3a272b && _0x3a272b["data"] ? _0x3a272b["data"] : "", _0x2b9507 = _0x3a272b && _0x3a272b["attributes"] ? _0x3a272b["attributes"] : {};
        await this["_loadRoot"](_0x3a89d3, _0x29f0d6, _0x2b9507);
      }
      this["editor"]["model"]["enqueueChange"]({ "isUndoable": false }, () => {
        _0x193272["_isLoaded"] = true, this["editor"]["model"]["document"]["differ"]["_bufferRootLoad"](_0x193272);
      });
    }, { "priority": "high" });
  }
  async ["_fetchMissingUsers"](_0x5aeb9a) {
    const _0x4801f0 = this["editor"]["plugins"]["get"](l), { connection: _0x35f764 } = this["editor"]["plugins"]["get"](c9), _0x3658eb = /* @__PURE__ */ new Set();
    for (const _0x28611f of _0x5aeb9a) {
      const _0x5efccc = _0x28611f["_authorId"];
      _0x5efccc && !_0x4801f0["getUser"](_0x5efccc) && _0x3658eb["add"](_0x5efccc);
    }
    if (0 === _0x3658eb["size"]) return;
    const _0x5aeac6 = await User["getMany"](_0x35f764, Array["from"](_0x3658eb));
    for (const _0x1ebc1d of _0x5aeac6) _0x4801f0["getUser"](_0x1ebc1d["id"]) || _0x4801f0["addUser"](_0x1ebc1d);
  }
  ["_getOperationsFromInitData"](_0xdbb0ed, _0x4df2b2 = {}) {
    const _0x4fe4c9 = this["editor"]["model"], _0x2a8085 = [];
    let _0x4479a4 = 0;
    const _0x2851e2 = "string" == typeof _0xdbb0ed ? { "main": _0xdbb0ed } : _0xdbb0ed;
    for (const _0x41249c of Object["keys"](_0x2851e2)) {
      if (!this["_document"]["roots"]["has"](_0x41249c)) throw new CKEditorError("realtimecollaborationclient-init-non-existent-root", this);
      const _0x2813f5 = this["editor"]["data"]["parse"](_0x2851e2[_0x41249c]), _0x2cd706 = this["_document"]["getRoot"](_0x41249c), _0x30bddb = new InsertOperation(_0x4fe4c9["createPositionAt"](_0x2cd706, 0), _0x2813f5, _0x4479a4++);
      _0x2a8085["push"](_0x30bddb);
      for (const [_0xa316ac, _0xbbebb] of _0x2813f5["markers"]) {
        const _0xcc65e1 = _0x4fe4c9["createRange"](_0x4fe4c9["createPositionFromPath"](_0x2cd706, _0xbbebb["start"]["path"]["slice"]()), _0x4fe4c9["createPositionFromPath"](_0x2cd706, _0xbbebb["end"]["path"]["slice"]())), _0x1fd968 = new MarkerOperation(_0xa316ac, null, _0xcc65e1, _0x4fe4c9["markers"], true, _0x4479a4++);
        _0x2a8085["push"](_0x1fd968);
      }
    }
    if (_0x4df2b2) for (const [_0xb16713, _0x462d56] of Object["entries"](_0x4df2b2)) {
      const _0xa8fa3a = _0x4fe4c9["document"]["getRoot"](_0xb16713);
      if (!_0xa8fa3a) throw new CKEditorError("multi-root-editor-root-attributes-no-root", null);
      for (const [_0x220375, _0x427c79] of Object["entries"](_0x462d56)) if (null !== _0x427c79) {
        const _0x3a114b = new RootAttributeOperation(_0xa8fa3a, _0x220375, null, _0x427c79, _0x4479a4++);
        _0x2a8085["push"](_0x3a114b);
      }
    }
    return _0x2a8085;
  }
  async ["_loadRoot"](_0x23f950, _0x106171, _0x92ba9b) {
    this["_getOperationsFromInitData"]({ [_0x23f950]: _0x106171 }, { [_0x23f950]: _0x92ba9b })["forEach"]((_0x25706a, _0x5edd34) => {
      _0x25706a["baseVersion"] = this["_document"]["version"] + _0x5edd34, _0x25706a["_isInit"] = true, this["_saveOperationInBuffer"](_0x25706a);
    }), this["_sendBufferedOperationsDelayed"](), await this["_waitUntilSynced"]();
  }
  async ["_handleInitialConnectionData"](_0xae5cda, _0x2e3711) {
    let _0x332f86;
    this["_offset"] = _0xae5cda["offset"];
    const _0x3355c0 = _0xae5cda["wereChangesApplied"] && !_0xae5cda["initData"], _0x24e6ca = _0x3355c0 ? 0 : _0xae5cda["data"]["baseVersion"];
    if (_0x2e3711["forEach"]((_0xb87059) => {
      _0xb87059["_isInit"] = true, _0xb87059["createdAt"] = _0xae5cda["sessionCreatedAt"], _0xb87059["_authorId"] = null;
    }), _0x3355c0) _0x332f86 = _0x2e3711, this["_applyOperationsSet"](_0x332f86, _0x3355c0);
    else {
      if (_0xae5cda["initData"]) {
        const _0x3f83b6 = this["_getOperationsFromInitData"](_0xae5cda["initData"]);
        this["_document"]["history"]["version"] = -_0x3f83b6["length"], _0x3f83b6["forEach"]((_0x1d4deb) => {
          _0x1d4deb["baseVersion"] -= _0x3f83b6["length"], _0x1d4deb["createdAt"] = _0xae5cda["sessionCreatedAt"], _0x1d4deb["_isInit"] = true, _0x1d4deb["_authorId"] = null;
        }), this["_applyOperationsSet"](_0x3f83b6, true), this["serverHistory"]["version"] = -_0x3f83b6["length"] + this["_offset"], this["_updateServerHistory"](_0x3f83b6);
      }
      this["_document"]["history"]["version"] = _0x24e6ca, _0x332f86 = this["_decompressOperations"](_0xae5cda["data"], _0xae5cda["metadata"]), await this["_fetchMissingUsers"](_0x332f86), this["_applyOperationsSet"](_0x332f86, _0x3355c0);
    }
    _0xae5cda["lastOperationId"] && (this["_operationIdentifier"]["setIdForTheLastOperation"](_0x332f86, _0xae5cda["lastOperationId"]), this["_lastSyncedOperationId"] = _0xae5cda["lastOperationId"]), this["serverHistory"]["version"] = _0x24e6ca + this["_offset"], this["_updateServerHistory"](_0x332f86), _0x2e3711["filter"]((_0x4c1d43) => {
      const _0x9aa8d0 = this["_getAffectedRoot"](_0x4c1d43);
      return _0x9aa8d0 && !this["_knownRootNames"]["has"](_0x9aa8d0);
    })["forEach"]((_0x2d32d8, _0xb3528) => {
      _0x2d32d8["baseVersion"] = this["_document"]["version"] + _0xb3528, this["_saveOperationInBuffer"](_0x2d32d8);
    }), this["_shouldSendUpdate"]() ? (this["_currentBufferDelay"] = 0, this["_sendBufferedOperationsDelayed"](true), await this["_waitUntilSynced"]()) : (this["_isPendingUpdate"] = false, this["_clearPendingAction"]());
  }
  ["_crash"](_0x63c8b4, _0x493c4b) {
    throw this["_isPendingUpdate"] = true, _0x493c4b && console["error"](_0x493c4b), new CKEditorError(_0x63c8b4, this["editor"]);
  }
  ["_saveOperationInBuffer"](_0x29327f) {
    this["_knownOperations"]["has"](_0x29327f) || (this["_knownOperations"]["add"](_0x29327f), this["_bufferedOperations"]["push"](_0x29327f), this["_pendingAction"] || "marker" == _0x29327f["type"] && !_0x29327f["affectsData"] || this["_setPendingAction"]());
  }
  ["_sendBufferedOperationsDelayed"](_0x5a9be2 = false) {
    !_0x5a9be2 && this["_isPendingUpdate"] || (this["_isPendingUpdate"] = true, clearTimeout(this["_sendBufferedOperationsDelayId"]), this["_sendBufferedOperationsDelayId"] = setTimeout(() => {
      this["_sendBufferedOperations"]()["then"]((_0x16981e) => {
        _0x16981e && (this["_clearPendingAction"](), this["_isPendingUpdate"] = false);
      })["catch"]((_0x4045d7) => {
        if (this["_clearPendingAction"](), this["_isPendingUpdate"] = false, !function(_0x2fa4da) {
          return _0x2fa4da["message"]["startsWith"]("cloud-services-internal-error: Not connected.") || _0x2fa4da["message"]["startsWith"]("cloud-services-internal-error: Collaborative Editing Service is not connected.") || _0x2fa4da["message"]["startsWith"]("cloud-services-internal-error: Request timeout.");
        }(_0x4045d7)) throw _0x4045d7;
      });
    }, this["_currentBufferDelay"]));
  }
  ["_waitUntilSynced"]() {
    return new Promise((_0x56f235) => {
      this["on"]("change:_isPendingUpdate", () => {
        _0x56f235();
      });
    });
  }
  async ["_sendBufferedOperations"]() {
    const _0x301fc1 = this["editor"]["plugins"]["get"](E5);
    if (this["_shouldSendSelectionUpdate"]() && (_0x301fc1["createUserMarkerOperations"](), this["_hasSelectionChanged"] = false), !this["_shouldSendUpdate"]()) return true;
    const _0x16578f = [...this["_bufferedOperations"]];
    for (const _0x3d4383 of _0x16578f) _0x3d4383["wasUndone"] = this["_document"]["history"]["isUndoneOperation"](_0x3d4383);
    const _0x3cf61d = this["_operationIdentifier"]["getIdOfTheLastOperation"](_0x16578f), _0x4ccfb1 = F2++, _0x1bc821 = this["_compressOperations"](_0x16578f), _0x43fce3 = await this["_service"]["sendOperations"](_0x1bc821, _0x1bc821["baseVersion"], _0x3cf61d);
    try {
      return await this["_handleServerResponse"](_0x16578f, _0x43fce3, _0x4ccfb1);
    } catch (_0x5c6b20) {
      return this["_crash"]("realtimecollaborationclient-sendbufferedoperations", _0x5c6b20);
    }
  }
  async ["_handleServerResponse"](_0x20942f, _0xfbff1c, _0x486d1e) {
    if ("error" in _0xfbff1c) throw _0xfbff1c["error"];
    let _0x5349a3 = false;
    if (_0xfbff1c["wereChangesApplied"]) {
      _0xfbff1c["lastOperationId"] && (this["_lastSyncedOperationId"] = _0xfbff1c["lastOperationId"]), this["_bufferedOperations"] = this["_bufferedOperations"]["filter"]((_0x522677) => !_0x20942f["includes"](_0x522677));
      for (const _0x4f0006 of _0x20942f) _0x4f0006["createdAt"] = "lastOperationAcceptedAt" in _0xfbff1c && _0xfbff1c["lastOperationAcceptedAt"] || void 0;
      q5(_0x20942f, _0xfbff1c["version"] - _0x20942f["length"]), this["_updateServerHistory"](_0x20942f);
      const _0x36bf23 = _0x20942f["filter"]((_0x2aee8f) => {
        if (!_0x2aee8f["_isInit"]) return false;
        const _0x4b8dba = this["_getAffectedRoot"](_0x2aee8f);
        return _0x4b8dba && !this["_knownRootNames"]["has"](_0x4b8dba);
      });
      q5(_0x36bf23, this["_document"]["version"]), this["_applyOperationsSet"](_0x36bf23), _0x5349a3 = true, this["_currentBufferDelay"] = this["_baseBufferDelay"];
    } else {
      const _0x22c0eb = this["_decompressOperations"](_0xfbff1c["data"], _0xfbff1c["metadata"])["filter"]((_0x364027) => _0x364027["baseVersion"] >= this["_lastServerVersion"]);
      _0x22c0eb["forEach"]((_0x483935) => this["_addKnownRoot"](_0x483935)), this["_bufferedOperations"] = this["_bufferedOperations"]["filter"]((_0x111985) => !_0x111985["_isInit"] || !this["_knownRootNames"]["has"](this["_getAffectedRoot"](_0x111985))), this["_bufferedOperations"]["length"] && q5(this["_bufferedOperations"], this["_bufferedOperations"][0]["baseVersion"]), await this["_fetchMissingUsers"](_0x22c0eb), _0x5349a3 = this["_handleExternalOperations"](_0x22c0eb, _0xfbff1c["version"], _0xfbff1c["lastOperationId"]), this["_currentBufferDelay"] = Math["round"](this["_currentBufferDelay"] / 2);
    }
    return _0x5349a3 ? !this["_shouldSendUpdate"]() || (this["_sendBufferedOperationsDelayed"](true), false) : this["_crash"]("realtimecollaborationclient-handleserverresponse");
  }
  ["_handleExternalOperations"](_0x25acf5, _0x211baf, _0x3b38d1) {
    try {
      const _0x27627b = { "document": this["_document"], "useRelations": false, "padWithNoOps": true }, { operationsA: _0x2b3946, operationsB: _0x47da91, originalOperations: _0x3ecc0a } = transformSets(_0x25acf5, this["_bufferedOperations"], _0x27627b);
      q5(_0x2b3946, this["_document"]["version"]), q5(_0x47da91, _0x211baf);
      for (const _0x31aa5f of _0x2b3946) {
        const _0x5ac535 = _0x3ecc0a["get"](_0x31aa5f);
        _0x31aa5f["_authorId"] = _0x5ac535 ? _0x5ac535["_authorId"] : null;
      }
      _0x3b38d1 && (this["_operationIdentifier"]["setIdForTheLastOperation"](_0x25acf5, _0x3b38d1), this["_lastSyncedOperationId"] = _0x3b38d1), this["_bufferedOperations"] = [..._0x47da91], this["_applyOperationsSet"](_0x2b3946), this["_updateServerHistory"](_0x25acf5);
    } catch (_0x5bc0b3) {
      return console["error"](_0x5bc0b3), false;
    }
    return true;
  }
  ["_applyOperationsSet"](_0x168702, _0x2a01c6 = false) {
    this["editor"]["model"]["enqueueChange"]({ "isUndoable": false, "isLocal": false }, (_0x206d00) => {
      for (const _0x3ac127 of _0x168702) this["_knownOperations"]["add"](_0x3ac127), this["_addKnownRoot"](_0x3ac127), _0x206d00["batch"]["addOperation"](_0x3ac127), this["editor"]["model"]["applyOperation"](_0x3ac127);
    });
  }
  ["_addKnownRoot"](_0x117214) {
    const _0x28fd30 = this["_getAffectedRoot"](_0x117214);
    _0x28fd30 && this["_knownRootNames"]["add"](_0x28fd30);
  }
  ["_getAffectedRoot"](_0x6ce68a) {
    let _0x52b643, _0x118939;
    switch (_0x6ce68a["type"]) {
      case "insert":
        _0x52b643 = _0x6ce68a["position"]["root"];
        break;
      case "marker":
        if (_0x118939 = _0x6ce68a["newRange"], !_0x118939) return null;
        _0x52b643 = _0x118939["root"];
        break;
      case "addRootAttribute":
        _0x52b643 = _0x6ce68a["root"];
        break;
      case "addRoot":
        _0x52b643 = _0x6ce68a["affectedSelectable"];
        break;
      case "move":
        _0x52b643 = _0x6ce68a["targetPosition"]["root"];
        break;
      default:
        return null;
    }
    return _0x52b643["rootName"];
  }
  ["_updateServerHistory"](_0x5a3d68) {
    _0x5a3d68["forEach"]((_0xe84d89) => {
      const _0x330262 = _0xe84d89["clone"]();
      _0x330262["_authorId"] = _0xe84d89["_authorId"], _0x330262["_isInit"] = !!_0xe84d89["_isInit"], _0x330262["createdAt"] = _0xe84d89["createdAt"], _0x330262["baseVersion"] += this["_offset"], _0xe84d89["_isDisconnection"] && this["_disconnectionOperations"]["add"](_0x330262), this["serverHistory"]["addOperation"](_0x330262);
    });
  }
  ["_handleReconnectionError"](_0x54e64e) {
    const _0x3bfb1f = this["editor"]["plugins"]["get"]("Notification"), _0x4f39fd = this["editor"]["locale"];
    _0x54e64e || (_0x54e64e = B3(_0x4f39fd, "The local document and server document differ and merging them can cause unexpected behavior. To not lose your content save it locally and refresh the editor.")), _0x3bfb1f["showWarning"](_0x54e64e, { "title": B3(_0x4f39fd, "Synchronization issue"), "namespace": "real-time-collaboration" }), this["_hasSynchronizationProblem"] = true, clearTimeout(this["_sendBufferedOperationsDelayId"]), this["_bufferedOperations"] = [], this["editor"]["plugins"]["get"](c9)["destroy"]();
  }
  ["_setPendingAction"]() {
    this["_pendingAction"] || (this["_pendingAction"] = this["editor"]["plugins"]["get"](PendingActions)["add"](B3(this["editor"]["locale"], "PENDING_ACTION_SENDING_DATA")));
  }
  ["_clearPendingAction"]() {
    this["_pendingAction"] && (this["editor"]["plugins"]["get"](PendingActions)["remove"](this["_pendingAction"]), this["_pendingAction"] = null);
  }
  ["_compressOperations"](_0x2d6541) {
    const _0x5cef07 = _0x2d6541["map"]((_0x1a1fdc) => _0x1a1fdc["toJSON"]());
    return this["_compressor"]["compress"](_0x5cef07);
  }
  ["_decompressOperations"](_0x36884a, _0x323b68) {
    return this["_compressor"]["decompress"](_0x36884a)["map"]((_0x1865f4, _0x4237d9) => {
      const _0x2d038a = "init" == _0x323b68[_0x4237d9]["type"];
      if ("InsertOperation" == _0x1865f4["__className"]) {
        const _0x2b0003 = _0x1865f4["position"]["root"];
        !this["_document"]["getRoot"](_0x2b0003) && (this["_document"]["createRoot"]("$root", _0x2b0003)["_isAttached"] = false);
      }
      const _0xfd4823 = OperationFactory["fromJSON"](_0x1865f4, this["_document"]);
      return _0xfd4823["wasUndone"] = _0x1865f4["wasUndone"], _0xfd4823["_isInit"] = _0x2d038a, _0xfd4823["_authorId"] = _0x2d038a ? null : _0x323b68[_0x4237d9]["userId"], _0xfd4823["_isDisconnection"] = "cs:removeUser" === _0x323b68[_0x4237d9]["type"], _0xfd4823["createdAt"] = _0x323b68[_0x4237d9]["createdAt"], _0xfd4823;
    });
  }
  ["_refreshUserSelectionMarkers"]() {
    this["_hasSelectionChanged"] = true, this["_shouldSendSelectionUpdate"]() ? this["_sendBufferedOperationsDelayed"]() : this["_hasSelectionChanged"] = false;
  }
  ["_shouldSendSelectionUpdate"]() {
    const _0x33415c = this["editor"]["plugins"]["get"](i9)["channelSessions"]["get"](this["_channelId"]);
    return !this["editor"]["isReadOnly"] && !!_0x33415c && _0x33415c["length"] > 1 && this["_hasSelectionChanged"];
  }
  ["_shouldSendUpdate"]() {
    return this["_bufferedOperations"]["length"] > 0 || this["_shouldSendSelectionUpdate"]();
  }
};
__publicField(_l, "CollaborativeEditingService", /* @__PURE__ */ (() => CollaborativeEditingService)());
var l8 = _l;
var H5 = class extends Error {
};
function q5(_0x393832, _0x10d341) {
  for (const _0x2f5043 of _0x393832) _0x2f5043["baseVersion"] = _0x10d341++;
}
var G2 = class {
  constructor(_0x44b14d) {
    __publicField(this, "_ignoredOperations");
    __publicField(this, "_operationToId");
    this["_ignoredOperations"] = _0x44b14d, this["_operationToId"] = /* @__PURE__ */ new WeakMap();
  }
  ["getIdOfTheLastOperation"](_0x453417) {
    let _0x2bf301 = _0x453417["length"];
    for (; _0x2bf301--; ) {
      const _0x1c3fc2 = _0x453417[_0x2bf301];
      if (!this["_ignoredOperations"]["has"](_0x1c3fc2)) {
        if (!this["_operationToId"]["has"](_0x1c3fc2)) {
          const _0xb3820c = uid()["slice"](1, 18);
          this["_operationToId"]["set"](_0x1c3fc2, _0xb3820c);
        }
        return this["_operationToId"]["get"](_0x1c3fc2);
      }
    }
  }
  ["setIdForTheLastOperation"](_0x183523, _0x284321) {
    if (!_0x284321) return;
    let _0x38a996 = _0x183523["length"];
    for (; _0x38a996--; ) {
      const _0x282007 = _0x183523[_0x38a996];
      this["_ignoredOperations"]["has"](_0x282007) || this["_operationToId"]["set"](_0x282007, _0x284321);
    }
  }
};
var n9 = class extends Plugin {
  static get ["requires"]() {
    return [l8];
  }
  static get ["pluginName"]() {
    return "RealTimeCollaborativeEditing";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
};
var _a4 = class _a4 extends ContextPlugin {
  constructor(_0x35a06d) {
    super(_0x35a06d);
    __publicField(this, "_services");
    this["_services"] = /* @__PURE__ */ new Map();
  }
  static get ["requires"]() {
    return [c9, "CommentsRepository", i9, l];
  }
  static get ["pluginName"]() {
    return "CloudServicesCommentsAdapter";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  async ["init"]() {
    const _0x486e2e = this["context"], _0x2b8cd6 = _0x486e2e["plugins"]["get"]("CommentsRepository");
    if (_0x486e2e["plugins"]["get"](c9)["addToReconnectionStack"](this), _0x2b8cd6["adapter"] = { "addCommentThread": async ({ channelId: _0x1ac95e, threadId: _0xabcf76, comments: _0x3aa004, resolvedAt: _0x406689, resolvedBy: _0x245999, context: _0x28e56b, attributes: _0x17e164 }) => {
      const _0x1ff9c2 = await this["_getService"](_0x1ac95e)["addCommentThread"]({ "commentThreadId": _0xabcf76, "comments": _0x3aa004["map"]((_0x1b3ecf) => function(_0x228d83, _0xc38987, _0x2b27f2) {
        return { "commentThreadId": _0x2b27f2, "commentId": _0x228d83["commentId"], "userId": _0x228d83["authorId"], "content": _0x228d83["content"], "documentId": _0xc38987, "createdAt": _0x228d83["createdAt"], "attributes": _0x228d83["attributes"] || {} };
      }(_0x1b3ecf, _0x1ac95e, _0xabcf76)), "resolvedAt": _0x406689, "resolvedBy": _0x245999, "context": _0x28e56b, "attributes": _0x17e164 })["catch"](gt2);
      return { "threadId": _0x1ff9c2["commentThreadId"], "comments": _0x1ff9c2["comments"] };
    }, "getCommentThread": async ({ channelId: _0x4c5863, threadId: _0x3c2f7a }) => {
      const _0x2da32 = await this["_getService"](_0x4c5863)["getCommentThread"](_0x3c2f7a)["catch"](gt2);
      return _0x2da32["deletedAt"] ? null : (await this["_fetchMissingUsersForThreads"]([_0x2da32]), { "threadId": _0x2da32["commentThreadId"], "comments": _0x2da32["comments"]["map"](nt2), "context": _0x2da32["context"], "resolvedAt": _0x2da32["resolvedAt"], "resolvedBy": _0x2da32["resolvedBy"], "attributes": _0x2da32["attributes"] || {} });
    }, "updateCommentThread": async ({ channelId: _0x4339ef, threadId: _0x24efe1, context: _0x19f94d, unlinkedAt: _0x360a9b, attributes: _0x200347 }) => this["_getService"](_0x4339ef)["updateCommentThread"]({ "commentThreadId": _0x24efe1, "context": _0x19f94d, "attributes": _0x200347, "unlinkedAt": _0x360a9b })["catch"](et)["catch"](gt2), "resolveCommentThread": async ({ channelId: _0x18d8a4, threadId: _0x21d07b }) => {
      const _0x361dcd = await this["_getService"](_0x18d8a4)["resolveCommentThread"](_0x21d07b)["catch"](et)["catch"](gt2);
      return { "threadId": _0x361dcd["commentThreadId"], "resolvedAt": _0x361dcd["resolvedAt"], "resolvedBy": _0x361dcd["resolvedBy"] };
    }, "reopenCommentThread": async ({ channelId: _0x18e722, threadId: _0x2c5795 }) => this["_getService"](_0x18e722)["reopenCommentThread"](_0x2c5795)["catch"](et)["catch"](gt2), "removeCommentThread": ({ channelId: _0xd516b8, threadId: _0x547f86 }) => this["_getService"](_0xd516b8)["removeCommentThread"](_0x547f86)["catch"](et)["catch"](gt2), "addComment": ({ channelId: _0x335781, threadId: _0x313fbc, commentId: _0x293c44, content: _0x5f451f, attributes: _0x2052c8 }) => this["_getService"](_0x335781)["addComment"](_0x313fbc, _0x293c44, _0x5f451f, _0x2052c8)["catch"](gt2), "updateComment": ({ channelId: _0xb2ad31, threadId: _0x590637, commentId: _0x5e6393, content: _0x1311cf, attributes: _0x1fa6e0 }) => this["_getService"](_0xb2ad31)["updateComment"](_0x590637, _0x5e6393, _0x1311cf, _0x1fa6e0)["catch"](et)["catch"](gt2), "removeComment": ({ channelId: _0xc9c17d, threadId: _0x11bd89, commentId: _0x5395d7 }) => this["_getService"](_0xc9c17d)["removeComment"](_0x11bd89, _0x5395d7)["catch"](et)["catch"](gt2) }, _0x486e2e instanceof Context) {
      const _0x4610df = _0x486e2e["config"]["get"]("collaboration.channelId"), _0x41734c = _0x486e2e["plugins"]["get"](i9);
      await this["_setUpService"](_0x4610df);
      const _0x3759ac = await this["_services"]["get"](_0x4610df)["getConnectedSessions"]();
      this["listenTo"](_0x41734c, "sessionAdd:" + _0x4610df, (_0x3cc029, { session: _0x2e1078 }) => {
        _0x2e1078["id"] === _0x41734c["mySessionId"] && (_0x3cc029["off"](), this["context"]["plugins"]["get"]("Permissions")["setPermissions"](_0x2e1078["permissions"], _0x4610df));
      }), _0x41734c["register"](_0x4610df, _0x3759ac);
    }
  }
  async ["_setUpService"](_0x3eb302) {
    if (this["_services"]["has"](_0x3eb302)) throw new CKEditorError("cloudservicescommentsadapter-connect-already-connected", null, { "channelId": _0x3eb302 });
    const _0x123bfa = this["context"]["plugins"]["get"]("CommentsRepository"), _0x436899 = new _a4["CommentsService"](_0x3eb302);
    this["_services"]["set"](_0x3eb302, _0x436899), this["listenTo"](_0x436899, "commentThreadAdded", (_0x1c01ac, _0xa0ef86) => {
      const { commentThreadId: _0xc89e9, documentId: _0x23a56a, context: _0x50d102, attributes: _0xffb3e0, resolvedAt: _0x21f502, resolvedBy: _0x5513dd, comments: _0x28317a } = _0xa0ef86;
      _0x123bfa["getCommentThread"](_0xc89e9) || _0x123bfa["addCommentThread"]({ "threadId": _0xc89e9, "channelId": _0x23a56a, "comments": _0x28317a ? _0x28317a["map"](nt2) : [], "context": _0x50d102, "attributes": _0xffb3e0, "resolvedAt": _0x21f502, "resolvedBy": _0x5513dd, "isFromAdapter": true });
    }), this["listenTo"](_0x436899, "commentThreadUpdated", (_0x56c1e8, { commentThreadId: _0xe2c125, documentId: _0x3597c7, context: _0x4d2289, unlinkedAt: _0x7c2c6c, attributes: _0x5c233c }) => {
      _0x123bfa["getCommentThread"](_0xe2c125) && _0x123bfa["updateCommentThread"]({ "threadId": _0xe2c125, "channelId": _0x3597c7, "context": _0x4d2289, "unlinkedAt": _0x7c2c6c, "attributes": _0x5c233c, "isFromAdapter": true });
    }), this["listenTo"](_0x436899, "commentThreadResolved", (_0x2b6c7b, { commentThreadId: _0x506967, resolvedBy: _0x3546a0, resolvedAt: _0x3fbb04 }) => {
      const _0x54ac63 = _0x123bfa["getCommentThread"](_0x506967);
      _0x54ac63 && _0x54ac63["resolve"]({ "resolvedBy": _0x3546a0, "resolvedAt": _0x3fbb04, "isFromAdapter": true });
    }), this["listenTo"](_0x436899, "commentThreadReopened", (_0x159e12, { commentThreadId: _0x5578df }) => {
      const _0x340868 = _0x123bfa["getCommentThread"](_0x5578df);
      _0x340868 && _0x340868["reopen"]({ "isFromAdapter": true });
    }), this["listenTo"](_0x436899, "commentThreadRemoved", (_0xd6368, { commentThreadId: _0x597120 }) => {
      const _0x5682b8 = _0x123bfa["getCommentThread"](_0x597120);
      _0x5682b8 && _0x5682b8["remove"]({ "isFromAdapter": true });
    }), this["listenTo"](_0x436899, "commentAdded", (_0x4a091e, _0x23a7c0) => {
      const _0x16a2be = _0x23a7c0["commentThreadId"], _0x487730 = _0x123bfa["getCommentThread"](_0x16a2be);
      _0x487730 && _0x487730["addComment"]({ ...nt2(_0x23a7c0), "isFromAdapter": true });
    }), this["listenTo"](_0x436899, "commentUpdated", (_0x304c05, { commentThreadId: _0x269942, commentId: _0x25901a, content: _0x2303d8, attributes: _0x5ccf35 }) => {
      const _0x3e6d0c = _0x123bfa["getCommentThread"](_0x269942);
      if (_0x3e6d0c) {
        const _0x516e60 = _0x3e6d0c["getComment"](_0x25901a);
        _0x516e60 && _0x516e60["update"]({ "content": _0x2303d8, "attributes": _0x5ccf35, "isFromAdapter": true });
      }
    }), this["listenTo"](_0x436899, "commentRemoved", (_0x340407, { commentThreadId: _0x532f78, commentId: _0x34643d }) => {
      const _0x984cb7 = _0x123bfa["getCommentThread"](_0x532f78);
      if (_0x984cb7) {
        const _0x27c3f4 = _0x984cb7["getComment"](_0x34643d);
        _0x27c3f4 && _0x27c3f4["remove"]({ "isFromAdapter": true });
      }
    }), await this["_connectService"](_0x3eb302);
  }
  ["destroy"]() {
    if (this["context"] instanceof Context) {
      const _0x153b8f = this["context"]["config"]["get"]("collaboration.channelId");
      this["_terminateService"](_0x153b8f);
    }
  }
  ["_terminateService"](_0x460a01) {
    if (!this["_services"]["has"](_0x460a01)) throw new CKEditorError("cloudservicescommentsadapter-disconnect-not-exist", null, { "channelId": _0x460a01 });
    this["_getService"](_0x460a01)["disconnect"](), this["_services"]["delete"](_0x460a01);
  }
  async ["reconnect"]() {
    for (const _0x49a36d of this["_services"]["keys"]()) await this["_connectService"](_0x49a36d);
    if (this["context"] instanceof Context) {
      const _0x5cccf0 = this["context"]["config"]["get"]("collaboration.channelId"), _0xb6062a = this["context"]["plugins"]["get"](i9);
      _0xb6062a["unregister"](_0x5cccf0);
      const _0x2d5fc8 = await this["_services"]["get"](_0x5cccf0)["getConnectedSessions"]();
      _0xb6062a["register"](_0x5cccf0, _0x2d5fc8);
    }
  }
  async ["_connectService"](_0x459057) {
    const { connection: _0x2f5bda } = this["context"]["plugins"]["get"](c9), _0x419daf = this["context"]["plugins"]["get"]("CommentsRepository"), _0x292226 = this["_services"]["get"](_0x459057), _0x3a0b23 = await _0x292226["connect"](_0x2f5bda);
    await this["_fetchMissingUsersForThreads"](_0x3a0b23);
    const _0x542074 = new Set(Array["from"](_0x419daf["getCommentThreads"]({ "channelId": _0x459057 }), (_0x1190a8) => _0x1190a8["id"]));
    for (const _0x5e39fe of _0x3a0b23) _0x5e39fe["deletedAt"] || _0x542074["delete"](_0x5e39fe["commentThreadId"]);
    for (const _0x2d9121 of _0x542074) _0x419daf["getCommentThread"](_0x2d9121)["remove"]({ "isFromAdapter": true });
    for (const _0x30bcc2 of _0x3a0b23) {
      let _0x8a6e75 = _0x419daf["getCommentThread"](_0x30bcc2["commentThreadId"]);
      const { commentThreadId: _0x226622, context: _0x2b2fcb, attributes: _0x222e27, resolvedBy: _0x1a7c9c, resolvedAt: _0x478de3, unlinkedAt: _0x30ed72, deletedAt: _0x3e24a4 } = _0x30bcc2;
      if (_0x3e24a4) continue;
      _0x8a6e75 || (_0x8a6e75 = _0x419daf["addCommentThread"]({ "channelId": _0x459057, "threadId": _0x226622, "context": _0x2b2fcb, "attributes": _0x222e27 || {}, "resolvedBy": _0x1a7c9c, "resolvedAt": _0x478de3, "unlinkedAt": _0x30ed72, "isFromAdapter": true }));
      const _0xfd015e = new Set(Array["from"](_0x8a6e75["comments"], (_0x42d832) => _0x42d832["id"]));
      for (const _0x28f005 of _0x30bcc2["comments"]) _0xfd015e["delete"](_0x28f005["commentId"]);
      for (const _0x524629 of _0xfd015e) _0x8a6e75["getComment"](_0x524629)["remove"]({ "isFromAdapter": true });
      for (const _0x29b7f2 of _0x30bcc2["comments"]) {
        const _0x54cd4c = _0x8a6e75["getComment"](_0x29b7f2["commentId"]);
        _0x54cd4c ? _0x54cd4c["content"] !== _0x29b7f2["content"] && _0x54cd4c["update"]({ "content": _0x29b7f2["content"], "isFromAdapter": true }) : _0x8a6e75["addComment"](Object["assign"](nt2(_0x29b7f2), { "isFromAdapter": true }));
      }
    }
  }
  ["_getService"](_0x394deb) {
    if (!this["_services"]["has"](_0x394deb)) throw new CKEditorError("cloudservicescommentsadapter-service-not-exist", null, { "channelId": _0x394deb });
    return this["_services"]["get"](_0x394deb);
  }
  async ["_fetchMissingUsersForThreads"](_0x4d654c) {
    const _0x396ca4 = this["context"]["plugins"]["get"](l), { connection: _0x35f8d3 } = this["context"]["plugins"]["get"](c9), _0x5841fb = /* @__PURE__ */ new Set();
    for (const { resolvedBy: _0x352da0, comments: _0x14b075 } of _0x4d654c) {
      _0x352da0 && !_0x396ca4["getUser"](_0x352da0) && _0x5841fb["add"](_0x352da0);
      for (const { userId: _0x4557c8 } of _0x14b075) _0x396ca4["getUser"](_0x4557c8) || _0x5841fb["add"](_0x4557c8);
    }
    if (0 === _0x5841fb["size"]) return;
    const _0x4fee84 = await User["getMany"](_0x35f8d3, Array["from"](_0x5841fb));
    for (const _0x5e55f6 of _0x4fee84) _0x396ca4["getUser"](_0x5e55f6["id"]) || _0x396ca4["addUser"](_0x5e55f6);
  }
};
__publicField(_a4, "CommentsService", /* @__PURE__ */ (() => CommentsService)());
var a13 = _a4;
async function et(_0x560670) {
  if ("404" !== _0x560670["code"]) throw _0x560670;
}
function gt2(_0x122e03) {
  if ((_0x30f63b = _0x122e03)["message"]["startsWith"]("cloud-services-internal-error: Comments Service is not connected.") || _0x30f63b["message"]["startsWith"]("cloud-services-internal-error: Not connected.") || _0x30f63b["message"]["startsWith"]("cloud-services-internal-error: Request timeout.")) return new Promise(() => {
  });
  var _0x30f63b;
  throw _0x122e03;
}
function nt2(_0x297101) {
  return { "threadId": _0x297101["commentThreadId"], "commentId": _0x297101["commentId"], "content": _0x297101["content"], "createdAt": _0x297101["createdAt"], "authorId": _0x297101["userId"], "attributes": _0x297101["attributes"] || {} };
}
var _f = class _f extends Plugin {
  constructor(_0x5e74da) {
    super(_0x5e74da);
    __publicField(this, "_bufferedRequests");
    __publicField(this, "_trackChangesService");
    const _0x49ca3d = this["editor"]["config"]["get"]("collaboration.channelId");
    this["_bufferedRequests"] = /* @__PURE__ */ new Map(), this["_trackChangesService"] = new _f["TrackChangesService"](_0x49ca3d);
  }
  static get ["requires"]() {
    return [a13, "TrackChangesEditing", c9];
  }
  ["init"]() {
    const _0xf160a0 = this["editor"]["plugins"]["get"](c9), _0x5db2bc = this["editor"]["plugins"]["get"]("TrackChangesEditing");
    return _0x5db2bc["adapter"] = { "getSuggestion": async (_0x255ff8) => {
      await this["_waitForServiceReady"]();
      const _0x32013a = await this["_trackChangesService"]["get"](_0x255ff8)["catch"](ot);
      return await this["_fetchMissingUsersForThreads"]([_0x32013a]), _0x32013a;
    }, "addSuggestion": async ({ id: _0x4563d4, type: _0x1fb236, data: _0x124218, originalSuggestionId: _0xf1a11f, attributes: _0x57b4c3 }) => {
      await this["_waitForServiceReady"]();
      const _0xfdebb9 = { "id": _0x4563d4, "type": _0x1fb236, "data": _0x124218, "originalSuggestionId": _0xf1a11f, "attributes": _0x57b4c3 }, _0x5227f0 = await this["_trackChangesService"]["add"](_0x4563d4, _0x1fb236, _0x124218, _0xf1a11f, _0x57b4c3)["catch"]((_0x21380a) => {
        if (wt(_0x21380a)) return new Promise((_0x41d81c) => {
          this["_bufferedRequests"]["set"](_0x4563d4, { "resolve": _0x41d81c, "suggestionData": _0xfdebb9 });
        });
        throw _0x21380a;
      });
      return this["_bufferedRequests"]["delete"](_0x4563d4), _0x5227f0;
    }, "updateSuggestion": async (_0x513f09, _0x5ee5e6) => {
      if (await this["_waitForServiceReady"](), "open" !== _0x5ee5e6["state"]) return this["_trackChangesService"]["update"](_0x513f09, _0x5ee5e6)["catch"](ot);
    } }, this["listenTo"](this["_trackChangesService"], "suggestionUpdated", (_0x1cadc5, _0x2e0fc5) => {
      _0x5db2bc["hasSuggestion"](_0x2e0fc5["id"]) && (_0x5db2bc["getSuggestion"](_0x2e0fc5["id"])["attributes"] = _0x2e0fc5["attributes"]);
    }), this["_trackChangesService"]["connect"](_0xf160a0["connection"])["then"]((_0x26574d) => (_0xf160a0["addToReconnectionStack"](this), this["_fetchMissingUsersForThreads"](_0x26574d)["then"](() => {
      for (const _0x5bb1ab of _0x26574d) {
        _0x5db2bc["addSuggestionData"](_0x5bb1ab)["_saved"] = true;
      }
    })));
  }
  async ["reconnect"]() {
    const _0x55150d = this["editor"]["plugins"]["get"]("TrackChangesEditing"), { connection: _0x2cf341 } = this["editor"]["plugins"]["get"](c9), _0x338a73 = await this["_trackChangesService"]["connect"](_0x2cf341);
    await this["_fetchMissingUsersForThreads"](_0x338a73);
    for (const { suggestionData: _0x3a476b, resolve: _0x12eac8 } of this["_bufferedRequests"]["values"]()) {
      let _0x164ac0 = _0x338a73["find"]((_0x34a3ca) => _0x34a3ca["id"] === _0x3a476b["id"]);
      _0x164ac0 || (_0x164ac0 = await this["_trackChangesService"]["add"](_0x3a476b["id"], _0x3a476b["type"], _0x3a476b["data"], _0x3a476b["originalSuggestionId"])), _0x12eac8(_0x164ac0);
    }
    for (const _0x5ec7d7 of _0x338a73) _0x55150d["hasSuggestion"](_0x5ec7d7["id"]) || _0x55150d["addSuggestionData"](_0x5ec7d7);
  }
  async ["_waitForServiceReady"]() {
    this["_trackChangesService"]["isConnected"] || await new Promise((_0x25416c) => {
      this["listenTo"](this["_trackChangesService"], "connected", (_0x3367b2) => {
        _0x3367b2["off"](), _0x25416c();
      });
    });
  }
  async ["_fetchMissingUsersForThreads"](_0x216435) {
    const _0x3c15d4 = this["editor"]["plugins"]["get"](l), { connection: _0x3fc23d } = this["editor"]["plugins"]["get"](c9), _0x2e49eb = /* @__PURE__ */ new Set();
    for (const { authorId: _0x9b48f4 } of _0x216435) _0x3c15d4["getUser"](_0x9b48f4) || _0x2e49eb["add"](_0x9b48f4);
    if (0 === _0x2e49eb["size"]) return;
    const _0x5eefac = await User["getMany"](_0x3fc23d, Array["from"](_0x2e49eb));
    for (const _0x16ba03 of _0x5eefac) _0x3c15d4["getUser"](_0x16ba03["id"]) || _0x3c15d4["addUser"](_0x16ba03);
  }
};
__publicField(_f, "TrackChangesService", /* @__PURE__ */ (() => TrackChangesService)());
var f6 = _f;
function ot(_0x8b36e1) {
  if (wt(_0x8b36e1)) return new Promise(() => {
  });
  throw _0x8b36e1;
}
function wt(_0x30034d) {
  return _0x30034d["message"]["startsWith"]("cloud-services-internal-error: Not connected.") || _0x30034d["message"]["startsWith"]("cloud-services-internal-error: Request timeout.");
}
var m9 = class extends Plugin {
  static get ["requires"]() {
    return ["Comments", a13, n9, c9];
  }
  static get ["pluginName"]() {
    return "RealTimeCollaborativeComments";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    const _0x261bd8 = this["editor"]["plugins"]["get"](c9), _0x581fe5 = this["editor"]["plugins"]["get"]("CommentsEditing"), _0x49c9b2 = this["editor"]["plugins"]["get"](a13);
    return this["editor"]["data"]["once"]("ready", () => {
      this["listenTo"](_0x261bd8, "change:state", (_0x2f1f81, _0x35054f, _0x39aea5) => {
        _0x581fe5["isThreadsLoadingPaused"] = "connected" !== _0x39aea5;
      });
    }), this["listenTo"](_0x261bd8, "change:state", (_0x3a87f9, _0x1267d1, _0x418c5f) => {
      this["editor"]["plugins"]["get"]("CommentsRepository")["switchReadOnly"]("connected" !== _0x418c5f);
    }), _0x49c9b2["_setUpService"](this["editor"]["config"]["get"]("collaboration.channelId"));
  }
  ["destroy"]() {
    this["editor"]["plugins"]["get"](a13)["_terminateService"](this["editor"]["config"]["get"]("collaboration.channelId")), super["destroy"]();
  }
};
var p8 = class extends Plugin {
  static get ["requires"]() {
    return [m9, f6, "TrackChanges"];
  }
  static get ["pluginName"]() {
    return "RealTimeCollaborativeTrackChanges";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
};
var _u = class _u extends Plugin {
  constructor(_0x2c4bde) {
    super(_0x2c4bde);
    __publicField(this, "_lastRequestId");
    __publicField(this, "_revisionTracker");
    __publicField(this, "_revisionHistoryService");
    __publicField(this, "_oldOffset");
    const _0x13fc65 = this["editor"]["config"]["get"]("collaboration.channelId");
    this["_lastRequestId"] = null, this["_revisionTracker"] = this["editor"]["plugins"]["get"]("RevisionTracker"), this["_revisionHistoryService"] = new _u["RevisionHistoryService"](_0x13fc65);
  }
  static get ["requires"]() {
    return [c9, l8, "RevisionTracker", i9, l];
  }
  async ["init"]() {
    const _0x72e54 = this["editor"]["plugins"]["get"](l8), _0x605098 = _0x72e54["serverHistory"], _0x5e462e = this["editor"]["plugins"]["get"](c9);
    this["_revisionTracker"]["setSource"]({ "history": _0x605098, "getLatestVersion": () => this["_getLatestVersion"](), "getCurrentRevisionId": () => _0x72e54["sessionId"] });
    const _0x198e65 = this["editor"]["config"]["get"]("cloudServices.bundleVersion") || version, _0x333d6c = await EditorService["isBundleUploaded"](_0x5e462e["connection"], _0x198e65);
    this["_revisionTracker"]["adapter"] = { "getRevision": async ({ revisionId: _0x5bab6c }) => (await this["_waitForServiceReady"](), await this["_revisionHistoryService"]["getRevision"](_0x5bab6c)), "updateRevisions": async (_0x4c615d) => {
      await this["_waitForServiceReady"]();
      const _0x4ed40e = this["_revisionTracker"]["currentRevision"];
      if (_0x333d6c && 1 === _0x4c615d["length"] && _0x4c615d[0]["id"] === _0x4ed40e["id"]) return _0x4c615d;
      for (const _0x29076f of _0x4c615d) _0x29076f["id"] === _0x4ed40e["id"] && (_0x29076f["isEmptyCurrent"] = _0x29076f["fromVersion"] === _0x29076f["toVersion"]);
      return this["_revisionHistoryService"]["updateRevisions"](_0x4c615d, this["_lastRequestId"])["then"]((_0x22bf16) => (this["_lastRequestId"] = _0x22bf16, _0x4c615d))["catch"]((_0x150c21) => {
        if (rt(_0x150c21) || "400" === _0x150c21["code"] && void 0 !== _0x150c21["data"]["wrongRequestId"]) {
          for (const _0xb20cac of _0x4c615d) {
            !this["_revisionTracker"]["repository"]["getRevision"](_0xb20cac["id"]) || this["_revisionTracker"]["_bufferUpdate"](_0xb20cac["id"], _0xb20cac, false);
          }
          if (rt(_0x150c21)) throw _0x150c21;
          return _0x4c615d;
        }
        throw _0x150c21;
      });
    } }, this["listenTo"](this["_revisionHistoryService"], "revisionsUpdated", (_0x3d12a3, { revisionsData: _0x255cc1, requestId: _0x169151 }) => {
      Math["max"](..._0x255cc1["map"]((_0x483e5b) => _0x483e5b["toVersion"])) > this["_getLatestVersionFromServerOperations"]() - 1 ? this["_getLatestVersion"]()["then"](() => {
        this["_handleRevisionsUpdate"](_0x255cc1, _0x169151);
      }) : this["_handleRevisionsUpdate"](_0x255cc1, _0x169151);
    });
    const { revisions: _0x10da44, requestId: _0x387194 } = await this["_revisionHistoryService"]["connect"](_0x5e462e["connection"]);
    _0x5e462e["addToReconnectionStack"](this), this["_lastRequestId"] = _0x387194, await this["_fetchMissingUsers"](_0x10da44);
    for (const _0x6d0e47 of _0x10da44) this["_revisionTracker"]["addRevisionData"](_0x6d0e47);
    this["listenTo"](_0x72e54, "change:_isConnected", (_0x3ad312, _0x72fcaa, _0x91c35) => {
      _0x91c35 && (this["_oldOffset"] = _0x72e54["_offset"], _0x3ad312["off"]());
    }), this["_revisionTracker"]["bind"]("isEnabled")["to"](_0x5e462e, "state", (_0x1472f2) => _0x1472f2 === WEB_SOCKET_GATEWAY_STATES["CONNECTED"]);
  }
  async ["reconnect"]() {
    const _0xc7fa48 = this["editor"]["plugins"]["get"](c9), _0x2f2046 = this["editor"]["plugins"]["get"](l8), _0x6411d2 = async () => {
      const _0x3a21ea = this["_revisionTracker"]["currentRevision"], _0x35ffd5 = _0x3a21ea["id"], _0x3ffc8e = _0x35ffd5 !== _0x2f2046["sessionId"];
      if (_0x3ffc8e) {
        const _0x180fa8 = _0x2f2046["_offset"] - this["_oldOffset"], _0x10f4b4 = this["_getLatestVersionFromServerOperations"]();
        this["_revisionTracker"]["_revisionDataBuilder"]["reInit"]();
        if (_0x3a21ea["toVersion"] + _0x180fa8 !== _0x10f4b4) {
          const _0x20664e = _0x3a21ea["fromVersion"] + _0x180fa8, _0x3f7687 = this["editor"]["plugins"]["get"](l), _0x4e5e4b = this["_revisionTracker"]["buildRevisionData"]({ "revision": _0x3a21ea, "from": _0x20664e, "to": _0x10f4b4 });
          _0x4e5e4b["id"] = _0x3a21ea["id"];
          const _0x245074 = _0x4e5e4b["authorsIds"]["map"]((_0x1b1616) => _0x3f7687["getUser"](_0x1b1616));
          _0x3a21ea["_update"]({ ..._0x4e5e4b, "authors": _0x245074 }, true), this["_revisionTracker"]["_bufferUpdate"](_0x3a21ea["id"], _0x4e5e4b, true);
        }
        this["_revisionTracker"]["_startingVersion"] = _0x10f4b4, _0x3a21ea["toVersion"] === _0x3a21ea["fromVersion"] && !this["_revisionTracker"]["_bufferedUpdates"]["has"](_0x35ffd5) && this["_revisionTracker"]["repository"]["_revisions"]["remove"](_0x35ffd5), this["_revisionTracker"]["_createCurrentRevision"](_0x10f4b4);
      }
      const { revisions: _0x319c19, requestId: _0x5db952 } = await this["_revisionHistoryService"]["reconnect"](_0xc7fa48["connection"], this["_lastRequestId"]);
      _0x3ffc8e && _0x319c19["length"] > 0 ? _0x2f2046["_handleReconnectionError"]() : (await this["_fetchMissingUsers"](_0x319c19), this["_handleRevisionsUpdate"](_0x319c19, _0x5db952), this["_revisionTracker"]["sendBufferedUpdates"]());
    };
    return _0x2f2046["_isConnected"] ? _0x6411d2() : new Promise((_0x54e9d7, _0x234698) => {
      _0x2f2046["once"]("change:_isConnected", () => {
        _0x6411d2()["then"](_0x54e9d7)["catch"](_0x234698);
      });
    });
  }
  ["destroy"]() {
    super["destroy"]();
  }
  async ["_waitForServiceReady"]() {
    this["_revisionHistoryService"]["isConnected"] || await new Promise((_0x3cc46c) => {
      this["listenTo"](this["_revisionHistoryService"], "connected", (_0x4d2bfc) => {
        _0x4d2bfc["off"](), _0x3cc46c();
      });
    });
  }
  ["_getLatestVersionFromServerOperations"]() {
    const _0x232fb1 = this["editor"]["plugins"]["get"](l8)["serverHistory"]["getOperations"]()["reverse"]();
    for (const _0x3ea7f6 of _0x232fb1) if ("marker" !== _0x3ea7f6["type"] || _0x3ea7f6["affectsData"]) return _0x3ea7f6["baseVersion"] + 1;
  }
  ["_getLatestVersion"]() {
    const _0x3ac395 = this["editor"]["plugins"]["get"](l8);
    return new Promise((_0x11ce1f) => {
      _0x3ac395["_isPendingUpdate"] ? _0x3ac395["once"]("change:_isPendingUpdate", () => {
        _0x11ce1f(this["_getLatestVersionFromServerOperations"]());
      }) : _0x11ce1f(this["_getLatestVersionFromServerOperations"]());
    });
  }
  ["_handleRevisionsUpdate"](_0x564741, _0x37eeb5) {
    const _0x5d8e04 = this["_revisionTracker"]["repository"];
    this["_lastRequestId"] = _0x37eeb5;
    for (const _0x37a827 of _0x564741) {
      const _0x2029b3 = _0x5d8e04["getRevision"](_0x37a827["id"]);
      if (_0x2029b3) {
        if ((_0x37a827["fromVersion"] || _0x37a827["toVersion"]) && (_0x37a827["diffData"] = null), _0x2029b3 === this["_revisionTracker"]["currentRevision"]) {
          const _0x5795e0 = Math["max"](_0x2029b3["toVersion"], _0x37a827["toVersion"]), _0x39e7de = Math["max"](_0x2029b3["fromVersion"], _0x37a827["fromVersion"]);
          let _0x4931e5;
          _0x2029b3["toVersion"] === _0x37a827["toVersion"] && _0x2029b3["fromVersion"] === _0x37a827["fromVersion"] ? (_0x4931e5 = true, this["_preventResendingRevisionData"](_0x37a827)) : _0x37a827["toVersion"] === _0x5795e0 && _0x37a827["fromVersion"] === _0x39e7de ? _0x4931e5 = false : (_0x2029b3["toVersion"] === _0x5795e0 && _0x2029b3["fromVersion"] === _0x39e7de || this["_fixRevision"]({ "revision": _0x2029b3, "from": _0x39e7de, "to": _0x5795e0 }), _0x4931e5 = true), _0x4931e5 && (delete _0x37a827["fromVersion"], delete _0x37a827["toVersion"], delete _0x37a827["diffData"], delete _0x37a827["createdAt"], delete _0x37a827["authorsIds"]);
        }
        this["_revisionTracker"]["setRevisionData"](_0x37a827), this["_preventResendingRevisionData"](_0x37a827);
      } else this["_revisionTracker"]["addRevisionData"](_0x37a827);
    }
    const _0xd3a17b = _0x5d8e04["getRevisions"]();
    _0xd3a17b["reverse"]();
    for (let _0x5876a9 = 0; _0x5876a9 < _0xd3a17b["length"] - 1; _0x5876a9++) {
      const _0x15170f = _0xd3a17b[_0x5876a9], _0x1b5eae = _0xd3a17b[_0x5876a9 + 1];
      if (_0x15170f["fromVersion"] < _0x1b5eae["toVersion"]) {
        const _0x4edbea = _0x1b5eae["toVersion"], _0x106284 = Math["max"](_0x4edbea, _0x15170f["toVersion"]);
        this["_fixRevision"]({ "revision": _0x15170f, "from": _0x4edbea, "to": _0x106284 });
      }
    }
  }
  ["_fixRevision"]({ revision: _0x1d946a, from: _0x5d3ec5, to: _0x9c941 } = {}) {
    const _0x474cf4 = this["editor"]["plugins"]["get"](l), _0x5a152f = this["_revisionTracker"]["buildRevisionData"]({ "revision": _0x1d946a, "from": _0x5d3ec5, "to": _0x9c941 });
    _0x5a152f["authors"] = _0x5a152f["authorsIds"]["map"]((_0x5c9b2b) => _0x474cf4["getUser"](_0x5c9b2b)), _0x1d946a["_update"](_0x5a152f);
  }
  ["_preventResendingRevisionData"](_0x431f2d) {
    const _0xdae457 = {};
    _0xdae457["id"] = _0x431f2d["id"];
    for (const _0x1a57fd of Object["keys"](_0x431f2d)) "id" !== _0x1a57fd && (_0xdae457[_0x1a57fd] = void 0);
    this["_revisionTracker"]["_bufferUpdate"](_0xdae457["id"], _0xdae457, true);
  }
  async ["_fetchMissingUsers"](_0x5a1a4e) {
    const _0x2557ff = this["editor"]["plugins"]["get"](l), { connection: _0x2dbb86 } = this["editor"]["plugins"]["get"](c9), _0x5c6b4f = /* @__PURE__ */ new Set();
    for (const _0x31753e of _0x5a1a4e) {
      for (const _0x1117c5 of _0x31753e["authorsIds"]) _0x1d3fd0(_0x1117c5);
      _0x31753e["creatorId"] && _0x1d3fd0(_0x31753e["creatorId"]);
    }
    if (0 === _0x5c6b4f["size"]) return;
    const _0x102bf9 = await User["getMany"](_0x2dbb86, Array["from"](_0x5c6b4f));
    for (const _0x5ec9ba of _0x102bf9) _0x2557ff["getUser"](_0x5ec9ba["id"]) || _0x2557ff["addUser"](_0x5ec9ba);
    function _0x1d3fd0(_0x2e59cf) {
      _0x2557ff["getUser"](_0x2e59cf) || _0x5c6b4f["add"](_0x2e59cf);
    }
  }
};
__publicField(_u, "RevisionHistoryService", /* @__PURE__ */ (() => RevisionHistoryService)());
var u6 = _u;
function rt(_0x464d69) {
  return _0x464d69["message"]["startsWith"]("cloud-services-internal-error: Revision History Service is not connected.") || _0x464d69["message"]["startsWith"]("cloud-services-internal-error: Not connected.") || _0x464d69["message"]["startsWith"]("cloud-services-internal-error: Request timeout.");
}
var g7 = class extends Plugin {
  static get ["requires"]() {
    return ["RevisionHistory", u6, n9];
  }
  static get ["pluginName"]() {
    return "RealTimeCollaborativeRevisionHistory";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
};
var ts2 = class extends View {
  constructor(_0x30ab94) {
    super(_0x30ab94);
    const _0x1c97ce = this["bindTemplate"];
    this["set"]("usersCount", 0), this["set"]("isHidden", true), this["setTemplate"]({ "tag": "div", "attributes": { "class": ["ck", "ck-presence-list__counter", _0x1c97ce["if"]("isHidden", "ck-presence-list__counter--hidden")] }, "children": [{ "text": _0x1c97ce["to"]("usersCount", (_0xd069f5) => B3(_0x30ab94, "CONNECTED_USERS", _0xd069f5)) }] });
  }
};
var es2 = class extends View {
  constructor(_0x33d6b7) {
    super(_0x33d6b7);
    __publicField(this, "items");
    __publicField(this, "keystrokes");
    const _0xb22c16 = this["bindTemplate"];
    this["items"] = this["createCollection"](), this["keystrokes"] = new KeystrokeHandler(), this["set"]({ "hasPopup": false, "isExpanded": false }), this["setTemplate"]({ "tag": "div", "attributes": { "aria-haspopup": _0xb22c16["if"]("hasPopup"), "aria-expanded": _0xb22c16["to"]("isExpanded", (_0x12ce44) => this["hasPopup"] && String(_0x12ce44)), "aria-label": _0xb22c16["to"]("hasPopup", (_0x8f8b9f) => B3(_0x33d6b7, _0x8f8b9f ? "Collapsed connected users list (press ENTER to open it)" : "Connected users list")), "role": "list", "tabindex": _0xb22c16["to"]("hasPopup", (_0x50b9c6) => !!_0x50b9c6 && 0), "class": ["ck", "ck-presence-list__list"] }, "children": this["items"], "on": { "click": _0xb22c16["to"](() => this["fire"]("execute")) } }), this["on"]("change:hasPopup", (_0x344c16, _0x2b15ea, _0x1c3a7e) => {
      this["element"] && (_0x1c3a7e ? this["element"]["setAttribute"]("aria-expanded", String(this["isExpanded"])) : this["element"]["removeAttribute"]("aria-expanded"));
    });
  }
  ["focus"]() {
    this["element"]["focus"]();
  }
  ["render"]() {
    super["render"](), this["keystrokes"]["listenTo"](this["element"]);
  }
};
var L2 = class extends View {
  constructor(_0x317d07) {
    super(_0x317d07);
    __publicField(this, "counterView");
    __publicField(this, "inlineListView");
    const _0x1e6e76 = this["bindTemplate"];
    this["set"]("isCollapsed", true), this["counterView"] = new ts2(this["locale"]), this["inlineListView"] = new es2(_0x317d07), this["inlineListView"]["bind"]("hasPopup")["to"](this, "isCollapsed"), this["listenTo"](this["inlineListView"]["items"], "change", () => {
      for (const _0x4164d2 of this["inlineListView"]["items"]) _0x4164d2["tooltipPosition"] = "s";
      this["inlineListView"]["items"]["first"] && (this["inlineListView"]["items"]["first"]["tooltipPosition"] = "se");
    }), this["setTemplate"]({ "tag": "div", "attributes": { "class": ["ck", "ck-presence-list", "ck-reset", "ck-rounded-corners", _0x1e6e76["if"]("isCollapsed", "ck-presence-list--collapsed")] }, "children": [this["counterView"], this["inlineListView"]] });
  }
};
var j4 = class extends View {
  constructor(_0x1d663a, _0x411b62) {
    super(_0x1d663a);
    __publicField(this, "listWrapperView");
    this["listWrapperView"] = new vt2(_0x1d663a, _0x411b62), this["setTemplate"]({ "tag": "div", "attributes": { "tabindex": -1, "role": "application", "class": ["ck", "ck-presence-list__dropdown-list"], "aria-label": B3(_0x1d663a, "Connected users list dropdown menu") }, "children": [this["listWrapperView"]] });
  }
};
var vt2 = class extends ListView {
  constructor(_0x1489e8, _0x567f2d) {
    super(_0x1489e8);
    const _0x4754a4 = this["bindTemplate"];
    this["set"]("_isScrollable", false), this["setTemplate"]({ "tag": _0x567f2d ? "div" : "ul", "attributes": { "class": ["ck", "ck-reset", "ck-list", "ck-presence-list__dropdown-list-wrapper", _0x4754a4["if"]("_isScrollable", "ck-presence-list__dropdown-list-wrapper_scrollable")], "role": _0x4754a4["to"]("role"), "aria-label": _0x4754a4["to"]("ariaLabel"), "aria-labelledby": _0x4754a4["to"]("ariaLabelledBy") }, "children": this["items"] }), this["listenTo"](global2["window"], "resize", () => this["checkIfScrollable"]()), this["items"]["on"]("change", () => this["checkIfScrollable"]());
  }
  ["render"]() {
    super["render"](), this["checkIfScrollable"]();
  }
  ["checkIfScrollable"]() {
    const _0x2ec0bb = this["element"];
    _0x2ec0bb && (this["_isScrollable"] = Math["max"](_0x2ec0bb["scrollHeight"], _0x2ec0bb["clientHeight"]) > 0.8 * window["innerHeight"]);
  }
};
var k5 = class extends ListItemView {
  constructor(_0x58e48f, _0x42c684, _0x8cb226) {
    super(_0x58e48f);
    __publicField(this, "userView");
    const _0x110ee9 = this["bindTemplate"];
    this["userView"] = new H(_0x58e48f, _0x42c684);
    const _0x580251 = { "tag": "li", "attributes": { "class": ["ck", "ck-presence-list__dropdown-list-item"], "tabindex": -1, "role": "presentation", "aria-label": _0x42c684["name"] }, "children": [this["userView"], { "tag": "span", "attributes": { "class": ["ck", "ck-user__full-name"] }, "children": [{ "text": _0x42c684["name"] }] }, { "tag": "span", "attributes": { "class": ["ck", "ck-presence-list__marker", _0x42c684["color"]["getBackgroundColorClass"]()], "aria-hidden": "true" } }] };
    _0x8cb226 && (_0x580251["tag"] = "button", _0x580251["on"] = { "click": _0x110ee9["to"](() => this["fire"]("execute")) }), this["setTemplate"](_0x580251);
  }
  ["focus"]() {
    this["element"]["focus"]();
  }
};
var y9 = class extends View {
  constructor(_0xcd7ee0, _0x47bf74, _0x1af21c) {
    super(_0xcd7ee0);
    __publicField(this, "userView");
    __publicField(this, "markerView");
    const _0x4fbebb = this["bindTemplate"];
    this["set"]("isFocusable", false), this["set"]("hasTooltip", true), this["set"]("tooltipPosition", ""), this["userView"] = new H(_0xcd7ee0, _0x47bf74), this["markerView"] = new dt2(_0xcd7ee0, _0x47bf74);
    const _0x57421c = new LabelView(_0xcd7ee0);
    _0x57421c["template"]["tag"] = "span", _0x57421c["text"] = _0x47bf74["name"];
    const _0x36ec41 = { "tag": "div", "attributes": { "class": ["ck", "ck-presence-list__list-item"], "role": "listitem", "tabindex": _0x4fbebb["to"]("isFocusable", (_0x35035f) => !!_0x35035f && 0), "aria-labelledby": _0x57421c["id"], "data-cke-tooltip-text": this["userView"]["name"], "data-cke-tooltip-position": _0x4fbebb["to"]("tooltipPosition"), "data-cke-tooltip-disabled": _0x4fbebb["to"]("hasTooltip", (_0x38a50a) => !_0x38a50a), "data-cke-tooltip-class": "ck-presence-list__list-item__tooltip" }, "children": [this["userView"], this["markerView"], _0x57421c] };
    _0x1af21c && (_0x36ec41["tag"] = "button", _0x36ec41["on"] = { "click": _0x4fbebb["to"](() => this["fire"]("execute")) }), this["setTemplate"](_0x36ec41);
  }
};
var dt2 = class extends View {
  constructor(_0x277616, _0xe70aea) {
    super(_0x277616), this["setTemplate"]({ "tag": "span", "attributes": { "class": ["ck", "ck-presence-list__marker", _0xe70aea["color"]["getBackgroundColorClass"]()], "aria-hidden": "true" } });
  }
};
var A3 = { "collapseAt": 6, "displayMe": true };
var r13 = class extends ContextPlugin {
  constructor(_0x393f11) {
    super(_0x393f11);
    __publicField(this, "currentDisplayedUsers");
    __publicField(this, "balloonPanelView");
    __publicField(this, "view");
    __publicField(this, "presenceDropdownView");
    __publicField(this, "_bodyCollection", null);
    this["context"]["config"]["define"]("presenceList", A3);
    const _0xbb407c = _0x393f11["config"]["get"]("presenceList.collapseAt");
    if ("number" != typeof _0xbb407c) throw new CKEditorError("presencelist-collapseat-invalid-format", this);
    if (_0xbb407c < 1) throw new CKEditorError("presencelist-collapseat-invalid-format", this);
    this["_allConnectedUsers"] = this["context"]["plugins"]["get"](i9)["allConnectedUsers"], this["set"]("usersCount", 0), this["currentDisplayedUsers"] = new Collection(), this["balloonPanelView"] = new BalloonPanelView(), this["balloonPanelView"]["class"] = "ck ck-presence-list__balloon", this["view"] = this["_createView"](), this["presenceDropdownView"] = void 0;
  }
  static get ["requires"]() {
    return [i9];
  }
  ["init"]() {
    for (const _0x5ea9a9 of this["_allConnectedUsers"]) this["_handleUserAdd"](_0x5ea9a9);
    this["listenTo"](this["_allConnectedUsers"], "add", (_0x402852, _0x20be83) => {
      this["_handleUserAdd"](_0x20be83);
    }), this["listenTo"](this["_allConnectedUsers"], "remove", (_0x148091, _0x3de67a) => {
      this["_handleUserRemove"](_0x3de67a);
    });
  }
  ["_createView"]() {
    const _0x27c248 = this["context"], _0x128368 = new L2(this["context"]["locale"]), _0x383055 = this["balloonPanelView"];
    if (!isElement_default(_0x27c248["config"]["get"]("presenceList.container"))) throw new CKEditorError("presencelist-missing-container", this);
    return _0x128368["counterView"]["bind"]("usersCount")["to"](this), _0x128368["bind"]("isCollapsed")["to"](this, "usersCount", (_0x29b017) => {
      const { collapseAt: _0xac93d6, displayMe: _0x47c319 } = _0x27c248["config"]["get"]("presenceList"), _0x11697f = _0x29b017 >= _0xac93d6;
      return _0x128368["counterView"]["isHidden"] = !(1 == _0x29b017 && _0x47c319 || _0x11697f), _0x11697f || this["hideDropdown"](), _0x11697f;
    }), _0x128368["inlineListView"]["items"]["bindTo"](this["currentDisplayedUsers"])["using"]((_0x218e9c) => {
      const _0x231ac9 = _0x27c248["config"]["get"]("presenceList"), _0x30b4cf = new y9(_0x27c248["locale"], _0x218e9c, !!_0x231ac9["onClick"]);
      return _0x30b4cf["bind"]("hasTooltip")["to"](_0x128368, "isCollapsed", (_0x43f1c9) => !_0x43f1c9), _0x30b4cf["bind"]("isFocusable")["to"](_0x128368, "isCollapsed", (_0x17b0ac) => !_0x17b0ac), _0x231ac9["onClick"] && this["listenTo"](_0x30b4cf, "execute", () => {
        this["view"]["isCollapsed"] || _0x231ac9["onClick"](_0x218e9c, _0x30b4cf["element"]);
      }), _0x30b4cf;
    }), this["listenTo"](_0x128368["inlineListView"], "execute", () => {
      this["presenceDropdownView"] ? this["hideDropdown"]() : this["view"]["isCollapsed"] && this["showDropdown"]();
    }), _0x128368["inlineListView"]["keystrokes"]["set"]("Enter", (_0x34b5be, _0x387edd) => {
      this["view"]["isCollapsed"] && (this["showDropdown"](), _0x387edd());
    }), _0x128368["render"](), _0x383055["render"](), clickOutsideHandler({ "emitter": _0x128368, "activator": () => _0x383055["isVisible"], "contextElements": [_0x383055["element"], _0x128368["inlineListView"]["element"]], "callback": () => this["hideDropdown"]() }), _0x27c248["config"]["get"]("presenceList.container")["appendChild"](_0x128368["element"]), this["_bodyCollection"] = new BodyCollection(this["context"]["locale"]), this["_bodyCollection"]["attachToDom"](), this["_bodyCollection"]["add"](this["balloonPanelView"]), _0x128368;
  }
  ["_handleUserAdd"](_0x267019) {
    if (!this["context"]["config"]["get"]("presenceList.displayMe") && _0x267019["isMe"]) return;
    const _0x5a653d = this["context"]["config"]["get"]("presenceList.collapseAt") - 1;
    this["usersCount"]++, this["currentDisplayedUsers"]["length"] == _0x5a653d && this["currentDisplayedUsers"]["length"] > 1 && this["currentDisplayedUsers"]["remove"](1);
    const _0x5c73c2 = _0x267019["isMe"] ? 0 : this["currentDisplayedUsers"]["length"];
    this["currentDisplayedUsers"]["add"](_0x267019, _0x5c73c2);
  }
  ["_handleUserRemove"](_0x2ff1e1) {
    if (this["usersCount"]--, this["currentDisplayedUsers"]["get"](_0x2ff1e1["id"]) && (this["currentDisplayedUsers"]["remove"](_0x2ff1e1["id"]), this["currentDisplayedUsers"]["length"] < this["usersCount"])) {
      for (const _0x7cf985 of Array["from"](this["_allConnectedUsers"])["reverse"]()) if (!this["currentDisplayedUsers"]["get"](_0x7cf985["id"])) return void this["currentDisplayedUsers"]["add"](_0x7cf985, Math["min"](this["currentDisplayedUsers"]["length"], 1));
    }
  }
  ["showDropdown"]() {
    if (this["presenceDropdownView"]) return;
    const _0x33a4be = this["context"]["config"]["get"]("presenceList");
    this["presenceDropdownView"] = new j4(this["context"]["locale"], !!_0x33a4be["onClick"]), this["view"]["inlineListView"]["isExpanded"] = true;
    const { listWrapperView: _0x555ac8 } = this["presenceDropdownView"];
    _0x555ac8["items"]["bindTo"](this["_allConnectedUsers"])["using"]((_0xa19df4) => {
      if (!_0x33a4be["displayMe"] && _0xa19df4["isMe"]) return null;
      const _0x23b499 = new k5(this["context"]["locale"], _0xa19df4, !!_0x33a4be["onClick"]);
      return _0x33a4be["onClick"] && this["listenTo"](_0x23b499, "execute", () => {
        _0x33a4be["onClick"](_0xa19df4, _0x23b499["element"]);
      }), _0x23b499;
    }), this["balloonPanelView"]["content"]["add"](this["presenceDropdownView"]), this["balloonPanelView"]["pin"]({ "target": this["view"]["inlineListView"]["element"] }), _0x555ac8["focus"](), _0x555ac8["checkIfScrollable"]();
    const _0x4ff0d9 = (_0x34fb65, _0x7a3194) => {
      this["hideDropdown"](), this["view"]["inlineListView"]["focus"](), _0x7a3194();
    };
    _0x555ac8["keystrokes"]["set"]("Esc", _0x4ff0d9), _0x555ac8["keystrokes"]["set"]("Shift+Tab", _0x4ff0d9), _0x555ac8["keystrokes"]["set"]("Tab", (_0x183352, _0x160e47) => {
      !function(_0x16b7a2) {
        const _0x2da2e9 = ["a", "button", "input", "select", "textarea", "[tabindex]", "[contenteditable]"]["map"]((_0x6c1757) => _0x6c1757 + ':not([disabled]):not([tabindex="-1"])')["join"](","), _0x2976fc = [...document["body"]["querySelectorAll"](_0x2da2e9)]["filter"]((_0x2aa45a) => _0x2aa45a === document["activeElement"] || _0x2aa45a["offsetWidth"] + _0x2aa45a["offsetHeight"] > 0)["sort"]((_0x756e09, _0x3d9bae) => (_0x756e09["tabIndex"] || 0) - (_0x3d9bae["tabIndex"] || 0)), _0x54be33 = _0x2976fc["indexOf"](_0x16b7a2), _0x422849 = _0x2976fc[(_0x54be33 + 1) % _0x2976fc["length"]];
        _0x422849 && _0x422849["focus"]();
      }(this["view"]["element"]), this["hideDropdown"](), _0x160e47();
    }), _0x555ac8["focusTracker"]["add"](this["view"]["element"]), _0x555ac8["focusTracker"]["on"]("change:isFocused", (_0x54797e, _0x19c201, _0x38bccd) => {
      _0x38bccd || this["hideDropdown"]();
    });
  }
  ["hideDropdown"]() {
    this["presenceDropdownView"] && (this["view"]["inlineListView"]["isExpanded"] = false, this["balloonPanelView"]["unpin"](), this["balloonPanelView"]["content"]["remove"](this["presenceDropdownView"]), this["presenceDropdownView"]["destroy"](), this["presenceDropdownView"] = void 0);
  }
  ["destroy"]() {
    super["destroy"](), this["view"] && this["view"]["isRendered"] && this["view"]["destroy"](), this["_bodyCollection"] && (this["_bodyCollection"]["detachFromDom"](), this["_bodyCollection"]["destroy"](), this["_bodyCollection"] = null);
  }
};
var s11 = class extends ContextPlugin {
  static get ["requires"]() {
    return [i9, r13];
  }
  static get ["pluginName"]() {
    return "PresenceList";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
};

// node_modules/luxon/src/errors.js
var LuxonError = class extends Error {
};
var InvalidDateTimeError = class extends LuxonError {
  constructor(reason) {
    super(`Invalid DateTime: ${reason.toMessage()}`);
  }
};
var InvalidIntervalError = class extends LuxonError {
  constructor(reason) {
    super(`Invalid Interval: ${reason.toMessage()}`);
  }
};
var InvalidDurationError = class extends LuxonError {
  constructor(reason) {
    super(`Invalid Duration: ${reason.toMessage()}`);
  }
};
var ConflictingSpecificationError = class extends LuxonError {
};
var InvalidUnitError = class extends LuxonError {
  constructor(unit) {
    super(`Invalid unit ${unit}`);
  }
};
var InvalidArgumentError = class extends LuxonError {
};
var ZoneIsAbstractError = class extends LuxonError {
  constructor() {
    super("Zone is an abstract class");
  }
};

// node_modules/luxon/src/impl/formats.js
var n10 = "numeric";
var s12 = "short";
var l9 = "long";
var DATE_SHORT = {
  year: n10,
  month: n10,
  day: n10
};
var DATE_MED = {
  year: n10,
  month: s12,
  day: n10
};
var DATE_MED_WITH_WEEKDAY = {
  year: n10,
  month: s12,
  day: n10,
  weekday: s12
};
var DATE_FULL = {
  year: n10,
  month: l9,
  day: n10
};
var DATE_HUGE = {
  year: n10,
  month: l9,
  day: n10,
  weekday: l9
};
var TIME_SIMPLE = {
  hour: n10,
  minute: n10
};
var TIME_WITH_SECONDS = {
  hour: n10,
  minute: n10,
  second: n10
};
var TIME_WITH_SHORT_OFFSET = {
  hour: n10,
  minute: n10,
  second: n10,
  timeZoneName: s12
};
var TIME_WITH_LONG_OFFSET = {
  hour: n10,
  minute: n10,
  second: n10,
  timeZoneName: l9
};
var TIME_24_SIMPLE = {
  hour: n10,
  minute: n10,
  hour12: false
};
var TIME_24_WITH_SECONDS = {
  hour: n10,
  minute: n10,
  second: n10,
  hour12: false
};
var TIME_24_WITH_SHORT_OFFSET = {
  hour: n10,
  minute: n10,
  second: n10,
  hour12: false,
  timeZoneName: s12
};
var TIME_24_WITH_LONG_OFFSET = {
  hour: n10,
  minute: n10,
  second: n10,
  hour12: false,
  timeZoneName: l9
};
var DATETIME_SHORT = {
  year: n10,
  month: n10,
  day: n10,
  hour: n10,
  minute: n10
};
var DATETIME_SHORT_WITH_SECONDS = {
  year: n10,
  month: n10,
  day: n10,
  hour: n10,
  minute: n10,
  second: n10
};
var DATETIME_MED = {
  year: n10,
  month: s12,
  day: n10,
  hour: n10,
  minute: n10
};
var DATETIME_MED_WITH_SECONDS = {
  year: n10,
  month: s12,
  day: n10,
  hour: n10,
  minute: n10,
  second: n10
};
var DATETIME_MED_WITH_WEEKDAY = {
  year: n10,
  month: s12,
  day: n10,
  weekday: s12,
  hour: n10,
  minute: n10
};
var DATETIME_FULL = {
  year: n10,
  month: l9,
  day: n10,
  hour: n10,
  minute: n10,
  timeZoneName: s12
};
var DATETIME_FULL_WITH_SECONDS = {
  year: n10,
  month: l9,
  day: n10,
  hour: n10,
  minute: n10,
  second: n10,
  timeZoneName: s12
};
var DATETIME_HUGE = {
  year: n10,
  month: l9,
  day: n10,
  weekday: l9,
  hour: n10,
  minute: n10,
  timeZoneName: l9
};
var DATETIME_HUGE_WITH_SECONDS = {
  year: n10,
  month: l9,
  day: n10,
  weekday: l9,
  hour: n10,
  minute: n10,
  second: n10,
  timeZoneName: l9
};

// node_modules/luxon/src/impl/util.js
function isUndefined(o12) {
  return typeof o12 === "undefined";
}
function isNumber(o12) {
  return typeof o12 === "number";
}
function isInteger(o12) {
  return typeof o12 === "number" && o12 % 1 === 0;
}
function isString(o12) {
  return typeof o12 === "string";
}
function isDate(o12) {
  return Object.prototype.toString.call(o12) === "[object Date]";
}
function hasIntl() {
  try {
    return typeof Intl !== "undefined" && Intl.DateTimeFormat;
  } catch (e9) {
    return false;
  }
}
function hasFormatToParts() {
  return !isUndefined(Intl.DateTimeFormat.prototype.formatToParts);
}
function hasRelative() {
  try {
    return typeof Intl !== "undefined" && !!Intl.RelativeTimeFormat;
  } catch (e9) {
    return false;
  }
}
function maybeArray(thing) {
  return Array.isArray(thing) ? thing : [thing];
}
function bestBy(arr, by, compare) {
  if (arr.length === 0) {
    return void 0;
  }
  return arr.reduce((best, next) => {
    const pair = [by(next), next];
    if (!best) {
      return pair;
    } else if (compare(best[0], pair[0]) === best[0]) {
      return best;
    } else {
      return pair;
    }
  }, null)[1];
}
function pick2(obj, keys) {
  return keys.reduce((a15, k8) => {
    a15[k8] = obj[k8];
    return a15;
  }, {});
}
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}
function integerBetween(thing, bottom, top) {
  return isInteger(thing) && thing >= bottom && thing <= top;
}
function floorMod(x6, n11) {
  return x6 - n11 * Math.floor(x6 / n11);
}
function padStart(input, n11 = 2) {
  const minus = input < 0 ? "-" : "";
  const target = minus ? input * -1 : input;
  let result;
  if (target.toString().length < n11) {
    result = ("0".repeat(n11) + target).slice(-n11);
  } else {
    result = target.toString();
  }
  return `${minus}${result}`;
}
function parseInteger(string) {
  if (isUndefined(string) || string === null || string === "") {
    return void 0;
  } else {
    return parseInt(string, 10);
  }
}
function parseMillis(fraction) {
  if (isUndefined(fraction) || fraction === null || fraction === "") {
    return void 0;
  } else {
    const f10 = parseFloat("0." + fraction) * 1e3;
    return Math.floor(f10);
  }
}
function roundTo(number, digits, towardZero = false) {
  const factor = 10 ** digits, rounder = towardZero ? Math.trunc : Math.round;
  return rounder(number * factor) / factor;
}
function isLeapYear(year) {
  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);
}
function daysInYear(year) {
  return isLeapYear(year) ? 366 : 365;
}
function daysInMonth(year, month) {
  const modMonth = floorMod(month - 1, 12) + 1, modYear = year + (month - modMonth) / 12;
  if (modMonth === 2) {
    return isLeapYear(modYear) ? 29 : 28;
  } else {
    return [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][modMonth - 1];
  }
}
function objToLocalTS(obj) {
  let d9 = Date.UTC(
    obj.year,
    obj.month - 1,
    obj.day,
    obj.hour,
    obj.minute,
    obj.second,
    obj.millisecond
  );
  if (obj.year < 100 && obj.year >= 0) {
    d9 = new Date(d9);
    d9.setUTCFullYear(d9.getUTCFullYear() - 1900);
  }
  return +d9;
}
function weeksInWeekYear(weekYear) {
  const p1 = (weekYear + Math.floor(weekYear / 4) - Math.floor(weekYear / 100) + Math.floor(weekYear / 400)) % 7, last = weekYear - 1, p22 = (last + Math.floor(last / 4) - Math.floor(last / 100) + Math.floor(last / 400)) % 7;
  return p1 === 4 || p22 === 3 ? 53 : 52;
}
function untruncateYear(year) {
  if (year > 99) {
    return year;
  } else return year > 60 ? 1900 + year : 2e3 + year;
}
function parseZoneInfo(ts3, offsetFormat, locale, timeZone = null) {
  const date = new Date(ts3), intlOpts = {
    hour12: false,
    year: "numeric",
    month: "2-digit",
    day: "2-digit",
    hour: "2-digit",
    minute: "2-digit"
  };
  if (timeZone) {
    intlOpts.timeZone = timeZone;
  }
  const modified = Object.assign({ timeZoneName: offsetFormat }, intlOpts), intl = hasIntl();
  if (intl && hasFormatToParts()) {
    const parsed = new Intl.DateTimeFormat(locale, modified).formatToParts(date).find((m13) => m13.type.toLowerCase() === "timezonename");
    return parsed ? parsed.value : null;
  } else if (intl) {
    const without = new Intl.DateTimeFormat(locale, intlOpts).format(date), included = new Intl.DateTimeFormat(locale, modified).format(date), diffed = included.substring(without.length), trimmed = diffed.replace(/^[, \u200e]+/, "");
    return trimmed;
  } else {
    return null;
  }
}
function signedOffset(offHourStr, offMinuteStr) {
  let offHour = parseInt(offHourStr, 10);
  if (Number.isNaN(offHour)) {
    offHour = 0;
  }
  const offMin = parseInt(offMinuteStr, 10) || 0, offMinSigned = offHour < 0 || Object.is(offHour, -0) ? -offMin : offMin;
  return offHour * 60 + offMinSigned;
}
function asNumber(value2) {
  const numericValue = Number(value2);
  if (typeof value2 === "boolean" || value2 === "" || Number.isNaN(numericValue))
    throw new InvalidArgumentError(`Invalid unit value ${value2}`);
  return numericValue;
}
function normalizeObject(obj, normalizer, nonUnitKeys) {
  const normalized = {};
  for (const u9 in obj) {
    if (hasOwnProperty(obj, u9)) {
      if (nonUnitKeys.indexOf(u9) >= 0) continue;
      const v11 = obj[u9];
      if (v11 === void 0 || v11 === null) continue;
      normalized[normalizer(u9)] = asNumber(v11);
    }
  }
  return normalized;
}
function formatOffset(offset2, format) {
  const hours = Math.trunc(Math.abs(offset2 / 60)), minutes = Math.trunc(Math.abs(offset2 % 60)), sign = offset2 >= 0 ? "+" : "-";
  switch (format) {
    case "short":
      return `${sign}${padStart(hours, 2)}:${padStart(minutes, 2)}`;
    case "narrow":
      return `${sign}${hours}${minutes > 0 ? `:${minutes}` : ""}`;
    case "techie":
      return `${sign}${padStart(hours, 2)}${padStart(minutes, 2)}`;
    default:
      throw new RangeError(`Value format ${format} is out of range for property format`);
  }
}
function timeObject(obj) {
  return pick2(obj, ["hour", "minute", "second", "millisecond"]);
}
var ianaRegex = /[A-Za-z_+-]{1,256}(:?\/[A-Za-z_+-]{1,256}(\/[A-Za-z_+-]{1,256})?)?/;

// node_modules/luxon/src/impl/english.js
function stringify(obj) {
  return JSON.stringify(obj, Object.keys(obj).sort());
}
var monthsLong = [
  "January",
  "February",
  "March",
  "April",
  "May",
  "June",
  "July",
  "August",
  "September",
  "October",
  "November",
  "December"
];
var monthsShort = [
  "Jan",
  "Feb",
  "Mar",
  "Apr",
  "May",
  "Jun",
  "Jul",
  "Aug",
  "Sep",
  "Oct",
  "Nov",
  "Dec"
];
var monthsNarrow = ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"];
function months(length2) {
  switch (length2) {
    case "narrow":
      return [...monthsNarrow];
    case "short":
      return [...monthsShort];
    case "long":
      return [...monthsLong];
    case "numeric":
      return ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"];
    case "2-digit":
      return ["01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"];
    default:
      return null;
  }
}
var weekdaysLong = [
  "Monday",
  "Tuesday",
  "Wednesday",
  "Thursday",
  "Friday",
  "Saturday",
  "Sunday"
];
var weekdaysShort = ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"];
var weekdaysNarrow = ["M", "T", "W", "T", "F", "S", "S"];
function weekdays(length2) {
  switch (length2) {
    case "narrow":
      return [...weekdaysNarrow];
    case "short":
      return [...weekdaysShort];
    case "long":
      return [...weekdaysLong];
    case "numeric":
      return ["1", "2", "3", "4", "5", "6", "7"];
    default:
      return null;
  }
}
var meridiems = ["AM", "PM"];
var erasLong = ["Before Christ", "Anno Domini"];
var erasShort = ["BC", "AD"];
var erasNarrow = ["B", "A"];
function eras(length2) {
  switch (length2) {
    case "narrow":
      return [...erasNarrow];
    case "short":
      return [...erasShort];
    case "long":
      return [...erasLong];
    default:
      return null;
  }
}
function meridiemForDateTime(dt4) {
  return meridiems[dt4.hour < 12 ? 0 : 1];
}
function weekdayForDateTime(dt4, length2) {
  return weekdays(length2)[dt4.weekday - 1];
}
function monthForDateTime(dt4, length2) {
  return months(length2)[dt4.month - 1];
}
function eraForDateTime(dt4, length2) {
  return eras(length2)[dt4.year < 0 ? 0 : 1];
}
function formatRelativeTime(unit, count, numeric = "always", narrow = false) {
  const units = {
    years: ["year", "yr."],
    quarters: ["quarter", "qtr."],
    months: ["month", "mo."],
    weeks: ["week", "wk."],
    days: ["day", "day", "days"],
    hours: ["hour", "hr."],
    minutes: ["minute", "min."],
    seconds: ["second", "sec."]
  };
  const lastable = ["hours", "minutes", "seconds"].indexOf(unit) === -1;
  if (numeric === "auto" && lastable) {
    const isDay = unit === "days";
    switch (count) {
      case 1:
        return isDay ? "tomorrow" : `next ${units[unit][0]}`;
      case -1:
        return isDay ? "yesterday" : `last ${units[unit][0]}`;
      case 0:
        return isDay ? "today" : `this ${units[unit][0]}`;
      default:
    }
  }
  const isInPast = Object.is(count, -0) || count < 0, fmtValue = Math.abs(count), singular = fmtValue === 1, lilUnits = units[unit], fmtUnit = narrow ? singular ? lilUnits[1] : lilUnits[2] || lilUnits[1] : singular ? units[unit][0] : unit;
  return isInPast ? `${fmtValue} ${fmtUnit} ago` : `in ${fmtValue} ${fmtUnit}`;
}
function formatString(knownFormat) {
  const filtered = pick2(knownFormat, [
    "weekday",
    "era",
    "year",
    "month",
    "day",
    "hour",
    "minute",
    "second",
    "timeZoneName",
    "hour12"
  ]), key = stringify(filtered), dateTimeHuge = "EEEE, LLLL d, yyyy, h:mm a";
  switch (key) {
    case stringify(DATE_SHORT):
      return "M/d/yyyy";
    case stringify(DATE_MED):
      return "LLL d, yyyy";
    case stringify(DATE_MED_WITH_WEEKDAY):
      return "EEE, LLL d, yyyy";
    case stringify(DATE_FULL):
      return "LLLL d, yyyy";
    case stringify(DATE_HUGE):
      return "EEEE, LLLL d, yyyy";
    case stringify(TIME_SIMPLE):
      return "h:mm a";
    case stringify(TIME_WITH_SECONDS):
      return "h:mm:ss a";
    case stringify(TIME_WITH_SHORT_OFFSET):
      return "h:mm a";
    case stringify(TIME_WITH_LONG_OFFSET):
      return "h:mm a";
    case stringify(TIME_24_SIMPLE):
      return "HH:mm";
    case stringify(TIME_24_WITH_SECONDS):
      return "HH:mm:ss";
    case stringify(TIME_24_WITH_SHORT_OFFSET):
      return "HH:mm";
    case stringify(TIME_24_WITH_LONG_OFFSET):
      return "HH:mm";
    case stringify(DATETIME_SHORT):
      return "M/d/yyyy, h:mm a";
    case stringify(DATETIME_MED):
      return "LLL d, yyyy, h:mm a";
    case stringify(DATETIME_FULL):
      return "LLLL d, yyyy, h:mm a";
    case stringify(DATETIME_HUGE):
      return dateTimeHuge;
    case stringify(DATETIME_SHORT_WITH_SECONDS):
      return "M/d/yyyy, h:mm:ss a";
    case stringify(DATETIME_MED_WITH_SECONDS):
      return "LLL d, yyyy, h:mm:ss a";
    case stringify(DATETIME_MED_WITH_WEEKDAY):
      return "EEE, d LLL yyyy, h:mm a";
    case stringify(DATETIME_FULL_WITH_SECONDS):
      return "LLLL d, yyyy, h:mm:ss a";
    case stringify(DATETIME_HUGE_WITH_SECONDS):
      return "EEEE, LLLL d, yyyy, h:mm:ss a";
    default:
      return dateTimeHuge;
  }
}

// node_modules/luxon/src/impl/formatter.js
function stringifyTokens(splits, tokenToString) {
  let s15 = "";
  for (const token of splits) {
    if (token.literal) {
      s15 += token.val;
    } else {
      s15 += tokenToString(token.val);
    }
  }
  return s15;
}
var macroTokenToFormatOpts = {
  D: DATE_SHORT,
  DD: DATE_MED,
  DDD: DATE_FULL,
  DDDD: DATE_HUGE,
  t: TIME_SIMPLE,
  tt: TIME_WITH_SECONDS,
  ttt: TIME_WITH_SHORT_OFFSET,
  tttt: TIME_WITH_LONG_OFFSET,
  T: TIME_24_SIMPLE,
  TT: TIME_24_WITH_SECONDS,
  TTT: TIME_24_WITH_SHORT_OFFSET,
  TTTT: TIME_24_WITH_LONG_OFFSET,
  f: DATETIME_SHORT,
  ff: DATETIME_MED,
  fff: DATETIME_FULL,
  ffff: DATETIME_HUGE,
  F: DATETIME_SHORT_WITH_SECONDS,
  FF: DATETIME_MED_WITH_SECONDS,
  FFF: DATETIME_FULL_WITH_SECONDS,
  FFFF: DATETIME_HUGE_WITH_SECONDS
};
var Formatter = class _Formatter {
  static create(locale, opts = {}) {
    return new _Formatter(locale, opts);
  }
  static parseFormat(fmt) {
    let current = null, currentFull = "", bracketed = false;
    const splits = [];
    for (let i11 = 0; i11 < fmt.length; i11++) {
      const c11 = fmt.charAt(i11);
      if (c11 === "'") {
        if (currentFull.length > 0) {
          splits.push({ literal: bracketed, val: currentFull });
        }
        current = null;
        currentFull = "";
        bracketed = !bracketed;
      } else if (bracketed) {
        currentFull += c11;
      } else if (c11 === current) {
        currentFull += c11;
      } else {
        if (currentFull.length > 0) {
          splits.push({ literal: false, val: currentFull });
        }
        currentFull = c11;
        current = c11;
      }
    }
    if (currentFull.length > 0) {
      splits.push({ literal: bracketed, val: currentFull });
    }
    return splits;
  }
  static macroTokenToFormatOpts(token) {
    return macroTokenToFormatOpts[token];
  }
  constructor(locale, formatOpts) {
    this.opts = formatOpts;
    this.loc = locale;
    this.systemLoc = null;
  }
  formatWithSystemDefault(dt4, opts) {
    if (this.systemLoc === null) {
      this.systemLoc = this.loc.redefaultToSystem();
    }
    const df = this.systemLoc.dtFormatter(dt4, Object.assign({}, this.opts, opts));
    return df.format();
  }
  formatDateTime(dt4, opts = {}) {
    const df = this.loc.dtFormatter(dt4, Object.assign({}, this.opts, opts));
    return df.format();
  }
  formatDateTimeParts(dt4, opts = {}) {
    const df = this.loc.dtFormatter(dt4, Object.assign({}, this.opts, opts));
    return df.formatToParts();
  }
  resolvedOptions(dt4, opts = {}) {
    const df = this.loc.dtFormatter(dt4, Object.assign({}, this.opts, opts));
    return df.resolvedOptions();
  }
  num(n11, p11 = 0) {
    if (this.opts.forceSimple) {
      return padStart(n11, p11);
    }
    const opts = Object.assign({}, this.opts);
    if (p11 > 0) {
      opts.padTo = p11;
    }
    return this.loc.numberFormatter(opts).format(n11);
  }
  formatDateTimeFromString(dt4, fmt) {
    const knownEnglish = this.loc.listingMode() === "en", useDateTimeFormatter = this.loc.outputCalendar && this.loc.outputCalendar !== "gregory" && hasFormatToParts(), string = (opts, extract) => this.loc.extract(dt4, opts, extract), formatOffset2 = (opts) => {
      if (dt4.isOffsetFixed && dt4.offset === 0 && opts.allowZ) {
        return "Z";
      }
      return dt4.isValid ? dt4.zone.formatOffset(dt4.ts, opts.format) : "";
    }, meridiem = () => knownEnglish ? meridiemForDateTime(dt4) : string({ hour: "numeric", hour12: true }, "dayperiod"), month = (length2, standalone) => knownEnglish ? monthForDateTime(dt4, length2) : string(standalone ? { month: length2 } : { month: length2, day: "numeric" }, "month"), weekday = (length2, standalone) => knownEnglish ? weekdayForDateTime(dt4, length2) : string(
      standalone ? { weekday: length2 } : { weekday: length2, month: "long", day: "numeric" },
      "weekday"
    ), maybeMacro = (token) => {
      const formatOpts = _Formatter.macroTokenToFormatOpts(token);
      if (formatOpts) {
        return this.formatWithSystemDefault(dt4, formatOpts);
      } else {
        return token;
      }
    }, era = (length2) => knownEnglish ? eraForDateTime(dt4, length2) : string({ era: length2 }, "era"), tokenToString = (token) => {
      switch (token) {
        case "S":
          return this.num(dt4.millisecond);
        case "u":
        case "SSS":
          return this.num(dt4.millisecond, 3);
        case "s":
          return this.num(dt4.second);
        case "ss":
          return this.num(dt4.second, 2);
        case "m":
          return this.num(dt4.minute);
        case "mm":
          return this.num(dt4.minute, 2);
        case "h":
          return this.num(dt4.hour % 12 === 0 ? 12 : dt4.hour % 12);
        case "hh":
          return this.num(dt4.hour % 12 === 0 ? 12 : dt4.hour % 12, 2);
        case "H":
          return this.num(dt4.hour);
        case "HH":
          return this.num(dt4.hour, 2);
        case "Z":
          return formatOffset2({ format: "narrow", allowZ: this.opts.allowZ });
        case "ZZ":
          return formatOffset2({ format: "short", allowZ: this.opts.allowZ });
        case "ZZZ":
          return formatOffset2({ format: "techie", allowZ: this.opts.allowZ });
        case "ZZZZ":
          return dt4.zone.offsetName(dt4.ts, { format: "short", locale: this.loc.locale });
        case "ZZZZZ":
          return dt4.zone.offsetName(dt4.ts, { format: "long", locale: this.loc.locale });
        case "z":
          return dt4.zoneName;
        case "a":
          return meridiem();
        case "d":
          return useDateTimeFormatter ? string({ day: "numeric" }, "day") : this.num(dt4.day);
        case "dd":
          return useDateTimeFormatter ? string({ day: "2-digit" }, "day") : this.num(dt4.day, 2);
        case "c":
          return this.num(dt4.weekday);
        case "ccc":
          return weekday("short", true);
        case "cccc":
          return weekday("long", true);
        case "ccccc":
          return weekday("narrow", true);
        case "E":
          return this.num(dt4.weekday);
        case "EEE":
          return weekday("short", false);
        case "EEEE":
          return weekday("long", false);
        case "EEEEE":
          return weekday("narrow", false);
        case "L":
          return useDateTimeFormatter ? string({ month: "numeric", day: "numeric" }, "month") : this.num(dt4.month);
        case "LL":
          return useDateTimeFormatter ? string({ month: "2-digit", day: "numeric" }, "month") : this.num(dt4.month, 2);
        case "LLL":
          return month("short", true);
        case "LLLL":
          return month("long", true);
        case "LLLLL":
          return month("narrow", true);
        case "M":
          return useDateTimeFormatter ? string({ month: "numeric" }, "month") : this.num(dt4.month);
        case "MM":
          return useDateTimeFormatter ? string({ month: "2-digit" }, "month") : this.num(dt4.month, 2);
        case "MMM":
          return month("short", false);
        case "MMMM":
          return month("long", false);
        case "MMMMM":
          return month("narrow", false);
        case "y":
          return useDateTimeFormatter ? string({ year: "numeric" }, "year") : this.num(dt4.year);
        case "yy":
          return useDateTimeFormatter ? string({ year: "2-digit" }, "year") : this.num(dt4.year.toString().slice(-2), 2);
        case "yyyy":
          return useDateTimeFormatter ? string({ year: "numeric" }, "year") : this.num(dt4.year, 4);
        case "yyyyyy":
          return useDateTimeFormatter ? string({ year: "numeric" }, "year") : this.num(dt4.year, 6);
        case "G":
          return era("short");
        case "GG":
          return era("long");
        case "GGGGG":
          return era("narrow");
        case "kk":
          return this.num(dt4.weekYear.toString().slice(-2), 2);
        case "kkkk":
          return this.num(dt4.weekYear, 4);
        case "W":
          return this.num(dt4.weekNumber);
        case "WW":
          return this.num(dt4.weekNumber, 2);
        case "o":
          return this.num(dt4.ordinal);
        case "ooo":
          return this.num(dt4.ordinal, 3);
        case "q":
          return this.num(dt4.quarter);
        case "qq":
          return this.num(dt4.quarter, 2);
        case "X":
          return this.num(Math.floor(dt4.ts / 1e3));
        case "x":
          return this.num(dt4.ts);
        default:
          return maybeMacro(token);
      }
    };
    return stringifyTokens(_Formatter.parseFormat(fmt), tokenToString);
  }
  formatDurationFromString(dur, fmt) {
    const tokenToField = (token) => {
      switch (token[0]) {
        case "S":
          return "millisecond";
        case "s":
          return "second";
        case "m":
          return "minute";
        case "h":
          return "hour";
        case "d":
          return "day";
        case "M":
          return "month";
        case "y":
          return "year";
        default:
          return null;
      }
    }, tokenToString = (lildur) => (token) => {
      const mapped = tokenToField(token);
      if (mapped) {
        return this.num(lildur.get(mapped), token.length);
      } else {
        return token;
      }
    }, tokens = _Formatter.parseFormat(fmt), realTokens = tokens.reduce(
      (found, { literal, val: val2 }) => literal ? found : found.concat(val2),
      []
    ), collapsed = dur.shiftTo(...realTokens.map(tokenToField).filter((t2) => t2));
    return stringifyTokens(tokens, tokenToString(collapsed));
  }
};

// node_modules/luxon/src/impl/invalid.js
var Invalid = class {
  constructor(reason, explanation) {
    this.reason = reason;
    this.explanation = explanation;
  }
  toMessage() {
    if (this.explanation) {
      return `${this.reason}: ${this.explanation}`;
    } else {
      return this.reason;
    }
  }
};

// node_modules/luxon/src/zone.js
var Zone = class {
  /**
   * The type of zone
   * @abstract
   * @type {string}
   */
  get type() {
    throw new ZoneIsAbstractError();
  }
  /**
   * The name of this zone.
   * @abstract
   * @type {string}
   */
  get name() {
    throw new ZoneIsAbstractError();
  }
  /**
   * Returns whether the offset is known to be fixed for the whole year.
   * @abstract
   * @type {boolean}
   */
  get universal() {
    throw new ZoneIsAbstractError();
  }
  /**
   * Returns the offset's common name (such as EST) at the specified timestamp
   * @abstract
   * @param {number} ts - Epoch milliseconds for which to get the name
   * @param {Object} opts - Options to affect the format
   * @param {string} opts.format - What style of offset to return. Accepts 'long' or 'short'.
   * @param {string} opts.locale - What locale to return the offset name in.
   * @return {string}
   */
  offsetName(ts3, opts) {
    throw new ZoneIsAbstractError();
  }
  /**
   * Returns the offset's value as a string
   * @abstract
   * @param {number} ts - Epoch milliseconds for which to get the offset
   * @param {string} format - What style of offset to return.
   *                          Accepts 'narrow', 'short', or 'techie'. Returning '+6', '+06:00', or '+0600' respectively
   * @return {string}
   */
  formatOffset(ts3, format) {
    throw new ZoneIsAbstractError();
  }
  /**
   * Return the offset in minutes for this zone at the specified timestamp.
   * @abstract
   * @param {number} ts - Epoch milliseconds for which to compute the offset
   * @return {number}
   */
  offset(ts3) {
    throw new ZoneIsAbstractError();
  }
  /**
   * Return whether this Zone is equal to another zone
   * @abstract
   * @param {Zone} otherZone - the zone to compare
   * @return {boolean}
   */
  equals(otherZone) {
    throw new ZoneIsAbstractError();
  }
  /**
   * Return whether this Zone is valid.
   * @abstract
   * @type {boolean}
   */
  get isValid() {
    throw new ZoneIsAbstractError();
  }
};

// node_modules/luxon/src/zones/localZone.js
var singleton = null;
var LocalZone = class _LocalZone extends Zone {
  /**
   * Get a singleton instance of the local zone
   * @return {LocalZone}
   */
  static get instance() {
    if (singleton === null) {
      singleton = new _LocalZone();
    }
    return singleton;
  }
  /** @override **/
  get type() {
    return "local";
  }
  /** @override **/
  get name() {
    if (hasIntl()) {
      return new Intl.DateTimeFormat().resolvedOptions().timeZone;
    } else return "local";
  }
  /** @override **/
  get universal() {
    return false;
  }
  /** @override **/
  offsetName(ts3, { format, locale }) {
    return parseZoneInfo(ts3, format, locale);
  }
  /** @override **/
  formatOffset(ts3, format) {
    return formatOffset(this.offset(ts3), format);
  }
  /** @override **/
  offset(ts3) {
    return -new Date(ts3).getTimezoneOffset();
  }
  /** @override **/
  equals(otherZone) {
    return otherZone.type === "local";
  }
  /** @override **/
  get isValid() {
    return true;
  }
};

// node_modules/luxon/src/zones/IANAZone.js
var matchingRegex = RegExp(`^${ianaRegex.source}$`);
var dtfCache = {};
function makeDTF(zone) {
  if (!dtfCache[zone]) {
    dtfCache[zone] = new Intl.DateTimeFormat("en-US", {
      hour12: false,
      timeZone: zone,
      year: "numeric",
      month: "2-digit",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    });
  }
  return dtfCache[zone];
}
var typeToPos = {
  year: 0,
  month: 1,
  day: 2,
  hour: 3,
  minute: 4,
  second: 5
};
function hackyOffset(dtf, date) {
  const formatted = dtf.format(date).replace(/\u200E/g, ""), parsed = /(\d+)\/(\d+)\/(\d+),? (\d+):(\d+):(\d+)/.exec(formatted), [, fMonth, fDay, fYear, fHour, fMinute, fSecond] = parsed;
  return [fYear, fMonth, fDay, fHour, fMinute, fSecond];
}
function partsOffset(dtf, date) {
  const formatted = dtf.formatToParts(date), filled = [];
  for (let i11 = 0; i11 < formatted.length; i11++) {
    const { type, value: value2 } = formatted[i11], pos = typeToPos[type];
    if (!isUndefined(pos)) {
      filled[pos] = parseInt(value2, 10);
    }
  }
  return filled;
}
var ianaZoneCache = {};
var IANAZone = class _IANAZone extends Zone {
  /**
   * @param {string} name - Zone name
   * @return {IANAZone}
   */
  static create(name) {
    if (!ianaZoneCache[name]) {
      ianaZoneCache[name] = new _IANAZone(name);
    }
    return ianaZoneCache[name];
  }
  /**
   * Reset local caches. Should only be necessary in testing scenarios.
   * @return {void}
   */
  static resetCache() {
    ianaZoneCache = {};
    dtfCache = {};
  }
  /**
   * Returns whether the provided string is a valid specifier. This only checks the string's format, not that the specifier identifies a known zone; see isValidZone for that.
   * @param {string} s - The string to check validity on
   * @example IANAZone.isValidSpecifier("America/New_York") //=> true
   * @example IANAZone.isValidSpecifier("Fantasia/Castle") //=> true
   * @example IANAZone.isValidSpecifier("Sport~~blorp") //=> false
   * @return {boolean}
   */
  static isValidSpecifier(s15) {
    return !!(s15 && s15.match(matchingRegex));
  }
  /**
   * Returns whether the provided string identifies a real zone
   * @param {string} zone - The string to check
   * @example IANAZone.isValidZone("America/New_York") //=> true
   * @example IANAZone.isValidZone("Fantasia/Castle") //=> false
   * @example IANAZone.isValidZone("Sport~~blorp") //=> false
   * @return {boolean}
   */
  static isValidZone(zone) {
    try {
      new Intl.DateTimeFormat("en-US", { timeZone: zone }).format();
      return true;
    } catch (e9) {
      return false;
    }
  }
  // Etc/GMT+8 -> -480
  /** @ignore */
  static parseGMTOffset(specifier) {
    if (specifier) {
      const match2 = specifier.match(/^Etc\/GMT(0|[+-]\d{1,2})$/i);
      if (match2) {
        return -60 * parseInt(match2[1]);
      }
    }
    return null;
  }
  constructor(name) {
    super();
    this.zoneName = name;
    this.valid = _IANAZone.isValidZone(name);
  }
  /** @override **/
  get type() {
    return "iana";
  }
  /** @override **/
  get name() {
    return this.zoneName;
  }
  /** @override **/
  get universal() {
    return false;
  }
  /** @override **/
  offsetName(ts3, { format, locale }) {
    return parseZoneInfo(ts3, format, locale, this.name);
  }
  /** @override **/
  formatOffset(ts3, format) {
    return formatOffset(this.offset(ts3), format);
  }
  /** @override **/
  offset(ts3) {
    const date = new Date(ts3);
    if (isNaN(date)) return NaN;
    const dtf = makeDTF(this.name), [year, month, day, hour, minute, second] = dtf.formatToParts ? partsOffset(dtf, date) : hackyOffset(dtf, date), adjustedHour = hour === 24 ? 0 : hour;
    const asUTC = objToLocalTS({
      year,
      month,
      day,
      hour: adjustedHour,
      minute,
      second,
      millisecond: 0
    });
    let asTS = +date;
    const over = asTS % 1e3;
    asTS -= over >= 0 ? over : 1e3 + over;
    return (asUTC - asTS) / (60 * 1e3);
  }
  /** @override **/
  equals(otherZone) {
    return otherZone.type === "iana" && otherZone.name === this.name;
  }
  /** @override **/
  get isValid() {
    return this.valid;
  }
};

// node_modules/luxon/src/zones/fixedOffsetZone.js
var singleton2 = null;
var FixedOffsetZone = class _FixedOffsetZone extends Zone {
  /**
   * Get a singleton instance of UTC
   * @return {FixedOffsetZone}
   */
  static get utcInstance() {
    if (singleton2 === null) {
      singleton2 = new _FixedOffsetZone(0);
    }
    return singleton2;
  }
  /**
   * Get an instance with a specified offset
   * @param {number} offset - The offset in minutes
   * @return {FixedOffsetZone}
   */
  static instance(offset2) {
    return offset2 === 0 ? _FixedOffsetZone.utcInstance : new _FixedOffsetZone(offset2);
  }
  /**
   * Get an instance of FixedOffsetZone from a UTC offset string, like "UTC+6"
   * @param {string} s - The offset string to parse
   * @example FixedOffsetZone.parseSpecifier("UTC+6")
   * @example FixedOffsetZone.parseSpecifier("UTC+06")
   * @example FixedOffsetZone.parseSpecifier("UTC-6:00")
   * @return {FixedOffsetZone}
   */
  static parseSpecifier(s15) {
    if (s15) {
      const r17 = s15.match(/^utc(?:([+-]\d{1,2})(?::(\d{2}))?)?$/i);
      if (r17) {
        return new _FixedOffsetZone(signedOffset(r17[1], r17[2]));
      }
    }
    return null;
  }
  constructor(offset2) {
    super();
    this.fixed = offset2;
  }
  /** @override **/
  get type() {
    return "fixed";
  }
  /** @override **/
  get name() {
    return this.fixed === 0 ? "UTC" : `UTC${formatOffset(this.fixed, "narrow")}`;
  }
  /** @override **/
  offsetName() {
    return this.name;
  }
  /** @override **/
  formatOffset(ts3, format) {
    return formatOffset(this.fixed, format);
  }
  /** @override **/
  get universal() {
    return true;
  }
  /** @override **/
  offset() {
    return this.fixed;
  }
  /** @override **/
  equals(otherZone) {
    return otherZone.type === "fixed" && otherZone.fixed === this.fixed;
  }
  /** @override **/
  get isValid() {
    return true;
  }
};

// node_modules/luxon/src/zones/invalidZone.js
var InvalidZone = class extends Zone {
  constructor(zoneName) {
    super();
    this.zoneName = zoneName;
  }
  /** @override **/
  get type() {
    return "invalid";
  }
  /** @override **/
  get name() {
    return this.zoneName;
  }
  /** @override **/
  get universal() {
    return false;
  }
  /** @override **/
  offsetName() {
    return null;
  }
  /** @override **/
  formatOffset() {
    return "";
  }
  /** @override **/
  offset() {
    return NaN;
  }
  /** @override **/
  equals() {
    return false;
  }
  /** @override **/
  get isValid() {
    return false;
  }
};

// node_modules/luxon/src/impl/zoneUtil.js
function normalizeZone(input, defaultZone2) {
  let offset2;
  if (isUndefined(input) || input === null) {
    return defaultZone2;
  } else if (input instanceof Zone) {
    return input;
  } else if (isString(input)) {
    const lowered = input.toLowerCase();
    if (lowered === "local") return defaultZone2;
    else if (lowered === "utc" || lowered === "gmt") return FixedOffsetZone.utcInstance;
    else if ((offset2 = IANAZone.parseGMTOffset(input)) != null) {
      return FixedOffsetZone.instance(offset2);
    } else if (IANAZone.isValidSpecifier(lowered)) return IANAZone.create(input);
    else return FixedOffsetZone.parseSpecifier(lowered) || new InvalidZone(input);
  } else if (isNumber(input)) {
    return FixedOffsetZone.instance(input);
  } else if (typeof input === "object" && input.offset && typeof input.offset === "number") {
    return input;
  } else {
    return new InvalidZone(input);
  }
}

// node_modules/luxon/src/settings.js
var now = () => Date.now();
var defaultZone = null;
var defaultLocale = null;
var defaultNumberingSystem = null;
var defaultOutputCalendar = null;
var throwOnInvalid = false;
var Settings = class _Settings {
  /**
   * Get the callback for returning the current timestamp.
   * @type {function}
   */
  static get now() {
    return now;
  }
  /**
   * Set the callback for returning the current timestamp.
   * The function should return a number, which will be interpreted as an Epoch millisecond count
   * @type {function}
   * @example Settings.now = () => Date.now() + 3000 // pretend it is 3 seconds in the future
   * @example Settings.now = () => 0 // always pretend it's Jan 1, 1970 at midnight in UTC time
   */
  static set now(n11) {
    now = n11;
  }
  /**
   * Get the default time zone to create DateTimes in.
   * @type {string}
   */
  static get defaultZoneName() {
    return _Settings.defaultZone.name;
  }
  /**
   * Set the default time zone to create DateTimes in. Does not affect existing instances.
   * @type {string}
   */
  static set defaultZoneName(z5) {
    if (!z5) {
      defaultZone = null;
    } else {
      defaultZone = normalizeZone(z5);
    }
  }
  /**
   * Get the default time zone object to create DateTimes in. Does not affect existing instances.
   * @type {Zone}
   */
  static get defaultZone() {
    return defaultZone || LocalZone.instance;
  }
  /**
   * Get the default locale to create DateTimes with. Does not affect existing instances.
   * @type {string}
   */
  static get defaultLocale() {
    return defaultLocale;
  }
  /**
   * Set the default locale to create DateTimes with. Does not affect existing instances.
   * @type {string}
   */
  static set defaultLocale(locale) {
    defaultLocale = locale;
  }
  /**
   * Get the default numbering system to create DateTimes with. Does not affect existing instances.
   * @type {string}
   */
  static get defaultNumberingSystem() {
    return defaultNumberingSystem;
  }
  /**
   * Set the default numbering system to create DateTimes with. Does not affect existing instances.
   * @type {string}
   */
  static set defaultNumberingSystem(numberingSystem) {
    defaultNumberingSystem = numberingSystem;
  }
  /**
   * Get the default output calendar to create DateTimes with. Does not affect existing instances.
   * @type {string}
   */
  static get defaultOutputCalendar() {
    return defaultOutputCalendar;
  }
  /**
   * Set the default output calendar to create DateTimes with. Does not affect existing instances.
   * @type {string}
   */
  static set defaultOutputCalendar(outputCalendar) {
    defaultOutputCalendar = outputCalendar;
  }
  /**
   * Get whether Luxon will throw when it encounters invalid DateTimes, Durations, or Intervals
   * @type {boolean}
   */
  static get throwOnInvalid() {
    return throwOnInvalid;
  }
  /**
   * Set whether Luxon will throw when it encounters invalid DateTimes, Durations, or Intervals
   * @type {boolean}
   */
  static set throwOnInvalid(t2) {
    throwOnInvalid = t2;
  }
  /**
   * Reset Luxon's global caches. Should only be necessary in testing scenarios.
   * @return {void}
   */
  static resetCaches() {
    Locale.resetCache();
    IANAZone.resetCache();
  }
};

// node_modules/luxon/src/impl/locale.js
var intlDTCache = {};
function getCachedDTF(locString, opts = {}) {
  const key = JSON.stringify([locString, opts]);
  let dtf = intlDTCache[key];
  if (!dtf) {
    dtf = new Intl.DateTimeFormat(locString, opts);
    intlDTCache[key] = dtf;
  }
  return dtf;
}
var intlNumCache = {};
function getCachedINF(locString, opts = {}) {
  const key = JSON.stringify([locString, opts]);
  let inf = intlNumCache[key];
  if (!inf) {
    inf = new Intl.NumberFormat(locString, opts);
    intlNumCache[key] = inf;
  }
  return inf;
}
var intlRelCache = {};
function getCachedRTF(locString, opts = {}) {
  const { base, ...cacheKeyOpts } = opts;
  const key = JSON.stringify([locString, cacheKeyOpts]);
  let inf = intlRelCache[key];
  if (!inf) {
    inf = new Intl.RelativeTimeFormat(locString, opts);
    intlRelCache[key] = inf;
  }
  return inf;
}
var sysLocaleCache = null;
function systemLocale() {
  if (sysLocaleCache) {
    return sysLocaleCache;
  } else if (hasIntl()) {
    const computedSys = new Intl.DateTimeFormat().resolvedOptions().locale;
    sysLocaleCache = !computedSys || computedSys === "und" ? "en-US" : computedSys;
    return sysLocaleCache;
  } else {
    sysLocaleCache = "en-US";
    return sysLocaleCache;
  }
}
function parseLocaleString(localeStr) {
  const uIndex = localeStr.indexOf("-u-");
  if (uIndex === -1) {
    return [localeStr];
  } else {
    let options;
    const smaller = localeStr.substring(0, uIndex);
    try {
      options = getCachedDTF(localeStr).resolvedOptions();
    } catch (e9) {
      options = getCachedDTF(smaller).resolvedOptions();
    }
    const { numberingSystem, calendar } = options;
    return [smaller, numberingSystem, calendar];
  }
}
function intlConfigString(localeStr, numberingSystem, outputCalendar) {
  if (hasIntl()) {
    if (outputCalendar || numberingSystem) {
      localeStr += "-u";
      if (outputCalendar) {
        localeStr += `-ca-${outputCalendar}`;
      }
      if (numberingSystem) {
        localeStr += `-nu-${numberingSystem}`;
      }
      return localeStr;
    } else {
      return localeStr;
    }
  } else {
    return [];
  }
}
function mapMonths(f10) {
  const ms2 = [];
  for (let i11 = 1; i11 <= 12; i11++) {
    const dt4 = DateTime.utc(2016, i11, 1);
    ms2.push(f10(dt4));
  }
  return ms2;
}
function mapWeekdays(f10) {
  const ms2 = [];
  for (let i11 = 1; i11 <= 7; i11++) {
    const dt4 = DateTime.utc(2016, 11, 13 + i11);
    ms2.push(f10(dt4));
  }
  return ms2;
}
function listStuff(loc, length2, defaultOK, englishFn, intlFn) {
  const mode = loc.listingMode(defaultOK);
  if (mode === "error") {
    return null;
  } else if (mode === "en") {
    return englishFn(length2);
  } else {
    return intlFn(length2);
  }
}
function supportsFastNumbers(loc) {
  if (loc.numberingSystem && loc.numberingSystem !== "latn") {
    return false;
  } else {
    return loc.numberingSystem === "latn" || !loc.locale || loc.locale.startsWith("en") || hasIntl() && new Intl.DateTimeFormat(loc.intl).resolvedOptions().numberingSystem === "latn";
  }
}
var PolyNumberFormatter = class {
  constructor(intl, forceSimple, opts) {
    this.padTo = opts.padTo || 0;
    this.floor = opts.floor || false;
    if (!forceSimple && hasIntl()) {
      const intlOpts = { useGrouping: false };
      if (opts.padTo > 0) intlOpts.minimumIntegerDigits = opts.padTo;
      this.inf = getCachedINF(intl, intlOpts);
    }
  }
  format(i11) {
    if (this.inf) {
      const fixed = this.floor ? Math.floor(i11) : i11;
      return this.inf.format(fixed);
    } else {
      const fixed = this.floor ? Math.floor(i11) : roundTo(i11, 3);
      return padStart(fixed, this.padTo);
    }
  }
};
var PolyDateFormatter = class {
  constructor(dt4, intl, opts) {
    this.opts = opts;
    this.hasIntl = hasIntl();
    let z5;
    if (dt4.zone.universal && this.hasIntl) {
      const gmtOffset = -1 * (dt4.offset / 60);
      const offsetZ = gmtOffset >= 0 ? `Etc/GMT+${gmtOffset}` : `Etc/GMT${gmtOffset}`;
      const isOffsetZoneSupported = IANAZone.isValidZone(offsetZ);
      if (dt4.offset !== 0 && isOffsetZoneSupported) {
        z5 = offsetZ;
        this.dt = dt4;
      } else {
        z5 = "UTC";
        if (opts.timeZoneName) {
          this.dt = dt4;
        } else {
          this.dt = dt4.offset === 0 ? dt4 : DateTime.fromMillis(dt4.ts + dt4.offset * 60 * 1e3);
        }
      }
    } else if (dt4.zone.type === "local") {
      this.dt = dt4;
    } else {
      this.dt = dt4;
      z5 = dt4.zone.name;
    }
    if (this.hasIntl) {
      const intlOpts = Object.assign({}, this.opts);
      if (z5) {
        intlOpts.timeZone = z5;
      }
      this.dtf = getCachedDTF(intl, intlOpts);
    }
  }
  format() {
    if (this.hasIntl) {
      return this.dtf.format(this.dt.toJSDate());
    } else {
      const tokenFormat = formatString(this.opts), loc = Locale.create("en-US");
      return Formatter.create(loc).formatDateTimeFromString(this.dt, tokenFormat);
    }
  }
  formatToParts() {
    if (this.hasIntl && hasFormatToParts()) {
      return this.dtf.formatToParts(this.dt.toJSDate());
    } else {
      return [];
    }
  }
  resolvedOptions() {
    if (this.hasIntl) {
      return this.dtf.resolvedOptions();
    } else {
      return {
        locale: "en-US",
        numberingSystem: "latn",
        outputCalendar: "gregory"
      };
    }
  }
};
var PolyRelFormatter = class {
  constructor(intl, isEnglish, opts) {
    this.opts = Object.assign({ style: "long" }, opts);
    if (!isEnglish && hasRelative()) {
      this.rtf = getCachedRTF(intl, opts);
    }
  }
  format(count, unit) {
    if (this.rtf) {
      return this.rtf.format(count, unit);
    } else {
      return formatRelativeTime(unit, count, this.opts.numeric, this.opts.style !== "long");
    }
  }
  formatToParts(count, unit) {
    if (this.rtf) {
      return this.rtf.formatToParts(count, unit);
    } else {
      return [];
    }
  }
};
var Locale = class _Locale {
  static fromOpts(opts) {
    return _Locale.create(opts.locale, opts.numberingSystem, opts.outputCalendar, opts.defaultToEN);
  }
  static create(locale, numberingSystem, outputCalendar, defaultToEN = false) {
    const specifiedLocale = locale || Settings.defaultLocale, localeR = specifiedLocale || (defaultToEN ? "en-US" : systemLocale()), numberingSystemR = numberingSystem || Settings.defaultNumberingSystem, outputCalendarR = outputCalendar || Settings.defaultOutputCalendar;
    return new _Locale(localeR, numberingSystemR, outputCalendarR, specifiedLocale);
  }
  static resetCache() {
    sysLocaleCache = null;
    intlDTCache = {};
    intlNumCache = {};
    intlRelCache = {};
  }
  static fromObject({ locale, numberingSystem, outputCalendar } = {}) {
    return _Locale.create(locale, numberingSystem, outputCalendar);
  }
  constructor(locale, numbering, outputCalendar, specifiedLocale) {
    const [parsedLocale, parsedNumberingSystem, parsedOutputCalendar] = parseLocaleString(locale);
    this.locale = parsedLocale;
    this.numberingSystem = numbering || parsedNumberingSystem || null;
    this.outputCalendar = outputCalendar || parsedOutputCalendar || null;
    this.intl = intlConfigString(this.locale, this.numberingSystem, this.outputCalendar);
    this.weekdaysCache = { format: {}, standalone: {} };
    this.monthsCache = { format: {}, standalone: {} };
    this.meridiemCache = null;
    this.eraCache = {};
    this.specifiedLocale = specifiedLocale;
    this.fastNumbersCached = null;
  }
  get fastNumbers() {
    if (this.fastNumbersCached == null) {
      this.fastNumbersCached = supportsFastNumbers(this);
    }
    return this.fastNumbersCached;
  }
  listingMode(defaultOK = true) {
    const intl = hasIntl(), hasFTP = intl && hasFormatToParts(), isActuallyEn = this.isEnglish(), hasNoWeirdness = (this.numberingSystem === null || this.numberingSystem === "latn") && (this.outputCalendar === null || this.outputCalendar === "gregory");
    if (!hasFTP && !(isActuallyEn && hasNoWeirdness) && !defaultOK) {
      return "error";
    } else if (!hasFTP || isActuallyEn && hasNoWeirdness) {
      return "en";
    } else {
      return "intl";
    }
  }
  clone(alts) {
    if (!alts || Object.getOwnPropertyNames(alts).length === 0) {
      return this;
    } else {
      return _Locale.create(
        alts.locale || this.specifiedLocale,
        alts.numberingSystem || this.numberingSystem,
        alts.outputCalendar || this.outputCalendar,
        alts.defaultToEN || false
      );
    }
  }
  redefaultToEN(alts = {}) {
    return this.clone(Object.assign({}, alts, { defaultToEN: true }));
  }
  redefaultToSystem(alts = {}) {
    return this.clone(Object.assign({}, alts, { defaultToEN: false }));
  }
  months(length2, format = false, defaultOK = true) {
    return listStuff(this, length2, defaultOK, months, () => {
      const intl = format ? { month: length2, day: "numeric" } : { month: length2 }, formatStr = format ? "format" : "standalone";
      if (!this.monthsCache[formatStr][length2]) {
        this.monthsCache[formatStr][length2] = mapMonths((dt4) => this.extract(dt4, intl, "month"));
      }
      return this.monthsCache[formatStr][length2];
    });
  }
  weekdays(length2, format = false, defaultOK = true) {
    return listStuff(this, length2, defaultOK, weekdays, () => {
      const intl = format ? { weekday: length2, year: "numeric", month: "long", day: "numeric" } : { weekday: length2 }, formatStr = format ? "format" : "standalone";
      if (!this.weekdaysCache[formatStr][length2]) {
        this.weekdaysCache[formatStr][length2] = mapWeekdays(
          (dt4) => this.extract(dt4, intl, "weekday")
        );
      }
      return this.weekdaysCache[formatStr][length2];
    });
  }
  meridiems(defaultOK = true) {
    return listStuff(
      this,
      void 0,
      defaultOK,
      () => meridiems,
      () => {
        if (!this.meridiemCache) {
          const intl = { hour: "numeric", hour12: true };
          this.meridiemCache = [DateTime.utc(2016, 11, 13, 9), DateTime.utc(2016, 11, 13, 19)].map(
            (dt4) => this.extract(dt4, intl, "dayperiod")
          );
        }
        return this.meridiemCache;
      }
    );
  }
  eras(length2, defaultOK = true) {
    return listStuff(this, length2, defaultOK, eras, () => {
      const intl = { era: length2 };
      if (!this.eraCache[length2]) {
        this.eraCache[length2] = [DateTime.utc(-40, 1, 1), DateTime.utc(2017, 1, 1)].map(
          (dt4) => this.extract(dt4, intl, "era")
        );
      }
      return this.eraCache[length2];
    });
  }
  extract(dt4, intlOpts, field) {
    const df = this.dtFormatter(dt4, intlOpts), results = df.formatToParts(), matching = results.find((m13) => m13.type.toLowerCase() === field);
    return matching ? matching.value : null;
  }
  numberFormatter(opts = {}) {
    return new PolyNumberFormatter(this.intl, opts.forceSimple || this.fastNumbers, opts);
  }
  dtFormatter(dt4, intlOpts = {}) {
    return new PolyDateFormatter(dt4, this.intl, intlOpts);
  }
  relFormatter(opts = {}) {
    return new PolyRelFormatter(this.intl, this.isEnglish(), opts);
  }
  isEnglish() {
    return this.locale === "en" || this.locale.toLowerCase() === "en-us" || hasIntl() && new Intl.DateTimeFormat(this.intl).resolvedOptions().locale.startsWith("en-us");
  }
  equals(other) {
    return this.locale === other.locale && this.numberingSystem === other.numberingSystem && this.outputCalendar === other.outputCalendar;
  }
};

// node_modules/luxon/src/impl/regexParser.js
function combineRegexes(...regexes) {
  const full = regexes.reduce((f10, r17) => f10 + r17.source, "");
  return RegExp(`^${full}$`);
}
function combineExtractors(...extractors) {
  return (m13) => extractors.reduce(
    ([mergedVals, mergedZone, cursor], ex) => {
      const [val2, zone, next] = ex(m13, cursor);
      return [Object.assign(mergedVals, val2), mergedZone || zone, next];
    },
    [{}, null, 1]
  ).slice(0, 2);
}
function parse3(s15, ...patterns) {
  if (s15 == null) {
    return [null, null];
  }
  for (const [regex, extractor] of patterns) {
    const m13 = regex.exec(s15);
    if (m13) {
      return extractor(m13);
    }
  }
  return [null, null];
}
function simpleParse(...keys) {
  return (match2, cursor) => {
    const ret = {};
    let i11;
    for (i11 = 0; i11 < keys.length; i11++) {
      ret[keys[i11]] = parseInteger(match2[cursor + i11]);
    }
    return [ret, null, cursor + i11];
  };
}
var offsetRegex = /(?:(Z)|([+-]\d\d)(?::?(\d\d))?)/;
var isoTimeBaseRegex = /(\d\d)(?::?(\d\d)(?::?(\d\d)(?:[.,](\d{1,30}))?)?)?/;
var isoTimeRegex = RegExp(`${isoTimeBaseRegex.source}${offsetRegex.source}?`);
var isoTimeExtensionRegex = RegExp(`(?:T${isoTimeRegex.source})?`);
var isoYmdRegex = /([+-]\d{6}|\d{4})(?:-?(\d\d)(?:-?(\d\d))?)?/;
var isoWeekRegex = /(\d{4})-?W(\d\d)(?:-?(\d))?/;
var isoOrdinalRegex = /(\d{4})-?(\d{3})/;
var extractISOWeekData = simpleParse("weekYear", "weekNumber", "weekDay");
var extractISOOrdinalData = simpleParse("year", "ordinal");
var sqlYmdRegex = /(\d{4})-(\d\d)-(\d\d)/;
var sqlTimeRegex = RegExp(
  `${isoTimeBaseRegex.source} ?(?:${offsetRegex.source}|(${ianaRegex.source}))?`
);
var sqlTimeExtensionRegex = RegExp(`(?: ${sqlTimeRegex.source})?`);
function int(match2, pos, fallback) {
  const m13 = match2[pos];
  return isUndefined(m13) ? fallback : parseInteger(m13);
}
function extractISOYmd(match2, cursor) {
  const item = {
    year: int(match2, cursor),
    month: int(match2, cursor + 1, 1),
    day: int(match2, cursor + 2, 1)
  };
  return [item, null, cursor + 3];
}
function extractISOTime(match2, cursor) {
  const item = {
    hours: int(match2, cursor, 0),
    minutes: int(match2, cursor + 1, 0),
    seconds: int(match2, cursor + 2, 0),
    milliseconds: parseMillis(match2[cursor + 3])
  };
  return [item, null, cursor + 4];
}
function extractISOOffset(match2, cursor) {
  const local = !match2[cursor] && !match2[cursor + 1], fullOffset = signedOffset(match2[cursor + 1], match2[cursor + 2]), zone = local ? null : FixedOffsetZone.instance(fullOffset);
  return [{}, zone, cursor + 3];
}
function extractIANAZone(match2, cursor) {
  const zone = match2[cursor] ? IANAZone.create(match2[cursor]) : null;
  return [{}, zone, cursor + 1];
}
var isoTimeOnly = RegExp(`^T?${isoTimeBaseRegex.source}$`);
var isoDuration = /^-?P(?:(?:(-?\d{1,9})Y)?(?:(-?\d{1,9})M)?(?:(-?\d{1,9})W)?(?:(-?\d{1,9})D)?(?:T(?:(-?\d{1,9})H)?(?:(-?\d{1,9})M)?(?:(-?\d{1,20})(?:[.,](-?\d{1,9}))?S)?)?)$/;
function extractISODuration(match2) {
  const [
    s15,
    yearStr,
    monthStr,
    weekStr,
    dayStr,
    hourStr,
    minuteStr,
    secondStr,
    millisecondsStr
  ] = match2;
  const hasNegativePrefix = s15[0] === "-";
  const negativeSeconds = secondStr && secondStr[0] === "-";
  const maybeNegate = (num, force = false) => num !== void 0 && (force || num && hasNegativePrefix) ? -num : num;
  return [
    {
      years: maybeNegate(parseInteger(yearStr)),
      months: maybeNegate(parseInteger(monthStr)),
      weeks: maybeNegate(parseInteger(weekStr)),
      days: maybeNegate(parseInteger(dayStr)),
      hours: maybeNegate(parseInteger(hourStr)),
      minutes: maybeNegate(parseInteger(minuteStr)),
      seconds: maybeNegate(parseInteger(secondStr), secondStr === "-0"),
      milliseconds: maybeNegate(parseMillis(millisecondsStr), negativeSeconds)
    }
  ];
}
var obsOffsets = {
  GMT: 0,
  EDT: -4 * 60,
  EST: -5 * 60,
  CDT: -5 * 60,
  CST: -6 * 60,
  MDT: -6 * 60,
  MST: -7 * 60,
  PDT: -7 * 60,
  PST: -8 * 60
};
function fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
  const result = {
    year: yearStr.length === 2 ? untruncateYear(parseInteger(yearStr)) : parseInteger(yearStr),
    month: monthsShort.indexOf(monthStr) + 1,
    day: parseInteger(dayStr),
    hour: parseInteger(hourStr),
    minute: parseInteger(minuteStr)
  };
  if (secondStr) result.second = parseInteger(secondStr);
  if (weekdayStr) {
    result.weekday = weekdayStr.length > 3 ? weekdaysLong.indexOf(weekdayStr) + 1 : weekdaysShort.indexOf(weekdayStr) + 1;
  }
  return result;
}
var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\d\d)(\d\d)))$/;
function extractRFC2822(match2) {
  const [
    ,
    weekdayStr,
    dayStr,
    monthStr,
    yearStr,
    hourStr,
    minuteStr,
    secondStr,
    obsOffset,
    milOffset,
    offHourStr,
    offMinuteStr
  ] = match2, result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);
  let offset2;
  if (obsOffset) {
    offset2 = obsOffsets[obsOffset];
  } else if (milOffset) {
    offset2 = 0;
  } else {
    offset2 = signedOffset(offHourStr, offMinuteStr);
  }
  return [result, new FixedOffsetZone(offset2)];
}
function preprocessRFC2822(s15) {
  return s15.replace(/\([^()]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").trim();
}
var rfc1123 = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\d\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\d{4}) (\d\d):(\d\d):(\d\d) GMT$/;
var rfc850 = /^(Monday|Tuesday|Wedsday|Thursday|Friday|Saturday|Sunday), (\d\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\d\d) (\d\d):(\d\d):(\d\d) GMT$/;
var ascii = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \d|\d\d) (\d\d):(\d\d):(\d\d) (\d{4})$/;
function extractRFC1123Or850(match2) {
  const [, weekdayStr, dayStr, monthStr, yearStr, hourStr, minuteStr, secondStr] = match2, result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);
  return [result, FixedOffsetZone.utcInstance];
}
function extractASCII(match2) {
  const [, weekdayStr, monthStr, dayStr, hourStr, minuteStr, secondStr, yearStr] = match2, result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);
  return [result, FixedOffsetZone.utcInstance];
}
var isoYmdWithTimeExtensionRegex = combineRegexes(isoYmdRegex, isoTimeExtensionRegex);
var isoWeekWithTimeExtensionRegex = combineRegexes(isoWeekRegex, isoTimeExtensionRegex);
var isoOrdinalWithTimeExtensionRegex = combineRegexes(isoOrdinalRegex, isoTimeExtensionRegex);
var isoTimeCombinedRegex = combineRegexes(isoTimeRegex);
var extractISOYmdTimeAndOffset = combineExtractors(
  extractISOYmd,
  extractISOTime,
  extractISOOffset
);
var extractISOWeekTimeAndOffset = combineExtractors(
  extractISOWeekData,
  extractISOTime,
  extractISOOffset
);
var extractISOOrdinalDateAndTime = combineExtractors(
  extractISOOrdinalData,
  extractISOTime,
  extractISOOffset
);
var extractISOTimeAndOffset = combineExtractors(extractISOTime, extractISOOffset);
function parseISODate(s15) {
  return parse3(
    s15,
    [isoYmdWithTimeExtensionRegex, extractISOYmdTimeAndOffset],
    [isoWeekWithTimeExtensionRegex, extractISOWeekTimeAndOffset],
    [isoOrdinalWithTimeExtensionRegex, extractISOOrdinalDateAndTime],
    [isoTimeCombinedRegex, extractISOTimeAndOffset]
  );
}
function parseRFC2822Date(s15) {
  return parse3(preprocessRFC2822(s15), [rfc2822, extractRFC2822]);
}
function parseHTTPDate(s15) {
  return parse3(
    s15,
    [rfc1123, extractRFC1123Or850],
    [rfc850, extractRFC1123Or850],
    [ascii, extractASCII]
  );
}
function parseISODuration(s15) {
  return parse3(s15, [isoDuration, extractISODuration]);
}
var extractISOTimeOnly = combineExtractors(extractISOTime);
function parseISOTimeOnly(s15) {
  return parse3(s15, [isoTimeOnly, extractISOTimeOnly]);
}
var sqlYmdWithTimeExtensionRegex = combineRegexes(sqlYmdRegex, sqlTimeExtensionRegex);
var sqlTimeCombinedRegex = combineRegexes(sqlTimeRegex);
var extractISOYmdTimeOffsetAndIANAZone = combineExtractors(
  extractISOYmd,
  extractISOTime,
  extractISOOffset,
  extractIANAZone
);
var extractISOTimeOffsetAndIANAZone = combineExtractors(
  extractISOTime,
  extractISOOffset,
  extractIANAZone
);
function parseSQL(s15) {
  return parse3(
    s15,
    [sqlYmdWithTimeExtensionRegex, extractISOYmdTimeOffsetAndIANAZone],
    [sqlTimeCombinedRegex, extractISOTimeOffsetAndIANAZone]
  );
}

// node_modules/luxon/src/duration.js
var INVALID = "Invalid Duration";
var lowOrderMatrix = {
  weeks: {
    days: 7,
    hours: 7 * 24,
    minutes: 7 * 24 * 60,
    seconds: 7 * 24 * 60 * 60,
    milliseconds: 7 * 24 * 60 * 60 * 1e3
  },
  days: {
    hours: 24,
    minutes: 24 * 60,
    seconds: 24 * 60 * 60,
    milliseconds: 24 * 60 * 60 * 1e3
  },
  hours: { minutes: 60, seconds: 60 * 60, milliseconds: 60 * 60 * 1e3 },
  minutes: { seconds: 60, milliseconds: 60 * 1e3 },
  seconds: { milliseconds: 1e3 }
};
var casualMatrix = Object.assign(
  {
    years: {
      quarters: 4,
      months: 12,
      weeks: 52,
      days: 365,
      hours: 365 * 24,
      minutes: 365 * 24 * 60,
      seconds: 365 * 24 * 60 * 60,
      milliseconds: 365 * 24 * 60 * 60 * 1e3
    },
    quarters: {
      months: 3,
      weeks: 13,
      days: 91,
      hours: 91 * 24,
      minutes: 91 * 24 * 60,
      seconds: 91 * 24 * 60 * 60,
      milliseconds: 91 * 24 * 60 * 60 * 1e3
    },
    months: {
      weeks: 4,
      days: 30,
      hours: 30 * 24,
      minutes: 30 * 24 * 60,
      seconds: 30 * 24 * 60 * 60,
      milliseconds: 30 * 24 * 60 * 60 * 1e3
    }
  },
  lowOrderMatrix
);
var daysInYearAccurate = 146097 / 400;
var daysInMonthAccurate = 146097 / 4800;
var accurateMatrix = Object.assign(
  {
    years: {
      quarters: 4,
      months: 12,
      weeks: daysInYearAccurate / 7,
      days: daysInYearAccurate,
      hours: daysInYearAccurate * 24,
      minutes: daysInYearAccurate * 24 * 60,
      seconds: daysInYearAccurate * 24 * 60 * 60,
      milliseconds: daysInYearAccurate * 24 * 60 * 60 * 1e3
    },
    quarters: {
      months: 3,
      weeks: daysInYearAccurate / 28,
      days: daysInYearAccurate / 4,
      hours: daysInYearAccurate * 24 / 4,
      minutes: daysInYearAccurate * 24 * 60 / 4,
      seconds: daysInYearAccurate * 24 * 60 * 60 / 4,
      milliseconds: daysInYearAccurate * 24 * 60 * 60 * 1e3 / 4
    },
    months: {
      weeks: daysInMonthAccurate / 7,
      days: daysInMonthAccurate,
      hours: daysInMonthAccurate * 24,
      minutes: daysInMonthAccurate * 24 * 60,
      seconds: daysInMonthAccurate * 24 * 60 * 60,
      milliseconds: daysInMonthAccurate * 24 * 60 * 60 * 1e3
    }
  },
  lowOrderMatrix
);
var orderedUnits = [
  "years",
  "quarters",
  "months",
  "weeks",
  "days",
  "hours",
  "minutes",
  "seconds",
  "milliseconds"
];
var reverseUnits = orderedUnits.slice(0).reverse();
function clone(dur, alts, clear = false) {
  const conf = {
    values: clear ? alts.values : Object.assign({}, dur.values, alts.values || {}),
    loc: dur.loc.clone(alts.loc),
    conversionAccuracy: alts.conversionAccuracy || dur.conversionAccuracy
  };
  return new Duration(conf);
}
function antiTrunc(n11) {
  return n11 < 0 ? Math.floor(n11) : Math.ceil(n11);
}
function convert(matrix, fromMap, fromUnit, toMap, toUnit2) {
  const conv = matrix[toUnit2][fromUnit], raw = fromMap[fromUnit] / conv, sameSign = Math.sign(raw) === Math.sign(toMap[toUnit2]), added = !sameSign && toMap[toUnit2] !== 0 && Math.abs(raw) <= 1 ? antiTrunc(raw) : Math.trunc(raw);
  toMap[toUnit2] += added;
  fromMap[fromUnit] -= added * conv;
}
function normalizeValues(matrix, vals) {
  reverseUnits.reduce((previous, current) => {
    if (!isUndefined(vals[current])) {
      if (previous) {
        convert(matrix, vals, previous, vals, current);
      }
      return current;
    } else {
      return previous;
    }
  }, null);
}
var Duration = class _Duration {
  /**
   * @private
   */
  constructor(config) {
    const accurate = config.conversionAccuracy === "longterm" || false;
    this.values = config.values;
    this.loc = config.loc || Locale.create();
    this.conversionAccuracy = accurate ? "longterm" : "casual";
    this.invalid = config.invalid || null;
    this.matrix = accurate ? accurateMatrix : casualMatrix;
    this.isLuxonDuration = true;
  }
  /**
   * Create Duration from a number of milliseconds.
   * @param {number} count of milliseconds
   * @param {Object} opts - options for parsing
   * @param {string} [opts.locale='en-US'] - the locale to use
   * @param {string} opts.numberingSystem - the numbering system to use
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @return {Duration}
   */
  static fromMillis(count, opts) {
    return _Duration.fromObject(Object.assign({ milliseconds: count }, opts));
  }
  /**
   * Create a Duration from a JavaScript object with keys like 'years' and 'hours'.
   * If this object is empty then a zero milliseconds duration is returned.
   * @param {Object} obj - the object to create the DateTime from
   * @param {number} obj.years
   * @param {number} obj.quarters
   * @param {number} obj.months
   * @param {number} obj.weeks
   * @param {number} obj.days
   * @param {number} obj.hours
   * @param {number} obj.minutes
   * @param {number} obj.seconds
   * @param {number} obj.milliseconds
   * @param {string} [obj.locale='en-US'] - the locale to use
   * @param {string} obj.numberingSystem - the numbering system to use
   * @param {string} [obj.conversionAccuracy='casual'] - the conversion system to use
   * @return {Duration}
   */
  static fromObject(obj) {
    if (obj == null || typeof obj !== "object") {
      throw new InvalidArgumentError(
        `Duration.fromObject: argument expected to be an object, got ${obj === null ? "null" : typeof obj}`
      );
    }
    return new _Duration({
      values: normalizeObject(obj, _Duration.normalizeUnit, [
        "locale",
        "numberingSystem",
        "conversionAccuracy",
        "zone"
        // a bit of debt; it's super inconvenient internally not to be able to blindly pass this
      ]),
      loc: Locale.fromObject(obj),
      conversionAccuracy: obj.conversionAccuracy
    });
  }
  /**
   * Create a Duration from an ISO 8601 duration string.
   * @param {string} text - text to parse
   * @param {Object} opts - options for parsing
   * @param {string} [opts.locale='en-US'] - the locale to use
   * @param {string} opts.numberingSystem - the numbering system to use
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @see https://en.wikipedia.org/wiki/ISO_8601#Durations
   * @example Duration.fromISO('P3Y6M1W4DT12H30M5S').toObject() //=> { years: 3, months: 6, weeks: 1, days: 4, hours: 12, minutes: 30, seconds: 5 }
   * @example Duration.fromISO('PT23H').toObject() //=> { hours: 23 }
   * @example Duration.fromISO('P5Y3M').toObject() //=> { years: 5, months: 3 }
   * @return {Duration}
   */
  static fromISO(text, opts) {
    const [parsed] = parseISODuration(text);
    if (parsed) {
      const obj = Object.assign(parsed, opts);
      return _Duration.fromObject(obj);
    } else {
      return _Duration.invalid("unparsable", `the input "${text}" can't be parsed as ISO 8601`);
    }
  }
  /**
   * Create a Duration from an ISO 8601 time string.
   * @param {string} text - text to parse
   * @param {Object} opts - options for parsing
   * @param {string} [opts.locale='en-US'] - the locale to use
   * @param {string} opts.numberingSystem - the numbering system to use
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @see https://en.wikipedia.org/wiki/ISO_8601#Times
   * @example Duration.fromISOTime('11:22:33.444').toObject() //=> { hours: 11, minutes: 22, seconds: 33, milliseconds: 444 }
   * @example Duration.fromISOTime('11:00').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }
   * @example Duration.fromISOTime('T11:00').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }
   * @example Duration.fromISOTime('1100').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }
   * @example Duration.fromISOTime('T1100').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }
   * @return {Duration}
   */
  static fromISOTime(text, opts) {
    const [parsed] = parseISOTimeOnly(text);
    if (parsed) {
      const obj = Object.assign(parsed, opts);
      return _Duration.fromObject(obj);
    } else {
      return _Duration.invalid("unparsable", `the input "${text}" can't be parsed as ISO 8601`);
    }
  }
  /**
   * Create an invalid Duration.
   * @param {string} reason - simple string of why this datetime is invalid. Should not contain parameters or anything else data-dependent
   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information
   * @return {Duration}
   */
  static invalid(reason, explanation = null) {
    if (!reason) {
      throw new InvalidArgumentError("need to specify a reason the Duration is invalid");
    }
    const invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);
    if (Settings.throwOnInvalid) {
      throw new InvalidDurationError(invalid);
    } else {
      return new _Duration({ invalid });
    }
  }
  /**
   * @private
   */
  static normalizeUnit(unit) {
    const normalized = {
      year: "years",
      years: "years",
      quarter: "quarters",
      quarters: "quarters",
      month: "months",
      months: "months",
      week: "weeks",
      weeks: "weeks",
      day: "days",
      days: "days",
      hour: "hours",
      hours: "hours",
      minute: "minutes",
      minutes: "minutes",
      second: "seconds",
      seconds: "seconds",
      millisecond: "milliseconds",
      milliseconds: "milliseconds"
    }[unit ? unit.toLowerCase() : unit];
    if (!normalized) throw new InvalidUnitError(unit);
    return normalized;
  }
  /**
   * Check if an object is a Duration. Works across context boundaries
   * @param {object} o
   * @return {boolean}
   */
  static isDuration(o12) {
    return o12 && o12.isLuxonDuration || false;
  }
  /**
   * Get  the locale of a Duration, such 'en-GB'
   * @type {string}
   */
  get locale() {
    return this.isValid ? this.loc.locale : null;
  }
  /**
   * Get the numbering system of a Duration, such 'beng'. The numbering system is used when formatting the Duration
   *
   * @type {string}
   */
  get numberingSystem() {
    return this.isValid ? this.loc.numberingSystem : null;
  }
  /**
   * Returns a string representation of this Duration formatted according to the specified format string. You may use these tokens:
   * * `S` for milliseconds
   * * `s` for seconds
   * * `m` for minutes
   * * `h` for hours
   * * `d` for days
   * * `M` for months
   * * `y` for years
   * Notes:
   * * Add padding by repeating the token, e.g. "yy" pads the years to two digits, "hhhh" pads the hours out to four digits
   * * The duration will be converted to the set of units in the format string using {@link Duration.shiftTo} and the Durations's conversion accuracy setting.
   * @param {string} fmt - the format string
   * @param {Object} opts - options
   * @param {boolean} [opts.floor=true] - floor numerical values
   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat("y d s") //=> "1 6 2"
   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat("yy dd sss") //=> "01 06 002"
   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat("M S") //=> "12 518402000"
   * @return {string}
   */
  toFormat(fmt, opts = {}) {
    const fmtOpts = Object.assign({}, opts, {
      floor: opts.round !== false && opts.floor !== false
    });
    return this.isValid ? Formatter.create(this.loc, fmtOpts).formatDurationFromString(this, fmt) : INVALID;
  }
  /**
   * Returns a JavaScript object with this Duration's values.
   * @param opts - options for generating the object
   * @param {boolean} [opts.includeConfig=false] - include configuration attributes in the output
   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toObject() //=> { years: 1, days: 6, seconds: 2 }
   * @return {Object}
   */
  toObject(opts = {}) {
    if (!this.isValid) return {};
    const base = Object.assign({}, this.values);
    if (opts.includeConfig) {
      base.conversionAccuracy = this.conversionAccuracy;
      base.numberingSystem = this.loc.numberingSystem;
      base.locale = this.loc.locale;
    }
    return base;
  }
  /**
   * Returns an ISO 8601-compliant string representation of this Duration.
   * @see https://en.wikipedia.org/wiki/ISO_8601#Durations
   * @example Duration.fromObject({ years: 3, seconds: 45 }).toISO() //=> 'P3YT45S'
   * @example Duration.fromObject({ months: 4, seconds: 45 }).toISO() //=> 'P4MT45S'
   * @example Duration.fromObject({ months: 5 }).toISO() //=> 'P5M'
   * @example Duration.fromObject({ minutes: 5 }).toISO() //=> 'PT5M'
   * @example Duration.fromObject({ milliseconds: 6 }).toISO() //=> 'PT0.006S'
   * @return {string}
   */
  toISO() {
    if (!this.isValid) return null;
    let s15 = "P";
    if (this.years !== 0) s15 += this.years + "Y";
    if (this.months !== 0 || this.quarters !== 0) s15 += this.months + this.quarters * 3 + "M";
    if (this.weeks !== 0) s15 += this.weeks + "W";
    if (this.days !== 0) s15 += this.days + "D";
    if (this.hours !== 0 || this.minutes !== 0 || this.seconds !== 0 || this.milliseconds !== 0)
      s15 += "T";
    if (this.hours !== 0) s15 += this.hours + "H";
    if (this.minutes !== 0) s15 += this.minutes + "M";
    if (this.seconds !== 0 || this.milliseconds !== 0)
      s15 += roundTo(this.seconds + this.milliseconds / 1e3, 3) + "S";
    if (s15 === "P") s15 += "T0S";
    return s15;
  }
  /**
   * Returns an ISO 8601-compliant string representation of this Duration, formatted as a time of day.
   * Note that this will return null if the duration is invalid, negative, or equal to or greater than 24 hours.
   * @see https://en.wikipedia.org/wiki/ISO_8601#Times
   * @param {Object} opts - options
   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0
   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0
   * @param {boolean} [opts.includePrefix=false] - include the `T` prefix
   * @param {string} [opts.format='extended'] - choose between the basic and extended format
   * @example Duration.fromObject({ hours: 11 }).toISOTime() //=> '11:00:00.000'
   * @example Duration.fromObject({ hours: 11 }).toISOTime({ suppressMilliseconds: true }) //=> '11:00:00'
   * @example Duration.fromObject({ hours: 11 }).toISOTime({ suppressSeconds: true }) //=> '11:00'
   * @example Duration.fromObject({ hours: 11 }).toISOTime({ includePrefix: true }) //=> 'T11:00:00.000'
   * @example Duration.fromObject({ hours: 11 }).toISOTime({ format: 'basic' }) //=> '110000.000'
   * @return {string}
   */
  toISOTime(opts = {}) {
    if (!this.isValid) return null;
    const millis = this.toMillis();
    if (millis < 0 || millis >= 864e5) return null;
    opts = Object.assign(
      {
        suppressMilliseconds: false,
        suppressSeconds: false,
        includePrefix: false,
        format: "extended"
      },
      opts
    );
    const value2 = this.shiftTo("hours", "minutes", "seconds", "milliseconds");
    let fmt = opts.format === "basic" ? "hhmm" : "hh:mm";
    if (!opts.suppressSeconds || value2.seconds !== 0 || value2.milliseconds !== 0) {
      fmt += opts.format === "basic" ? "ss" : ":ss";
      if (!opts.suppressMilliseconds || value2.milliseconds !== 0) {
        fmt += ".SSS";
      }
    }
    let str = value2.toFormat(fmt);
    if (opts.includePrefix) {
      str = "T" + str;
    }
    return str;
  }
  /**
   * Returns an ISO 8601 representation of this Duration appropriate for use in JSON.
   * @return {string}
   */
  toJSON() {
    return this.toISO();
  }
  /**
   * Returns an ISO 8601 representation of this Duration appropriate for use in debugging.
   * @return {string}
   */
  toString() {
    return this.toISO();
  }
  /**
   * Returns an milliseconds value of this Duration.
   * @return {number}
   */
  toMillis() {
    return this.as("milliseconds");
  }
  /**
   * Returns an milliseconds value of this Duration. Alias of {@link toMillis}
   * @return {number}
   */
  valueOf() {
    return this.toMillis();
  }
  /**
   * Make this Duration longer by the specified amount. Return a newly-constructed Duration.
   * @param {Duration|Object|number} duration - The amount to add. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()
   * @return {Duration}
   */
  plus(duration) {
    if (!this.isValid) return this;
    const dur = friendlyDuration(duration), result = {};
    for (const k8 of orderedUnits) {
      if (hasOwnProperty(dur.values, k8) || hasOwnProperty(this.values, k8)) {
        result[k8] = dur.get(k8) + this.get(k8);
      }
    }
    return clone(this, { values: result }, true);
  }
  /**
   * Make this Duration shorter by the specified amount. Return a newly-constructed Duration.
   * @param {Duration|Object|number} duration - The amount to subtract. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()
   * @return {Duration}
   */
  minus(duration) {
    if (!this.isValid) return this;
    const dur = friendlyDuration(duration);
    return this.plus(dur.negate());
  }
  /**
   * Scale this Duration by the specified amount. Return a newly-constructed Duration.
   * @param {function} fn - The function to apply to each unit. Arity is 1 or 2: the value of the unit and, optionally, the unit name. Must return a number.
   * @example Duration.fromObject({ hours: 1, minutes: 30 }).mapUnit(x => x * 2) //=> { hours: 2, minutes: 60 }
   * @example Duration.fromObject({ hours: 1, minutes: 30 }).mapUnit((x, u) => u === "hour" ? x * 2 : x) //=> { hours: 2, minutes: 30 }
   * @return {Duration}
   */
  mapUnits(fn) {
    if (!this.isValid) return this;
    const result = {};
    for (const k8 of Object.keys(this.values)) {
      result[k8] = asNumber(fn(this.values[k8], k8));
    }
    return clone(this, { values: result }, true);
  }
  /**
   * Get the value of unit.
   * @param {string} unit - a unit such as 'minute' or 'day'
   * @example Duration.fromObject({years: 2, days: 3}).get('years') //=> 2
   * @example Duration.fromObject({years: 2, days: 3}).get('months') //=> 0
   * @example Duration.fromObject({years: 2, days: 3}).get('days') //=> 3
   * @return {number}
   */
  get(unit) {
    return this[_Duration.normalizeUnit(unit)];
  }
  /**
   * "Set" the values of specified units. Return a newly-constructed Duration.
   * @param {Object} values - a mapping of units to numbers
   * @example dur.set({ years: 2017 })
   * @example dur.set({ hours: 8, minutes: 30 })
   * @return {Duration}
   */
  set(values) {
    if (!this.isValid) return this;
    const mixed = Object.assign(this.values, normalizeObject(values, _Duration.normalizeUnit, []));
    return clone(this, { values: mixed });
  }
  /**
   * "Set" the locale and/or numberingSystem.  Returns a newly-constructed Duration.
   * @example dur.reconfigure({ locale: 'en-GB' })
   * @return {Duration}
   */
  reconfigure({ locale, numberingSystem, conversionAccuracy } = {}) {
    const loc = this.loc.clone({ locale, numberingSystem }), opts = { loc };
    if (conversionAccuracy) {
      opts.conversionAccuracy = conversionAccuracy;
    }
    return clone(this, opts);
  }
  /**
   * Return the length of the duration in the specified unit.
   * @param {string} unit - a unit such as 'minutes' or 'days'
   * @example Duration.fromObject({years: 1}).as('days') //=> 365
   * @example Duration.fromObject({years: 1}).as('months') //=> 12
   * @example Duration.fromObject({hours: 60}).as('days') //=> 2.5
   * @return {number}
   */
  as(unit) {
    return this.isValid ? this.shiftTo(unit).get(unit) : NaN;
  }
  /**
   * Reduce this Duration to its canonical representation in its current units.
   * @example Duration.fromObject({ years: 2, days: 5000 }).normalize().toObject() //=> { years: 15, days: 255 }
   * @example Duration.fromObject({ hours: 12, minutes: -45 }).normalize().toObject() //=> { hours: 11, minutes: 15 }
   * @return {Duration}
   */
  normalize() {
    if (!this.isValid) return this;
    const vals = this.toObject();
    normalizeValues(this.matrix, vals);
    return clone(this, { values: vals }, true);
  }
  /**
   * Convert this Duration into its representation in a different set of units.
   * @example Duration.fromObject({ hours: 1, seconds: 30 }).shiftTo('minutes', 'milliseconds').toObject() //=> { minutes: 60, milliseconds: 30000 }
   * @return {Duration}
   */
  shiftTo(...units) {
    if (!this.isValid) return this;
    if (units.length === 0) {
      return this;
    }
    units = units.map((u9) => _Duration.normalizeUnit(u9));
    const built = {}, accumulated = {}, vals = this.toObject();
    let lastUnit;
    for (const k8 of orderedUnits) {
      if (units.indexOf(k8) >= 0) {
        lastUnit = k8;
        let own = 0;
        for (const ak in accumulated) {
          own += this.matrix[ak][k8] * accumulated[ak];
          accumulated[ak] = 0;
        }
        if (isNumber(vals[k8])) {
          own += vals[k8];
        }
        const i11 = Math.trunc(own);
        built[k8] = i11;
        accumulated[k8] = own - i11;
        for (const down in vals) {
          if (orderedUnits.indexOf(down) > orderedUnits.indexOf(k8)) {
            convert(this.matrix, vals, down, built, k8);
          }
        }
      } else if (isNumber(vals[k8])) {
        accumulated[k8] = vals[k8];
      }
    }
    for (const key in accumulated) {
      if (accumulated[key] !== 0) {
        built[lastUnit] += key === lastUnit ? accumulated[key] : accumulated[key] / this.matrix[lastUnit][key];
      }
    }
    return clone(this, { values: built }, true).normalize();
  }
  /**
   * Return the negative of this Duration.
   * @example Duration.fromObject({ hours: 1, seconds: 30 }).negate().toObject() //=> { hours: -1, seconds: -30 }
   * @return {Duration}
   */
  negate() {
    if (!this.isValid) return this;
    const negated = {};
    for (const k8 of Object.keys(this.values)) {
      negated[k8] = -this.values[k8];
    }
    return clone(this, { values: negated }, true);
  }
  /**
   * Get the years.
   * @type {number}
   */
  get years() {
    return this.isValid ? this.values.years || 0 : NaN;
  }
  /**
   * Get the quarters.
   * @type {number}
   */
  get quarters() {
    return this.isValid ? this.values.quarters || 0 : NaN;
  }
  /**
   * Get the months.
   * @type {number}
   */
  get months() {
    return this.isValid ? this.values.months || 0 : NaN;
  }
  /**
   * Get the weeks
   * @type {number}
   */
  get weeks() {
    return this.isValid ? this.values.weeks || 0 : NaN;
  }
  /**
   * Get the days.
   * @type {number}
   */
  get days() {
    return this.isValid ? this.values.days || 0 : NaN;
  }
  /**
   * Get the hours.
   * @type {number}
   */
  get hours() {
    return this.isValid ? this.values.hours || 0 : NaN;
  }
  /**
   * Get the minutes.
   * @type {number}
   */
  get minutes() {
    return this.isValid ? this.values.minutes || 0 : NaN;
  }
  /**
   * Get the seconds.
   * @return {number}
   */
  get seconds() {
    return this.isValid ? this.values.seconds || 0 : NaN;
  }
  /**
   * Get the milliseconds.
   * @return {number}
   */
  get milliseconds() {
    return this.isValid ? this.values.milliseconds || 0 : NaN;
  }
  /**
   * Returns whether the Duration is invalid. Invalid durations are returned by diff operations
   * on invalid DateTimes or Intervals.
   * @return {boolean}
   */
  get isValid() {
    return this.invalid === null;
  }
  /**
   * Returns an error code if this Duration became invalid, or null if the Duration is valid
   * @return {string}
   */
  get invalidReason() {
    return this.invalid ? this.invalid.reason : null;
  }
  /**
   * Returns an explanation of why this Duration became invalid, or null if the Duration is valid
   * @type {string}
   */
  get invalidExplanation() {
    return this.invalid ? this.invalid.explanation : null;
  }
  /**
   * Equality check
   * Two Durations are equal iff they have the same units and the same values for each unit.
   * @param {Duration} other
   * @return {boolean}
   */
  equals(other) {
    if (!this.isValid || !other.isValid) {
      return false;
    }
    if (!this.loc.equals(other.loc)) {
      return false;
    }
    function eq(v1, v22) {
      if (v1 === void 0 || v1 === 0) return v22 === void 0 || v22 === 0;
      return v1 === v22;
    }
    for (const u9 of orderedUnits) {
      if (!eq(this.values[u9], other.values[u9])) {
        return false;
      }
    }
    return true;
  }
};
function friendlyDuration(durationish) {
  if (isNumber(durationish)) {
    return Duration.fromMillis(durationish);
  } else if (Duration.isDuration(durationish)) {
    return durationish;
  } else if (typeof durationish === "object") {
    return Duration.fromObject(durationish);
  } else {
    throw new InvalidArgumentError(
      `Unknown duration argument ${durationish} of type ${typeof durationish}`
    );
  }
}

// node_modules/luxon/src/interval.js
var INVALID2 = "Invalid Interval";
function validateStartEnd(start, end) {
  if (!start || !start.isValid) {
    return Interval.invalid("missing or invalid start");
  } else if (!end || !end.isValid) {
    return Interval.invalid("missing or invalid end");
  } else if (end < start) {
    return Interval.invalid(
      "end before start",
      `The end of an interval must be after its start, but you had start=${start.toISO()} and end=${end.toISO()}`
    );
  } else {
    return null;
  }
}
var Interval = class _Interval {
  /**
   * @private
   */
  constructor(config) {
    this.s = config.start;
    this.e = config.end;
    this.invalid = config.invalid || null;
    this.isLuxonInterval = true;
  }
  /**
   * Create an invalid Interval.
   * @param {string} reason - simple string of why this Interval is invalid. Should not contain parameters or anything else data-dependent
   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information
   * @return {Interval}
   */
  static invalid(reason, explanation = null) {
    if (!reason) {
      throw new InvalidArgumentError("need to specify a reason the Interval is invalid");
    }
    const invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);
    if (Settings.throwOnInvalid) {
      throw new InvalidIntervalError(invalid);
    } else {
      return new _Interval({ invalid });
    }
  }
  /**
   * Create an Interval from a start DateTime and an end DateTime. Inclusive of the start but not the end.
   * @param {DateTime|Date|Object} start
   * @param {DateTime|Date|Object} end
   * @return {Interval}
   */
  static fromDateTimes(start, end) {
    const builtStart = friendlyDateTime(start), builtEnd = friendlyDateTime(end);
    const validateError = validateStartEnd(builtStart, builtEnd);
    if (validateError == null) {
      return new _Interval({
        start: builtStart,
        end: builtEnd
      });
    } else {
      return validateError;
    }
  }
  /**
   * Create an Interval from a start DateTime and a Duration to extend to.
   * @param {DateTime|Date|Object} start
   * @param {Duration|Object|number} duration - the length of the Interval.
   * @return {Interval}
   */
  static after(start, duration) {
    const dur = friendlyDuration(duration), dt4 = friendlyDateTime(start);
    return _Interval.fromDateTimes(dt4, dt4.plus(dur));
  }
  /**
   * Create an Interval from an end DateTime and a Duration to extend backwards to.
   * @param {DateTime|Date|Object} end
   * @param {Duration|Object|number} duration - the length of the Interval.
   * @return {Interval}
   */
  static before(end, duration) {
    const dur = friendlyDuration(duration), dt4 = friendlyDateTime(end);
    return _Interval.fromDateTimes(dt4.minus(dur), dt4);
  }
  /**
   * Create an Interval from an ISO 8601 string.
   * Accepts `<start>/<end>`, `<start>/<duration>`, and `<duration>/<end>` formats.
   * @param {string} text - the ISO string to parse
   * @param {Object} [opts] - options to pass {@link DateTime.fromISO} and optionally {@link Duration.fromISO}
   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals
   * @return {Interval}
   */
  static fromISO(text, opts) {
    const [s15, e9] = (text || "").split("/", 2);
    if (s15 && e9) {
      let start, startIsValid;
      try {
        start = DateTime.fromISO(s15, opts);
        startIsValid = start.isValid;
      } catch (e10) {
        startIsValid = false;
      }
      let end, endIsValid;
      try {
        end = DateTime.fromISO(e9, opts);
        endIsValid = end.isValid;
      } catch (e10) {
        endIsValid = false;
      }
      if (startIsValid && endIsValid) {
        return _Interval.fromDateTimes(start, end);
      }
      if (startIsValid) {
        const dur = Duration.fromISO(e9, opts);
        if (dur.isValid) {
          return _Interval.after(start, dur);
        }
      } else if (endIsValid) {
        const dur = Duration.fromISO(s15, opts);
        if (dur.isValid) {
          return _Interval.before(end, dur);
        }
      }
    }
    return _Interval.invalid("unparsable", `the input "${text}" can't be parsed as ISO 8601`);
  }
  /**
   * Check if an object is an Interval. Works across context boundaries
   * @param {object} o
   * @return {boolean}
   */
  static isInterval(o12) {
    return o12 && o12.isLuxonInterval || false;
  }
  /**
   * Returns the start of the Interval
   * @type {DateTime}
   */
  get start() {
    return this.isValid ? this.s : null;
  }
  /**
   * Returns the end of the Interval
   * @type {DateTime}
   */
  get end() {
    return this.isValid ? this.e : null;
  }
  /**
   * Returns whether this Interval's end is at least its start, meaning that the Interval isn't 'backwards'.
   * @type {boolean}
   */
  get isValid() {
    return this.invalidReason === null;
  }
  /**
   * Returns an error code if this Interval is invalid, or null if the Interval is valid
   * @type {string}
   */
  get invalidReason() {
    return this.invalid ? this.invalid.reason : null;
  }
  /**
   * Returns an explanation of why this Interval became invalid, or null if the Interval is valid
   * @type {string}
   */
  get invalidExplanation() {
    return this.invalid ? this.invalid.explanation : null;
  }
  /**
   * Returns the length of the Interval in the specified unit.
   * @param {string} unit - the unit (such as 'hours' or 'days') to return the length in.
   * @return {number}
   */
  length(unit = "milliseconds") {
    return this.isValid ? this.toDuration(...[unit]).get(unit) : NaN;
  }
  /**
   * Returns the count of minutes, hours, days, months, or years included in the Interval, even in part.
   * Unlike {@link length} this counts sections of the calendar, not periods of time, e.g. specifying 'day'
   * asks 'what dates are included in this interval?', not 'how many days long is this interval?'
   * @param {string} [unit='milliseconds'] - the unit of time to count.
   * @return {number}
   */
  count(unit = "milliseconds") {
    if (!this.isValid) return NaN;
    const start = this.start.startOf(unit), end = this.end.startOf(unit);
    return Math.floor(end.diff(start, unit).get(unit)) + 1;
  }
  /**
   * Returns whether this Interval's start and end are both in the same unit of time
   * @param {string} unit - the unit of time to check sameness on
   * @return {boolean}
   */
  hasSame(unit) {
    return this.isValid ? this.isEmpty() || this.e.minus(1).hasSame(this.s, unit) : false;
  }
  /**
   * Return whether this Interval has the same start and end DateTimes.
   * @return {boolean}
   */
  isEmpty() {
    return this.s.valueOf() === this.e.valueOf();
  }
  /**
   * Return whether this Interval's start is after the specified DateTime.
   * @param {DateTime} dateTime
   * @return {boolean}
   */
  isAfter(dateTime) {
    if (!this.isValid) return false;
    return this.s > dateTime;
  }
  /**
   * Return whether this Interval's end is before the specified DateTime.
   * @param {DateTime} dateTime
   * @return {boolean}
   */
  isBefore(dateTime) {
    if (!this.isValid) return false;
    return this.e <= dateTime;
  }
  /**
   * Return whether this Interval contains the specified DateTime.
   * @param {DateTime} dateTime
   * @return {boolean}
   */
  contains(dateTime) {
    if (!this.isValid) return false;
    return this.s <= dateTime && this.e > dateTime;
  }
  /**
   * "Sets" the start and/or end dates. Returns a newly-constructed Interval.
   * @param {Object} values - the values to set
   * @param {DateTime} values.start - the starting DateTime
   * @param {DateTime} values.end - the ending DateTime
   * @return {Interval}
   */
  set({ start, end } = {}) {
    if (!this.isValid) return this;
    return _Interval.fromDateTimes(start || this.s, end || this.e);
  }
  /**
   * Split this Interval at each of the specified DateTimes
   * @param {...[DateTime]} dateTimes - the unit of time to count.
   * @return {[Interval]}
   */
  splitAt(...dateTimes) {
    if (!this.isValid) return [];
    const sorted = dateTimes.map(friendlyDateTime).filter((d9) => this.contains(d9)).sort(), results = [];
    let { s: s15 } = this, i11 = 0;
    while (s15 < this.e) {
      const added = sorted[i11] || this.e, next = +added > +this.e ? this.e : added;
      results.push(_Interval.fromDateTimes(s15, next));
      s15 = next;
      i11 += 1;
    }
    return results;
  }
  /**
   * Split this Interval into smaller Intervals, each of the specified length.
   * Left over time is grouped into a smaller interval
   * @param {Duration|Object|number} duration - The length of each resulting interval.
   * @return {[Interval]}
   */
  splitBy(duration) {
    const dur = friendlyDuration(duration);
    if (!this.isValid || !dur.isValid || dur.as("milliseconds") === 0) {
      return [];
    }
    let { s: s15 } = this, idx = 1, next;
    const results = [];
    while (s15 < this.e) {
      const added = this.start.plus(dur.mapUnits((x6) => x6 * idx));
      next = +added > +this.e ? this.e : added;
      results.push(_Interval.fromDateTimes(s15, next));
      s15 = next;
      idx += 1;
    }
    return results;
  }
  /**
   * Split this Interval into the specified number of smaller intervals.
   * @param {number} numberOfParts - The number of Intervals to divide the Interval into.
   * @return {[Interval]}
   */
  divideEqually(numberOfParts) {
    if (!this.isValid) return [];
    return this.splitBy(this.length() / numberOfParts).slice(0, numberOfParts);
  }
  /**
   * Return whether this Interval overlaps with the specified Interval
   * @param {Interval} other
   * @return {boolean}
   */
  overlaps(other) {
    return this.e > other.s && this.s < other.e;
  }
  /**
   * Return whether this Interval's end is adjacent to the specified Interval's start.
   * @param {Interval} other
   * @return {boolean}
   */
  abutsStart(other) {
    if (!this.isValid) return false;
    return +this.e === +other.s;
  }
  /**
   * Return whether this Interval's start is adjacent to the specified Interval's end.
   * @param {Interval} other
   * @return {boolean}
   */
  abutsEnd(other) {
    if (!this.isValid) return false;
    return +other.e === +this.s;
  }
  /**
   * Return whether this Interval engulfs the start and end of the specified Interval.
   * @param {Interval} other
   * @return {boolean}
   */
  engulfs(other) {
    if (!this.isValid) return false;
    return this.s <= other.s && this.e >= other.e;
  }
  /**
   * Return whether this Interval has the same start and end as the specified Interval.
   * @param {Interval} other
   * @return {boolean}
   */
  equals(other) {
    if (!this.isValid || !other.isValid) {
      return false;
    }
    return this.s.equals(other.s) && this.e.equals(other.e);
  }
  /**
   * Return an Interval representing the intersection of this Interval and the specified Interval.
   * Specifically, the resulting Interval has the maximum start time and the minimum end time of the two Intervals.
   * Returns null if the intersection is empty, meaning, the intervals don't intersect.
   * @param {Interval} other
   * @return {Interval}
   */
  intersection(other) {
    if (!this.isValid) return this;
    const s15 = this.s > other.s ? this.s : other.s, e9 = this.e < other.e ? this.e : other.e;
    if (s15 >= e9) {
      return null;
    } else {
      return _Interval.fromDateTimes(s15, e9);
    }
  }
  /**
   * Return an Interval representing the union of this Interval and the specified Interval.
   * Specifically, the resulting Interval has the minimum start time and the maximum end time of the two Intervals.
   * @param {Interval} other
   * @return {Interval}
   */
  union(other) {
    if (!this.isValid) return this;
    const s15 = this.s < other.s ? this.s : other.s, e9 = this.e > other.e ? this.e : other.e;
    return _Interval.fromDateTimes(s15, e9);
  }
  /**
   * Merge an array of Intervals into a equivalent minimal set of Intervals.
   * Combines overlapping and adjacent Intervals.
   * @param {[Interval]} intervals
   * @return {[Interval]}
   */
  static merge(intervals) {
    const [found, final] = intervals.sort((a15, b6) => a15.s - b6.s).reduce(
      ([sofar, current], item) => {
        if (!current) {
          return [sofar, item];
        } else if (current.overlaps(item) || current.abutsStart(item)) {
          return [sofar, current.union(item)];
        } else {
          return [sofar.concat([current]), item];
        }
      },
      [[], null]
    );
    if (final) {
      found.push(final);
    }
    return found;
  }
  /**
   * Return an array of Intervals representing the spans of time that only appear in one of the specified Intervals.
   * @param {[Interval]} intervals
   * @return {[Interval]}
   */
  static xor(intervals) {
    let start = null, currentCount = 0;
    const results = [], ends = intervals.map((i11) => [{ time: i11.s, type: "s" }, { time: i11.e, type: "e" }]), flattened = Array.prototype.concat(...ends), arr = flattened.sort((a15, b6) => a15.time - b6.time);
    for (const i11 of arr) {
      currentCount += i11.type === "s" ? 1 : -1;
      if (currentCount === 1) {
        start = i11.time;
      } else {
        if (start && +start !== +i11.time) {
          results.push(_Interval.fromDateTimes(start, i11.time));
        }
        start = null;
      }
    }
    return _Interval.merge(results);
  }
  /**
   * Return an Interval representing the span of time in this Interval that doesn't overlap with any of the specified Intervals.
   * @param {...Interval} intervals
   * @return {[Interval]}
   */
  difference(...intervals) {
    return _Interval.xor([this].concat(intervals)).map((i11) => this.intersection(i11)).filter((i11) => i11 && !i11.isEmpty());
  }
  /**
   * Returns a string representation of this Interval appropriate for debugging.
   * @return {string}
   */
  toString() {
    if (!this.isValid) return INVALID2;
    return `[${this.s.toISO()} – ${this.e.toISO()})`;
  }
  /**
   * Returns an ISO 8601-compliant string representation of this Interval.
   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals
   * @param {Object} opts - The same options as {@link DateTime.toISO}
   * @return {string}
   */
  toISO(opts) {
    if (!this.isValid) return INVALID2;
    return `${this.s.toISO(opts)}/${this.e.toISO(opts)}`;
  }
  /**
   * Returns an ISO 8601-compliant string representation of date of this Interval.
   * The time components are ignored.
   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals
   * @return {string}
   */
  toISODate() {
    if (!this.isValid) return INVALID2;
    return `${this.s.toISODate()}/${this.e.toISODate()}`;
  }
  /**
   * Returns an ISO 8601-compliant string representation of time of this Interval.
   * The date components are ignored.
   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals
   * @param {Object} opts - The same options as {@link DateTime.toISO}
   * @return {string}
   */
  toISOTime(opts) {
    if (!this.isValid) return INVALID2;
    return `${this.s.toISOTime(opts)}/${this.e.toISOTime(opts)}`;
  }
  /**
   * Returns a string representation of this Interval formatted according to the specified format string.
   * @param {string} dateFormat - the format string. This string formats the start and end time. See {@link DateTime.toFormat} for details.
   * @param {Object} opts - options
   * @param {string} [opts.separator =  ' – '] - a separator to place between the start and end representations
   * @return {string}
   */
  toFormat(dateFormat, { separator = " – " } = {}) {
    if (!this.isValid) return INVALID2;
    return `${this.s.toFormat(dateFormat)}${separator}${this.e.toFormat(dateFormat)}`;
  }
  /**
   * Return a Duration representing the time spanned by this interval.
   * @param {string|string[]} [unit=['milliseconds']] - the unit or units (such as 'hours' or 'days') to include in the duration.
   * @param {Object} opts - options that affect the creation of the Duration
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @example Interval.fromDateTimes(dt1, dt2).toDuration().toObject() //=> { milliseconds: 88489257 }
   * @example Interval.fromDateTimes(dt1, dt2).toDuration('days').toObject() //=> { days: 1.0241812152777778 }
   * @example Interval.fromDateTimes(dt1, dt2).toDuration(['hours', 'minutes']).toObject() //=> { hours: 24, minutes: 34.82095 }
   * @example Interval.fromDateTimes(dt1, dt2).toDuration(['hours', 'minutes', 'seconds']).toObject() //=> { hours: 24, minutes: 34, seconds: 49.257 }
   * @example Interval.fromDateTimes(dt1, dt2).toDuration('seconds').toObject() //=> { seconds: 88489.257 }
   * @return {Duration}
   */
  toDuration(unit, opts) {
    if (!this.isValid) {
      return Duration.invalid(this.invalidReason);
    }
    return this.e.diff(this.s, unit, opts);
  }
  /**
   * Run mapFn on the interval start and end, returning a new Interval from the resulting DateTimes
   * @param {function} mapFn
   * @return {Interval}
   * @example Interval.fromDateTimes(dt1, dt2).mapEndpoints(endpoint => endpoint.toUTC())
   * @example Interval.fromDateTimes(dt1, dt2).mapEndpoints(endpoint => endpoint.plus({ hours: 2 }))
   */
  mapEndpoints(mapFn) {
    return _Interval.fromDateTimes(mapFn(this.s), mapFn(this.e));
  }
};

// node_modules/luxon/src/info.js
var Info = class {
  /**
   * Return whether the specified zone contains a DST.
   * @param {string|Zone} [zone='local'] - Zone to check. Defaults to the environment's local zone.
   * @return {boolean}
   */
  static hasDST(zone = Settings.defaultZone) {
    const proto = DateTime.now().setZone(zone).set({ month: 12 });
    return !zone.universal && proto.offset !== proto.set({ month: 6 }).offset;
  }
  /**
   * Return whether the specified zone is a valid IANA specifier.
   * @param {string} zone - Zone to check
   * @return {boolean}
   */
  static isValidIANAZone(zone) {
    return IANAZone.isValidSpecifier(zone) && IANAZone.isValidZone(zone);
  }
  /**
   * Converts the input into a {@link Zone} instance.
   *
   * * If `input` is already a Zone instance, it is returned unchanged.
   * * If `input` is a string containing a valid time zone name, a Zone instance
   *   with that name is returned.
   * * If `input` is a string that doesn't refer to a known time zone, a Zone
   *   instance with {@link Zone.isValid} == false is returned.
   * * If `input is a number, a Zone instance with the specified fixed offset
   *   in minutes is returned.
   * * If `input` is `null` or `undefined`, the default zone is returned.
   * @param {string|Zone|number} [input] - the value to be converted
   * @return {Zone}
   */
  static normalizeZone(input) {
    return normalizeZone(input, Settings.defaultZone);
  }
  /**
   * Return an array of standalone month names.
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat
   * @param {string} [length='long'] - the length of the month representation, such as "numeric", "2-digit", "narrow", "short", "long"
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @param {string} [opts.numberingSystem=null] - the numbering system
   * @param {string} [opts.locObj=null] - an existing locale object to use
   * @param {string} [opts.outputCalendar='gregory'] - the calendar
   * @example Info.months()[0] //=> 'January'
   * @example Info.months('short')[0] //=> 'Jan'
   * @example Info.months('numeric')[0] //=> '1'
   * @example Info.months('short', { locale: 'fr-CA' } )[0] //=> 'janv.'
   * @example Info.months('numeric', { locale: 'ar' })[0] //=> '١'
   * @example Info.months('long', { outputCalendar: 'islamic' })[0] //=> 'Rabiʻ I'
   * @return {[string]}
   */
  static months(length2 = "long", { locale = null, numberingSystem = null, locObj = null, outputCalendar = "gregory" } = {}) {
    return (locObj || Locale.create(locale, numberingSystem, outputCalendar)).months(length2);
  }
  /**
   * Return an array of format month names.
   * Format months differ from standalone months in that they're meant to appear next to the day of the month. In some languages, that
   * changes the string.
   * See {@link months}
   * @param {string} [length='long'] - the length of the month representation, such as "numeric", "2-digit", "narrow", "short", "long"
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @param {string} [opts.numberingSystem=null] - the numbering system
   * @param {string} [opts.locObj=null] - an existing locale object to use
   * @param {string} [opts.outputCalendar='gregory'] - the calendar
   * @return {[string]}
   */
  static monthsFormat(length2 = "long", { locale = null, numberingSystem = null, locObj = null, outputCalendar = "gregory" } = {}) {
    return (locObj || Locale.create(locale, numberingSystem, outputCalendar)).months(length2, true);
  }
  /**
   * Return an array of standalone week names.
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat
   * @param {string} [length='long'] - the length of the weekday representation, such as "narrow", "short", "long".
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @param {string} [opts.numberingSystem=null] - the numbering system
   * @param {string} [opts.locObj=null] - an existing locale object to use
   * @example Info.weekdays()[0] //=> 'Monday'
   * @example Info.weekdays('short')[0] //=> 'Mon'
   * @example Info.weekdays('short', { locale: 'fr-CA' })[0] //=> 'lun.'
   * @example Info.weekdays('short', { locale: 'ar' })[0] //=> 'الاثنين'
   * @return {[string]}
   */
  static weekdays(length2 = "long", { locale = null, numberingSystem = null, locObj = null } = {}) {
    return (locObj || Locale.create(locale, numberingSystem, null)).weekdays(length2);
  }
  /**
   * Return an array of format week names.
   * Format weekdays differ from standalone weekdays in that they're meant to appear next to more date information. In some languages, that
   * changes the string.
   * See {@link weekdays}
   * @param {string} [length='long'] - the length of the weekday representation, such as "narrow", "short", "long".
   * @param {Object} opts - options
   * @param {string} [opts.locale=null] - the locale code
   * @param {string} [opts.numberingSystem=null] - the numbering system
   * @param {string} [opts.locObj=null] - an existing locale object to use
   * @return {[string]}
   */
  static weekdaysFormat(length2 = "long", { locale = null, numberingSystem = null, locObj = null } = {}) {
    return (locObj || Locale.create(locale, numberingSystem, null)).weekdays(length2, true);
  }
  /**
   * Return an array of meridiems.
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @example Info.meridiems() //=> [ 'AM', 'PM' ]
   * @example Info.meridiems({ locale: 'my' }) //=> [ 'နံနက်', 'ညနေ' ]
   * @return {[string]}
   */
  static meridiems({ locale = null } = {}) {
    return Locale.create(locale).meridiems();
  }
  /**
   * Return an array of eras, such as ['BC', 'AD']. The locale can be specified, but the calendar system is always Gregorian.
   * @param {string} [length='short'] - the length of the era representation, such as "short" or "long".
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @example Info.eras() //=> [ 'BC', 'AD' ]
   * @example Info.eras('long') //=> [ 'Before Christ', 'Anno Domini' ]
   * @example Info.eras('long', { locale: 'fr' }) //=> [ 'avant Jésus-Christ', 'après Jésus-Christ' ]
   * @return {[string]}
   */
  static eras(length2 = "short", { locale = null } = {}) {
    return Locale.create(locale, null, "gregory").eras(length2);
  }
  /**
   * Return the set of available features in this environment.
   * Some features of Luxon are not available in all environments. For example, on older browsers, timezone support is not available. Use this function to figure out if that's the case.
   * Keys:
   * * `zones`: whether this environment supports IANA timezones
   * * `intlTokens`: whether this environment supports internationalized token-based formatting/parsing
   * * `intl`: whether this environment supports general internationalization
   * * `relative`: whether this environment supports relative time formatting
   * @example Info.features() //=> { intl: true, intlTokens: false, zones: true, relative: false }
   * @return {Object}
   */
  static features() {
    let intl = false, intlTokens = false, zones = false, relative = false;
    if (hasIntl()) {
      intl = true;
      intlTokens = hasFormatToParts();
      relative = hasRelative();
      try {
        zones = new Intl.DateTimeFormat("en", { timeZone: "America/New_York" }).resolvedOptions().timeZone === "America/New_York";
      } catch (e9) {
        zones = false;
      }
    }
    return { intl, intlTokens, zones, relative };
  }
};

// node_modules/luxon/src/impl/diff.js
function dayDiff(earlier, later) {
  const utcDayStart = (dt4) => dt4.toUTC(0, { keepLocalTime: true }).startOf("day").valueOf(), ms2 = utcDayStart(later) - utcDayStart(earlier);
  return Math.floor(Duration.fromMillis(ms2).as("days"));
}
function highOrderDiffs(cursor, later, units) {
  const differs = [
    ["years", (a15, b6) => b6.year - a15.year],
    ["quarters", (a15, b6) => b6.quarter - a15.quarter],
    ["months", (a15, b6) => b6.month - a15.month + (b6.year - a15.year) * 12],
    [
      "weeks",
      (a15, b6) => {
        const days = dayDiff(a15, b6);
        return (days - days % 7) / 7;
      }
    ],
    ["days", dayDiff]
  ];
  const results = {};
  let lowestOrder, highWater;
  for (const [unit, differ] of differs) {
    if (units.indexOf(unit) >= 0) {
      lowestOrder = unit;
      let delta = differ(cursor, later);
      highWater = cursor.plus({ [unit]: delta });
      if (highWater > later) {
        cursor = cursor.plus({ [unit]: delta - 1 });
        delta -= 1;
      } else {
        cursor = highWater;
      }
      results[unit] = delta;
    }
  }
  return [cursor, results, highWater, lowestOrder];
}
function diff_default(earlier, later, units, opts) {
  let [cursor, results, highWater, lowestOrder] = highOrderDiffs(earlier, later, units);
  const remainingMillis = later - cursor;
  const lowerOrderUnits = units.filter(
    (u9) => ["hours", "minutes", "seconds", "milliseconds"].indexOf(u9) >= 0
  );
  if (lowerOrderUnits.length === 0) {
    if (highWater < later) {
      highWater = cursor.plus({ [lowestOrder]: 1 });
    }
    if (highWater !== cursor) {
      results[lowestOrder] = (results[lowestOrder] || 0) + remainingMillis / (highWater - cursor);
    }
  }
  const duration = Duration.fromObject(Object.assign(results, opts));
  if (lowerOrderUnits.length > 0) {
    return Duration.fromMillis(remainingMillis, opts).shiftTo(...lowerOrderUnits).plus(duration);
  } else {
    return duration;
  }
}

// node_modules/luxon/src/impl/digits.js
var numberingSystems = {
  arab: "[٠-٩]",
  arabext: "[۰-۹]",
  bali: "[᭐-᭙]",
  beng: "[০-৯]",
  deva: "[०-९]",
  fullwide: "[０-９]",
  gujr: "[૦-૯]",
  hanidec: "[〇|一|二|三|四|五|六|七|八|九]",
  khmr: "[០-៩]",
  knda: "[೦-೯]",
  laoo: "[໐-໙]",
  limb: "[᥆-᥏]",
  mlym: "[൦-൯]",
  mong: "[᠐-᠙]",
  mymr: "[၀-၉]",
  orya: "[୦-୯]",
  tamldec: "[௦-௯]",
  telu: "[౦-౯]",
  thai: "[๐-๙]",
  tibt: "[༠-༩]",
  latn: "\\d"
};
var numberingSystemsUTF16 = {
  arab: [1632, 1641],
  arabext: [1776, 1785],
  bali: [6992, 7001],
  beng: [2534, 2543],
  deva: [2406, 2415],
  fullwide: [65296, 65303],
  gujr: [2790, 2799],
  khmr: [6112, 6121],
  knda: [3302, 3311],
  laoo: [3792, 3801],
  limb: [6470, 6479],
  mlym: [3430, 3439],
  mong: [6160, 6169],
  mymr: [4160, 4169],
  orya: [2918, 2927],
  tamldec: [3046, 3055],
  telu: [3174, 3183],
  thai: [3664, 3673],
  tibt: [3872, 3881]
};
var hanidecChars = numberingSystems.hanidec.replace(/[\[|\]]/g, "").split("");
function parseDigits(str) {
  let value2 = parseInt(str, 10);
  if (isNaN(value2)) {
    value2 = "";
    for (let i11 = 0; i11 < str.length; i11++) {
      const code = str.charCodeAt(i11);
      if (str[i11].search(numberingSystems.hanidec) !== -1) {
        value2 += hanidecChars.indexOf(str[i11]);
      } else {
        for (const key in numberingSystemsUTF16) {
          const [min, max] = numberingSystemsUTF16[key];
          if (code >= min && code <= max) {
            value2 += code - min;
          }
        }
      }
    }
    return parseInt(value2, 10);
  } else {
    return value2;
  }
}
function digitRegex({ numberingSystem }, append = "") {
  return new RegExp(`${numberingSystems[numberingSystem || "latn"]}${append}`);
}

// node_modules/luxon/src/impl/tokenParser.js
var MISSING_FTP = "missing Intl.DateTimeFormat.formatToParts support";
function intUnit(regex, post = (i11) => i11) {
  return { regex, deser: ([s15]) => post(parseDigits(s15)) };
}
var NBSP = String.fromCharCode(160);
var spaceOrNBSP = `( |${NBSP})`;
var spaceOrNBSPRegExp = new RegExp(spaceOrNBSP, "g");
function fixListRegex(s15) {
  return s15.replace(/\./g, "\\.?").replace(spaceOrNBSPRegExp, spaceOrNBSP);
}
function stripInsensitivities(s15) {
  return s15.replace(/\./g, "").replace(spaceOrNBSPRegExp, " ").toLowerCase();
}
function oneOf(strings, startIndex) {
  if (strings === null) {
    return null;
  } else {
    return {
      regex: RegExp(strings.map(fixListRegex).join("|")),
      deser: ([s15]) => strings.findIndex((i11) => stripInsensitivities(s15) === stripInsensitivities(i11)) + startIndex
    };
  }
}
function offset(regex, groups) {
  return { regex, deser: ([, h8, m13]) => signedOffset(h8, m13), groups };
}
function simple(regex) {
  return { regex, deser: ([s15]) => s15 };
}
function escapeToken(value2) {
  return value2.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
}
function unitForToken(token, loc) {
  const one = digitRegex(loc), two = digitRegex(loc, "{2}"), three = digitRegex(loc, "{3}"), four = digitRegex(loc, "{4}"), six = digitRegex(loc, "{6}"), oneOrTwo = digitRegex(loc, "{1,2}"), oneToThree = digitRegex(loc, "{1,3}"), oneToSix = digitRegex(loc, "{1,6}"), oneToNine = digitRegex(loc, "{1,9}"), twoToFour = digitRegex(loc, "{2,4}"), fourToSix = digitRegex(loc, "{4,6}"), literal = (t2) => ({ regex: RegExp(escapeToken(t2.val)), deser: ([s15]) => s15, literal: true }), unitate = (t2) => {
    if (token.literal) {
      return literal(t2);
    }
    switch (t2.val) {
      case "G":
        return oneOf(loc.eras("short", false), 0);
      case "GG":
        return oneOf(loc.eras("long", false), 0);
      case "y":
        return intUnit(oneToSix);
      case "yy":
        return intUnit(twoToFour, untruncateYear);
      case "yyyy":
        return intUnit(four);
      case "yyyyy":
        return intUnit(fourToSix);
      case "yyyyyy":
        return intUnit(six);
      case "M":
        return intUnit(oneOrTwo);
      case "MM":
        return intUnit(two);
      case "MMM":
        return oneOf(loc.months("short", true, false), 1);
      case "MMMM":
        return oneOf(loc.months("long", true, false), 1);
      case "L":
        return intUnit(oneOrTwo);
      case "LL":
        return intUnit(two);
      case "LLL":
        return oneOf(loc.months("short", false, false), 1);
      case "LLLL":
        return oneOf(loc.months("long", false, false), 1);
      case "d":
        return intUnit(oneOrTwo);
      case "dd":
        return intUnit(two);
      case "o":
        return intUnit(oneToThree);
      case "ooo":
        return intUnit(three);
      case "HH":
        return intUnit(two);
      case "H":
        return intUnit(oneOrTwo);
      case "hh":
        return intUnit(two);
      case "h":
        return intUnit(oneOrTwo);
      case "mm":
        return intUnit(two);
      case "m":
        return intUnit(oneOrTwo);
      case "q":
        return intUnit(oneOrTwo);
      case "qq":
        return intUnit(two);
      case "s":
        return intUnit(oneOrTwo);
      case "ss":
        return intUnit(two);
      case "S":
        return intUnit(oneToThree);
      case "SSS":
        return intUnit(three);
      case "u":
        return simple(oneToNine);
      case "a":
        return oneOf(loc.meridiems(), 0);
      case "kkkk":
        return intUnit(four);
      case "kk":
        return intUnit(twoToFour, untruncateYear);
      case "W":
        return intUnit(oneOrTwo);
      case "WW":
        return intUnit(two);
      case "E":
      case "c":
        return intUnit(one);
      case "EEE":
        return oneOf(loc.weekdays("short", false, false), 1);
      case "EEEE":
        return oneOf(loc.weekdays("long", false, false), 1);
      case "ccc":
        return oneOf(loc.weekdays("short", true, false), 1);
      case "cccc":
        return oneOf(loc.weekdays("long", true, false), 1);
      case "Z":
      case "ZZ":
        return offset(new RegExp(`([+-]${oneOrTwo.source})(?::(${two.source}))?`), 2);
      case "ZZZ":
        return offset(new RegExp(`([+-]${oneOrTwo.source})(${two.source})?`), 2);
      case "z":
        return simple(/[a-z_+-/]{1,256}?/i);
      default:
        return literal(t2);
    }
  };
  const unit = unitate(token) || {
    invalidReason: MISSING_FTP
  };
  unit.token = token;
  return unit;
}
var partTypeStyleToTokenVal = {
  year: {
    "2-digit": "yy",
    numeric: "yyyyy"
  },
  month: {
    numeric: "M",
    "2-digit": "MM",
    short: "MMM",
    long: "MMMM"
  },
  day: {
    numeric: "d",
    "2-digit": "dd"
  },
  weekday: {
    short: "EEE",
    long: "EEEE"
  },
  dayperiod: "a",
  dayPeriod: "a",
  hour: {
    numeric: "h",
    "2-digit": "hh"
  },
  minute: {
    numeric: "m",
    "2-digit": "mm"
  },
  second: {
    numeric: "s",
    "2-digit": "ss"
  }
};
function tokenForPart(part, locale, formatOpts) {
  const { type, value: value2 } = part;
  if (type === "literal") {
    return {
      literal: true,
      val: value2
    };
  }
  const style = formatOpts[type];
  let val2 = partTypeStyleToTokenVal[type];
  if (typeof val2 === "object") {
    val2 = val2[style];
  }
  if (val2) {
    return {
      literal: false,
      val: val2
    };
  }
  return void 0;
}
function buildRegex(units) {
  const re3 = units.map((u9) => u9.regex).reduce((f10, r17) => `${f10}(${r17.source})`, "");
  return [`^${re3}$`, units];
}
function match(input, regex, handlers) {
  const matches = input.match(regex);
  if (matches) {
    const all = {};
    let matchIndex = 1;
    for (const i11 in handlers) {
      if (hasOwnProperty(handlers, i11)) {
        const h8 = handlers[i11], groups = h8.groups ? h8.groups + 1 : 1;
        if (!h8.literal && h8.token) {
          all[h8.token.val[0]] = h8.deser(matches.slice(matchIndex, matchIndex + groups));
        }
        matchIndex += groups;
      }
    }
    return [matches, all];
  } else {
    return [matches, {}];
  }
}
function dateTimeFromMatches(matches) {
  const toField = (token) => {
    switch (token) {
      case "S":
        return "millisecond";
      case "s":
        return "second";
      case "m":
        return "minute";
      case "h":
      case "H":
        return "hour";
      case "d":
        return "day";
      case "o":
        return "ordinal";
      case "L":
      case "M":
        return "month";
      case "y":
        return "year";
      case "E":
      case "c":
        return "weekday";
      case "W":
        return "weekNumber";
      case "k":
        return "weekYear";
      case "q":
        return "quarter";
      default:
        return null;
    }
  };
  let zone;
  if (!isUndefined(matches.Z)) {
    zone = new FixedOffsetZone(matches.Z);
  } else if (!isUndefined(matches.z)) {
    zone = IANAZone.create(matches.z);
  } else {
    zone = null;
  }
  if (!isUndefined(matches.q)) {
    matches.M = (matches.q - 1) * 3 + 1;
  }
  if (!isUndefined(matches.h)) {
    if (matches.h < 12 && matches.a === 1) {
      matches.h += 12;
    } else if (matches.h === 12 && matches.a === 0) {
      matches.h = 0;
    }
  }
  if (matches.G === 0 && matches.y) {
    matches.y = -matches.y;
  }
  if (!isUndefined(matches.u)) {
    matches.S = parseMillis(matches.u);
  }
  const vals = Object.keys(matches).reduce((r17, k8) => {
    const f10 = toField(k8);
    if (f10) {
      r17[f10] = matches[k8];
    }
    return r17;
  }, {});
  return [vals, zone];
}
var dummyDateTimeCache = null;
function getDummyDateTime() {
  if (!dummyDateTimeCache) {
    dummyDateTimeCache = DateTime.fromMillis(1555555555555);
  }
  return dummyDateTimeCache;
}
function maybeExpandMacroToken(token, locale) {
  if (token.literal) {
    return token;
  }
  const formatOpts = Formatter.macroTokenToFormatOpts(token.val);
  if (!formatOpts) {
    return token;
  }
  const formatter = Formatter.create(locale, formatOpts);
  const parts2 = formatter.formatDateTimeParts(getDummyDateTime());
  const tokens = parts2.map((p11) => tokenForPart(p11, locale, formatOpts));
  if (tokens.includes(void 0)) {
    return token;
  }
  return tokens;
}
function expandMacroTokens(tokens, locale) {
  return Array.prototype.concat(...tokens.map((t2) => maybeExpandMacroToken(t2, locale)));
}
function explainFromTokens(locale, input, format) {
  const tokens = expandMacroTokens(Formatter.parseFormat(format), locale), units = tokens.map((t2) => unitForToken(t2, locale)), disqualifyingUnit = units.find((t2) => t2.invalidReason);
  if (disqualifyingUnit) {
    return { input, tokens, invalidReason: disqualifyingUnit.invalidReason };
  } else {
    const [regexString, handlers] = buildRegex(units), regex = RegExp(regexString, "i"), [rawMatches, matches] = match(input, regex, handlers), [result, zone] = matches ? dateTimeFromMatches(matches) : [null, null];
    if (hasOwnProperty(matches, "a") && hasOwnProperty(matches, "H")) {
      throw new ConflictingSpecificationError(
        "Can't include meridiem when specifying 24-hour format"
      );
    }
    return { input, tokens, regex, rawMatches, matches, result, zone };
  }
}
function parseFromTokens(locale, input, format) {
  const { result, zone, invalidReason } = explainFromTokens(locale, input, format);
  return [result, zone, invalidReason];
}

// node_modules/luxon/src/impl/conversions.js
var nonLeapLadder = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];
var leapLadder = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];
function unitOutOfRange(unit, value2) {
  return new Invalid(
    "unit out of range",
    `you specified ${value2} (of type ${typeof value2}) as a ${unit}, which is invalid`
  );
}
function dayOfWeek(year, month, day) {
  const js = new Date(Date.UTC(year, month - 1, day)).getUTCDay();
  return js === 0 ? 7 : js;
}
function computeOrdinal(year, month, day) {
  return day + (isLeapYear(year) ? leapLadder : nonLeapLadder)[month - 1];
}
function uncomputeOrdinal(year, ordinal) {
  const table = isLeapYear(year) ? leapLadder : nonLeapLadder, month0 = table.findIndex((i11) => i11 < ordinal), day = ordinal - table[month0];
  return { month: month0 + 1, day };
}
function gregorianToWeek(gregObj) {
  const { year, month, day } = gregObj, ordinal = computeOrdinal(year, month, day), weekday = dayOfWeek(year, month, day);
  let weekNumber = Math.floor((ordinal - weekday + 10) / 7), weekYear;
  if (weekNumber < 1) {
    weekYear = year - 1;
    weekNumber = weeksInWeekYear(weekYear);
  } else if (weekNumber > weeksInWeekYear(year)) {
    weekYear = year + 1;
    weekNumber = 1;
  } else {
    weekYear = year;
  }
  return Object.assign({ weekYear, weekNumber, weekday }, timeObject(gregObj));
}
function weekToGregorian(weekData) {
  const { weekYear, weekNumber, weekday } = weekData, weekdayOfJan4 = dayOfWeek(weekYear, 1, 4), yearInDays = daysInYear(weekYear);
  let ordinal = weekNumber * 7 + weekday - weekdayOfJan4 - 3, year;
  if (ordinal < 1) {
    year = weekYear - 1;
    ordinal += daysInYear(year);
  } else if (ordinal > yearInDays) {
    year = weekYear + 1;
    ordinal -= daysInYear(weekYear);
  } else {
    year = weekYear;
  }
  const { month, day } = uncomputeOrdinal(year, ordinal);
  return Object.assign({ year, month, day }, timeObject(weekData));
}
function gregorianToOrdinal(gregData) {
  const { year, month, day } = gregData, ordinal = computeOrdinal(year, month, day);
  return Object.assign({ year, ordinal }, timeObject(gregData));
}
function ordinalToGregorian(ordinalData) {
  const { year, ordinal } = ordinalData, { month, day } = uncomputeOrdinal(year, ordinal);
  return Object.assign({ year, month, day }, timeObject(ordinalData));
}
function hasInvalidWeekData(obj) {
  const validYear = isInteger(obj.weekYear), validWeek = integerBetween(obj.weekNumber, 1, weeksInWeekYear(obj.weekYear)), validWeekday = integerBetween(obj.weekday, 1, 7);
  if (!validYear) {
    return unitOutOfRange("weekYear", obj.weekYear);
  } else if (!validWeek) {
    return unitOutOfRange("week", obj.week);
  } else if (!validWeekday) {
    return unitOutOfRange("weekday", obj.weekday);
  } else return false;
}
function hasInvalidOrdinalData(obj) {
  const validYear = isInteger(obj.year), validOrdinal = integerBetween(obj.ordinal, 1, daysInYear(obj.year));
  if (!validYear) {
    return unitOutOfRange("year", obj.year);
  } else if (!validOrdinal) {
    return unitOutOfRange("ordinal", obj.ordinal);
  } else return false;
}
function hasInvalidGregorianData(obj) {
  const validYear = isInteger(obj.year), validMonth = integerBetween(obj.month, 1, 12), validDay = integerBetween(obj.day, 1, daysInMonth(obj.year, obj.month));
  if (!validYear) {
    return unitOutOfRange("year", obj.year);
  } else if (!validMonth) {
    return unitOutOfRange("month", obj.month);
  } else if (!validDay) {
    return unitOutOfRange("day", obj.day);
  } else return false;
}
function hasInvalidTimeData(obj) {
  const { hour, minute, second, millisecond } = obj;
  const validHour = integerBetween(hour, 0, 23) || hour === 24 && minute === 0 && second === 0 && millisecond === 0, validMinute = integerBetween(minute, 0, 59), validSecond = integerBetween(second, 0, 59), validMillisecond = integerBetween(millisecond, 0, 999);
  if (!validHour) {
    return unitOutOfRange("hour", hour);
  } else if (!validMinute) {
    return unitOutOfRange("minute", minute);
  } else if (!validSecond) {
    return unitOutOfRange("second", second);
  } else if (!validMillisecond) {
    return unitOutOfRange("millisecond", millisecond);
  } else return false;
}

// node_modules/luxon/src/datetime.js
var INVALID3 = "Invalid DateTime";
var MAX_DATE = 864e13;
function unsupportedZone(zone) {
  return new Invalid("unsupported zone", `the zone "${zone.name}" is not supported`);
}
function possiblyCachedWeekData(dt4) {
  if (dt4.weekData === null) {
    dt4.weekData = gregorianToWeek(dt4.c);
  }
  return dt4.weekData;
}
function clone2(inst, alts) {
  const current = {
    ts: inst.ts,
    zone: inst.zone,
    c: inst.c,
    o: inst.o,
    loc: inst.loc,
    invalid: inst.invalid
  };
  return new DateTime(Object.assign({}, current, alts, { old: current }));
}
function fixOffset(localTS, o12, tz) {
  let utcGuess = localTS - o12 * 60 * 1e3;
  const o22 = tz.offset(utcGuess);
  if (o12 === o22) {
    return [utcGuess, o12];
  }
  utcGuess -= (o22 - o12) * 60 * 1e3;
  const o32 = tz.offset(utcGuess);
  if (o22 === o32) {
    return [utcGuess, o22];
  }
  return [localTS - Math.min(o22, o32) * 60 * 1e3, Math.max(o22, o32)];
}
function tsToObj(ts3, offset2) {
  ts3 += offset2 * 60 * 1e3;
  const d9 = new Date(ts3);
  return {
    year: d9.getUTCFullYear(),
    month: d9.getUTCMonth() + 1,
    day: d9.getUTCDate(),
    hour: d9.getUTCHours(),
    minute: d9.getUTCMinutes(),
    second: d9.getUTCSeconds(),
    millisecond: d9.getUTCMilliseconds()
  };
}
function objToTS(obj, offset2, zone) {
  return fixOffset(objToLocalTS(obj), offset2, zone);
}
function adjustTime(inst, dur) {
  const oPre = inst.o, year = inst.c.year + Math.trunc(dur.years), month = inst.c.month + Math.trunc(dur.months) + Math.trunc(dur.quarters) * 3, c11 = Object.assign({}, inst.c, {
    year,
    month,
    day: Math.min(inst.c.day, daysInMonth(year, month)) + Math.trunc(dur.days) + Math.trunc(dur.weeks) * 7
  }), millisToAdd = Duration.fromObject({
    years: dur.years - Math.trunc(dur.years),
    quarters: dur.quarters - Math.trunc(dur.quarters),
    months: dur.months - Math.trunc(dur.months),
    weeks: dur.weeks - Math.trunc(dur.weeks),
    days: dur.days - Math.trunc(dur.days),
    hours: dur.hours,
    minutes: dur.minutes,
    seconds: dur.seconds,
    milliseconds: dur.milliseconds
  }).as("milliseconds"), localTS = objToLocalTS(c11);
  let [ts3, o12] = fixOffset(localTS, oPre, inst.zone);
  if (millisToAdd !== 0) {
    ts3 += millisToAdd;
    o12 = inst.zone.offset(ts3);
  }
  return { ts: ts3, o: o12 };
}
function parseDataToDateTime(parsed, parsedZone, opts, format, text) {
  const { setZone, zone } = opts;
  if (parsed && Object.keys(parsed).length !== 0) {
    const interpretationZone = parsedZone || zone, inst = DateTime.fromObject(
      Object.assign(parsed, opts, {
        zone: interpretationZone,
        // setZone is a valid option in the calling methods, but not in fromObject
        setZone: void 0
      })
    );
    return setZone ? inst : inst.setZone(zone);
  } else {
    return DateTime.invalid(
      new Invalid("unparsable", `the input "${text}" can't be parsed as ${format}`)
    );
  }
}
function toTechFormat(dt4, format, allowZ = true) {
  return dt4.isValid ? Formatter.create(Locale.create("en-US"), {
    allowZ,
    forceSimple: true
  }).formatDateTimeFromString(dt4, format) : null;
}
function toTechTimeFormat(dt4, {
  suppressSeconds = false,
  suppressMilliseconds = false,
  includeOffset,
  includePrefix = false,
  includeZone = false,
  spaceZone = false,
  format = "extended"
}) {
  let fmt = format === "basic" ? "HHmm" : "HH:mm";
  if (!suppressSeconds || dt4.second !== 0 || dt4.millisecond !== 0) {
    fmt += format === "basic" ? "ss" : ":ss";
    if (!suppressMilliseconds || dt4.millisecond !== 0) {
      fmt += ".SSS";
    }
  }
  if ((includeZone || includeOffset) && spaceZone) {
    fmt += " ";
  }
  if (includeZone) {
    fmt += "z";
  } else if (includeOffset) {
    fmt += format === "basic" ? "ZZZ" : "ZZ";
  }
  let str = toTechFormat(dt4, fmt);
  if (includePrefix) {
    str = "T" + str;
  }
  return str;
}
var defaultUnitValues = {
  month: 1,
  day: 1,
  hour: 0,
  minute: 0,
  second: 0,
  millisecond: 0
};
var defaultWeekUnitValues = {
  weekNumber: 1,
  weekday: 1,
  hour: 0,
  minute: 0,
  second: 0,
  millisecond: 0
};
var defaultOrdinalUnitValues = {
  ordinal: 1,
  hour: 0,
  minute: 0,
  second: 0,
  millisecond: 0
};
var orderedUnits2 = ["year", "month", "day", "hour", "minute", "second", "millisecond"];
var orderedWeekUnits = [
  "weekYear",
  "weekNumber",
  "weekday",
  "hour",
  "minute",
  "second",
  "millisecond"
];
var orderedOrdinalUnits = ["year", "ordinal", "hour", "minute", "second", "millisecond"];
function normalizeUnit(unit) {
  const normalized = {
    year: "year",
    years: "year",
    month: "month",
    months: "month",
    day: "day",
    days: "day",
    hour: "hour",
    hours: "hour",
    minute: "minute",
    minutes: "minute",
    quarter: "quarter",
    quarters: "quarter",
    second: "second",
    seconds: "second",
    millisecond: "millisecond",
    milliseconds: "millisecond",
    weekday: "weekday",
    weekdays: "weekday",
    weeknumber: "weekNumber",
    weeksnumber: "weekNumber",
    weeknumbers: "weekNumber",
    weekyear: "weekYear",
    weekyears: "weekYear",
    ordinal: "ordinal"
  }[unit.toLowerCase()];
  if (!normalized) throw new InvalidUnitError(unit);
  return normalized;
}
function quickDT(obj, zone) {
  for (const u9 of orderedUnits2) {
    if (isUndefined(obj[u9])) {
      obj[u9] = defaultUnitValues[u9];
    }
  }
  const invalid = hasInvalidGregorianData(obj) || hasInvalidTimeData(obj);
  if (invalid) {
    return DateTime.invalid(invalid);
  }
  const tsNow = Settings.now(), offsetProvis = zone.offset(tsNow), [ts3, o12] = objToTS(obj, offsetProvis, zone);
  return new DateTime({
    ts: ts3,
    zone,
    o: o12
  });
}
function diffRelative(start, end, opts) {
  const round = isUndefined(opts.round) ? true : opts.round, format = (c11, unit) => {
    c11 = roundTo(c11, round || opts.calendary ? 0 : 2, true);
    const formatter = end.loc.clone(opts).relFormatter(opts);
    return formatter.format(c11, unit);
  }, differ = (unit) => {
    if (opts.calendary) {
      if (!end.hasSame(start, unit)) {
        return end.startOf(unit).diff(start.startOf(unit), unit).get(unit);
      } else return 0;
    } else {
      return end.diff(start, unit).get(unit);
    }
  };
  if (opts.unit) {
    return format(differ(opts.unit), opts.unit);
  }
  for (const unit of opts.units) {
    const count = differ(unit);
    if (Math.abs(count) >= 1) {
      return format(count, unit);
    }
  }
  return format(start > end ? -0 : 0, opts.units[opts.units.length - 1]);
}
var DateTime = class _DateTime {
  /**
   * @access private
   */
  constructor(config) {
    const zone = config.zone || Settings.defaultZone;
    let invalid = config.invalid || (Number.isNaN(config.ts) ? new Invalid("invalid input") : null) || (!zone.isValid ? unsupportedZone(zone) : null);
    this.ts = isUndefined(config.ts) ? Settings.now() : config.ts;
    let c11 = null, o12 = null;
    if (!invalid) {
      const unchanged = config.old && config.old.ts === this.ts && config.old.zone.equals(zone);
      if (unchanged) {
        [c11, o12] = [config.old.c, config.old.o];
      } else {
        const ot4 = zone.offset(this.ts);
        c11 = tsToObj(this.ts, ot4);
        invalid = Number.isNaN(c11.year) ? new Invalid("invalid input") : null;
        c11 = invalid ? null : c11;
        o12 = invalid ? null : ot4;
      }
    }
    this._zone = zone;
    this.loc = config.loc || Locale.create();
    this.invalid = invalid;
    this.weekData = null;
    this.c = c11;
    this.o = o12;
    this.isLuxonDateTime = true;
  }
  // CONSTRUCT
  /**
   * Create a DateTime for the current instant, in the system's time zone.
   *
   * Use Settings to override these default values if needed.
   * @example DateTime.now().toISO() //~> now in the ISO format
   * @return {DateTime}
   */
  static now() {
    return new _DateTime({});
  }
  /**
   * Create a local DateTime
   * @param {number} [year] - The calendar year. If omitted (as in, call `local()` with no arguments), the current time will be used
   * @param {number} [month=1] - The month, 1-indexed
   * @param {number} [day=1] - The day of the month, 1-indexed
   * @param {number} [hour=0] - The hour of the day, in 24-hour time
   * @param {number} [minute=0] - The minute of the hour, meaning a number between 0 and 59
   * @param {number} [second=0] - The second of the minute, meaning a number between 0 and 59
   * @param {number} [millisecond=0] - The millisecond of the second, meaning a number between 0 and 999
   * @example DateTime.local()                            //~> now
   * @example DateTime.local(2017)                        //~> 2017-01-01T00:00:00
   * @example DateTime.local(2017, 3)                     //~> 2017-03-01T00:00:00
   * @example DateTime.local(2017, 3, 12)                 //~> 2017-03-12T00:00:00
   * @example DateTime.local(2017, 3, 12, 5)              //~> 2017-03-12T05:00:00
   * @example DateTime.local(2017, 3, 12, 5, 45)          //~> 2017-03-12T05:45:00
   * @example DateTime.local(2017, 3, 12, 5, 45, 10)      //~> 2017-03-12T05:45:10
   * @example DateTime.local(2017, 3, 12, 5, 45, 10, 765) //~> 2017-03-12T05:45:10.765
   * @return {DateTime}
   */
  static local(year, month, day, hour, minute, second, millisecond) {
    if (isUndefined(year)) {
      return _DateTime.now();
    } else {
      return quickDT(
        {
          year,
          month,
          day,
          hour,
          minute,
          second,
          millisecond
        },
        Settings.defaultZone
      );
    }
  }
  /**
   * Create a DateTime in UTC
   * @param {number} [year] - The calendar year. If omitted (as in, call `utc()` with no arguments), the current time will be used
   * @param {number} [month=1] - The month, 1-indexed
   * @param {number} [day=1] - The day of the month
   * @param {number} [hour=0] - The hour of the day, in 24-hour time
   * @param {number} [minute=0] - The minute of the hour, meaning a number between 0 and 59
   * @param {number} [second=0] - The second of the minute, meaning a number between 0 and 59
   * @param {number} [millisecond=0] - The millisecond of the second, meaning a number between 0 and 999
   * @example DateTime.utc()                            //~> now
   * @example DateTime.utc(2017)                        //~> 2017-01-01T00:00:00Z
   * @example DateTime.utc(2017, 3)                     //~> 2017-03-01T00:00:00Z
   * @example DateTime.utc(2017, 3, 12)                 //~> 2017-03-12T00:00:00Z
   * @example DateTime.utc(2017, 3, 12, 5)              //~> 2017-03-12T05:00:00Z
   * @example DateTime.utc(2017, 3, 12, 5, 45)          //~> 2017-03-12T05:45:00Z
   * @example DateTime.utc(2017, 3, 12, 5, 45, 10)      //~> 2017-03-12T05:45:10Z
   * @example DateTime.utc(2017, 3, 12, 5, 45, 10, 765) //~> 2017-03-12T05:45:10.765Z
   * @return {DateTime}
   */
  static utc(year, month, day, hour, minute, second, millisecond) {
    if (isUndefined(year)) {
      return new _DateTime({
        ts: Settings.now(),
        zone: FixedOffsetZone.utcInstance
      });
    } else {
      return quickDT(
        {
          year,
          month,
          day,
          hour,
          minute,
          second,
          millisecond
        },
        FixedOffsetZone.utcInstance
      );
    }
  }
  /**
   * Create a DateTime from a JavaScript Date object. Uses the default zone.
   * @param {Date} date - a JavaScript Date object
   * @param {Object} options - configuration options for the DateTime
   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into
   * @return {DateTime}
   */
  static fromJSDate(date, options = {}) {
    const ts3 = isDate(date) ? date.valueOf() : NaN;
    if (Number.isNaN(ts3)) {
      return _DateTime.invalid("invalid input");
    }
    const zoneToUse = normalizeZone(options.zone, Settings.defaultZone);
    if (!zoneToUse.isValid) {
      return _DateTime.invalid(unsupportedZone(zoneToUse));
    }
    return new _DateTime({
      ts: ts3,
      zone: zoneToUse,
      loc: Locale.fromObject(options)
    });
  }
  /**
   * Create a DateTime from a number of milliseconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.
   * @param {number} milliseconds - a number of milliseconds since 1970 UTC
   * @param {Object} options - configuration options for the DateTime
   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into
   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance
   * @param {string} options.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} options.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @return {DateTime}
   */
  static fromMillis(milliseconds, options = {}) {
    if (!isNumber(milliseconds)) {
      throw new InvalidArgumentError(
        `fromMillis requires a numerical input, but received a ${typeof milliseconds} with value ${milliseconds}`
      );
    } else if (milliseconds < -MAX_DATE || milliseconds > MAX_DATE) {
      return _DateTime.invalid("Timestamp out of range");
    } else {
      return new _DateTime({
        ts: milliseconds,
        zone: normalizeZone(options.zone, Settings.defaultZone),
        loc: Locale.fromObject(options)
      });
    }
  }
  /**
   * Create a DateTime from a number of seconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.
   * @param {number} seconds - a number of seconds since 1970 UTC
   * @param {Object} options - configuration options for the DateTime
   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into
   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance
   * @param {string} options.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} options.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @return {DateTime}
   */
  static fromSeconds(seconds, options = {}) {
    if (!isNumber(seconds)) {
      throw new InvalidArgumentError("fromSeconds requires a numerical input");
    } else {
      return new _DateTime({
        ts: seconds * 1e3,
        zone: normalizeZone(options.zone, Settings.defaultZone),
        loc: Locale.fromObject(options)
      });
    }
  }
  /**
   * Create a DateTime from a JavaScript object with keys like 'year' and 'hour' with reasonable defaults.
   * @param {Object} obj - the object to create the DateTime from
   * @param {number} obj.year - a year, such as 1987
   * @param {number} obj.month - a month, 1-12
   * @param {number} obj.day - a day of the month, 1-31, depending on the month
   * @param {number} obj.ordinal - day of the year, 1-365 or 366
   * @param {number} obj.weekYear - an ISO week year
   * @param {number} obj.weekNumber - an ISO week number, between 1 and 52 or 53, depending on the year
   * @param {number} obj.weekday - an ISO weekday, 1-7, where 1 is Monday and 7 is Sunday
   * @param {number} obj.hour - hour of the day, 0-23
   * @param {number} obj.minute - minute of the hour, 0-59
   * @param {number} obj.second - second of the minute, 0-59
   * @param {number} obj.millisecond - millisecond of the second, 0-999
   * @param {string|Zone} [obj.zone='local'] - interpret the numbers in the context of a particular zone. Can take any value taken as the first argument to setZone()
   * @param {string} [obj.locale='system's locale'] - a locale to set on the resulting DateTime instance
   * @param {string} obj.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} obj.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @example DateTime.fromObject({ year: 1982, month: 5, day: 25}).toISODate() //=> '1982-05-25'
   * @example DateTime.fromObject({ year: 1982 }).toISODate() //=> '1982-01-01'
   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }) //~> today at 10:26:06
   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6, zone: 'utc' }),
   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6, zone: 'local' })
   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6, zone: 'America/New_York' })
   * @example DateTime.fromObject({ weekYear: 2016, weekNumber: 2, weekday: 3 }).toISODate() //=> '2016-01-13'
   * @return {DateTime}
   */
  static fromObject(obj) {
    const zoneToUse = normalizeZone(obj.zone, Settings.defaultZone);
    if (!zoneToUse.isValid) {
      return _DateTime.invalid(unsupportedZone(zoneToUse));
    }
    const tsNow = Settings.now(), offsetProvis = zoneToUse.offset(tsNow), normalized = normalizeObject(obj, normalizeUnit, [
      "zone",
      "locale",
      "outputCalendar",
      "numberingSystem"
    ]), containsOrdinal = !isUndefined(normalized.ordinal), containsGregorYear = !isUndefined(normalized.year), containsGregorMD = !isUndefined(normalized.month) || !isUndefined(normalized.day), containsGregor = containsGregorYear || containsGregorMD, definiteWeekDef = normalized.weekYear || normalized.weekNumber, loc = Locale.fromObject(obj);
    if ((containsGregor || containsOrdinal) && definiteWeekDef) {
      throw new ConflictingSpecificationError(
        "Can't mix weekYear/weekNumber units with year/month/day or ordinals"
      );
    }
    if (containsGregorMD && containsOrdinal) {
      throw new ConflictingSpecificationError("Can't mix ordinal dates with month/day");
    }
    const useWeekData = definiteWeekDef || normalized.weekday && !containsGregor;
    let units, defaultValues, objNow = tsToObj(tsNow, offsetProvis);
    if (useWeekData) {
      units = orderedWeekUnits;
      defaultValues = defaultWeekUnitValues;
      objNow = gregorianToWeek(objNow);
    } else if (containsOrdinal) {
      units = orderedOrdinalUnits;
      defaultValues = defaultOrdinalUnitValues;
      objNow = gregorianToOrdinal(objNow);
    } else {
      units = orderedUnits2;
      defaultValues = defaultUnitValues;
    }
    let foundFirst = false;
    for (const u9 of units) {
      const v11 = normalized[u9];
      if (!isUndefined(v11)) {
        foundFirst = true;
      } else if (foundFirst) {
        normalized[u9] = defaultValues[u9];
      } else {
        normalized[u9] = objNow[u9];
      }
    }
    const higherOrderInvalid = useWeekData ? hasInvalidWeekData(normalized) : containsOrdinal ? hasInvalidOrdinalData(normalized) : hasInvalidGregorianData(normalized), invalid = higherOrderInvalid || hasInvalidTimeData(normalized);
    if (invalid) {
      return _DateTime.invalid(invalid);
    }
    const gregorian = useWeekData ? weekToGregorian(normalized) : containsOrdinal ? ordinalToGregorian(normalized) : normalized, [tsFinal, offsetFinal] = objToTS(gregorian, offsetProvis, zoneToUse), inst = new _DateTime({
      ts: tsFinal,
      zone: zoneToUse,
      o: offsetFinal,
      loc
    });
    if (normalized.weekday && containsGregor && obj.weekday !== inst.weekday) {
      return _DateTime.invalid(
        "mismatched weekday",
        `you can't specify both a weekday of ${normalized.weekday} and a date of ${inst.toISO()}`
      );
    }
    return inst;
  }
  /**
   * Create a DateTime from an ISO 8601 string
   * @param {string} text - the ISO string
   * @param {Object} opts - options to affect the creation
   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the time to this zone
   * @param {boolean} [opts.setZone=false] - override the zone with a fixed-offset zone specified in the string itself, if it specifies one
   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance
   * @param {string} [opts.outputCalendar] - the output calendar to set on the resulting DateTime instance
   * @param {string} [opts.numberingSystem] - the numbering system to set on the resulting DateTime instance
   * @example DateTime.fromISO('2016-05-25T09:08:34.123')
   * @example DateTime.fromISO('2016-05-25T09:08:34.123+06:00')
   * @example DateTime.fromISO('2016-05-25T09:08:34.123+06:00', {setZone: true})
   * @example DateTime.fromISO('2016-05-25T09:08:34.123', {zone: 'utc'})
   * @example DateTime.fromISO('2016-W05-4')
   * @return {DateTime}
   */
  static fromISO(text, opts = {}) {
    const [vals, parsedZone] = parseISODate(text);
    return parseDataToDateTime(vals, parsedZone, opts, "ISO 8601", text);
  }
  /**
   * Create a DateTime from an RFC 2822 string
   * @param {string} text - the RFC 2822 string
   * @param {Object} opts - options to affect the creation
   * @param {string|Zone} [opts.zone='local'] - convert the time to this zone. Since the offset is always specified in the string itself, this has no effect on the interpretation of string, merely the zone the resulting DateTime is expressed in.
   * @param {boolean} [opts.setZone=false] - override the zone with a fixed-offset zone specified in the string itself, if it specifies one
   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance
   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @example DateTime.fromRFC2822('25 Nov 2016 13:23:12 GMT')
   * @example DateTime.fromRFC2822('Fri, 25 Nov 2016 13:23:12 +0600')
   * @example DateTime.fromRFC2822('25 Nov 2016 13:23 Z')
   * @return {DateTime}
   */
  static fromRFC2822(text, opts = {}) {
    const [vals, parsedZone] = parseRFC2822Date(text);
    return parseDataToDateTime(vals, parsedZone, opts, "RFC 2822", text);
  }
  /**
   * Create a DateTime from an HTTP header date
   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1
   * @param {string} text - the HTTP header date
   * @param {Object} opts - options to affect the creation
   * @param {string|Zone} [opts.zone='local'] - convert the time to this zone. Since HTTP dates are always in UTC, this has no effect on the interpretation of string, merely the zone the resulting DateTime is expressed in.
   * @param {boolean} [opts.setZone=false] - override the zone with the fixed-offset zone specified in the string. For HTTP dates, this is always UTC, so this option is equivalent to setting the `zone` option to 'utc', but this option is included for consistency with similar methods.
   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance
   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @example DateTime.fromHTTP('Sun, 06 Nov 1994 08:49:37 GMT')
   * @example DateTime.fromHTTP('Sunday, 06-Nov-94 08:49:37 GMT')
   * @example DateTime.fromHTTP('Sun Nov  6 08:49:37 1994')
   * @return {DateTime}
   */
  static fromHTTP(text, opts = {}) {
    const [vals, parsedZone] = parseHTTPDate(text);
    return parseDataToDateTime(vals, parsedZone, opts, "HTTP", opts);
  }
  /**
   * Create a DateTime from an input string and format string.
   * Defaults to en-US if no locale has been specified, regardless of the system's locale.
   * @see https://moment.github.io/luxon/docs/manual/parsing.html#table-of-tokens
   * @param {string} text - the string to parse
   * @param {string} fmt - the format the string is expected to be in (see the link below for the formats)
   * @param {Object} opts - options to affect the creation
   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the DateTime to this zone
   * @param {boolean} [opts.setZone=false] - override the zone with a zone specified in the string itself, if it specifies one
   * @param {string} [opts.locale='en-US'] - a locale string to use when parsing. Will also set the DateTime to this locale
   * @param {string} opts.numberingSystem - the numbering system to use when parsing. Will also set the resulting DateTime to this numbering system
   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @return {DateTime}
   */
  static fromFormat(text, fmt, opts = {}) {
    if (isUndefined(text) || isUndefined(fmt)) {
      throw new InvalidArgumentError("fromFormat requires an input string and a format");
    }
    const { locale = null, numberingSystem = null } = opts, localeToUse = Locale.fromOpts({
      locale,
      numberingSystem,
      defaultToEN: true
    }), [vals, parsedZone, invalid] = parseFromTokens(localeToUse, text, fmt);
    if (invalid) {
      return _DateTime.invalid(invalid);
    } else {
      return parseDataToDateTime(vals, parsedZone, opts, `format ${fmt}`, text);
    }
  }
  /**
   * @deprecated use fromFormat instead
   */
  static fromString(text, fmt, opts = {}) {
    return _DateTime.fromFormat(text, fmt, opts);
  }
  /**
   * Create a DateTime from a SQL date, time, or datetime
   * Defaults to en-US if no locale has been specified, regardless of the system's locale
   * @param {string} text - the string to parse
   * @param {Object} opts - options to affect the creation
   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the DateTime to this zone
   * @param {boolean} [opts.setZone=false] - override the zone with a zone specified in the string itself, if it specifies one
   * @param {string} [opts.locale='en-US'] - a locale string to use when parsing. Will also set the DateTime to this locale
   * @param {string} opts.numberingSystem - the numbering system to use when parsing. Will also set the resulting DateTime to this numbering system
   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @example DateTime.fromSQL('2017-05-15')
   * @example DateTime.fromSQL('2017-05-15 09:12:34')
   * @example DateTime.fromSQL('2017-05-15 09:12:34.342')
   * @example DateTime.fromSQL('2017-05-15 09:12:34.342+06:00')
   * @example DateTime.fromSQL('2017-05-15 09:12:34.342 America/Los_Angeles')
   * @example DateTime.fromSQL('2017-05-15 09:12:34.342 America/Los_Angeles', { setZone: true })
   * @example DateTime.fromSQL('2017-05-15 09:12:34.342', { zone: 'America/Los_Angeles' })
   * @example DateTime.fromSQL('09:12:34.342')
   * @return {DateTime}
   */
  static fromSQL(text, opts = {}) {
    const [vals, parsedZone] = parseSQL(text);
    return parseDataToDateTime(vals, parsedZone, opts, "SQL", text);
  }
  /**
   * Create an invalid DateTime.
   * @param {string} reason - simple string of why this DateTime is invalid. Should not contain parameters or anything else data-dependent
   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information
   * @return {DateTime}
   */
  static invalid(reason, explanation = null) {
    if (!reason) {
      throw new InvalidArgumentError("need to specify a reason the DateTime is invalid");
    }
    const invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);
    if (Settings.throwOnInvalid) {
      throw new InvalidDateTimeError(invalid);
    } else {
      return new _DateTime({ invalid });
    }
  }
  /**
   * Check if an object is a DateTime. Works across context boundaries
   * @param {object} o
   * @return {boolean}
   */
  static isDateTime(o12) {
    return o12 && o12.isLuxonDateTime || false;
  }
  // INFO
  /**
   * Get the value of unit.
   * @param {string} unit - a unit such as 'minute' or 'day'
   * @example DateTime.local(2017, 7, 4).get('month'); //=> 7
   * @example DateTime.local(2017, 7, 4).get('day'); //=> 4
   * @return {number}
   */
  get(unit) {
    return this[unit];
  }
  /**
   * Returns whether the DateTime is valid. Invalid DateTimes occur when:
   * * The DateTime was created from invalid calendar information, such as the 13th month or February 30
   * * The DateTime was created by an operation on another invalid date
   * @type {boolean}
   */
  get isValid() {
    return this.invalid === null;
  }
  /**
   * Returns an error code if this DateTime is invalid, or null if the DateTime is valid
   * @type {string}
   */
  get invalidReason() {
    return this.invalid ? this.invalid.reason : null;
  }
  /**
   * Returns an explanation of why this DateTime became invalid, or null if the DateTime is valid
   * @type {string}
   */
  get invalidExplanation() {
    return this.invalid ? this.invalid.explanation : null;
  }
  /**
   * Get the locale of a DateTime, such 'en-GB'. The locale is used when formatting the DateTime
   *
   * @type {string}
   */
  get locale() {
    return this.isValid ? this.loc.locale : null;
  }
  /**
   * Get the numbering system of a DateTime, such 'beng'. The numbering system is used when formatting the DateTime
   *
   * @type {string}
   */
  get numberingSystem() {
    return this.isValid ? this.loc.numberingSystem : null;
  }
  /**
   * Get the output calendar of a DateTime, such 'islamic'. The output calendar is used when formatting the DateTime
   *
   * @type {string}
   */
  get outputCalendar() {
    return this.isValid ? this.loc.outputCalendar : null;
  }
  /**
   * Get the time zone associated with this DateTime.
   * @type {Zone}
   */
  get zone() {
    return this._zone;
  }
  /**
   * Get the name of the time zone.
   * @type {string}
   */
  get zoneName() {
    return this.isValid ? this.zone.name : null;
  }
  /**
   * Get the year
   * @example DateTime.local(2017, 5, 25).year //=> 2017
   * @type {number}
   */
  get year() {
    return this.isValid ? this.c.year : NaN;
  }
  /**
   * Get the quarter
   * @example DateTime.local(2017, 5, 25).quarter //=> 2
   * @type {number}
   */
  get quarter() {
    return this.isValid ? Math.ceil(this.c.month / 3) : NaN;
  }
  /**
   * Get the month (1-12).
   * @example DateTime.local(2017, 5, 25).month //=> 5
   * @type {number}
   */
  get month() {
    return this.isValid ? this.c.month : NaN;
  }
  /**
   * Get the day of the month (1-30ish).
   * @example DateTime.local(2017, 5, 25).day //=> 25
   * @type {number}
   */
  get day() {
    return this.isValid ? this.c.day : NaN;
  }
  /**
   * Get the hour of the day (0-23).
   * @example DateTime.local(2017, 5, 25, 9).hour //=> 9
   * @type {number}
   */
  get hour() {
    return this.isValid ? this.c.hour : NaN;
  }
  /**
   * Get the minute of the hour (0-59).
   * @example DateTime.local(2017, 5, 25, 9, 30).minute //=> 30
   * @type {number}
   */
  get minute() {
    return this.isValid ? this.c.minute : NaN;
  }
  /**
   * Get the second of the minute (0-59).
   * @example DateTime.local(2017, 5, 25, 9, 30, 52).second //=> 52
   * @type {number}
   */
  get second() {
    return this.isValid ? this.c.second : NaN;
  }
  /**
   * Get the millisecond of the second (0-999).
   * @example DateTime.local(2017, 5, 25, 9, 30, 52, 654).millisecond //=> 654
   * @type {number}
   */
  get millisecond() {
    return this.isValid ? this.c.millisecond : NaN;
  }
  /**
   * Get the week year
   * @see https://en.wikipedia.org/wiki/ISO_week_date
   * @example DateTime.local(2014, 12, 31).weekYear //=> 2015
   * @type {number}
   */
  get weekYear() {
    return this.isValid ? possiblyCachedWeekData(this).weekYear : NaN;
  }
  /**
   * Get the week number of the week year (1-52ish).
   * @see https://en.wikipedia.org/wiki/ISO_week_date
   * @example DateTime.local(2017, 5, 25).weekNumber //=> 21
   * @type {number}
   */
  get weekNumber() {
    return this.isValid ? possiblyCachedWeekData(this).weekNumber : NaN;
  }
  /**
   * Get the day of the week.
   * 1 is Monday and 7 is Sunday
   * @see https://en.wikipedia.org/wiki/ISO_week_date
   * @example DateTime.local(2014, 11, 31).weekday //=> 4
   * @type {number}
   */
  get weekday() {
    return this.isValid ? possiblyCachedWeekData(this).weekday : NaN;
  }
  /**
   * Get the ordinal (meaning the day of the year)
   * @example DateTime.local(2017, 5, 25).ordinal //=> 145
   * @type {number|DateTime}
   */
  get ordinal() {
    return this.isValid ? gregorianToOrdinal(this.c).ordinal : NaN;
  }
  /**
   * Get the human readable short month name, such as 'Oct'.
   * Defaults to the system's locale if no locale has been specified
   * @example DateTime.local(2017, 10, 30).monthShort //=> Oct
   * @type {string}
   */
  get monthShort() {
    return this.isValid ? Info.months("short", { locObj: this.loc })[this.month - 1] : null;
  }
  /**
   * Get the human readable long month name, such as 'October'.
   * Defaults to the system's locale if no locale has been specified
   * @example DateTime.local(2017, 10, 30).monthLong //=> October
   * @type {string}
   */
  get monthLong() {
    return this.isValid ? Info.months("long", { locObj: this.loc })[this.month - 1] : null;
  }
  /**
   * Get the human readable short weekday, such as 'Mon'.
   * Defaults to the system's locale if no locale has been specified
   * @example DateTime.local(2017, 10, 30).weekdayShort //=> Mon
   * @type {string}
   */
  get weekdayShort() {
    return this.isValid ? Info.weekdays("short", { locObj: this.loc })[this.weekday - 1] : null;
  }
  /**
   * Get the human readable long weekday, such as 'Monday'.
   * Defaults to the system's locale if no locale has been specified
   * @example DateTime.local(2017, 10, 30).weekdayLong //=> Monday
   * @type {string}
   */
  get weekdayLong() {
    return this.isValid ? Info.weekdays("long", { locObj: this.loc })[this.weekday - 1] : null;
  }
  /**
   * Get the UTC offset of this DateTime in minutes
   * @example DateTime.now().offset //=> -240
   * @example DateTime.utc().offset //=> 0
   * @type {number}
   */
  get offset() {
    return this.isValid ? +this.o : NaN;
  }
  /**
   * Get the short human name for the zone's current offset, for example "EST" or "EDT".
   * Defaults to the system's locale if no locale has been specified
   * @type {string}
   */
  get offsetNameShort() {
    if (this.isValid) {
      return this.zone.offsetName(this.ts, {
        format: "short",
        locale: this.locale
      });
    } else {
      return null;
    }
  }
  /**
   * Get the long human name for the zone's current offset, for example "Eastern Standard Time" or "Eastern Daylight Time".
   * Defaults to the system's locale if no locale has been specified
   * @type {string}
   */
  get offsetNameLong() {
    if (this.isValid) {
      return this.zone.offsetName(this.ts, {
        format: "long",
        locale: this.locale
      });
    } else {
      return null;
    }
  }
  /**
   * Get whether this zone's offset ever changes, as in a DST.
   * @type {boolean}
   */
  get isOffsetFixed() {
    return this.isValid ? this.zone.universal : null;
  }
  /**
   * Get whether the DateTime is in a DST.
   * @type {boolean}
   */
  get isInDST() {
    if (this.isOffsetFixed) {
      return false;
    } else {
      return this.offset > this.set({ month: 1 }).offset || this.offset > this.set({ month: 5 }).offset;
    }
  }
  /**
   * Returns true if this DateTime is in a leap year, false otherwise
   * @example DateTime.local(2016).isInLeapYear //=> true
   * @example DateTime.local(2013).isInLeapYear //=> false
   * @type {boolean}
   */
  get isInLeapYear() {
    return isLeapYear(this.year);
  }
  /**
   * Returns the number of days in this DateTime's month
   * @example DateTime.local(2016, 2).daysInMonth //=> 29
   * @example DateTime.local(2016, 3).daysInMonth //=> 31
   * @type {number}
   */
  get daysInMonth() {
    return daysInMonth(this.year, this.month);
  }
  /**
   * Returns the number of days in this DateTime's year
   * @example DateTime.local(2016).daysInYear //=> 366
   * @example DateTime.local(2013).daysInYear //=> 365
   * @type {number}
   */
  get daysInYear() {
    return this.isValid ? daysInYear(this.year) : NaN;
  }
  /**
   * Returns the number of weeks in this DateTime's year
   * @see https://en.wikipedia.org/wiki/ISO_week_date
   * @example DateTime.local(2004).weeksInWeekYear //=> 53
   * @example DateTime.local(2013).weeksInWeekYear //=> 52
   * @type {number}
   */
  get weeksInWeekYear() {
    return this.isValid ? weeksInWeekYear(this.weekYear) : NaN;
  }
  /**
   * Returns the resolved Intl options for this DateTime.
   * This is useful in understanding the behavior of formatting methods
   * @param {Object} opts - the same options as toLocaleString
   * @return {Object}
   */
  resolvedLocaleOpts(opts = {}) {
    const { locale, numberingSystem, calendar } = Formatter.create(
      this.loc.clone(opts),
      opts
    ).resolvedOptions(this);
    return { locale, numberingSystem, outputCalendar: calendar };
  }
  // TRANSFORM
  /**
   * "Set" the DateTime's zone to UTC. Returns a newly-constructed DateTime.
   *
   * Equivalent to {@link setZone}('utc')
   * @param {number} [offset=0] - optionally, an offset from UTC in minutes
   * @param {Object} [opts={}] - options to pass to `setZone()`
   * @return {DateTime}
   */
  toUTC(offset2 = 0, opts = {}) {
    return this.setZone(FixedOffsetZone.instance(offset2), opts);
  }
  /**
   * "Set" the DateTime's zone to the host's local zone. Returns a newly-constructed DateTime.
   *
   * Equivalent to `setZone('local')`
   * @return {DateTime}
   */
  toLocal() {
    return this.setZone(Settings.defaultZone);
  }
  /**
   * "Set" the DateTime's zone to specified zone. Returns a newly-constructed DateTime.
   *
   * By default, the setter keeps the underlying time the same (as in, the same timestamp), but the new instance will report different local times and consider DSTs when making computations, as with {@link plus}. You may wish to use {@link toLocal} and {@link toUTC} which provide simple convenience wrappers for commonly used zones.
   * @param {string|Zone} [zone='local'] - a zone identifier. As a string, that can be any IANA zone supported by the host environment, or a fixed-offset name of the form 'UTC+3', or the strings 'local' or 'utc'. You may also supply an instance of a {@link Zone} class.
   * @param {Object} opts - options
   * @param {boolean} [opts.keepLocalTime=false] - If true, adjust the underlying time so that the local time stays the same, but in the target zone. You should rarely need this.
   * @return {DateTime}
   */
  setZone(zone, { keepLocalTime = false, keepCalendarTime = false } = {}) {
    zone = normalizeZone(zone, Settings.defaultZone);
    if (zone.equals(this.zone)) {
      return this;
    } else if (!zone.isValid) {
      return _DateTime.invalid(unsupportedZone(zone));
    } else {
      let newTS = this.ts;
      if (keepLocalTime || keepCalendarTime) {
        const offsetGuess = zone.offset(this.ts);
        const asObj = this.toObject();
        [newTS] = objToTS(asObj, offsetGuess, zone);
      }
      return clone2(this, { ts: newTS, zone });
    }
  }
  /**
   * "Set" the locale, numberingSystem, or outputCalendar. Returns a newly-constructed DateTime.
   * @param {Object} properties - the properties to set
   * @example DateTime.local(2017, 5, 25).reconfigure({ locale: 'en-GB' })
   * @return {DateTime}
   */
  reconfigure({ locale, numberingSystem, outputCalendar } = {}) {
    const loc = this.loc.clone({ locale, numberingSystem, outputCalendar });
    return clone2(this, { loc });
  }
  /**
   * "Set" the locale. Returns a newly-constructed DateTime.
   * Just a convenient alias for reconfigure({ locale })
   * @example DateTime.local(2017, 5, 25).setLocale('en-GB')
   * @return {DateTime}
   */
  setLocale(locale) {
    return this.reconfigure({ locale });
  }
  /**
   * "Set" the values of specified units. Returns a newly-constructed DateTime.
   * You can only set units with this method; for "setting" metadata, see {@link reconfigure} and {@link setZone}.
   * @param {Object} values - a mapping of units to numbers
   * @example dt.set({ year: 2017 })
   * @example dt.set({ hour: 8, minute: 30 })
   * @example dt.set({ weekday: 5 })
   * @example dt.set({ year: 2005, ordinal: 234 })
   * @return {DateTime}
   */
  set(values) {
    if (!this.isValid) return this;
    const normalized = normalizeObject(values, normalizeUnit, []), settingWeekStuff = !isUndefined(normalized.weekYear) || !isUndefined(normalized.weekNumber) || !isUndefined(normalized.weekday), containsOrdinal = !isUndefined(normalized.ordinal), containsGregorYear = !isUndefined(normalized.year), containsGregorMD = !isUndefined(normalized.month) || !isUndefined(normalized.day), containsGregor = containsGregorYear || containsGregorMD, definiteWeekDef = normalized.weekYear || normalized.weekNumber;
    if ((containsGregor || containsOrdinal) && definiteWeekDef) {
      throw new ConflictingSpecificationError(
        "Can't mix weekYear/weekNumber units with year/month/day or ordinals"
      );
    }
    if (containsGregorMD && containsOrdinal) {
      throw new ConflictingSpecificationError("Can't mix ordinal dates with month/day");
    }
    let mixed;
    if (settingWeekStuff) {
      mixed = weekToGregorian(Object.assign(gregorianToWeek(this.c), normalized));
    } else if (!isUndefined(normalized.ordinal)) {
      mixed = ordinalToGregorian(Object.assign(gregorianToOrdinal(this.c), normalized));
    } else {
      mixed = Object.assign(this.toObject(), normalized);
      if (isUndefined(normalized.day)) {
        mixed.day = Math.min(daysInMonth(mixed.year, mixed.month), mixed.day);
      }
    }
    const [ts3, o12] = objToTS(mixed, this.o, this.zone);
    return clone2(this, { ts: ts3, o: o12 });
  }
  /**
   * Add a period of time to this DateTime and return the resulting DateTime
   *
   * Adding hours, minutes, seconds, or milliseconds increases the timestamp by the right number of milliseconds. Adding days, months, or years shifts the calendar, accounting for DSTs and leap years along the way. Thus, `dt.plus({ hours: 24 })` may result in a different time than `dt.plus({ days: 1 })` if there's a DST shift in between.
   * @param {Duration|Object|number} duration - The amount to add. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()
   * @example DateTime.now().plus(123) //~> in 123 milliseconds
   * @example DateTime.now().plus({ minutes: 15 }) //~> in 15 minutes
   * @example DateTime.now().plus({ days: 1 }) //~> this time tomorrow
   * @example DateTime.now().plus({ days: -1 }) //~> this time yesterday
   * @example DateTime.now().plus({ hours: 3, minutes: 13 }) //~> in 3 hr, 13 min
   * @example DateTime.now().plus(Duration.fromObject({ hours: 3, minutes: 13 })) //~> in 3 hr, 13 min
   * @return {DateTime}
   */
  plus(duration) {
    if (!this.isValid) return this;
    const dur = friendlyDuration(duration);
    return clone2(this, adjustTime(this, dur));
  }
  /**
   * Subtract a period of time to this DateTime and return the resulting DateTime
   * See {@link plus}
   * @param {Duration|Object|number} duration - The amount to subtract. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()
   @return {DateTime}
  */
  minus(duration) {
    if (!this.isValid) return this;
    const dur = friendlyDuration(duration).negate();
    return clone2(this, adjustTime(this, dur));
  }
  /**
   * "Set" this DateTime to the beginning of a unit of time.
   * @param {string} unit - The unit to go to the beginning of. Can be 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', or 'millisecond'.
   * @example DateTime.local(2014, 3, 3).startOf('month').toISODate(); //=> '2014-03-01'
   * @example DateTime.local(2014, 3, 3).startOf('year').toISODate(); //=> '2014-01-01'
   * @example DateTime.local(2014, 3, 3).startOf('week').toISODate(); //=> '2014-03-03', weeks always start on Mondays
   * @example DateTime.local(2014, 3, 3, 5, 30).startOf('day').toISOTime(); //=> '00:00.000-05:00'
   * @example DateTime.local(2014, 3, 3, 5, 30).startOf('hour').toISOTime(); //=> '05:00:00.000-05:00'
   * @return {DateTime}
   */
  startOf(unit) {
    if (!this.isValid) return this;
    const o12 = {}, normalizedUnit = Duration.normalizeUnit(unit);
    switch (normalizedUnit) {
      case "years":
        o12.month = 1;
      case "quarters":
      case "months":
        o12.day = 1;
      case "weeks":
      case "days":
        o12.hour = 0;
      case "hours":
        o12.minute = 0;
      case "minutes":
        o12.second = 0;
      case "seconds":
        o12.millisecond = 0;
        break;
      case "milliseconds":
        break;
    }
    if (normalizedUnit === "weeks") {
      o12.weekday = 1;
    }
    if (normalizedUnit === "quarters") {
      const q8 = Math.ceil(this.month / 3);
      o12.month = (q8 - 1) * 3 + 1;
    }
    return this.set(o12);
  }
  /**
   * "Set" this DateTime to the end (meaning the last millisecond) of a unit of time
   * @param {string} unit - The unit to go to the end of. Can be 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', or 'millisecond'.
   * @example DateTime.local(2014, 3, 3).endOf('month').toISO(); //=> '2014-03-31T23:59:59.999-05:00'
   * @example DateTime.local(2014, 3, 3).endOf('year').toISO(); //=> '2014-12-31T23:59:59.999-05:00'
   * @example DateTime.local(2014, 3, 3).endOf('week').toISO(); // => '2014-03-09T23:59:59.999-05:00', weeks start on Mondays
   * @example DateTime.local(2014, 3, 3, 5, 30).endOf('day').toISO(); //=> '2014-03-03T23:59:59.999-05:00'
   * @example DateTime.local(2014, 3, 3, 5, 30).endOf('hour').toISO(); //=> '2014-03-03T05:59:59.999-05:00'
   * @return {DateTime}
   */
  endOf(unit) {
    return this.isValid ? this.plus({ [unit]: 1 }).startOf(unit).minus(1) : this;
  }
  // OUTPUT
  /**
   * Returns a string representation of this DateTime formatted according to the specified format string.
   * **You may not want this.** See {@link toLocaleString} for a more flexible formatting tool. For a table of tokens and their interpretations, see [here](https://moment.github.io/luxon/docs/manual/formatting.html#table-of-tokens).
   * Defaults to en-US if no locale has been specified, regardless of the system's locale.
   * @see https://moment.github.io/luxon/docs/manual/formatting.html#table-of-tokens
   * @param {string} fmt - the format string
   * @param {Object} opts - opts to override the configuration options
   * @example DateTime.now().toFormat('yyyy LLL dd') //=> '2017 Apr 22'
   * @example DateTime.now().setLocale('fr').toFormat('yyyy LLL dd') //=> '2017 avr. 22'
   * @example DateTime.now().toFormat('yyyy LLL dd', { locale: "fr" }) //=> '2017 avr. 22'
   * @example DateTime.now().toFormat("HH 'hours and' mm 'minutes'") //=> '20 hours and 55 minutes'
   * @return {string}
   */
  toFormat(fmt, opts = {}) {
    return this.isValid ? Formatter.create(this.loc.redefaultToEN(opts)).formatDateTimeFromString(this, fmt) : INVALID3;
  }
  /**
   * Returns a localized string representing this date. Accepts the same options as the Intl.DateTimeFormat constructor and any presets defined by Luxon, such as `DateTime.DATE_FULL` or `DateTime.TIME_SIMPLE`.
   * The exact behavior of this method is browser-specific, but in general it will return an appropriate representation
   * of the DateTime in the assigned locale.
   * Defaults to the system's locale if no locale has been specified
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat
   * @param opts {Object} - Intl.DateTimeFormat constructor options and configuration options
   * @example DateTime.now().toLocaleString(); //=> 4/20/2017
   * @example DateTime.now().setLocale('en-gb').toLocaleString(); //=> '20/04/2017'
   * @example DateTime.now().toLocaleString({ locale: 'en-gb' }); //=> '20/04/2017'
   * @example DateTime.now().toLocaleString(DateTime.DATE_FULL); //=> 'April 20, 2017'
   * @example DateTime.now().toLocaleString(DateTime.TIME_SIMPLE); //=> '11:32 AM'
   * @example DateTime.now().toLocaleString(DateTime.DATETIME_SHORT); //=> '4/20/2017, 11:32 AM'
   * @example DateTime.now().toLocaleString({ weekday: 'long', month: 'long', day: '2-digit' }); //=> 'Thursday, April 20'
   * @example DateTime.now().toLocaleString({ weekday: 'short', month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' }); //=> 'Thu, Apr 20, 11:27 AM'
   * @example DateTime.now().toLocaleString({ hour: '2-digit', minute: '2-digit', hour12: false }); //=> '11:32'
   * @return {string}
   */
  toLocaleString(opts = DATE_SHORT) {
    return this.isValid ? Formatter.create(this.loc.clone(opts), opts).formatDateTime(this) : INVALID3;
  }
  /**
   * Returns an array of format "parts", meaning individual tokens along with metadata. This is allows callers to post-process individual sections of the formatted output.
   * Defaults to the system's locale if no locale has been specified
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat/formatToParts
   * @param opts {Object} - Intl.DateTimeFormat constructor options, same as `toLocaleString`.
   * @example DateTime.now().toLocaleParts(); //=> [
   *                                   //=>   { type: 'day', value: '25' },
   *                                   //=>   { type: 'literal', value: '/' },
   *                                   //=>   { type: 'month', value: '05' },
   *                                   //=>   { type: 'literal', value: '/' },
   *                                   //=>   { type: 'year', value: '1982' }
   *                                   //=> ]
   */
  toLocaleParts(opts = {}) {
    return this.isValid ? Formatter.create(this.loc.clone(opts), opts).formatDateTimeParts(this) : [];
  }
  /**
   * Returns an ISO 8601-compliant string representation of this DateTime
   * @param {Object} opts - options
   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0
   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0
   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'
   * @param {string} [opts.format='extended'] - choose between the basic and extended format
   * @example DateTime.utc(1982, 5, 25).toISO() //=> '1982-05-25T00:00:00.000Z'
   * @example DateTime.now().toISO() //=> '2017-04-22T20:47:05.335-04:00'
   * @example DateTime.now().toISO({ includeOffset: false }) //=> '2017-04-22T20:47:05.335'
   * @example DateTime.now().toISO({ format: 'basic' }) //=> '20170422T204705.335-0400'
   * @return {string}
   */
  toISO(opts = {}) {
    if (!this.isValid) {
      return null;
    }
    return `${this.toISODate(opts)}T${this.toISOTime(opts)}`;
  }
  /**
   * Returns an ISO 8601-compliant string representation of this DateTime's date component
   * @param {Object} opts - options
   * @param {string} [opts.format='extended'] - choose between the basic and extended format
   * @example DateTime.utc(1982, 5, 25).toISODate() //=> '1982-05-25'
   * @example DateTime.utc(1982, 5, 25).toISODate({ format: 'basic' }) //=> '19820525'
   * @return {string}
   */
  toISODate({ format = "extended" } = {}) {
    let fmt = format === "basic" ? "yyyyMMdd" : "yyyy-MM-dd";
    if (this.year > 9999) {
      fmt = "+" + fmt;
    }
    return toTechFormat(this, fmt);
  }
  /**
   * Returns an ISO 8601-compliant string representation of this DateTime's week date
   * @example DateTime.utc(1982, 5, 25).toISOWeekDate() //=> '1982-W21-2'
   * @return {string}
   */
  toISOWeekDate() {
    return toTechFormat(this, "kkkk-'W'WW-c");
  }
  /**
   * Returns an ISO 8601-compliant string representation of this DateTime's time component
   * @param {Object} opts - options
   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0
   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0
   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'
   * @param {boolean} [opts.includePrefix=false] - include the `T` prefix
   * @param {string} [opts.format='extended'] - choose between the basic and extended format
   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime() //=> '07:34:19.361Z'
   * @example DateTime.utc().set({ hour: 7, minute: 34, seconds: 0, milliseconds: 0 }).toISOTime({ suppressSeconds: true }) //=> '07:34Z'
   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime({ format: 'basic' }) //=> '073419.361Z'
   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime({ includePrefix: true }) //=> 'T07:34:19.361Z'
   * @return {string}
   */
  toISOTime({
    suppressMilliseconds = false,
    suppressSeconds = false,
    includeOffset = true,
    includePrefix = false,
    format = "extended"
  } = {}) {
    return toTechTimeFormat(this, {
      suppressSeconds,
      suppressMilliseconds,
      includeOffset,
      includePrefix,
      format
    });
  }
  /**
   * Returns an RFC 2822-compatible string representation of this DateTime, always in UTC
   * @example DateTime.utc(2014, 7, 13).toRFC2822() //=> 'Sun, 13 Jul 2014 00:00:00 +0000'
   * @example DateTime.local(2014, 7, 13).toRFC2822() //=> 'Sun, 13 Jul 2014 00:00:00 -0400'
   * @return {string}
   */
  toRFC2822() {
    return toTechFormat(this, "EEE, dd LLL yyyy HH:mm:ss ZZZ", false);
  }
  /**
   * Returns a string representation of this DateTime appropriate for use in HTTP headers.
   * Specifically, the string conforms to RFC 1123.
   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1
   * @example DateTime.utc(2014, 7, 13).toHTTP() //=> 'Sun, 13 Jul 2014 00:00:00 GMT'
   * @example DateTime.utc(2014, 7, 13, 19).toHTTP() //=> 'Sun, 13 Jul 2014 19:00:00 GMT'
   * @return {string}
   */
  toHTTP() {
    return toTechFormat(this.toUTC(), "EEE, dd LLL yyyy HH:mm:ss 'GMT'");
  }
  /**
   * Returns a string representation of this DateTime appropriate for use in SQL Date
   * @example DateTime.utc(2014, 7, 13).toSQLDate() //=> '2014-07-13'
   * @return {string}
   */
  toSQLDate() {
    return toTechFormat(this, "yyyy-MM-dd");
  }
  /**
   * Returns a string representation of this DateTime appropriate for use in SQL Time
   * @param {Object} opts - options
   * @param {boolean} [opts.includeZone=false] - include the zone, such as 'America/New_York'. Overrides includeOffset.
   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'
   * @example DateTime.utc().toSQL() //=> '05:15:16.345'
   * @example DateTime.now().toSQL() //=> '05:15:16.345 -04:00'
   * @example DateTime.now().toSQL({ includeOffset: false }) //=> '05:15:16.345'
   * @example DateTime.now().toSQL({ includeZone: false }) //=> '05:15:16.345 America/New_York'
   * @return {string}
   */
  toSQLTime({ includeOffset = true, includeZone = false } = {}) {
    return toTechTimeFormat(this, {
      includeOffset,
      includeZone,
      spaceZone: true
    });
  }
  /**
   * Returns a string representation of this DateTime appropriate for use in SQL DateTime
   * @param {Object} opts - options
   * @param {boolean} [opts.includeZone=false] - include the zone, such as 'America/New_York'. Overrides includeOffset.
   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'
   * @example DateTime.utc(2014, 7, 13).toSQL() //=> '2014-07-13 00:00:00.000 Z'
   * @example DateTime.local(2014, 7, 13).toSQL() //=> '2014-07-13 00:00:00.000 -04:00'
   * @example DateTime.local(2014, 7, 13).toSQL({ includeOffset: false }) //=> '2014-07-13 00:00:00.000'
   * @example DateTime.local(2014, 7, 13).toSQL({ includeZone: true }) //=> '2014-07-13 00:00:00.000 America/New_York'
   * @return {string}
   */
  toSQL(opts = {}) {
    if (!this.isValid) {
      return null;
    }
    return `${this.toSQLDate()} ${this.toSQLTime(opts)}`;
  }
  /**
   * Returns a string representation of this DateTime appropriate for debugging
   * @return {string}
   */
  toString() {
    return this.isValid ? this.toISO() : INVALID3;
  }
  /**
   * Returns the epoch milliseconds of this DateTime. Alias of {@link toMillis}
   * @return {number}
   */
  valueOf() {
    return this.toMillis();
  }
  /**
   * Returns the epoch milliseconds of this DateTime.
   * @return {number}
   */
  toMillis() {
    return this.isValid ? this.ts : NaN;
  }
  /**
   * Returns the epoch seconds of this DateTime.
   * @return {number}
   */
  toSeconds() {
    return this.isValid ? this.ts / 1e3 : NaN;
  }
  /**
   * Returns an ISO 8601 representation of this DateTime appropriate for use in JSON.
   * @return {string}
   */
  toJSON() {
    return this.toISO();
  }
  /**
   * Returns a BSON serializable equivalent to this DateTime.
   * @return {Date}
   */
  toBSON() {
    return this.toJSDate();
  }
  /**
   * Returns a JavaScript object with this DateTime's year, month, day, and so on.
   * @param opts - options for generating the object
   * @param {boolean} [opts.includeConfig=false] - include configuration attributes in the output
   * @example DateTime.now().toObject() //=> { year: 2017, month: 4, day: 22, hour: 20, minute: 49, second: 42, millisecond: 268 }
   * @return {Object}
   */
  toObject(opts = {}) {
    if (!this.isValid) return {};
    const base = Object.assign({}, this.c);
    if (opts.includeConfig) {
      base.outputCalendar = this.outputCalendar;
      base.numberingSystem = this.loc.numberingSystem;
      base.locale = this.loc.locale;
    }
    return base;
  }
  /**
   * Returns a JavaScript Date equivalent to this DateTime.
   * @return {Date}
   */
  toJSDate() {
    return new Date(this.isValid ? this.ts : NaN);
  }
  // COMPARE
  /**
   * Return the difference between two DateTimes as a Duration.
   * @param {DateTime} otherDateTime - the DateTime to compare this one to
   * @param {string|string[]} [unit=['milliseconds']] - the unit or array of units (such as 'hours' or 'days') to include in the duration.
   * @param {Object} opts - options that affect the creation of the Duration
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @example
   * var i1 = DateTime.fromISO('1982-05-25T09:45'),
   *     i2 = DateTime.fromISO('1983-10-14T10:30');
   * i2.diff(i1).toObject() //=> { milliseconds: 43807500000 }
   * i2.diff(i1, 'hours').toObject() //=> { hours: 12168.75 }
   * i2.diff(i1, ['months', 'days']).toObject() //=> { months: 16, days: 19.03125 }
   * i2.diff(i1, ['months', 'days', 'hours']).toObject() //=> { months: 16, days: 19, hours: 0.75 }
   * @return {Duration}
   */
  diff(otherDateTime, unit = "milliseconds", opts = {}) {
    if (!this.isValid || !otherDateTime.isValid) {
      return Duration.invalid(
        this.invalid || otherDateTime.invalid,
        "created by diffing an invalid DateTime"
      );
    }
    const durOpts = Object.assign(
      { locale: this.locale, numberingSystem: this.numberingSystem },
      opts
    );
    const units = maybeArray(unit).map(Duration.normalizeUnit), otherIsLater = otherDateTime.valueOf() > this.valueOf(), earlier = otherIsLater ? this : otherDateTime, later = otherIsLater ? otherDateTime : this, diffed = diff_default(earlier, later, units, durOpts);
    return otherIsLater ? diffed.negate() : diffed;
  }
  /**
   * Return the difference between this DateTime and right now.
   * See {@link diff}
   * @param {string|string[]} [unit=['milliseconds']] - the unit or units units (such as 'hours' or 'days') to include in the duration
   * @param {Object} opts - options that affect the creation of the Duration
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @return {Duration}
   */
  diffNow(unit = "milliseconds", opts = {}) {
    return this.diff(_DateTime.now(), unit, opts);
  }
  /**
   * Return an Interval spanning between this DateTime and another DateTime
   * @param {DateTime} otherDateTime - the other end point of the Interval
   * @return {Interval}
   */
  until(otherDateTime) {
    return this.isValid ? Interval.fromDateTimes(this, otherDateTime) : this;
  }
  /**
   * Return whether this DateTime is in the same unit of time as another DateTime.
   * Higher-order units must also be identical for this function to return `true`.
   * Note that time zones are **ignored** in this comparison, which compares the **local** calendar time. Use {@link setZone} to convert one of the dates if needed.
   * @param {DateTime} otherDateTime - the other DateTime
   * @param {string} unit - the unit of time to check sameness on
   * @example DateTime.now().hasSame(otherDT, 'day'); //~> true if otherDT is in the same current calendar day
   * @return {boolean}
   */
  hasSame(otherDateTime, unit) {
    if (!this.isValid) return false;
    const inputMs = otherDateTime.valueOf();
    const otherZoneDateTime = this.setZone(otherDateTime.zone, { keepLocalTime: true });
    return otherZoneDateTime.startOf(unit) <= inputMs && inputMs <= otherZoneDateTime.endOf(unit);
  }
  /**
   * Equality check
   * Two DateTimes are equal iff they represent the same millisecond, have the same zone and location, and are both valid.
   * To compare just the millisecond values, use `+dt1 === +dt2`.
   * @param {DateTime} other - the other DateTime
   * @return {boolean}
   */
  equals(other) {
    return this.isValid && other.isValid && this.valueOf() === other.valueOf() && this.zone.equals(other.zone) && this.loc.equals(other.loc);
  }
  /**
   * Returns a string representation of a this time relative to now, such as "in two days". Can only internationalize if your
   * platform supports Intl.RelativeTimeFormat. Rounds down by default.
   * @param {Object} options - options that affect the output
   * @param {DateTime} [options.base=DateTime.now()] - the DateTime to use as the basis to which this time is compared. Defaults to now.
   * @param {string} [options.style="long"] - the style of units, must be "long", "short", or "narrow"
   * @param {string|string[]} options.unit - use a specific unit or array of units; if omitted, or an array, the method will pick the best unit. Use an array or one of "years", "quarters", "months", "weeks", "days", "hours", "minutes", or "seconds"
   * @param {boolean} [options.round=true] - whether to round the numbers in the output.
   * @param {number} [options.padding=0] - padding in milliseconds. This allows you to round up the result if it fits inside the threshold. Don't use in combination with {round: false} because the decimal output will include the padding.
   * @param {string} options.locale - override the locale of this DateTime
   * @param {string} options.numberingSystem - override the numberingSystem of this DateTime. The Intl system may choose not to honor this
   * @example DateTime.now().plus({ days: 1 }).toRelative() //=> "in 1 day"
   * @example DateTime.now().setLocale("es").toRelative({ days: 1 }) //=> "dentro de 1 día"
   * @example DateTime.now().plus({ days: 1 }).toRelative({ locale: "fr" }) //=> "dans 23 heures"
   * @example DateTime.now().minus({ days: 2 }).toRelative() //=> "2 days ago"
   * @example DateTime.now().minus({ days: 2 }).toRelative({ unit: "hours" }) //=> "48 hours ago"
   * @example DateTime.now().minus({ hours: 36 }).toRelative({ round: false }) //=> "1.5 days ago"
   */
  toRelative(options = {}) {
    if (!this.isValid) return null;
    const base = options.base || _DateTime.fromObject({ zone: this.zone }), padding = options.padding ? this < base ? -options.padding : options.padding : 0;
    let units = ["years", "months", "days", "hours", "minutes", "seconds"];
    let unit = options.unit;
    if (Array.isArray(options.unit)) {
      units = options.unit;
      unit = void 0;
    }
    return diffRelative(
      base,
      this.plus(padding),
      Object.assign(options, {
        numeric: "always",
        units,
        unit
      })
    );
  }
  /**
   * Returns a string representation of this date relative to today, such as "yesterday" or "next month".
   * Only internationalizes on platforms that supports Intl.RelativeTimeFormat.
   * @param {Object} options - options that affect the output
   * @param {DateTime} [options.base=DateTime.now()] - the DateTime to use as the basis to which this time is compared. Defaults to now.
   * @param {string} options.locale - override the locale of this DateTime
   * @param {string} options.unit - use a specific unit; if omitted, the method will pick the unit. Use one of "years", "quarters", "months", "weeks", or "days"
   * @param {string} options.numberingSystem - override the numberingSystem of this DateTime. The Intl system may choose not to honor this
   * @example DateTime.now().plus({ days: 1 }).toRelativeCalendar() //=> "tomorrow"
   * @example DateTime.now().setLocale("es").plus({ days: 1 }).toRelative() //=> ""mañana"
   * @example DateTime.now().plus({ days: 1 }).toRelativeCalendar({ locale: "fr" }) //=> "demain"
   * @example DateTime.now().minus({ days: 2 }).toRelativeCalendar() //=> "2 days ago"
   */
  toRelativeCalendar(options = {}) {
    if (!this.isValid) return null;
    return diffRelative(
      options.base || _DateTime.fromObject({ zone: this.zone }),
      this,
      Object.assign(options, {
        numeric: "auto",
        units: ["years", "months", "days"],
        calendary: true
      })
    );
  }
  /**
   * Return the min of several date times
   * @param {...DateTime} dateTimes - the DateTimes from which to choose the minimum
   * @return {DateTime} the min DateTime, or undefined if called with no argument
   */
  static min(...dateTimes) {
    if (!dateTimes.every(_DateTime.isDateTime)) {
      throw new InvalidArgumentError("min requires all arguments be DateTimes");
    }
    return bestBy(dateTimes, (i11) => i11.valueOf(), Math.min);
  }
  /**
   * Return the max of several date times
   * @param {...DateTime} dateTimes - the DateTimes from which to choose the maximum
   * @return {DateTime} the max DateTime, or undefined if called with no argument
   */
  static max(...dateTimes) {
    if (!dateTimes.every(_DateTime.isDateTime)) {
      throw new InvalidArgumentError("max requires all arguments be DateTimes");
    }
    return bestBy(dateTimes, (i11) => i11.valueOf(), Math.max);
  }
  // MISC
  /**
   * Explain how a string would be parsed by fromFormat()
   * @param {string} text - the string to parse
   * @param {string} fmt - the format the string is expected to be in (see description)
   * @param {Object} options - options taken by fromFormat()
   * @return {Object}
   */
  static fromFormatExplain(text, fmt, options = {}) {
    const { locale = null, numberingSystem = null } = options, localeToUse = Locale.fromOpts({
      locale,
      numberingSystem,
      defaultToEN: true
    });
    return explainFromTokens(localeToUse, text, fmt);
  }
  /**
   * @deprecated use fromFormatExplain instead
   */
  static fromStringExplain(text, fmt, options = {}) {
    return _DateTime.fromFormatExplain(text, fmt, options);
  }
  // FORMAT PRESETS
  /**
   * {@link toLocaleString} format like 10/14/1983
   * @type {Object}
   */
  static get DATE_SHORT() {
    return DATE_SHORT;
  }
  /**
   * {@link toLocaleString} format like 'Oct 14, 1983'
   * @type {Object}
   */
  static get DATE_MED() {
    return DATE_MED;
  }
  /**
   * {@link toLocaleString} format like 'Fri, Oct 14, 1983'
   * @type {Object}
   */
  static get DATE_MED_WITH_WEEKDAY() {
    return DATE_MED_WITH_WEEKDAY;
  }
  /**
   * {@link toLocaleString} format like 'October 14, 1983'
   * @type {Object}
   */
  static get DATE_FULL() {
    return DATE_FULL;
  }
  /**
   * {@link toLocaleString} format like 'Tuesday, October 14, 1983'
   * @type {Object}
   */
  static get DATE_HUGE() {
    return DATE_HUGE;
  }
  /**
   * {@link toLocaleString} format like '09:30 AM'. Only 12-hour if the locale is.
   * @type {Object}
   */
  static get TIME_SIMPLE() {
    return TIME_SIMPLE;
  }
  /**
   * {@link toLocaleString} format like '09:30:23 AM'. Only 12-hour if the locale is.
   * @type {Object}
   */
  static get TIME_WITH_SECONDS() {
    return TIME_WITH_SECONDS;
  }
  /**
   * {@link toLocaleString} format like '09:30:23 AM EDT'. Only 12-hour if the locale is.
   * @type {Object}
   */
  static get TIME_WITH_SHORT_OFFSET() {
    return TIME_WITH_SHORT_OFFSET;
  }
  /**
   * {@link toLocaleString} format like '09:30:23 AM Eastern Daylight Time'. Only 12-hour if the locale is.
   * @type {Object}
   */
  static get TIME_WITH_LONG_OFFSET() {
    return TIME_WITH_LONG_OFFSET;
  }
  /**
   * {@link toLocaleString} format like '09:30', always 24-hour.
   * @type {Object}
   */
  static get TIME_24_SIMPLE() {
    return TIME_24_SIMPLE;
  }
  /**
   * {@link toLocaleString} format like '09:30:23', always 24-hour.
   * @type {Object}
   */
  static get TIME_24_WITH_SECONDS() {
    return TIME_24_WITH_SECONDS;
  }
  /**
   * {@link toLocaleString} format like '09:30:23 EDT', always 24-hour.
   * @type {Object}
   */
  static get TIME_24_WITH_SHORT_OFFSET() {
    return TIME_24_WITH_SHORT_OFFSET;
  }
  /**
   * {@link toLocaleString} format like '09:30:23 Eastern Daylight Time', always 24-hour.
   * @type {Object}
   */
  static get TIME_24_WITH_LONG_OFFSET() {
    return TIME_24_WITH_LONG_OFFSET;
  }
  /**
   * {@link toLocaleString} format like '10/14/1983, 9:30 AM'. Only 12-hour if the locale is.
   * @type {Object}
   */
  static get DATETIME_SHORT() {
    return DATETIME_SHORT;
  }
  /**
   * {@link toLocaleString} format like '10/14/1983, 9:30:33 AM'. Only 12-hour if the locale is.
   * @type {Object}
   */
  static get DATETIME_SHORT_WITH_SECONDS() {
    return DATETIME_SHORT_WITH_SECONDS;
  }
  /**
   * {@link toLocaleString} format like 'Oct 14, 1983, 9:30 AM'. Only 12-hour if the locale is.
   * @type {Object}
   */
  static get DATETIME_MED() {
    return DATETIME_MED;
  }
  /**
   * {@link toLocaleString} format like 'Oct 14, 1983, 9:30:33 AM'. Only 12-hour if the locale is.
   * @type {Object}
   */
  static get DATETIME_MED_WITH_SECONDS() {
    return DATETIME_MED_WITH_SECONDS;
  }
  /**
   * {@link toLocaleString} format like 'Fri, 14 Oct 1983, 9:30 AM'. Only 12-hour if the locale is.
   * @type {Object}
   */
  static get DATETIME_MED_WITH_WEEKDAY() {
    return DATETIME_MED_WITH_WEEKDAY;
  }
  /**
   * {@link toLocaleString} format like 'October 14, 1983, 9:30 AM EDT'. Only 12-hour if the locale is.
   * @type {Object}
   */
  static get DATETIME_FULL() {
    return DATETIME_FULL;
  }
  /**
   * {@link toLocaleString} format like 'October 14, 1983, 9:30:33 AM EDT'. Only 12-hour if the locale is.
   * @type {Object}
   */
  static get DATETIME_FULL_WITH_SECONDS() {
    return DATETIME_FULL_WITH_SECONDS;
  }
  /**
   * {@link toLocaleString} format like 'Friday, October 14, 1983, 9:30 AM Eastern Daylight Time'. Only 12-hour if the locale is.
   * @type {Object}
   */
  static get DATETIME_HUGE() {
    return DATETIME_HUGE;
  }
  /**
   * {@link toLocaleString} format like 'Friday, October 14, 1983, 9:30:33 AM Eastern Daylight Time'. Only 12-hour if the locale is.
   * @type {Object}
   */
  static get DATETIME_HUGE_WITH_SECONDS() {
    return DATETIME_HUGE_WITH_SECONDS;
  }
};
function friendlyDateTime(dateTimeish) {
  if (DateTime.isDateTime(dateTimeish)) {
    return dateTimeish;
  } else if (dateTimeish && dateTimeish.valueOf && isNumber(dateTimeish.valueOf())) {
    return DateTime.fromJSDate(dateTimeish);
  } else if (dateTimeish && typeof dateTimeish === "object") {
    return DateTime.fromObject(dateTimeish);
  } else {
    throw new InvalidArgumentError(
      `Unknown datetime argument: ${dateTimeish}, of type ${typeof dateTimeish}`
    );
  }
}

// node_modules/@ckeditor/ckeditor5-revision-history/dist/index.js
var a14 = class extends ObservableMixin() {
  constructor(_0x2bdb88) {
    super();
    __publicField(this, "id");
    __publicField(this, "creator");
    __publicField(this, "authors");
    __publicField(this, "diffData");
    __publicField(this, "toVersion");
    __publicField(this, "fromVersion");
    __publicField(this, "model");
    this["id"] = _0x2bdb88["id"] || uid(), this["creator"] = _0x2bdb88["creator"] || null, this["authors"] = _0x2bdb88["authors"] || [], this["diffData"] = _0x2bdb88["diffData"] || null, this["toVersion"] = _0x2bdb88["toVersion"] || 0, this["fromVersion"] = _0x2bdb88["fromVersion"] || 0, this["set"]("name", _0x2bdb88["name"] || ""), this["set"]("createdAt", _0x2bdb88["createdAt"] || /* @__PURE__ */ new Date()), this["set"]("attributes", _0x2bdb88["attributes"] || {});
  }
  ["setName"](_0x40fda1) {
    this["_update"]({ "name": _0x40fda1 });
  }
  ["setAttribute"](_0x5d7c9c, _0x1bdb68) {
    const _0x3eda29 = cloneDeep_default(this["attributes"]);
    set_default(_0x3eda29, _0x5d7c9c, _0x1bdb68), this["_update"]({ "attributes": _0x3eda29 });
  }
  ["removeAttribute"](_0x56c2c5) {
    const _0x547043 = cloneDeep_default(this["attributes"]);
    unset_default(_0x547043, _0x56c2c5), this["_update"]({ "attributes": _0x547043 });
  }
  ["_update"](_0x1ac743, _0x5f52be = false) {
    let _0x107e25 = false;
    const _0x7c332c = { "id": this["id"] }, _0x40c325 = ["name", "createdAt", "diffData", "authors", "attributes", "toVersion", "fromVersion", "creatorId"];
    for (const _0xfccaba of _0x40c325) {
      const _0x2f145d = _0x1ac743[_0xfccaba];
      void 0 !== _0x2f145d && _0x2f145d !== this[_0xfccaba] && (this[_0xfccaba] = _0x2f145d, _0x7c332c[_0xfccaba] = _0x2f145d, _0x107e25 = true);
    }
    _0x107e25 && (_0x7c332c["authors"] && (_0x7c332c["authorsIds"] = _0x7c332c["authors"]["map"]((_0x2b3312) => _0x2b3312["id"]), delete _0x7c332c["authors"]), this["fire"]("_update", _0x7c332c, _0x5f52be));
  }
  ["toJSON"]() {
    return { "id": this["id"], "name": this["name"], "creatorId": this["creator"] ? this["creator"]["id"] : null, "authorsIds": this["authors"]["map"]((_0x2719ae) => _0x2719ae["id"]), "diffData": this["diffData"], "createdAt": this["createdAt"], "attributes": this["attributes"], "fromVersion": this["fromVersion"], "toVersion": this["toVersion"] };
  }
};
var A4 = class extends Plugin {
  constructor(_0x4aaa99) {
    super(_0x4aaa99);
    __publicField(this, "_revisions");
    this["_revisions"] = new Collection();
  }
  static get ["requires"]() {
    return [l];
  }
  static get ["pluginName"]() {
    return "RevisionsRepository";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  get ["length"]() {
    return this["_revisions"]["length"];
  }
  ["afterInit"]() {
    !function(_0x192a39) {
      function _0x1edb8f(_0x114ea5, _0x50bf18, _0x1a27c2) {
        const _0x5883c5 = {};
        _0x5883c5[_0x4ccd4d([110, 117, 109, 98, 101, 114, 79, 102, 82, 111, 117, 110, 100, 115])] = { 16: 10, 24: 12, 32: 14 }, _0x5883c5[_0x4ccd4d([114, 99, 111, 110])] = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145], _0x5883c5[_0x4ccd4d([83])] = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], _0x5883c5[_0x4ccd4d([84, 49])] = [3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474, 1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738, 597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420, 3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577, 605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627, 2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520, 3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205, 2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474, 1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309, 3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720, 2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771, 1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243, 3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470, 1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977, 2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737, 1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754, 361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755, 697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986], _0x5883c5[_0x4ccd4d([84, 50])] = [2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899, 2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108, 4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129, 2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848, 1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043, 1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914, 1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139, 2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658, 3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324, 3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385, 3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499, 1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572, 2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810, 3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411, 3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753, 2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487, 550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313, 2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766], _0x5883c5[_0x4ccd4d([84, 51])] = [1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099, 1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188, 2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329, 1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768, 3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283, 3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114, 3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739, 2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538, 2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324, 1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865, 1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296, 844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713, 3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050, 2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131, 3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513, 2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927, 3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905, 2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126], _0x5883c5[_0x4ccd4d([84, 52])] = [1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549, 1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243, 2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529, 1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963, 3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198, 3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564, 3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214, 2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143, 2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699, 1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945, 1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771, 842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818, 3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340, 2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126, 3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473, 2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917, 3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930, 2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436], _0x5883c5[_0x4ccd4d([85, 49])] = [0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795], _0x5883c5[_0x4ccd4d([85, 50])] = [0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459, 2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537, 3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535, 77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884, 3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824, 3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622, 507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216, 3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879, 129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469, 3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175, 1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921, 2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127, 3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560, 1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387, 2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037, 4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148, 692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663, 2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855], _0x5883c5[_0x4ccd4d([85, 51])] = [0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639, 3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557, 2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032, 3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201, 344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239, 532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878, 3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771, 4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744, 671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199, 4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366, 492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798, 2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695, 3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569, 4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702, 3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217, 1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635, 1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009, 3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150], _0x5883c5[_0x4ccd4d([85, 52])] = [0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874, 2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222, 4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595, 1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591, 4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837, 923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127, 2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424, 2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110, 4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469, 4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481, 1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243, 3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604, 2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802, 585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166, 4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912, 1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703, 3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213, 2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925];
        const _0xd21ae7 = new Uint8Array(16);
        for (let _0x5a3666 = 15; _0x5a3666 >= 0; --_0x5a3666) _0xd21ae7[_0x5a3666] = _0x1a27c2 % 256, _0x1a27c2 = parseInt(_0x1a27c2 / 256);
        let _0x14e0b3 = null, _0x39f5ea = 16;
        const _0x34cb33 = new Uint8Array(_0x50bf18), _0x409ea7 = [], _0x3360d9 = [];
        _0x497992();
        for (let _0x1c5aa0 = 0; _0x1c5aa0 < _0x114ea5[_0x4ccd4d([108, 101, 110, 103, 116, 104])]; _0x1c5aa0++) 16 === _0x39f5ea && (_0x14e0b3 = _0x3de4d9(_0xd21ae7), _0x39f5ea = 0, _0x43a058(_0xd21ae7)), _0x114ea5[_0x1c5aa0] ^= _0x14e0b3[_0x39f5ea++];
        return _0x114ea5;
        function _0x379574(_0x1a4da9) {
          const _0x3f35b = [];
          for (let _0x4869f1 = 0; _0x4869f1 < _0x1a4da9[_0x4ccd4d([108, 101, 110, 103, 116, 104])]; _0x4869f1 += 4) _0x3f35b[_0x4ccd4d([112, 117, 115, 104])](_0x1a4da9[_0x4869f1] << 24 | _0x1a4da9[_0x4869f1 + 1] << 16 | _0x1a4da9[_0x4869f1 + 2] << 8 | _0x1a4da9[_0x4869f1 + 3]);
          return _0x3f35b;
        }
        function _0x43a058(_0x510f97) {
          for (let _0x2130d8 = 15; _0x2130d8 >= 0; _0x2130d8--) {
            if (255 !== _0x510f97[_0x2130d8]) {
              _0x510f97[_0x2130d8]++;
              break;
            }
            _0x510f97[_0x2130d8] = 0;
          }
        }
        function _0x3de4d9(_0x23bb37) {
          const _0x2f3227 = _0x409ea7[_0x4ccd4d([108, 101, 110, 103, 116, 104])] - 1, _0x190b6a = [0, 0, 0, 0];
          let t2 = _0x379574(_0x23bb37);
          for (let _0x525a3a = 0; _0x525a3a < 4; _0x525a3a++) t2[_0x525a3a] ^= _0x409ea7[0][_0x525a3a];
          for (let _0x275804 = 1; _0x275804 < _0x2f3227; _0x275804++) {
            for (let _0x58f108 = 0; _0x58f108 < 4; _0x58f108++) _0x190b6a[_0x58f108] = _0x5883c5[_0x4ccd4d([84, 49])][t2[_0x58f108] >> 24 & 255] ^ _0x5883c5[_0x4ccd4d([84, 50])][t2[(_0x58f108 + 1) % 4] >> 16 & 255] ^ _0x5883c5[_0x4ccd4d([84, 51])][t2[(_0x58f108 + 2) % 4] >> 8 & 255] ^ _0x5883c5[_0x4ccd4d([84, 52])][255 & t2[(_0x58f108 + 3) % 4]] ^ _0x409ea7[_0x275804][_0x58f108];
            t2 = _0x190b6a[_0x4ccd4d([115, 108, 105, 99, 101])]();
          }
          const _0x1bea51 = new Uint8Array(16);
          let _0x3a6172;
          for (let _0x5b025a = 0; _0x5b025a < 4; _0x5b025a++) _0x3a6172 = _0x409ea7[_0x2f3227][_0x5b025a], _0x1bea51[4 * _0x5b025a] = 255 & (_0x5883c5[_0x4ccd4d([83])][t2[_0x5b025a] >> 24 & 255] ^ _0x3a6172 >> 24), _0x1bea51[4 * _0x5b025a + 1] = 255 & (_0x5883c5[_0x4ccd4d([83])][t2[(_0x5b025a + 1) % 4] >> 16 & 255] ^ _0x3a6172 >> 16), _0x1bea51[4 * _0x5b025a + 2] = 255 & (_0x5883c5[_0x4ccd4d([83])][t2[(_0x5b025a + 2) % 4] >> 8 & 255] ^ _0x3a6172 >> 8), _0x1bea51[4 * _0x5b025a + 3] = 255 & (_0x5883c5[_0x4ccd4d([83])][255 & t2[(_0x5b025a + 3) % 4]] ^ _0x3a6172);
          return _0x1bea51;
        }
        function _0x497992() {
          const _0x3346ec = _0x5883c5[_0x4ccd4d([110, 117, 109, 98, 101, 114, 79, 102, 82, 111, 117, 110, 100, 115])][_0x34cb33[_0x4ccd4d([108, 101, 110, 103, 116, 104])]];
          for (let _0x32dedd = 0; _0x32dedd <= _0x3346ec; _0x32dedd++) _0x409ea7[_0x4ccd4d([112, 117, 115, 104])]([0, 0, 0, 0]), _0x3360d9[_0x4ccd4d([112, 117, 115, 104])]([0, 0, 0, 0]);
          const _0x43fa78 = 4 * (_0x3346ec + 1), _0x4b9b5f = _0x34cb33[_0x4ccd4d([108, 101, 110, 103, 116, 104])] / 4, _0x5e7684 = _0x379574(_0x34cb33);
          let _0x4fd18c;
          for (let _0xd41f14 = 0; _0xd41f14 < _0x4b9b5f; _0xd41f14++) _0x4fd18c = _0xd41f14 >> 2, _0x409ea7[_0x4fd18c][_0xd41f14 % 4] = _0x5e7684[_0xd41f14], _0x3360d9[_0x3346ec - _0x4fd18c][_0xd41f14 % 4] = _0x5e7684[_0xd41f14];
          let _0x1378c2, _0x19aaaa = 0, t2 = _0x4b9b5f;
          for (; t2 < _0x43fa78; ) {
            _0x1378c2 = _0x5e7684[_0x4b9b5f - 1], _0x5e7684[0] ^= _0x5883c5[_0x4ccd4d([83])][_0x1378c2 >> 16 & 255] << 24 ^ _0x5883c5[_0x4ccd4d([83])][_0x1378c2 >> 8 & 255] << 16 ^ _0x5883c5[_0x4ccd4d([83])][255 & _0x1378c2] << 8 ^ _0x5883c5[_0x4ccd4d([83])][_0x1378c2 >> 24 & 255] ^ _0x5883c5[_0x4ccd4d([114, 99, 111, 110])][_0x19aaaa] << 24, _0x19aaaa += 1;
            for (let _0x5e1ada = 1; _0x5e1ada < _0x4b9b5f / 2; _0x5e1ada++) _0x5e7684[_0x5e1ada] ^= _0x5e7684[_0x5e1ada - 1];
            _0x1378c2 = _0x5e7684[_0x4b9b5f / 2 - 1], _0x5e7684[_0x4b9b5f / 2] ^= _0x5883c5[_0x4ccd4d([83])][255 & _0x1378c2] ^ _0x5883c5[_0x4ccd4d([83])][_0x1378c2 >> 8 & 255] << 8 ^ _0x5883c5[_0x4ccd4d([83])][_0x1378c2 >> 16 & 255] << 16 ^ _0x5883c5[_0x4ccd4d([83])][_0x1378c2 >> 24 & 255] << 24;
            for (let _0x4a0759 = _0x4b9b5f / 2 + 1; _0x4a0759 < _0x4b9b5f; _0x4a0759++) _0x5e7684[_0x4a0759] ^= _0x5e7684[_0x4a0759 - 1];
            let _0x452afd, _0x2a7ba8, _0x45805e = 0;
            for (; _0x45805e < _0x4b9b5f && t2 < _0x43fa78; ) _0x452afd = t2 >> 2, _0x2a7ba8 = t2 % 4, _0x409ea7[_0x452afd][_0x2a7ba8] = _0x5e7684[_0x45805e], _0x3360d9[_0x3346ec - _0x452afd][_0x2a7ba8] = _0x5e7684[_0x45805e++], t2++;
          }
          for (let _0x3efe5d = 1; _0x3efe5d < _0x3346ec; _0x3efe5d++) for (let _0x453b9a = 0; _0x453b9a < 4; _0x453b9a++) _0x1378c2 = _0x3360d9[_0x3efe5d][_0x453b9a], _0x3360d9[_0x3efe5d][_0x453b9a] = _0x5883c5[_0x4ccd4d([85, 49])][_0x1378c2 >> 24 & 255] ^ _0x5883c5[_0x4ccd4d([85, 50])][_0x1378c2 >> 16 & 255] ^ _0x5883c5[_0x4ccd4d([85, 51])][_0x1378c2 >> 8 & 255] ^ _0x5883c5[_0x4ccd4d([85, 52])][255 & _0x1378c2];
        }
      }
      function _0x4ccd4d(_0x27947f) {
        return _0x27947f["map"]((_0x13e910) => String["fromCharCode"](_0x13e910))["join"]("");
      }
      ((_0x43079f) => {
        function _0x3c4934() {
          const _0x3efcd6 = [{ [_0x4ccd4d([105, 100])]: 1, [_0x4ccd4d([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4ccd4d([67, 111, 109, 109, 101, 110, 116, 115]), [_0x4ccd4d([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4ccd4d([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]), [_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4ccd4d([104, 97, 110, 100, 108, 101, 114])]: _0x4ccd4d([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x4ccd4d([99, 104, 101, 99, 107, 65, 108, 115, 111])]: [{ [_0x4ccd4d([105, 100])]: 2, [_0x4ccd4d([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4ccd4d([84, 114, 97, 99, 107, 32, 67, 104, 97, 110, 103, 101, 115]), [_0x4ccd4d([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4ccd4d([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103]), [_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4ccd4d([104, 97, 110, 100, 108, 101, 114])]: _0x4ccd4d([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115]), [_0x4ccd4d([111, 112, 116, 105, 111, 110, 115])]: { [_0x4ccd4d([97, 105, 119, 115, 103, 105, 99])]: true, [_0x4ccd4d([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x4ccd4d([97, 105, 114, 118, 105, 105, 108])]: true } }], [_0x4ccd4d([111, 112, 116, 105, 111, 110, 115])]: { [_0x4ccd4d([97, 105, 119, 115, 103, 105, 99])]: true, [_0x4ccd4d([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x4ccd4d([97, 105, 114, 118, 105, 105, 108])]: true } }, { [_0x4ccd4d([105, 100])]: 3, [_0x4ccd4d([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4ccd4d([80, 97, 103, 105, 110, 97, 116, 105, 111, 110]), [_0x4ccd4d([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4ccd4d([80, 97, 103, 105, 110, 97, 116, 105, 111, 110, 76, 111, 111, 107, 117, 112]), [_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4ccd4d([112, 97, 103, 105, 110, 97, 116, 105, 111, 110, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4ccd4d([104, 97, 110, 100, 108, 101, 114])]: _0x4ccd4d([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x4ccd4d([105, 100])]: 4, [_0x4ccd4d([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4ccd4d([82, 101, 118, 105, 115, 105, 111, 110, 32, 72, 105, 115, 116, 111, 114, 121]), [_0x4ccd4d([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4ccd4d([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]), [_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4ccd4d([104, 97, 110, 100, 108, 101, 114])]: _0x4ccd4d([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 82, 101, 118, 105, 115, 105, 111, 110, 72, 105, 115, 116, 111, 114, 121]), [_0x4ccd4d([111, 112, 116, 105, 111, 110, 115])]: { [_0x4ccd4d([97, 105, 119, 115, 103, 105, 99])]: true, [_0x4ccd4d([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x4ccd4d([97, 105, 114, 118, 105, 105, 108])]: true } }, { [_0x4ccd4d([105, 100])]: 5, [_0x4ccd4d([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4ccd4d([68, 111, 99, 117, 109, 101, 110, 116, 32, 79, 117, 116, 108, 105, 110, 101]), [_0x4ccd4d([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4ccd4d([68, 111, 99, 117, 109, 101, 110, 116, 79, 117, 116, 108, 105, 110, 101, 85, 73]), [_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4ccd4d([100, 111, 99, 117, 109, 101, 110, 116, 79, 117, 116, 108, 105, 110, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4ccd4d([104, 97, 110, 100, 108, 101, 114])]: _0x4ccd4d([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x4ccd4d([111, 112, 116, 105, 111, 110, 115])]: { [_0x4ccd4d([102, 103, 105])]: [12] } }, { [_0x4ccd4d([105, 100])]: 6, [_0x4ccd4d([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4ccd4d([70, 111, 114, 109, 97, 116, 32, 80, 97, 105, 110, 116, 101, 114]), [_0x4ccd4d([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4ccd4d([70, 111, 114, 109, 97, 116, 80, 97, 105, 110, 116, 101, 114, 85, 73]), [_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4ccd4d([102, 111, 114, 109, 97, 116, 80, 97, 105, 110, 116, 101, 114, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4ccd4d([104, 97, 110, 100, 108, 101, 114])]: _0x4ccd4d([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x4ccd4d([111, 112, 116, 105, 111, 110, 115])]: { [_0x4ccd4d([102, 103, 105])]: [12] } }, { [_0x4ccd4d([105, 100])]: 7, [_0x4ccd4d([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4ccd4d([83, 108, 97, 115, 104, 32, 67, 111, 109, 109, 97, 110, 100]), [_0x4ccd4d([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4ccd4d([83, 108, 97, 115, 104, 67, 111, 109, 109, 97, 110, 100, 85, 73]), [_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4ccd4d([115, 108, 97, 115, 104, 67, 111, 109, 109, 97, 110, 100, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4ccd4d([104, 97, 110, 100, 108, 101, 114])]: _0x4ccd4d([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x4ccd4d([111, 112, 116, 105, 111, 110, 115])]: { [_0x4ccd4d([102, 103, 105])]: [12] } }, { [_0x4ccd4d([105, 100])]: 8, [_0x4ccd4d([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4ccd4d([84, 97, 98, 108, 101, 32, 111, 102, 32, 67, 111, 110, 116, 101, 110, 116, 115]), [_0x4ccd4d([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4ccd4d([84, 97, 98, 108, 101, 79, 102, 67, 111, 110, 116, 101, 110, 116, 115, 69, 100, 105, 116, 105, 110, 103]), [_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4ccd4d([116, 97, 98, 108, 101, 79, 102, 67, 111, 110, 116, 101, 110, 116, 115, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4ccd4d([104, 97, 110, 100, 108, 101, 114])]: _0x4ccd4d([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x4ccd4d([111, 112, 116, 105, 111, 110, 115])]: { [_0x4ccd4d([102, 103, 105])]: [12] } }, { [_0x4ccd4d([105, 100])]: 9, [_0x4ccd4d([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4ccd4d([84, 101, 109, 112, 108, 97, 116, 101]), [_0x4ccd4d([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4ccd4d([84, 101, 109, 112, 108, 97, 116, 101, 85, 73]), [_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4ccd4d([116, 101, 109, 112, 108, 97, 116, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4ccd4d([104, 97, 110, 100, 108, 101, 114])]: _0x4ccd4d([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x4ccd4d([111, 112, 116, 105, 111, 110, 115])]: { [_0x4ccd4d([102, 103, 105])]: [12, 14] } }, { [_0x4ccd4d([105, 100])]: 10, [_0x4ccd4d([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4ccd4d([80, 97, 115, 116, 101, 32, 102, 114, 111, 109, 32, 79, 102, 102, 105, 99, 101, 32, 69, 110, 104, 97, 110, 99, 101, 100]), [_0x4ccd4d([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4ccd4d([80, 97, 115, 116, 101, 70, 114, 111, 109, 79, 102, 102, 105, 99, 101, 69, 110, 104, 97, 110, 99, 101, 100, 73, 110, 108, 105, 110, 101, 114]), [_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4ccd4d([112, 97, 115, 116, 101, 70, 114, 111, 109, 79, 102, 102, 105, 99, 101, 69, 110, 104, 97, 110, 99, 101, 100, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4ccd4d([104, 97, 110, 100, 108, 101, 114])]: _0x4ccd4d([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x4ccd4d([111, 112, 116, 105, 111, 110, 115])]: { [_0x4ccd4d([102, 103, 105])]: [12] } }, { [_0x4ccd4d([105, 100])]: 11, [_0x4ccd4d([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4ccd4d([65, 73, 32, 65, 115, 115, 105, 115, 116, 97, 110, 116]), [_0x4ccd4d([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4ccd4d([65, 73, 65, 115, 115, 105, 115, 116, 97, 110, 116, 85, 73]), [_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4ccd4d([97, 105, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4ccd4d([104, 97, 110, 100, 108, 101, 114])]: _0x4ccd4d([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x4ccd4d([105, 100])]: 12, [_0x4ccd4d([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4ccd4d([80, 114, 111, 100, 117, 99, 116, 105, 118, 105, 116, 121, 32, 112, 97, 99, 107]) }, { [_0x4ccd4d([105, 100])]: 13, [_0x4ccd4d([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4ccd4d([67, 97, 115, 101, 32, 67, 104, 97, 110, 103, 101]), [_0x4ccd4d([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4ccd4d([67, 97, 115, 101, 67, 104, 97, 110, 103, 101, 85, 73]), [_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4ccd4d([99, 97, 115, 101, 67, 104, 97, 110, 103, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4ccd4d([104, 97, 110, 100, 108, 101, 114])]: _0x4ccd4d([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x4ccd4d([111, 112, 116, 105, 111, 110, 115])]: { [_0x4ccd4d([102, 103, 105])]: [12] } }, { [_0x4ccd4d([105, 100])]: 14, [_0x4ccd4d([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4ccd4d([68, 114, 117, 112, 97, 108, 32, 112, 97, 99, 107]), [_0x4ccd4d([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114])]: _0x4ccd4d([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114, 70, 111, 114, 68, 114, 117, 112, 97, 108]) }, { [_0x4ccd4d([105, 100])]: 15, [_0x4ccd4d([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4ccd4d([77, 117, 108, 116, 105, 32, 76, 101, 118, 101, 108, 32, 76, 105, 115, 116]), [_0x4ccd4d([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4ccd4d([77, 117, 108, 116, 105, 76, 101, 118, 101, 108, 76, 105, 115, 116, 69, 100, 105, 116, 105, 110, 103]), [_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4ccd4d([109, 117, 108, 116, 105, 76, 101, 118, 101, 108, 76, 105, 115, 116, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4ccd4d([104, 97, 110, 100, 108, 101, 114])]: _0x4ccd4d([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x4ccd4d([105, 100])]: 16, [_0x4ccd4d([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x4ccd4d([77, 101, 114, 103, 101, 32, 70, 105, 101, 108, 100, 115]), [_0x4ccd4d([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x4ccd4d([77, 101, 114, 103, 101, 70, 105, 101, 108, 100, 115, 85, 73]), [_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x4ccd4d([109, 101, 114, 103, 101, 70, 105, 101, 108, 100, 115, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x4ccd4d([104, 97, 110, 100, 108, 101, 114])]: _0x4ccd4d([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x4ccd4d([111, 112, 116, 105, 111, 110, 115])]: { [_0x4ccd4d([102, 103, 105])]: [12] } }];
          return _0x55b958(_0x3efcd6), _0x3efcd6;
          function _0x44cc4b(_0x47c290) {
            return 1 << _0x47c290 - 1;
          }
          function _0x55b958(_0x5cddef) {
            _0x5cddef[_0x4ccd4d([102, 111, 114, 69, 97, 99, 104])]((_0x2195a1) => {
              _0x2195a1[_0x4ccd4d([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])] = _0x44cc4b(_0x2195a1[_0x4ccd4d([105, 100])]), _0x430395(_0x2195a1) && _0x2195a1[_0x4ccd4d([99, 104, 101, 99, 107, 65, 108, 115, 111])] && _0x55b958(_0x2195a1[_0x4ccd4d([99, 104, 101, 99, 107, 65, 108, 115, 111])]);
            });
          }
        }
        function _0x430395(_0x1954d3) {
          return _0x4ccd4d([112, 108, 117, 103, 105, 110, 78, 97, 109, 101]) in _0x1954d3;
        }
        const _0x23f253 = [1, 85, 78, 115, 198, 255, 50, 112, 83, 87, 161], _0x488e7a = [127, 34, 6, 211, 167, 86, 146, 199, 132, 160, 18];
        function _0x25cfe2(_0x33cbbb) {
          const _0x225c5c = [29, 221, 175, 90, 231, 133, 239, 240, 75, 180];
          return _0x278edc(_0x33cbbb, new Uint8Array([..._0x23f253, ..._0x225c5c, ..._0x488e7a]));
        }
        function _0x278edc(_0x10756a, _0x4ebd7d) {
          const _0x39134b = _0x2df6e3(_0x10756a), _0x511603 = Array[_0x4ccd4d([102, 114, 111, 109])](_0x272db4(_0x39134b)), _0x3d9e58 = _0x511603[_0x4ccd4d([112, 111, 112])](), _0x579d3c = _0x511603[_0x4ccd4d([112, 111, 112])]();
          return _0x1089ba(_0x1edb8f(_0x511603, _0x4ebd7d, _0x579d3c + 256 * _0x3d9e58));
        }
        function _0x2df6e3(_0x53a5a4) {
          const _0x295722 = atob(_0x53a5a4), [_0x5855aa, _0x23a19e] = _0x295722[_0x4ccd4d([115, 112, 108, 105, 116])](_0x4ccd4d([45]));
          try {
            if (atob(_0x23a19e)) return atob(_0x5855aa);
          } catch (_0x48231f) {
          }
          return _0x295722;
        }
        function _0x5c9d10(_0xb8de8f) {
          try {
            const _0x33375d = _0x25cfe2(_0xb8de8f), _0x15ad10 = JSON[_0x4ccd4d([112, 97, 114, 115, 101])](_0x33375d), _0x434653 = parseInt(_0x15ad10[_0x4ccd4d([49])]), _0x109334 = _0x15ad10[_0x4ccd4d([50])] || "", _0x2d15c2 = parseInt(_0x15ad10[_0x4ccd4d([51])]), _0x1b1aed = parseInt(_0x15ad10[_0x4ccd4d([52])]) || 0, _0x50b4d8 = parseInt(_0x15ad10[_0x4ccd4d([53])]) || 0;
            return { [_0x4ccd4d([112, 114, 111, 100, 117, 99, 116, 78, 97, 109, 101])]: _0x109334, [_0x4ccd4d([97, 108, 108, 111, 119, 101, 100, 80, 108, 117, 103, 105, 110, 115])]: _0x1b1aed, [_0x4ccd4d([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])]: _0x434653, [_0x4ccd4d([105, 115, 84, 114, 105, 97, 108])]: _0x2d15c2, [_0x4ccd4d([105, 115, 73, 110, 116, 101, 114, 110, 97, 108])]: _0x50b4d8 };
          } catch (_0x2b2e15) {
            return null;
          }
        }
        const _0x37071a = _0x3c4934(), _0x337bea = { [_0x4ccd4d([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101])]: _0x2c3290, [_0x4ccd4d([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115])]: _0x12e125, [_0x4ccd4d([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 82, 101, 118, 105, 115, 105, 111, 110, 72, 105, 115, 116, 111, 114, 121])]: _0x592cad }, _0x3e1a3b = _0x43079f[_0x4ccd4d([99, 111, 110, 115, 116, 114, 117, 99, 116, 111, 114])][_0x4ccd4d([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])], _0x270e7 = _0x4ccd4d([99, 111, 110, 116, 101, 120, 116]) in _0x43079f ? _0x43079f["context"] : _0x43079f["editor"], _0x1b3187 = _0x4ccd4d([52, 48, 52, 56, 50, 50, 49, 50]), _0x2234ce = _0x4ccd4d([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]), _0x1b9f58 = _0x270e7["config"]["get"](_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 75, 101, 121])), _0x406ec9 = _0x37071a[_0x4ccd4d([102, 105, 108, 116, 101, 114])](_0x430395)[_0x4ccd4d([102, 105, 110, 100])]((_0x4a055d) => _0x4a055d[_0x4ccd4d([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])] === _0x3e1a3b);
        function _0x40eb1f(_0x210d10, _0x36bca4) {
          _0x337bea[_0x36bca4[_0x4ccd4d([104, 97, 110, 100, 108, 101, 114])]](_0x210d10, _0x36bca4), _0x36bca4[_0x4ccd4d([99, 104, 101, 99, 107, 65, 108, 115, 111])] && _0x36bca4[_0x4ccd4d([99, 104, 101, 99, 107, 65, 108, 115, 111])][_0x4ccd4d([102, 105, 108, 116, 101, 114])]((_0xee8797) => _0x4f1e6f(_0x270e7, _0xee8797[_0x4ccd4d([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]))[_0x4ccd4d([102, 111, 114, 69, 97, 99, 104])]((_0x5801ce) => _0x40eb1f(_0x210d10, _0x5801ce));
        }
        function _0x2c3290(_0x5431ae, _0x73d462) {
          _0xcde9f9(_0x27e2cf(_0x5431ae, _0x73d462), _0x73d462);
        }
        function _0x12e125(_0x163f0c, _0x7c1abf) {
          function _0x3e5abb(_0x3f735d, _0x4c99bd) {
            try {
              if (_0x4f1e6f(_0x270e7, _0x4ccd4d([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103])) && _0x3f735d) {
                const _0x54b0bb = _0x3edf31(_0x270e7, _0x4ccd4d([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103]))[_0x4ccd4d([95, 101, 120, 101, 99, 117, 116, 101, 83, 117, 103, 103, 101, 115, 116, 105, 111, 110])];
                if (parseInt(_0x54b0bb) / 2 > _0x3f735d[_0x4ccd4d([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])]) return _0x2dc720(_0x4c99bd[_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4ccd4d([73, 110, 118, 97, 108, 105, 100]));
              }
              return _0x27e2cf(_0x3f735d, _0x4c99bd);
            } catch (_0x3dcd40) {
              return _0x2dc720(_0x4c99bd[_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4ccd4d([73, 110, 118, 97, 108, 105, 100]));
            }
          }
          _0xcde9f9(_0x3e5abb(_0x163f0c, _0x7c1abf), _0x7c1abf);
        }
        function _0x592cad(_0x2b7f6e, _0x203b72) {
          const _0x49af9f = _0x488e7a[0] * _0x23f253[1], _0x22a967 = _0x488e7a[0] * _0x23f253[2], _0x747432 = _0x488e7a[2] * _0x23f253[2];
          _0x4f1e6f(_0x270e7, _0x4ccd4d([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121])) && _0x3edf31(_0x270e7, _0x4ccd4d([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121]))[_0x4ccd4d([115, 116, 97, 116, 101])] == _0x4ccd4d([99, 111, 110, 110, 101, 99, 116, 101, 100]) && (window[_0x28fe66()] = _0x747432);
          function _0x7d81e5(_0x28d7ae, _0x51babd) {
            try {
              return _0xaac582() ? _0x2dc720(_0x51babd[_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4ccd4d([86, 97, 108, 105, 100])) : _0x27e2cf(_0x28d7ae, _0x51babd);
            } catch (_0x2321c0) {
              return _0x2dc720(_0x51babd[_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4ccd4d([73, 110, 118, 97, 108, 105, 100]));
            }
          }
          function _0x3b72eb(_0x1fb39d, _0x250d5d) {
            const _0x467edd = 7;
            if (_0x1fb39d == _0x250d5d[_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4ccd4d([73, 110, 118, 97, 108, 105, 100])) _0x59f051();
            else {
              if (_0x1fb39d == _0x250d5d[_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4ccd4d([84, 114, 105, 97, 108])) {
                const _0xc4183b = _0x450ae8();
                _0xc4183b && _0x542fec(_0xc4183b, _0x250d5d[_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                const _0x122e09 = _0x2e36d0();
                window[_0x4ccd4d([115, 101, 116, 84, 105, 109, 101, 111, 117, 116])](() => {
                  _0x542fec(_0x4ccd4d([116, 105, 109, 101]), _0x250d5d[_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                }, _0x122e09);
                const _0x3224c0 = _0x3edf31(_0x270e7, _0x4ccd4d([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x4ccd4d([95, 114, 101, 118, 105, 115, 105, 111, 110, 115])];
                _0x3224c0[_0x4ccd4d([108, 101, 110, 103, 116, 104])] >= _0x467edd ? _0x542fec(_0x4ccd4d([114, 101, 118, 105, 115, 105, 111, 110, 115]), _0x250d5d[_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]) : _0x3224c0["on"](_0x4ccd4d([97, 100, 100]), () => {
                  _0x3224c0[_0x4ccd4d([108, 101, 110, 103, 116, 104])] >= _0x467edd && _0x542fec(_0x4ccd4d([114, 101, 118, 105, 115, 105, 111, 110, 115]), _0x250d5d[_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                });
              }
            }
          }
          function _0x450ae8() {
            if (!_0x4f1e6f(_0x270e7, _0x4ccd4d([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) return false;
            for (const _0x35d3be in window) if (Number["isNaN"](Number(_0x35d3be))) {
              if (window[_0x35d3be] === _0x49af9f) return _0x4ccd4d([116, 105, 109, 101]);
              if (window[_0x35d3be] === _0x22a967) return _0x4ccd4d([114, 101, 118, 105, 115, 105, 111, 110, 115]);
            }
            return false;
          }
          function _0xaac582() {
            if (!_0x4f1e6f(_0x270e7, _0x4ccd4d([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) return false;
            for (const _0x1bb7f1 in window) if (Number["isNaN"](Number(_0x1bb7f1)) && window[_0x1bb7f1] === _0x747432) return true;
            return false;
          }
          function _0x542fec(_0x4fb7f1, _0x4796f0) {
            _0x59f051(), _0x2dc720(_0x4796f0 + _0x4ccd4d([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58]) + _0x4fb7f1), window[_0x28fe66()] = _0x4fb7f1 === _0x4ccd4d([116, 105, 109, 101]) ? _0x49af9f : _0x22a967;
          }
          function _0x2e36d0() {
            let _0x2465fb = _0x488e7a[6] * _0x23f253[8] * _0x23f253[6];
            return _0x4f1e6f(_0x270e7, _0x4ccd4d([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114])) && (_0x2465fb /= 10), _0x2465fb;
          }
          function _0x59f051() {
            const _0x4d0fa9 = _0x270e7;
            function _0x1f66a8() {
              _0x4f1e6f(_0x4d0fa9, _0x4ccd4d([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114])) && (_0x3edf31(_0x4d0fa9, _0x4ccd4d([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x4ccd4d([117, 110, 98, 105, 110, 100])](_0x4ccd4d([105, 115, 69, 110, 97, 98, 108, 101, 100])), _0x3edf31(_0x4d0fa9, _0x4ccd4d([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x4ccd4d([105, 115, 69, 110, 97, 98, 108, 101, 100])] = false, _0x3edf31(_0x4d0fa9, _0x4ccd4d([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x4ccd4d([117, 112, 100, 97, 116, 101])] = _0x3c7909, _0x3edf31(_0x4d0fa9, _0x4ccd4d([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x4ccd4d([115, 97, 118, 101, 82, 101, 118, 105, 115, 105, 111, 110])] = _0x3c7909, _0x4d0fa9[_0x4ccd4d([109, 111, 100, 101, 108])][_0x4ccd4d([99, 104, 97, 110, 103, 101])] = _0x3c7909, _0x4d0fa9[_0x4ccd4d([109, 111, 100, 101, 108])][_0x4ccd4d([101, 110, 113, 117, 101, 117, 101, 67, 104, 97, 110, 103, 101])] = _0x3c7909, _0x4d0fa9[_0x4ccd4d([101, 110, 97, 98, 108, 101, 82, 101, 97, 100, 79, 110, 108, 121, 77, 111, 100, 101])](_0x4ccd4d([109, 111, 100, 101, 108]))), _0x4f1e6f(_0x4d0fa9, _0x4ccd4d([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114])) && (_0x3edf31(_0x4d0fa9, _0x4ccd4d([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x4ccd4d([117, 110, 98, 105, 110, 100])](_0x4ccd4d([105, 115, 69, 110, 97, 98, 108, 101, 100])), _0x3edf31(_0x4d0fa9, _0x4ccd4d([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x4ccd4d([105, 115, 69, 110, 97, 98, 108, 101, 100])] = false, _0x3edf31(_0x4d0fa9, _0x4ccd4d([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x4ccd4d([99, 111, 109, 112, 97, 114, 101])] = _0x3c7909, _0x3edf31(_0x4d0fa9, _0x4ccd4d([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x4ccd4d([95, 103, 101, 116, 68, 105, 102, 102])] = _0x3c7909);
            }
            _0x4d0fa9[_0x4ccd4d([115, 116, 97, 116, 101])] == _0x4ccd4d([114, 101, 97, 100, 121]) ? _0x1f66a8() : _0x4d0fa9[_0x4ccd4d([111, 110, 99, 101])](_0x4ccd4d([114, 101, 97, 100, 121]), () => {
              if (_0x4f1e6f(_0x4d0fa9, _0x4ccd4d([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114])) && _0x1f66a8(), _0x4f1e6f(_0x4d0fa9, _0x4ccd4d([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) {
                const _0x2efd43 = _0x3edf31(_0x4d0fa9, _0x4ccd4d([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121])), _0x1d9400 = _0x2efd43["getRevision"](0), _0x181ad2 = _0x2efd43["getEarlierVisibleRevision"](_0x1d9400[_0x4ccd4d([105, 100])]);
                _0x3edf31(_0x4d0fa9, _0x4ccd4d([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x4ccd4d([99, 111, 109, 112, 97, 114, 101])](_0x1d9400[_0x4ccd4d([105, 100])], _0x181ad2 ? _0x181ad2[_0x4ccd4d([105, 100])] : null, 1)["then"](() => _0x1f66a8());
              }
            });
          }
          _0x3b72eb(_0x7d81e5(_0x2b7f6e, _0x203b72), _0x203b72);
        }
        function _0x27e2cf(_0x45a713, _0x35823c) {
          try {
            return _0x4508ab(_0x35823c) ? _0x2dc720(_0x35823c[_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4ccd4d([86, 97, 108, 105, 100])) : _0x45a713 && _0x59f9e8(_0x45a713[_0x4ccd4d([97, 108, 108, 111, 119, 101, 100, 80, 108, 117, 103, 105, 110, 115])], _0x35823c) ? _0x45a713[_0x4ccd4d([105, 115, 73, 110, 116, 101, 114, 110, 97, 108])] && !window[_0x4ccd4d([111, 112, 101, 110])][_0x4ccd4d([99, 108, 111, 115, 101, 100])] || parseInt(_0x1b3187) / 2 > _0x45a713[_0x4ccd4d([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])] ? _0x2dc720(_0x35823c[_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4ccd4d([73, 110, 118, 97, 108, 105, 100])) : _0x45a713[_0x4ccd4d([105, 115, 84, 114, 105, 97, 108])] ? _0x2dc720(_0x35823c[_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4ccd4d([84, 114, 105, 97, 108])) : _0x2dc720(_0x35823c[_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4ccd4d([86, 97, 108, 105, 100])) : _0x2dc720(_0x35823c[_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4ccd4d([73, 110, 118, 97, 108, 105, 100]));
          } catch (_0x19aed7) {
            return _0x2dc720(_0x35823c[_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4ccd4d([73, 110, 118, 97, 108, 105, 100]));
          }
        }
        function _0xcde9f9(_0x3edfda, _0xe2cdad) {
          if (_0x270e7 instanceof Context) {
            const _0x4d706a = _0x270e7;
            _0x3edfda == _0xe2cdad[_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4ccd4d([73, 110, 118, 97, 108, 105, 100]) ? _0x53c6c3(_0x4d706a) : _0x3edfda == _0xe2cdad[_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4ccd4d([84, 114, 105, 97, 108]) && window[_0x4ccd4d([115, 101, 116, 84, 105, 109, 101, 111, 117, 116])](() => {
              _0x53c6c3(_0x4d706a), _0x2dc720(_0xe2cdad[_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4ccd4d([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 116, 105, 109, 101]));
            }, _0x488e7a[6] * _0x23f253[8] * _0x23f253[6]), _0x4d706a[_0x4ccd4d([101, 100, 105, 116, 111, 114, 115])][_0x4ccd4d([111, 110])](_0x4ccd4d([97, 100, 100]), (_0x242996, _0x3b2729) => {
              _0x3edfda != _0xe2cdad[_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4ccd4d([73, 110, 118, 97, 108, 105, 100]) && _0x3edfda != _0xe2cdad[_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4ccd4d([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 116, 105, 109, 101]) && _0x3edfda != _0xe2cdad[_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4ccd4d([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 111, 112, 101, 114, 97, 116, 105, 111, 110, 115]) || _0x1dac62(_0x3b2729);
            });
          } else {
            const _0x20040b = _0x270e7;
            _0x3edfda == _0xe2cdad[_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4ccd4d([73, 110, 118, 97, 108, 105, 100]) ? _0x1dac62(_0x20040b) : _0x3edfda == _0xe2cdad[_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4ccd4d([84, 114, 105, 97, 108]) && _0x20040b[_0x4ccd4d([111, 110])](_0x4ccd4d([114, 101, 97, 100, 121]), () => {
              let _0x5822cf = 0;
              _0x20040b[_0x4ccd4d([109, 111, 100, 101, 108])][_0x4ccd4d([111, 110])](_0x4ccd4d([97, 112, 112, 108, 121, 79, 112, 101, 114, 97, 116, 105, 111, 110]), (_0x5db867, _0x57534e) => {
                _0x57534e[0][_0x4ccd4d([105, 115, 68, 111, 99, 117, 109, 101, 110, 116, 79, 112, 101, 114, 97, 116, 105, 111, 110])] && _0x5822cf++, 504 === _0x5822cf && (_0x1dac62(_0x20040b), _0x2dc720(_0xe2cdad[_0x4ccd4d([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x4ccd4d([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 111, 112, 101, 114, 97, 116, 105, 111, 110, 115])), _0x5db867[_0x4ccd4d([111, 102, 102])]());
              }, { "priority": _0x4ccd4d([104, 105, 103, 104, 101, 115, 116]) });
            });
          }
        }
        function _0x2dc720(_0x24c5d2) {
          const _0x38977f = _0x28fe66();
          return _0x270e7[_0x38977f] = _0x24c5d2, _0x24c5d2;
        }
        function _0x28fe66() {
          const _0x51bc73 = String(window[_0x4ccd4d([112, 101, 114, 102, 111, 114, 109, 97, 110, 99, 101])][_0x4ccd4d([110, 111, 119])]())[_0x4ccd4d([114, 101, 112, 108, 97, 99, 101])](_0x4ccd4d([46]), "");
          let _0x2936b6 = "";
          for (let _0x1fdb1d = 0; _0x1fdb1d < _0x51bc73[_0x4ccd4d([108, 101, 110, 103, 116, 104])]; _0x1fdb1d += 2) {
            let _0x1c6954 = parseInt(_0x51bc73[_0x4ccd4d([115, 117, 98, 115, 116, 114, 105, 110, 103])](_0x1fdb1d, _0x1fdb1d + 2));
            _0x1c6954 >= _0x2234ce[_0x4ccd4d([108, 101, 110, 103, 116, 104])] && (_0x1c6954 -= _0x2234ce[_0x4ccd4d([108, 101, 110, 103, 116, 104])]), _0x2936b6 += _0x2234ce[_0x1c6954];
          }
          return _0x2936b6;
        }
        function _0x53c6c3(_0x144db7) {
          for (const _0x49d20c of _0x144db7[_0x4ccd4d([101, 100, 105, 116, 111, 114, 115])]) _0x1dac62(_0x49d20c);
          _0x3edf31(_0x144db7, _0x4ccd4d([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x4ccd4d([115, 119, 105, 116, 99, 104, 82, 101, 97, 100, 79, 110, 108, 121])](true), _0x3edf31(_0x144db7, _0x4ccd4d([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x4ccd4d([115, 119, 105, 116, 99, 104, 82, 101, 97, 100, 79, 110, 108, 121])] = _0x3c7909;
        }
        function _0x1dac62(_0x1dd782) {
          function _0x398837() {
            _0x1dd782[_0x4ccd4d([109, 111, 100, 101, 108])][_0x4ccd4d([99, 104, 97, 110, 103, 101])] = _0x3c7909, _0x1dd782[_0x4ccd4d([109, 111, 100, 101, 108])][_0x4ccd4d([101, 110, 113, 117, 101, 117, 101, 67, 104, 97, 110, 103, 101])] = _0x3c7909, _0x1dd782[_0x4ccd4d([101, 110, 97, 98, 108, 101, 82, 101, 97, 100, 79, 110, 108, 121, 77, 111, 100, 101])](_0x4ccd4d([109, 111, 100, 101, 108]));
          }
          _0x1dd782[_0x4ccd4d([115, 116, 97, 116, 101])] == _0x4ccd4d([114, 101, 97, 100, 121]) ? _0x398837() : _0x1dd782[_0x4ccd4d([111, 110, 99, 101])](_0x4ccd4d([114, 101, 97, 100, 121]), () => _0x398837());
        }
        function _0x3c7909() {
          return null;
        }
        function _0x59f9e8(_0x532905, _0x4bc27e) {
          const _0x24a144 = !!(_0x532905 & _0x4bc27e[_0x4ccd4d([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])]), _0x4f6fae = _0x148b0f(_0x532905, _0x4bc27e);
          return _0x24a144 || _0x4f6fae;
        }
        function _0x148b0f(_0x20c5cc, _0xaaf3a4) {
          const _0x481992 = (_0xaaf3a4[_0x4ccd4d([111, 112, 116, 105, 111, 110, 115])] || {})[_0x4ccd4d([102, 103, 105])] || null;
          return !!_0x481992 && _0x37071a[_0x4ccd4d([102, 105, 108, 116, 101, 114])]((_0x595660) => _0x481992[_0x4ccd4d([105, 110, 99, 108, 117, 100, 101, 115])](_0x595660[_0x4ccd4d([105, 100])]))[_0x4ccd4d([102, 105, 108, 116, 101, 114])]((_0x550217) => !_0x5b2339(_0x550217))[_0x4ccd4d([115, 111, 109, 101])]((_0x2a9035) => !!(_0x20c5cc & _0x2a9035[_0x4ccd4d([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])]));
        }
        function _0x5b2339(_0x3991a3) {
          const _0x28294f = { [_0x4ccd4d([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114, 70, 111, 114, 68, 114, 117, 112, 97, 108])]: _0x547e4a };
          return !!_0x3991a3["forbiddenHandler"] && _0x28294f[_0x3991a3["forbiddenHandler"]]();
        }
        function _0x547e4a() {
          return !window[_0x4ccd4d([68, 114, 117, 112, 97, 108])] || !_0x4f1e6f(_0x270e7, _0x4ccd4d([100, 114, 117, 112, 97, 108, 80, 111, 119, 101, 114, 101, 100, 66, 121]));
        }
        function _0x4508ab(_0x2171d4) {
          if (!_0x4f1e6f(_0x270e7, _0x2171d4[_0x4ccd4d([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])])) return true;
          const _0x5ec3b4 = _0x2171d4[_0x4ccd4d([111, 112, 116, 105, 111, 110, 115])] || {}, _0x59924e = _0x5ec3b4[_0x4ccd4d([97, 105, 119, 115, 103, 105, 99])] || false, _0x469ae8 = _0x5ec3b4[_0x4ccd4d([97, 105, 116, 99, 100, 103, 105, 108])] || false, _0x43a83b = _0x5ec3b4[_0x4ccd4d([97, 105, 114, 118, 105, 105, 108])] || false;
          if (_0x4f1e6f(_0x270e7, _0x4ccd4d([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121])) && _0x3edf31(_0x270e7, _0x4ccd4d([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121]))[_0x4ccd4d([115, 116, 97, 116, 101])] == _0x4ccd4d([99, 111, 110, 110, 101, 99, 116, 101, 100]) && _0x59924e) return true;
          if (_0x4f1e6f(_0x270e7, _0x4ccd4d([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 68, 97, 116, 97, 71, 101, 116, 116, 101, 114])) && _0x3edf31(_0x270e7, _0x4ccd4d([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 68, 97, 116, 97, 71, 101, 116, 116, 101, 114]))[_0x4ccd4d([114, 101, 115, 117, 108, 116])] == _0x4ccd4d([101, 110, 100]) && _0x469ae8) return true;
          return !(!_0x4f1e6f(_0x270e7, _0x4ccd4d([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114, 73, 110, 116, 101, 103, 114, 97, 116, 105, 111, 110])) || _0x3edf31(_0x270e7, _0x4ccd4d([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114, 73, 110, 116, 101, 103, 114, 97, 116, 105, 111, 110]))[_0x4ccd4d([114, 101, 115, 117, 108, 116])] != _0x4ccd4d([101, 110, 100]) || !_0x43a83b);
        }
        function _0x4f1e6f(_0x531053, _0x53246d) {
          return _0x531053[_0x4ccd4d([112, 108, 117, 103, 105, 110, 115])][_0x4ccd4d([104, 97, 115])](_0x53246d);
        }
        function _0x3edf31(_0x29fb65, _0x421b92) {
          return _0x29fb65[_0x4ccd4d([112, 108, 117, 103, 105, 110, 115])][_0x4ccd4d([103, 101, 116])](_0x421b92);
        }
        function _0x1089ba(_0x3bb881) {
          let _0x5eed83 = "";
          for (const _0x358127 of _0x3bb881) _0x5eed83 += String[_0x4ccd4d([102, 114, 111, 109, 67, 104, 97, 114, 67, 111, 100, 101])](_0x358127);
          return _0x5eed83;
        }
        function _0x272db4(_0x5df764) {
          const _0x9da260 = new Uint8Array(_0x5df764[_0x4ccd4d([108, 101, 110, 103, 116, 104])]);
          for (let _0x1a1dc4 = 0; _0x1a1dc4 < _0x5df764[_0x4ccd4d([108, 101, 110, 103, 116, 104])]; _0x1a1dc4++) _0x9da260[_0x1a1dc4] = _0x5df764[_0x4ccd4d([99, 104, 97, 114, 67, 111, 100, 101, 65, 116])](_0x1a1dc4);
          return _0x9da260;
        }
        _0x406ec9 && _0x40eb1f(_0x5c9d10(_0x1b9f58), _0x406ec9);
      })(_0x192a39);
    }(this);
  }
  ["createRevision"](_0x16ee05) {
    const _0x2910b8 = this["editor"]["plugins"]["get"]("Users");
    return new a14({ "id": _0x16ee05["id"], "name": _0x16ee05["name"], "creator": _0x16ee05["creatorId"] ? _0x2910b8["getUser"](_0x16ee05["creatorId"]) : null, "diffData": _0x16ee05["diffData"] || _0x16ee05["data"], "authors": _0x16ee05["authorsIds"]["map"]((_0x3bb237) => _0x2910b8["getUser"](_0x3bb237)), "createdAt": new Date(_0x16ee05["createdAt"]), "attributes": _0x16ee05["attributes"], "fromVersion": _0x16ee05["fromVersion"], "toVersion": _0x16ee05["toVersion"] });
  }
  ["addRevision"](_0x45f64e, _0x50f49b = 0) {
    this["_revisions"]["add"](_0x45f64e, _0x50f49b);
  }
  ["getRevision"](_0x4261f7) {
    return this["_revisions"]["get"](_0x4261f7);
  }
  ["getRevisions"](_0x5471c8 = { "toJSON": false }) {
    const _0x498e92 = Array["from"](this["_revisions"]);
    return _0x498e92["reverse"](), _0x5471c8["toJSON"] ? _0x498e92["map"]((_0x4f39f6) => _0x4f39f6["toJSON"]()) : _0x498e92;
  }
  ["getIndex"](_0x1a12db) {
    return this["_revisions"]["getIndex"](_0x1a12db);
  }
  ["getEarlierVisibleRevision"](_0x5b0f94) {
    const [, _0x19fac4] = this["getRevisionsIterator"](_0x5b0f94, { "direction": "earlier" });
    return _0x19fac4;
  }
  ["getLaterVisibleRevision"](_0x23297f) {
    const [, _0x2bbc35] = this["getRevisionsIterator"](_0x23297f, { "direction": "later" });
    return _0x2bbc35;
  }
  ["getRevisionsInDiff"](_0x5ca116) {
    const _0x32795b = [];
    for (const _0x48f66e of this["getRevisionsIterator"](_0x5ca116["newRevisionId"])) if (_0x32795b["push"](_0x48f66e), _0x48f66e["id"] === _0x5ca116["oldRevisionId"]) break;
    return _0x32795b;
  }
  *["getRevisionsIterator"](_0x3a9c30, { direction: _0x47e83b = "earlier", filter: _0x30f2c1 = () => true } = {}) {
    const _0x236ce2 = "earlier" === _0x47e83b ? 1 : -1;
    let _0x39b1f2 = this["_revisions"]["get"](_0x3a9c30), _0x1e8a81 = this["getIndex"](_0x39b1f2);
    for (yield _0x39b1f2; _0x39b1f2; ) {
      if (_0x1e8a81 += _0x236ce2, _0x39b1f2 = this["getRevision"](_0x1e8a81), !_0x39b1f2) return;
      _0x30f2c1(_0x39b1f2) && (yield _0x39b1f2);
    }
  }
};
function w5(_0x568572, _0xda05ab, _0x4dc134) {
  const t2 = _0x568572["t"];
  switch (_0xda05ab) {
    case "Revision history":
      return t2("Revision history");
    case "Open revision history":
      return t2("Open revision history");
    case "Restored":
      return t2("Restored");
    case "Empty document":
      return t2("Empty document");
    case "Initial revision":
      return t2("Initial revision");
    case "Suggested by":
      return t2("Suggested by");
    case "Added by":
      return t2("Added by");
    case "Removed by":
      return t2("Removed by");
    case "Show more items":
      return t2("Show more items");
    case "Compare against selected":
      return t2("Compare against selected");
    case "Name this revision":
      return t2("Name this revision");
    case "Restore this revision":
      return t2("Restore this revision");
    case "Back to editing":
      return t2("Back to editing");
    case "Loading...":
      return t2("Loading...");
    case "No changes":
      return t2("No changes");
    case "NUMBER_OF_CHANGES":
      return t2({ "string": "%0 change", "plural": "%0 changes", "id": "NUMBER_OF_CHANGES" }, _0x4dc134);
    case "X_OF_Y_CHANGES":
      return t2({ "string": "%0 of %1", "id": "X_OF_Y_CHANGES" }, _0x4dc134);
    case "Show previous change":
      return t2("Show previous change");
    case "Show next change":
      return t2("Show next change");
    case "EDIT_X_OF_Y_REVISIONS":
      return t2({ "string": "Edit", "id": "EDIT_X_OF_Y_REVISIONS" });
    case "Total":
      return t2("Total");
    case "Revision creator":
      return t2("Revision creator");
    case "Revision author":
      return t2("Revision author");
    case "Revision name":
      return t2("Revision name");
    case "Save current revision":
      return t2("Save current revision");
    case "Accept":
      return t2("Accept");
    case "Save":
      return t2("Save");
    case "Cancel":
      return t2("Cancel");
    case "Name of the revision":
      return t2("Name of the revision");
    case "optional":
      return t2("optional");
    case "PENDING_ACTION_REVISION_HISTORY":
      return t2({ "string": "Unsaved change in revision history.", "id": "PENDING_ACTION_REVISION_HISTORY" });
    case "The revision name cannot be empty.":
      return t2("The revision name cannot be empty.");
    case "Enter the revision name":
      return t2("Enter the revision name");
    default:
      return "";
  }
}
var T5 = { "c": ContainerElement, "a": AttributeElement, "e": EmptyElement, "r": RawElement, "u": UIElement };
var l10 = class extends Plugin {
  constructor(_0x2669fe) {
    super(_0x2669fe);
    __publicField(this, "adapter");
    __publicField(this, "currentRevision");
    __publicField(this, "repository");
    __publicField(this, "_revisionDataBuilder");
    __publicField(this, "_source");
    __publicField(this, "_initialRevisionId");
    __publicField(this, "_bufferedUpdates");
    __publicField(this, "_pendingAction");
    __publicField(this, "_continueCurrentRevision");
    __publicField(this, "_startingVersion");
    __publicField(this, "_loadedStateData");
    this["adapter"] = null, this["currentRevision"] = null, this["_revisionDataBuilder"] = new J5(this["editor"]), this["_initialRevisionId"] = this["editor"]["config"]["get"]("collaboration.channelId") || "initial", this["_bufferedUpdates"] = /* @__PURE__ */ new Map(), this["_loadedStateData"] = null;
    const _0x2b9466 = uid();
    this["_source"] = { "history": this["editor"]["model"]["document"]["history"], "getLatestVersion": () => Promise["resolve"](this["editor"]["model"]["document"]["version"]), "getCurrentRevisionId": () => _0x2b9466 }, this["set"]("isReady", false), this["set"]("isEnabled", true), this["set"]("_isPendingUpdate", false), this["editor"]["config"]["define"]("revisionHistory.resumeUnsavedRevision", true), this["editor"]["conversion"]["for"]("upcast")["dataToMarker"]({ "view": "revision" });
  }
  static get ["pluginName"]() {
    return "RevisionTracker";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  static get ["requires"]() {
    return [l, A4, PendingActions];
  }
  ["init"]() {
    this["repository"] = this["editor"]["plugins"]["get"]("RevisionsRepository"), this["_setConversion"](), this["editor"]["data"]["on"]("ready", () => {
      const _0x4be225 = this["repository"]["getRevision"](0), _0x31716b = _0x4be225 && null === _0x4be225["creator"] ? _0x4be225 : null;
      if (this["_continueCurrentRevision"] = !!_0x31716b && this["editor"]["config"]["get"]("revisionHistory.resumeUnsavedRevision"), this["editor"]["plugins"]["has"]("RealTimeCollaborationClient")) {
        const _0x25ac85 = this["_source"]["getCurrentRevisionId"](), _0x298717 = this["repository"]["getRevision"](_0x25ac85);
        if (_0x298717) this["_startingVersion"] = _0x298717["fromVersion"], this["_continueCurrentRevision"] = false;
        else {
          const _0x6092c5 = this["_source"]["history"]["_operations"]["find"]((_0x2d4ae2) => !_0x2d4ae2["_isInit"]), _0x177eaa = _0x6092c5 ? _0x6092c5["baseVersion"] : this["_source"]["history"]["version"];
          _0x4be225 ? (_0x4be225["toVersion"] < _0x177eaa && _0x4be225["_update"]({ "toVersion": _0x177eaa }), this["_continueCurrentRevision"] ? (this["_source"]["getCurrentRevisionId"] = () => _0x31716b["id"], this["_startingVersion"] = _0x31716b["fromVersion"]) : (this["_startingVersion"] = _0x4be225["toVersion"], this["_continueCurrentRevision"] = false)) : (this["_startingVersion"] = _0x177eaa, this["_continueCurrentRevision"] = false);
        }
      } else _0x31716b && (this["editor"]["model"]["document"]["history"]["version"] = Math["max"](_0x31716b["toVersion"], this["editor"]["model"]["document"]["history"]["version"]), _0x31716b["fromVersion"] === _0x31716b["toVersion"] ? (0 !== _0x31716b["fromVersion"] && (this["_source"]["getCurrentRevisionId"] = () => _0x31716b["id"]), this["_continueCurrentRevision"] = false) : this["_continueCurrentRevision"] && (this["_source"]["getCurrentRevisionId"] = () => _0x31716b["id"], this["_startingVersion"] = _0x31716b["fromVersion"])), this["_continueCurrentRevision"] || (this["_startingVersion"] = this["editor"]["model"]["document"]["version"]);
      this["_revisionDataBuilder"]["init"](this["_source"]["history"]), this["_createInitialRevision"](this["_startingVersion"]), this["_createCurrentRevision"](this["_startingVersion"]), this["adapter"] && this["sendBufferedUpdates"]();
    }), this["bind"]("isReady")["to"](this, "_isPendingUpdate", (_0x135828) => !_0x135828);
  }
  async ["afterInit"]() {
    if (this["repository"]["length"] > 0) {
      const _0x329005 = this["repository"]["getRevision"](0), _0x197924 = await this["getRevisionDocumentData"](_0x329005), _0x2986e2 = await this["getRevisionRootsAttributes"](_0x329005);
      this["_replaceEditorDataWithRevisionData"](_0x197924, _0x2986e2);
    }
  }
  ["setSource"](_0x32a643) {
    this["_source"] = _0x32a643;
  }
  async ["update"]() {
    const _0x14b585 = await this["_source"]["getLatestVersion"]();
    if (_0x14b585 > this["currentRevision"]["toVersion"]) {
      await this["_loadState"]();
      const _0x27b429 = this["buildRevisionData"]({ "revision": this["currentRevision"], "to": _0x14b585 });
      _0x27b429["authors"] = _0x27b429["authorsIds"]["map"]((_0x376028) => this["editor"]["plugins"]["get"]("Users")["getUser"](_0x376028)), this["currentRevision"]["_update"](_0x27b429);
    }
  }
  async ["_loadState"]() {
    this["_continueCurrentRevision"] && !this["_loadedStateData"] && (await this["_loadRevisionData"](this["currentRevision"]), this["_revisionDataBuilder"]["loadState"](this["currentRevision"]), this["_loadedStateData"] = { "fromVersion": this["currentRevision"]["fromVersion"], "authors": this["currentRevision"]["authors"]["slice"]() });
  }
  async ["saveRevision"](_0x4a4fbf = {}, _0x3a42d0 = null) {
    const _0x248b21 = [];
    await this["_loadState"](), this["_continueCurrentRevision"] = false, _0x3a42d0 > this["currentRevision"]["toVersion"] && (_0x3a42d0 = null), null === _0x3a42d0 && (_0x3a42d0 = await this["_source"]["getLatestVersion"]());
    const _0x1191d5 = this["_getFromVersion"](_0x3a42d0), _0x1072f7 = this["buildRevisionData"]({ "from": _0x1191d5, "to": _0x3a42d0 });
    if (this["currentRevision"]["toVersion"] < _0x3a42d0) {
      const _0x31c762 = this["buildRevisionData"]({ "revision": this["currentRevision"], "from": _0x3a42d0, "to": _0x3a42d0 });
      _0x31c762["authors"] = [], _0x31c762["authorsIds"] = [], _0x31c762["id"] = this["currentRevision"]["id"], this["currentRevision"]["_update"](_0x31c762, true), delete _0x31c762["authors"], _0x248b21["push"](_0x31c762);
    }
    _0x4a4fbf["creatorId"] = this["editor"]["plugins"]["get"]("Users")["me"]["id"], _0x4a4fbf["name"] = _0x4a4fbf["name"] || null, _0x4a4fbf["id"] = _0x4a4fbf["id"] || uid(), _0x4a4fbf = { ..._0x4a4fbf, ..._0x1072f7 };
    const _0x550345 = this["addRevisionData"](_0x4a4fbf);
    _0x248b21["push"](_0x4a4fbf);
    const _0x5602a5 = this["repository"]["getIndex"](_0x550345);
    if (0 !== _0x5602a5) {
      const _0x1dae19 = this["repository"]["getRevision"](_0x5602a5 - 1);
      if (_0x1dae19["fromVersion"] !== _0x3a42d0) {
        const _0x4d16c4 = this["_revisionDataBuilder"]["getData"](_0x3a42d0, _0x1dae19["toVersion"]), _0x3a20d3 = { "id": _0x1dae19["id"], "diffData": _0x4d16c4["diffData"], "authorsIds": _0x4d16c4["authorsIds"], "authors": _0x4d16c4["authorsIds"]["map"]((_0x242cf0) => this["editor"]["plugins"]["get"]("Users")["getUser"](_0x242cf0)), "fromVersion": _0x3a42d0 };
        _0x1dae19 === this["currentRevision"] && (_0x3a20d3["createdAt"] = new Date(_0x4a4fbf["createdAt"]["getTime"]() + 10)), _0x1dae19["_update"](_0x3a20d3, true), delete _0x3a20d3["authors"], _0x248b21["push"](_0x3a20d3);
      }
    }
    if (this["adapter"]) {
      for (const _0x5a2c1f of _0x248b21) this["_bufferUpdate"](_0x5a2c1f["id"], _0x5a2c1f, true);
      this["sendBufferedUpdates"]();
    }
    return _0x550345;
  }
  ["addRevisionData"](_0x2e5c3f) {
    const _0xee86d6 = this["repository"]["createRevision"](_0x2e5c3f);
    return this["adapter"] && _0xee86d6["on"]("_update", (_0x55a295, _0x2e4f98, _0x329673) => {
      _0x329673 || (this["_bufferUpdate"](_0x2e4f98["id"], _0x2e4f98, true), this["sendBufferedUpdates"]());
    }), this["repository"]["addRevision"](_0xee86d6, this["_findInsertionIndex"](_0xee86d6)), _0xee86d6;
  }
  async ["getRevisionDocumentData"](_0x5a1fae) {
    await this["_loadRevisionData"](_0x5a1fae);
    const _0x14f571 = {};
    for (const _0x49b0e4 in _0x5a1fae["diffData"]) {
      if (_0x5a1fae["diffData"][_0x49b0e4]["attachChange"] && !_0x5a1fae["diffData"][_0x49b0e4]["attachChange"]["isAttached"]) continue;
      const _0x208ec2 = this["_removeRevisionMarkers"](JSON["parse"](_0x5a1fae["diffData"][_0x49b0e4]["insertions"])), _0x450bd9 = this["editor"]["editing"]["view"]["document"], _0x30f6c2 = new DocumentFragment$1(_0x450bd9, _0x208ec2["map"]((_0x4c6a1f) => B4(_0x4c6a1f, this["editor"])));
      this["editor"]["data"]["processor"]["useFillerType"]("marked"), _0x14f571[_0x49b0e4] = this["editor"]["data"]["processor"]["toData"](_0x30f6c2), this["editor"]["data"]["processor"]["useFillerType"]("default");
    }
    return _0x14f571;
  }
  async ["getRevisionRootsAttributes"](_0xd954ac) {
    await this["_loadRevisionData"](_0xd954ac);
    const _0x53c5ed = {};
    for (const _0xbcd210 in _0xd954ac["diffData"]) _0xd954ac["diffData"][_0xbcd210]["attachChange"] && !_0xd954ac["diffData"][_0xbcd210]["attachChange"]["isAttached"] || (_0x53c5ed[_0xbcd210] = _0xd954ac["diffData"][_0xbcd210]["attributesAfter"] || {});
    return _0x53c5ed;
  }
  ["sendBufferedUpdates"]() {
    if (0 === this["_bufferedUpdates"]["size"]) return;
    if (this["_isPendingUpdate"]) return;
    let _0x835d93 = Array["from"](this["_bufferedUpdates"]["values"]());
    this["_bufferedUpdates"]["clear"]();
    for (let _0x1831a2 = 0; _0x1831a2 < _0x835d93["length"]; _0x1831a2++) {
      const _0x1023a9 = _0x835d93[_0x1831a2];
      let _0x4ac9a8 = false;
      for (const _0x4d831e of Object["keys"](_0x1023a9)) void 0 === _0x1023a9[_0x4d831e] ? delete _0x1023a9[_0x4d831e] : "id" !== _0x4d831e && (_0x4ac9a8 = true);
      _0x4ac9a8 || (_0x835d93[_0x1831a2] = null);
    }
    if (_0x835d93 = _0x835d93["filter"]((_0x2482ff) => null !== _0x2482ff), !_0x835d93["length"]) return;
    for (let _0x1ff288 = 0; _0x1ff288 < _0x835d93["length"]; _0x1ff288++) {
      const _0xa23b25 = _0x835d93[_0x1ff288];
      void 0 !== _0xa23b25["fromVersion"] && void 0 === _0xa23b25["toVersion"] && (_0xa23b25["toVersion"] = this["repository"]["getRevision"](_0xa23b25["id"])["toVersion"]), void 0 !== _0xa23b25["toVersion"] && void 0 === _0xa23b25["fromVersion"] && (_0xa23b25["fromVersion"] = this["repository"]["getRevision"](_0xa23b25["id"])["fromVersion"]);
    }
    const _0x24afb2 = this["editor"]["config"]["get"]("collaboration.channelId");
    this["_isPendingUpdate"] = true, this["_addPendingAction"](), this["adapter"]["updateRevisions"](_0x835d93, _0x24afb2)["finally"](() => {
      this["_isPendingUpdate"] = false;
    })["then"]((_0x735558) => {
      if (_0x735558) {
        for (const _0x2ca29f of _0x735558) this["setRevisionData"]({ "id": _0x2ca29f["id"], "createdAt": _0x2ca29f["createdAt"] });
      }
      this["_removePendingAction"](), this["sendBufferedUpdates"]();
    });
  }
  ["_replaceEditorDataWithRevisionData"](_0x4d539b, _0x5c6abc) {
    let _0x49df40 = this["editor"]["config"]["get"]("initialData"), _0x4fdfae = this["editor"]["config"]["get"]("rootsAttributes");
    if (void 0 === _0x49df40) {
      _0x49df40 = {};
      for (const _0x550813 of this["editor"]["model"]["document"]["getRootNames"]()) _0x49df40[_0x550813] = "";
    }
    if ("string" == typeof _0x49df40 && (_0x49df40 = { "main": _0x49df40 }), void 0 === _0x4fdfae) {
      _0x4fdfae = {};
      for (const _0x1560fa of this["editor"]["model"]["document"]["getRootNames"]()) _0x4fdfae[_0x1560fa] = {};
    }
    let _0x2970ad = false;
    const _0x394273 = Object["keys"](_0x49df40), _0x4e9f60 = Object["keys"](_0x4d539b);
    for (const _0x1c271f of _0x394273) {
      if (_0x49df40[_0x1c271f] !== _0x4d539b[_0x1c271f] && "" !== _0x49df40[_0x1c271f]["trim"]()) {
        _0x2970ad = true;
        break;
      }
      if (!isEqual_default(_0x4fdfae[_0x1c271f], _0x5c6abc[_0x1c271f]) && Object["keys"](_0x4fdfae[_0x1c271f])["length"] > 0) {
        _0x2970ad = true;
        break;
      }
    }
    _0x2970ad || (_0x2970ad = _0x4e9f60["some"]((_0x558cab) => !this["editor"]["model"]["document"]["getRoot"](_0x558cab))), _0x2970ad && logWarning("editor-initial-data-replaced-with-revision-data", { "editorData": _0x49df40, "editorRootsAttributes": _0x4fdfae, "revisionData": _0x4d539b, "revisionRootsAttributes": _0x5c6abc }), this["editor"]["config"]["set"]("initialData", _0x4d539b), this["editor"]["config"]["set"]("rootsAttributes", _0x5c6abc);
  }
  ["_addPendingAction"]() {
    if (!this["_pendingAction"]) {
      const _0x244972 = this["editor"]["plugins"]["get"]("PendingActions");
      this["_pendingAction"] = _0x244972["add"](w5(this["editor"]["locale"], "PENDING_ACTION_REVISION_HISTORY"));
    }
  }
  ["_removePendingAction"]() {
    this["_pendingAction"] && (this["editor"]["plugins"]["get"]("PendingActions")["remove"](this["_pendingAction"]), this["_pendingAction"] = null);
  }
  ["_findInsertionIndex"](_0x2f0525) {
    const _0x59215f = this["repository"]["getRevisions"]();
    _0x59215f["reverse"]();
    let _0x3051ae = 0;
    for (; _0x3051ae < _0x59215f["length"]; ) {
      const _0x14358b = _0x59215f[_0x3051ae];
      if (_0x14358b === this["currentRevision"]) {
        _0x3051ae++;
        continue;
      }
      if (_0x14358b["id"] === this["_initialRevisionId"]) break;
      const _0x5b218b = _0x2f0525["toVersion"] - _0x14358b["toVersion"] || _0x2f0525["fromVersion"] - _0x14358b["fromVersion"];
      if (_0x5b218b > 0) break;
      if (_0x5b218b < 0) _0x3051ae++;
      else {
        if (!_0x2f0525["creator"] && _0x14358b["creator"]) break;
        if (_0x14358b["creator"] || !_0x2f0525["creator"]) {
          if (_0x2f0525["createdAt"] > _0x14358b["createdAt"]) break;
          _0x3051ae++;
        } else _0x3051ae++;
      }
    }
    return _0x3051ae;
  }
  ["setRevisionData"](_0x190eb2) {
    const _0x4d6567 = this["repository"]["getRevision"](_0x190eb2["id"]);
    if (_0x190eb2["createdAt"] && (_0x190eb2["createdAt"] = new Date(_0x190eb2["createdAt"])), _0x190eb2["authorsIds"]) {
      const _0x1244eb = this["editor"]["plugins"]["get"]("Users");
      _0x190eb2["authors"] = _0x190eb2["authorsIds"]["map"]((_0x3ca54e) => _0x1244eb["getUser"](_0x3ca54e));
    }
    _0x4d6567["_update"](_0x190eb2, true);
  }
  ["buildRevisionData"]({ revision: _0x3e4471 = null, from: _0x3bbf96 = null, to: _0x5052d0 = null }) {
    _0x3bbf96 = null !== _0x3bbf96 ? _0x3bbf96 : _0x3e4471["fromVersion"], _0x5052d0 = null !== _0x5052d0 ? _0x5052d0 : _0x3e4471["toVersion"];
    const _0x833d87 = this["_revisionDataBuilder"]["getData"](_0x3bbf96, _0x5052d0), _0x183d14 = { "diffData": _0x833d87["diffData"], "authorsIds": _0x833d87["authorsIds"], "fromVersion": _0x3bbf96, "toVersion": _0x5052d0 };
    if (!_0x3e4471 || _0x5052d0 !== _0x3e4471["toVersion"]) {
      const _0x5771bf = _0x5052d0 - 1, _0x4663da = this["_source"]["history"]["getOperation"](_0x5771bf);
      _0x183d14["createdAt"] = _0x4663da && _0x4663da["createdAt"] || /* @__PURE__ */ new Date();
    }
    if (this["_loadedStateData"] && _0x3bbf96 === this["_loadedStateData"]["fromVersion"]) {
      for (const _0x548c23 of this["_loadedStateData"]["authors"]) _0x183d14["authorsIds"]["includes"](_0x548c23["id"]) || _0x183d14["authorsIds"]["push"](_0x548c23["id"]);
    }
    return _0x183d14;
  }
  ["_loadRevisionData"](_0x3c936d) {
    if (!_0x3c936d || _0x3c936d["diffData"]) return Promise["resolve"]();
    {
      const _0x3686e3 = this["editor"]["config"]["get"]("collaboration.channelId");
      return this["adapter"]["getRevision"]({ "channelId": _0x3686e3, "revisionId": _0x3c936d["id"] })["then"]((_0x294a35) => {
        _0x3c936d["diffData"] = _0x294a35["diffData"];
      });
    }
  }
  ["_bufferUpdate"](_0x14b756, _0x1930d3, _0x65f9c3) {
    if (this["_bufferedUpdates"]["has"](_0x14b756)) {
      const _0x402d8f = this["_bufferedUpdates"]["get"](_0x14b756);
      _0x1930d3 = _0x65f9c3 ? { ..._0x402d8f, ..._0x1930d3 } : { ..._0x1930d3, ..._0x402d8f };
    }
    this["_bufferedUpdates"]["set"](_0x14b756, _0x1930d3);
  }
  ["_getFromVersion"](_0x175f88) {
    const _0x402372 = this["repository"]["getRevisions"]();
    _0x402372["reverse"](), _0x402372["shift"]();
    const _0xd2609b = _0x402372["find"]((_0x266afc) => _0x266afc["toVersion"] <= _0x175f88)["toVersion"];
    return _0xd2609b < this["_startingVersion"] ? this["_startingVersion"] : _0xd2609b;
  }
  ["_createInitialRevision"](_0x422020) {
    const _0x2e3e08 = this["repository"]["getRevision"](this["repository"]["length"] - 1);
    if (_0x2e3e08) this["_initialRevisionId"] = _0x2e3e08["id"];
    else {
      const _0xf59a07 = !this["editor"]["model"]["document"]["roots"]["find"]((_0x31c21e) => this["editor"]["model"]["hasContent"](_0x31c21e)), _0x53a46a = this["editor"]["plugins"]["get"]("Users")["me"]["id"], _0x1602ca = w5(this["editor"]["locale"], _0xf59a07 ? "Empty document" : "Initial revision");
      this["_makeRevision"]({ "from": _0x422020, "to": _0x422020, "id": this["_initialRevisionId"], "name": _0x1602ca, "creatorId": _0x53a46a });
    }
  }
  ["_createCurrentRevision"](_0x59e152) {
    const _0x581cf5 = this["_source"]["getCurrentRevisionId"]();
    this["currentRevision"] = this["repository"]["getRevision"](_0x581cf5), this["currentRevision"] || (this["currentRevision"] = this["_makeRevision"]({ "from": _0x59e152, "to": _0x59e152, "id": _0x581cf5, "name": "", "creatorId": null }));
  }
  ["_makeRevision"]({ name: _0x3a6b9f, from: _0x3df183, to: _0x1cbeae, creatorId: _0xe08b2c, id: _0x581fb8 }) {
    const _0x50de6f = this["buildRevisionData"]({ "from": _0x3df183, "to": _0x1cbeae });
    _0x50de6f["name"] = _0x3a6b9f, _0x50de6f["creatorId"] = _0xe08b2c, _0x50de6f["id"] = _0x581fb8;
    const _0x26e852 = this["addRevisionData"](_0x50de6f);
    return this["adapter"] && this["_bufferUpdate"](_0x50de6f["id"], _0x50de6f, true), _0x26e852;
  }
  ["_setConversion"]() {
    this["editor"]["conversion"]["for"]("dataDowncast")["markerToData"]({ "model": "revision" });
  }
  ["_removeRevisionMarkers"](_0x5e7b6f) {
    return (_0x5e7b6f = _0x5e7b6f["filter"]((_0x5397b5) => !_0x5397b5["name"] || "revision-start" !== _0x5397b5["name"] && "revision-end" !== _0x5397b5["name"]))["forEach"]((_0x1349c1) => {
      "string" != typeof _0x1349c1 && (_0x1349c1["children"] = this["_removeRevisionMarkers"](_0x1349c1["children"]), _0x1349c1["attributes"] = _0x1349c1["attributes"]["filter"]((_0x2bfeab) => !_0x2bfeab[0]["startsWith"]("data-revision-")));
    }), _0x5e7b6f;
  }
};
function B4(_0x5c254e, _0x4fefff) {
  const _0x12b530 = _0x4fefff["editing"]["view"]["document"];
  if ("string" == typeof _0x5c254e) return new Text$1(_0x12b530, _0x5c254e);
  {
    const _0x3ae79b = _0x5c254e["children"]["map"]((_0x3a6ddd) => B4(_0x3a6ddd, _0x4fefff));
    return new (T5[_0x5c254e["type"]] || Element$1)(_0x12b530, _0x5c254e["name"], _0x5c254e["attributes"], _0x3ae79b);
  }
}
var J5 = class {
  constructor(_0x58d39b) {
    __publicField(this, "editor");
    __publicField(this, "source");
    __publicField(this, "_savedMetaData");
    __publicField(this, "_lastFrom");
    __publicField(this, "_lastTo");
    __publicField(this, "_markers");
    __publicField(this, "_diffRoots");
    __publicField(this, "_diffRootsAttributes");
    __publicField(this, "_baseRoots");
    __publicField(this, "_baseRootsAttributes");
    __publicField(this, "_idsRoots");
    __publicField(this, "_baseIdsRoots");
    __publicField(this, "_touched");
    __publicField(this, "_touchedMarkers");
    __publicField(this, "_touchedRoots");
    __publicField(this, "_revisionId");
    __publicField(this, "_startingRevisionId");
    this["editor"] = _0x58d39b, this["_savedMetaData"] = /* @__PURE__ */ new Map(), this["_lastFrom"] = -1, this["_lastTo"] = -1, this["_markers"] = /* @__PURE__ */ new Map(), this["_diffRoots"] = /* @__PURE__ */ new Map(), this["_diffRootsAttributes"] = /* @__PURE__ */ new Map(), this["_baseRoots"] = /* @__PURE__ */ new Map(), this["_baseRootsAttributes"] = /* @__PURE__ */ new Map(), this["_idsRoots"] = /* @__PURE__ */ new Map(), this["_baseIdsRoots"] = /* @__PURE__ */ new Map(), this["_touched"] = /* @__PURE__ */ new Map(), this["_touchedMarkers"] = /* @__PURE__ */ new Map(), this["_touchedRoots"] = /* @__PURE__ */ new Map(), this["_revisionId"] = 1;
  }
  ["init"](_0x9bfe5) {
    this["source"] = _0x9bfe5;
    const _0x1fbe8f = /* @__PURE__ */ new Map(), _0x405f3d = /* @__PURE__ */ new Map(), _0x2a20a0 = this["editor"]["model"]["document"]["roots"]["map"]((_0x4ca32b) => _0x4ca32b["rootName"]);
    for (const _0x30dd61 of _0x2a20a0) {
      const _0x4af98b = this["editor"]["model"]["document"]["getRoot"](_0x30dd61), _0x37548e = q6(_0x4af98b);
      _0x1fbe8f["set"](_0x30dd61, _0x37548e), _0x405f3d["set"](_0x30dd61, Object["fromEntries"](_0x4af98b["getAttributes"]()));
    }
    const _0xee8e7b = Array["from"](this["editor"]["model"]["markers"])["map"]((_0xf711f6) => [_0xf711f6["name"], _0xf711f6["getRange"]()]), _0x15cfec = this["source"]["version"];
    this["_saveMetaData"](_0x15cfec, _0x1fbe8f, _0xee8e7b, _0x405f3d), this["_startingRevisionId"] = this["_revisionId"];
    const _0x5f7e6 = /* @__PURE__ */ new Map(), _0x4726a4 = /* @__PURE__ */ new Map();
    for (const _0x374720 of _0x2a20a0) {
      const _0x12b83c = G3(_0x374720);
      _0x5f7e6["set"](_0x374720, _0x12b83c), _0x4726a4["set"](_0x374720, {});
    }
    this["_saveMetaData"](Number["NEGATIVE_INFINITY"], _0x5f7e6, [], _0x4726a4);
  }
  ["getData"](_0x344729, _0x329b34) {
    if (this["_lastFrom"] === _0x344729 && this["_lastTo"] <= _0x329b34) this["_savedMetaData"]["size"] > 1 && this["_removeMetaData"](this["_lastTo"]), this["_applyOperations"](this["_lastTo"], _0x329b34, true);
    else {
      if (!this["_savedMetaData"]["has"](_0x344729)) {
        const _0x505b3a = this["_getPreviousFrom"](_0x344729);
        this["_calculateMetaData"](_0x505b3a, _0x344729, false);
      }
      this["_calculateMetaData"](_0x344729, _0x329b34, true);
    }
    return this["_lastFrom"] = _0x344729, this["_lastTo"] = _0x329b34, this["_getState"]();
  }
  ["loadState"](_0x9c8c20) {
    this["_reset"](), this["_lastFrom"] = _0x9c8c20["fromVersion"], this["_lastTo"] = _0x9c8c20["toVersion"];
    for (const _0x1274b1 in _0x9c8c20["diffData"]) {
      const _0x19836b = _0x9c8c20["diffData"][_0x1274b1]["attachChange"], _0x59c371 = cloneDeep_default(_0x9c8c20["diffData"][_0x1274b1]["attributesBefore"]) || {}, _0x637712 = this["_makeModelFromViewString"](_0x9c8c20["diffData"][_0x1274b1]["deletions"]);
      _0x637712["rootName"] = _0x1274b1, _0x637712["_isAttached"] = !_0x19836b || !_0x19836b["isAttached"], _0x637712["isAttached"] = () => _0x637712["_isAttached"], this["_baseRoots"]["set"](_0x1274b1, _0x637712), this["_baseRootsAttributes"]["set"](_0x1274b1, _0x59c371), _0x19836b && this["_touchedRoots"]["set"](_0x1274b1, _0x19836b);
      const _0x5d0783 = this["_makeIdsRoot"](_0x637712);
      this["_baseIdsRoots"]["set"](_0x1274b1, _0x5d0783);
      for (const [_0x26daf1, _0x241fd0] of _0x637712["markers"]) {
        if (!_0x26daf1["startsWith"]("revision:")) continue;
        const _0x3065ec = _0x26daf1["split"](":")[2];
        for (const _0x225ad4 of _0x241fd0["getWalker"]({ "singleCharacters": true })) {
          const _0x195cad = this["_getVidAttributeName"](_0x225ad4), _0x2fd3b9 = "elementEnd" == _0x225ad4["type"] ? _0x225ad4["previousPosition"]["path"]["slice"](0, -1) : _0x225ad4["previousPosition"]["path"], _0x555c40 = _0x5d0783["getNodeByPath"](_0x2fd3b9)["getAttribute"](_0x195cad);
          this["_touched"]["set"](_0x555c40, { "userId": _0x3065ec });
        }
      }
    }
    this["_startingRevisionId"] = this["_revisionId"];
    const _0x34979f = [...Array(this["_revisionId"])["keys"]()]["slice"](1)["filter"]((_0xa3d60e) => !this["_touched"]["has"](_0xa3d60e));
    let _0x46f8fe = 0;
    const _0x4b54b7 = /* @__PURE__ */ new Map();
    for (const _0x545a63 in _0x9c8c20["diffData"]) {
      const _0x36503c = _0x9c8c20["diffData"][_0x545a63]["attachChange"], _0x171115 = cloneDeep_default(_0x9c8c20["diffData"][_0x545a63]["attributesAfter"]) || {}, _0x2df15a = this["_makeModelFromViewString"](_0x9c8c20["diffData"][_0x545a63]["insertions"]);
      _0x2df15a["rootName"] = _0x545a63, _0x2df15a["_isAttached"] = !_0x36503c || _0x36503c["isAttached"], _0x2df15a["isAttached"] = () => _0x2df15a["_isAttached"], this["_diffRoots"]["set"](_0x545a63, _0x2df15a), this["_diffRootsAttributes"]["set"](_0x545a63, _0x171115);
      const _0x3c2bd4 = this["_makeIdsRoot"](_0x2df15a, Number["NEGATIVE_INFINITY"]);
      this["_idsRoots"]["set"](_0x545a63, _0x3c2bd4), _0x4b54b7["set"](_0x545a63, _0x2df15a["isAttached"]() ? _0x171115 : {});
      for (const [_0x598925, _0x1e676b] of _0x2df15a["markers"]) {
        if (!_0x598925["startsWith"]("revision:")) continue;
        const _0x22ff65 = _0x598925["split"](":")[2];
        for (const _0x3a0ca1 of _0x1e676b["getWalker"]({ "singleCharacters": true })) {
          const _0x4a757d = this["_getVidAttributeName"](_0x3a0ca1), _0x44c914 = this["_revisionId"]++, _0x50b330 = "elementEnd" == _0x3a0ca1["type"] ? _0x3a0ca1["previousPosition"]["path"]["slice"](0, -1) : _0x3a0ca1["previousPosition"]["path"];
          _0x3c2bd4["getNodeByPath"](_0x50b330)["_setAttribute"](_0x4a757d, _0x44c914), this["_touched"]["set"](_0x44c914, { "userId": _0x22ff65 });
        }
      }
      for (const _0x8aa398 of this["editor"]["model"]["createRangeIn"](_0x2df15a)["getWalker"]({ "singleCharacters": true })) {
        const _0x34f326 = this["_getVidAttributeName"](_0x8aa398), _0x2dc666 = "elementEnd" == _0x8aa398["type"] ? _0x8aa398["previousPosition"]["path"]["slice"](0, -1) : _0x8aa398["previousPosition"]["path"], _0x207b26 = _0x3c2bd4["getNodeByPath"](_0x2dc666);
        _0x207b26["getAttribute"](_0x34f326) > 0 || _0x207b26["_setAttribute"](_0x34f326, _0x34979f[_0x46f8fe++]);
      }
      for (const [_0x573e7f, _0x48b37a] of _0x2df15a["markers"]) _0x573e7f["startsWith"]("revision:") || this["_markers"]["set"](_0x573e7f, _0x48b37a);
    }
    const _0x2c4b01 = G3("$graveyard");
    this["_baseRoots"]["set"]("$graveyard", _0x2c4b01), this["_baseIdsRoots"]["set"]("$graveyard", this["_makeIdsRoot"](_0x2c4b01, 1));
    const _0x45a6fc = G3("$graveyard");
    this["_diffRoots"]["set"]("$graveyard", _0x45a6fc), this["_idsRoots"]["set"]("$graveyard", this["_makeIdsRoot"](_0x45a6fc, 1));
    const _0x541313 = Array["from"](this["_diffRoots"])["map"](([_0x3ec46c, _0x1724cd]) => [_0x3ec46c, q6(_0x1724cd)]);
    this["_saveMetaData"](this["_lastTo"], _0x541313, this["_markers"], _0x4b54b7);
  }
  ["_makeModelFromViewString"](_0xb348c2) {
    const _0x55ff12 = JSON["parse"](_0xb348c2), _0x32d3e2 = this["editor"]["editing"]["view"]["document"], _0x132f66 = new DocumentFragment$1(_0x32d3e2, _0x55ff12["map"]((_0x48e59f) => B4(_0x48e59f, this["editor"])));
    return this["editor"]["data"]["toModel"](_0x132f66);
  }
  ["_saveMetaData"](_0x46222d, _0x240bab, _0x512f5b, _0x1f2e32) {
    const _0x347fb3 = new Map(_0x240bab), _0x425970 = new Map(cloneDeep_default(_0x1f2e32)), _0x13051a = /* @__PURE__ */ new Map();
    for (const [_0x18cc93, _0x1cba9b] of _0x512f5b) _0x13051a["set"](_0x18cc93, { "start": _0x1cba9b["start"]["clone"](), "end": _0x1cba9b["end"]["clone"](), "rootName": _0x1cba9b["root"]["rootName"] });
    this["_savedMetaData"]["set"](_0x46222d, { "roots": _0x347fb3, "markers": _0x13051a, "rootsAttributes": _0x425970 });
  }
  ["_removeMetaData"](_0x4211b8) {
    this["_savedMetaData"]["delete"](_0x4211b8);
  }
  ["reInit"]() {
    this["_reset"](), this["_lastFrom"] = -1, this["_lastTo"] = -1, this["_savedMetaData"]["clear"](), this["init"](this["source"]);
  }
  ["_reset"]() {
    this["_touched"]["clear"](), this["_touchedMarkers"]["clear"](), this["_touchedRoots"]["clear"](), this["_diffRoots"]["clear"](), this["_diffRootsAttributes"]["clear"](), this["_baseRoots"]["clear"](), this["_baseRootsAttributes"]["clear"](), this["_idsRoots"]["clear"](), this["_baseIdsRoots"]["clear"](), this["_markers"]["clear"](), this["_revisionId"] = 1, this["_startingRevisionId"] = this["_revisionId"];
  }
  ["_makeIdsRoot"](_0xc356b6, _0x52f69e = null) {
    let _0x5e03c8 = null;
    _0xc356b6["is"]("documentFragment") || (_0x5e03c8 = new Element(_0xc356b6["name"], { "vid_start": null === _0x52f69e ? this["_revisionId"]++ : _0x52f69e++ }));
    const _0x506a8a = [];
    for (const _0x4be25d of _0xc356b6["getChildren"]()) if (_0x4be25d["is"]("element")) {
      _0x506a8a["push"](this["_makeIdsRoot"](_0x4be25d, _0x52f69e));
      const _0x4abdf1 = _0x506a8a[_0x506a8a["length"] - 1];
      null !== _0x52f69e && (_0x52f69e = _0x4abdf1["is"]("element", "$text") ? _0x4abdf1["getAttribute"]("vid") + 1 : _0x4abdf1["getAttribute"]("vid_end") + 1);
    } else {
      for (let _0x5cdbfd = 0; _0x5cdbfd < _0x4be25d["offsetSize"]; _0x5cdbfd++) _0x506a8a["push"](new Element("$text", { "vid": null === _0x52f69e ? this["_revisionId"]++ : _0x52f69e++ }));
    }
    if (_0xc356b6["is"]("documentFragment")) {
      const _0x3e5d98 = G3(_0xc356b6["rootName"]);
      return _0x3e5d98["_insertChild"](0, _0x506a8a), _0x3e5d98;
    }
    return _0x5e03c8["_setAttribute"]("vid_end", null === _0x52f69e ? this["_revisionId"]++ : _0x52f69e++), _0x5e03c8["_insertChild"](0, _0x506a8a), _0x5e03c8;
  }
  ["_calculateMetaData"](_0x398d6f, _0x4e48a2, _0x206360) {
    this["_reset"]();
    const { roots: _0x4dcf00, markers: _0x547630, rootsAttributes: _0x3cacf4 } = this["_savedMetaData"]["get"](_0x398d6f);
    this["_baseRoots"] = new Map(_0x4dcf00), this["_baseRootsAttributes"] = new Map(cloneDeep_default(_0x3cacf4));
    for (const [_0x10edef, _0x348ff8] of this["_baseRoots"]) if ("$graveyard" !== _0x10edef && (this["_diffRoots"]["set"](_0x10edef, q6(_0x348ff8)), this["_diffRootsAttributes"] = new Map(cloneDeep_default(_0x3cacf4)), _0x206360)) {
      const _0x2e83f3 = this["_revisionId"];
      this["_idsRoots"]["set"](_0x10edef, this["_makeIdsRoot"](_0x348ff8)), this["_baseIdsRoots"]["set"](_0x10edef, this["_makeIdsRoot"](_0x348ff8, _0x2e83f3));
    }
    this["_startingRevisionId"] = this["_revisionId"], this["_diffRoots"]["set"]("$graveyard", q6(this["_baseRoots"]["get"]("$graveyard"))), _0x206360 && this["_idsRoots"]["set"]("$graveyard", this["_makeIdsRoot"](this["_baseRoots"]["get"]("$graveyard")));
    for (const [_0x1d5974, _0x1838cb] of _0x547630) {
      const _0x19af98 = this["_baseRoots"]["get"](_0x1838cb["rootName"]), _0x499df4 = this["_diffRoots"]["get"](_0x1838cb["rootName"]), _0x500755 = new Range(this["_fixPosition"](_0x1838cb["start"], _0x19af98), this["_fixPosition"](_0x1838cb["end"], _0x19af98)), _0x1de18b = this["_fixRange"](_0x500755, _0x499df4);
      _0x19af98["markers"]["set"](_0x1d5974, _0x500755), this["_markers"]["set"](_0x1d5974, _0x1de18b);
    }
    this["_applyOperations"](_0x398d6f, _0x4e48a2, _0x206360);
  }
  ["_applyOperations"](_0x1cd910, _0x5ccd6e, _0x238156) {
    for (const _0x5c33c5 of this["source"]["getOperations"](_0x1cd910, _0x5ccd6e)) this["_handleOperation"](_0x5c33c5, _0x238156);
    for (const _0x3da6e5 of this["_diffRoots"]["values"]()) _0x3da6e5["markers"]["clear"]();
    for (const [_0x3ddaaa, _0x14e7ee] of this["_markers"]) {
      this["_diffRoots"]["get"](_0x14e7ee["root"]["rootName"])["markers"]["set"](_0x3ddaaa, _0x14e7ee["clone"]());
    }
    const _0x388e2b = /* @__PURE__ */ new Map(), _0x2b99c0 = /* @__PURE__ */ new Map();
    for (const [_0xa2a83, _0x21b605] of this["_diffRoots"]) _0x388e2b["set"](_0xa2a83, q6(_0x21b605)), _0x2b99c0["set"](_0xa2a83, this["_diffRootsAttributes"]["get"](_0xa2a83));
    this["_saveMetaData"](_0x5ccd6e, _0x388e2b, this["_markers"], _0x2b99c0);
  }
  ["_getPreviousFrom"](_0x388618) {
    const _0xac89bf = Array["from"](this["_savedMetaData"]["keys"]());
    _0xac89bf["sort"]((_0x2bbf55, _0x2b15ad) => _0x2bbf55 - _0x2b15ad), _0xac89bf["reverse"]();
    for (const _0x146481 of _0xac89bf) if (_0x146481 < _0x388618) return _0x146481;
    return Number["NEGATIVE_INFINITY"];
  }
  ["_copyMarkers"](_0x3e9bd9, _0x59db5c) {
    const _0x26f2f5 = Array["from"](_0x59db5c["markers"])["map"](([_0x1278d7, _0x2a3110]) => [_0x1278d7, this["_fixRange"](_0x2a3110, _0x3e9bd9)]);
    _0x3e9bd9["markers"] = new Map(_0x26f2f5);
  }
  ["_transformMarkers"](_0x4eeb80) {
    for (const _0x45b58c of this["_markers"]["values"]()) {
      const _0x4bf4d9 = _0x45b58c["getTransformedByOperation"](_0x4eeb80), _0x303e7e = Range["_createFromRanges"](_0x4bf4d9);
      _0x45b58c["start"] = _0x303e7e["start"], _0x45b58c["end"] = _0x303e7e["end"];
    }
  }
  ["_handleOperation"](_0x51fc63, _0x184233) {
    if ("addRoot" != _0x51fc63["type"] && "detachRoot" != _0x51fc63["type"]) {
      if ("insert" == _0x51fc63["type"]) {
        const _0x5e29be = _0x51fc63["position"]["root"]["rootName"];
        this["_diffRoots"]["has"](_0x5e29be) || (this["_diffRoots"]["set"](_0x5e29be, G3(_0x5e29be, true)), this["_diffRootsAttributes"]["set"](_0x5e29be, {}), _0x184233 && this["_idsRoots"]["set"](_0x5e29be, G3(_0x5e29be, true)));
      } else {
        if ("addRootAttribute" == _0x51fc63["type"] || "removeRootAttribute" == _0x51fc63["type"] || "changeRootAttribute" == _0x51fc63["type"]) return void this["_handleRootAttributeOperation"](_0x51fc63);
        "marker" == _0x51fc63["type"] && this["_handleMarkerOperation"](_0x51fc63);
      }
      if ("marker" !== _0x51fc63["type"]) {
        const _0x35d845 = this["_cloneOperation"](_0x51fc63, this["_diffRoots"]);
        _0x35d845["_execute"](), this["_transformMarkers"](_0x35d845);
      }
      if (_0x184233) switch (_0x51fc63["type"]) {
        case "insert":
          this["_handleInsertOperation"](_0x51fc63);
          break;
        case "move":
        case "remove":
        case "reinsert":
          this["_handleMoveOperation"](_0x51fc63);
          break;
        case "merge":
          this["_handleMergeOperation"](_0x51fc63);
          break;
        case "split":
          this["_handleSplitOperation"](_0x51fc63);
      }
    } else this["_handleRootOperation"](_0x51fc63, _0x184233);
  }
  ["_cloneOperation"](_0x548f54, _0x422e5b) {
    const _0x13b2a6 = _0x548f54["clone"]();
    return _0x13b2a6["_authorId"] = _0x548f54["_authorId"], this["_fixOperation"](_0x13b2a6, _0x422e5b), _0x13b2a6;
  }
  ["_getBaseVids"](_0x12f44d) {
    return _0x12f44d["map"]((_0x1141d7) => {
      const _0x4a5d8d = this["_getVidAttributeName"](_0x1141d7);
      return Number(_0x1141d7["item"]["getAttribute"](_0x4a5d8d));
    });
  }
  ["_generateTape"](_0x29a807, _0x5d63f9) {
    if (_0x29a807["is"]("element", "$text")) _0x5d63f9["push"]({ "item": _0x29a807, "type": "text" });
    else {
      _0x29a807["is"]("element") && _0x5d63f9["push"]({ "item": _0x29a807, "type": "elementStart" });
      for (const _0x2766ef of _0x29a807["getChildren"]()) this["_generateTape"](_0x2766ef, _0x5d63f9);
      _0x29a807["is"]("element") && _0x5d63f9["push"]({ "item": _0x29a807, "type": "elementEnd" });
    }
    return _0x5d63f9;
  }
  ["_getState"]() {
    const _0x13da56 = new Map(this["_touched"]), _0x2c0b5f = new Map(_0x13da56), _0x14f900 = /* @__PURE__ */ new Map(), _0x2683c4 = { "insertions": {}, "deletions": {} }, _0x22f2c3 = { "insertions": {}, "deletions": {} }, _0x463d03 = /* @__PURE__ */ new Map(), _0x13772c = /* @__PURE__ */ new Set([...this["_baseRoots"]["keys"](), ...this["_diffRoots"]["keys"]()]);
    _0x13772c["delete"]("$graveyard");
    for (const _0x1b51aa of _0x13772c) {
      const _0x2f2f75 = this["_diffRoots"]["get"](_0x1b51aa) || G3(_0x1b51aa, false), _0xacac52 = this["_baseRoots"]["get"](_0x1b51aa) || G3(_0x1b51aa, false);
      _0x2f2f75["isAttached"]() || _0xacac52["isAttached"]() ? (_0x2683c4["insertions"][_0x1b51aa] = q6(_0x2f2f75), _0x2683c4["deletions"][_0x1b51aa] = q6(_0xacac52), this["_copyMarkers"](_0x2683c4["deletions"][_0x1b51aa], _0xacac52), this["_copyMarkers"](_0x2683c4["insertions"][_0x1b51aa], _0x2f2f75), _0x22f2c3["insertions"][_0x1b51aa] = this["_generateTape"](this["_idsRoots"]["get"](_0x1b51aa), []), _0x22f2c3["deletions"][_0x1b51aa] = this["_generateTape"](this["_baseIdsRoots"]["get"](_0x1b51aa) || G3(_0x1b51aa, false), [])) : _0x13772c["delete"](_0x1b51aa);
    }
    for (const _0x33ab54 of _0x13772c) {
      const _0x2ec4bf = _0x22f2c3["insertions"][_0x33ab54];
      for (const _0xb30d11 of _0x2ec4bf) {
        const _0x278438 = this["_getVidAttributeName"](_0xb30d11), _0x489132 = _0xb30d11["item"]["getAttribute"](_0x278438);
        _0x2c0b5f["delete"](_0x489132), _0x489132 >= this["_startingRevisionId"] && _0x14f900["set"](_0x489132, _0x13da56["get"](_0x489132));
      }
    }
    for (const _0xbe8422 of _0x13772c) {
      const _0x177bec = _0x22f2c3["insertions"][_0xbe8422], _0x46fe5e = this["_getBaseVids"](_0x22f2c3["deletions"][_0xbe8422]);
      let _0x257dbc = 0;
      for (const _0xf636b3 of _0x177bec) {
        const _0x5aa7c2 = this["_getVidAttributeName"](_0xf636b3), _0x3d2d69 = _0xf636b3["item"]["getAttribute"](_0x5aa7c2);
        if (!_0x14f900["has"](_0x3d2d69) && !_0x463d03["has"](_0x3d2d69)) {
          if (_0x2c0b5f["has"](_0x3d2d69)) _0x257dbc++;
          else {
            if (_0x3d2d69 != _0x46fe5e[_0x257dbc]) {
              const _0x2ad9d5 = _0x13da56["get"](_0x3d2d69) || _0x13da56["get"](_0x46fe5e[_0x257dbc]);
              for (; _0x3d2d69 != _0x46fe5e[_0x257dbc]; ) _0x2c0b5f["has"](_0x46fe5e[_0x257dbc]) || (_0x463d03["set"](_0x46fe5e[_0x257dbc], _0x2ad9d5), _0x13da56["set"](_0x46fe5e[_0x257dbc], _0x2ad9d5)), _0x257dbc++;
            }
            _0x257dbc++;
          }
        }
      }
    }
    for (const _0x270a12 of _0x13772c) {
      const _0x4bbae0 = _0x22f2c3["insertions"][_0x270a12];
      for (const _0x359c24 of _0x4bbae0) {
        const _0x28b216 = this["_getVidAttributeName"](_0x359c24), _0x1bdede = _0x359c24["item"]["getAttribute"](_0x28b216);
        if (_0x463d03["has"](_0x1bdede)) {
          const _0x49c419 = _0x463d03["get"](_0x1bdede);
          _0x2c0b5f["has"](_0x1bdede) || _0x2c0b5f["set"](_0x1bdede, { ..._0x49c419 }), _0x14f900["set"](_0x1bdede, { ..._0x49c419 });
        }
      }
    }
    for (const _0x6de60 of _0x2c0b5f["keys"]()) _0x6de60 >= this["_startingRevisionId"] && _0x2c0b5f["delete"](_0x6de60);
    const _0x2e6e60 = /* @__PURE__ */ new Map();
    for (const _0x32b237 of _0x13772c) {
      let _0xc1c832 = _0x22f2c3["insertions"][_0x32b237];
      for (const _0x744b07 of _0xc1c832) if (_0x744b07["item"]["is"]("element", "tableCell")) {
        const _0x3db361 = this["_getVidAttributeName"](_0x744b07), _0x368d56 = _0x744b07["item"]["getAttribute"](_0x3db361);
        if (_0x14f900["has"](_0x368d56)) {
          const _0x56ebf7 = _0x744b07["item"]["parent"]["parent"]["getAttribute"]("vid_start"), _0x3182d9 = _0x2e6e60["get"](_0x56ebf7) || /* @__PURE__ */ new Set();
          _0x3182d9["add"](_0x14f900["get"](_0x368d56)["userId"]), _0x2e6e60["set"](_0x56ebf7, _0x3182d9);
        }
      }
      _0xc1c832 = _0x22f2c3["deletions"][_0x32b237];
      for (const _0x5ac60d of _0xc1c832) if (_0x5ac60d["item"]["is"]("element", "tableCell")) {
        const _0x5de302 = this["_getVidAttributeName"](_0x5ac60d), _0x4bd40e = _0x5ac60d["item"]["getAttribute"](_0x5de302);
        if (_0x2c0b5f["has"](_0x4bd40e)) {
          const _0x4b415f = _0x5ac60d["item"]["parent"]["parent"]["getAttribute"]("vid_start"), _0x582c7a = _0x2e6e60["get"](_0x4b415f) || /* @__PURE__ */ new Set();
          _0x582c7a["add"](_0x2c0b5f["get"](_0x4bd40e)["userId"]), _0x2e6e60["set"](_0x4b415f, _0x582c7a);
        }
      }
      for (const _0x1831b4 of _0x2e6e60["keys"]()) (_0x14f900["has"](_0x1831b4) || _0x2c0b5f["has"](_0x1831b4)) && _0x2e6e60["delete"](_0x1831b4);
    }
    for (const _0x4a61b9 of _0x13772c) {
      const _0x689b11 = _0x22f2c3["insertions"][_0x4a61b9];
      let _0x11dd43 = null, _0x11dbe7 = null;
      for (const _0x316379 of _0x689b11) {
        const _0xc36d0f = this["_getVidAttributeName"](_0x316379), _0x4a540e = _0x316379["item"]["getAttribute"](_0xc36d0f), _0x435066 = _0x2e6e60["get"](_0x4a540e);
        _0x435066 && "elementStart" == _0x316379["type"] && (_0x11dd43 = Array["from"](_0x435066)[0], _0x11dbe7 = _0x316379["item"]["getAttribute"]("vid_end")), _0x11dd43 && (_0x2c0b5f["set"](_0x4a540e, { "userId": _0x11dd43 }), _0x14f900["set"](_0x4a540e, { "userId": _0x11dd43 })), _0x4a540e == _0x11dbe7 && (_0x11dd43 = null, _0x11dbe7 = null);
      }
    }
    const _0x242ce4 = {}, _0x47eca2 = /* @__PURE__ */ new Set();
    for (const _0x1dca96 of _0x13772c) {
      const _0x2576e5 = _0x2683c4["deletions"][_0x1dca96], _0x887266 = _0x2683c4["insertions"][_0x1dca96];
      for (const { userId: _0x69c82d } of this["_touchedMarkers"]["values"]()) null !== _0x69c82d && _0x47eca2["add"](_0x69c82d);
      for (const { userId: _0x1fe25c } of this["_touchedRoots"]["values"]()) null !== _0x1fe25c && _0x47eca2["add"](_0x1fe25c);
      this["_markChanges"](_0x887266, _0x22f2c3["insertions"][_0x1dca96], _0x14f900, "insertion", _0x47eca2), this["_markChanges"](_0x2576e5, _0x22f2c3["deletions"][_0x1dca96], _0x2c0b5f, "deletion", _0x47eca2), _0x242ce4[_0x1dca96] = { "insertions": this["_prepareViewToSave"](_0x887266), "deletions": this["_prepareViewToSave"](_0x2576e5), "attachChange": this["_touchedRoots"]["get"](_0x1dca96) || null, "attributesBefore": cloneDeep_default(this["_baseRootsAttributes"]["get"](_0x1dca96)) || {}, "attributesAfter": cloneDeep_default(this["_diffRootsAttributes"]["get"](_0x1dca96)) };
    }
    return { "diffData": _0x242ce4, "authorsIds": Array["from"](_0x47eca2) };
  }
  ["_processRootBeforeSave"](_0x220116) {
    for (const [, _0x1de2b6] of _0x220116["markers"]) {
      const _0x5cf4d1 = _0x1de2b6["start"]["getAncestors"]()["filter"]((_0x36de31) => "tableCell" == _0x36de31["name"]);
      for (const _0x12b22b of _0x5cf4d1) 1 == _0x12b22b["childCount"] && _0x12b22b["getChild"](0)["is"]("element", "paragraph") && _0x12b22b["getChild"](0)["_setAttribute"]("keepParagraph", true);
    }
  }
  ["_prepareViewToSave"](_0x3c4921) {
    this["_processRootBeforeSave"](_0x3c4921);
    const _0x1016dd = this["editor"]["data"]["toView"](_0x3c4921, {}), _0x4a21df = Array["from"](_0x1016dd["getChildren"]())["map"]((_0x3ee181) => this["_getViewJson"](_0x3ee181));
    return JSON["stringify"](_0x4a21df);
  }
  ["_getViewJson"](_0x42e744) {
    if (_0x42e744["is"]("$text")) return _0x42e744["data"];
    {
      const _0x421be4 = _0x42e744;
      return { "type": Object["keys"](T5)["find"]((_0x1c6025) => _0x42e744 instanceof T5[_0x1c6025]), "name": _0x421be4["name"], "attributes": Array["from"](_0x421be4["getAttributes"]()), "children": Array["from"](_0x421be4["getChildren"]())["map"]((_0x388928) => this["_getViewJson"](_0x388928)) };
    }
  }
  ["_markChanges"](_0x30038c, _0x13e639, _0x331766, _0x1f9873, _0x10be56) {
    let _0x34163d = null, _0xdd1085 = null, _0xe23a50 = 0;
    const _0x51761f = this["editor"]["model"];
    for (let _0x298c8a = 0; _0x298c8a < _0x13e639["length"]; _0x298c8a++) {
      const _0x18ec91 = this["_getVidAttributeName"](_0x13e639[_0x298c8a]), _0x27cfc1 = _0x13e639[_0x298c8a]["item"]["getAttribute"](_0x18ec91), _0x2207f4 = _0x331766["get"](_0x27cfc1), _0x13ffdc = _0x298c8a == _0x13e639["length"] - 1;
      (!_0x34163d && _0x2207f4 && (_0x34163d = _0x2207f4, _0xdd1085 = _0x13e639[_0x298c8a]), _0x34163d && (!_0x2207f4 || _0x2207f4["userId"] != _0x34163d["userId"])) && (_0x4c1df3(_0x2207f4, L3(_0xdd1085, _0x30038c, _0x51761f), L3(_0x13e639[_0x298c8a], _0x30038c, _0x51761f)), _0x34163d = _0x2207f4 || null, _0xdd1085 = _0x2207f4 ? _0x13e639[_0x298c8a] : null), _0x34163d && _0x13ffdc && _0x4c1df3(_0x2207f4, L3(_0xdd1085, _0x30038c, _0x51761f), W3(_0x13e639[_0x298c8a], _0x30038c, _0x51761f));
    }
    function _0x4c1df3(_0xbe19de, _0x244ff2, _0x30f64a) {
      const _0x5957b = _0x34163d["userId"], _0x13304e = "revision:" + _0x1f9873 + ":" + _0x5957b + ":" + _0xe23a50++, _0x47957b = _0x51761f["createRange"](_0x244ff2, _0x30f64a);
      _0x30038c["markers"]["set"](_0x13304e, _0x47957b), null !== _0x5957b && _0x10be56["add"](_0x5957b);
    }
  }
  ["_getVidAttributeName"](_0x93ceed) {
    switch (_0x93ceed["type"]) {
      case "elementStart":
        return "vid_start";
      case "elementEnd":
        return "vid_end";
      default:
        return "vid";
    }
  }
  ["_fixOperation"](_0x143e04, _0x21a196) {
    _0x143e04["baseVersion"] = null;
    for (const _0x5b28af in _0x143e04) {
      const _0x4b77d9 = _0x143e04[_0x5b28af];
      if (_0x4b77d9 instanceof Position) {
        const _0x2c4644 = _0x21a196["get"](_0x4b77d9["root"]["rootName"]);
        _0x143e04[_0x5b28af] = this["_fixPosition"](_0x4b77d9, _0x2c4644);
      }
      if (_0x4b77d9 instanceof Range) {
        const _0x25a4e7 = _0x21a196["get"](_0x4b77d9["root"]["rootName"]);
        _0x143e04[_0x5b28af] = this["_fixRange"](_0x4b77d9, _0x25a4e7);
      }
      "root" === _0x5b28af && (_0x143e04["root"] = _0x21a196["get"](_0x143e04["root"]["rootName"]));
    }
  }
  ["_fixRange"](_0x5b080f, _0x4fbacf) {
    return this["editor"]["model"]["createRange"](this["_fixPosition"](_0x5b080f["start"], _0x4fbacf), this["_fixPosition"](_0x5b080f["end"], _0x4fbacf));
  }
  ["_fixPosition"](_0x1eb98b, _0x31ab42) {
    return this["editor"]["model"]["createPositionFromPath"](_0x31ab42, _0x1eb98b["path"], _0x1eb98b["stickiness"]);
  }
  ["_handleInsertOperation"](_0x470691) {
    const _0x7e02c4 = this["_idsRoots"]["get"](_0x470691["position"]["root"]["rootName"]), _0x331782 = this["_fixPosition"](_0x470691["position"], _0x7e02c4), _0x11a962 = null === _0x470691["_authorId"] ? null : _0x470691["_authorId"] || this["editor"]["plugins"]["get"]("Users")["me"]["id"], _0x47836e = _0x331782["parent"], _0x365e29 = this["_revisionId"], _0x38243d = [];
    for (const _0x5b47b0 of _0x470691["nodes"]) if (_0x5b47b0["is"]("element")) _0x38243d["push"](this["_makeIdsRoot"](_0x5b47b0));
    else {
      for (let _0x50cdf7 = 0; _0x50cdf7 < _0x5b47b0["offsetSize"]; _0x50cdf7++) _0x38243d["push"](new Element("$text", { "vid": this["_revisionId"]++ }));
    }
    const _0x2e5269 = this["_revisionId"];
    for (let _0x43bcb5 = _0x365e29; _0x43bcb5 < _0x2e5269; _0x43bcb5++) this["_touched"]["set"](_0x43bcb5, { "userId": _0x11a962 });
    _0x47836e["_insertChild"](_0x331782["offset"], _0x38243d);
  }
  ["_handleMoveOperation"](_0x17eb7a) {
    (_0x17eb7a = this["_cloneOperation"](_0x17eb7a, this["_idsRoots"]))["_execute"]();
    const _0x1d8868 = null === _0x17eb7a["_authorId"] ? null : _0x17eb7a["_authorId"] || this["editor"]["plugins"]["get"]("Users")["me"]["id"], _0x24deea = _0x17eb7a["getMovedRangeStart"](), _0x2353d1 = _0x24deea["parent"], _0x3c72e0 = _0x24deea["offset"];
    !function _0x59237a(_0x44d654, _0x119355, _0x1834f1, _0x367017) {
      for (let _0x208752 = _0x1834f1; _0x208752 < _0x367017; _0x208752++) {
        const _0x35f292 = _0x119355["getChild"](_0x208752);
        _0x35f292["is"]("element", "$text") ? _0x44d654["set"](_0x35f292["getAttribute"]("vid"), { "userId": _0x1d8868 }) : (_0x44d654["set"](_0x35f292["getAttribute"]("vid_start"), { "userId": _0x1d8868 }), _0x59237a(_0x44d654, _0x35f292, 0, _0x35f292["childCount"]), _0x44d654["set"](_0x35f292["getAttribute"]("vid_end"), { "userId": _0x1d8868 }));
      }
    }(this["_touched"], _0x2353d1, _0x3c72e0, _0x3c72e0 + _0x17eb7a["howMany"]);
  }
  ["_handleMergeOperation"](_0x2977f8) {
    const _0x400691 = null === (_0x2977f8 = this["_cloneOperation"](_0x2977f8, this["_idsRoots"]))["_authorId"] ? null : _0x2977f8["_authorId"] || this["editor"]["plugins"]["get"]("Users")["me"]["id"], _0x41070f = _0x2977f8["targetPosition"]["parent"], _0x67d0f9 = _0x2977f8["sourcePosition"]["parent"], _0x517d3e = _0x41070f["getAttribute"]("vid_end"), _0x356504 = _0x67d0f9["getAttribute"]("vid_start");
    _0x41070f["_setAttribute"]("vid_end", _0x67d0f9["getAttribute"]("vid_end")), _0x67d0f9["_setAttribute"]("vid_end", _0x517d3e), this["_touched"]["set"](_0x356504, { "userId": _0x400691 }), this["_touched"]["set"](_0x517d3e, { "userId": _0x400691 }), _0x2977f8["_execute"]();
  }
  ["_handleSplitOperation"](_0x4bfec3) {
    const _0x183cf2 = null === (_0x4bfec3 = this["_cloneOperation"](_0x4bfec3, this["_idsRoots"]))["_authorId"] ? null : _0x4bfec3["_authorId"] || this["editor"]["plugins"]["get"]("Users")["me"]["id"], _0x7b5e65 = _0x4bfec3["graveyardPosition"], _0x11327c = _0x4bfec3["splitPosition"]["parent"];
    _0x4bfec3["_execute"]();
    const _0x28f8be = _0x11327c["getAttribute"]("vid_end"), _0x21ed0a = _0x4bfec3["insertionPosition"]["nodeAfter"];
    if (_0x7b5e65) {
      const _0x138539 = _0x21ed0a["getAttribute"]("vid_end"), _0x4318b = _0x11327c["getAttribute"]("vid_end");
      _0x11327c["_setAttribute"]("vid_end", _0x138539), _0x21ed0a["_setAttribute"]("vid_end", _0x4318b), this["_touched"]["set"](_0x11327c["getAttribute"]("vid_end"), { "userId": _0x183cf2 }), this["_touched"]["set"](_0x21ed0a["getAttribute"]("vid_start"), { "userId": _0x183cf2 });
    } else {
      const _0x29bced = this["_revisionId"]++, _0x1da773 = this["_revisionId"]++;
      _0x11327c["_setAttribute"]("vid_end", _0x29bced), _0x21ed0a["_setAttribute"]("vid_start", _0x1da773), _0x21ed0a["_setAttribute"]("vid_end", _0x28f8be), this["_touched"]["set"](_0x29bced, { "userId": _0x183cf2 }), this["_touched"]["set"](_0x1da773, { "userId": _0x183cf2 });
    }
  }
  ["_handleMarkerOperation"](_0x134cd0) {
    if (!_0x134cd0["affectsData"]) return;
    const _0x566b4e = (_0x134cd0 = this["_cloneOperation"](_0x134cd0, this["_diffRoots"]))["oldRange"] ? _0x134cd0["oldRange"]["root"] : null, _0xa28cc = _0x134cd0["newRange"] ? _0x134cd0["newRange"]["root"] : null;
    _0x566b4e && this["_markers"]["delete"](_0x134cd0["name"]), _0xa28cc && this["_markers"]["set"](_0x134cd0["name"], _0x134cd0["newRange"]["clone"]());
    const _0x1d0b30 = null === _0x134cd0["_authorId"] ? null : _0x134cd0["_authorId"] || this["editor"]["plugins"]["get"]("Users")["me"]["id"], _0x9d538c = _0x134cd0["name"];
    if (!this["_touchedMarkers"]["has"](_0x9d538c)) return void this["_touchedMarkers"]["set"](_0x9d538c, { "range": _0x134cd0["oldRange"], "userId": _0x1d0b30 });
    const _0x2c89d3 = this["_touchedMarkers"]["get"](_0x9d538c), _0xb8bc56 = _0x2c89d3["range"], _0xe91366 = _0x134cd0["newRange"];
    null == _0xb8bc56 && null == _0xe91366 || _0xb8bc56 && _0xe91366 && _0xb8bc56["isEqual"](_0xe91366) ? this["_touchedMarkers"]["delete"](_0x134cd0["name"]) : _0x2c89d3["userId"] = _0x1d0b30;
  }
  ["_handleRootOperation"](_0x810894, _0x42c7c5) {
    this["_diffRoots"]["has"](_0x810894["rootName"]) ? this["_diffRoots"]["get"](_0x810894["rootName"])["_isAttached"] = _0x810894["isAdd"] : (this["_diffRoots"]["set"](_0x810894["rootName"], G3(_0x810894["rootName"], true)), this["_diffRootsAttributes"]["set"](_0x810894["rootName"], {}), _0x42c7c5 && this["_idsRoots"]["set"](_0x810894["rootName"], G3(_0x810894["rootName"], true)));
    const _0x2598b3 = null === _0x810894["_authorId"] ? null : _0x810894["_authorId"] || this["editor"]["plugins"]["get"]("Users")["me"]["id"], _0x13a8de = this["_touchedRoots"]["get"](_0x810894["rootName"]);
    _0x13a8de && _0x13a8de["userId"] === _0x2598b3 ? this["_touchedRoots"]["delete"](_0x810894["rootName"]) : this["_touchedRoots"]["set"](_0x810894["rootName"], { "userId": _0x2598b3, "isAttached": _0x810894["isAdd"] });
  }
  ["_handleRootAttributeOperation"](_0x2f5082) {
    const _0x3579ed = this["_diffRootsAttributes"]["get"](_0x2f5082["root"]["rootName"]);
    null === _0x2f5082["newValue"] ? delete _0x3579ed[_0x2f5082["key"]] : _0x3579ed[_0x2f5082["key"]] = _0x2f5082["newValue"];
  }
};
function q6(_0x5e3023) {
  const _0x5ddc2e = G3(_0x5e3023["rootName"], _0x5e3023["isAttached"]());
  for (const _0x37f0ab of _0x5e3023["getChildren"]()) {
    const _0x1b2ee0 = _0x37f0ab["_clone"](true);
    _0x5ddc2e["_appendChild"](_0x1b2ee0);
  }
  return _0x5ddc2e;
}
function G3(_0x6e666, _0x30d0ad = true) {
  const _0x95b79c = new DocumentFragment();
  return _0x95b79c["rootName"] = _0x6e666, _0x95b79c["_isAttached"] = _0x30d0ad, _0x95b79c["isAttached"] = () => _0x95b79c["_isAttached"], _0x95b79c;
}
function L3(_0x508141, _0x159fd0, _0x3e4c6a) {
  const _0x4ffabf = "elementEnd" == _0x508141["type"] ? _0x3e4c6a["createPositionAt"](_0x508141["item"], "end") : _0x3e4c6a["createPositionBefore"](_0x508141["item"]);
  return _0x3e4c6a["createPositionFromPath"](_0x159fd0, _0x4ffabf["path"], _0x4ffabf["stickiness"]);
}
function W3(_0x41d325, _0x35226c, _0x3f772b) {
  const _0x2d54f3 = "elementStart" == _0x41d325["type"] ? _0x3f772b["createPositionAt"](_0x41d325["item"], 0) : _0x3f772b["createPositionAfter"](_0x41d325["item"]);
  return _0x3f772b["createPositionFromPath"](_0x35226c, _0x2d54f3["path"], _0x2d54f3["stickiness"]);
}
var hs2 = class extends View {
  constructor(_0x5b2222, _0x3cdcd5) {
    super(_0x5b2222);
    __publicField(this, "focusTracker");
    __publicField(this, "keystrokes");
    __publicField(this, "revisionNameInputView");
    this["focusTracker"] = new FocusTracker(), this["keystrokes"] = new KeystrokeHandler(), this["set"]("revisionNameInputValue", ""), this["revisionNameInputView"] = this["_createRevisionNameInput"](_0x3cdcd5), this["setTemplate"]({ "tag": "form", "attributes": { "class": ["ck", "ck-revision-history-save-revision-form", "ck-responsive-form"], "tabindex": "-1" }, "children": [this["revisionNameInputView"]] }), injectCssTransitionDisabler(this);
  }
  ["render"]() {
    super["render"](), submitHandler({ "view": this }), this["focusTracker"]["add"](this["revisionNameInputView"]["element"]), this["keystrokes"]["listenTo"](this["element"]);
    const _0x139d16 = (_0xc8a5e9) => _0xc8a5e9["stopPropagation"]();
    this["keystrokes"]["set"]("arrowright", _0x139d16), this["keystrokes"]["set"]("arrowleft", _0x139d16), this["keystrokes"]["set"]("arrowup", _0x139d16), this["keystrokes"]["set"]("arrowdown", _0x139d16);
  }
  ["focus"]() {
    this["revisionNameInputView"]["focus"]();
  }
  get ["revisionName"]() {
    return this["revisionNameInputView"]["fieldView"]["element"]["value"]["trim"]();
  }
  set ["revisionName"](_0x173cfe) {
    this["revisionNameInputView"]["fieldView"]["element"]["value"] = _0x173cfe["trim"]();
  }
  ["reset"]() {
    this["revisionNameInputView"]["fieldView"]["element"]["value"] = "", this["revisionNameInputView"]["errorText"] = null;
  }
  ["_createRevisionNameInput"](_0x23ccb3) {
    const _0x2d6393 = new LabeledFieldView(this["locale"], createLabeledInputText), _0x57bb4d = _0x2d6393["fieldView"];
    _0x57bb4d["extendTemplate"]({ "attributes": { "maxlength": "220" } });
    let _0x5a53d1 = w5(this["locale"], "Name of the revision");
    return !_0x23ccb3 && (_0x5a53d1 += " (" + w5(this["locale"], "optional") + ")"), _0x2d6393["label"] = _0x5a53d1, _0x57bb4d["on"]("input", () => {
      this["revisionNameInputValue"] = _0x57bb4d["element"]["value"]["trim"]();
    }), _0x2d6393;
  }
};
var u7 = class extends Plugin {
  constructor() {
    super(...arguments);
    __publicField(this, "_saveRevisionFormView");
  }
  static get ["pluginName"]() {
    return "RevisionHistoryUI";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  static get ["requires"]() {
    return [l10];
  }
  ["init"]() {
    const _0x1766c0 = this["editor"], _0x332e8f = _0x1766c0["plugins"]["get"]("RevisionTracker");
    _0x1766c0["ui"]["componentFactory"]["add"]("revisionHistory", (_0x3823cd) => {
      const _0x34f466 = createDropdown(_0x3823cd), _0x4d122a = _0x34f466["panelView"]["children"], _0x5d45f7 = new ListView(_0x3823cd), _0x1ee5b0 = new ListItemView(_0x3823cd), _0x8f4749 = new ButtonView(_0x3823cd), _0x455fe3 = new ListItemView(_0x3823cd), _0x3738a6 = new ButtonView(_0x3823cd);
      return _0x34f466["bind"]("isEnabled")["to"](_0x332e8f, "isReady", _0x332e8f, "isEnabled", _0x1766c0, "isReadOnly", (_0x26c665, _0x2f0978, _0x467b20) => _0x26c665 && _0x2f0978 && !_0x467b20), _0x34f466["buttonView"]["set"]({ "icon": icons["history"], "label": w5(_0x3823cd, "Revision history"), "tooltip": true }), _0x8f4749["set"]({ "label": w5(_0x3823cd, "Save current revision"), "withText": true, "role": "menuitem" }), _0x8f4749["bind"]("isEnabled")["to"](_0x332e8f, "isReady", _0x332e8f, "isEnabled", _0x1766c0, "isReadOnly", (_0x4a1a3c, _0x340285, _0x2a26e4) => _0x4a1a3c && _0x340285 && !_0x2a26e4), _0x8f4749["on"]("execute", () => this["_showDialog"]()), _0x3738a6["set"]({ "label": w5(_0x3823cd, "Open revision history"), "withText": true, "role": "menuitem" }), _0x3738a6["bind"]("isEnabled")["to"](_0x332e8f, "isReady", _0x1766c0, "isReadOnly", (_0x24a373, _0x3dfcf4) => _0x24a373 && !_0x3dfcf4), _0x3738a6["on"]("execute", () => {
        _0x1766c0["config"]["get"]("revisionHistory")["showRevisionViewerCallback"](), _0x34f466["isOpen"] = false, _0x1766c0["editing"]["view"]["focus"]();
      }), _0x1ee5b0["children"]["add"](_0x8f4749), _0x455fe3["children"]["add"](_0x3738a6), _0x5d45f7["role"] = "menu", _0x5d45f7["items"]["addMany"]([_0x1ee5b0, _0x455fe3]), _0x4d122a["add"](_0x5d45f7), _0x34f466;
    }), _0x1766c0["ui"]["componentFactory"]["add"]("menuBar:revisionHistory", () => this["_registerMenuComponent"]());
  }
  ["_registerMenuComponent"]() {
    const _0x440382 = this["editor"], _0x150e1a = _0x440382["locale"], _0x3572c1 = new MenuBarMenuView(_0x150e1a), _0x49e773 = new MenuBarMenuListView(_0x150e1a);
    _0x3572c1["buttonView"]["set"]({ "icon": icons["history"], "label": w5(_0x150e1a, "Revision history") });
    const _0x398bf9 = new MenuBarMenuListItemView(_0x150e1a, _0x3572c1), _0x57f5f5 = new MenuBarMenuListItemButtonView(_0x150e1a);
    _0x57f5f5["set"]({ "label": w5(_0x150e1a, "Save current revision") }), _0x57f5f5["delegate"]("execute")["to"](_0x3572c1), _0x57f5f5["on"]("execute", () => {
      this["_showDialog"]();
    }), _0x398bf9["children"]["add"](_0x57f5f5), _0x49e773["items"]["add"](_0x398bf9);
    const _0x253ef5 = new MenuBarMenuListItemView(_0x150e1a, _0x3572c1), _0x15526c = new MenuBarMenuListItemButtonView(_0x150e1a);
    return _0x15526c["set"]({ "label": w5(_0x150e1a, "Open revision history") }), _0x15526c["delegate"]("execute")["to"](_0x3572c1), _0x15526c["on"]("execute", () => {
      _0x440382["config"]["get"]("revisionHistory")["showRevisionViewerCallback"]();
    }), _0x253ef5["children"]["add"](_0x15526c), _0x49e773["items"]["add"](_0x253ef5), _0x3572c1["panelView"]["children"]["add"](_0x49e773), _0x3572c1;
  }
  ["_showDialog"]() {
    const _0x1fe194 = this["editor"], _0x4583d4 = _0x1fe194["locale"], _0x41525d = _0x1fe194["plugins"]["get"]("Dialog"), _0x159dd9 = _0x1fe194["plugins"]["get"]("RevisionTracker");
    function _0x3bcc25(_0x5c7f42) {
      _0x1fe194["config"]["get"]("revisionHistory.requireRevisionName") && "" === _0x5c7f42["revisionName"] ? _0x5c7f42["revisionNameInputView"]["errorText"] = w5(_0x4583d4, "The revision name cannot be empty.") : (_0x1fe194["plugins"]["get"](l10)["saveRevision"]({ "name": _0x5c7f42["revisionName"] }), _0x41525d["hide"]());
    }
    this["_saveRevisionFormView"] || (this["_createSaveRevisionFormView"](), this["_saveRevisionFormView"]["on"]("submit", () => _0x3bcc25(this["_saveRevisionFormView"]))), this["_saveRevisionFormView"]["reset"](), _0x41525d["show"]({ "id": "revisionSave", "title": w5(_0x4583d4, "Save current revision"), "isModal": true, "content": this["_saveRevisionFormView"], "actionButtons": [{ "label": w5(_0x1fe194["locale"], "Cancel"), "withText": true, "onExecute": () => _0x41525d["hide"]() }, { "label": w5(_0x1fe194["locale"], "Accept"), "class": "ck-button-action", "withText": true, "onCreate"(_0x4f690a) {
      _0x4f690a["bind"]("isEnabled")["to"](_0x159dd9, "isReady", _0x159dd9, "isEnabled", _0x1fe194, "isReadOnly", (_0x4cef35, _0x314fbf, _0x1e032c) => _0x4cef35 && _0x314fbf && !_0x1e032c);
    }, "onExecute": () => _0x3bcc25(this["_saveRevisionFormView"]) }] });
  }
  ["_createSaveRevisionFormView"]() {
    const _0x41d2c1 = this["editor"], _0x33174a = _0x41d2c1["locale"];
    this["_saveRevisionFormView"] = new hs2(_0x33174a, _0x41d2c1["config"]["get"]("revisionHistory.requireRevisionName")), this["_saveRevisionFormView"]["render"]();
  }
};
var Z4 = class extends View {
  constructor(_0x1880c5, _0x437f55) {
    super(_0x1880c5);
    __publicField(this, "changeId");
    __publicField(this, "_model");
    this["_model"] = _0x437f55, this["changeId"] = _0x437f55["id"];
    const _0x55b219 = this["bindTemplate"], _0x4c19ce = w5(_0x1880c5, _0x437f55["data"]["isSuggestion"] ? "Suggested by" : "add" == _0x437f55["type"] ? "Added by" : "Removed by");
    this["set"]("type", _0x437f55["type"]), this["setTemplate"]({ "tag": "div", "attributes": { "class": ["ck-annotation", "ck-revision-change", _0x55b219["to"]("type", (_0x163591) => "ck-revision-change__" + _0x163591)], "tabindex": -1 }, "children": [{ "tag": "span", "children": [{ "tag": "span", "attributes": { "class": ["ck-revision-change__label"] }, "children": [{ "text": _0x4c19ce }] }, { "text": " " + _0x437f55["author"]["name"] }] }] });
  }
  ["focus"]() {
    this["element"]["focus"]();
  }
};
var r14 = class extends ObservableMixin() {
  constructor(_0x24d922) {
    super();
    __publicField(this, "id");
    __publicField(this, "author");
    __publicField(this, "type");
    __publicField(this, "data");
    __publicField(this, "rootName");
    this["id"] = _0x24d922["id"] || uid(), this["author"] = _0x24d922["author"], this["type"] = _0x24d922["type"], this["data"] = _0x24d922["data"] || {}, this["rootName"] = _0x24d922["rootName"], this["set"]("createdAt", _0x24d922["createdAt"]);
  }
  ["toJSON"]() {
    return { "id": this["id"], "authorId": this["author"]["id"], "type": this["type"], "data": this["data"], "createdAt": this["createdAt"] };
  }
};
var f7 = class {
  constructor(_0x286d4f, _0x3e0fd9) {
    __publicField(this, "newRevisionId");
    __publicField(this, "oldRevisionId");
    __publicField(this, "changes");
    this["newRevisionId"] = _0x286d4f, this["oldRevisionId"] = _0x3e0fd9, this["changes"] = new Collection();
  }
  ["_setChanges"](_0x5f3471) {
    for (const _0x2969d2 of _0x5f3471) this["changes"]["add"](_0x2969d2);
  }
};
var tt3 = { "c": ContainerElement, "a": AttributeElement, "e": EmptyElement, "r": RawElement, "u": UIElement };
var d6 = class extends Plugin {
  constructor(_0x2db8ab) {
    super(_0x2db8ab);
    __publicField(this, "repository");
    __publicField(this, "adapter");
    __publicField(this, "_activeViewTarget");
    __publicField(this, "_changeView");
    __publicField(this, "_changeIdToChange");
    __publicField(this, "_balloon");
    this["repository"] = this["editor"]["plugins"]["get"]("RevisionsRepository"), this["set"]("activeChange", null), this["set"]("activeView", null), this["_activeViewTarget"] = null, this["set"]("diff", null), this["set"]("isReady", false), this["set"]("isEnabled", true), this["on"]("change:isEnabled", (_0x4c2f1c, _0x420a4d, _0x693af1) => {
      this["activeChange"] = null, this["activeView"] = null, this["editor"]["editing"]["view"]["change"]((_0x27e8bb) => {
        for (const _0x3e2266 of this["editor"]["editing"]["view"]["document"]["roots"]) _0x693af1 ? _0x27e8bb["removeClass"]("ck-editor__editable__overlay", _0x3e2266) : _0x27e8bb["addClass"]("ck-editor__editable__overlay", _0x3e2266);
      });
    }), this["bind"]("isNavigationMode")["to"](this, "activeChange", (_0x1fcd54) => null !== _0x1fcd54), this["bind"]("currentChangeNumber")["to"](this, "isReady", this, "diff", this, "activeChange", (_0x4fd0a4, _0x4a2088, _0x233fff) => _0x4fd0a4 && _0x233fff ? _0x4a2088["changes"]["getIndex"](_0x233fff) : 0), this["bind"]("numberOfChanges")["to"](this, "isReady", this, "diff", (_0xf195ef, _0x7fb82a) => _0xf195ef ? _0x7fb82a["changes"]["length"] : 0), this["_changeView"] = null, this["_changeIdToChange"] = /* @__PURE__ */ new Map(), this["adapter"] = null, this["_balloon"] = this["editor"]["plugins"]["get"](ContextualBalloon);
  }
  static get ["pluginName"]() {
    return "RevisionViewer";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  static get ["requires"]() {
    return [l, ContextualBalloon, A4];
  }
  ["init"]() {
    const _0x2dcccc = this["editor"], _0x5ee854 = new bt2(_0x2dcccc, { "direction": "backward" }), _0x17250d = new bt2(_0x2dcccc, { "direction": "forward" });
    (_0x2dcccc["commands"]["add"]("showPreviousChange", _0x5ee854), _0x2dcccc["commands"]["add"]("showNextChange", _0x17250d), _0x2dcccc["commands"]["add"]("restoreRevision", new yt(_0x2dcccc)), this["on"]("change:numberOfChanges", () => {
      _0x5ee854["refresh"](), _0x17250d["refresh"]();
    }), this["_setConversion"](), this["_initInteractions"](), _0x2dcccc["enableReadOnlyMode"]("revision-viewer"), _0x2dcccc["plugins"]["has"]("WidgetToolbarRepository")) && _0x2dcccc["plugins"]["get"]("WidgetToolbarRepository")["forceDisabled"]("revision-viewer");
  }
  async ["getRevisionData"](_0x280ea5) {
    await this["loadRevisionData"](_0x280ea5);
    const _0x157df0 = {};
    for (const _0x20ed65 in _0x280ea5["diffData"]) {
      if (_0x280ea5["diffData"][_0x20ed65]["attachChange"] && !_0x280ea5["diffData"][_0x20ed65]["attachChange"]["isAttached"]) continue;
      const _0x1d9fb0 = this["_removeRevisionMarkers"](JSON["parse"](_0x280ea5["diffData"][_0x20ed65]["insertions"])), _0x1f6eca = this["editor"]["editing"]["view"]["document"], _0x50a6d6 = new DocumentFragment$1(_0x1f6eca, _0x1d9fb0["map"]((_0x5a1dcf) => this["_getViewObj"](_0x5a1dcf)));
      this["editor"]["data"]["processor"]["useFillerType"]("marked"), _0x157df0[_0x20ed65] = this["editor"]["data"]["processor"]["toData"](_0x50a6d6), this["editor"]["data"]["processor"]["useFillerType"]("default");
    }
    return _0x157df0;
  }
  async ["getRevisionRootsAttributes"](_0x3c63a5) {
    await this["loadRevisionData"](_0x3c63a5);
    const _0x4a5699 = {};
    for (const _0x5c3560 in _0x3c63a5["diffData"]) _0x3c63a5["diffData"][_0x5c3560]["attachChange"] && !_0x3c63a5["diffData"][_0x5c3560]["attachChange"]["isAttached"] || (_0x4a5699[_0x5c3560] = _0x3c63a5["diffData"][_0x5c3560]["attributesAfter"] || {});
    return _0x4a5699;
  }
  ["_removeRevisionMarkers"](_0x24ccde) {
    return (_0x24ccde = _0x24ccde["filter"]((_0x1f5b17) => !_0x1f5b17["name"] || "revision-start" !== _0x1f5b17["name"] && "revision-end" !== _0x1f5b17["name"]))["forEach"]((_0x2b99c3) => {
      "string" != typeof _0x2b99c3 && (_0x2b99c3["children"] = this["_removeRevisionMarkers"](_0x2b99c3["children"]), _0x2b99c3["attributes"] = _0x2b99c3["attributes"]["filter"]((_0x1fc99c) => !_0x1fc99c[0]["startsWith"]("data-revision-")));
    }), _0x24ccde;
  }
  async ["compare"](_0x25ec41, _0x222550, _0x4851f9 = false) {
    if (!this["isEnabled"]) return;
    const _0x22e977 = this["diff"], _0x21b0b4 = this["repository"], _0x3b9b0f = "string" == typeof _0x25ec41 ? _0x21b0b4["getRevision"](_0x25ec41) : _0x25ec41, _0x556890 = "string" == typeof _0x222550 ? _0x21b0b4["getRevision"](_0x222550) : _0x222550, _0x42e933 = _0x3b9b0f["id"], _0x39a1f6 = _0x556890 ? _0x556890["id"] : null;
    if (!_0x4851f9 && this["diff"] && this["diff"]["newRevisionId"] === _0x42e933 && this["diff"]["oldRevisionId"] === _0x39a1f6) return Promise["resolve"]();
    this["isReady"] = false, this["activeView"] = null, this["activeChange"] = null, this["diff"] = new f7(_0x42e933, _0x39a1f6);
    const _0x3adeab = this["_getRevisionsRange"](_0x3b9b0f, _0x556890, true)["map"]((_0x553051) => this["loadRevisionData"](_0x553051));
    return _0x3adeab["push"](new Promise((_0x4123a9) => {
      setTimeout(_0x4123a9, 20);
    })), Promise["all"](_0x3adeab)["then"](() => {
      if (!this["isEnabled"]) return;
      this["_cleanUp"]();
      const _0x255ab8 = this["_getDiff"](_0x42e933, _0x39a1f6);
      for (const _0x3f52ff of _0x255ab8["changes"]) this["_changeIdToChange"]["set"](_0x3f52ff["id"], _0x3f52ff);
      this["editor"]["model"]["enqueueChange"]({ "isUndoable": false }, (_0x24ae73) => {
        for (const _0xfc8fb9 of this["editor"]["model"]["document"]["getRootNames"]()) _0x24ae73["detachRoot"](_0xfc8fb9);
        for (const _0x5de8a9 of Object["keys"](_0x255ab8["model"])) {
          const _0x3901f5 = _0x24ae73["addRoot"](_0x5de8a9);
          for (const _0x35bb35 of Object["keys"](_0x255ab8["attributes"][_0x5de8a9])) _0x24ae73["setAttribute"](_0x35bb35, _0x255ab8["attributes"][_0x5de8a9][_0x35bb35], _0x3901f5);
          _0x24ae73["insert"](_0x255ab8["model"][_0x5de8a9], _0x3901f5, 0);
        }
      }), this["diff"]["_setChanges"](this["_sortAndFilterDiffChanges"](_0x255ab8["changes"])), this["isReady"] = true;
    })["catch"]((_0x21dc13) => {
      console["error"](_0x21dc13), this["_cleanUp"](), _0x22e977 && (this["diff"] = _0x22e977), this["isReady"] = true;
    });
  }
  ["addRevisionData"](_0x5a8d26, _0x1c995f) {
    const _0x44f62d = this["repository"]["createRevision"](_0x5a8d26);
    return _0x44f62d["on"]("_update", (_0x1e7993, _0x1157b5, _0xa5522a) => _0x1c995f(_0x1157b5, _0xa5522a, _0x44f62d)), this["repository"]["addRevision"](_0x44f62d), _0x44f62d;
  }
  ["loadRevisionData"](_0x371d40) {
    if (!_0x371d40 || _0x371d40["diffData"]) return Promise["resolve"]();
    {
      const _0x351f36 = this["editor"]["config"]["get"]("collaboration.channelId");
      return this["adapter"]["getRevision"]({ "channelId": _0x351f36, "revisionId": _0x371d40["id"] })["then"]((_0x12e702) => {
        _0x371d40["_update"]({ "diffData": _0x12e702["diffData"] }, true);
      });
    }
  }
  ["_cleanUp"]() {
    this["activeChange"] = null, this["_cleanMarkers"](), this["_changeView"] && this["_changeView"]["destroy"](), this["_changeView"] = null, this["_changeIdToChange"]["clear"](), this["editor"]["model"]["enqueueChange"]({ "isUndoable": false }, (_0xd53d05) => {
      for (const _0x2184f3 of this["editor"]["model"]["document"]["getRootNames"]()) _0xd53d05["detachRoot"](_0x2184f3);
    });
  }
  ["_sortAndFilterDiffChanges"](_0x5ea08f) {
    const _0x2df255 = [], _0x1b5e6e = /* @__PURE__ */ new Map();
    for (const _0x20db31 of this["editor"]["model"]["document"]["getRootNames"]()) {
      const _0x4efa85 = this["editor"]["editing"]["view"]["getDomRoot"](_0x20db31);
      if (!_0x4efa85) continue;
      const _0x42fc20 = _0x4efa85["getClientRects"]()["item"](0);
      _0x42fc20 && (_0x2df255["push"](_0x20db31), _0x1b5e6e["set"](_0x20db31, _0x42fc20));
    }
    return _0x2df255["sort"]((_0x9f8022, _0x5abb71) => {
      const _0x3bb507 = _0x1b5e6e["get"](_0x9f8022), _0x25318d = _0x1b5e6e["get"](_0x5abb71);
      return _0x3bb507["y"] - _0x25318d["y"] || _0x3bb507["x"] - _0x25318d["x"];
    }), (_0x5ea08f = _0x5ea08f["filter"]((_0x577650) => _0x2df255["includes"](_0x577650["rootName"])))["sort"]((_0x53a8fe, _0x45a757) => _0x2df255["indexOf"](_0x53a8fe["rootName"]) - _0x2df255["indexOf"](_0x45a757["rootName"])), _0x5ea08f;
  }
  ["_makeTape"](_0x1fe604) {
    const _0x3a1087 = Array["from"](_0x1fe604["markers"])["filter"](([_0x4deec1, _0x55a5ac]) => _0x4deec1["startsWith"]("revision:") && !_0x55a5ac["isCollapsed"]), _0xb69bfc = Array["from"](this["editor"]["model"]["createRangeIn"](_0x1fe604)["getWalker"]({ "singleCharacters": true }));
    if (0 != _0x3a1087["length"]) for (const _0x39614f of _0xb69bfc) {
      const [_0x271699, _0x7f107c] = _0x3a1087[0], [, _0x1ad13a, _0x1585dc] = _0x271699["split"](":");
      if (_0x7f107c["end"]["isEqual"](_0x39614f["nextPosition"]) && _0x3a1087["shift"](), (_0x39614f["previousPosition"]["isEqual"](_0x7f107c["start"]) || _0x39614f["previousPosition"]["isAfter"](_0x7f107c["start"])) && ("insertion" == _0x1ad13a ? _0x39614f["isAdded"] = { "userId": _0x1585dc } : "deletion" == _0x1ad13a && (_0x39614f["isRemoved"] = { "userId": _0x1585dc })), 0 == _0x3a1087["length"]) break;
    }
    return _0xb69bfc;
  }
  ["_refreshStartEndIndex"](_0x1fea30) {
    const _0x460a45 = /* @__PURE__ */ new Map();
    for (let _0x36ad33 = 0; _0x36ad33 < _0x1fea30["length"]; _0x36ad33++) "text" === _0x1fea30[_0x36ad33]["type"] ? (_0x1fea30[_0x36ad33]["item"]["startIndex"] = _0x36ad33, _0x1fea30[_0x36ad33]["item"]["endIndex"] = _0x36ad33) : ("elementStart" === _0x1fea30[_0x36ad33]["type"] ? _0x1fea30[_0x36ad33]["item"]["startIndex"] = _0x36ad33 : "elementEnd" === _0x1fea30[_0x36ad33]["type"] && (_0x1fea30[_0x36ad33]["item"]["endIndex"] = _0x36ad33), _0x460a45["set"](_0x1fea30[_0x36ad33]["id"], _0x36ad33));
    for (const _0x4f0f62 of _0x460a45["values"]()) "elementStart" === _0x1fea30[_0x4f0f62]["type"] ? _0x1fea30[_0x4f0f62]["item"]["endIndex"] = _0x460a45["get"](_0x1fea30[_0x4f0f62]["pairId"]) : "elementEnd" === _0x1fea30[_0x4f0f62]["type"] && (_0x1fea30[_0x4f0f62]["item"]["startIndex"] = _0x460a45["get"](_0x1fea30[_0x4f0f62]["pairId"]));
  }
  ["_processTape"](_0x323daa) {
    for (let _0xf9bff1 = 0; _0xf9bff1 < _0x323daa["length"]; _0xf9bff1++) {
      if ("elementStart" === _0x323daa[_0xf9bff1]["type"]) _0x323daa[_0xf9bff1]["item"]["startIndex"] = _0xf9bff1;
      else {
        if ("elementEnd" === _0x323daa[_0xf9bff1]["type"]) {
          _0x323daa[_0xf9bff1]["item"]["endIndex"] = _0xf9bff1;
          const _0xe2ac3d = _0x323daa[_0xf9bff1]["item"]["startIndex"];
          _0x323daa[_0xe2ac3d]["pairId"] = _0x323daa[_0xf9bff1]["id"], _0x323daa[_0xf9bff1]["pairId"] = _0x323daa[_0xe2ac3d]["id"];
        } else _0x323daa[_0xf9bff1]["item"]["startIndex"] = _0xf9bff1, _0x323daa[_0xf9bff1]["item"]["endIndex"] = _0xf9bff1, _0x323daa[_0xf9bff1]["pairId"] = null;
      }
      _0x323daa[_0xf9bff1]["markersStart"] || (_0x323daa[_0xf9bff1]["markersStart"] = [], _0x323daa[_0xf9bff1]["markersEnd"] = []);
    }
  }
  ["_markInsertions"](_0x801460, _0x184fa8) {
    const _0x45a723 = _0x801460["filter"]((_0x29c9dd) => !_0x29c9dd["isAdded"]);
    for (let _0x43c67d = 0; _0x43c67d < _0x184fa8["length"]; _0x43c67d++) _0x184fa8[_0x43c67d]["isAdded"] && (_0x45a723[_0x43c67d]["isAdded"] = _0x184fa8[_0x43c67d]["isAdded"]);
  }
  ["_makeModelFromViewString"](_0x383038) {
    const _0x3aa6f9 = JSON["parse"](_0x383038), _0x42ab29 = this["editor"]["editing"]["view"]["document"], _0x5df3a3 = new DocumentFragment$1(_0x42ab29, _0x3aa6f9["map"]((_0x3e315c) => this["_getViewObj"](_0x3e315c)));
    return this["editor"]["data"]["toModel"](_0x5df3a3);
  }
  ["_getViewObj"](_0x1d762b) {
    const _0x151939 = this["editor"]["editing"]["view"]["document"];
    if ("string" == typeof _0x1d762b) return new Text$1(_0x151939, _0x1d762b);
    {
      const _0x2ffd14 = _0x1d762b["children"]["map"]((_0x3af4bf) => this["_getViewObj"](_0x3af4bf));
      return new (tt3[_0x1d762b["type"]] || Element$1)(_0x151939, _0x1d762b["name"], _0x1d762b["attributes"], _0x2ffd14);
    }
  }
  ["_getDiff"](_0x2a3789, _0x1072a4 = null) {
    const _0x36aed4 = this["repository"]["getRevision"](_0x2a3789), _0x3f6baf = _0x1072a4 ? this["repository"]["getRevision"](_0x1072a4) : null, _0x2d9ea3 = this["_getRevisionsRange"](_0x36aed4, _0x3f6baf), _0x1fe247 = _0x2d9ea3[_0x2d9ea3["length"] - 1], _0x9c6ba6 = /* @__PURE__ */ new Map(), _0x6ee7cb = { "model": {}, "attributes": {}, "changes": [] }, _0x2b1fe5 = /* @__PURE__ */ new Set(), _0xf95f51 = /* @__PURE__ */ new Map();
    for (let _0x2d7917 = _0x2d9ea3["length"] - 1; _0x2d7917 >= 0; _0x2d7917--) {
      const _0x428716 = _0x2d9ea3[_0x2d7917];
      for (const _0x4930e6 of Object["keys"](_0x428716["diffData"])) if (_0x428716["diffData"][_0x4930e6]["attachChange"]) {
        const _0x4f0af7 = _0x428716["diffData"][_0x4930e6]["attachChange"];
        _0x4f0af7["isAttached"] ? (_0x2b1fe5["add"](_0x4930e6), _0xf95f51["has"](_0x4930e6) && _0xf95f51["get"](_0x4930e6)["userId"] == _0x4f0af7["userId"] ? _0xf95f51["delete"](_0x4930e6) : _0xf95f51["set"](_0x4930e6, _0x4f0af7)) : _0xf95f51["has"](_0x4930e6) ? (_0x2b1fe5["delete"](_0x4930e6), _0xf95f51["delete"](_0x4930e6)) : (_0x2b1fe5["add"](_0x4930e6), _0xf95f51["set"](_0x4930e6, _0x4f0af7));
      } else _0x2b1fe5["add"](_0x4930e6);
    }
    for (const _0x1e5d0a of _0x2b1fe5) {
      const _0x2872d2 = _0xf95f51["has"](_0x1e5d0a) && !_0xf95f51["get"](_0x1e5d0a)["isAttached"];
      let _0x2cdebf = _0x2872d2 ? _0x2d9ea3["length"] - 1 : 0;
      const _0x417e26 = _0x2872d2 ? -1 : 1;
      for (; _0x2d9ea3[_0x2cdebf]; ) {
        const _0x4d4526 = _0x2d9ea3[_0x2cdebf];
        if (_0x4d4526["diffData"][_0x1e5d0a]) {
          const _0x5e1cce = _0x2872d2 ? _0x4d4526["diffData"][_0x1e5d0a]["attributesBefore"] : _0x4d4526["diffData"][_0x1e5d0a]["attributesAfter"];
          _0x6ee7cb["attributes"][_0x1e5d0a] = _0x5e1cce ? cloneDeep_default(_0x5e1cce) : {};
          break;
        }
        _0x2cdebf += _0x417e26;
      }
    }
    for (const _0x1df904 of _0x2d9ea3) {
      _0x1df904["model"] = {};
      for (const _0x5ce247 of _0x1df904["authors"]) _0x9c6ba6["set"](_0x5ce247["id"], _0x5ce247);
      for (const _0x8344c of _0x2b1fe5) {
        const _0xf0d33d = _0x1df904["diffData"][_0x8344c] ? _0x1df904["diffData"][_0x8344c]["insertions"] : "[]", _0x59841f = _0x1df904["diffData"][_0x8344c] ? _0x1df904["diffData"][_0x8344c]["deletions"] : "[]";
        _0x1df904["model"][_0x8344c] = { "insertions": this["_makeModelFromViewString"](_0xf0d33d), "deletions": this["_makeModelFromViewString"](_0x59841f) };
      }
    }
    for (const _0x2cd9d0 of _0x2b1fe5) {
      let _0x381958 = null, _0x4c57fa = 0;
      const _0x561c62 = new Map(Array["from"](_0x36aed4["model"][_0x2cd9d0]["insertions"]["markers"])["filter"](([_0x1cac7e]) => !_0x1cac7e["startsWith"]("revision:")));
      let _0x1ecea3 = 0;
      for (const _0x47e9c0 of _0x2d9ea3) {
        const _0x494303 = this["_makeTape"](_0x47e9c0["model"][_0x2cd9d0]["insertions"]);
        _0x47e9c0 == _0x36aed4 ? (_0x381958 = _0x494303, _0x4c57fa = _0x381958["length"], _0x381958["forEach"]((_0x2a3e42) => {
          _0x2a3e42["id"] = _0x1ecea3++;
        }), this["_processTape"](_0x381958)) : this["_markInsertions"](_0x381958, _0x494303);
        const _0x458505 = _0x381958["filter"]((_0x345b0e) => !_0x345b0e["isAdded"])["map"]((_0x248644) => _0x248644["id"]);
        let _0x315b28 = 0;
        const _0x2f8346 = this["_makeTape"](_0x47e9c0["model"][_0x2cd9d0]["deletions"]);
        _0x2f8346["forEach"]((_0x1a1885) => {
          _0x1a1885["isRemoved"] ? _0x1a1885["id"] = _0x4c57fa++ : _0x1a1885["id"] = _0x458505[_0x315b28++];
        }), this["_processTape"](_0x2f8346), this["_setDistance"](_0x381958, "isAdded"), this["_setDistance"](_0x2f8346, "isRemoved"), _0x47e9c0 == _0x36aed4 && this["_markMarkers"](_0x381958, _0x561c62), _0x381958 = this["_joinTapes"](_0x381958, _0x2f8346), this["_refreshStartEndIndex"](_0x381958), this["_setDistance"](_0x381958, "isRemoved");
      }
      _0x381958 = _0x381958["filter"]((_0x1f7110) => !(_0x1f7110["isAdded"] && _0x1f7110["isRemoved"]));
      const _0x58e110 = new Map(_0x1fe247["model"][_0x2cd9d0]["deletions"]["markers"]), _0x2de64e = new Set(_0x561c62["keys"]());
      for (const _0x3a4636 of _0x58e110["keys"]()) _0x2de64e["delete"](_0x3a4636);
      this["_markSuggestions"](_0x381958, _0x2de64e), this["_fixObsoleteTags"](_0x381958), _0x381958 = this["_removeMissingPairs"](_0x381958), _0x381958 = this["_markMismatchedRemovedTags"](_0x381958), _0x381958 = this["_removeUnsupportedChanges"](_0x381958);
      const { root: _0x40a6cc, changes: _0x41dc6f } = this["_makeModelFromTape"](_0x381958, _0x9c6ba6, _0x2cd9d0);
      _0x6ee7cb["model"][_0x2cd9d0] = _0x40a6cc;
      const _0x5794eb = _0xf95f51["get"](_0x2cd9d0);
      if (_0x5794eb) {
        const _0x4ef644 = _0x9c6ba6["get"](_0x5794eb["userId"]), _0x4fdfef = new r14({ "author": _0x4ef644, "type": _0x5794eb["isAttached"] ? "add" : "remove", "data": { "isOnRoot": true }, "createdAt": /* @__PURE__ */ new Date(), "rootName": _0x2cd9d0 });
        _0x41dc6f["unshift"](_0x4fdfef), _0x6ee7cb["attributes"][_0x2cd9d0]["revisionHistoryAttachChange"] = _0x4fdfef["id"];
      }
      _0x6ee7cb["changes"] = _0x6ee7cb["changes"]["concat"](_0x41dc6f);
    }
    return _0x6ee7cb;
  }
  ["_markMarkers"](_0x223974, _0xc5e117) {
    for (let _0xc3ac95 = 0; _0xc3ac95 < _0x223974["length"]; _0xc3ac95++) for (const [_0x3b27ef, _0x5deaae] of _0xc5e117) _0x5deaae["start"]["isEqual"](_0x223974[_0xc3ac95]["previousPosition"]) && _0x223974[_0xc3ac95]["markersStart"]["push"](_0x3b27ef), _0x5deaae["end"]["isEqual"](_0x223974[_0xc3ac95]["nextPosition"]) && _0x223974[_0xc3ac95]["markersEnd"]["push"](_0x3b27ef);
  }
  ["_joinTapes"](_0x4b6a64, _0x465acc) {
    let _0x5cdd46 = [], _0x2c814c = 0, _0x134de1 = 0;
    for (; _0x2c814c < _0x4b6a64["length"] || _0x134de1 < _0x465acc["length"]; ) {
      const _0x54e0df = _0x4b6a64[_0x2c814c] || {}, _0x3b60a9 = _0x465acc[_0x134de1] || {};
      if (_0x54e0df["id"] == _0x3b60a9["id"]) _0x2c814c++, _0x134de1++, _0x5cdd46["push"](_0x54e0df);
      else {
        if (_0x3b60a9["isRemoved"] && _0x54e0df["isAdded"]) {
          const { commonTape: _0x577eb9, iEnd: _0x10a8ba, jEnd: _0x5f564a } = this["_threeWayMerge"](_0x4b6a64, _0x2c814c, _0x465acc, _0x134de1);
          _0x5cdd46 = _0x5cdd46["concat"](_0x577eb9), _0x2c814c = _0x10a8ba, _0x134de1 = _0x5f564a;
        } else _0x3b60a9["isRemoved"] ? (_0x134de1++, _0x5cdd46["push"](_0x3b60a9)) : (_0x2c814c++, _0x5cdd46["push"](_0x54e0df));
      }
    }
    return _0x5cdd46;
  }
  ["_markSuggestions"](_0x3df7ae, _0x586137) {
    const _0x3cf897 = [];
    for (let _0x5bd1aa = 0; _0x5bd1aa < _0x3df7ae["length"]; _0x5bd1aa++) {
      for (let _0x4be980 = 0; _0x4be980 < _0x3df7ae[_0x5bd1aa]["markersStart"]["length"]; _0x4be980++) {
        const _0x4a071b = _0x3df7ae[_0x5bd1aa]["markersStart"][_0x4be980];
        if (!_0x586137["has"](_0x4a071b)) continue;
        const { group: _0x2c4ab4, type: _0x285723, authorId: _0x1d33db } = _0x555373(_0x4a071b);
        "revision-suggestion" != _0x2c4ab4 || "insertion" != _0x285723 && "deletion" != _0x285723 || (_0x3cf897["unshift"]({ "type": _0x285723, "name": _0x4a071b, "userId": _0x1d33db }), _0x3df7ae[_0x5bd1aa]["markersStart"]["splice"](_0x4be980, 1), _0x4be980--);
      }
      _0x21d8f5(_0x3df7ae[_0x5bd1aa]);
      for (let _0x39999d = 0; _0x39999d < _0x3df7ae[_0x5bd1aa]["markersEnd"]["length"]; _0x39999d++) {
        const _0x5289d4 = _0x3df7ae[_0x5bd1aa]["markersEnd"][_0x39999d];
        if (!_0x586137["has"](_0x5289d4)) continue;
        const { group: _0x2d71a1, type: _0x542b99 } = _0x555373(_0x5289d4);
        if ("revision-suggestion" != _0x2d71a1 || "insertion" != _0x542b99 && "deletion" != _0x542b99) continue;
        _0x3df7ae[_0x5bd1aa]["markersEnd"]["splice"](_0x39999d, 1), _0x39999d--;
        const _0x30a288 = _0x3cf897["findIndex"]((_0x199aa3) => _0x199aa3["name"] == _0x5289d4);
        _0x30a288 > -1 && _0x3cf897["splice"](_0x30a288, 1);
      }
    }
    function _0x555373(_0x24019a) {
      const _0x24cd97 = _0x24019a["split"](":");
      return { "group": _0x24cd97[0], "type": _0x24cd97[1], "subType": _0x24cd97["length"] >= 5 ? _0x24cd97[2] : null, "id": _0x24cd97["length"] < 5 ? _0x24cd97[2] : _0x24cd97[3], "authorId": _0x24cd97["length"] < 5 ? _0x24cd97[3] : _0x24cd97[4], "markerCount": 6 == _0x24cd97["length"] ? _0x24cd97[5] : null };
    }
    function _0x21d8f5(_0x6b01c7) {
      for (let _0x1991f4 = 0; _0x1991f4 < _0x3cf897["length"]; _0x1991f4++) {
        if (_0x6b01c7["isAdded"] && "insertion" == _0x3cf897[_0x1991f4]["type"]) return _0x6b01c7["isAddSuggestion"] = _0x3cf897[_0x1991f4], void delete _0x6b01c7["isAdded"];
        if (!_0x6b01c7["isAdded"] && !_0x6b01c7["isRemoved"] && "deletion" == _0x3cf897[_0x1991f4]["type"]) return void (_0x6b01c7["isRemoveSuggestion"] = _0x3cf897[_0x1991f4]);
      }
    }
  }
  ["_setDistance"](_0x58f280, _0x4c23f5) {
    let _0x1135b2 = 0, _0x5ec311 = false;
    const _0x4d390d = /* @__PURE__ */ new Map();
    for (const _0x59c367 of _0x58f280) _0x59c367[_0x4c23f5] ? _0x5ec311 && (_0x1135b2++, _0x5ec311 = false) : (_0x1135b2++, _0x5ec311 = true), _0x4d390d["set"](_0x59c367["id"], _0x1135b2);
    for (let _0x4ffc7c = 0; _0x4ffc7c < _0x58f280["length"]; _0x4ffc7c++) {
      if ("isRemoved" == _0x4c23f5 && _0x58f280[_0x4ffc7c]["isAdded"] || "isAdded" == _0x4c23f5 && _0x58f280[_0x4ffc7c]["isRemoved"]) continue;
      if ("text" == _0x58f280[_0x4ffc7c]["type"]) {
        _0x58f280[_0x4ffc7c]["distance"] = 0;
        continue;
      }
      const _0x494b4a = _0x4d390d["get"](_0x58f280[_0x4ffc7c]["pairId"]), _0x517493 = _0x4d390d["get"](_0x58f280[_0x4ffc7c]["id"]);
      _0x58f280[_0x4ffc7c]["distance"] = _0x494b4a - _0x517493;
    }
  }
  ["_getRevisionsRange"](_0x216847, _0x35fb9e, _0xd09f99 = false) {
    const _0x199afe = [];
    let _0xecce13 = this["repository"]["getIndex"](_0x216847), _0x783bc0 = this["repository"]["getIndex"](_0x35fb9e);
    for (-1 == _0x783bc0 && (_0x783bc0 = this["repository"]["_revisions"]["length"], _0xd09f99 = false); _0xecce13 < _0x783bc0; ) _0x199afe["push"](this["repository"]["getRevision"](_0xecce13)), _0xecce13++;
    return _0xd09f99 && _0x199afe["push"](this["repository"]["getRevision"](_0xecce13)), _0x199afe;
  }
  ["_threeWayMerge"](_0x2a9baa, _0x598a03, _0x41e202, _0x4aa5ba) {
    const _0x1a6ae6 = this["editor"]["model"]["schema"];
    let _0x35fdff = _0x598a03;
    for (; _0x2a9baa[_0x35fdff] && _0x2a9baa[_0x35fdff]["isAdded"]; ) _0x35fdff++;
    let _0x24203b = _0x4aa5ba;
    for (; _0x41e202[_0x24203b] && _0x41e202[_0x24203b]["isRemoved"]; ) _0x24203b++;
    _0xcac10e(_0x2a9baa, _0x598a03, _0x35fdff), _0xcac10e(_0x41e202, _0x4aa5ba, _0x24203b);
    const _0x2176a4 = _0x41e202["slice"](_0x4aa5ba, _0x24203b)["concat"](_0x2a9baa["slice"](_0x598a03, _0x35fdff));
    return _0x2176a4["sort"]((_0x249536, _0x571320) => _0x249536["side"] != _0x571320["side"] ? _0x249536["side"] - _0x571320["side"] : _0x249536["level"] != _0x571320["level"] ? _0x249536["level"] - _0x571320["level"] : _0x249536["distance"] != _0x571320["distance"] ? _0x571320["distance"] - _0x249536["distance"] : !!_0x249536["isAdded"] != !!_0x571320["isAdded"] ? -1 == _0x249536["side"] || 0 == _0x249536["side"] ? _0x249536["isAdded"] ? -1 : 1 : _0x249536["isAdded"] ? 1 : -1 : _0x249536["index"] - _0x571320["index"]), { "commonTape": _0x2176a4, "iEnd": _0x35fdff, "jEnd": _0x24203b };
    function _0xcac10e(_0x429679, _0x2180c6, _0x12065f) {
      let _0x3d4b06 = -1, _0x4bd817 = Number["POSITIVE_INFINITY"], _0x1cf4a5 = true;
      for (let _0x4b7441 = _0x2180c6; _0x4b7441 < _0x12065f; _0x4b7441++) if (_0x1a6ae6["isInline"](_0x429679[_0x4b7441]["item"]) || (_0x1cf4a5 = false), _0x429679[_0x4b7441]["item"]["startIndex"] < _0x2180c6 && (_0x3d4b06 = _0x4b7441), _0x429679[_0x4b7441]["item"]["endIndex"] >= _0x12065f) {
        _0x4bd817 = _0x4b7441;
        break;
      }
      _0x1cf4a5 && (_0x3d4b06 = _0x12065f - 1);
      for (let _0x341bf3 = _0x2180c6; _0x341bf3 < _0x12065f; _0x341bf3++) _0x429679[_0x341bf3]["side"] = _0x341bf3 <= _0x3d4b06 ? -1 : _0x341bf3 < _0x4bd817 ? 0 : 1, _0x429679[_0x341bf3]["index"] = _0x341bf3;
      let _0x1f8e06 = 0;
      for (let _0x1d55e7 = _0x2180c6; _0x1d55e7 <= _0x3d4b06; _0x1d55e7++) 0 == _0x429679[_0x1d55e7]["distance"] ? _0x429679[_0x1d55e7]["level"] = _0x1f8e06 : (_0x1f8e06++, _0x429679[_0x1d55e7]["level"] = _0x1f8e06, _0x1f8e06++);
      for (let _0x142a37 = _0x2180c6; _0x142a37 < _0x12065f; _0x142a37++) 0 == _0x429679[_0x142a37]["side"] && (_0x429679[_0x142a37]["level"] = _0x1f8e06);
      _0x1f8e06 = 0;
      for (let _0x2f53ce = _0x12065f - 1; _0x2f53ce >= _0x4bd817; _0x2f53ce--) 0 == _0x429679[_0x2f53ce]["distance"] ? _0x429679[_0x2f53ce]["level"] = _0x1f8e06 : (_0x1f8e06--, _0x429679[_0x2f53ce]["level"] = _0x1f8e06, _0x1f8e06--);
    }
  }
  ["_fixObsoleteTags"](_0x27bae1) {
    const _0x2d6aee = /* @__PURE__ */ new Map(), _0x458a9a = this["editor"]["model"]["schema"];
    for (let _0x19091c = 1; _0x19091c < _0x27bae1["length"]; _0x19091c++) {
      let _0x289047, _0x4cd206, _0x41d85d;
      const _0x58d629 = _0x27bae1[_0x19091c], _0x211dc8 = _0x27bae1[_0x19091c - 1];
      if ("text" == _0x58d629["type"]) continue;
      if (_0x58d629["type"] != _0x211dc8["type"]) continue;
      if (!_0x458a9a["isBlock"](_0x211dc8["item"]) || _0x458a9a["isLimit"](_0x211dc8["item"])) continue;
      if (!_0x458a9a["isBlock"](_0x58d629["item"]) || _0x458a9a["isLimit"](_0x58d629["item"])) continue;
      if ((_0x27bae1[_0x19091c]["isAdded"] || _0x27bae1[_0x19091c]["isAddSuggestion"]) && _0x27bae1[_0x19091c - 1]["isRemoved"]) _0x289047 = _0x27bae1[_0x19091c], _0x4cd206 = _0x27bae1[_0x19091c - 1], _0x41d85d = _0x19091c - 1;
      else {
        if (!_0x27bae1[_0x19091c]["isRemoved"] || !_0x27bae1[_0x19091c - 1]["isAdded"] && !_0x27bae1[_0x19091c - 1]["isAddSuggestion"]) continue;
        _0x289047 = _0x27bae1[_0x19091c - 1], _0x4cd206 = _0x27bae1[_0x19091c], _0x41d85d = _0x19091c;
      }
      const _0x15b23d = _0x289047["level"] == _0x4cd206["level"], _0xfc27ed = Math["abs"](_0x289047["level"]) < Math["abs"](_0x4cd206["level"]) && 0 == _0x4cd206["distance"];
      (_0x15b23d || _0xfc27ed) && (_0x2d6aee["set"](_0x4cd206["id"], _0x289047["id"]), _0x27bae1["splice"](_0x41d85d, 1), _0x19091c--, _0x289047["isAdded"] = false);
    }
    for (let _0xa8d3a6 = 0; _0xa8d3a6 < _0x27bae1["length"]; _0xa8d3a6++) _0x2d6aee["has"](_0x27bae1[_0xa8d3a6]["pairId"]) && (_0x27bae1[_0xa8d3a6]["pairId"] = _0x2d6aee["get"](_0x27bae1[_0xa8d3a6]["pairId"]));
  }
  ["_removeMissingPairs"](_0x15067a) {
    const _0x1b42e3 = new Set(_0x15067a["map"]((_0x3bec78) => _0x3bec78["id"]));
    for (let _0x2f3b29 = 0; _0x2f3b29 < _0x15067a["length"]; _0x2f3b29++) _0x1b42e3["has"](_0x15067a[_0x2f3b29]["pairId"]) || 0 == _0x15067a[_0x2f3b29]["distance"] || (_0x15067a[_0x2f3b29]["isIncorrect"] = true);
    return _0x15067a["filter"]((_0x21e690) => !_0x21e690["isIncorrect"]);
  }
  ["_markMismatchedRemovedTags"](_0xde8232) {
    const _0x3554b8 = /* @__PURE__ */ new Set();
    for (let _0x3ad748 = 0; _0x3ad748 < _0xde8232["length"]; _0x3ad748++) {
      if (_0x3554b8["has"](_0xde8232[_0x3ad748]["id"]) && _0xde8232[_0x3ad748]["isRemoved"] && (_0xde8232[_0x3ad748]["isIncorrect"] = true), _0xde8232[_0x3ad748]["isIncorrect"]) continue;
      if (0 == _0xde8232[_0x3ad748]["distance"]) continue;
      if ("elementStart" != _0xde8232[_0x3ad748]["type"]) continue;
      if (null == _0xde8232[_0x3ad748]["pairId"]) continue;
      let _0x3f62e9 = _0x3ad748 + 1, _0x2aeb39 = 0;
      for (; _0xde8232[_0x3f62e9]["id"] != _0xde8232[_0x3ad748]["pairId"]; ) "elementStart" == _0xde8232[_0x3f62e9]["type"] ? _0x2aeb39++ : "elementEnd" == _0xde8232[_0x3f62e9]["type"] && _0x2aeb39--, _0x3f62e9++;
      if (0 != _0x2aeb39) {
        if (_0xde8232[_0x3ad748]["isRemoved"]) _0xde8232[_0x3ad748]["isIncorrect"] = true;
        else {
          for (; _0x3f62e9 != _0x3ad748; ) _0xde8232[_0x3f62e9]["isRemoved"] && 0 != _0xde8232[_0x3f62e9]["distance"] && (_0xde8232[_0x3f62e9]["isIncorrect"] = true, _0x3554b8["add"](_0xde8232[_0x3f62e9]["pairId"])), _0x3f62e9--;
        }
      }
    }
    return _0xde8232["filter"]((_0x31a44b) => !_0x31a44b["isIncorrect"]);
  }
  ["_removeUnsupportedChanges"](_0x351fd3) {
    const _0x3a17d5 = this["editor"]["model"]["schema"];
    for (let _0x41ca58 = 0; _0x41ca58 < _0x351fd3["length"]; _0x41ca58++) {
      if (!(_0x351fd3[_0x41ca58]["isAdded"] || _0x351fd3[_0x41ca58]["isAddSuggestion"] || _0x351fd3[_0x41ca58]["isRemoved"] || _0x351fd3[_0x41ca58]["isRemoveSuggestion"])) continue;
      if (0 == _0x351fd3[_0x41ca58]["distance"]) continue;
      const _0x4850ac = _0x351fd3[_0x41ca58]["item"];
      _0x3a17d5["isBlock"](_0x4850ac) || _0x3a17d5["isLimit"](_0x4850ac) || (_0x351fd3[_0x41ca58]["isAdded"] && delete _0x351fd3[_0x41ca58]["isAdded"], _0x351fd3[_0x41ca58]["isAddSuggestion"] && delete _0x351fd3[_0x41ca58]["isAddSuggestion"], _0x351fd3[_0x41ca58]["isRemoveSuggestion"] && delete _0x351fd3[_0x41ca58]["isRemoveSuggestion"], _0x351fd3[_0x41ca58]["isRemoved"] && (_0x351fd3[_0x41ca58]["isIncorrect"] = true));
    }
    return _0x351fd3["filter"]((_0x40e7fd) => !_0x40e7fd["isIncorrect"]);
  }
  ["_makeModelFromTape"](_0x3083d3, _0x215805, _0x1bf6ea) {
    const _0x7e4745 = new DocumentFragment(), _0x2c37f0 = [], _0x1663de = /* @__PURE__ */ new Map(), _0x7fe119 = this["editor"]["model"], _0x64f2fc = _0x7fe119["schema"], _0x521673 = [_0x7e4745], _0x552610 = {}, _0x56c6a5 = { "isAdded": [], "isRemoved": [], "isAddSuggestion": [], "isRemoveSuggestion": [] };
    let _0x27225a = null;
    const _0x2b78e3 = [0];
    for (let _0x403912 = 0; _0x403912 < _0x3083d3["length"]; _0x403912++) if ("elementStart" === _0x3083d3[_0x403912]["type"]) {
      _0x3083d3[_0x403912]["previousPosition"] = _0x7fe119["createPositionFromPath"](_0x7e4745, _0x2b78e3);
      const _0x3f7054 = new Element(_0x3083d3[_0x403912]["item"]["name"], _0x3083d3[_0x403912]["item"]["getAttributes"]());
      _0x521673[0]["_appendChild"](_0x3f7054), _0x2b78e3["push"](0), _0x521673["unshift"](_0x3f7054), _0x3083d3[_0x403912]["nextPosition"] = _0x7fe119["createPositionFromPath"](_0x7e4745, _0x2b78e3);
    } else "elementEnd" === _0x3083d3[_0x403912]["type"] ? (_0x521673["shift"](), _0x3083d3[_0x403912]["previousPosition"] = _0x7fe119["createPositionFromPath"](_0x7e4745, _0x2b78e3), _0x2b78e3["pop"](), _0x2b78e3[_0x2b78e3["length"] - 1]++, _0x3083d3[_0x403912]["nextPosition"] = _0x7fe119["createPositionFromPath"](_0x7e4745, _0x2b78e3)) : (_0x3083d3[_0x403912]["previousPosition"] = _0x7fe119["createPositionFromPath"](_0x7e4745, _0x2b78e3), _0x27225a ? _0x27225a["_data"] += _0x3083d3[_0x403912]["item"]["data"] : _0x27225a = new Text(_0x3083d3[_0x403912]["item"]["data"], _0x3083d3[_0x403912]["item"]["getAttributes"]()), _0x3083d3[_0x403912 + 1] && "text" === _0x3083d3[_0x403912 + 1]["type"] && _0x5415e9(_0x27225a, _0x3083d3[_0x403912 + 1]["item"]) || (_0x521673[0]["_appendChild"](_0x27225a), _0x27225a = null), _0x2b78e3[_0x2b78e3["length"] - 1] += _0x3083d3[_0x403912]["item"]["offsetSize"], _0x3083d3[_0x403912]["nextPosition"] = _0x7fe119["createPositionFromPath"](_0x7e4745, _0x2b78e3));
    for (let _0x1be73b = 0; _0x1be73b < _0x3083d3["length"]; _0x1be73b++) {
      const _0x386ef9 = _0x3083d3[_0x1be73b]["previousPosition"], _0x3fe5d0 = _0x3083d3[_0x1be73b]["nextPosition"];
      for (const _0x43acae of _0x3083d3[_0x1be73b]["markersStart"]) _0x1663de["set"](_0x43acae, { "start": _0x386ef9, "end": null });
      _0x50e2c1("isRemoveSuggestion", _0x1be73b, _0x386ef9, _0x3fe5d0), _0x50e2c1("isAddSuggestion", _0x1be73b, _0x386ef9, _0x3fe5d0), _0x50e2c1("isRemoved", _0x1be73b, _0x386ef9, _0x3fe5d0), _0x50e2c1("isAdded", _0x1be73b, _0x386ef9, _0x3fe5d0);
      for (const _0x3fae1 of _0x3083d3[_0x1be73b]["markersEnd"]) {
        _0x1663de["get"](_0x3fae1)["end"] = _0x3fe5d0;
      }
    }
    for (const [_0x4e1fcc, _0x46b9db] of _0x1663de) {
      const _0x45f722 = this["editor"]["model"]["createRange"](_0x46b9db["start"], _0x46b9db["end"]);
      _0x7e4745["markers"]["set"](_0x4e1fcc, _0x45f722);
    }
    return _0x2c37f0["sort"]((_0x134e3a, _0x310ae7) => {
      const _0x598337 = _0x7e4745["markers"]["get"]("revision:" + _0x134e3a["id"]), _0x58a7e2 = _0x7e4745["markers"]["get"]("revision:" + _0x310ae7["id"]);
      return _0x598337["start"]["isBefore"](_0x58a7e2["start"]) ? -1 : _0x598337["start"]["isAfter"](_0x58a7e2["start"]) ? 1 : _0x598337["end"]["isBefore"](_0x58a7e2["end"]) ? -1 : _0x598337["end"]["isAfter"](_0x58a7e2["end"]) ? 1 : "add" === _0x134e3a["type"] ? -1 : 1;
    }), { "root": _0x7e4745, "changes": _0x2c37f0 };
    function _0x50e2c1(_0x57aebe, _0x2422cd, _0x82e934, _0x3bac88) {
      const _0x58f92a = !!_0x3083d3[_0x2422cd][_0x57aebe], _0x51f3c5 = _0x58f92a ? _0x3083d3[_0x2422cd][_0x57aebe]["userId"] : null, _0x23f6c6 = _0x2422cd === _0x3083d3["length"] - 1, _0x565a6f = _0x56c6a5[_0x57aebe][0], _0x4e7257 = _0x64f2fc["isObject"](_0x3083d3[_0x2422cd]["item"]);
      !_0x552610[_0x57aebe] && _0x58f92a ? _0x552610[_0x57aebe] = { "start": _0x82e934, "tapeItem": _0x3083d3[_0x2422cd], "userId": _0x51f3c5, "type": _0x57aebe } : _0x552610[_0x57aebe] && !_0x58f92a ? (_0x552610[_0x57aebe]["end"] = _0x82e934, _0x414df2(_0x552610[_0x57aebe]), _0x552610[_0x57aebe] = null) : _0x552610[_0x57aebe] && _0x58f92a && _0x552610[_0x57aebe]["userId"] !== _0x51f3c5 && (_0x552610[_0x57aebe]["end"] = _0x82e934, _0x565a6f && _0x565a6f["userId"] === _0x552610[_0x57aebe]["userId"] || _0x414df2(_0x552610[_0x57aebe]), _0x552610[_0x57aebe] = { "start": _0x82e934, "tapeItem": _0x3083d3[_0x2422cd], "userId": _0x51f3c5, "type": _0x57aebe }), _0x552610[_0x57aebe] && _0x4e7257 && ("elementStart" !== _0x3083d3[_0x2422cd]["type"] || _0x565a6f && _0x565a6f["userId"] === _0x51f3c5 || _0x56c6a5[_0x57aebe]["unshift"]({ "userId": _0x51f3c5, "object": _0x3083d3[_0x2422cd]["item"], "change": _0x552610[_0x57aebe] }), "elementEnd" === _0x3083d3[_0x2422cd]["type"] && _0x565a6f && _0x565a6f["object"] === _0x3083d3[_0x2422cd]["item"] && (_0x56c6a5[_0x57aebe]["shift"](), _0x552610[_0x57aebe] = _0x565a6f["change"])), _0x552610[_0x57aebe] && _0x23f6c6 && (_0x552610[_0x57aebe]["end"] = _0x3bac88, _0x414df2(_0x552610[_0x57aebe]), _0x552610[_0x57aebe] = null);
    }
    function _0x414df2({ start: _0x4b0baf, end: _0x28e7d5, tapeItem: _0x1be3de, userId: _0x493553, type: _0x9d16d2 }) {
      const _0x1877e2 = _0x1be3de["item"], _0x304c54 = _0x7fe119["schema"]["isBlock"](_0x1877e2) && !_0x7fe119["schema"]["isLimit"](_0x1877e2), _0x46921c = _0x4b0baf["nodeAfter"] == _0x28e7d5["parent"] && _0x28e7d5["isAtStart"];
      if (_0x304c54 && _0x46921c) return;
      const _0x18a98f = _0x7fe119["createRange"](_0x4b0baf, _0x28e7d5), _0x5a2fdf = _0x215805["get"](_0x493553), _0x521c96 = new r14({ "author": _0x5a2fdf, "type": "isAdded" == _0x9d16d2 || "isAddSuggestion" == _0x9d16d2 ? "add" : "remove", "data": { "isSuggestion": "isAddSuggestion" == _0x9d16d2 || "isRemoveSuggestion" == _0x9d16d2 }, "createdAt": /* @__PURE__ */ new Date(), "rootName": _0x1bf6ea });
      _0x2c37f0["push"](_0x521c96), _0x7e4745["markers"]["set"]("revision:" + _0x521c96["id"], _0x18a98f);
    }
    function _0x5415e9(_0x22eb10, _0x5b7361) {
      const _0x5df673 = _0x22eb10["getAttributes"](), _0x1fc24f = _0x5b7361["getAttributes"]();
      for (const _0x32eb34 of _0x5df673) {
        if (_0x32eb34[1] !== _0x5b7361["getAttribute"](_0x32eb34[0])) return false;
        _0x1fc24f["next"]();
      }
      return _0x1fc24f["next"]()["done"];
    }
  }
  ["_setConversion"]() {
    this["editor"]["conversion"]["for"]("upcast")["dataToMarker"]({ "view": "revision" }), this["editor"]["conversion"]["for"]("editingDowncast")["markerToHighlight"]({ "model": "revision", "view": (_0x1a6090) => {
      const _0xdaa7ae = _0x1a6090["markerName"]["split"](":")[1], _0x4becb9 = this["_getChangeFromId"](_0xdaa7ae);
      if (!_0x4becb9) return null;
      const _0x270001 = "add" == _0x4becb9["type"] ? "insertion" : "deletion", _0x2a47bc = ["ck-suggestion-marker", "ck-suggestion-marker-" + _0x270001];
      return _0x4becb9["data"]["isSuggestion"] && _0x2a47bc["push"]("ck-suggestion-marker-" + _0x270001 + "-new"), this["activeChange"] == _0x4becb9 && _0x2a47bc["push"]("ck-suggestion-marker--active"), { "classes": _0x2a47bc, "attributes": { "data-change-id": _0xdaa7ae } };
    } }), this["editor"]["conversion"]["for"]("upcast")["add"]((_0x5c8af7) => {
      _0x5c8af7["on"]("element:pre", (_0x16ee69, _0x35c293, _0x25905c) => {
        const _0x47a121 = _0x35c293["viewItem"]["getChild"](0);
        if (!_0x47a121 || !_0x47a121["is"]("element", "code")) return;
        if (!_0x25905c["consumable"]["consume"](_0x47a121, { "attributes": ["vid_start", "vid_end"] })) return;
        const _0x3fc7d4 = _0x35c293["modelRange"]["start"]["nodeAfter"];
        _0x25905c["writer"]["setAttribute"]("vid_start", _0x47a121["getAttribute"]("vid_start"), _0x3fc7d4), _0x25905c["writer"]["setAttribute"]("vid_end", _0x47a121["getAttribute"]("vid_end"), _0x3fc7d4);
      }, { "priority": "low" });
    }), this["editor"]["conversion"]["for"]("upcast")["add"]((_0x48964f) => {
      _0x48964f["on"]("element", (_0x24ed55, _0x53eb75, _0x4759f3) => {
        if (!_0x4759f3["consumable"]["consume"](_0x53eb75["viewItem"], { "attributes": ["vid_start", "vid_end"] })) return;
        if (_0x53eb75["modelRange"]["isCollapsed"]) return;
        const _0x224247 = _0x53eb75["modelRange"]["start"]["nodeAfter"];
        _0x224247["hasAttribute"]("vid_start") || _0x224247["hasAttribute"]("vid") || (_0x4759f3["writer"]["setAttribute"]("vid_start", _0x53eb75["viewItem"]["getAttribute"]("vid_start"), _0x224247), _0x4759f3["writer"]["setAttribute"]("vid_end", _0x53eb75["viewItem"]["getAttribute"]("vid_end"), _0x224247));
      }, { "priority": "low" });
    }), this["editor"]["conversion"]["for"]("upcast")["elementToAttribute"]({ "view": { "name": "span", "attributes": { "vid": true } }, "model": { "key": "vid", "value": (_0x5cc469) => _0x5cc469["getAttribute"]("vid") } }), this["editor"]["model"]["schema"]["on"]("checkAttribute", (_0x40b68e, [, _0x20ad82]) => {
      ["vid_start", "vid_end", "vid"]["includes"](_0x20ad82) && (_0x40b68e["return"] = true, _0x40b68e["stop"]());
    }, { "priority": "highest" }), this["editor"]["conversion"]["for"]("dataDowncast")["add"]((_0x4cb085) => {
      _0x4cb085["on"]("attribute:vid", (_0x8eeda5, _0x3dcefa, _0x3f1232) => {
        if (" " != _0x3dcefa["item"]["data"] || _0x3dcefa["item"]["parent"]["maxOffset"] > 1) return;
        if (!_0x3f1232["consumable"]["consume"](_0x3dcefa["item"], _0x8eeda5["name"])) return;
        const _0x143a81 = _0x3f1232["writer"], _0x18fb9c = _0x3f1232["mapper"]["toViewRange"](_0x3dcefa["range"]);
        _0x143a81["wrap"](_0x18fb9c, _0x143a81["createAttributeElement"]("span"));
      });
    }), this["editor"]["conversion"]["for"]("dataDowncast")["markerToData"]({ "model": "revision" }), this["editor"]["editing"]["downcastDispatcher"]["on"]("addMarker:revision", function(_0x4bd626) {
      const _0x4ae9a6 = _0x4bd626["plugins"]["get"]("RevisionViewer");
      return (_0x38596c, _0x3c98b0, _0x2dc285) => {
        const _0x3cfdb7 = _0x3c98b0["markerName"]["split"](":")[1], _0x317036 = _0x4ae9a6["_getChangeFromId"](_0x3cfdb7);
        if (!_0x317036) return null;
        const _0x39db50 = "add" == _0x317036["type"] ? "split" : "merge";
        if (!_0x2dc285["consumable"]["test"](_0x3c98b0["markerRange"], _0x38596c["name"])) return;
        const _0x419fd8 = _0x3c98b0["markerRange"]["getWalker"](), _0x45fdd3 = _0x3c98b0["markerRange"]["start"], _0x1b02cc = _0x4bd626["model"]["schema"];
        let _0x4d687c = null, _0x198c8a = null, _0x91895 = false, _0x119bb5 = false;
        for (const _0x1666e1 of _0x419fd8) {
          const _0x1fada1 = _0x1666e1["item"];
          _0x91895 = _0x91895 || _0x1b02cc["isContent"](_0x1fada1);
          const _0x3ef581 = _0x2dc285["mapper"]["toViewElement"](_0x1fada1);
          if (_0x3ef581 && _0x3ef581["getCustomProperty"]("addHighlight")) return;
          "elementEnd" == _0x1666e1["type"] && (_0x1b02cc["isBlock"](_0x1fada1) && !_0x1b02cc["isLimit"](_0x1fada1) && (_0x1fada1["nextSibling"] || _0x45fdd3["isAtEnd"] ? _0x4d687c && _0x4d687c["parent"] == _0x1fada1 || (_0x4d687c = _0x1fada1, _0x4cee67(_0x1666e1["previousPosition"]), _0x119bb5 = true) : _0x198c8a = _0x198c8a || _0x1666e1["previousPosition"]));
        }
        function _0x4cee67(_0x36dbb0) {
          const _0x58b4d5 = _0x2dc285["writer"]["createUIElement"]("span", { "class": "ck-suggestion-marker-" + _0x39db50 }), _0x50177f = _0x2dc285["mapper"]["toViewPosition"](_0x36dbb0);
          _0x317036["data"]["isSuggestion"] && _0x2dc285["writer"]["addClass"]("ck-suggestion-marker-" + _0x39db50 + "-new", _0x58b4d5), _0x4ae9a6["activeChange"] == _0x317036 && _0x2dc285["writer"]["addClass"]("ck-suggestion-marker--active", _0x58b4d5), _0x2dc285["writer"]["insert"](_0x50177f, _0x58b4d5), _0x2dc285["mapper"]["bindElementToMarker"](_0x58b4d5, _0x3c98b0["markerName"]);
        }
        _0x91895 || _0x119bb5 || !_0x198c8a || _0x4cee67(_0x198c8a);
      };
    }(this["editor"]), { "priority": "high" }), this["editor"]["editing"]["downcastDispatcher"]["on"]("removeMarker:revision", (_0x43db8e, _0x53b1e3, _0xfa8a2f) => {
      const _0x446bb0 = _0xfa8a2f["mapper"]["markerNameToElements"](_0x53b1e3["markerName"]);
      if (_0x446bb0) {
        for (const _0x849c83 of _0x446bb0) (_0x849c83["hasClass"]("ck-suggestion-marker-split") || _0x849c83["hasClass"]("ck-suggestion-marker-merge")) && (_0xfa8a2f["mapper"]["unbindElementFromMarkerName"](_0x849c83, _0x53b1e3["markerName"]), _0xfa8a2f["writer"]["remove"](_0x849c83));
      }
    }, { "priority": "high" }), this["editor"]["editing"]["downcastDispatcher"]["on"]("addMarker:revision", (_0x2457d7, _0x1faab0, _0x13f79c) => {
      const _0x4f91e6 = _0x1faab0["markerName"]["split"](":")[1], _0x191ac8 = this["_getChangeFromId"](_0x4f91e6);
      if (!_0x191ac8) return null;
      const _0x40fece = "add" == _0x191ac8["type"] ? "split" : "merge";
      if (_0x13f79c["consumable"]["test"](_0x1faab0["markerRange"], _0x2457d7["name"])) for (const _0x59bde0 of _0x1faab0["markerRange"]["getItems"]()) {
        if (!_0x59bde0["is"]("element", "softBreak")) continue;
        const _0x21b4f1 = _0x13f79c["writer"]["createUIElement"]("span", { "class": "ck-suggestion-marker-" + _0x40fece }), _0x574b11 = _0x13f79c["mapper"]["toViewPosition"](this["editor"]["model"]["createPositionBefore"](_0x59bde0));
        _0x191ac8["data"]["isSuggestion"] && _0x13f79c["writer"]["addClass"]("ck-suggestion-marker-" + _0x40fece + "-new", _0x21b4f1), this["activeChange"] == _0x191ac8 && _0x13f79c["writer"]["addClass"]("ck-suggestion-marker--active", _0x21b4f1), _0x13f79c["writer"]["insert"](_0x574b11, _0x21b4f1), _0x13f79c["mapper"]["bindElementToMarker"](_0x21b4f1, _0x1faab0["markerName"]);
      }
    }, { "priority": "high" }), this["editor"]["model"]["document"]["on"]("change", () => {
      this["editor"]["editing"]["view"]["change"]((_0x3e59b3) => {
        for (const _0x301df4 of this["editor"]["model"]["document"]["getRootNames"]()) {
          const _0x20cba7 = this["editor"]["model"]["document"]["getRoot"](_0x301df4), _0x52409a = this["editor"]["editing"]["view"]["document"]["getRoot"](_0x301df4);
          if (_0x52409a) {
            const _0x356fe0 = _0x20cba7["getAttribute"]("revisionHistoryAttachChange");
            if (_0x3e59b3["removeAttribute"]("data-change-id", _0x52409a), _0x3e59b3["removeClass"]("ck-revision-history-root-add", _0x52409a), _0x3e59b3["removeClass"]("ck-revision-history-root-remove", _0x52409a), _0x3e59b3["removeClass"]("ck-revision-history-root--active", _0x52409a), _0x356fe0) {
              const _0x56104c = this["_getChangeFromId"](_0x356fe0);
              if (!_0x56104c) return null;
              _0x3e59b3["setAttribute"]("data-change-id", _0x356fe0, _0x52409a), _0x3e59b3["addClass"]("ck-revision-history-root-" + _0x56104c["type"], _0x52409a), this["activeChange"] == _0x56104c && _0x3e59b3["addClass"]("ck-revision-history-root--active", _0x52409a);
            }
          }
        }
      });
    }), this["editor"]["conversion"]["for"]("upcast")["dataToMarker"]({ "view": "comment", "model": (_0x218cbb) => "revision-comment:" + _0x218cbb, "converterPriority": "highest" }), this["editor"]["conversion"]["for"]("upcast")["dataToMarker"]({ "view": "suggestion", "model": (_0x23cab2) => "revision-suggestion:" + _0x23cab2, "converterPriority": "highest" }), this["editor"]["conversion"]["for"]("dataDowncast")["markerToData"]({ "model": "revision-suggestion", "view": (_0x19a8e5) => ({ "name": "suggestion:" + _0x19a8e5, "group": "revision-suggestion" }), "converterPriority": "highest" }), this["editor"]["conversion"]["for"]("editingDowncast")["markerToHighlight"]({ "model": "revision-suggestion", "view": (_0x5a324c) => {
      const _0x59e307 = _0x5a324c["markerName"]["split"](":")[1];
      return "insertion" != _0x59e307 && "deletion" != _0x59e307 ? null : { "classes": ["ck-suggestion-preview-marker", "ck-suggestion-preview-marker-" + _0x59e307] };
    } }), this["editor"]["editing"]["downcastDispatcher"]["on"]("addMarker:revision-suggestion:deletion", et2(this["editor"], "merge"), { "priority": "high" }), this["editor"]["editing"]["downcastDispatcher"]["on"]("addMarker:revision-suggestion:insertion", et2(this["editor"], "split"), { "priority": "high" }), this["editor"]["editing"]["downcastDispatcher"]["on"]("removeMarker:revision-suggestion", (_0x16d6ba, _0x1ab4a9, _0x239087) => {
      const _0x1f9f03 = _0x239087["mapper"]["markerNameToElements"](_0x1ab4a9["markerName"]);
      if (_0x1f9f03) {
        for (const _0x499cee of _0x1f9f03) _0x499cee["is"]("uiElement") && (_0x239087["mapper"]["unbindElementFromMarkerName"](_0x499cee, _0x1ab4a9["markerName"]), _0x239087["writer"]["remove"](_0x499cee));
      }
    }, { "priority": "high" });
  }
  ["_getChangeFromId"](_0x117562) {
    return this["_changeIdToChange"]["get"](_0x117562);
  }
  ["_getViewForChange"](_0xc5ec7f) {
    return this["_changeView"] && this["_changeView"]["destroy"](), this["_changeView"] = new Z4(this["editor"]["locale"], _0xc5ec7f), this["_changeView"];
  }
  ["_initInteractions"]() {
    this["editor"]["model"]["document"]["selection"]["observeMarkers"]("revision"), this["on"]("change:activeView", (_0x35788f, _0x16fc7a, _0x3aee37, _0x18cf3b) => {
      _0x18cf3b && this["_balloon"]["remove"](_0x18cf3b), _0x3aee37 && (this["_balloon"]["add"]({ "view": _0x3aee37, "stackId": "revisionHistoryLabel", "position": { "target": () => {
        const _0x274177 = this["editor"]["editing"], _0x45271 = this["_getChangeFromId"](_0x3aee37["changeId"]);
        let _0x51129a;
        if (_0x45271["data"]["isOnRoot"]) {
          const _0x21a7f0 = _0x274177["view"]["getDomRoot"](_0x45271["rootName"]);
          _0x51129a = Array["from"](_0x21a7f0["getClientRects"]());
        } else {
          const _0x51d652 = this["editor"]["model"]["markers"]["get"]("revision:" + _0x3aee37["changeId"]);
          _0x51129a = Array["from"](_0x274177["mapper"]["markerNameToElements"](_0x51d652["name"]))["map"]((_0x3c111b) => _0x274177["view"]["domConverter"]["mapViewToDom"](_0x3c111b))["map"]((_0x10c800) => Array["from"](_0x10c800["getClientRects"]()))["flat"]();
        }
        if (!this["_activeViewTarget"]) return _0x51129a[0];
        return _0x51129a["find"]((_0x3317f8) => _0x3317f8["top"] - 3 <= this["_activeViewTarget"]["y"] && _0x3317f8["bottom"] + 3 >= this["_activeViewTarget"]["y"] && _0x3317f8["left"] - 3 <= this["_activeViewTarget"]["x"] && _0x3317f8["right"] + 3 >= this["_activeViewTarget"]["x"]) || _0x51129a[0];
      } } }), this["_balloon"]["showStack"]("revisionHistoryLabel"));
    }), this["on"]("change:activeChange", (_0x12a30c, _0x5af931, _0x501e3d, _0x1e73f1) => {
      this["activeView"] = _0x501e3d ? this["_getViewForChange"](_0x501e3d) : null, this["editor"]["model"]["change"](() => {
        const _0x143144 = this["editor"]["editing"];
        _0x1e73f1 && (_0x1e73f1["data"]["isOnRoot"] ? _0x143144["view"]["change"]((_0x514370) => {
          _0x514370["removeClass"]("ck-revision-history-root--active", _0x143144["view"]["document"]["getRoot"](_0x1e73f1["rootName"]));
        }) : _0x143144["reconvertMarker"]("revision:" + _0x1e73f1["id"])), _0x501e3d && (_0x501e3d["data"]["isOnRoot"] ? _0x143144["view"]["change"]((_0x26504b) => {
          _0x26504b["addClass"]("ck-revision-history-root--active", _0x143144["view"]["document"]["getRoot"](_0x501e3d["rootName"]));
        }) : _0x143144["reconvertMarker"]("revision:" + _0x501e3d["id"]));
      });
    }), this["listenTo"](this["editor"]["editing"]["view"]["document"], "mouseover", (_0x4a8a98, _0x2d7718) => {
      if (this["activeChange"]) return;
      const _0x375388 = this["_findChangeIdFromDomTarget"](_0x2d7718["target"]), _0x2850e9 = this["_changeIdToChange"]["get"](_0x375388);
      _0x2850e9 ? (this["_activeViewTarget"] = { "x": _0x2d7718["domEvent"]["x"], "y": _0x2d7718["domEvent"]["y"] }, this["activeView"] = this["_getViewForChange"](_0x2850e9)) : (this["_activeViewTarget"] = null, this["activeView"] = null);
    }), this["listenTo"](this["editor"]["editing"]["view"]["document"], "mousedown", (_0x4c6cab, _0xe62fb5) => {
      const _0x1d64bf = this["_findChangeIdFromDomTarget"](_0xe62fb5["target"]), _0x505318 = this["_changeIdToChange"]["get"](_0x1d64bf);
      _0x505318 ? (this["_activeViewTarget"] = { "x": _0xe62fb5["domEvent"]["x"], "y": _0xe62fb5["domEvent"]["y"] }, _0x505318 === this["activeChange"] ? this["_balloon"]["updatePosition"]() : this["activeChange"] = _0x505318) : (this["_activeViewTarget"] = null, this["activeChange"] = null);
    });
  }
  ["_findChangeIdFromDomTarget"](_0x4e8667) {
    do {
      const _0x4019bc = _0x4e8667["getAttribute"]("data-change-id");
      if (_0x4019bc) return _0x4019bc;
      _0x4e8667 = _0x4e8667["parent"];
    } while (_0x4e8667);
    return null;
  }
  ["_cleanMarkers"]() {
    this["editor"]["model"]["change"]((_0x32e7f4) => {
      for (const _0x235eaf of this["editor"]["model"]["markers"]) _0x32e7f4["removeMarker"](_0x235eaf);
    });
  }
};
function et2(_0x2e4606, _0x3083d6) {
  return (_0x360e3f, _0x182833, _0x4dad49) => {
    if (!_0x4dad49["consumable"]["test"](_0x182833["markerRange"], _0x360e3f["name"])) return;
    const _0x4ffbff = _0x182833["markerRange"]["getWalker"](), _0x4ffb17 = _0x182833["markerRange"]["start"], _0x258ff0 = _0x2e4606["model"]["schema"];
    let _0x4fbc6e = null, _0x3832d0 = null, _0x308490 = false, _0x465890 = false;
    for (const _0x2fc56c of _0x4ffbff) {
      const _0x320136 = _0x2fc56c["item"];
      _0x308490 = _0x308490 || _0x258ff0["isContent"](_0x320136);
      const _0x3e5b7c = _0x4dad49["mapper"]["toViewElement"](_0x320136);
      if (_0x3e5b7c && _0x3e5b7c["getCustomProperty"]("addHighlight")) return;
      "elementEnd" == _0x2fc56c["type"] && (_0x258ff0["isBlock"](_0x320136) && !_0x258ff0["isLimit"](_0x320136) && (_0x320136["nextSibling"] || _0x4ffb17["isAtEnd"] ? _0x4fbc6e && _0x4fbc6e["parent"] == _0x320136 || (_0x4fbc6e = _0x320136, _0x19e306(_0x2fc56c["previousPosition"]), _0x465890 = true) : _0x3832d0 = _0x3832d0 || _0x2fc56c["previousPosition"]));
    }
    function _0x19e306(_0x2bbd55) {
      const _0x1603c2 = _0x4dad49["mapper"]["toViewPosition"](_0x2bbd55), _0x27314b = _0x4dad49["writer"]["createUIElement"]("span", { "class": "ck-suggestion-preview-marker-" + _0x3083d6 });
      _0x4dad49["writer"]["insert"](_0x1603c2, _0x27314b), _0x4dad49["mapper"]["bindElementToMarker"](_0x27314b, _0x182833["markerName"]);
    }
    _0x308490 || _0x465890 || !_0x3832d0 || _0x19e306(_0x3832d0);
  };
}
var yt = class extends Command {
  constructor(_0x112c4d) {
    super(_0x112c4d);
    const _0x5159b2 = _0x112c4d["plugins"]["get"](d6);
    this["affectsData"] = false, this["listenTo"](_0x5159b2, "change:isReady", () => this["refresh"]()), this["listenTo"](_0x5159b2, "change:isEnabled", () => this["refresh"]());
  }
  ["execute"]() {
    const _0x32f457 = this["editor"], _0x3f195a = _0x32f457["plugins"]["get"](d6), _0x58a5e3 = _0x3f195a["isReady"] ? _0x3f195a["diff"]["newRevisionId"] : null;
    _0x32f457["config"]["get"]("revisionHistory")["restoreRevisionCallback"](_0x58a5e3);
  }
  ["refresh"]() {
    const { isReady: _0x5e1b05, isEnabled: _0x101b64 } = this["editor"]["plugins"]["get"](d6);
    this["isEnabled"] = _0x5e1b05 && _0x101b64;
  }
};
var bt2 = class extends Command {
  constructor(_0x23a2e6, { direction: _0x40d7a1 }) {
    super(_0x23a2e6);
    __publicField(this, "_step");
    const _0x47c09e = _0x23a2e6["plugins"]["get"](d6);
    this["affectsData"] = false, this["_step"] = "forward" === _0x40d7a1 ? 1 : -1, this["listenTo"](_0x47c09e, "change:isReady", () => this["refresh"]()), this["listenTo"](_0x47c09e, "change:isEnabled", () => this["refresh"]()), this["listenTo"](_0x47c09e, "change:activeChange", () => this["refresh"]());
  }
  ["execute"]() {
    const _0x5ac784 = this["editor"], _0x360fd5 = _0x5ac784["plugins"]["get"](d6), { isNavigationMode: _0xf71a4e, currentChangeNumber: _0x3fc056 } = _0x360fd5;
    let _0x134031;
    if (_0x360fd5["activeChange"] = _0xf71a4e ? _0x360fd5["diff"]["changes"]["get"](_0x3fc056 + this["_step"]) : _0x360fd5["diff"]["changes"]["first"], _0x360fd5["activeChange"]["data"]["isOnRoot"]) _0x134031 = _0x5ac784["editing"]["view"]["getDomRoot"](_0x360fd5["activeChange"]["rootName"]);
    else {
      const _0x307e14 = _0x5ac784["model"]["markers"]["get"]("revision:" + _0x360fd5["activeChange"]["id"]);
      _0x134031 = g(_0x5ac784["editing"], _0x307e14);
    }
    scrollViewportToShowTarget({ "target": _0x134031, "viewportOffset": 40 });
  }
  ["refresh"]() {
    const { isNavigationMode: _0x3e32d5, currentChangeNumber: _0x11ab0f, numberOfChanges: _0x5979c3, isReady: _0x5eb657, isEnabled: _0x2b477c } = this["editor"]["plugins"]["get"](d6);
    this["isEnabled"] = !!(_0x2b477c && _0x5eb657 && _0x5979c3) && (!_0x3e32d5 || (1 === this["_step"] ? _0x11ab0f < _0x5979c3 - 1 : _0x11ab0f > 0));
  }
};
var _i = class extends View {
  constructor(_0x584011) {
    super(_0x584011);
    const _0x5e87b9 = this["bindTemplate"], _0x1ea3c7 = new ButtonView(_0x584011), _0x1d294c = new ButtonView(_0x584011);
    this["set"]("isNavigationMode", false), this["set"]("isReady", false), this["set"]("currentChangeNumber", 0), this["set"]("numberOfChanges", 0), this["set"]("isForwardNavigationEnabled", false), this["set"]("isBackwardNavigationEnabled", false), this["bind"]("_isStatusLabelVisible")["to"](this, "isReady", this, "numberOfChanges", (_0x53e2c8, _0x5d65e1) => _0x53e2c8 && _0x5d65e1 > 0), this["bind"]("_statusText")["to"](this, "isReady", this, "currentChangeNumber", this, "numberOfChanges", this, "isNavigationMode", (_0xb5497a, _0x187a9b, _0xb61117, _0x5eff1d) => {
      if (!_0xb5497a) return w5(_0x584011, "Loading...");
      if (!_0xb61117) return w5(_0x584011, "No changes");
      const _0x5be022 = w5(_0x584011, "NUMBER_OF_CHANGES", _0xb61117);
      return _0x5eff1d ? w5(_0x584011, "X_OF_Y_CHANGES", [_0x187a9b + 1, _0xb61117]) : _0x5be022;
    }), _0x1ea3c7["set"]({ "label": w5(_0x584011, "Show previous change"), "tooltip": true, "icon": '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M16.435 14.494a.75.75 0 0 0 1.197-.899l-.067-.089-6.992-8a.75.75 0 0 0-1.05-.078l-.079.078-7.008 8a.75.75 0 0 0 1.049 1.066l.08-.078 6.442-7.354 6.428 7.354z"/></svg>\n' }), _0x1d294c["set"]({ "label": w5(_0x584011, "Show next change"), "tooltip": true, "icon": '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M16.435 5.506a.75.75 0 0 1 1.197.899l-.067.089-6.992 8a.75.75 0 0 1-1.05.078l-.079-.078-7.008-8a.75.75 0 0 1 1.049-1.066l.08.078 6.442 7.354 6.428-7.354z"/></svg>\n' }), _0x1ea3c7["bind"]("isEnabled")["to"](this, "isBackwardNavigationEnabled"), _0x1d294c["bind"]("isEnabled")["to"](this, "isForwardNavigationEnabled"), _0x1ea3c7["on"]("execute", () => this["fire"]("execute", "backward")), _0x1d294c["on"]("execute", () => this["fire"]("execute", "forward")), this["setTemplate"]({ "tag": "div", "attributes": { "class": ["ck", "ck-revision-history-ui", "ck-revision-history-ui__changes-navigation"] }, "children": [{ "tag": "span", "attributes": { "class": ["ck-revision-history-ui__changes-navigation__wrapper"] }, "children": [{ "tag": "span", "attributes": { "class": ["ck-revision-history-ui__changes-navigation__label", _0x5e87b9["if"]("_isStatusLabelVisible", "ck-hidden", (_0x4eed85) => !_0x4eed85)] }, "children": [{ "text": _0x5e87b9["to"]("isNavigationMode", (_0x549f7b) => _0x549f7b ? w5(_0x584011, "EDIT_X_OF_Y_REVISIONS") + ": " : w5(_0x584011, "Total") + ": ") }] }, { "text": _0x5e87b9["to"]("_statusText") }] }, new ToolbarSeparatorView(), { "tag": "div", "attributes": { "class": ["ck-revision-history-ui__changes-navigation__navigation"] }, "children": [_0x1ea3c7, _0x1d294c] }] });
  }
};
var ce = "ck-editor__editable__loading-overlay";
var le = class extends Plugin {
  static get ["pluginName"]() {
    return "RevisionViewerLoadingOverlay";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["show"]() {
    const _0x383165 = this["editor"]["editing"]["view"];
    _0x383165["change"]((_0x4f176a) => {
      for (const _0x1ef1dd of _0x383165["document"]["roots"]) _0x4f176a["addClass"](ce, _0x1ef1dd);
    });
  }
  ["hide"]() {
    const _0x5e6aa5 = this["editor"]["editing"]["view"];
    _0x5e6aa5["change"]((_0x53db8a) => {
      for (const _0x1b8a21 of _0x5e6aa5["document"]["roots"]) _0x53db8a["removeClass"](ce, _0x1b8a21);
    });
  }
};
var m10 = class extends Plugin {
  static get ["pluginName"]() {
    return "RevisionViewerUI";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  static get ["requires"]() {
    return [d6, le];
  }
  ["init"]() {
    const _0x13a34c = this["editor"], _0x484b6c = _0x13a34c["plugins"]["get"](d6), _0x39c5cd = _0x13a34c["plugins"]["get"](le);
    _0x13a34c["ui"]["componentFactory"]["add"]("exitToEditing", (_0xa40b49) => {
      const _0x212384 = new ButtonView(_0xa40b49);
      return _0x212384["set"]({ "label": w5(_0xa40b49, "Back to editing"), "icon": icons["undo"], "withText": true, "tooltip": true, "class": "ck-revision-history-ui__back-to-editing" }), this["listenTo"](_0x212384, "execute", () => {
        _0x13a34c["config"]["get"]("revisionHistory")["closeRevisionViewerCallback"]();
      }), _0x212384;
    }), _0x13a34c["ui"]["componentFactory"]["add"]("restoreRevision", (_0x338eaf) => {
      const _0x2bc221 = new ButtonView(_0x338eaf);
      return _0x2bc221["set"]({ "label": w5(_0x338eaf, "Restore this revision"), "withText": true, "tooltip": true }), _0x2bc221["bind"]("isEnabled")["to"](_0x13a34c["commands"]["get"]("restoreRevision")), this["listenTo"](_0x2bc221, "execute", () => _0x13a34c["execute"]("restoreRevision")), _0x2bc221;
    }), _0x13a34c["ui"]["componentFactory"]["add"]("changesNavigation", (_0x153482) => {
      const _0x5d2159 = new _i(_0x153482), _0x1d77fb = _0x13a34c["commands"]["get"]("showPreviousChange"), _0x4a76df = _0x13a34c["commands"]["get"]("showNextChange");
      return _0x5d2159["bind"]("isBackwardNavigationEnabled")["to"](_0x1d77fb, "isEnabled"), _0x5d2159["bind"]("isForwardNavigationEnabled")["to"](_0x4a76df, "isEnabled"), _0x5d2159["bind"]("isReady", "currentChangeNumber", "numberOfChanges", "isNavigationMode")["to"](_0x484b6c), this["listenTo"](_0x5d2159, "execute", (_0x139c1a, _0x51ba4e) => {
        _0x13a34c["execute"]("forward" === _0x51ba4e ? "showNextChange" : "showPreviousChange");
      }), _0x5d2159;
    }), _0x39c5cd["show"](), _0x484b6c["on"]("change:isReady", (_0x28013e, _0x535bbe, _0x295847) => {
      _0x295847 ? _0x39c5cd["hide"]() : _0x39c5cd["show"]();
    });
  }
};
var kt2 = class extends LabeledFieldView {
  constructor(_0x17fe58, _0x24ce9e) {
    super(_0x17fe58, _0x24ce9e);
    __publicField(this, "_resizeObserver", null);
    const _0x279508 = this["bindTemplate"];
    this["set"]({ "label": w5(_0x17fe58, "Revision name"), "_tooltipString": "" }), this["fieldView"]["placeholder"] = w5(_0x17fe58, "Enter the revision name"), this["extendTemplate"]({ "tag": "span", "attributes": { "class": ["ck-revision-history-sidebar__revision-name"], "data-cke-tooltip-text": _0x279508["to"]("_tooltipString"), "data-cke-tooltip-position": "s", "data-cke-tooltip-class": "ck-tooltip_multi-line" } });
  }
  ["render"]() {
    super["render"](), this["_resizeObserver"] = new ResizeObserver(this["fieldView"]["element"], () => this["_updateTooltipText"]()), this["listenTo"](this["fieldView"], "input", () => this["_updateTooltipText"]());
  }
  ["destroy"]() {
    super["destroy"](), this["_resizeObserver"] && this["_resizeObserver"]["destroy"]();
  }
  ["_updateTooltipText"]() {
    const _0x395444 = this["fieldView"]["element"];
    this["_tooltipString"] = _0x395444["scrollWidth"] > _0x395444["clientWidth"] && _0x395444["value"] || "";
  }
};
var ti = class extends View {
  constructor(_0x4d2553, _0x3fb14a, _0x1255d9) {
    super(_0x4d2553);
    const _0x45c1bb = new IconView();
    _0x45c1bb["set"]({ "content": '<svg viewBox="0 0 11 10" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M5.5 5C8.538 5 11 7.015 11 9.5c0 .17-.011.336-.034.5H.034A3.732 3.732 0 0 1 0 9.5C0 7.015 2.462 5 5.5 5zm0-5a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5z" /></svg>\n', "viewBox": "0 0 11 10" });
    const _0x2b63f9 = ["ck", "ck-revision-history-sidebar__revision-author"];
    _0x1255d9 && _0x2b63f9["push"]("ck-revision-history-sidebar__revision-author_creator");
    const _0x42ba06 = [{ "tag": "span", "attributes": { "class": ["ck", "ck-revision-history-sidebar__revision-author__name"], "title": w5(_0x4d2553, _0x1255d9 ? "Revision creator" : "Revision author") }, "children": [_0x45c1bb, _0x3fb14a["name"]] }];
    this["setTemplate"]({ "tag": "li", "attributes": { "class": _0x2b63f9 }, "children": _0x42ba06 });
  }
};
function ni(_0x58a949, _0x54447a) {
  const _0x3bbbd2 = _0x58a949["bindTemplate"], _0x4b224a = _0x58a949["locale"], _0x292368 = createDropdown(_0x4b224a);
  _0x292368["panelPosition"] = "sw";
  const _0x4f9463 = function(_0x381071, _0x11339a) {
    const _0x24a5dc = function(_0xb51439, _0x4da38d) {
      const _0x1809f9 = _0xb51439["locale"], _0x357fd4 = { "Compare against selected": w5(_0x1809f9, "Compare against selected"), "Name this revision": w5(_0x1809f9, "Name this revision"), "Restore this revision": w5(_0x1809f9, "Restore this revision") };
      return _0x4da38d["map"]((_0x201ee6) => {
        const _0x2d8ffc = _0x357fd4[_0x201ee6["name"]];
        return _0x2d8ffc && _0x2d8ffc !== _0x201ee6["name"] && (_0x201ee6["name"] = _0x2d8ffc), _0x201ee6;
      });
    }(_0x381071, _0x11339a), _0x83b0b = new Collection();
    for (const _0x3d0cbc of _0x24a5dc) {
      const _0x56515c = { "type": "button", "model": new Model({ "label": _0x3d0cbc["name"], "class": _0x3d0cbc["class"], "withText": true, "role": "menuitem", "_action": _0x3d0cbc["action"] }) };
      _0x56515c["model"]["bind"]("isEnabled")["to"](_0x381071, "isActionsDropdownOpen", (_0x551666) => "function" != typeof _0x3d0cbc["isEnabled"] || (!_0x551666 || _0x3d0cbc["isEnabled"](_0x381071))), _0x83b0b["add"](_0x56515c);
    }
    return _0x83b0b;
  }(_0x58a949, _0x54447a);
  return _0x58a949["bind"]("isActionsDropdownOpen")["to"](_0x292368, "isOpen"), _0x292368["buttonView"]["set"]({ "label": w5(_0x4b224a, "Show more items"), "tooltip": true, "tooltipPosition": "sw", "icon": icons["threeVerticalDots"] }), _0x292368["extendTemplate"]({ "attributes": { "class": ["ck-revision-history-sidebar__revision__actions", _0x3bbbd2["if"]("isActionsDropdownOpen", "ck-on")] }, "on": { "click": _0x3bbbd2["to"]((_0x37acb3) => _0x37acb3["stopPropagation"]()) } }), _0x292368["on"]("execute", (_0xa35385) => {
    _0x58a949["isReady"] && "function" == typeof _0xa35385["source"]["_action"] && _0xa35385["source"]["_action"](_0x58a949);
  }), addListToDropdown(_0x292368, _0x4f9463, { "role": "menu" }), _0x292368["listenTo"](_0x58a949, "change:isActionsDropdownOpen", (_0x3d6d25, _0x39f39a, _0x18aaee) => {
    if (_0x18aaee) for (const _0x17dbc8 of _0x292368["listView"]["items"]) {
      const _0x4b1379 = _0x17dbc8["children"]["first"], _0x1d161a = _0x54447a["find"]((_0x40a9d0) => _0x40a9d0["action"] === _0x4b1379["_action"])["isVisible"];
      _0x17dbc8["isVisible"] = void 0 === _0x1d161a || _0x1d161a(_0x58a949);
    }
  }), _0x292368;
}
var ai = class extends m(View) {
  constructor(_0x560fef, _0x7ef07e, _0xedbd2d, _0x501d7a) {
    super(_0x560fef);
    __publicField(this, "id");
    __publicField(this, "revisionNameView");
    __publicField(this, "revisionActionsView");
    __publicField(this, "_revision");
    __publicField(this, "_requireRevisionName");
    const _0x343080 = this["bindTemplate"], _0x441099 = function(_0x5b665d, _0x552c5b) {
      const _0x56469b = Array["from"](_0x552c5b["authors"])["filter"]((_0x71b9ea) => _0x71b9ea != _0x552c5b["creator"]);
      return _0x552c5b["creator"] && _0x56469b["unshift"](_0x552c5b["creator"]), _0x56469b["map"]((_0x3e23d9) => new ti(_0x5b665d, _0x3e23d9, _0x3e23d9 == _0x552c5b["creator"]));
    }(_0x560fef, _0x7ef07e);
    this["id"] = _0x7ef07e["id"], this["_revision"] = _0x7ef07e, this["_requireRevisionName"] = _0x501d7a, this["bind"]("name", "createdAt")["to"](_0x7ef07e), this["bind"]("_createdAtFormatted")["to"](this, "createdAt", (_0x1ff15b) => {
      return _0x415af1 = _0x560fef["uiLanguage"], (_0x447859 = _0x1ff15b)["toLocaleDateString"](_0x415af1, { "month": "long", "day": "numeric" }) + ", " + _0x447859["toLocaleTimeString"](_0x415af1, { "hour": "numeric", "minute": "numeric" });
      var _0x415af1, _0x447859;
    }), this["set"]("isSelected", false), this["set"]("isHighlighted", false), this["set"]("isActionsDropdownOpen", false), this["set"]("isReady", false), this["set"]("isEnabled", false), this["revisionNameView"] = new kt2(_0x560fef, createLabeledInputText), this["revisionNameView"]["fieldView"]["extendTemplate"]({ "attributes": { "maxlength": "220" } }), this["revisionNameView"]["fieldView"]["bind"]("value")["to"](this, "name", (_0x328a0c) => _0x328a0c || this["_createdAtFormatted"]), this["revisionNameView"]["bind"]("isEnabled")["to"](this, "isSelected", this, "isEnabled", (_0x528b8f, _0x53e402) => _0x528b8f && _0x53e402), this["revisionActionsView"] = _0xedbd2d && _0xedbd2d["length"] ? ni(this, _0xedbd2d) : "", this["revisionActionsView"] && this["revisionActionsView"]["bind"]("isEnabled")["to"](this), this["setTemplate"]({ "tag": "div", "attributes": { "class": ["ck", "ck-reset", "ck-revision-history-sidebar__revision-wrapper", _0x343080["if"]("isConfirm", "ck-revision-history-sidebar__revision-wrapper_confirmation_visible")] }, "children": [{ "tag": "div", "attributes": { "class": ["ck", "ck-reset", "ck-revision-history-sidebar__revision", _0x343080["if"]("isEnabled", "ck-disabled", (_0x5cedd7) => !_0x5cedd7), _0x343080["if"]("isSelected", "ck-revision-history-sidebar__revision_selected"), _0x343080["if"]("isHighlighted", "ck-revision-history-sidebar__revision_highlighted"), _0x343080["if"]("isActionsDropdownOpen", "ck-revision-history-sidebar__actions_dropdown_open")] }, "children": [this["revisionNameView"], { "tag": "span", "attributes": { "class": ["ck", "ck-revision-history-sidebar__revision__date"] }, "children": [{ "text": _0x343080["to"]("_createdAtFormatted") }] }, { "tag": "div", "attributes": { "class": ["ck", "ck-revision-history-sidebar__revision__controls-wrapper"] }, "children": [{ "tag": "ul", "attributes": { "class": ["ck", "ck-revision-history-sidebar__revision-authors"] }, "children": _0x441099 }] }, this["revisionActionsView"]], "on": { "click": _0x343080["to"]((_0x120f1c) => {
      _0x120f1c["srcElement"]["closest"](".ck-thread__remove-confirm") || this["isReady"] && this["isEnabled"] && this["fire"]("select", { "id": this["id"] });
    }) } }] });
  }
  ["render"]() {
    super["render"]();
    const _0x4c96ec = this["revisionNameView"]["fieldView"]["element"];
    this["listenTo"](_0x4c96ec, "change", () => {
      this["_requireRevisionName"] && !_0x4c96ec["value"] || this["fire"]("setName", { "id": this["id"], "name": _0x4c96ec["value"] }), _0x4c96ec["value"] || (_0x4c96ec["value"] = this["name"] ? this["name"] : this["_createdAtFormatted"]);
    });
  }
  ["select"]() {
    this["isSelected"] = true;
  }
  ["deselect"]() {
    this["isSelected"] = false;
  }
  ["highlight"]() {
    this["isHighlighted"] = true;
  }
  ["unhighlight"]() {
    this["isHighlighted"] = false;
  }
};
function di(_0x22d6d4, _0x5f5103) {
  const _0x14b980 = DateTime["fromJSDate"](_0x22d6d4)["setLocale"](_0x5f5103), _0x1e87d8 = DateTime["local"](), _0x5691d3 = _0x1e87d8["minus"]({ "days": 1 })["startOf"]("day");
  let _0x33595b, _0x1626f9;
  return _0x14b980["hasSame"](_0x1e87d8, "day") ? (_0x33595b = _0x14b980["startOf"]("day")["toJSDate"](), _0x1626f9 = _0x14b980["toRelativeCalendar"]()) : _0x14b980["hasSame"](_0x5691d3, "day") ? (_0x33595b = _0x5691d3["toJSDate"](), _0x1626f9 = _0x14b980["toRelativeCalendar"]()) : _0x14b980["hasSame"](_0x1e87d8, "week") ? (_0x33595b = _0x14b980["startOf"]("week")["toJSDate"](), _0x1626f9 = _0x14b980["weekdayLong"] || "") : _0x14b980["hasSame"](_0x1e87d8, "year") ? (_0x33595b = _0x14b980["startOf"]("month")["toJSDate"](), _0x1626f9 = _0x14b980["monthLong"] || "") : (_0x33595b = _0x14b980["startOf"]("year")["toJSDate"](), _0x1626f9 = String(_0x14b980["year"])), { "startDate": _0x33595b, "localizedPeriodName": _0x1626f9 };
}
var mi = class extends View {
  constructor(_0x4dd45b, _0x2c9cfe, _0x519167, _0x133edf) {
    super(_0x4dd45b);
    __publicField(this, "startDate");
    __publicField(this, "revisionViews");
    __publicField(this, "_revisionActions");
    __publicField(this, "_requireRevisionName");
    const _0x148316 = di(_0x2c9cfe, this["locale"]["uiLanguage"])["localizedPeriodName"];
    this["startDate"] = _0x2c9cfe, this["revisionViews"] = this["createCollection"](), this["_revisionActions"] = _0x519167, this["_requireRevisionName"] = _0x133edf, this["revisionViews"]["delegate"]("select")["to"](this), this["revisionViews"]["delegate"]("setName")["to"](this), this["setTemplate"]({ "tag": "div", "attributes": { "class": ["ck", "ck-revision-history-sidebar__time-period"] }, "children": [{ "tag": "span", "attributes": { "class": ["ck", "ck-revision-history-sidebar__time-period__label"] }, "children": [{ "text": _0x148316 }] }, { "tag": "div", "attributes": { "class": ["ck", "ck-revision-history-sidebar__time-period__revisions"] }, "children": this["revisionViews"] }] });
  }
  ["addRevision"](_0x5de599) {
    const _0x941a46 = new ai(this["locale"], _0x5de599, this["_revisionActions"], this["_requireRevisionName"]);
    this["revisionViews"]["add"](_0x941a46);
  }
  ["removeRevision"](_0x518e63) {
    const _0x18cd08 = this["revisionViews"]["find"]((_0x4852cc) => _0x4852cc["id"] === _0x518e63["id"]);
    this["revisionViews"]["remove"](_0x18cd08);
  }
};
var rs3 = class extends View {
  constructor(_0x40a5ef) {
    super(_0x40a5ef);
    const _0x4bc205 = new IconView();
    _0x4bc205["content"] = icons["history"], this["setTemplate"]({ "tag": "div", "attributes": { "class": ["ck", "ck-reset_all", "ck-revision-history-sidebar__header"] }, "children": [_0x4bc205, { "tag": "span", "attributes": { "class": ["ck", "ck-revision-history-sidebar__header__label"] }, "children": [w5(_0x40a5ef, "Revision history")] }] });
  }
};
var ci = class extends View {
  constructor(_0xf775ed, _0xc84989, _0x2f2129, _0x36df84) {
    super(_0xf775ed);
    __publicField(this, "timePeriodViews");
    __publicField(this, "_revisions");
    __publicField(this, "_revisionActions");
    __publicField(this, "_requireRevisionName");
    const _0x400de0 = this["bindTemplate"];
    this["timePeriodViews"] = this["createCollection"](), this["timePeriodViews"]["delegate"]("select")["to"](this), this["timePeriodViews"]["delegate"]("setName")["to"](this), this["_revisions"] = _0xc84989, this["_revisionActions"] = _0x2f2129, this["_requireRevisionName"] = _0x36df84, this["on"]("select", (_0x253819, _0x54c82b) => {
      this["fire"]("revisionSelected", _0x54c82b);
    }), this["on"]("setName", (_0xadda22, _0x13d4f1) => {
      this["fire"]("revisionSetName", _0x13d4f1);
    }), this["set"]("isEnabled", false), this["setTemplate"]({ "tag": "div", "attributes": { "class": ["ck", "ck-reset", "ck-rounded-corners", "ck-revision-history-sidebar"] }, "children": [new rs3(_0xf775ed), { "tag": "div", "attributes": { "class": ["ck", "ck-revision-history-sidebar__timeline", _0x400de0["if"]("isEnabled", "ck-disabled", (_0x21abc4) => !_0x21abc4)] }, "children": this["timePeriodViews"] }] });
  }
  ["render"]() {
    super["render"]();
    for (const _0x28c4d2 of this["_revisions"]) this["_addRevision"](_0x28c4d2);
    this["_revisions"]["on"]("add", (_0x1f9b59, _0x5c9bb4) => {
      this["_addRevision"](_0x5c9bb4);
    }), this["_revisions"]["on"]("remove", (_0x199bcd, _0x2f41f0) => {
      this["_removeRevision"](_0x2f41f0);
    });
  }
  get ["revisionViews"]() {
    return this["timePeriodViews"]["map"]((_0x3a8f4c) => _0x3a8f4c["revisionViews"]["map"]((_0xe50d3c) => _0xe50d3c))["flat"]();
  }
  ["selectRevision"](_0x6a0874) {
    for (const _0xf7c08f of this["revisionViews"]) _0x6a0874 && _0x6a0874["id"] === _0xf7c08f["id"] ? _0xf7c08f["select"]() : _0xf7c08f["deselect"]();
  }
  ["highlightRevisions"](_0x3e99ef) {
    for (const _0x498ecf of this["revisionViews"]) _0x3e99ef["some"](({ id: _0x1cbf5c }) => _0x1cbf5c === _0x498ecf["id"]) ? _0x498ecf["highlight"]() : _0x498ecf["unhighlight"]();
  }
  ["_addRevision"](_0x1865ea) {
    const _0x4ba2e2 = di(_0x1865ea["createdAt"], this["locale"]["uiLanguage"])["startDate"];
    let _0x131299 = this["timePeriodViews"]["get"](0);
    _0x131299 && _0x131299["startDate"]["getTime"]() === _0x4ba2e2["getTime"]() || (_0x131299 = new mi(this["locale"], _0x4ba2e2, this["_revisionActions"], this["_requireRevisionName"]), this["timePeriodViews"]["add"](_0x131299)), _0x131299["addRevision"](_0x1865ea);
  }
  ["_removeRevision"](_0xf4999) {
    const _0x594a38 = di(_0xf4999["createdAt"], this["locale"]["uiLanguage"])["startDate"];
    this["_getTimePeriodViewByStartDate"](_0x594a38)["removeRevision"](_0xf4999);
  }
  ["_getTimePeriodViewByStartDate"](_0x1a2790) {
    return this["timePeriodViews"]["find"]((_0x1c1c63) => _0x1c1c63["startDate"]["getTime"]() === _0x1a2790["getTime"]());
  }
};
var _R = class _R extends Plugin {
  constructor(_0x5e3313) {
    super(_0x5e3313);
    __publicField(this, "_revisionViewer");
    __publicField(this, "_revisionsRepository");
    __publicField(this, "_sidebarView");
    this["_revisionViewer"] = _0x5e3313["plugins"]["get"](d6), this["_revisionsRepository"] = this["_revisionViewer"]["repository"], this["_sidebarView"] = null;
  }
  static get ["pluginName"]() {
    return "RevisionsSidebar";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  static get ["requires"]() {
    return [d6];
  }
  ["init"]() {
    const _0x2af664 = this["_revisionsRepository"]["_revisions"], _0x8a3481 = this["_createRevisionActions"](), _0x1a2eea = this["editor"]["config"]["get"]("revisionHistory.viewerSidebarContainer");
    this["_sidebarView"] = new ci(this["editor"]["locale"], _0x2af664, _0x8a3481, this["editor"]["config"]["get"]("revisionHistory.requireRevisionName")), this["_sidebarView"]["on"]("revisionSelected", this["_handleRevisionSelected"]["bind"](this)), this["_sidebarView"]["on"]("revisionSetName", this["_handleRevisionSetName"]["bind"](this)), this["_sidebarView"]["bind"]("isEnabled")["to"](this["_revisionViewer"]), this["_sidebarView"]["timePeriodViews"]["on"]("add", (_0x25de40, _0x22311a) => {
      _0x22311a["revisionViews"]["on"]("add", (_0x4f77e4, _0x4c3f26) => {
        _0x4c3f26["bind"]("isEnabled", "isReady")["to"](this["_revisionViewer"]);
      });
    }), this["_sidebarView"]["render"](), this["listenTo"](this["editor"]["data"], "ready", this["_handleEditorDataReady"]["bind"](this)), this["listenTo"](this["_revisionViewer"], "change:diff", this["_handleDiffChange"]["bind"](this)), _0x1a2eea["appendChild"](this["_sidebarView"]["element"]);
  }
  ["destroy"]() {
    this["_sidebarView"]["element"]["remove"](), this["_sidebarView"]["destroy"]();
  }
  ["_handleEditorDataReady"]() {
    const _0x54b6f3 = this["_revisionsRepository"]["getRevision"](0);
    if (_0x54b6f3) {
      const _0x154740 = this["_revisionsRepository"]["getEarlierVisibleRevision"](_0x54b6f3["id"]);
      this["_revisionViewer"]["compare"](_0x54b6f3, _0x154740);
    }
  }
  ["_handleRevisionSelected"](_0x460a6f, _0x47adea) {
    const _0x5918bb = this["_revisionsRepository"]["getRevision"](_0x47adea["id"]), _0xdfd1d3 = this["_revisionsRepository"]["getEarlierVisibleRevision"](_0x5918bb["id"]);
    this["_revisionViewer"]["compare"](_0x5918bb, _0xdfd1d3);
  }
  ["_handleRevisionSetName"](_0x285bb4, _0x516c5b) {
    this["_revisionsRepository"]["getRevision"](_0x516c5b["id"])["setName"](_0x516c5b["name"]);
  }
  ["_handleDiffChange"](_0x3899de, _0x54c792, _0x515441) {
    const _0x349b23 = this["_revisionsRepository"]["getRevisionsInDiff"](_0x515441);
    _0x349b23["length"] > 2 ? (this["_sidebarView"]["highlightRevisions"](_0x349b23), this["_sidebarView"]["selectRevision"](null)) : (this["_sidebarView"]["highlightRevisions"]([]), this["_sidebarView"]["selectRevision"](_0x349b23[0]));
  }
  ["_createRevisionActions"]() {
    const _0x5aec2e = this["editor"], _0x6dafed = _R["availableRevisionActions"], _0x45e3db = _0x5aec2e["config"]["get"]("revisionHistory.revisionActions") || _R["defaultRevisionActions"];
    if (_0x45e3db["length"]) return _0x45e3db["map"]((_0x39eb80) => {
      const _0x21b37a = "string" == typeof _0x39eb80 ? Object["assign"]({}, _0x6dafed[_0x39eb80]) : _0x39eb80;
      return _0x21b37a["action"] = _0x21b37a["action"]["bind"](this, _0x5aec2e), _0x21b37a["isVisible"] && (_0x21b37a["isVisible"] = _0x21b37a["isVisible"]["bind"](this, _0x5aec2e)), _0x21b37a;
    });
  }
};
__publicField(_R, "defaultRevisionActions", /* @__PURE__ */ (() => ["compareAgainstSelected", "restoreRevision", "nameRevision"])());
__publicField(_R, "availableRevisionActions", Rt());
var R5 = _R;
function Rt() {
  return { "compareAgainstSelected": { "name": "Compare against selected", "action": ({ plugins: _0x1a7e69 }, _0x58eff3) => {
    const _0x384eb8 = _0x1a7e69["get"](d6), _0x7b542c = _0x384eb8["repository"];
    let _0x104e68 = _0x384eb8["diff"]["newRevisionId"], _0x37c833 = _0x58eff3["id"];
    _0x7b542c["getIndex"](_0x104e68) > _0x7b542c["getIndex"](_0x37c833) && ([_0x104e68, _0x37c833] = [_0x37c833, _0x104e68]), _0x384eb8["compare"](_0x104e68, _0x37c833);
  }, "isVisible": ({ plugins: _0x2477ab }, _0x5c6b87) => {
    const _0xd8db28 = _0x2477ab["get"](d6);
    return !(_0xd8db28["repository"]["getRevisionsInDiff"](_0xd8db28["diff"])["length"] > 2) && !_0x5c6b87["isSelected"];
  } }, "restoreRevision": { "name": "Restore this revision", "action": (_0x143425, { id: _0x24f2f2 }) => {
    _0x143425["config"]["get"]("revisionHistory")["restoreRevisionCallback"](_0x24f2f2);
  }, "isVisible": ({ plugins: _0x2ea5cb }, _0x21c575) => !!_0x2ea5cb["get"](d6)["repository"]["getLaterVisibleRevision"](_0x21c575["id"]) }, "nameRevision": { "name": "Name this revision", "action": ({ plugins: _0x31fc48 }, { id: _0x183074, revisionNameView: _0x331825 }) => {
    const _0x203a9f = _0x31fc48["get"](d6), _0x2138ca = _0x203a9f["repository"]["getEarlierVisibleRevision"](_0x183074);
    _0x203a9f["compare"](_0x183074, _0x2138ca), _0x331825["focus"](), _0x331825["fieldView"]["select"]();
  } } };
}
var st2 = class extends EditorUI {
  constructor(_0x55408b, _0x3ce376) {
    super(_0x55408b);
    __publicField(this, "_view");
    __publicField(this, "_toolbarConfig");
    __publicField(this, "_elementReplacer");
    this["_view"] = _0x3ce376, this["_toolbarConfig"] = normalizeToolbarConfig(_0x55408b["config"]["get"]("toolbar")), this["_elementReplacer"] = new ElementReplacer();
  }
  get ["view"]() {
    return this["_view"];
  }
  get ["element"]() {
    return this["view"]["element"];
  }
  ["init"](_0xf3d6d2) {
    const _0x49c612 = this["editor"], _0x2504f3 = this["view"], _0x5306a1 = _0x49c612["editing"]["view"], _0x38a5b1 = _0x2504f3["editable"], _0x23b610 = _0x5306a1["document"]["getRoot"]();
    _0x38a5b1["name"] = _0x23b610["rootName"], _0x2504f3["render"]();
    const _0x388ba6 = _0x38a5b1["element"];
    this["setEditableElement"](_0x38a5b1["name"], _0x388ba6), _0x2504f3["editable"]["bind"]("isFocused")["to"](this["focusTracker"]), _0x5306a1["attachDomRoot"](_0x388ba6), this["_elementReplacer"]["replace"](_0xf3d6d2, this["element"]), this["_initToolbar"](), this["fire"]("ready");
  }
  ["destroy"]() {
    super["destroy"]();
    const _0x4f9894 = this["view"], _0x1ab42 = this["editor"]["editing"]["view"];
    this["_elementReplacer"]["restore"](), _0x1ab42["detachDomRoot"](_0x4f9894["editable"]["name"]), _0x4f9894["destroy"]();
  }
  ["_initToolbar"]() {
    const _0x53bd91 = this["view"];
    _0x53bd91["stickyPanel"]["bind"]("isActive")["to"](this["focusTracker"], "isFocused"), _0x53bd91["stickyPanel"]["limiterElement"] = _0x53bd91["element"], _0x53bd91["stickyPanel"]["bind"]("viewportTopOffset")["to"](this, "viewportOffset", ({ top: _0x291b34 }) => _0x291b34), _0x53bd91["toolbar"]["fillFromConfig"](this["_toolbarConfig"], this["componentFactory"]), this["addToolbar"](_0x53bd91["toolbar"]);
  }
};
var ot2 = class extends BoxedEditorUIView {
  constructor(_0x1a3cda, _0x21a535, _0x3cdd6a = {}) {
    super(_0x1a3cda);
    __publicField(this, "_editable");
    __publicField(this, "stickyPanel");
    __publicField(this, "toolbar");
    this["stickyPanel"] = new StickyPanelView(_0x1a3cda), this["toolbar"] = new ToolbarView(_0x1a3cda, { "shouldGroupWhenFull": _0x3cdd6a["shouldToolbarGroupWhenFull"] }), this["_editable"] = new InlineEditableUIView(_0x1a3cda, _0x21a535);
  }
  get ["editable"]() {
    return this["_editable"];
  }
  ["render"]() {
    super["render"](), this["stickyPanel"]["content"]["add"](this["toolbar"]), this["top"]["add"](this["stickyPanel"]), this["main"]["add"](this["editable"]);
  }
};
var g8 = class extends ElementApiMixin(Editor) {
  constructor(_0x2d3e33, _0x5de85d) {
    super(_0x5de85d);
    __publicField(this, "_ui");
    this["sourceElement"] = _0x2d3e33, this["model"]["document"]["createRoot"]();
    const _0x3f2be0 = new ot2(this["locale"], this["editing"]["view"], { "shouldToolbarGroupWhenFull": true });
    this["_ui"] = new st2(this, _0x3f2be0);
  }
  get ["ui"]() {
    return this["_ui"];
  }
  ["destroy"]() {
    return this["updateSourceElement"](), this["ui"]["destroy"](), super["destroy"]();
  }
  static async ["create"](_0x56cebd, _0x5f5720) {
    const _0x367dac = new this(_0x56cebd, _0x5f5720);
    return await _0x367dac["initPlugins"](), await _0x367dac["ui"]["init"](_0x56cebd), await _0x367dac["data"]["init"](_0x367dac["config"]["get"]("initialData") || ""), _0x367dac["fire"]("ready"), _0x367dac;
  }
};
var p9 = ["RevisionHistoryUI", "RestrictedEditingMode"];
var k6 = class extends Plugin {
  constructor(_0x44e617) {
    super(_0x44e617);
    __publicField(this, "result");
    this["result"] = "end";
  }
  static get ["pluginName"]() {
    return "RevisionViewerIntegration";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
};
var H6 = class extends Plugin {
  constructor(_0x10ddc6) {
    super(_0x10ddc6);
    __publicField(this, "_viewerEditor");
    if (!this["editor"]["config"]["get"]("revisionHistory")) throw new CKEditorError("revision-history-missing-configuration", this);
    this["_viewerEditor"] = null, this["editor"]["config"]["define"]("revisionHistory.showRevisionViewerCallback", (_0x296abe) => this["_showRevisionViewer"]({ ..._0x296abe, "translations": this["editor"]["locale"]["translations"] })), this["editor"]["config"]["define"]("revisionHistory.closeRevisionViewerCallback", (_0x533a35) => this["_closeRevisionViewer"](_0x533a35)), this["editor"]["config"]["define"]("revisionHistory.restoreRevisionCallback", (_0x5f4c0d) => this["_restoreRevision"](_0x5f4c0d)), this["editor"]["config"]["define"]("revisionHistory.requireRevisionName", false), this["_enhanceShowRevisionViewerCallback"](), this["_enhanceCloseRevisionViewerCallback"]();
  }
  static get ["pluginName"]() {
    return "RevisionHistory";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  static get ["requires"]() {
    return [l10, u7];
  }
  set ["adapter"](_0x3bcb21) {
    this["editor"]["plugins"]["get"]("RevisionTracker")["adapter"] = _0x3bcb21;
  }
  get ["adapter"]() {
    return this["editor"]["plugins"]["get"]("RevisionTracker")["adapter"];
  }
  ["addRevisionData"](_0x4e268e) {
    return this["editor"]["plugins"]["get"]("RevisionTracker")["addRevisionData"](_0x4e268e);
  }
  ["getRevision"](_0x308f7d) {
    return this["editor"]["plugins"]["get"]("RevisionsRepository")["getRevision"](_0x308f7d);
  }
  ["getRevisions"](_0xf92fee) {
    return this["editor"]["plugins"]["get"]("RevisionsRepository")["getRevisions"](_0xf92fee || { "toJSON": false });
  }
  ["_getRevisionViewerEditorConfig"]() {
    const _0x2abbf1 = this["editor"], _0x5e9717 = C(_0x2abbf1, p9), _0x7021db = _0x2abbf1["plugins"]["get"]("RevisionTracker"), _0xae6692 = _0x2abbf1["plugins"]["get"]("Users")["users"];
    return _0x5e9717["toolbar"] = ["exitToEditing", "restoreRevision", "changesNavigation"], delete _0x5e9717["lazyRoots"], _0x5e9717["plugins"]["push"](k6, d6, m10, class extends Plugin {
      static get ["requires"]() {
        return [d6, "Users"];
      }
      ["init"]() {
        const _0x5a243a = this["editor"]["plugins"]["get"]("Users");
        for (const _0x3efaef of _0xae6692) _0x3efaef["isAnonymous"] || _0x5a243a["getUser"](_0x3efaef["id"]) || _0x5a243a["addUser"](_0x3efaef);
        const _0x23d3cf = _0x7021db["repository"]["getRevisions"]();
        let _0x1059b6 = null;
        const _0x2edba4 = this["editor"]["plugins"]["get"]("RevisionViewer");
        _0x2edba4["adapter"] = _0x7021db["adapter"], _0x2edba4["bind"]("isEnabled")["to"](_0x7021db), this["editor"]["commands"]["get"]("restoreRevision")["bind"]("isEnabled")["to"](_0x2abbf1, "isReadOnly", (_0x4083ad) => !_0x4083ad);
        for (const _0x4b274b of _0x23d3cf) {
          const _0xe81e47 = null === _0x4b274b["creator"];
          if (_0xe81e47 && _0x4b274b["toVersion"] === _0x4b274b["fromVersion"]) continue;
          const _0x1d3f0d = _0x4b274b["toJSON"]();
          _0x2edba4["addRevisionData"](_0x1d3f0d, (_0x2a7b45, _0x2b2eea, _0xbda917) => {
            if (_0xe81e47) {
              if (_0x1059b6) _0x1059b6["_update"](_0x2a7b45, _0x2b2eea);
              else {
                if (!_0x2b2eea) {
                  const _0x37e2ea = _0xbda917["toJSON"]();
                  _0x37e2ea["id"] = uid(), _0x7021db["saveRevision"](_0x37e2ea, _0xbda917["toVersion"])["then"]((_0x515ac2) => {
                    _0x1059b6 = _0x515ac2;
                  });
                }
              }
            } else _0x4b274b["_update"](_0x2a7b45, _0x2b2eea);
          });
        }
      }
    }, R5), _0x5e9717;
  }
  ["_enhanceShowRevisionViewerCallback"]() {
    const _0xee21e2 = this["editor"]["config"]["get"]("revisionHistory")["showRevisionViewerCallback"];
    this["editor"]["config"]["set"]("revisionHistory.showRevisionViewerCallback", async () => {
      this["editor"]["enableReadOnlyMode"]("revision-history-viewer-opened");
      const _0x27771d = this["editor"]["plugins"]["get"]("RevisionTracker");
      if (this["editor"]["plugins"]["has"]("Autosave")) {
        const _0x12d4c7 = this["editor"]["plugins"]["get"]("Autosave");
        await _0x12d4c7["save"]();
      } else await _0x27771d["update"]();
      if (this["editor"]["plugins"]["has"]("PaginationLookup") && this["editor"]["plugins"]["get"]("PaginationLookup")["_recalculatePageBreaks"](), this["editor"]["plugins"]["has"]("Dialog")) {
        const _0x1db8a6 = this["editor"]["plugins"]["get"]("Dialog");
        _0x1db8a6["isOpen"] && _0x1db8a6["hide"]();
      }
      const _0x2d3a79 = this["_getRevisionViewerEditorConfig"]();
      return _0xee21e2(_0x2d3a79)["then"]((_0x112952) => {
        return (this["_viewerEditor"] = _0x112952, this["editor"]["plugins"]["has"]("Annotations")) && this["editor"]["plugins"]["get"]("Annotations")["refreshVisibility"](), _0x112952;
      })["catch"]((_0xad975f) => (console["error"](_0xad975f), this["editor"]["disableReadOnlyMode"]("revision-history-viewer-opened"), null));
    });
  }
  ["_enhanceCloseRevisionViewerCallback"]() {
    const _0x279dee = this["editor"]["config"]["get"]("revisionHistory")["closeRevisionViewerCallback"];
    this["editor"]["config"]["set"]("revisionHistory.closeRevisionViewerCallback", () => (this["editor"]["plugins"]["has"]("PaginationLookup") && this["editor"]["plugins"]["get"]("PaginationLookup")["_recalculatePageBreaks"](), this["_viewerEditor"]["plugins"]["get"]("RevisionViewer")["_cleanUp"](), _0x279dee(this["_viewerEditor"])["then"](() => {
      if (this["editor"]["disableReadOnlyMode"]("revision-history-viewer-opened"), this["_viewerEditor"] = null, this["editor"]["plugins"]["has"]("Annotations")) {
        const _0x34806a = this["editor"]["plugins"]["get"]("Annotations");
        _0x34806a["refreshVisibility"](), _0x34806a["refreshPositioning"]();
      }
    })));
  }
  ["_showRevisionViewer"](_0x137d04) {
    const _0xb70b11 = this["editor"]["config"]["get"]("revisionHistory.editorContainer"), _0x2ee09a = this["editor"]["config"]["get"]("revisionHistory.viewerContainer"), _0xc828d2 = this["editor"]["config"]["get"]("revisionHistory.viewerEditorElement");
    return g8["create"](_0xc828d2, _0x137d04)["then"]((_0x47f032) => (_0x2ee09a["style"]["display"] = "block", _0xb70b11["style"]["display"] = "none", _0x47f032));
  }
  ["_closeRevisionViewer"](_0x5900fc) {
    const _0x12ded9 = this["editor"]["config"]["get"]("revisionHistory.editorContainer");
    return this["editor"]["config"]["get"]("revisionHistory.viewerContainer")["style"]["display"] = "none", _0x12ded9["style"]["display"] = "", _0x5900fc["destroy"]();
  }
  async ["_restoreRevision"](_0x36e1d4) {
    const _0x574dbd = this["editor"], _0x21cda8 = this["_viewerEditor"]["plugins"]["get"]("RevisionViewer"), _0x519566 = _0x574dbd["plugins"]["get"]("RevisionTracker"), _0x135679 = _0x21cda8["repository"]["getRevision"](_0x36e1d4);
    let _0x3513cb, _0xacb32d, _0x657833;
    try {
      _0x3513cb = await _0x21cda8["getRevisionData"](_0x135679), _0xacb32d = await _0x21cda8["getRevisionRootsAttributes"](_0x135679);
    } catch (_0x40f60e) {
      return void console["error"](_0x40f60e);
    }
    _0x574dbd["model"]["change"]((_0x18da4f) => {
      for (const _0x5c4fcf of Array["from"](_0x574dbd["model"]["markers"]["getMarkersGroup"]("restrictedEditingException"))) _0x18da4f["removeMarker"](_0x5c4fcf);
    }), _0x21cda8["isReady"] = false, _0x574dbd["model"]["enqueueChange"]((_0x34c9dd) => {
      _0x34c9dd["setSelection"](null), _0x34c9dd["removeSelectionAttribute"](_0x574dbd["model"]["document"]["selection"]["getAttributeKeys"]());
      const _0x544408 = Object["keys"](_0x3513cb);
      for (const _0x3ea3ad of _0x574dbd["model"]["document"]["roots"]) "$graveyard" != _0x3ea3ad["rootName"] && _0x3ea3ad["isAttached"]() && !_0x544408["includes"](_0x3ea3ad["rootName"]) && _0x34c9dd["detachRoot"](_0x3ea3ad);
      for (const _0x2af0e6 of _0x544408) {
        let _0x366610 = _0x574dbd["model"]["document"]["getRoot"](_0x2af0e6);
        _0x366610 && _0x366610["isAttached"]() || (_0x366610 = _0x34c9dd["addRoot"](_0x2af0e6));
        const _0x35ae06 = _0xacb32d[_0x2af0e6], _0x4c5516 = Object["keys"](_0x35ae06), _0x3d7269 = _0x3513cb[_0x2af0e6];
        for (const _0x5dc528 of _0x366610["getAttributeKeys"]()) _0x4c5516["includes"](_0x5dc528) || _0x34c9dd["removeAttribute"](_0x5dc528, _0x366610);
        for (const _0x49d612 of _0x4c5516) _0x34c9dd["setAttribute"](_0x49d612, _0xacb32d[_0x2af0e6][_0x49d612], _0x366610);
        _0x34c9dd["remove"](_0x34c9dd["createRangeIn"](_0x366610)), _0x34c9dd["insert"](_0x574dbd["data"]["parse"](_0x3d7269, _0x366610), _0x366610, 0);
      }
    });
    const _0x14343e = w5(_0x574dbd["locale"], "Restored");
    if (_0x135679["name"]) _0x657833 = -1 == _0x135679["name"]["indexOf"](_0x14343e) ? _0x14343e + ": " + _0x135679["name"] : _0x135679["name"];
    else _0x657833 = _0x14343e + ": " + (_0x135679["createdAt"]["toLocaleDateString"](_0x574dbd["locale"]["uiLanguage"], { "month": "long", "day": "numeric" }) + ", " + _0x135679["createdAt"]["toLocaleTimeString"](_0x574dbd["locale"]["uiLanguage"], { "hour": "numeric", "minute": "numeric" }));
    return await _0x519566["saveRevision"]({ "name": _0x657833 }), _0x21cda8["isReady"] = true, _0x574dbd["config"]["get"]("revisionHistory")["closeRevisionViewerCallback"]();
  }
};

// node_modules/@ckeditor/ckeditor5-slash-command/dist/index.js
var c10 = class extends Plugin {
  static get ["pluginName"]() {
    return "SlashCommandConfig";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  constructor(_0x1c777d) {
    super(_0x1c777d), this["_allowedCommands"] = null;
  }
  ["afterInit"]() {
    const _0x3de107 = this["editor"]["config"]["get"]("slashCommand.removeCommands") || [], _0x4ca047 = function(_0x503d33) {
      let _0x450c11 = ["heading4", "heading5", "heading6"];
      if (_0x503d33) {
        const _0x33b0db = _0x503d33["map"]((_0x4094d8) => _0x4094d8["model"]);
        _0x450c11 = ["heading1", "heading2", "heading3", "heading4", "heading5", "heading6"]["filter"]((_0x472094) => !_0x33b0db["includes"](_0x472094));
      }
      return _0x450c11;
    }(this["editor"]["config"]["get"]("heading.options"));
    let _0x24de73 = this["getDefaultCommands"]()["filter"]((_0x58adf2) => !_0x4ca047["includes"](_0x58adf2["id"]))["filter"]((_0x3f8436) => !_0x3de107["includes"](_0x3f8436["commandName"]));
    const _0x57ffe1 = this["editor"]["config"]["get"]("slashCommand.extraCommands");
    _0x57ffe1 && _0x57ffe1["length"] && (_0x24de73 = _0x24de73["concat"](_0x57ffe1));
    const _0xe62a7a = this["editor"]["config"]["get"]("template.definitions");
    _0xe62a7a && _0xe62a7a["length"] && (_0x24de73 = _0x24de73["concat"](function(_0x3e9e8f) {
      return _0x3e9e8f["map"]((_0x3379d1) => {
        const { title: _0x5a3701, icon: _0x4c6f23, description: _0x5d17b8, data: _0x11a6e1 } = _0x3379d1, _0x21b0cf = { "id": l11(_0x5a3701, "template"), "commandName": "insertTemplate", "execute": (_0x3c6fe1) => {
          _0x3c6fe1["execute"]("insertTemplate", _0x11a6e1);
        }, "description": _0x5d17b8, "icon": _0x4c6f23, "title": _0x5a3701 };
        return _0x4c6f23 && (_0x21b0cf["isIconColorInherited"] = false), _0x21b0cf;
      });
    }(_0xe62a7a)));
    const _0x1ad8a2 = this["editor"]["config"]["get"]("style.definitions");
    _0x1ad8a2 && _0x1ad8a2["length"] && (_0x24de73 = _0x24de73["concat"](function(_0x53d543) {
      return _0x53d543["map"]((_0x47a5e7) => ({ "id": l11(_0x47a5e7["name"], "style"), "commandName": "style", "execute": (_0x3ce0df) => {
        _0x3ce0df["execute"]("style", { "styleName": _0x47a5e7["name"] });
      }, "isEnabled": (_0x1450ad) => {
        const _0x4c5465 = _0x1450ad["commands"]["get"]("style");
        return _0x4c5465["isEnabled"] && _0x4c5465["enabledStyles"]["includes"](_0x47a5e7["name"]);
      }, "title": _0x47a5e7["name"] }));
    }(_0x1ad8a2)));
    const _0x405fbb = _0x24de73["filter"]((_0x3317b0) => !_0x3317b0["commandName"] || void 0 !== this["editor"]["commands"]["get"](_0x3317b0["commandName"])), _0xed030b = [];
    for (const _0x4504e9 of _0x405fbb) _0xed030b["push"]({ "id": _0x4504e9["id"], "commandName": _0x4504e9["commandName"], "title": "function" == typeof _0x4504e9["title"] ? _0x4504e9["title"](this["editor"]) : _0x4504e9["title"], "description": _0x4504e9["description"], "icon": _0x4504e9["icon"], "isIconColorInherited": _0x4504e9["isIconColorInherited"], "aliases": _0x4504e9["aliases"], "isEnabled": () => this["_proxyIsEnabled"](_0x4504e9), "execute": () => this["_proxyExecute"](_0x4504e9) });
    this["_allowedCommands"] = _0xed030b["sort"](m11);
  }
  ["getAllowedCommands"]() {
    return this["_allowedCommands"];
  }
  ["getDefaultCommands"]() {
    const _0x11f1e5 = (_0x59d447) => function(_0x2902b8, _0x18d7ba) {
      const t2 = _0x2902b8["t"], _0x2b3159 = _0x2902b8["t"];
      switch (_0x18d7ba) {
        case "AI Assistant":
          return _0x2b3159("AI Assistant");
        case "Block quote":
          return _0x2b3159("Block quote");
        case "Bulleted list":
          return _0x2b3159("Bulleted list");
        case "Insert code block":
          return _0x2b3159("Insert code block");
        case "Open file manager":
          return _0x2b3159("Open file manager");
        case "Insert image":
          return _0x2b3159("Insert image");
        case "Heading 1":
          return _0x2b3159("Heading 1");
        case "Heading 2":
          return _0x2b3159("Heading 2");
        case "Heading 3":
          return _0x2b3159("Heading 3");
        case "Heading 4":
          return _0x2b3159("Heading 4");
        case "Heading 5":
          return _0x2b3159("Heading 5");
        case "Heading 6":
          return _0x2b3159("Heading 6");
        case "Horizontal line":
          return _0x2b3159("Horizontal line");
        case "Insert HTML":
          return _0x2b3159("Insert HTML");
        case "Increase indent":
          return _0x2b3159("Increase indent");
        case "Insert table":
          return _0x2b3159("Insert table");
        case "Table of contents":
          return _0x2b3159("Table of contents");
        case "Numbered list":
          return _0x2b3159("Numbered list");
        case "Decrease indent":
          return _0x2b3159("Decrease indent");
        case "Paragraph":
          return _0x2b3159("Paragraph");
        case "To-do list":
          return _0x2b3159("To-do list");
        case "Create a block quote":
          return t2("Create a block quote");
        case "Create a bulleted list":
          return t2("Create a bulleted list");
        case "Create a code block":
          return t2("Create a code block");
        case "Open file manager to insert an image or a file":
          return t2("Open file manager to insert an image or a file");
        case "Open file browser to insert an image or a file":
          return t2("Open file browser to insert an image or a file");
        case "Create a heading level 1":
          return t2("Create a heading level 1");
        case "Create a heading level 2":
          return t2("Create a heading level 2");
        case "Create a heading level 3":
          return t2("Create a heading level 3");
        case "Create a heading level 4":
          return t2("Create a heading level 4");
        case "Create a heading level 5":
          return t2("Create a heading level 5");
        case "Create a heading level 6":
          return t2("Create a heading level 6");
        case "Insert a horizontal line":
          return t2("Insert a horizontal line");
        case "Insert an HTML snippet":
          return t2("Insert an HTML snippet");
        case "Increase the indentation":
          return t2("Increase the indentation");
        case "Insert Mermaid diagram":
          return t2("Insert Mermaid diagram");
        case "Insert the Mermaid diagram":
          return t2("Insert the Mermaid diagram");
        case "Create a table":
          return t2("Create a table");
        case "Insert table of contents":
          return t2("Insert table of contents");
        case "Create a numbered list":
          return t2("Create a numbered list");
        case "Decrease the indentation":
          return t2("Decrease the indentation");
        case "Insert a paragraph":
          return t2("Insert a paragraph");
        case "Create a to-do list":
          return t2("Create a to-do list");
        case "Open the AI Assistant to generate content":
          return t2("Open the AI Assistant to generate content");
        default:
          return _0x18d7ba;
      }
    }(this["editor"]["locale"], _0x59d447);
    return [{ "id": "aiAssistant", "commandName": "showAIAssistant", "icon": a2["robotPencil"], "title": _0x11f1e5("AI Assistant"), "description": _0x11f1e5("Open the AI Assistant to generate content"), "execute": (_0x474887) => {
      setTimeout(() => _0x474887["execute"]("showAIAssistant"));
    } }, { "id": "blockQuote", "commandName": "blockQuote", "icon": icons["quote"], "title": _0x11f1e5("Block quote"), "description": _0x11f1e5("Create a block quote") }, { "id": "bulletedList", "commandName": "bulletedList", "icon": icons["bulletedList"], "title": _0x11f1e5("Bulleted list"), "description": _0x11f1e5("Create a bulleted list") }, { "id": "codeBlock", "commandName": "codeBlock", "icon": icons["codeBlock"], "title": _0x11f1e5("Insert code block"), "description": _0x11f1e5("Create a code block") }, { "id": "ckbox", "commandName": "ckbox", "icon": icons["browseFiles"], "title": _0x11f1e5("Open file manager"), "description": _0x11f1e5("Open file manager to insert an image or a file"), "aliases": ["ckfinder", "filemanager", "upload"] }, { "id": "ckfinder", "commandName": "ckfinder", "icon": icons["browseFiles"], "title": _0x11f1e5("Insert image"), "description": _0x11f1e5("Open file browser to insert an image or a file"), "aliases": ["ckbox", "filemanager", "upload"] }, { "id": "heading1", "commandName": "heading", "icon": icons["heading1"], "title": _0x11f1e5("Heading 1"), "description": _0x11f1e5("Create a heading level 1"), "execute": (_0x2a921d) => {
      _0x2a921d["execute"]("heading", { "value": "heading1" });
    } }, { "id": "heading2", "commandName": "heading", "icon": icons["heading2"], "title": _0x11f1e5("Heading 2"), "description": _0x11f1e5("Create a heading level 2"), "execute": (_0x14f41f) => {
      _0x14f41f["execute"]("heading", { "value": "heading2" });
    } }, { "id": "heading3", "commandName": "heading", "icon": icons["heading3"], "title": _0x11f1e5("Heading 3"), "description": _0x11f1e5("Create a heading level 3"), "execute": (_0x2fb740) => {
      _0x2fb740["execute"]("heading", { "value": "heading3" });
    } }, { "id": "heading4", "commandName": "heading", "icon": icons["heading4"], "title": _0x11f1e5("Heading 4"), "description": _0x11f1e5("Create a heading level 4"), "execute": (_0x20831a) => {
      _0x20831a["execute"]("heading", { "value": "heading4" });
    } }, { "id": "heading5", "commandName": "heading", "icon": icons["heading5"], "title": _0x11f1e5("Heading 5"), "description": _0x11f1e5("Create a heading level 5"), "execute": (_0xc7e099) => {
      _0xc7e099["execute"]("heading", { "value": "heading5" });
    } }, { "id": "heading6", "commandName": "heading", "icon": icons["heading6"], "title": _0x11f1e5("Heading 6"), "description": _0x11f1e5("Create a heading level 6"), "execute": (_0x1a154a) => {
      _0x1a154a["execute"]("heading", { "value": "heading6" });
    } }, { "id": "horizontalLine", "commandName": "horizontalLine", "icon": icons["horizontalLine"], "title": _0x11f1e5("Horizontal line"), "description": _0x11f1e5("Insert a horizontal line") }, { "id": "htmlEmbed", "commandName": "htmlEmbed", "icon": icons["html"], "title": _0x11f1e5("Insert HTML"), "description": _0x11f1e5("Insert an HTML snippet") }, { "id": "indent", "commandName": "indent", "icon": icons["indent"], "title": _0x11f1e5("Increase indent"), "description": _0x11f1e5("Increase the indentation") }, { "id": "insertMermaidCommand", "commandName": "insertMermaidCommand", "title": _0x11f1e5("Insert Mermaid diagram"), "description": _0x11f1e5("Insert the Mermaid diagram") }, { "id": "insertTable", "commandName": "insertTable", "icon": icons["table"], "title": _0x11f1e5("Insert table"), "description": _0x11f1e5("Create a table") }, { "id": "insertTableOfContents", "commandName": "insertTableOfContents", "icon": a2["tableOfContents"], "title": _0x11f1e5("Table of contents"), "description": _0x11f1e5("Insert table of contents"), "aliases": ["toc"] }, { "id": "numberedList", "commandName": "numberedList", "icon": icons["numberedList"], "title": _0x11f1e5("Numbered list"), "description": _0x11f1e5("Create a numbered list") }, { "id": "outdent", "commandName": "outdent", "icon": icons["outdent"], "title": _0x11f1e5("Decrease indent"), "description": _0x11f1e5("Decrease the indentation") }, { "id": "paragraph", "commandName": "paragraph", "icon": icons["paragraph"], "title": _0x11f1e5("Paragraph"), "description": _0x11f1e5("Insert a paragraph") }, { "id": "todoList", "commandName": "todoList", "icon": icons["todoList"], "title": _0x11f1e5("To-do list"), "description": _0x11f1e5("Create a to-do list") }];
  }
  ["_proxyIsEnabled"](_0xad5406) {
    return _0xad5406["isEnabled"] ? _0xad5406["isEnabled"](this["editor"]) : !_0xad5406["commandName"] || this["editor"]["commands"]["get"](_0xad5406["commandName"])["isEnabled"];
  }
  ["_proxyExecute"](_0x4b14ea) {
    if (_0x4b14ea["execute"]) _0x4b14ea["execute"](this["editor"]);
    else {
      if (!_0x4b14ea["commandName"]) throw new CKEditorError("slash-command-execute-missing", this["editor"], { "commandDefinition": _0x4b14ea });
      this["editor"]["execute"](_0x4b14ea["commandName"]);
    }
  }
};
function m11(_0x551cc0, _0x599f5a) {
  return _0x551cc0["title"] < _0x599f5a["title"] ? -1 : _0x551cc0["title"] > _0x599f5a["title"] ? 1 : 0;
}
function l11(_0x3595c0, _0x4a0322) {
  return _0x4a0322 + "-" + _0x3595c0["toLowerCase"]()["split"](" ")["join"]("-");
}
var r15 = class extends Plugin {
  constructor(_0x396cf3) {
    super(_0x396cf3);
    __publicField(this, "_licenseKeyCheckInterval");
    this["_licenseKeyCheckInterval"] = null;
  }
  static get ["pluginName"]() {
    return "SlashCommandEditing";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  static get ["requires"]() {
    return [c10];
  }
  ["init"]() {
    const _0x1780fe = this["editor"];
    this["licenseKey"] = _0x1780fe["config"]["get"]("licenseKey");
    const _0x5eda4d = this["editor"];
    this["_licenseKeyCheckInterval"] = setInterval(() => {
      let _0x629029;
      for (const _0xdc02e in _0x5eda4d) {
        const _0x3c13b9 = _0xdc02e, _0x41199a = _0x5eda4d[_0x3c13b9];
        if ("slashCommandLicenseKeyTrial" === _0x41199a || "slashCommandLicenseKeyInvalid" === _0x41199a || "slashCommandLicenseKeyValid" === _0x41199a || "slashCommandLicenseKeyTrialLimit:operations" === _0x41199a) {
          delete _0x5eda4d[_0x3c13b9], _0x629029 = _0x41199a;
          break;
        }
      }
      if ("slashCommandLicenseKeyInvalid" === _0x629029) throw clearInterval(this["_licenseKeyCheckInterval"]), new CKEditorError("slash-command-invalid-license-key", null);
      if ("slashCommandLicenseKeyTrial" === _0x629029 && console["info"]("You are using the trial version of CKEditor 5 slash command plugin with limited usage. Make sure you will not use it in the production environment."), "slashCommandLicenseKeyTrialLimit:operations" === _0x629029) throw clearInterval(this["_licenseKeyCheckInterval"]), new CKEditorError("slash-command-trial-license-key-reached-limit-changes", null);
      "slashCommandLicenseKeyValid" === _0x629029 && clearInterval(this["_licenseKeyCheckInterval"]);
    }, 1e3);
  }
  ["destroy"]() {
    this["_licenseKeyCheckInterval"] && clearInterval(this["_licenseKeyCheckInterval"]);
  }
  ["getMatchingCommands"](_0x109973) {
    const _0x5a0ade = _0x109973 && _0x109973["toLowerCase"]();
    let _0x48cedd = this["editor"]["plugins"]["get"]("SlashCommandConfig")["getAllowedCommands"]();
    if (_0x48cedd = _0x48cedd["filter"]((_0x3e8291) => _0x3e8291["isEnabled"]()), _0x5a0ade) {
      const _0x2f07bc = [], _0x3b4090 = [], _0x2813b6 = [], _0x496fc4 = [];
      for (const _0x2a8c1e of _0x48cedd) _0x2a8c1e["id"]["toLowerCase"]()["includes"](_0x5a0ade) ? _0x2f07bc["push"](_0x2a8c1e) : _0x2a8c1e["title"]["toLowerCase"]()["includes"](_0x5a0ade) ? _0x3b4090["push"](_0x2a8c1e) : _0x2a8c1e["aliases"] && _0x2a8c1e["aliases"]["some"]((_0x4435e8) => _0x4435e8["toLowerCase"]()["includes"](_0x5a0ade)) ? _0x2813b6["push"](_0x2a8c1e) : _0x2a8c1e["description"] && _0x2a8c1e["description"]["toLowerCase"]()["includes"](_0x5a0ade) && _0x496fc4["push"](_0x2a8c1e);
      _0x48cedd = _0x2f07bc["concat"](_0x3b4090, _0x2813b6, _0x496fc4);
    }
    return _0x48cedd;
  }
};
var f8 = class extends ButtonView {
  constructor(_0x1b53f6, _0x5a97fd) {
    super(_0x1b53f6), this["textPartView"] = this["_createTextPartView"](_0x1b53f6, _0x5a97fd), void 0 !== _0x5a97fd["isIconColorInherited"] && (this["iconView"]["isColorInherited"] = _0x5a97fd["isIconColorInherited"]), this["set"]({ "icon": _0x5a97fd["icon"] || '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path clip-rule="evenodd" d="M10 19a9 9 0 1 0 0-18 9 9 0 0 0 0 18Zm3.45-9.872a1 1 0 0 1 0 1.744l-4.96 2.79A1 1 0 0 1 7 12.79V7.21a1 1 0 0 1 1.49-.872l4.96 2.79Z"/></svg>', "withText": true, "label": _0x5a97fd["title"], "class": "ck-slash-command-button" });
  }
  ["render"]() {
    super["render"](), this["children"]["add"](this["textPartView"]);
  }
  ["_createTextPartView"](_0x3a9670, _0x47a586) {
    const _0x57ccd7 = new View(_0x3a9670);
    return _0x57ccd7["setTemplate"]({ "tag": "div", "attributes": { "class": ["ck", "ck-slash-command-button__text-part"] }, "children": _0x47a586["description"] ? [this["labelView"], { "tag": "span", "attributes": { "class": ["ck", "ck-slash-command-button__description"] }, "children": [{ "text": _0x47a586["description"] }] }] : [this["labelView"]] }), _0x57ccd7;
  }
};
var e8 = class extends Plugin {
  static get ["pluginName"]() {
    return "SlashCommandUI";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  constructor(_0x203f8d) {
    super(_0x203f8d), this["_setupMentionConfiguration"]();
  }
  ["init"]() {
    this["editor"]["once"]("ready", this["_overrideMentionExecuteListener"]["bind"](this));
  }
  ["afterInit"]() {
    !function(_0x2880d9) {
      function _0x467719(_0x5db995, _0x22cbea, _0x2105cf) {
        const _0x1168e7 = {};
        _0x1168e7[_0x363901([110, 117, 109, 98, 101, 114, 79, 102, 82, 111, 117, 110, 100, 115])] = { 16: 10, 24: 12, 32: 14 }, _0x1168e7[_0x363901([114, 99, 111, 110])] = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145], _0x1168e7[_0x363901([83])] = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], _0x1168e7[_0x363901([84, 49])] = [3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474, 1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738, 597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420, 3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577, 605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627, 2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520, 3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205, 2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474, 1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309, 3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720, 2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771, 1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243, 3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470, 1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977, 2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737, 1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754, 361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755, 697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986], _0x1168e7[_0x363901([84, 50])] = [2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899, 2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108, 4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129, 2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848, 1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043, 1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914, 1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139, 2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658, 3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324, 3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385, 3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499, 1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572, 2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810, 3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411, 3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753, 2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487, 550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313, 2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766], _0x1168e7[_0x363901([84, 51])] = [1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099, 1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188, 2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329, 1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768, 3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283, 3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114, 3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739, 2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538, 2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324, 1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865, 1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296, 844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713, 3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050, 2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131, 3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513, 2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927, 3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905, 2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126], _0x1168e7[_0x363901([84, 52])] = [1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549, 1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243, 2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529, 1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963, 3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198, 3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564, 3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214, 2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143, 2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699, 1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945, 1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771, 842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818, 3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340, 2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126, 3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473, 2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917, 3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930, 2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436], _0x1168e7[_0x363901([85, 49])] = [0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795], _0x1168e7[_0x363901([85, 50])] = [0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459, 2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537, 3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535, 77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884, 3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824, 3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622, 507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216, 3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879, 129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469, 3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175, 1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921, 2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127, 3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560, 1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387, 2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037, 4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148, 692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663, 2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855], _0x1168e7[_0x363901([85, 51])] = [0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639, 3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557, 2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032, 3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201, 344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239, 532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878, 3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771, 4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744, 671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199, 4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366, 492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798, 2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695, 3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569, 4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702, 3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217, 1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635, 1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009, 3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150], _0x1168e7[_0x363901([85, 52])] = [0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874, 2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222, 4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595, 1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591, 4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837, 923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127, 2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424, 2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110, 4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469, 4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481, 1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243, 3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604, 2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802, 585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166, 4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912, 1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703, 3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213, 2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925];
        const _0xd4c2eb = new Uint8Array(16);
        for (let _0x2d2b15 = 15; _0x2d2b15 >= 0; --_0x2d2b15) _0xd4c2eb[_0x2d2b15] = _0x2105cf % 256, _0x2105cf = parseInt(_0x2105cf / 256);
        let _0x2e791a = null, _0x2682ee = 16;
        const _0x5e4cb5 = new Uint8Array(_0x22cbea), _0x118a88 = [], _0x3db420 = [];
        _0x3b9fe8();
        for (let _0x1387f2 = 0; _0x1387f2 < _0x5db995[_0x363901([108, 101, 110, 103, 116, 104])]; _0x1387f2++) 16 === _0x2682ee && (_0x2e791a = _0x187c5e(_0xd4c2eb), _0x2682ee = 0, _0x52fd42(_0xd4c2eb)), _0x5db995[_0x1387f2] ^= _0x2e791a[_0x2682ee++];
        return _0x5db995;
        function _0x18eb9d(_0x1c8666) {
          const _0x51135c = [];
          for (let _0x29b5d2 = 0; _0x29b5d2 < _0x1c8666[_0x363901([108, 101, 110, 103, 116, 104])]; _0x29b5d2 += 4) _0x51135c[_0x363901([112, 117, 115, 104])](_0x1c8666[_0x29b5d2] << 24 | _0x1c8666[_0x29b5d2 + 1] << 16 | _0x1c8666[_0x29b5d2 + 2] << 8 | _0x1c8666[_0x29b5d2 + 3]);
          return _0x51135c;
        }
        function _0x52fd42(_0x3ea049) {
          for (let _0x1af555 = 15; _0x1af555 >= 0; _0x1af555--) {
            if (255 !== _0x3ea049[_0x1af555]) {
              _0x3ea049[_0x1af555]++;
              break;
            }
            _0x3ea049[_0x1af555] = 0;
          }
        }
        function _0x187c5e(_0x19835e) {
          const _0x1a54a2 = _0x118a88[_0x363901([108, 101, 110, 103, 116, 104])] - 1, _0x25d51f = [0, 0, 0, 0];
          let t2 = _0x18eb9d(_0x19835e);
          for (let _0x383751 = 0; _0x383751 < 4; _0x383751++) t2[_0x383751] ^= _0x118a88[0][_0x383751];
          for (let _0x32899 = 1; _0x32899 < _0x1a54a2; _0x32899++) {
            for (let _0x3a6391 = 0; _0x3a6391 < 4; _0x3a6391++) _0x25d51f[_0x3a6391] = _0x1168e7[_0x363901([84, 49])][t2[_0x3a6391] >> 24 & 255] ^ _0x1168e7[_0x363901([84, 50])][t2[(_0x3a6391 + 1) % 4] >> 16 & 255] ^ _0x1168e7[_0x363901([84, 51])][t2[(_0x3a6391 + 2) % 4] >> 8 & 255] ^ _0x1168e7[_0x363901([84, 52])][255 & t2[(_0x3a6391 + 3) % 4]] ^ _0x118a88[_0x32899][_0x3a6391];
            t2 = _0x25d51f[_0x363901([115, 108, 105, 99, 101])]();
          }
          const _0x555957 = new Uint8Array(16);
          let _0x10f816;
          for (let _0x4e0076 = 0; _0x4e0076 < 4; _0x4e0076++) _0x10f816 = _0x118a88[_0x1a54a2][_0x4e0076], _0x555957[4 * _0x4e0076] = 255 & (_0x1168e7[_0x363901([83])][t2[_0x4e0076] >> 24 & 255] ^ _0x10f816 >> 24), _0x555957[4 * _0x4e0076 + 1] = 255 & (_0x1168e7[_0x363901([83])][t2[(_0x4e0076 + 1) % 4] >> 16 & 255] ^ _0x10f816 >> 16), _0x555957[4 * _0x4e0076 + 2] = 255 & (_0x1168e7[_0x363901([83])][t2[(_0x4e0076 + 2) % 4] >> 8 & 255] ^ _0x10f816 >> 8), _0x555957[4 * _0x4e0076 + 3] = 255 & (_0x1168e7[_0x363901([83])][255 & t2[(_0x4e0076 + 3) % 4]] ^ _0x10f816);
          return _0x555957;
        }
        function _0x3b9fe8() {
          const _0x5d44b6 = _0x1168e7[_0x363901([110, 117, 109, 98, 101, 114, 79, 102, 82, 111, 117, 110, 100, 115])][_0x5e4cb5[_0x363901([108, 101, 110, 103, 116, 104])]];
          for (let _0x4184a0 = 0; _0x4184a0 <= _0x5d44b6; _0x4184a0++) _0x118a88[_0x363901([112, 117, 115, 104])]([0, 0, 0, 0]), _0x3db420[_0x363901([112, 117, 115, 104])]([0, 0, 0, 0]);
          const _0x1c3747 = 4 * (_0x5d44b6 + 1), _0x77121a = _0x5e4cb5[_0x363901([108, 101, 110, 103, 116, 104])] / 4, _0x5bc836 = _0x18eb9d(_0x5e4cb5);
          let _0x305f73;
          for (let _0xc1009e = 0; _0xc1009e < _0x77121a; _0xc1009e++) _0x305f73 = _0xc1009e >> 2, _0x118a88[_0x305f73][_0xc1009e % 4] = _0x5bc836[_0xc1009e], _0x3db420[_0x5d44b6 - _0x305f73][_0xc1009e % 4] = _0x5bc836[_0xc1009e];
          let _0x508e32, _0x252643 = 0, t2 = _0x77121a;
          for (; t2 < _0x1c3747; ) {
            _0x508e32 = _0x5bc836[_0x77121a - 1], _0x5bc836[0] ^= _0x1168e7[_0x363901([83])][_0x508e32 >> 16 & 255] << 24 ^ _0x1168e7[_0x363901([83])][_0x508e32 >> 8 & 255] << 16 ^ _0x1168e7[_0x363901([83])][255 & _0x508e32] << 8 ^ _0x1168e7[_0x363901([83])][_0x508e32 >> 24 & 255] ^ _0x1168e7[_0x363901([114, 99, 111, 110])][_0x252643] << 24, _0x252643 += 1;
            for (let _0x3d8bf3 = 1; _0x3d8bf3 < _0x77121a / 2; _0x3d8bf3++) _0x5bc836[_0x3d8bf3] ^= _0x5bc836[_0x3d8bf3 - 1];
            _0x508e32 = _0x5bc836[_0x77121a / 2 - 1], _0x5bc836[_0x77121a / 2] ^= _0x1168e7[_0x363901([83])][255 & _0x508e32] ^ _0x1168e7[_0x363901([83])][_0x508e32 >> 8 & 255] << 8 ^ _0x1168e7[_0x363901([83])][_0x508e32 >> 16 & 255] << 16 ^ _0x1168e7[_0x363901([83])][_0x508e32 >> 24 & 255] << 24;
            for (let _0x1af914 = _0x77121a / 2 + 1; _0x1af914 < _0x77121a; _0x1af914++) _0x5bc836[_0x1af914] ^= _0x5bc836[_0x1af914 - 1];
            let _0x58ea2b, _0x30abc8, _0x356af5 = 0;
            for (; _0x356af5 < _0x77121a && t2 < _0x1c3747; ) _0x58ea2b = t2 >> 2, _0x30abc8 = t2 % 4, _0x118a88[_0x58ea2b][_0x30abc8] = _0x5bc836[_0x356af5], _0x3db420[_0x5d44b6 - _0x58ea2b][_0x30abc8] = _0x5bc836[_0x356af5++], t2++;
          }
          for (let _0x2364c4 = 1; _0x2364c4 < _0x5d44b6; _0x2364c4++) for (let _0x45043a = 0; _0x45043a < 4; _0x45043a++) _0x508e32 = _0x3db420[_0x2364c4][_0x45043a], _0x3db420[_0x2364c4][_0x45043a] = _0x1168e7[_0x363901([85, 49])][_0x508e32 >> 24 & 255] ^ _0x1168e7[_0x363901([85, 50])][_0x508e32 >> 16 & 255] ^ _0x1168e7[_0x363901([85, 51])][_0x508e32 >> 8 & 255] ^ _0x1168e7[_0x363901([85, 52])][255 & _0x508e32];
        }
      }
      function _0x363901(_0xfa095a) {
        return _0xfa095a["map"]((_0xa17805) => String["fromCharCode"](_0xa17805))["join"]("");
      }
      ((_0x12ee37) => {
        function _0xd572aa() {
          const _0x60d5af = [{ [_0x363901([105, 100])]: 1, [_0x363901([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x363901([67, 111, 109, 109, 101, 110, 116, 115]), [_0x363901([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x363901([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]), [_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x363901([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x363901([104, 97, 110, 100, 108, 101, 114])]: _0x363901([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x363901([99, 104, 101, 99, 107, 65, 108, 115, 111])]: [{ [_0x363901([105, 100])]: 2, [_0x363901([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x363901([84, 114, 97, 99, 107, 32, 67, 104, 97, 110, 103, 101, 115]), [_0x363901([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x363901([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103]), [_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x363901([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x363901([104, 97, 110, 100, 108, 101, 114])]: _0x363901([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115]), [_0x363901([111, 112, 116, 105, 111, 110, 115])]: { [_0x363901([97, 105, 119, 115, 103, 105, 99])]: true, [_0x363901([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x363901([97, 105, 114, 118, 105, 105, 108])]: true } }], [_0x363901([111, 112, 116, 105, 111, 110, 115])]: { [_0x363901([97, 105, 119, 115, 103, 105, 99])]: true, [_0x363901([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x363901([97, 105, 114, 118, 105, 105, 108])]: true } }, { [_0x363901([105, 100])]: 3, [_0x363901([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x363901([80, 97, 103, 105, 110, 97, 116, 105, 111, 110]), [_0x363901([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x363901([80, 97, 103, 105, 110, 97, 116, 105, 111, 110, 76, 111, 111, 107, 117, 112]), [_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x363901([112, 97, 103, 105, 110, 97, 116, 105, 111, 110, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x363901([104, 97, 110, 100, 108, 101, 114])]: _0x363901([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x363901([105, 100])]: 4, [_0x363901([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x363901([82, 101, 118, 105, 115, 105, 111, 110, 32, 72, 105, 115, 116, 111, 114, 121]), [_0x363901([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x363901([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]), [_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x363901([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x363901([104, 97, 110, 100, 108, 101, 114])]: _0x363901([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 82, 101, 118, 105, 115, 105, 111, 110, 72, 105, 115, 116, 111, 114, 121]), [_0x363901([111, 112, 116, 105, 111, 110, 115])]: { [_0x363901([97, 105, 119, 115, 103, 105, 99])]: true, [_0x363901([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x363901([97, 105, 114, 118, 105, 105, 108])]: true } }, { [_0x363901([105, 100])]: 5, [_0x363901([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x363901([68, 111, 99, 117, 109, 101, 110, 116, 32, 79, 117, 116, 108, 105, 110, 101]), [_0x363901([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x363901([68, 111, 99, 117, 109, 101, 110, 116, 79, 117, 116, 108, 105, 110, 101, 85, 73]), [_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x363901([100, 111, 99, 117, 109, 101, 110, 116, 79, 117, 116, 108, 105, 110, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x363901([104, 97, 110, 100, 108, 101, 114])]: _0x363901([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x363901([111, 112, 116, 105, 111, 110, 115])]: { [_0x363901([102, 103, 105])]: [12] } }, { [_0x363901([105, 100])]: 6, [_0x363901([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x363901([70, 111, 114, 109, 97, 116, 32, 80, 97, 105, 110, 116, 101, 114]), [_0x363901([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x363901([70, 111, 114, 109, 97, 116, 80, 97, 105, 110, 116, 101, 114, 85, 73]), [_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x363901([102, 111, 114, 109, 97, 116, 80, 97, 105, 110, 116, 101, 114, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x363901([104, 97, 110, 100, 108, 101, 114])]: _0x363901([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x363901([111, 112, 116, 105, 111, 110, 115])]: { [_0x363901([102, 103, 105])]: [12] } }, { [_0x363901([105, 100])]: 7, [_0x363901([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x363901([83, 108, 97, 115, 104, 32, 67, 111, 109, 109, 97, 110, 100]), [_0x363901([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x363901([83, 108, 97, 115, 104, 67, 111, 109, 109, 97, 110, 100, 85, 73]), [_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x363901([115, 108, 97, 115, 104, 67, 111, 109, 109, 97, 110, 100, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x363901([104, 97, 110, 100, 108, 101, 114])]: _0x363901([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x363901([111, 112, 116, 105, 111, 110, 115])]: { [_0x363901([102, 103, 105])]: [12] } }, { [_0x363901([105, 100])]: 8, [_0x363901([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x363901([84, 97, 98, 108, 101, 32, 111, 102, 32, 67, 111, 110, 116, 101, 110, 116, 115]), [_0x363901([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x363901([84, 97, 98, 108, 101, 79, 102, 67, 111, 110, 116, 101, 110, 116, 115, 69, 100, 105, 116, 105, 110, 103]), [_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x363901([116, 97, 98, 108, 101, 79, 102, 67, 111, 110, 116, 101, 110, 116, 115, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x363901([104, 97, 110, 100, 108, 101, 114])]: _0x363901([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x363901([111, 112, 116, 105, 111, 110, 115])]: { [_0x363901([102, 103, 105])]: [12] } }, { [_0x363901([105, 100])]: 9, [_0x363901([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x363901([84, 101, 109, 112, 108, 97, 116, 101]), [_0x363901([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x363901([84, 101, 109, 112, 108, 97, 116, 101, 85, 73]), [_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x363901([116, 101, 109, 112, 108, 97, 116, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x363901([104, 97, 110, 100, 108, 101, 114])]: _0x363901([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x363901([111, 112, 116, 105, 111, 110, 115])]: { [_0x363901([102, 103, 105])]: [12, 14] } }, { [_0x363901([105, 100])]: 10, [_0x363901([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x363901([80, 97, 115, 116, 101, 32, 102, 114, 111, 109, 32, 79, 102, 102, 105, 99, 101, 32, 69, 110, 104, 97, 110, 99, 101, 100]), [_0x363901([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x363901([80, 97, 115, 116, 101, 70, 114, 111, 109, 79, 102, 102, 105, 99, 101, 69, 110, 104, 97, 110, 99, 101, 100, 73, 110, 108, 105, 110, 101, 114]), [_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x363901([112, 97, 115, 116, 101, 70, 114, 111, 109, 79, 102, 102, 105, 99, 101, 69, 110, 104, 97, 110, 99, 101, 100, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x363901([104, 97, 110, 100, 108, 101, 114])]: _0x363901([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x363901([111, 112, 116, 105, 111, 110, 115])]: { [_0x363901([102, 103, 105])]: [12] } }, { [_0x363901([105, 100])]: 11, [_0x363901([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x363901([65, 73, 32, 65, 115, 115, 105, 115, 116, 97, 110, 116]), [_0x363901([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x363901([65, 73, 65, 115, 115, 105, 115, 116, 97, 110, 116, 85, 73]), [_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x363901([97, 105, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x363901([104, 97, 110, 100, 108, 101, 114])]: _0x363901([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x363901([105, 100])]: 12, [_0x363901([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x363901([80, 114, 111, 100, 117, 99, 116, 105, 118, 105, 116, 121, 32, 112, 97, 99, 107]) }, { [_0x363901([105, 100])]: 13, [_0x363901([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x363901([67, 97, 115, 101, 32, 67, 104, 97, 110, 103, 101]), [_0x363901([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x363901([67, 97, 115, 101, 67, 104, 97, 110, 103, 101, 85, 73]), [_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x363901([99, 97, 115, 101, 67, 104, 97, 110, 103, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x363901([104, 97, 110, 100, 108, 101, 114])]: _0x363901([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x363901([111, 112, 116, 105, 111, 110, 115])]: { [_0x363901([102, 103, 105])]: [12] } }, { [_0x363901([105, 100])]: 14, [_0x363901([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x363901([68, 114, 117, 112, 97, 108, 32, 112, 97, 99, 107]), [_0x363901([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114])]: _0x363901([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114, 70, 111, 114, 68, 114, 117, 112, 97, 108]) }, { [_0x363901([105, 100])]: 15, [_0x363901([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x363901([77, 117, 108, 116, 105, 32, 76, 101, 118, 101, 108, 32, 76, 105, 115, 116]), [_0x363901([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x363901([77, 117, 108, 116, 105, 76, 101, 118, 101, 108, 76, 105, 115, 116, 69, 100, 105, 116, 105, 110, 103]), [_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x363901([109, 117, 108, 116, 105, 76, 101, 118, 101, 108, 76, 105, 115, 116, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x363901([104, 97, 110, 100, 108, 101, 114])]: _0x363901([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x363901([105, 100])]: 16, [_0x363901([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x363901([77, 101, 114, 103, 101, 32, 70, 105, 101, 108, 100, 115]), [_0x363901([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x363901([77, 101, 114, 103, 101, 70, 105, 101, 108, 100, 115, 85, 73]), [_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x363901([109, 101, 114, 103, 101, 70, 105, 101, 108, 100, 115, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x363901([104, 97, 110, 100, 108, 101, 114])]: _0x363901([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x363901([111, 112, 116, 105, 111, 110, 115])]: { [_0x363901([102, 103, 105])]: [12] } }];
          return _0x3a96c7(_0x60d5af), _0x60d5af;
          function _0x230f58(_0x374d2f) {
            return 1 << _0x374d2f - 1;
          }
          function _0x3a96c7(_0xecad59) {
            _0xecad59[_0x363901([102, 111, 114, 69, 97, 99, 104])]((_0x15ff1d) => {
              _0x15ff1d[_0x363901([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])] = _0x230f58(_0x15ff1d[_0x363901([105, 100])]), _0x1b9339(_0x15ff1d) && _0x15ff1d[_0x363901([99, 104, 101, 99, 107, 65, 108, 115, 111])] && _0x3a96c7(_0x15ff1d[_0x363901([99, 104, 101, 99, 107, 65, 108, 115, 111])]);
            });
          }
        }
        function _0x1b9339(_0xde8a) {
          return _0x363901([112, 108, 117, 103, 105, 110, 78, 97, 109, 101]) in _0xde8a;
        }
        const _0x81b7ae = [1, 85, 78, 115, 198, 255, 50, 112, 83, 87, 161], _0x48ea26 = [127, 34, 6, 211, 167, 86, 146, 199, 132, 160, 18];
        function _0x436b64(_0x1cedb1) {
          const _0x5cfa5b = [29, 221, 175, 90, 231, 133, 239, 240, 75, 180];
          return _0xdab77(_0x1cedb1, new Uint8Array([..._0x81b7ae, ..._0x5cfa5b, ..._0x48ea26]));
        }
        function _0xdab77(_0x2cf196, _0x2fe6ee) {
          const _0xb4ffbf = _0x1c77d6(_0x2cf196), _0x6ba935 = Array[_0x363901([102, 114, 111, 109])](_0x53f239(_0xb4ffbf)), _0x27be53 = _0x6ba935[_0x363901([112, 111, 112])](), _0x4a9e1c = _0x6ba935[_0x363901([112, 111, 112])]();
          return _0x4c02b5(_0x467719(_0x6ba935, _0x2fe6ee, _0x4a9e1c + 256 * _0x27be53));
        }
        function _0x1c77d6(_0xf1d678) {
          const _0x2eef18 = atob(_0xf1d678), [_0x2e4751, _0x2e5ce1] = _0x2eef18[_0x363901([115, 112, 108, 105, 116])](_0x363901([45]));
          try {
            if (atob(_0x2e5ce1)) return atob(_0x2e4751);
          } catch (_0x1d2b49) {
          }
          return _0x2eef18;
        }
        function _0x188e89(_0x203913) {
          try {
            const _0x57cec5 = _0x436b64(_0x203913), _0x34720 = JSON[_0x363901([112, 97, 114, 115, 101])](_0x57cec5), _0x2f5820 = parseInt(_0x34720[_0x363901([49])]), _0x2438d8 = _0x34720[_0x363901([50])] || "", _0x4e4742 = parseInt(_0x34720[_0x363901([51])]), _0x1088ed = parseInt(_0x34720[_0x363901([52])]) || 0, _0xded7ae = parseInt(_0x34720[_0x363901([53])]) || 0;
            return { [_0x363901([112, 114, 111, 100, 117, 99, 116, 78, 97, 109, 101])]: _0x2438d8, [_0x363901([97, 108, 108, 111, 119, 101, 100, 80, 108, 117, 103, 105, 110, 115])]: _0x1088ed, [_0x363901([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])]: _0x2f5820, [_0x363901([105, 115, 84, 114, 105, 97, 108])]: _0x4e4742, [_0x363901([105, 115, 73, 110, 116, 101, 114, 110, 97, 108])]: _0xded7ae };
          } catch (_0x147eb7) {
            return null;
          }
        }
        const _0x806425 = _0xd572aa(), _0x2b6fdd = { [_0x363901([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101])]: _0x3cc7f5, [_0x363901([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115])]: _0x59e7d5, [_0x363901([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 82, 101, 118, 105, 115, 105, 111, 110, 72, 105, 115, 116, 111, 114, 121])]: _0x11b47d }, _0xdb70d4 = _0x12ee37[_0x363901([99, 111, 110, 115, 116, 114, 117, 99, 116, 111, 114])][_0x363901([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])], _0x3d89e9 = _0x363901([99, 111, 110, 116, 101, 120, 116]) in _0x12ee37 ? _0x12ee37["context"] : _0x12ee37["editor"], _0x268db9 = _0x363901([52, 48, 52, 56, 50, 50, 49, 50]), _0x2b9278 = _0x363901([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]), _0x43e526 = _0x3d89e9["config"]["get"](_0x363901([108, 105, 99, 101, 110, 115, 101, 75, 101, 121])), _0x53b9d0 = _0x806425[_0x363901([102, 105, 108, 116, 101, 114])](_0x1b9339)[_0x363901([102, 105, 110, 100])]((_0x203649) => _0x203649[_0x363901([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])] === _0xdb70d4);
        function _0x47b84f(_0x15efb5, _0x4bee48) {
          _0x2b6fdd[_0x4bee48[_0x363901([104, 97, 110, 100, 108, 101, 114])]](_0x15efb5, _0x4bee48), _0x4bee48[_0x363901([99, 104, 101, 99, 107, 65, 108, 115, 111])] && _0x4bee48[_0x363901([99, 104, 101, 99, 107, 65, 108, 115, 111])][_0x363901([102, 105, 108, 116, 101, 114])]((_0x36639b) => _0x242bc2(_0x3d89e9, _0x36639b[_0x363901([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]))[_0x363901([102, 111, 114, 69, 97, 99, 104])]((_0x1efdb9) => _0x47b84f(_0x15efb5, _0x1efdb9));
        }
        function _0x3cc7f5(_0xa7482, _0x1795b5) {
          _0x616a16(_0x374178(_0xa7482, _0x1795b5), _0x1795b5);
        }
        function _0x59e7d5(_0x419cf1, _0x4d9463) {
          function _0x4fe58f(_0x15dce6, _0x472181) {
            try {
              if (_0x242bc2(_0x3d89e9, _0x363901([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103])) && _0x15dce6) {
                const _0xcf1f57 = _0x4740b3(_0x3d89e9, _0x363901([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103]))[_0x363901([95, 101, 120, 101, 99, 117, 116, 101, 83, 117, 103, 103, 101, 115, 116, 105, 111, 110])];
                if (parseInt(_0xcf1f57) / 2 > _0x15dce6[_0x363901([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])]) return _0x2cb63a(_0x472181[_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x363901([73, 110, 118, 97, 108, 105, 100]));
              }
              return _0x374178(_0x15dce6, _0x472181);
            } catch (_0x7e4d26) {
              return _0x2cb63a(_0x472181[_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x363901([73, 110, 118, 97, 108, 105, 100]));
            }
          }
          _0x616a16(_0x4fe58f(_0x419cf1, _0x4d9463), _0x4d9463);
        }
        function _0x11b47d(_0x3f1ca1, _0x397542) {
          const _0x3e94c8 = _0x48ea26[0] * _0x81b7ae[1], _0x5904a7 = _0x48ea26[0] * _0x81b7ae[2], _0x10d24e = _0x48ea26[2] * _0x81b7ae[2];
          _0x242bc2(_0x3d89e9, _0x363901([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121])) && _0x4740b3(_0x3d89e9, _0x363901([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121]))[_0x363901([115, 116, 97, 116, 101])] == _0x363901([99, 111, 110, 110, 101, 99, 116, 101, 100]) && (window[_0x43e6ad()] = _0x10d24e);
          function _0x4477aa(_0x38322c, _0x358d2a) {
            try {
              return _0x132c17() ? _0x2cb63a(_0x358d2a[_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x363901([86, 97, 108, 105, 100])) : _0x374178(_0x38322c, _0x358d2a);
            } catch (_0x3e01c6) {
              return _0x2cb63a(_0x358d2a[_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x363901([73, 110, 118, 97, 108, 105, 100]));
            }
          }
          function _0x1fcd7e(_0x5e9064, _0x2d76b7) {
            const _0x3994b6 = 7;
            if (_0x5e9064 == _0x2d76b7[_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x363901([73, 110, 118, 97, 108, 105, 100])) _0x5ba90c();
            else {
              if (_0x5e9064 == _0x2d76b7[_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x363901([84, 114, 105, 97, 108])) {
                const _0x1f948d = _0x3e964b();
                _0x1f948d && _0x2e1fe4(_0x1f948d, _0x2d76b7[_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                const _0x1f68b2 = _0x298682();
                window[_0x363901([115, 101, 116, 84, 105, 109, 101, 111, 117, 116])](() => {
                  _0x2e1fe4(_0x363901([116, 105, 109, 101]), _0x2d76b7[_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                }, _0x1f68b2);
                const _0x3926c3 = _0x4740b3(_0x3d89e9, _0x363901([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x363901([95, 114, 101, 118, 105, 115, 105, 111, 110, 115])];
                _0x3926c3[_0x363901([108, 101, 110, 103, 116, 104])] >= _0x3994b6 ? _0x2e1fe4(_0x363901([114, 101, 118, 105, 115, 105, 111, 110, 115]), _0x2d76b7[_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]) : _0x3926c3["on"](_0x363901([97, 100, 100]), () => {
                  _0x3926c3[_0x363901([108, 101, 110, 103, 116, 104])] >= _0x3994b6 && _0x2e1fe4(_0x363901([114, 101, 118, 105, 115, 105, 111, 110, 115]), _0x2d76b7[_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                });
              }
            }
          }
          function _0x3e964b() {
            if (!_0x242bc2(_0x3d89e9, _0x363901([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) return false;
            for (const _0x4f7408 in window) if (Number["isNaN"](Number(_0x4f7408))) {
              if (window[_0x4f7408] === _0x3e94c8) return _0x363901([116, 105, 109, 101]);
              if (window[_0x4f7408] === _0x5904a7) return _0x363901([114, 101, 118, 105, 115, 105, 111, 110, 115]);
            }
            return false;
          }
          function _0x132c17() {
            if (!_0x242bc2(_0x3d89e9, _0x363901([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) return false;
            for (const _0x447f6b in window) if (Number["isNaN"](Number(_0x447f6b)) && window[_0x447f6b] === _0x10d24e) return true;
            return false;
          }
          function _0x2e1fe4(_0x4aa1f3, _0x53dcd5) {
            _0x5ba90c(), _0x2cb63a(_0x53dcd5 + _0x363901([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58]) + _0x4aa1f3), window[_0x43e6ad()] = _0x4aa1f3 === _0x363901([116, 105, 109, 101]) ? _0x3e94c8 : _0x5904a7;
          }
          function _0x298682() {
            let _0x56c49e = _0x48ea26[6] * _0x81b7ae[8] * _0x81b7ae[6];
            return _0x242bc2(_0x3d89e9, _0x363901([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114])) && (_0x56c49e /= 10), _0x56c49e;
          }
          function _0x5ba90c() {
            const _0x1f862c = _0x3d89e9;
            function _0x2b6dd7() {
              _0x242bc2(_0x1f862c, _0x363901([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114])) && (_0x4740b3(_0x1f862c, _0x363901([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x363901([117, 110, 98, 105, 110, 100])](_0x363901([105, 115, 69, 110, 97, 98, 108, 101, 100])), _0x4740b3(_0x1f862c, _0x363901([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x363901([105, 115, 69, 110, 97, 98, 108, 101, 100])] = false, _0x4740b3(_0x1f862c, _0x363901([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x363901([117, 112, 100, 97, 116, 101])] = _0x1d33dd, _0x4740b3(_0x1f862c, _0x363901([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x363901([115, 97, 118, 101, 82, 101, 118, 105, 115, 105, 111, 110])] = _0x1d33dd, _0x1f862c[_0x363901([109, 111, 100, 101, 108])][_0x363901([99, 104, 97, 110, 103, 101])] = _0x1d33dd, _0x1f862c[_0x363901([109, 111, 100, 101, 108])][_0x363901([101, 110, 113, 117, 101, 117, 101, 67, 104, 97, 110, 103, 101])] = _0x1d33dd, _0x1f862c[_0x363901([101, 110, 97, 98, 108, 101, 82, 101, 97, 100, 79, 110, 108, 121, 77, 111, 100, 101])](_0x363901([109, 111, 100, 101, 108]))), _0x242bc2(_0x1f862c, _0x363901([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114])) && (_0x4740b3(_0x1f862c, _0x363901([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x363901([117, 110, 98, 105, 110, 100])](_0x363901([105, 115, 69, 110, 97, 98, 108, 101, 100])), _0x4740b3(_0x1f862c, _0x363901([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x363901([105, 115, 69, 110, 97, 98, 108, 101, 100])] = false, _0x4740b3(_0x1f862c, _0x363901([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x363901([99, 111, 109, 112, 97, 114, 101])] = _0x1d33dd, _0x4740b3(_0x1f862c, _0x363901([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x363901([95, 103, 101, 116, 68, 105, 102, 102])] = _0x1d33dd);
            }
            _0x1f862c[_0x363901([115, 116, 97, 116, 101])] == _0x363901([114, 101, 97, 100, 121]) ? _0x2b6dd7() : _0x1f862c[_0x363901([111, 110, 99, 101])](_0x363901([114, 101, 97, 100, 121]), () => {
              if (_0x242bc2(_0x1f862c, _0x363901([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114])) && _0x2b6dd7(), _0x242bc2(_0x1f862c, _0x363901([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) {
                const _0xb3c29a = _0x4740b3(_0x1f862c, _0x363901([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121])), _0x5c92f4 = _0xb3c29a["getRevision"](0), _0x4a3b29 = _0xb3c29a["getEarlierVisibleRevision"](_0x5c92f4[_0x363901([105, 100])]);
                _0x4740b3(_0x1f862c, _0x363901([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x363901([99, 111, 109, 112, 97, 114, 101])](_0x5c92f4[_0x363901([105, 100])], _0x4a3b29 ? _0x4a3b29[_0x363901([105, 100])] : null, 1)["then"](() => _0x2b6dd7());
              }
            });
          }
          _0x1fcd7e(_0x4477aa(_0x3f1ca1, _0x397542), _0x397542);
        }
        function _0x374178(_0x36c007, _0x5f5685) {
          try {
            return _0x39435b(_0x5f5685) ? _0x2cb63a(_0x5f5685[_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x363901([86, 97, 108, 105, 100])) : _0x36c007 && _0x29eee1(_0x36c007[_0x363901([97, 108, 108, 111, 119, 101, 100, 80, 108, 117, 103, 105, 110, 115])], _0x5f5685) ? _0x36c007[_0x363901([105, 115, 73, 110, 116, 101, 114, 110, 97, 108])] && !window[_0x363901([111, 112, 101, 110])][_0x363901([99, 108, 111, 115, 101, 100])] || parseInt(_0x268db9) / 2 > _0x36c007[_0x363901([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])] ? _0x2cb63a(_0x5f5685[_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x363901([73, 110, 118, 97, 108, 105, 100])) : _0x36c007[_0x363901([105, 115, 84, 114, 105, 97, 108])] ? _0x2cb63a(_0x5f5685[_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x363901([84, 114, 105, 97, 108])) : _0x2cb63a(_0x5f5685[_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x363901([86, 97, 108, 105, 100])) : _0x2cb63a(_0x5f5685[_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x363901([73, 110, 118, 97, 108, 105, 100]));
          } catch (_0x3664c4) {
            return _0x2cb63a(_0x5f5685[_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x363901([73, 110, 118, 97, 108, 105, 100]));
          }
        }
        function _0x616a16(_0x3963aa, _0xf85f85) {
          if (_0x3d89e9 instanceof Context) {
            const _0x495fae = _0x3d89e9;
            _0x3963aa == _0xf85f85[_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x363901([73, 110, 118, 97, 108, 105, 100]) ? _0x104275(_0x495fae) : _0x3963aa == _0xf85f85[_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x363901([84, 114, 105, 97, 108]) && window[_0x363901([115, 101, 116, 84, 105, 109, 101, 111, 117, 116])](() => {
              _0x104275(_0x495fae), _0x2cb63a(_0xf85f85[_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x363901([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 116, 105, 109, 101]));
            }, _0x48ea26[6] * _0x81b7ae[8] * _0x81b7ae[6]), _0x495fae[_0x363901([101, 100, 105, 116, 111, 114, 115])][_0x363901([111, 110])](_0x363901([97, 100, 100]), (_0x4adfd5, _0x1e5a5a) => {
              _0x3963aa != _0xf85f85[_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x363901([73, 110, 118, 97, 108, 105, 100]) && _0x3963aa != _0xf85f85[_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x363901([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 116, 105, 109, 101]) && _0x3963aa != _0xf85f85[_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x363901([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 111, 112, 101, 114, 97, 116, 105, 111, 110, 115]) || _0x490b59(_0x1e5a5a);
            });
          } else {
            const _0x39019e = _0x3d89e9;
            _0x3963aa == _0xf85f85[_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x363901([73, 110, 118, 97, 108, 105, 100]) ? _0x490b59(_0x39019e) : _0x3963aa == _0xf85f85[_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x363901([84, 114, 105, 97, 108]) && _0x39019e[_0x363901([111, 110])](_0x363901([114, 101, 97, 100, 121]), () => {
              let _0x2c009a = 0;
              _0x39019e[_0x363901([109, 111, 100, 101, 108])][_0x363901([111, 110])](_0x363901([97, 112, 112, 108, 121, 79, 112, 101, 114, 97, 116, 105, 111, 110]), (_0x745314, _0x256aad) => {
                _0x256aad[0][_0x363901([105, 115, 68, 111, 99, 117, 109, 101, 110, 116, 79, 112, 101, 114, 97, 116, 105, 111, 110])] && _0x2c009a++, 504 === _0x2c009a && (_0x490b59(_0x39019e), _0x2cb63a(_0xf85f85[_0x363901([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x363901([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 111, 112, 101, 114, 97, 116, 105, 111, 110, 115])), _0x745314[_0x363901([111, 102, 102])]());
              }, { "priority": _0x363901([104, 105, 103, 104, 101, 115, 116]) });
            });
          }
        }
        function _0x2cb63a(_0x335c29) {
          const _0x15f64c = _0x43e6ad();
          return _0x3d89e9[_0x15f64c] = _0x335c29, _0x335c29;
        }
        function _0x43e6ad() {
          const _0x49e04a = String(window[_0x363901([112, 101, 114, 102, 111, 114, 109, 97, 110, 99, 101])][_0x363901([110, 111, 119])]())[_0x363901([114, 101, 112, 108, 97, 99, 101])](_0x363901([46]), "");
          let _0x37d532 = "";
          for (let _0x2aab12 = 0; _0x2aab12 < _0x49e04a[_0x363901([108, 101, 110, 103, 116, 104])]; _0x2aab12 += 2) {
            let _0xb4ba65 = parseInt(_0x49e04a[_0x363901([115, 117, 98, 115, 116, 114, 105, 110, 103])](_0x2aab12, _0x2aab12 + 2));
            _0xb4ba65 >= _0x2b9278[_0x363901([108, 101, 110, 103, 116, 104])] && (_0xb4ba65 -= _0x2b9278[_0x363901([108, 101, 110, 103, 116, 104])]), _0x37d532 += _0x2b9278[_0xb4ba65];
          }
          return _0x37d532;
        }
        function _0x104275(_0x1515e1) {
          for (const _0x710a0b of _0x1515e1[_0x363901([101, 100, 105, 116, 111, 114, 115])]) _0x490b59(_0x710a0b);
          _0x4740b3(_0x1515e1, _0x363901([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x363901([115, 119, 105, 116, 99, 104, 82, 101, 97, 100, 79, 110, 108, 121])](true), _0x4740b3(_0x1515e1, _0x363901([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x363901([115, 119, 105, 116, 99, 104, 82, 101, 97, 100, 79, 110, 108, 121])] = _0x1d33dd;
        }
        function _0x490b59(_0x1001de) {
          function _0x3fb9f4() {
            _0x1001de[_0x363901([109, 111, 100, 101, 108])][_0x363901([99, 104, 97, 110, 103, 101])] = _0x1d33dd, _0x1001de[_0x363901([109, 111, 100, 101, 108])][_0x363901([101, 110, 113, 117, 101, 117, 101, 67, 104, 97, 110, 103, 101])] = _0x1d33dd, _0x1001de[_0x363901([101, 110, 97, 98, 108, 101, 82, 101, 97, 100, 79, 110, 108, 121, 77, 111, 100, 101])](_0x363901([109, 111, 100, 101, 108]));
          }
          _0x1001de[_0x363901([115, 116, 97, 116, 101])] == _0x363901([114, 101, 97, 100, 121]) ? _0x3fb9f4() : _0x1001de[_0x363901([111, 110, 99, 101])](_0x363901([114, 101, 97, 100, 121]), () => _0x3fb9f4());
        }
        function _0x1d33dd() {
          return null;
        }
        function _0x29eee1(_0x45c03f, _0x3ace70) {
          const _0x56f8b2 = !!(_0x45c03f & _0x3ace70[_0x363901([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])]), _0x3baefe = _0x555fde(_0x45c03f, _0x3ace70);
          return _0x56f8b2 || _0x3baefe;
        }
        function _0x555fde(_0x29aabc, _0x2e16cd) {
          const _0xfe42c8 = (_0x2e16cd[_0x363901([111, 112, 116, 105, 111, 110, 115])] || {})[_0x363901([102, 103, 105])] || null;
          return !!_0xfe42c8 && _0x806425[_0x363901([102, 105, 108, 116, 101, 114])]((_0x40e60b) => _0xfe42c8[_0x363901([105, 110, 99, 108, 117, 100, 101, 115])](_0x40e60b[_0x363901([105, 100])]))[_0x363901([102, 105, 108, 116, 101, 114])]((_0x5a13d6) => !_0x5aadb9(_0x5a13d6))[_0x363901([115, 111, 109, 101])]((_0x5ba5d4) => !!(_0x29aabc & _0x5ba5d4[_0x363901([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])]));
        }
        function _0x5aadb9(_0x4be641) {
          const _0x124a3e = { [_0x363901([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114, 70, 111, 114, 68, 114, 117, 112, 97, 108])]: _0x356457 };
          return !!_0x4be641["forbiddenHandler"] && _0x124a3e[_0x4be641["forbiddenHandler"]]();
        }
        function _0x356457() {
          return !window[_0x363901([68, 114, 117, 112, 97, 108])] || !_0x242bc2(_0x3d89e9, _0x363901([100, 114, 117, 112, 97, 108, 80, 111, 119, 101, 114, 101, 100, 66, 121]));
        }
        function _0x39435b(_0x58cb53) {
          if (!_0x242bc2(_0x3d89e9, _0x58cb53[_0x363901([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])])) return true;
          const _0x656303 = _0x58cb53[_0x363901([111, 112, 116, 105, 111, 110, 115])] || {}, _0x44aa5f = _0x656303[_0x363901([97, 105, 119, 115, 103, 105, 99])] || false, _0x55fbb0 = _0x656303[_0x363901([97, 105, 116, 99, 100, 103, 105, 108])] || false, _0x2d2ddc = _0x656303[_0x363901([97, 105, 114, 118, 105, 105, 108])] || false;
          if (_0x242bc2(_0x3d89e9, _0x363901([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121])) && _0x4740b3(_0x3d89e9, _0x363901([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121]))[_0x363901([115, 116, 97, 116, 101])] == _0x363901([99, 111, 110, 110, 101, 99, 116, 101, 100]) && _0x44aa5f) return true;
          if (_0x242bc2(_0x3d89e9, _0x363901([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 68, 97, 116, 97, 71, 101, 116, 116, 101, 114])) && _0x4740b3(_0x3d89e9, _0x363901([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 68, 97, 116, 97, 71, 101, 116, 116, 101, 114]))[_0x363901([114, 101, 115, 117, 108, 116])] == _0x363901([101, 110, 100]) && _0x55fbb0) return true;
          return !(!_0x242bc2(_0x3d89e9, _0x363901([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114, 73, 110, 116, 101, 103, 114, 97, 116, 105, 111, 110])) || _0x4740b3(_0x3d89e9, _0x363901([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114, 73, 110, 116, 101, 103, 114, 97, 116, 105, 111, 110]))[_0x363901([114, 101, 115, 117, 108, 116])] != _0x363901([101, 110, 100]) || !_0x2d2ddc);
        }
        function _0x242bc2(_0x18bc35, _0x54132e) {
          return _0x18bc35[_0x363901([112, 108, 117, 103, 105, 110, 115])][_0x363901([104, 97, 115])](_0x54132e);
        }
        function _0x4740b3(_0x5c9f1e, _0x3b9995) {
          return _0x5c9f1e[_0x363901([112, 108, 117, 103, 105, 110, 115])][_0x363901([103, 101, 116])](_0x3b9995);
        }
        function _0x4c02b5(_0x18d46c) {
          let _0x54bc32 = "";
          for (const _0x162542 of _0x18d46c) _0x54bc32 += String[_0x363901([102, 114, 111, 109, 67, 104, 97, 114, 67, 111, 100, 101])](_0x162542);
          return _0x54bc32;
        }
        function _0x53f239(_0x380562) {
          const _0xbadbe6 = new Uint8Array(_0x380562[_0x363901([108, 101, 110, 103, 116, 104])]);
          for (let _0x345032 = 0; _0x345032 < _0x380562[_0x363901([108, 101, 110, 103, 116, 104])]; _0x345032++) _0xbadbe6[_0x345032] = _0x380562[_0x363901([99, 104, 97, 114, 67, 111, 100, 101, 65, 116])](_0x345032);
          return _0xbadbe6;
        }
        _0x53b9d0 && _0x47b84f(_0x188e89(_0x43e526), _0x53b9d0);
      })(_0x2880d9);
    }(this);
  }
  ["_setupMentionConfiguration"]() {
    const _0x4cae99 = this["editor"], _0xbf308d = this["editor"]["plugins"]["get"]("SlashCommandEditing"), _0x4bbe0b = _0x4cae99["config"]["get"]("mention.feeds");
    _0x4bbe0b["push"]({ "marker": "/", "feed": (_0x301de1) => _0xbf308d["getMatchingCommands"](_0x301de1), "itemRenderer": this["_customItemRenderer"]["bind"](this), "dropdownLimit": _0x4cae99["config"]["get"]("slashCommand.dropdownLimit") || 1 / 0 }), _0x4cae99["config"]["set"]("mention.feeds", _0x4bbe0b);
  }
  ["_overrideMentionExecuteListener"]() {
    const _0x5a6017 = this["editor"];
    _0x5a6017["commands"]["get"]("mention")["on"]("execute", (_0xc0a982, _0x572c4d) => {
      const _0x3cb98f = _0x572c4d[0], _0x476927 = _0x5a6017["model"];
      "/" === _0x3cb98f["marker"] && _0x476927["change"]((_0x41a76b) => {
        _0x41a76b["remove"](_0x3cb98f["range"]), _0x3cb98f["mention"]["execute"](), _0xc0a982["stop"]();
      });
    }, { "priority": "high" });
  }
  ["_customItemRenderer"](_0x581e2a) {
    const _0x984dda = this["editor"]["locale"], _0x401a5c = new f8(_0x984dda, _0x581e2a);
    return _0x401a5c["render"](), _0x401a5c["element"];
  }
};
var s13 = class extends Plugin {
  static get ["requires"]() {
    return ["Mention", r15, e8];
  }
  static get ["pluginName"]() {
    return "SlashCommand";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
};

// node_modules/@ckeditor/ckeditor5-template/dist/index.js
var o10 = class extends Command {
  ["execute"](_0x1564a6) {
    const { model: _0x5b4f80 } = this["editor"];
    let _0x124e56;
    switch (typeof _0x1564a6) {
      case "string":
        _0x124e56 = _0x1564a6;
        break;
      case "function":
        _0x124e56 = _0x1564a6();
    }
    "string" == typeof _0x124e56 && _0x5b4f80["change"](() => {
      const _0x900288 = this["editor"]["data"]["htmlProcessor"]["toView"](_0x124e56), _0x3abf6c = this["editor"]["data"]["toModel"](_0x900288);
      _0x5b4f80["insertContent"](_0x3abf6c);
    });
  }
};
var r16 = class extends Plugin {
  constructor(_0x1d052c) {
    super(_0x1d052c);
    __publicField(this, "_licenseKeyCheckInterval");
    this["_licenseKeyCheckInterval"] = null;
  }
  static get ["pluginName"]() {
    return "TemplateEditing";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    const { editor: _0x206433 } = this;
    _0x206433["commands"]["add"]("insertTemplate", new o10(_0x206433)), this["licenseKey"] = _0x206433["config"]["get"]("licenseKey");
    const _0x48d628 = this["editor"];
    this["_licenseKeyCheckInterval"] = setInterval(() => {
      let _0x3d816f;
      for (const _0x5b808b in _0x48d628) {
        const _0x373b8e = _0x5b808b, _0x134f5d = _0x48d628[_0x373b8e];
        if ("templateLicenseKeyTrial" === _0x134f5d || "templateLicenseKeyInvalid" === _0x134f5d || "templateLicenseKeyValid" === _0x134f5d || "templateLicenseKeyTrialLimit:operations" === _0x134f5d) {
          delete _0x48d628[_0x373b8e], _0x3d816f = _0x134f5d;
          break;
        }
      }
      if ("templateLicenseKeyInvalid" === _0x3d816f) throw clearInterval(this["_licenseKeyCheckInterval"]), new CKEditorError("template-invalid-license-key", null);
      if ("templateLicenseKeyTrial" === _0x3d816f && console["info"]("You are using the trial version of CKEditor 5 template plugin with limited usage. Make sure you will not use it in the production environment."), "templateLicenseKeyTrialLimit:operations" === _0x3d816f) throw clearInterval(this["_licenseKeyCheckInterval"]), new CKEditorError("template-trial-license-key-reached-limit-changes", null);
      "templateLicenseKeyValid" === _0x3d816f && clearInterval(this["_licenseKeyCheckInterval"]);
    }, 1e3);
  }
  ["destroy"]() {
    this["_licenseKeyCheckInterval"] && clearInterval(this["_licenseKeyCheckInterval"]);
  }
};
var d7 = class extends ListView {
  ["filter"](_0xda3462) {
    if (!_0xda3462) return this["_resetFiltering"]();
    const _0x3fb617 = /* @__PURE__ */ new Map(), _0x47c404 = this["items"]["map"]((_0x9431b9) => {
      const _0x17a2c4 = _0x9431b9["buttonView"]["isMatching"](_0xda3462);
      return _0x9431b9["isVisible"] = !!_0x17a2c4, _0x9431b9["buttonView"]["highlightText"](_0x17a2c4 ? _0xda3462 : null), _0x17a2c4 && _0x3fb617["set"](_0x9431b9, _0x17a2c4), _0x9431b9;
    })["sort"](F3)["sort"](/* @__PURE__ */ function(_0xb7f8df) {
      return function(_0x52e248, _0x257b50) {
        const _0xd4ec33 = _0xb7f8df["get"](_0x52e248), _0x13510a = _0xb7f8df["get"](_0x257b50);
        return _0xd4ec33 && !_0x13510a ? -1 : _0x13510a && !_0xd4ec33 ? 1 : _0xd4ec33 || _0x13510a ? _0xd4ec33["title"] && !_0x13510a["title"] ? -1 : !_0xd4ec33["title"] && _0x13510a["title"] ? 1 : 0 : 0;
      };
    }(_0x3fb617));
    return this["items"]["clear"](), this["items"]["addMany"](_0x47c404), { "resultsCount": _0x3fb617["size"], "totalItemsCount": this["items"]["length"] };
  }
  ["_resetFiltering"]() {
    const _0x1678e3 = this["items"]["map"]((_0x2be3df) => _0x2be3df)["sort"](F3);
    return _0x1678e3["forEach"]((_0x2c7a4a) => {
      _0x2c7a4a["isVisible"] = true, _0x2c7a4a["buttonView"]["highlightText"](null);
    }), this["items"]["clear"](), this["items"]["addMany"](_0x1678e3), { "resultsCount": _0x1678e3["length"], "totalItemsCount": _0x1678e3["length"] };
  }
};
function F3(_0x355ca7, _0x3ad4f4) {
  return _0x355ca7["originalIndex"] - _0x3ad4f4["originalIndex"];
}
var b5 = class extends ListItemView {
  constructor(_0x51e6e8, _0x180373) {
    super(_0x51e6e8);
    __publicField(this, "originalIndex");
    __publicField(this, "buttonView");
    this["originalIndex"] = _0x180373, this["buttonView"] = null;
  }
};
var I3 = '<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 45 45">\n  <path fill="#F0F0F0" d="M2 0h41s2 0 2 2v41s0 2 -2 2h-41s-2 0 -2 -2v-41s0 -2 2 -2" />\n  <path fill="#D5D5D5" d="M11 10h10s1 0 1 1v24s0 1 -1 1h-10s-1 0 -1 -1v-24s0 -1 1 -1" />\n  <path fill="#D5D5D5" d="M25 10h10s1 0 1 1v10s0 1 -1 1h-10s-1 0 -1 -1v-10s0 -1 1 -1" />\n  <path fill="#D5D5D5" d="M25 24h10s1 0 1 1v10s0 1 -1 1h-10s-1 0 -1 -1v-10s0 -1 1 -1" />\n</svg>\n';
var h7 = class extends ButtonView {
  constructor(_0x590534, _0x42f0ee) {
    super(_0x590534);
    __publicField(this, "templateDefinition");
    __publicField(this, "textPartView");
    this["templateDefinition"] = _0x42f0ee, this["textPartView"] = null;
    const { icon: _0x39be76 = I3 } = _0x42f0ee;
    this["set"]({ "withText": true, "class": "ck-template-button", "role": "option", "icon": _0x39be76 }), this["iconView"]["isColorInherited"] = false;
  }
  ["render"]() {
    super["render"](), this["textPartView"] = new v9(this["locale"], this["templateDefinition"], this["labelView"]["element"]["id"]), this["children"]["remove"](this["labelView"]), this["children"]["add"](this["textPartView"]);
  }
  ["destroy"]() {
    super["destroy"](), this["labelView"]["destroy"]();
  }
  ["isMatching"](_0x53a0dc) {
    const { title: _0x450e6c, description: _0x23d4b7 } = this["templateDefinition"], _0x4e09c7 = !!_0x450e6c["match"](_0x53a0dc), _0x46e54d = !(!_0x23d4b7 || !_0x23d4b7["match"](_0x53a0dc));
    return _0x4e09c7 || _0x46e54d ? { "title": _0x4e09c7, "description": _0x46e54d } : null;
  }
  ["highlightText"](_0x58f8bc) {
    this["textPartView"]["highlightText"](_0x58f8bc);
  }
};
var v9 = class extends View {
  constructor(_0x3c2879, _0x481272, _0x3b71fa) {
    super(_0x3c2879), this["title"] = _0x481272["title"], this["description"] = _0x481272["description"], this["titleView"] = new HighlightedTextView(), this["titleView"]["text"] = this["title"], this["titleView"]["extendTemplate"]({ "tag": "span", "attributes": { "class": ["ck-button__label"], "id": _0x3b71fa } });
    const _0x3fdd8c = [this["titleView"]];
    this["description"] && (this["descriptionView"] = new HighlightedTextView(), this["descriptionView"]["text"] = this["description"], this["descriptionView"]["extendTemplate"]({ "tag": "p", "attributes": { "class": ["ck-template-form__description"] } }), _0x3fdd8c["push"](this["descriptionView"])), this["setTemplate"]({ "tag": "div", "attributes": { "class": ["ck", "ck-template-form__text-part"] }, "children": _0x3fdd8c });
  }
  ["highlightText"](_0x5e51d1) {
    this["titleView"]["highlightText"](_0x5e51d1), this["description"] && this["descriptionView"]["highlightText"](_0x5e51d1);
  }
};
function g9(_0x498279, _0x51517c, ..._0x289035) {
  const t2 = _0x498279["t"];
  switch (_0x51517c) {
    case 'No templates were found matching "%0".':
      return t2('No templates were found matching "%0".', ..._0x289035);
    case "Please try a different phrase or check the spelling.":
      return t2("Please try a different phrase or check the spelling.");
    case "No templates available.":
      return t2("No templates available.");
    case "%0 templates found":
      return t2("%0 templates found", ..._0x289035);
    case "Search template":
      return t2("Search template");
    case "Template":
      return t2("Template");
    case "Insert template":
      return t2("Insert template");
    default:
      return _0x51517c;
  }
}
var i10 = class extends Plugin {
  static get ["pluginName"]() {
    return "TemplateUI";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    const { editor: _0x57399f } = this, _0x5671a7 = _0x57399f["config"]["get"]("template.definitions") || [];
    _0x57399f["ui"]["componentFactory"]["add"]("insertTemplate", (_0x167ec9) => {
      const _0x194023 = createDropdown(_0x167ec9), _0x4351a6 = this["_createTemplateListView"](_0x167ec9, _0x5671a7), _0xea762f = new SearchTextView(_0x167ec9, { "filteredView": _0x4351a6, "queryView": { "label": g9(_0x167ec9, "Search template") }, "class": "ck-template-form", "infoView": { "text": { "notFound": { "primary": (_0x8b3a8f) => g9(_0x167ec9, 'No templates were found matching "%0".', _0x8b3a8f), "secondary": g9(_0x167ec9, "Please try a different phrase or check the spelling.") }, "noSearchableItems": { "primary": g9(_0x167ec9, "No templates available.") } } } }), _0x615b94 = _0x57399f["commands"]["get"]("insertTemplate");
      return _0xea762f["on"]("search", (_0x41341e, _0x495f5a) => {
        _0x495f5a["query"] && _0x495f5a["query"]["length"] && _0x57399f["ui"]["ariaLiveAnnouncer"]["announce"](g9(_0x167ec9, "%0 templates found", _0x495f5a["resultsCount"]));
      }), _0x194023["bind"]("isEnabled")["to"](_0x615b94), _0x194023["panelView"]["children"]["add"](_0xea762f), _0x194023["buttonView"]["set"]({ "label": g9(_0x167ec9, "Insert template"), "icon": a2["template"], "tooltip": true }), _0x194023["on"]("change:isOpen", (_0x53f914, _0x295a72, _0x4ab502) => {
        _0x4ab502 || _0xea762f["reset"]();
      }), _0x194023;
    }), _0x57399f["ui"]["componentFactory"]["add"]("menuBar:insertTemplate", (_0x14089a) => {
      const _0x1ae820 = _0x57399f["commands"]["get"]("insertTemplate"), _0x3a0189 = new MenuBarMenuView(_0x14089a);
      _0x3a0189["buttonView"]["set"]({ "label": g9(_0x14089a, "Template"), "icon": a2["template"] });
      const _0x3bdc7d = new MenuBarMenuListView(_0x14089a);
      if (!_0x5671a7 || !_0x5671a7["length"]) {
        const _0x1d6313 = new MenuBarMenuListItemView(_0x14089a, _0x3a0189), _0x221e7b = new MenuBarMenuListItemButtonView(_0x14089a);
        _0x221e7b["set"]({ "label": g9(_0x14089a, "No templates available.") }), _0x221e7b["delegate"]("execute")["to"](_0x3a0189), _0x221e7b["on"]("execute", () => {
          _0x57399f["editing"]["view"]["focus"]();
        }), _0x1d6313["children"]["add"](_0x221e7b), _0x3bdc7d["items"]["add"](_0x1d6313);
      }
      for (const _0xa932df of _0x5671a7) {
        const _0x1642e7 = new MenuBarMenuListItemView(_0x14089a, _0x3a0189), _0x40de3f = new MenuBarMenuListItemButtonView(_0x14089a);
        _0x40de3f["set"]({ "class": "ck-template-button", "label": _0xa932df["title"], "icon": _0xa932df["icon"] || I3 }), _0x40de3f["delegate"]("execute")["to"](_0x3a0189), _0x40de3f["on"]("execute", () => {
          _0x57399f["execute"]("insertTemplate", _0xa932df["data"]), _0x57399f["editing"]["view"]["focus"]();
        }), _0x1642e7["children"]["add"](_0x40de3f), _0x3bdc7d["items"]["add"](_0x1642e7);
      }
      return _0x3a0189["panelView"]["children"]["add"](_0x3bdc7d), _0x3a0189["bind"]("isEnabled")["to"](_0x1ae820, "isEnabled"), _0x3a0189;
    });
  }
  ["afterInit"]() {
    !function(_0x316281) {
      function _0x1fcdc0(_0x13362a, _0x25a450, _0xd10b52) {
        const _0x13b2f7 = {};
        _0x13b2f7[_0x553a38([110, 117, 109, 98, 101, 114, 79, 102, 82, 111, 117, 110, 100, 115])] = { 16: 10, 24: 12, 32: 14 }, _0x13b2f7[_0x553a38([114, 99, 111, 110])] = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145], _0x13b2f7[_0x553a38([83])] = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], _0x13b2f7[_0x553a38([84, 49])] = [3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474, 1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738, 597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420, 3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577, 605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627, 2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520, 3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205, 2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474, 1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309, 3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720, 2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771, 1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243, 3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470, 1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977, 2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737, 1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754, 361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755, 697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986], _0x13b2f7[_0x553a38([84, 50])] = [2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899, 2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108, 4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129, 2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848, 1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043, 1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914, 1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139, 2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658, 3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324, 3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385, 3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499, 1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572, 2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810, 3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411, 3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753, 2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487, 550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313, 2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766], _0x13b2f7[_0x553a38([84, 51])] = [1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099, 1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188, 2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329, 1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768, 3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283, 3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114, 3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739, 2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538, 2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324, 1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865, 1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296, 844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713, 3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050, 2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131, 3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513, 2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927, 3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905, 2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126], _0x13b2f7[_0x553a38([84, 52])] = [1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549, 1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243, 2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529, 1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963, 3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198, 3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564, 3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214, 2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143, 2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699, 1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945, 1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771, 842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818, 3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340, 2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126, 3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473, 2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917, 3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930, 2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436], _0x13b2f7[_0x553a38([85, 49])] = [0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795], _0x13b2f7[_0x553a38([85, 50])] = [0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459, 2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537, 3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535, 77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884, 3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824, 3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622, 507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216, 3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879, 129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469, 3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175, 1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921, 2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127, 3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560, 1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387, 2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037, 4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148, 692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663, 2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855], _0x13b2f7[_0x553a38([85, 51])] = [0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639, 3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557, 2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032, 3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201, 344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239, 532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878, 3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771, 4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744, 671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199, 4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366, 492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798, 2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695, 3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569, 4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702, 3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217, 1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635, 1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009, 3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150], _0x13b2f7[_0x553a38([85, 52])] = [0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874, 2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222, 4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595, 1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591, 4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837, 923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127, 2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424, 2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110, 4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469, 4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481, 1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243, 3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604, 2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802, 585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166, 4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912, 1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703, 3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213, 2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925];
        const _0x28f315 = new Uint8Array(16);
        for (let _0x5e5098 = 15; _0x5e5098 >= 0; --_0x5e5098) _0x28f315[_0x5e5098] = _0xd10b52 % 256, _0xd10b52 = parseInt(_0xd10b52 / 256);
        let _0xc734fb = null, _0x805732 = 16;
        const _0x4cfb2d = new Uint8Array(_0x25a450), _0x20d505 = [], _0x441a44 = [];
        _0x388bdc();
        for (let _0x473d7d = 0; _0x473d7d < _0x13362a[_0x553a38([108, 101, 110, 103, 116, 104])]; _0x473d7d++) 16 === _0x805732 && (_0xc734fb = _0xd30bfa(_0x28f315), _0x805732 = 0, _0x78819(_0x28f315)), _0x13362a[_0x473d7d] ^= _0xc734fb[_0x805732++];
        return _0x13362a;
        function _0xe06002(_0x5b5c5a) {
          const _0x1611cc = [];
          for (let _0x9fedd4 = 0; _0x9fedd4 < _0x5b5c5a[_0x553a38([108, 101, 110, 103, 116, 104])]; _0x9fedd4 += 4) _0x1611cc[_0x553a38([112, 117, 115, 104])](_0x5b5c5a[_0x9fedd4] << 24 | _0x5b5c5a[_0x9fedd4 + 1] << 16 | _0x5b5c5a[_0x9fedd4 + 2] << 8 | _0x5b5c5a[_0x9fedd4 + 3]);
          return _0x1611cc;
        }
        function _0x78819(_0x1087fb) {
          for (let _0x1ca9a3 = 15; _0x1ca9a3 >= 0; _0x1ca9a3--) {
            if (255 !== _0x1087fb[_0x1ca9a3]) {
              _0x1087fb[_0x1ca9a3]++;
              break;
            }
            _0x1087fb[_0x1ca9a3] = 0;
          }
        }
        function _0xd30bfa(_0x10c1e8) {
          const _0x213158 = _0x20d505[_0x553a38([108, 101, 110, 103, 116, 104])] - 1, _0xa12bbf = [0, 0, 0, 0];
          let t2 = _0xe06002(_0x10c1e8);
          for (let _0x209216 = 0; _0x209216 < 4; _0x209216++) t2[_0x209216] ^= _0x20d505[0][_0x209216];
          for (let _0x47d977 = 1; _0x47d977 < _0x213158; _0x47d977++) {
            for (let _0x437871 = 0; _0x437871 < 4; _0x437871++) _0xa12bbf[_0x437871] = _0x13b2f7[_0x553a38([84, 49])][t2[_0x437871] >> 24 & 255] ^ _0x13b2f7[_0x553a38([84, 50])][t2[(_0x437871 + 1) % 4] >> 16 & 255] ^ _0x13b2f7[_0x553a38([84, 51])][t2[(_0x437871 + 2) % 4] >> 8 & 255] ^ _0x13b2f7[_0x553a38([84, 52])][255 & t2[(_0x437871 + 3) % 4]] ^ _0x20d505[_0x47d977][_0x437871];
            t2 = _0xa12bbf[_0x553a38([115, 108, 105, 99, 101])]();
          }
          const _0x3b4227 = new Uint8Array(16);
          let _0x1a0aaf;
          for (let _0x3d2ca0 = 0; _0x3d2ca0 < 4; _0x3d2ca0++) _0x1a0aaf = _0x20d505[_0x213158][_0x3d2ca0], _0x3b4227[4 * _0x3d2ca0] = 255 & (_0x13b2f7[_0x553a38([83])][t2[_0x3d2ca0] >> 24 & 255] ^ _0x1a0aaf >> 24), _0x3b4227[4 * _0x3d2ca0 + 1] = 255 & (_0x13b2f7[_0x553a38([83])][t2[(_0x3d2ca0 + 1) % 4] >> 16 & 255] ^ _0x1a0aaf >> 16), _0x3b4227[4 * _0x3d2ca0 + 2] = 255 & (_0x13b2f7[_0x553a38([83])][t2[(_0x3d2ca0 + 2) % 4] >> 8 & 255] ^ _0x1a0aaf >> 8), _0x3b4227[4 * _0x3d2ca0 + 3] = 255 & (_0x13b2f7[_0x553a38([83])][255 & t2[(_0x3d2ca0 + 3) % 4]] ^ _0x1a0aaf);
          return _0x3b4227;
        }
        function _0x388bdc() {
          const _0x57b8ba = _0x13b2f7[_0x553a38([110, 117, 109, 98, 101, 114, 79, 102, 82, 111, 117, 110, 100, 115])][_0x4cfb2d[_0x553a38([108, 101, 110, 103, 116, 104])]];
          for (let _0x1ddb56 = 0; _0x1ddb56 <= _0x57b8ba; _0x1ddb56++) _0x20d505[_0x553a38([112, 117, 115, 104])]([0, 0, 0, 0]), _0x441a44[_0x553a38([112, 117, 115, 104])]([0, 0, 0, 0]);
          const _0x383d34 = 4 * (_0x57b8ba + 1), _0x3f1e60 = _0x4cfb2d[_0x553a38([108, 101, 110, 103, 116, 104])] / 4, _0x21538d = _0xe06002(_0x4cfb2d);
          let _0x1859d5;
          for (let _0x47165f = 0; _0x47165f < _0x3f1e60; _0x47165f++) _0x1859d5 = _0x47165f >> 2, _0x20d505[_0x1859d5][_0x47165f % 4] = _0x21538d[_0x47165f], _0x441a44[_0x57b8ba - _0x1859d5][_0x47165f % 4] = _0x21538d[_0x47165f];
          let _0x483af2, _0x170ff5 = 0, t2 = _0x3f1e60;
          for (; t2 < _0x383d34; ) {
            _0x483af2 = _0x21538d[_0x3f1e60 - 1], _0x21538d[0] ^= _0x13b2f7[_0x553a38([83])][_0x483af2 >> 16 & 255] << 24 ^ _0x13b2f7[_0x553a38([83])][_0x483af2 >> 8 & 255] << 16 ^ _0x13b2f7[_0x553a38([83])][255 & _0x483af2] << 8 ^ _0x13b2f7[_0x553a38([83])][_0x483af2 >> 24 & 255] ^ _0x13b2f7[_0x553a38([114, 99, 111, 110])][_0x170ff5] << 24, _0x170ff5 += 1;
            for (let _0x117e0c = 1; _0x117e0c < _0x3f1e60 / 2; _0x117e0c++) _0x21538d[_0x117e0c] ^= _0x21538d[_0x117e0c - 1];
            _0x483af2 = _0x21538d[_0x3f1e60 / 2 - 1], _0x21538d[_0x3f1e60 / 2] ^= _0x13b2f7[_0x553a38([83])][255 & _0x483af2] ^ _0x13b2f7[_0x553a38([83])][_0x483af2 >> 8 & 255] << 8 ^ _0x13b2f7[_0x553a38([83])][_0x483af2 >> 16 & 255] << 16 ^ _0x13b2f7[_0x553a38([83])][_0x483af2 >> 24 & 255] << 24;
            for (let _0x23a87c = _0x3f1e60 / 2 + 1; _0x23a87c < _0x3f1e60; _0x23a87c++) _0x21538d[_0x23a87c] ^= _0x21538d[_0x23a87c - 1];
            let _0x48d5c1, _0x24c7b8, _0x36c1f4 = 0;
            for (; _0x36c1f4 < _0x3f1e60 && t2 < _0x383d34; ) _0x48d5c1 = t2 >> 2, _0x24c7b8 = t2 % 4, _0x20d505[_0x48d5c1][_0x24c7b8] = _0x21538d[_0x36c1f4], _0x441a44[_0x57b8ba - _0x48d5c1][_0x24c7b8] = _0x21538d[_0x36c1f4++], t2++;
          }
          for (let _0x463924 = 1; _0x463924 < _0x57b8ba; _0x463924++) for (let _0x2a1c5a = 0; _0x2a1c5a < 4; _0x2a1c5a++) _0x483af2 = _0x441a44[_0x463924][_0x2a1c5a], _0x441a44[_0x463924][_0x2a1c5a] = _0x13b2f7[_0x553a38([85, 49])][_0x483af2 >> 24 & 255] ^ _0x13b2f7[_0x553a38([85, 50])][_0x483af2 >> 16 & 255] ^ _0x13b2f7[_0x553a38([85, 51])][_0x483af2 >> 8 & 255] ^ _0x13b2f7[_0x553a38([85, 52])][255 & _0x483af2];
        }
      }
      function _0x553a38(_0x4b7a0f) {
        return _0x4b7a0f["map"]((_0x126417) => String["fromCharCode"](_0x126417))["join"]("");
      }
      ((_0x8972e4) => {
        function _0x551626() {
          const _0x20946 = [{ [_0x553a38([105, 100])]: 1, [_0x553a38([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x553a38([67, 111, 109, 109, 101, 110, 116, 115]), [_0x553a38([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x553a38([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]), [_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x553a38([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x553a38([104, 97, 110, 100, 108, 101, 114])]: _0x553a38([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x553a38([99, 104, 101, 99, 107, 65, 108, 115, 111])]: [{ [_0x553a38([105, 100])]: 2, [_0x553a38([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x553a38([84, 114, 97, 99, 107, 32, 67, 104, 97, 110, 103, 101, 115]), [_0x553a38([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x553a38([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103]), [_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x553a38([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x553a38([104, 97, 110, 100, 108, 101, 114])]: _0x553a38([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115]), [_0x553a38([111, 112, 116, 105, 111, 110, 115])]: { [_0x553a38([97, 105, 119, 115, 103, 105, 99])]: true, [_0x553a38([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x553a38([97, 105, 114, 118, 105, 105, 108])]: true } }], [_0x553a38([111, 112, 116, 105, 111, 110, 115])]: { [_0x553a38([97, 105, 119, 115, 103, 105, 99])]: true, [_0x553a38([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x553a38([97, 105, 114, 118, 105, 105, 108])]: true } }, { [_0x553a38([105, 100])]: 3, [_0x553a38([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x553a38([80, 97, 103, 105, 110, 97, 116, 105, 111, 110]), [_0x553a38([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x553a38([80, 97, 103, 105, 110, 97, 116, 105, 111, 110, 76, 111, 111, 107, 117, 112]), [_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x553a38([112, 97, 103, 105, 110, 97, 116, 105, 111, 110, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x553a38([104, 97, 110, 100, 108, 101, 114])]: _0x553a38([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x553a38([105, 100])]: 4, [_0x553a38([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x553a38([82, 101, 118, 105, 115, 105, 111, 110, 32, 72, 105, 115, 116, 111, 114, 121]), [_0x553a38([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x553a38([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]), [_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x553a38([108, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x553a38([104, 97, 110, 100, 108, 101, 114])]: _0x553a38([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 82, 101, 118, 105, 115, 105, 111, 110, 72, 105, 115, 116, 111, 114, 121]), [_0x553a38([111, 112, 116, 105, 111, 110, 115])]: { [_0x553a38([97, 105, 119, 115, 103, 105, 99])]: true, [_0x553a38([97, 105, 116, 99, 100, 103, 105, 108])]: true, [_0x553a38([97, 105, 114, 118, 105, 105, 108])]: true } }, { [_0x553a38([105, 100])]: 5, [_0x553a38([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x553a38([68, 111, 99, 117, 109, 101, 110, 116, 32, 79, 117, 116, 108, 105, 110, 101]), [_0x553a38([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x553a38([68, 111, 99, 117, 109, 101, 110, 116, 79, 117, 116, 108, 105, 110, 101, 85, 73]), [_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x553a38([100, 111, 99, 117, 109, 101, 110, 116, 79, 117, 116, 108, 105, 110, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x553a38([104, 97, 110, 100, 108, 101, 114])]: _0x553a38([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x553a38([111, 112, 116, 105, 111, 110, 115])]: { [_0x553a38([102, 103, 105])]: [12] } }, { [_0x553a38([105, 100])]: 6, [_0x553a38([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x553a38([70, 111, 114, 109, 97, 116, 32, 80, 97, 105, 110, 116, 101, 114]), [_0x553a38([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x553a38([70, 111, 114, 109, 97, 116, 80, 97, 105, 110, 116, 101, 114, 85, 73]), [_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x553a38([102, 111, 114, 109, 97, 116, 80, 97, 105, 110, 116, 101, 114, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x553a38([104, 97, 110, 100, 108, 101, 114])]: _0x553a38([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x553a38([111, 112, 116, 105, 111, 110, 115])]: { [_0x553a38([102, 103, 105])]: [12] } }, { [_0x553a38([105, 100])]: 7, [_0x553a38([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x553a38([83, 108, 97, 115, 104, 32, 67, 111, 109, 109, 97, 110, 100]), [_0x553a38([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x553a38([83, 108, 97, 115, 104, 67, 111, 109, 109, 97, 110, 100, 85, 73]), [_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x553a38([115, 108, 97, 115, 104, 67, 111, 109, 109, 97, 110, 100, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x553a38([104, 97, 110, 100, 108, 101, 114])]: _0x553a38([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x553a38([111, 112, 116, 105, 111, 110, 115])]: { [_0x553a38([102, 103, 105])]: [12] } }, { [_0x553a38([105, 100])]: 8, [_0x553a38([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x553a38([84, 97, 98, 108, 101, 32, 111, 102, 32, 67, 111, 110, 116, 101, 110, 116, 115]), [_0x553a38([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x553a38([84, 97, 98, 108, 101, 79, 102, 67, 111, 110, 116, 101, 110, 116, 115, 69, 100, 105, 116, 105, 110, 103]), [_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x553a38([116, 97, 98, 108, 101, 79, 102, 67, 111, 110, 116, 101, 110, 116, 115, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x553a38([104, 97, 110, 100, 108, 101, 114])]: _0x553a38([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x553a38([111, 112, 116, 105, 111, 110, 115])]: { [_0x553a38([102, 103, 105])]: [12] } }, { [_0x553a38([105, 100])]: 9, [_0x553a38([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x553a38([84, 101, 109, 112, 108, 97, 116, 101]), [_0x553a38([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x553a38([84, 101, 109, 112, 108, 97, 116, 101, 85, 73]), [_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x553a38([116, 101, 109, 112, 108, 97, 116, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x553a38([104, 97, 110, 100, 108, 101, 114])]: _0x553a38([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x553a38([111, 112, 116, 105, 111, 110, 115])]: { [_0x553a38([102, 103, 105])]: [12, 14] } }, { [_0x553a38([105, 100])]: 10, [_0x553a38([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x553a38([80, 97, 115, 116, 101, 32, 102, 114, 111, 109, 32, 79, 102, 102, 105, 99, 101, 32, 69, 110, 104, 97, 110, 99, 101, 100]), [_0x553a38([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x553a38([80, 97, 115, 116, 101, 70, 114, 111, 109, 79, 102, 102, 105, 99, 101, 69, 110, 104, 97, 110, 99, 101, 100, 73, 110, 108, 105, 110, 101, 114]), [_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x553a38([112, 97, 115, 116, 101, 70, 114, 111, 109, 79, 102, 102, 105, 99, 101, 69, 110, 104, 97, 110, 99, 101, 100, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x553a38([104, 97, 110, 100, 108, 101, 114])]: _0x553a38([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x553a38([111, 112, 116, 105, 111, 110, 115])]: { [_0x553a38([102, 103, 105])]: [12] } }, { [_0x553a38([105, 100])]: 11, [_0x553a38([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x553a38([65, 73, 32, 65, 115, 115, 105, 115, 116, 97, 110, 116]), [_0x553a38([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x553a38([65, 73, 65, 115, 115, 105, 115, 116, 97, 110, 116, 85, 73]), [_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x553a38([97, 105, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x553a38([104, 97, 110, 100, 108, 101, 114])]: _0x553a38([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x553a38([105, 100])]: 12, [_0x553a38([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x553a38([80, 114, 111, 100, 117, 99, 116, 105, 118, 105, 116, 121, 32, 112, 97, 99, 107]) }, { [_0x553a38([105, 100])]: 13, [_0x553a38([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x553a38([67, 97, 115, 101, 32, 67, 104, 97, 110, 103, 101]), [_0x553a38([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x553a38([67, 97, 115, 101, 67, 104, 97, 110, 103, 101, 85, 73]), [_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x553a38([99, 97, 115, 101, 67, 104, 97, 110, 103, 101, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x553a38([104, 97, 110, 100, 108, 101, 114])]: _0x553a38([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x553a38([111, 112, 116, 105, 111, 110, 115])]: { [_0x553a38([102, 103, 105])]: [12] } }, { [_0x553a38([105, 100])]: 14, [_0x553a38([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x553a38([68, 114, 117, 112, 97, 108, 32, 112, 97, 99, 107]), [_0x553a38([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114])]: _0x553a38([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114, 70, 111, 114, 68, 114, 117, 112, 97, 108]) }, { [_0x553a38([105, 100])]: 15, [_0x553a38([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x553a38([77, 117, 108, 116, 105, 32, 76, 101, 118, 101, 108, 32, 76, 105, 115, 116]), [_0x553a38([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x553a38([77, 117, 108, 116, 105, 76, 101, 118, 101, 108, 76, 105, 115, 116, 69, 100, 105, 116, 105, 110, 103]), [_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x553a38([109, 117, 108, 116, 105, 76, 101, 118, 101, 108, 76, 105, 115, 116, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x553a38([104, 97, 110, 100, 108, 101, 114])]: _0x553a38([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]) }, { [_0x553a38([105, 100])]: 16, [_0x553a38([102, 101, 97, 116, 117, 114, 101, 78, 97, 109, 101])]: _0x553a38([77, 101, 114, 103, 101, 32, 70, 105, 101, 108, 100, 115]), [_0x553a38([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]: _0x553a38([77, 101, 114, 103, 101, 70, 105, 101, 108, 100, 115, 85, 73]), [_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]: _0x553a38([109, 101, 114, 103, 101, 70, 105, 101, 108, 100, 115, 76, 105, 99, 101, 110, 115, 101, 75, 101, 121]), [_0x553a38([104, 97, 110, 100, 108, 101, 114])]: _0x553a38([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101]), [_0x553a38([111, 112, 116, 105, 111, 110, 115])]: { [_0x553a38([102, 103, 105])]: [12] } }];
          return _0x4d4c29(_0x20946), _0x20946;
          function _0xd4bd2(_0x1d9e1d) {
            return 1 << _0x1d9e1d - 1;
          }
          function _0x4d4c29(_0x5f7f99) {
            _0x5f7f99[_0x553a38([102, 111, 114, 69, 97, 99, 104])]((_0x553940) => {
              _0x553940[_0x553a38([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])] = _0xd4bd2(_0x553940[_0x553a38([105, 100])]), _0x37685c(_0x553940) && _0x553940[_0x553a38([99, 104, 101, 99, 107, 65, 108, 115, 111])] && _0x4d4c29(_0x553940[_0x553a38([99, 104, 101, 99, 107, 65, 108, 115, 111])]);
            });
          }
        }
        function _0x37685c(_0x25cce9) {
          return _0x553a38([112, 108, 117, 103, 105, 110, 78, 97, 109, 101]) in _0x25cce9;
        }
        const _0x45e610 = [1, 85, 78, 115, 198, 255, 50, 112, 83, 87, 161], _0x39ab18 = [127, 34, 6, 211, 167, 86, 146, 199, 132, 160, 18];
        function _0x1eb735(_0x2dc889) {
          const _0x395813 = [29, 221, 175, 90, 231, 133, 239, 240, 75, 180];
          return _0x3c39a7(_0x2dc889, new Uint8Array([..._0x45e610, ..._0x395813, ..._0x39ab18]));
        }
        function _0x3c39a7(_0x56b736, _0x289a7a) {
          const _0x5b6ab7 = _0xc7dfe5(_0x56b736), _0xc30600 = Array[_0x553a38([102, 114, 111, 109])](_0x1572e7(_0x5b6ab7)), _0x25665a = _0xc30600[_0x553a38([112, 111, 112])](), _0x4b94f5 = _0xc30600[_0x553a38([112, 111, 112])]();
          return _0x5c6d89(_0x1fcdc0(_0xc30600, _0x289a7a, _0x4b94f5 + 256 * _0x25665a));
        }
        function _0xc7dfe5(_0x259325) {
          const _0x1ba39f = atob(_0x259325), [_0x546715, _0x67a462] = _0x1ba39f[_0x553a38([115, 112, 108, 105, 116])](_0x553a38([45]));
          try {
            if (atob(_0x67a462)) return atob(_0x546715);
          } catch (_0x5b083f) {
          }
          return _0x1ba39f;
        }
        function _0x3fa9af(_0x2b1cdf) {
          try {
            const _0x25d147 = _0x1eb735(_0x2b1cdf), _0x14cba5 = JSON[_0x553a38([112, 97, 114, 115, 101])](_0x25d147), _0x1921fa = parseInt(_0x14cba5[_0x553a38([49])]), _0x52eb2e = _0x14cba5[_0x553a38([50])] || "", _0x1a7cb0 = parseInt(_0x14cba5[_0x553a38([51])]), _0x446948 = parseInt(_0x14cba5[_0x553a38([52])]) || 0, _0x51871f = parseInt(_0x14cba5[_0x553a38([53])]) || 0;
            return { [_0x553a38([112, 114, 111, 100, 117, 99, 116, 78, 97, 109, 101])]: _0x52eb2e, [_0x553a38([97, 108, 108, 111, 119, 101, 100, 80, 108, 117, 103, 105, 110, 115])]: _0x446948, [_0x553a38([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])]: _0x1921fa, [_0x553a38([105, 115, 84, 114, 105, 97, 108])]: _0x1a7cb0, [_0x553a38([105, 115, 73, 110, 116, 101, 114, 110, 97, 108])]: _0x51871f };
          } catch (_0x2a8304) {
            return null;
          }
        }
        const _0x5ff743 = _0x551626(), _0xbe996f = { [_0x553a38([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101])]: _0x330050, [_0x553a38([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115])]: _0x2a2dc6, [_0x553a38([99, 104, 101, 99, 107, 76, 105, 99, 101, 110, 115, 101, 70, 111, 114, 82, 101, 118, 105, 115, 105, 111, 110, 72, 105, 115, 116, 111, 114, 121])]: _0x52efd7 }, _0x575712 = _0x8972e4[_0x553a38([99, 111, 110, 115, 116, 114, 117, 99, 116, 111, 114])][_0x553a38([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])], _0x477644 = _0x553a38([99, 111, 110, 116, 101, 120, 116]) in _0x8972e4 ? _0x8972e4["context"] : _0x8972e4["editor"], _0xee241e = _0x553a38([52, 48, 52, 56, 50, 50, 49, 50]), _0x4f1223 = _0x553a38([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]), _0x51613c = _0x477644["config"]["get"](_0x553a38([108, 105, 99, 101, 110, 115, 101, 75, 101, 121])), _0x5355d1 = _0x5ff743[_0x553a38([102, 105, 108, 116, 101, 114])](_0x37685c)[_0x553a38([102, 105, 110, 100])]((_0x2ff197) => _0x2ff197[_0x553a38([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])] === _0x575712);
        function _0x337566(_0x3d627b, _0x20493e) {
          _0xbe996f[_0x20493e[_0x553a38([104, 97, 110, 100, 108, 101, 114])]](_0x3d627b, _0x20493e), _0x20493e[_0x553a38([99, 104, 101, 99, 107, 65, 108, 115, 111])] && _0x20493e[_0x553a38([99, 104, 101, 99, 107, 65, 108, 115, 111])][_0x553a38([102, 105, 108, 116, 101, 114])]((_0x2a6fb9) => _0x5d9fe0(_0x477644, _0x2a6fb9[_0x553a38([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])]))[_0x553a38([102, 111, 114, 69, 97, 99, 104])]((_0x1c6a69) => _0x337566(_0x3d627b, _0x1c6a69));
        }
        function _0x330050(_0x4b7b92, _0x3ee664) {
          _0x22c979(_0x5a1356(_0x4b7b92, _0x3ee664), _0x3ee664);
        }
        function _0x2a2dc6(_0x57b57d, _0x48b84c) {
          function _0x237b9d(_0x544653, _0x10ca6e) {
            try {
              if (_0x5d9fe0(_0x477644, _0x553a38([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103])) && _0x544653) {
                const _0x21469e = _0x8516db(_0x477644, _0x553a38([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 69, 100, 105, 116, 105, 110, 103]))[_0x553a38([95, 101, 120, 101, 99, 117, 116, 101, 83, 117, 103, 103, 101, 115, 116, 105, 111, 110])];
                if (parseInt(_0x21469e) / 2 > _0x544653[_0x553a38([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])]) return _0x1e5aaa(_0x10ca6e[_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x553a38([73, 110, 118, 97, 108, 105, 100]));
              }
              return _0x5a1356(_0x544653, _0x10ca6e);
            } catch (_0x1a3690) {
              return _0x1e5aaa(_0x10ca6e[_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x553a38([73, 110, 118, 97, 108, 105, 100]));
            }
          }
          _0x22c979(_0x237b9d(_0x57b57d, _0x48b84c), _0x48b84c);
        }
        function _0x52efd7(_0x4f8f81, _0x315b17) {
          const _0x576c31 = _0x39ab18[0] * _0x45e610[1], _0xa2aeba = _0x39ab18[0] * _0x45e610[2], _0x978154 = _0x39ab18[2] * _0x45e610[2];
          _0x5d9fe0(_0x477644, _0x553a38([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121])) && _0x8516db(_0x477644, _0x553a38([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121]))[_0x553a38([115, 116, 97, 116, 101])] == _0x553a38([99, 111, 110, 110, 101, 99, 116, 101, 100]) && (window[_0x345a5d()] = _0x978154);
          function _0x1d4907(_0x11fc51, _0x3aa303) {
            try {
              return _0x4b0412() ? _0x1e5aaa(_0x3aa303[_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x553a38([86, 97, 108, 105, 100])) : _0x5a1356(_0x11fc51, _0x3aa303);
            } catch (_0x4990ab) {
              return _0x1e5aaa(_0x3aa303[_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x553a38([73, 110, 118, 97, 108, 105, 100]));
            }
          }
          function _0x5ed8e4(_0x5e5031, _0x5aedc7) {
            const _0x3b9188 = 7;
            if (_0x5e5031 == _0x5aedc7[_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x553a38([73, 110, 118, 97, 108, 105, 100])) _0x2ba55c();
            else {
              if (_0x5e5031 == _0x5aedc7[_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x553a38([84, 114, 105, 97, 108])) {
                const _0x136a8c = _0x14e2f6();
                _0x136a8c && _0x42125b(_0x136a8c, _0x5aedc7[_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                const _0x5516b7 = _0x324bce();
                window[_0x553a38([115, 101, 116, 84, 105, 109, 101, 111, 117, 116])](() => {
                  _0x42125b(_0x553a38([116, 105, 109, 101]), _0x5aedc7[_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                }, _0x5516b7);
                const _0x1fbf82 = _0x8516db(_0x477644, _0x553a38([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x553a38([95, 114, 101, 118, 105, 115, 105, 111, 110, 115])];
                _0x1fbf82[_0x553a38([108, 101, 110, 103, 116, 104])] >= _0x3b9188 ? _0x42125b(_0x553a38([114, 101, 118, 105, 115, 105, 111, 110, 115]), _0x5aedc7[_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]) : _0x1fbf82["on"](_0x553a38([97, 100, 100]), () => {
                  _0x1fbf82[_0x553a38([108, 101, 110, 103, 116, 104])] >= _0x3b9188 && _0x42125b(_0x553a38([114, 101, 118, 105, 115, 105, 111, 110, 115]), _0x5aedc7[_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])]);
                });
              }
            }
          }
          function _0x14e2f6() {
            if (!_0x5d9fe0(_0x477644, _0x553a38([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) return false;
            for (const _0x530d1b in window) if (Number["isNaN"](Number(_0x530d1b))) {
              if (window[_0x530d1b] === _0x576c31) return _0x553a38([116, 105, 109, 101]);
              if (window[_0x530d1b] === _0xa2aeba) return _0x553a38([114, 101, 118, 105, 115, 105, 111, 110, 115]);
            }
            return false;
          }
          function _0x4b0412() {
            if (!_0x5d9fe0(_0x477644, _0x553a38([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) return false;
            for (const _0x473779 in window) if (Number["isNaN"](Number(_0x473779)) && window[_0x473779] === _0x978154) return true;
            return false;
          }
          function _0x42125b(_0x353af4, _0x4d84dc) {
            _0x2ba55c(), _0x1e5aaa(_0x4d84dc + _0x553a38([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58]) + _0x353af4), window[_0x345a5d()] = _0x353af4 === _0x553a38([116, 105, 109, 101]) ? _0x576c31 : _0xa2aeba;
          }
          function _0x324bce() {
            let _0x37a30b = _0x39ab18[6] * _0x45e610[8] * _0x45e610[6];
            return _0x5d9fe0(_0x477644, _0x553a38([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114])) && (_0x37a30b /= 10), _0x37a30b;
          }
          function _0x2ba55c() {
            const _0x5967e9 = _0x477644;
            function _0x1a0373() {
              _0x5d9fe0(_0x5967e9, _0x553a38([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114])) && (_0x8516db(_0x5967e9, _0x553a38([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x553a38([117, 110, 98, 105, 110, 100])](_0x553a38([105, 115, 69, 110, 97, 98, 108, 101, 100])), _0x8516db(_0x5967e9, _0x553a38([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x553a38([105, 115, 69, 110, 97, 98, 108, 101, 100])] = false, _0x8516db(_0x5967e9, _0x553a38([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x553a38([117, 112, 100, 97, 116, 101])] = _0x3a2f3d, _0x8516db(_0x5967e9, _0x553a38([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114]))[_0x553a38([115, 97, 118, 101, 82, 101, 118, 105, 115, 105, 111, 110])] = _0x3a2f3d, _0x5967e9[_0x553a38([109, 111, 100, 101, 108])][_0x553a38([99, 104, 97, 110, 103, 101])] = _0x3a2f3d, _0x5967e9[_0x553a38([109, 111, 100, 101, 108])][_0x553a38([101, 110, 113, 117, 101, 117, 101, 67, 104, 97, 110, 103, 101])] = _0x3a2f3d, _0x5967e9[_0x553a38([101, 110, 97, 98, 108, 101, 82, 101, 97, 100, 79, 110, 108, 121, 77, 111, 100, 101])](_0x553a38([109, 111, 100, 101, 108]))), _0x5d9fe0(_0x5967e9, _0x553a38([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114])) && (_0x8516db(_0x5967e9, _0x553a38([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x553a38([117, 110, 98, 105, 110, 100])](_0x553a38([105, 115, 69, 110, 97, 98, 108, 101, 100])), _0x8516db(_0x5967e9, _0x553a38([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x553a38([105, 115, 69, 110, 97, 98, 108, 101, 100])] = false, _0x8516db(_0x5967e9, _0x553a38([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x553a38([99, 111, 109, 112, 97, 114, 101])] = _0x3a2f3d, _0x8516db(_0x5967e9, _0x553a38([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x553a38([95, 103, 101, 116, 68, 105, 102, 102])] = _0x3a2f3d);
            }
            _0x5967e9[_0x553a38([115, 116, 97, 116, 101])] == _0x553a38([114, 101, 97, 100, 121]) ? _0x1a0373() : _0x5967e9[_0x553a38([111, 110, 99, 101])](_0x553a38([114, 101, 97, 100, 121]), () => {
              if (_0x5d9fe0(_0x5967e9, _0x553a38([82, 101, 118, 105, 115, 105, 111, 110, 84, 114, 97, 99, 107, 101, 114])) && _0x1a0373(), _0x5d9fe0(_0x5967e9, _0x553a38([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))) {
                const _0x36fe77 = _0x8516db(_0x5967e9, _0x553a38([82, 101, 118, 105, 115, 105, 111, 110, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121])), _0x386233 = _0x36fe77["getRevision"](0), _0x18d8bd = _0x36fe77["getEarlierVisibleRevision"](_0x386233[_0x553a38([105, 100])]);
                _0x8516db(_0x5967e9, _0x553a38([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114]))[_0x553a38([99, 111, 109, 112, 97, 114, 101])](_0x386233[_0x553a38([105, 100])], _0x18d8bd ? _0x18d8bd[_0x553a38([105, 100])] : null, 1)["then"](() => _0x1a0373());
              }
            });
          }
          _0x5ed8e4(_0x1d4907(_0x4f8f81, _0x315b17), _0x315b17);
        }
        function _0x5a1356(_0x476e87, _0x402c3c) {
          try {
            return _0x4df044(_0x402c3c) ? _0x1e5aaa(_0x402c3c[_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x553a38([86, 97, 108, 105, 100])) : _0x476e87 && _0x28eb18(_0x476e87[_0x553a38([97, 108, 108, 111, 119, 101, 100, 80, 108, 117, 103, 105, 110, 115])], _0x402c3c) ? _0x476e87[_0x553a38([105, 115, 73, 110, 116, 101, 114, 110, 97, 108])] && !window[_0x553a38([111, 112, 101, 110])][_0x553a38([99, 108, 111, 115, 101, 100])] || parseInt(_0xee241e) / 2 > _0x476e87[_0x553a38([101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 68, 97, 116, 101])] ? _0x1e5aaa(_0x402c3c[_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x553a38([73, 110, 118, 97, 108, 105, 100])) : _0x476e87[_0x553a38([105, 115, 84, 114, 105, 97, 108])] ? _0x1e5aaa(_0x402c3c[_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x553a38([84, 114, 105, 97, 108])) : _0x1e5aaa(_0x402c3c[_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x553a38([86, 97, 108, 105, 100])) : _0x1e5aaa(_0x402c3c[_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x553a38([73, 110, 118, 97, 108, 105, 100]));
          } catch (_0x1f2617) {
            return _0x1e5aaa(_0x402c3c[_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x553a38([73, 110, 118, 97, 108, 105, 100]));
          }
        }
        function _0x22c979(_0x3f56e1, _0x4e0f90) {
          if (_0x477644 instanceof Context) {
            const _0x4201c9 = _0x477644;
            _0x3f56e1 == _0x4e0f90[_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x553a38([73, 110, 118, 97, 108, 105, 100]) ? _0x53c9f7(_0x4201c9) : _0x3f56e1 == _0x4e0f90[_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x553a38([84, 114, 105, 97, 108]) && window[_0x553a38([115, 101, 116, 84, 105, 109, 101, 111, 117, 116])](() => {
              _0x53c9f7(_0x4201c9), _0x1e5aaa(_0x4e0f90[_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x553a38([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 116, 105, 109, 101]));
            }, _0x39ab18[6] * _0x45e610[8] * _0x45e610[6]), _0x4201c9[_0x553a38([101, 100, 105, 116, 111, 114, 115])][_0x553a38([111, 110])](_0x553a38([97, 100, 100]), (_0x5ca8f3, _0x4164a4) => {
              _0x3f56e1 != _0x4e0f90[_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x553a38([73, 110, 118, 97, 108, 105, 100]) && _0x3f56e1 != _0x4e0f90[_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x553a38([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 116, 105, 109, 101]) && _0x3f56e1 != _0x4e0f90[_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x553a38([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 111, 112, 101, 114, 97, 116, 105, 111, 110, 115]) || _0x170fce(_0x4164a4);
            });
          } else {
            const _0x4db21d = _0x477644;
            _0x3f56e1 == _0x4e0f90[_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x553a38([73, 110, 118, 97, 108, 105, 100]) ? _0x170fce(_0x4db21d) : _0x3f56e1 == _0x4e0f90[_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x553a38([84, 114, 105, 97, 108]) && _0x4db21d[_0x553a38([111, 110])](_0x553a38([114, 101, 97, 100, 121]), () => {
              let _0xd2fef1 = 0;
              _0x4db21d[_0x553a38([109, 111, 100, 101, 108])][_0x553a38([111, 110])](_0x553a38([97, 112, 112, 108, 121, 79, 112, 101, 114, 97, 116, 105, 111, 110]), (_0x2f6188, _0x5b16c5) => {
                _0x5b16c5[0][_0x553a38([105, 115, 68, 111, 99, 117, 109, 101, 110, 116, 79, 112, 101, 114, 97, 116, 105, 111, 110])] && _0xd2fef1++, 504 === _0xd2fef1 && (_0x170fce(_0x4db21d), _0x1e5aaa(_0x4e0f90[_0x553a38([108, 105, 99, 101, 110, 115, 101, 83, 116, 97, 116, 117, 115, 80, 114, 101, 102, 105, 120])] + _0x553a38([84, 114, 105, 97, 108, 76, 105, 109, 105, 116, 58, 111, 112, 101, 114, 97, 116, 105, 111, 110, 115])), _0x2f6188[_0x553a38([111, 102, 102])]());
              }, { "priority": _0x553a38([104, 105, 103, 104, 101, 115, 116]) });
            });
          }
        }
        function _0x1e5aaa(_0x1df4b3) {
          const _0x53aab3 = _0x345a5d();
          return _0x477644[_0x53aab3] = _0x1df4b3, _0x1df4b3;
        }
        function _0x345a5d() {
          const _0x594613 = String(window[_0x553a38([112, 101, 114, 102, 111, 114, 109, 97, 110, 99, 101])][_0x553a38([110, 111, 119])]())[_0x553a38([114, 101, 112, 108, 97, 99, 101])](_0x553a38([46]), "");
          let _0x452e82 = "";
          for (let _0x105962 = 0; _0x105962 < _0x594613[_0x553a38([108, 101, 110, 103, 116, 104])]; _0x105962 += 2) {
            let _0x4a8d9f = parseInt(_0x594613[_0x553a38([115, 117, 98, 115, 116, 114, 105, 110, 103])](_0x105962, _0x105962 + 2));
            _0x4a8d9f >= _0x4f1223[_0x553a38([108, 101, 110, 103, 116, 104])] && (_0x4a8d9f -= _0x4f1223[_0x553a38([108, 101, 110, 103, 116, 104])]), _0x452e82 += _0x4f1223[_0x4a8d9f];
          }
          return _0x452e82;
        }
        function _0x53c9f7(_0x5f47cc) {
          for (const _0x88060c of _0x5f47cc[_0x553a38([101, 100, 105, 116, 111, 114, 115])]) _0x170fce(_0x88060c);
          _0x8516db(_0x5f47cc, _0x553a38([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x553a38([115, 119, 105, 116, 99, 104, 82, 101, 97, 100, 79, 110, 108, 121])](true), _0x8516db(_0x5f47cc, _0x553a38([67, 111, 109, 109, 101, 110, 116, 115, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121]))[_0x553a38([115, 119, 105, 116, 99, 104, 82, 101, 97, 100, 79, 110, 108, 121])] = _0x3a2f3d;
        }
        function _0x170fce(_0x804699) {
          function _0x3606d4() {
            _0x804699[_0x553a38([109, 111, 100, 101, 108])][_0x553a38([99, 104, 97, 110, 103, 101])] = _0x3a2f3d, _0x804699[_0x553a38([109, 111, 100, 101, 108])][_0x553a38([101, 110, 113, 117, 101, 117, 101, 67, 104, 97, 110, 103, 101])] = _0x3a2f3d, _0x804699[_0x553a38([101, 110, 97, 98, 108, 101, 82, 101, 97, 100, 79, 110, 108, 121, 77, 111, 100, 101])](_0x553a38([109, 111, 100, 101, 108]));
          }
          _0x804699[_0x553a38([115, 116, 97, 116, 101])] == _0x553a38([114, 101, 97, 100, 121]) ? _0x3606d4() : _0x804699[_0x553a38([111, 110, 99, 101])](_0x553a38([114, 101, 97, 100, 121]), () => _0x3606d4());
        }
        function _0x3a2f3d() {
          return null;
        }
        function _0x28eb18(_0x483709, _0x2e90f3) {
          const _0x3cdf1a = !!(_0x483709 & _0x2e90f3[_0x553a38([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])]), _0x427f3f = _0x30300b(_0x483709, _0x2e90f3);
          return _0x3cdf1a || _0x427f3f;
        }
        function _0x30300b(_0x15dec3, _0x57715d) {
          const _0x462dd2 = (_0x57715d[_0x553a38([111, 112, 116, 105, 111, 110, 115])] || {})[_0x553a38([102, 103, 105])] || null;
          return !!_0x462dd2 && _0x5ff743[_0x553a38([102, 105, 108, 116, 101, 114])]((_0x1baccf) => _0x462dd2[_0x553a38([105, 110, 99, 108, 117, 100, 101, 115])](_0x1baccf[_0x553a38([105, 100])]))[_0x553a38([102, 105, 108, 116, 101, 114])]((_0x7c1fd7) => !_0x3ed1be(_0x7c1fd7))[_0x553a38([115, 111, 109, 101])]((_0x57ba05) => !!(_0x15dec3 & _0x57ba05[_0x553a38([112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 77, 97, 115, 107])]));
        }
        function _0x3ed1be(_0x1c24c3) {
          const _0xc188fa = { [_0x553a38([102, 111, 114, 98, 105, 100, 100, 101, 110, 72, 97, 110, 100, 108, 101, 114, 70, 111, 114, 68, 114, 117, 112, 97, 108])]: _0x5ab728 };
          return !!_0x1c24c3["forbiddenHandler"] && _0xc188fa[_0x1c24c3["forbiddenHandler"]]();
        }
        function _0x5ab728() {
          return !window[_0x553a38([68, 114, 117, 112, 97, 108])] || !_0x5d9fe0(_0x477644, _0x553a38([100, 114, 117, 112, 97, 108, 80, 111, 119, 101, 114, 101, 100, 66, 121]));
        }
        function _0x4df044(_0x2b75fb) {
          if (!_0x5d9fe0(_0x477644, _0x2b75fb[_0x553a38([112, 108, 117, 103, 105, 110, 78, 97, 109, 101])])) return true;
          const _0x7d8566 = _0x2b75fb[_0x553a38([111, 112, 116, 105, 111, 110, 115])] || {}, _0xae8bf2 = _0x7d8566[_0x553a38([97, 105, 119, 115, 103, 105, 99])] || false, _0xbbad79 = _0x7d8566[_0x553a38([97, 105, 116, 99, 100, 103, 105, 108])] || false, _0x21e94e = _0x7d8566[_0x553a38([97, 105, 114, 118, 105, 105, 108])] || false;
          if (_0x5d9fe0(_0x477644, _0x553a38([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121])) && _0x8516db(_0x477644, _0x553a38([87, 101, 98, 83, 111, 99, 107, 101, 116, 71, 97, 116, 101, 119, 97, 121]))[_0x553a38([115, 116, 97, 116, 101])] == _0x553a38([99, 111, 110, 110, 101, 99, 116, 101, 100]) && _0xae8bf2) return true;
          if (_0x5d9fe0(_0x477644, _0x553a38([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 68, 97, 116, 97, 71, 101, 116, 116, 101, 114])) && _0x8516db(_0x477644, _0x553a38([84, 114, 97, 99, 107, 67, 104, 97, 110, 103, 101, 115, 68, 97, 116, 97, 71, 101, 116, 116, 101, 114]))[_0x553a38([114, 101, 115, 117, 108, 116])] == _0x553a38([101, 110, 100]) && _0xbbad79) return true;
          return !(!_0x5d9fe0(_0x477644, _0x553a38([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114, 73, 110, 116, 101, 103, 114, 97, 116, 105, 111, 110])) || _0x8516db(_0x477644, _0x553a38([82, 101, 118, 105, 115, 105, 111, 110, 86, 105, 101, 119, 101, 114, 73, 110, 116, 101, 103, 114, 97, 116, 105, 111, 110]))[_0x553a38([114, 101, 115, 117, 108, 116])] != _0x553a38([101, 110, 100]) || !_0x21e94e);
        }
        function _0x5d9fe0(_0xd345f3, _0x11660c) {
          return _0xd345f3[_0x553a38([112, 108, 117, 103, 105, 110, 115])][_0x553a38([104, 97, 115])](_0x11660c);
        }
        function _0x8516db(_0x113a2d, _0xa8083b) {
          return _0x113a2d[_0x553a38([112, 108, 117, 103, 105, 110, 115])][_0x553a38([103, 101, 116])](_0xa8083b);
        }
        function _0x5c6d89(_0x379755) {
          let _0x166cc9 = "";
          for (const _0x153793 of _0x379755) _0x166cc9 += String[_0x553a38([102, 114, 111, 109, 67, 104, 97, 114, 67, 111, 100, 101])](_0x153793);
          return _0x166cc9;
        }
        function _0x1572e7(_0xc6d8d0) {
          const _0x47499a = new Uint8Array(_0xc6d8d0[_0x553a38([108, 101, 110, 103, 116, 104])]);
          for (let _0xa15bb8 = 0; _0xa15bb8 < _0xc6d8d0[_0x553a38([108, 101, 110, 103, 116, 104])]; _0xa15bb8++) _0x47499a[_0xa15bb8] = _0xc6d8d0[_0x553a38([99, 104, 97, 114, 67, 111, 100, 101, 65, 116])](_0xa15bb8);
          return _0x47499a;
        }
        _0x5355d1 && _0x337566(_0x3fa9af(_0x51613c), _0x5355d1);
      })(_0x316281);
    }(this);
  }
  ["_createTemplateListView"](_0x380ea3, _0x5404a2) {
    const { editor: _0x510a0d } = this, _0xf012ca = new d7(_0x380ea3);
    return _0xf012ca["extendTemplate"]({ "attributes": { "role": "listbox", "class": ["ck-template-list"] } }), _0xf012ca["items"]["addMany"](_0x5404a2["map"]((_0x1d149b, _0x32cb15) => {
      const _0x3f4711 = new b5(_0x380ea3, _0x32cb15), _0x3bba0c = new h7(_0x380ea3, _0x1d149b);
      return _0x3f4711["buttonView"] = _0x3bba0c, _0x3f4711["children"]["add"](_0x3bba0c), _0x3f4711["buttonView"]["on"]("execute", (_0x2a7d77) => {
        _0x510a0d["execute"]("insertTemplate", _0x2a7d77["source"]["templateDefinition"]["data"]), _0x510a0d["editing"]["view"]["focus"]();
      }), _0x3f4711;
    })), _0xf012ca;
  }
};
var s14 = class extends Plugin {
  static get ["requires"]() {
    return [r16, i10];
  }
  static get ["pluginName"]() {
    return "Template";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
};

// node_modules/@ckeditor/ckeditor5-track-changes/dist/index.js
var B5 = class extends Command {
  constructor(_0x28a4d6, _0x31e4bd) {
    super(_0x28a4d6);
    __publicField(this, "_enabledCommands");
    this["_enabledCommands"] = _0x31e4bd, this["value"] = false, this["refresh"](), this["_isEnabledBasedOnSelection"] = false;
  }
  ["refresh"]() {
    this["isEnabled"] = true;
  }
  ["execute"]() {
    this["value"] = !this["value"], this["value"] ? this["_disableUnsupportedCommands"]() : this["_enableCommands"]();
  }
  ["_disableUnsupportedCommands"]() {
    for (const _0x5d26c1 of this["editor"]["commands"]["commands"]()) _0x5d26c1["affectsData"] && !this["_enabledCommands"]["has"](_0x5d26c1) && _0x5d26c1["forceDisabled"]("TrackChangesCommand");
  }
  ["_enableCommands"]() {
    for (const _0x214ef0 of this["editor"]["commands"]["commands"]()) _0x214ef0["affectsData"] && !this["_enabledCommands"]["has"](_0x214ef0) && _0x214ef0["clearForceDisabled"]("TrackChangesCommand");
  }
};
var x5 = class extends Command {
  constructor(_0x491e52, _0xcf00b4) {
    super(_0x491e52);
    __publicField(this, "_suggestions");
    this["_suggestions"] = _0xcf00b4, this["refresh"](), this["_isEnabledBasedOnSelection"] = false;
  }
  ["refresh"]() {
    this["isEnabled"] = true;
  }
  ["execute"](_0x434f20) {
    const _0x24aa23 = this["_suggestions"]["get"](_0x434f20);
    if (!_0x24aa23) throw new CKEditorError("track-changes-accept-suggestion-not-found", this);
    const _0x268597 = _0x24aa23["getRanges"]();
    this["editor"]["model"]["canEditAt"](_0x268597) && this["editor"]["plugins"]["get"]("TrackChangesEditing")["acceptSuggestion"](_0x24aa23);
  }
};
var O6 = class extends Command {
  constructor(_0x106cc3, _0x655383) {
    super(_0x106cc3);
    __publicField(this, "_suggestions");
    this["_suggestions"] = _0x655383, this["refresh"](), this["_isEnabledBasedOnSelection"] = false;
  }
  ["refresh"]() {
    this["isEnabled"] = true;
  }
  ["execute"](_0x3b10d9) {
    const _0x20cc3e = this["_suggestions"]["get"](_0x3b10d9);
    if (!_0x20cc3e) throw new CKEditorError("track-changes-discard-suggestion-not-found", this);
    const _0x172f13 = _0x20cc3e["getRanges"]();
    this["editor"]["model"]["canEditAt"](_0x172f13) && this["editor"]["plugins"]["get"]("TrackChangesEditing")["discardSuggestion"](_0x20cc3e);
  }
};
function ls2(_0x545bde, _0x1acc58) {
  let _0x2a1a73 = "";
  return _0x2a1a73 += _0x545bde["split"]("*")["map"]((_0x4d1c5a, _0x49e900) => _0x49e900 % 2 != 0 ? '<span class="ck-suggestion-type">' + nn(_0x4d1c5a) + "</span>" : nn(_0x4d1c5a))["join"](""), _0x1acc58 && (_0x2a1a73 += '<span class="ck-suggestion-color" style="background-color: ' + _0x1acc58["value"] + '" title="' + _0x1acc58["title"] + '"></span>'), _0x2a1a73;
}
function nn(_0x461b34) {
  const _0x570a3b = document["createElement"]("span");
  return _0x570a3b["innerText"] = _0x461b34, _0x570a3b["innerHTML"];
}
function ss(_0x406d90) {
  return _0x406d90["sort"]((_0x336de1, _0x4153ba) => "deletion" == _0x336de1["type"] && "deletion" != _0x4153ba["type"] ? -1 : "deletion" != _0x336de1["type"] && "deletion" == _0x4153ba["type"] ? 1 : 0);
}
function to(_0x8fbddf, _0xd59aeb) {
  let _0x4c006d, _0x2c2ccc = 0;
  const _0x321534 = [], _0xeafbc3 = _0xd59aeb["schema"];
  for (; _0x2c2ccc < _0x8fbddf["length"]; ) {
    const _0x3c3e5e = _0x8fbddf[_0x2c2ccc], _0x2fce8b = _0x8fbddf[_0x2c2ccc + 1];
    _0x4c006d || (_0x4c006d = _0xd59aeb["createPositionBefore"](_0x3c3e5e)), on2(_0xd59aeb, _0x3c3e5e, _0x2fce8b) || (_0x321534["push"](_0xd59aeb["createRange"](_0x4c006d, _0xeafbc3["isObject"](_0x3c3e5e) ? _0xd59aeb["createPositionAfter"](_0x3c3e5e) : _0xd59aeb["createPositionAt"](_0x3c3e5e, "end"))), _0x4c006d = null), _0x2c2ccc++;
  }
  return _0x321534;
}
function on2(_0x580e1a, _0x27300a, _0x2b28e9) {
  if (!_0x2b28e9) return false;
  const _0x15d85f = _0x580e1a["createPositionAfter"](_0x27300a), _0x14319f = _0x580e1a["createPositionBefore"](_0x2b28e9);
  return _0x15d85f["isTouching"](_0x14319f);
}
function rs4(_0x49e666, _0x41b632, _0x1f37b6) {
  for (; _0x1f37b6["length"]; ) {
    const _0x27ec0e = _0x1f37b6["splice"](0, 100);
    _0x49e666["change"](() => {
      for (const _0x4e0851 of _0x27ec0e) _0x4e0851["isInContent"] && _0x41b632["execute"](_0x4e0851["id"]);
    });
  }
}
var R6 = class extends Command {
  constructor(_0x4c2d6e, _0x5ebf8a, _0x59c263) {
    super(_0x4c2d6e);
    __publicField(this, "_command");
    __publicField(this, "_suggestions");
    this["_command"] = _0x5ebf8a, this["_suggestions"] = _0x59c263, this["refresh"](), this["_isEnabledBasedOnSelection"] = false;
  }
  ["refresh"]() {
    const _0x14b26f = Array["from"](this["_suggestions"]["values"]())["some"]((_0x43adf6) => _0x43adf6["isInContent"]);
    this["isEnabled"] = this["_command"]["isEnabled"] && _0x14b26f;
  }
  ["execute"]() {
    const _0x2fcd6a = ss(Array["from"](this["_suggestions"]["values"]()));
    for (const _0x178f1a of _0x2fcd6a) {
      const _0x3d9798 = _0x178f1a["getRanges"]();
      if (!this["editor"]["model"]["canEditAt"](_0x3d9798)) return;
    }
    rs4(this["editor"]["model"], this["_command"], _0x2fcd6a);
  }
};
var E6 = class extends Command {
  constructor(_0x4d9443, _0x5aa1e5, _0x2c77cf) {
    super(_0x4d9443);
    __publicField(this, "_command");
    __publicField(this, "_suggestions");
    __publicField(this, "_selectedSuggestions");
    this["_command"] = _0x5aa1e5, this["_suggestions"] = _0x2c77cf, this["_selectedSuggestions"] = /* @__PURE__ */ new Set(), this["refresh"](), this["_isEnabledBasedOnSelection"] = false;
  }
  ["refresh"]() {
    const _0x41dd3f = this["editor"]["model"]["document"]["selection"], _0x458810 = Array["from"](this["_suggestions"]["values"]());
    this["_selectedSuggestions"] = function(_0x53d7de, _0x44a6b2) {
      const _0x353477 = Array["from"](_0x53d7de["getRanges"]()), _0x37da2a = /* @__PURE__ */ new Set();
      for (const _0x2bc283 of _0x44a6b2) if (_0x2bc283["isInContent"]) {
        for (const _0x23b2e1 of _0x353477) for (const _0x5a47c4 of _0x2bc283["getRanges"]()) (_0x23b2e1["isIntersecting"](_0x5a47c4) || _0x53d7de["isCollapsed"] && !_0x2bc283["isMultiRange"] && _0x2bc283["next"] && _0x5a47c4["end"]["isTouching"](_0x23b2e1["start"])) && _0x37da2a["add"](_0x2bc283);
      }
      return _0x37da2a;
    }(_0x41dd3f, _0x458810), this["isEnabled"] = this["_command"]["isEnabled"] && !!this["_selectedSuggestions"]["size"];
  }
  ["execute"]() {
    const _0x135b04 = ss(Array["from"](this["_selectedSuggestions"]));
    for (const _0x2d2a5a of _0x135b04) {
      const _0x225fef = _0x2d2a5a["getRanges"]();
      if (!this["editor"]["model"]["canEditAt"](_0x225fef)) return;
    }
    rs4(this["editor"]["model"], this["_command"], _0x135b04);
  }
};
var u8 = class _u2 extends ObservableMixin() {
  constructor(_0x576de7, _0x11ff21) {
    super();
    __publicField(this, "id");
    __publicField(this, "type");
    __publicField(this, "subType");
    __publicField(this, "author");
    __publicField(this, "creator");
    __publicField(this, "isExternal");
    __publicField(this, "data");
    __publicField(this, "createdAt");
    __publicField(this, "_isDataLoaded", false);
    __publicField(this, "_model");
    __publicField(this, "_onAccept");
    __publicField(this, "_onDiscard");
    __publicField(this, "_onAttributesChange");
    __publicField(this, "_markerNames");
    this["id"] = _0x11ff21["id"], this["type"] = _0x11ff21["type"], this["subType"] = _0x11ff21["subType"] || null, this["author"] = _0x11ff21["author"], this["creator"] = _0x11ff21["creator"] || _0x11ff21["author"], this["isExternal"] = Boolean(_0x11ff21["attributes"] && _0x11ff21["attributes"]["@external"]), this["data"] = null, this["_model"] = _0x576de7, this["_onAccept"] = _0x11ff21["onAccept"], this["_onDiscard"] = _0x11ff21["onDiscard"], this["_onAttributesChange"] = _0x11ff21["onAttributesChange"], this["_markerNames"] = /* @__PURE__ */ new Set(), this["createdAt"] = null, this["set"]("authoredAt", null), this["set"]("attributes", _0x11ff21["attributes"] || {}), this["set"]("previous", null), this["set"]("next", null), this["set"]("commentThread", null), this["set"]("_saved", false), this["decorate"]("accept"), this["decorate"]("discard");
  }
  get ["head"]() {
    let _0x41735b = this;
    for (; _0x41735b["previous"]; ) _0x41735b = _0x41735b["previous"];
    return _0x41735b;
  }
  get ["hasComments"]() {
    return !!this["commentThread"] && this["commentThread"]["length"] > 0;
  }
  get ["isMultiRange"]() {
    if (0 == this["_markerNames"]["size"]) return false;
    return 6 == Array["from"](this["_markerNames"])[0]["split"](":")["length"];
  }
  get ["isInContent"]() {
    return null !== this["getFirstMarker"]();
  }
  ["addMarkerName"](_0x4601c4) {
    this["_markerNames"]["add"](_0x4601c4);
  }
  ["getMarkerNames"]() {
    return Array["from"](this["_markerNames"]);
  }
  ["getMarkers"]() {
    return this["getMarkerNames"]()["map"]((_0x5b17e4) => this["_model"]["markers"]["get"](_0x5b17e4))["filter"]((_0x2560ae) => _0x2560ae);
  }
  ["getFirstMarker"]() {
    return this["getMarkers"]()[0] || null;
  }
  ["removeMarkers"]() {
    this["_model"]["change"]((_0x4ae114) => {
      for (const _0xfa22ac of this["getMarkers"]()) _0x4ae114["removeMarker"](_0xfa22ac);
    }), this["_markerNames"]["clear"]();
  }
  ["removeMarker"](_0x5bddf2) {
    this["_model"]["change"]((_0xc4d9c) => {
      _0xc4d9c["removeMarker"](_0x5bddf2);
    }), this["_markerNames"]["delete"](_0x5bddf2);
  }
  ["addRange"](_0x12a42d) {
    const _0x1030d7 = "suggestion:" + this["type"] + ":" + this["subType"] + ":" + this["id"] + ":" + this["creator"]["id"] + ":" + _u2["getMultiRangeId"]();
    this["addMarkerName"](_0x1030d7), this["_model"]["change"]((_0xaff567) => {
      _0xaff567["addMarker"](_0x1030d7, { "range": _0x12a42d, "usingOperation": true, "affectsData": true });
    });
  }
  ["isIntersectingWithRange"](_0x196cb0) {
    for (const _0x418d58 of this["getRanges"]()) if (_0x418d58["isIntersecting"](_0x196cb0)) return true;
    return false;
  }
  ["getRanges"]() {
    return this["getMarkers"]()["map"]((_0x5a9704) => _0x5a9704["getRange"]());
  }
  ["getItems"]() {
    return this["getRanges"]()["reduce"]((_0xf936ed, _0x595f7a) => [..._0xf936ed, ..._0x595f7a["getItems"]()], []);
  }
  ["getFirstRange"]() {
    var _a5;
    return ((_a5 = this["getFirstMarker"]()) == null ? void 0 : _a5["getRange"]()) || null;
  }
  ["getContainedElement"]() {
    const _0x44febc = this["getRanges"]();
    if (1 != _0x44febc["length"]) return null;
    const _0x271806 = _0x44febc[0], _0x54de1b = _0x271806["start"]["nodeAfter"], _0x54ffd7 = _0x271806["end"]["nodeBefore"];
    return _0x54de1b instanceof Element ? _0x54de1b != _0x54ffd7 ? null : _0x54de1b : null;
  }
  ["accept"]() {
    this["_onAccept"](this["getRanges"](), this["data"], this["attributes"]), this["removeMarkers"]();
  }
  ["discard"]() {
    this["_onDiscard"](this["getRanges"](), this["data"], this["attributes"]), this["removeMarkers"]();
  }
  ["getAllAdjacentSuggestions"]() {
    const _0x14ca11 = [];
    let _0x15933e = this["head"];
    for (; _0x15933e; ) _0x14ca11["push"](_0x15933e), _0x15933e = _0x15933e["next"];
    return _0x14ca11;
  }
  ["setAttribute"](_0x1128b2, _0x11b944) {
    const _0xf592e5 = cloneDeep_default(this["attributes"]);
    set_default(_0xf592e5, _0x1128b2, _0x11b944), isEqual_default(_0xf592e5, this["attributes"]) || (this["attributes"] = _0xf592e5, this["_onAttributesChange"](_0xf592e5));
  }
  ["removeAttribute"](_0x408caf) {
    const _0x5ee482 = cloneDeep_default(this["attributes"]);
    unset_default(_0x5ee482, _0x408caf), isEqual_default(_0x5ee482, this["attributes"]) || (this["attributes"] = _0x5ee482, this["_onAttributesChange"](this["attributes"]));
  }
  ["toJSON"]() {
    return { "id": this["id"], "type": this["subType"] ? this["type"] + ":" + this["subType"] : this["type"], "authorId": this["creator"]["id"], "createdAt": this["createdAt"], "hasComments": this["hasComments"], "data": this["data"], "attributes": this["attributes"] };
  }
  static ["getMultiRangeId"]() {
    return uid()["substr"](1, 5);
  }
};
function o11(_0x281033, _0x45cfc4, _0x1f9e71) {
  const _0x241231 = _0x281033["t"], t2 = _0x281033["t"];
  switch (_0x45cfc4) {
    case "Track changes":
      return t2("Track changes");
    case "Accept suggestion":
      return t2("Accept suggestion");
    case "Discard suggestion":
      return t2("Discard suggestion");
    case "Accept all suggestions":
      return t2("Accept all suggestions");
    case "Accept all selected suggestions":
      return t2("Accept all selected suggestions");
    case "Discard all suggestions":
      return t2("Discard all suggestions");
    case "Discard all selected suggestions":
      return t2("Discard all selected suggestions");
    case "*Reset font size*":
      return t2("*Reset font size*");
    case "*Reset font family*":
      return t2("*Reset font family*");
    case "*Reset font color*":
      return t2("*Reset font color*");
    case "*Reset font background color*":
      return t2("*Reset font background color*");
    case "*Remove image text alternative*":
      return t2("*Remove image text alternative*");
    case "*Reset image width*":
      return t2("*Reset image width*");
    case "*Remove link*":
      return t2("*Remove link*");
    case "*Check item*":
      return t2("*Check item*");
    case "*Uncheck item*":
      return t2("*Uncheck item*");
    case "*Remove all formatting*":
      return t2("*Remove all formatting*");
    case "*Replace table cells*":
      return t2("*Replace table cells*");
    case "*Merge cells*":
      return t2("*Merge cells*");
    case "*Split cell:* vertically":
      return t2("*Split cell:* vertically");
    case "*Split cell:* horizontally":
      return t2("*Split cell:* horizontally");
    case "*Indent:* %0":
      return t2("*Indent:* %0", _0x1f9e71);
    case "*Outdent:* %0":
      return t2("*Outdent:* %0", _0x1f9e71);
    case "*Change to:* %0":
      return t2("*Change to:* %0", _0x1f9e71);
    case "*Insert:* %0":
      return t2("*Insert:* %0", _0x1f9e71);
    case "*Format:* %0":
      return t2("*Format:* %0", _0x1f9e71);
    case "*Format:* change table properties":
      return t2("*Format:* change table properties");
    case "*Format:* change table cell properties":
      return t2("*Format:* change table cell properties");
    case "*Format:* insert into %0":
      return t2("*Format:* insert into %0", _0x1f9e71);
    case "*Format:* remove from %0":
      return t2("*Format:* remove from %0", _0x1f9e71);
    case "*Replace image URL*":
      return t2("*Replace image URL*");
    case "*Format:* resize table":
      return t2("*Format:* resize table");
    case "*Format:* set order to reversed":
      return t2("*Format:* set order to reversed");
    case "*Format:* set order to regular":
      return t2("*Format:* set order to regular");
    case "*Format:* set start index to %0":
      return t2("*Format:* set start index to %0", _0x1f9e71);
    case "*Change %0 content*":
      return t2("*Change %0 content*", _0x1f9e71);
    case "*Remove:* %0":
      return t2("*Remove:* %0", _0x1f9e71);
    case "*Merge:* %0":
      return t2("*Merge:* %0", _0x1f9e71);
    case "*Split:* %0":
      return t2("*Split:* %0", _0x1f9e71);
    case "*Remove format:* %0":
      return t2("*Remove format:* %0", _0x1f9e71);
    case "*Set font size:* %0":
      return t2("*Set font size:* %0", _0x1f9e71);
    case "*Set font family:* %0":
      return t2("*Set font family:* %0", _0x1f9e71);
    case "*Set format to:* %0":
      return t2("*Set format to:* %0", _0x1f9e71);
    case "*Set font color:* %0":
      return t2("*Set font color:* %0", _0x1f9e71);
    case "*Set font background color:* %0":
      return t2("*Set font background color:* %0", _0x1f9e71);
    case "*Set format:* %0":
      return t2("*Set format:* %0", _0x1f9e71);
    case "*Set image text alternative:* %0":
      return t2("*Set image text alternative:* %0", _0x1f9e71);
    case "*Set image width:* %0":
      return t2("*Set image width:* %0", _0x1f9e71);
    case "*Set link:* %0":
      return t2("*Set link:* %0", _0x1f9e71);
    case "*Set highlight:* %0":
      return t2("*Set highlight:* %0", _0x1f9e71);
    case "*Remove highlight*":
      return t2("*Remove highlight*");
    case "FORMAT_HIGHLIGHT":
      return t2({ "string": "highlight", "id": "FORMAT_HIGHLIGHT" });
    case "FORMAT_RESTRICTED_ENABLED":
      return t2({ "string": "*Enable in restricted editing mode*", "id": "FORMAT_RESTRICTED_ENABLED" });
    case "FORMAT_RESTRICTED_DISABLED":
      return t2({ "string": "*Disable in restricted editing mode*", "id": "FORMAT_RESTRICTED_DISABLED" });
    case "ELEMENT_TABLE":
      return t2({ "string": "table", "plural": "%0 tables", "id": "ELEMENT_TABLE" }, _0x1f9e71);
    case "ELEMENT_PARAGRAPH":
      return t2({ "string": "paragraph", "plural": "%0 paragraphs", "id": "ELEMENT_PARAGRAPH" }, _0x1f9e71);
    case "ELEMENT_PAGE_BREAK":
      return t2({ "string": "page break", "plural": "%0 page breaks", "id": "ELEMENT_PAGE_BREAK" }, _0x1f9e71);
    case "ELEMENT_MEDIA":
      return t2({ "string": "media item", "plural": "%0 media items", "id": "ELEMENT_MEDIA" }, _0x1f9e71);
    case "ELEMENT_IMAGE":
      return t2({ "string": "image", "plural": "%0 images", "id": "ELEMENT_IMAGE" }, _0x1f9e71);
    case "ELEMENT_INLINE_IMAGE":
      return t2({ "string": "image", "plural": "%0 images", "id": "ELEMENT_INLINE_IMAGE" }, _0x1f9e71);
    case "FORMAT_SIDE_IMAGE":
      return t2({ "string": "side image", "id": "FORMAT_SIDE_IMAGE" });
    case "ELEMENT_CAPTION":
      return t2({ "string": "caption", "id": "ELEMENT_CAPTION" });
    case "ELEMENT_HORIZONTAL_LINE":
      return t2({ "string": "horizontal line", "plural": "%0 horizontal lines", "id": "ELEMENT_HORIZONTAL_LINE" }, _0x1f9e71);
    case "ELEMENT_HTML_EMBED":
      return t2({ "string": "HTML embed", "plural": "%0 HTML embeds", "id": "ELEMENT_HTML_EMBED" }, _0x1f9e71);
    case "ELEMENT_HEADING":
      return t2({ "string": "heading (level %1)", "plural": "%0 headings (level %1)", "id": "ELEMENT_HEADING" }, _0x1f9e71);
    case "ELEMENT_HEADING_CUSTOM":
      return t2({ "string": "heading (%1)", "plural": "%0 headings (%1)", "id": "ELEMENT_HEADING_CUSTOM" }, _0x1f9e71);
    case "ELEMENT_LIST_ITEM":
      return t2({ "string": "list item", "plural": "%0 list items", "id": "ELEMENT_LIST_ITEM" }, _0x1f9e71);
    case "ELEMENT_DEFAULT_LIST_DEFAULT":
      return t2({ "string": "default list style", "id": "ELEMENT_DEFAULT_LIST_DEFAULT" });
    case "ELEMENT_BULLETED_LIST":
      return t2({ "string": "bulleted list", "id": "ELEMENT_BULLETED_LIST" });
    case "ELEMENT_BULLETED_LIST_DEFAULT":
      return t2({ "string": "bulleted list (default)", "id": "ELEMENT_BULLETED_LIST_DEFAULT" });
    case "ELEMENT_BULLETED_LIST_CIRCLE":
      return t2({ "string": "bulleted list (circle)", "id": "ELEMENT_BULLETED_LIST_CIRCLE" });
    case "ELEMENT_BULLETED_LIST_DISC":
      return t2({ "string": "bulleted list (disc)", "id": "ELEMENT_BULLETED_LIST_DISC" });
    case "ELEMENT_BULLETED_LIST_SQUARE":
      return t2({ "string": "bulleted list (square)", "id": "ELEMENT_BULLETED_LIST_SQUARE" });
    case "ELEMENT_NUMBERED_LIST_DEFAULT":
      return t2({ "string": "numbered list (default)", "id": "ELEMENT_NUMBERED_LIST_DEFAULT" });
    case "ELEMENT_NUMBERED_LIST":
      return t2({ "string": "numbered list", "id": "ELEMENT_NUMBERED_LIST" });
    case "ELEMENT_NUMBERED_LIST_DECIMAL":
      return t2({ "string": "numbered list (decimal)", "id": "ELEMENT_NUMBERED_LIST_DECIMAL" });
    case "ELEMENT_NUMBERED_LIST_DECIMAL_LEADING_ZERO":
      return t2({ "string": "numbered list (decimal with leading zero)", "id": "ELEMENT_NUMBERED_LIST_DECIMAL_LEADING_ZERO" });
    case "ELEMENT_NUMBERED_LIST_LOWER_LATIN":
      return t2({ "string": "numbered list (lower-latin)", "id": "ELEMENT_NUMBERED_LIST_LOWER_LATIN" });
    case "ELEMENT_NUMBERED_LIST_LOWER_ROMAN":
      return t2({ "string": "numbered list (lower-roman)", "id": "ELEMENT_NUMBERED_LIST_LOWER_ROMAN" });
    case "ELEMENT_NUMBERED_LIST_UPPER_LATIN":
      return t2({ "string": "numbered list (upper-latin)", "id": "ELEMENT_NUMBERED_LIST_UPPER_LATIN" });
    case "ELEMENT_NUMBERED_LIST_UPPER_ROMAN":
      return t2({ "string": "numbered list (upper-roman)", "id": "ELEMENT_NUMBERED_LIST_UPPER_ROMAN" });
    case "ELEMENT_TODO_LIST":
      return t2({ "string": "to-do list", "id": "ELEMENT_TODO_LIST" });
    case "ELEMENT_MULTI_LEVEL_LIST":
      return t2({ "string": "multi-level list", "id": "ELEMENT_MULTI_LEVEL_LIST" });
    case "REPLACE_TEXT":
      return t2({ "string": "*Replace:* %0 *with* %1", "id": "REPLACE_TEXT" }, _0x1f9e71);
    case "ELEMENT_SPACE":
      return t2({ "string": "space", "plural": "%0 spaces", "id": "ELEMENT_SPACE" }, _0x1f9e71);
    case "FORMAT_ALIGNMENT":
      return t2({ "string": "alignment", "id": "FORMAT_ALIGNMENT" });
    case "FORMAT_ALIGN_TO_LEFT":
      return t2({ "string": "align to left", "id": "FORMAT_ALIGN_TO_LEFT" });
    case "FORMAT_ALIGN_TO_RIGHT":
      return t2({ "string": "align to right", "id": "FORMAT_ALIGN_TO_RIGHT" });
    case "FORMAT_ALIGN_TO_CENTER":
      return t2({ "string": "align to center", "id": "FORMAT_ALIGN_TO_CENTER" });
    case "FORMAT_JUSTIFY_TEXT":
      return t2({ "string": "justify", "id": "FORMAT_JUSTIFY_TEXT" });
    case "FORMAT_BOLD":
      return t2({ "string": "bold", "id": "FORMAT_BOLD" });
    case "FORMAT_ITALIC":
      return t2({ "string": "italic", "id": "FORMAT_ITALIC" });
    case "FORMAT_UNDERLINE":
      return t2({ "string": "underline", "id": "FORMAT_UNDERLINE" });
    case "FORMAT_CODE":
      return t2({ "string": "code", "id": "FORMAT_CODE" });
    case "FORMAT_STRIKETHROUGH":
      return t2({ "string": "strikethrough", "id": "FORMAT_STRIKETHROUGH" });
    case "FORMAT_SUBSCRIPT":
      return t2({ "string": "subscript", "id": "FORMAT_SUBSCRIPT" });
    case "FORMAT_SUPERSCRIPT":
      return t2({ "string": "superscript", "id": "FORMAT_SUPERSCRIPT" });
    case "ELEMENT_BLOCK_QUOTE":
      return t2({ "string": "block quote", "id": "ELEMENT_BLOCK_QUOTE" });
    case "ELEMENT_CODE_BLOCK":
      return t2({ "string": "code block", "plural": "%0 code blocks", "id": "ELEMENT_CODE_BLOCK" }, _0x1f9e71);
    case "FORMAT_HEADER_COLUMN":
      return t2({ "string": "header column", "id": "FORMAT_HEADER_COLUMN" });
    case "FORMAT_REGULAR_COLUMN":
      return t2({ "string": "regular column", "id": "FORMAT_REGULAR_COLUMN" });
    case "FORMAT_HEADER_ROW":
      return t2({ "string": "header row", "id": "FORMAT_HEADER_ROW" });
    case "FORMAT_REGULAR_ROW":
      return t2({ "string": "regular row", "id": "FORMAT_REGULAR_ROW" });
    case "FORMAT_INDENT":
      return t2({ "string": "indent", "id": "FORMAT_INDENT" });
    case "FORMAT_LIST_REVERSED":
      return t2({ "string": "list reversed", "id": "FORMAT_LIST_REVERSED" });
    case "FORMAT_LIST_START":
      return t2({ "string": "list start", "id": "FORMAT_LIST_START" });
    case "FORMAT_FONT_SIZE":
      return t2({ "string": "font size", "id": "FORMAT_FONT_SIZE" });
    case "FORMAT_FONT_FAMILY":
      return t2({ "string": "font family", "id": "FORMAT_FONT_FAMILY" });
    case "FORMAT_FONT_COLOR":
      return t2({ "string": "font color", "id": "FORMAT_FONT_COLOR" });
    case "FORMAT_FONT_BACKGROUND":
      return t2({ "string": "font background color", "id": "FORMAT_FONT_BACKGROUND" });
    case "FORMAT_IMAGE_SIZE":
      return t2({ "string": "image size", "id": "FORMAT_IMAGE_SIZE" });
    case "FORMAT_STYLE":
      return t2({ "string": "style", "id": "FORMAT_STYLE" });
    case "PENDING_ACTION_SUGGESTION":
      return t2({ "string": "Unsaved change in suggestion.", "id": "PENDING_ACTION_SUGGESTION" });
    case "ELEMENT_TABLE_WITH_TEXT":
      return t2({ "string": "table *with text* %0", "id": "ELEMENT_TABLE_WITH_TEXT" }, _0x1f9e71);
    case "ELEMENT_TABLE_ROW":
      return t2({ "string": "table row", "plural": "%0 table rows", "id": "ELEMENT_TABLE_ROW" }, _0x1f9e71);
    case "ELEMENT_TABLE_ROW_WITH_TEXT":
      return t2({ "string": "table row *with text* %1", "plural": "%0 table rows *with text* %1", "id": "ELEMENT_TABLE_ROW_WITH_TEXT" }, _0x1f9e71);
    case "ELEMENT_TABLE_COLUMN":
      return t2({ "string": "table column", "plural": "%0 table columns", "id": "ELEMENT_TABLE_COLUMN" }, _0x1f9e71);
    case "ELEMENT_TABLE_COLUMN_WITH_TEXT":
      return t2({ "string": "table column *with text* %1", "plural": "%0 table columns *with text* %1", "id": "ELEMENT_TABLE_COLUMN_WITH_TEXT" }, _0x1f9e71);
    case "ELEMENT_TABLE_OF_CONTENTS":
      return t2({ "string": "table of contents", "plural": "%0 tables of contents", "id": "ELEMENT_TABLE_OF_CONTENTS" }, _0x1f9e71);
    case "ELEMENT_LINE_BREAK":
      return t2({ "id": "ELEMENT_LINE_BREAK", "string": "line break", "plural": "%0 line breaks" }, _0x1f9e71);
    case "ELEMENT_TITLE":
      return t2({ "id": "ELEMENT_TITLE", "string": "title" });
    case "ELEMENT_MERGE_FIELD":
      return t2({ "id": "ELEMENT_MERGE_FIELD", "string": "merge field", "plural": "%0 merge fields" }, _0x1f9e71);
    case "EXTERNAL_SUGGESTION":
      return t2({ "id": "EXTERNAL_SUGGESTION", "string": "This suggestion comes from an external source." });
    case "EXTERNAL_IMPORT_WORD_SUGGESTION":
      return t2({ "string": "This suggestion comes from an imported Word file.", "id": "EXTERNAL_IMPORT_WORD_SUGGESTION" });
    case "EXTERNAL_AVATAR":
      return _0x241231({ "string": "Displayed author name comes from external source (added by %0)", "id": "EXTERNAL_AVATAR" }, _0x1f9e71);
    case "EXTERNAL_IMPORT_WORD_AVATAR":
      return _0x241231({ "string": "Displayed author name comes from a Word document imported by %0", "id": "EXTERNAL_IMPORT_WORD_AVATAR" }, _0x1f9e71);
    case "ENTER_INSERTION_SUGGESTION_ANNOUNCEMENT":
      return t2({ "string": "Entering insertion suggestion. Press %0 to go to the discussion.", "id": "ENTER_INSERTION_SUGGESTION_ANNOUNCEMENT" }, _0x1f9e71);
    case "LEAVE_INSERTION_SUGGESTION_ANNOUNCEMENT":
      return t2({ "string": "Leaving insertion suggestion.", "id": "LEAVE_INSERTION_SUGGESTION_ANNOUNCEMENT" });
    case "ENTER_DELETION_SUGGESTION_ANNOUNCEMENT":
      return t2({ "string": "Entering deletion suggestion. Press %0 to go to the discussion.", "id": "ENTER_DELETION_SUGGESTION_ANNOUNCEMENT" }, _0x1f9e71);
    case "LEAVE_DELETION_SUGGESTION_ANNOUNCEMENT":
      return t2({ "string": "Leaving deletion suggestion.", "id": "LEAVE_DELETION_SUGGESTION_ANNOUNCEMENT" });
    case "ENTER_FORMATTING_SUGGESTION_ANNOUNCEMENT":
      return t2({ "string": "Entering formatting suggestion. Press %0 to go to the discussion.", "id": "ENTER_FORMATTING_SUGGESTION_ANNOUNCEMENT" }, _0x1f9e71);
    case "LEAVE_FORMATTING_SUGGESTION_ANNOUNCEMENT":
      return t2({ "string": "Leaving formatting suggestion.", "id": "LEAVE_FORMATTING_SUGGESTION_ANNOUNCEMENT" });
    case "SUGGESTION_THREAD_ARIA_LABEL":
      return t2({ "string": "Suggestion by %1. Created on %2. %0 reply. %3", "plural": "Suggestion by %1. Created on %2. %0 replies. %3", "id": "SUGGESTION_THREAD_ARIA_LABEL" }, _0x1f9e71);
    case "SUGGESTION_THREAD_DESCRIPTION":
      return t2({ "string": "Press Enter for more options. Press Escape to exit.", "id": "SUGGESTION_THREAD_DESCRIPTION" });
    default:
      return _0x45cfc4;
  }
}
var f9 = class {
  constructor(_0x19f120, _0x39e470) {
    __publicField(this, "_customCallbacks");
    __publicField(this, "_itemLabels");
    __publicField(this, "_itemLabelsCallbacks");
    __publicField(this, "_attributeLabels");
    __publicField(this, "_schema");
    __publicField(this, "_locale");
    this["_customCallbacks"] = [], this["_itemLabels"] = /* @__PURE__ */ new Map(), this["_itemLabelsCallbacks"] = [], this["_attributeLabels"] = /* @__PURE__ */ new Map(), this["_schema"] = _0x19f120, this["_locale"] = _0x39e470;
  }
  ["getDescriptions"](_0x12b808) {
    const _0x13dc60 = [], _0x1986bd = /* @__PURE__ */ new Set(), _0x4d738a = /* @__PURE__ */ new Set();
    for (let _0x46a378 = 0; _0x46a378 < _0x12b808["length"]; _0x46a378++) {
      const _0x8dfe4 = _0x12b808[_0x46a378];
      if (!_0x8dfe4["isInContent"]) continue;
      const _0x3c48d6 = this["_handleCustomCallbackDescription"](_0x8dfe4);
      if (_0x3c48d6) {
        if (null != _0x8dfe4["subType"]) {
          if (_0x1986bd["has"](_0x8dfe4["subType"])) continue;
          _0x1986bd["add"](_0x8dfe4["subType"]);
        }
        _0x13dc60["push"](_0x3c48d6);
      } else {
        if ("attribute" != _0x8dfe4["type"]) "insertion" != _0x8dfe4["type"] && "deletion" != _0x8dfe4["type"] || this["_handleInsertRemoveSuggestionDescription"](_0x13dc60, _0x8dfe4, _0x12b808[_0x46a378 + 1]);
        else {
          const _0x497f96 = _0x8dfe4["data"]["key"];
          if (_0x4d738a["has"](_0x497f96)) continue;
          _0x4d738a["add"](_0x8dfe4["data"]["key"]), _0x497f96 == m12 ? this["_handleRenameSuggestionDescription"](_0x13dc60, _0x8dfe4) : this["_handleAttributeSuggestionDescription"](_0x13dc60, _0x8dfe4);
        }
      }
    }
    return this["_resolveDescriptionItems"](_0x13dc60);
  }
  ["registerDescriptionCallback"](_0x29298f) {
    this["_customCallbacks"]["push"](_0x29298f);
  }
  ["registerElementLabel"](_0x5f1ec1, _0x3d13eb, _0x4ae292 = priorities["normal"]) {
    "function" == typeof _0x5f1ec1 ? insertToPriorityArray(this["_itemLabelsCallbacks"], { "matchingCallback": _0x5f1ec1, "label": _0x3d13eb, "priority": _0x4ae292 }) : this["_itemLabels"]["set"](_0x5f1ec1, _0x3d13eb);
  }
  ["registerAttributeLabel"](_0x288587, _0x7f8c30) {
    this["_attributeLabels"]["set"](_0x288587, _0x7f8c30);
  }
  ["getItemLabel"](_0x4cd9f, _0x5439bb = 1) {
    let _0x473aa0;
    for (const _0x965119 of this["_itemLabelsCallbacks"]) if (_0x965119["matchingCallback"](_0x4cd9f)) {
      _0x473aa0 = _0x965119["label"];
      break;
    }
    return _0x473aa0 || (_0x473aa0 = this["_itemLabels"]["get"](_0x4cd9f["name"])), _0x473aa0 ? _0x473aa0(_0x5439bb) : 1 !== _0x5439bb ? _0x5439bb + " " + _0x4cd9f["name"] + "s" : "" + _0x4cd9f["name"];
  }
  ["_addDescriptionItems"](_0x3a8b71, _0x2a3686) {
    const _0x303433 = _0x2a3686["getFirstRange"]()["getWalker"](), _0x17fb16 = "insertion" == _0x2a3686["type"] ? "add" : "remove";
    for (const _0xa96c96 of _0x303433) {
      const _0x4dd92e = _0xa96c96["item"], _0x47c657 = _0x3a8b71[_0x3a8b71["length"] - 1];
      if (_0x4dd92e["is"]("$textProxy")) _0x47c657 && _0x47c657["type"]["indexOf"]("Container") > -1 && _0x3a8b71["pop"](), _0x47c657 && "text" == _0x47c657["type"] ? _0x47c657[_0x17fb16] += _0x4dd92e["data"] : _0x3a8b71["push"]({ "type": "text", "add": "add" == _0x17fb16 ? _0x4dd92e["data"] : "", "remove": "remove" == _0x17fb16 ? _0x4dd92e["data"] : "" });
      else {
        if (this["_schema"]["isObject"](_0x4dd92e)) {
          const _0x992abe = _0x4dd92e;
          if (_0x47c657 && _0x47c657["type"]["indexOf"]("Container") > -1 && _0x3a8b71["pop"](), "elementEnd" == _0xa96c96["type"]) continue;
          _0x47c657 && _0x47c657["type"] == _0x17fb16 + "Object" && _0x47c657["element"]["name"] == _0x992abe["name"] ? _0x47c657["quantity"]++ : _0x3a8b71["push"]({ "type": _0x17fb16 + "Object", "element": _0x992abe, "quantity": 1 }), _0x303433["skip"]((_0x40ef89) => !("elementEnd" == _0x40ef89["type"] && _0x40ef89["item"] == _0x4dd92e));
        } else {
          if (this["_schema"]["checkChild"](_0x4dd92e, "$text") || _0x4dd92e["is"]("element", "softBreak")) {
            const _0x3c1823 = _0x4dd92e;
            if ("add" == _0x17fb16 && "elementStart" == _0xa96c96["type"] || "remove" == _0x17fb16 && "elementEnd" == _0xa96c96["type"]) continue;
            if (_0x47c657 && -1 == _0x47c657["type"]["indexOf"]("Container")) {
              "text" == _0x47c657["type"] && (_0x47c657[_0x17fb16] += "\n");
              continue;
            }
            let _0x4e58f6;
            if (_0x4e58f6 = "add" == _0x17fb16 ? _0x3c1823["nextSibling"] && !this["_schema"]["isObject"](_0x3c1823["nextSibling"]) ? _0x3c1823["nextSibling"] : null : _0x3c1823["previousSibling"] && !this["_schema"]["isObject"](_0x3c1823["previousSibling"]) ? _0x3c1823["previousSibling"] : null, _0x3c1823["isEmpty"] || _0x4e58f6 && _0x4e58f6["isEmpty"]) {
              const _0x222235 = _0x4e58f6 && _0x4e58f6["isEmpty"] ? _0x4e58f6 : _0x3c1823;
              _0x47c657 && _0x47c657["type"] == _0x17fb16 + "EmptyContainer" && _0x47c657["element"]["name"] == _0x222235["name"] ? _0x47c657["quantity"]++ : _0x3a8b71["push"]({ "type": _0x17fb16 + "EmptyContainer", "element": _0x222235, "quantity": 1 });
            } else _0x3a8b71["push"]({ "type": _0x17fb16 + "Container", "element": _0x3c1823 });
          }
        }
      }
    }
  }
  ["_resolveDescriptionItems"](_0x54708c) {
    const _0x11ed29 = this["_locale"], _0x1c7cdc = [], _0x311cb3 = [], _0x12a1ed = [];
    for (const _0x3264ab of _0x54708c) switch (_0x3264ab["type"]) {
      case "text":
        if (_0x3264ab["add"] = _0x3264ab["add"]["replace"](/(\S)\u000A+(\S)/g, "$1 $2")["replace"](/\u000A/g, ""), _0x3264ab["remove"] = _0x3264ab["remove"]["replace"](/(\S)\u000A+(\S)/g, "$1 $2")["replace"](/\u000A/g, ""), "" != _0x3264ab["add"] && "" != _0x3264ab["remove"]) {
          _0x1c7cdc["push"]({ "type": "replace", "content": o11(_0x11ed29, "REPLACE_TEXT", ['"' + _0x3264ab["remove"] + '"', '"' + _0x3264ab["add"] + '"']) });
          continue;
        }
        if (null != _0x3264ab["add"]["match"](/^ +$/)) {
          _0x1c7cdc["push"]({ "type": "insertion", "content": o11(_0x11ed29, "*Insert:* %0", o11(_0x11ed29, "ELEMENT_SPACE", _0x3264ab["add"]["length"])) });
          continue;
        }
        if (null != _0x3264ab["remove"]["match"](/^ +$/)) {
          _0x1c7cdc["push"]({ "type": "deletion", "content": o11(_0x11ed29, "*Remove:* %0", o11(_0x11ed29, "ELEMENT_SPACE", _0x3264ab["remove"]["length"])) });
          continue;
        }
        if ("" != _0x3264ab["add"]) {
          _0x1c7cdc["push"]({ "type": "insertion", "content": o11(_0x11ed29, "*Insert:* %0", '"' + _0x3264ab["add"] + '"') });
          continue;
        }
        _0x1c7cdc["push"]({ "type": "deletion", "content": o11(_0x11ed29, "*Remove:* %0", '"' + _0x3264ab["remove"] + '"') });
        continue;
      case "addEmptyContainer":
      case "addObject":
        _0x1c7cdc["push"]({ "type": "insertion", "content": o11(_0x11ed29, "*Insert:* %0", this["getItemLabel"](_0x3264ab["element"], _0x3264ab["quantity"])) });
        continue;
      case "removeEmptyContainer":
      case "removeObject":
        _0x1c7cdc["push"]({ "type": "deletion", "content": o11(_0x11ed29, "*Remove:* %0", this["getItemLabel"](_0x3264ab["element"], _0x3264ab["quantity"])) });
        continue;
      case "addContainer":
        _0x1c7cdc["push"]({ "type": "insertion", "content": o11(_0x11ed29, "*Split:* %0", this["getItemLabel"](_0x3264ab["element"], _0x3264ab["quantity"])) });
        continue;
      case "removeContainer":
        _0x1c7cdc["push"]({ "type": "deletion", "content": o11(_0x11ed29, "*Merge:* %0", this["getItemLabel"](_0x3264ab["element"], _0x3264ab["quantity"])) });
        continue;
      case "addFormat":
        _0x311cb3["push"](_0x3264ab["key"]);
        continue;
      case "removeFormat":
        _0x12a1ed["push"](_0x3264ab["key"]);
        continue;
      default:
        _0x1c7cdc["push"](_0x3264ab);
    }
    if (_0x311cb3["length"]) {
      const _0x2dc1d4 = _0x311cb3["map"]((_0x25d020) => this["_attributeLabels"]["has"](_0x25d020) ? this["_attributeLabels"]["get"](_0x25d020) : _0x25d020)["join"](", ");
      _0x1c7cdc["push"]({ "type": "format", "content": o11(this["_locale"], "*Set format:* %0", _0x2dc1d4) });
    }
    if (_0x12a1ed["length"]) {
      const _0x133075 = _0x12a1ed["map"]((_0x5311a4) => this["_attributeLabels"]["has"](_0x5311a4) ? this["_attributeLabels"]["get"](_0x5311a4) : _0x5311a4)["join"](", ");
      _0x1c7cdc["push"]({ "type": "format", "content": o11(this["_locale"], "*Remove format:* %0", _0x133075) });
    }
    return _0x1c7cdc;
  }
  ["_handleCustomCallbackDescription"](_0x3424f8) {
    for (const _0x3ec963 of this["_customCallbacks"]) {
      const _0x70a3aa = _0x3ec963(_0x3424f8);
      if (_0x70a3aa && "type" in _0x70a3aa) return _0x70a3aa;
    }
  }
  ["_handleAttributeSuggestionDescription"](_0x53a8a4, _0x32d09c) {
    const _0xe82a8b = _0x32d09c["data"], _0x1bc00f = void 0 === _0xe82a8b["newValue"] ? "removeFormat" : "addFormat";
    _0x53a8a4["push"]({ "type": _0x1bc00f, "key": _0xe82a8b["key"] });
  }
  ["_handleRenameSuggestionDescription"](_0x4e2280, _0x150367) {
    _0x4e2280["push"]({ "type": "format", "content": o11(this["_locale"], "*Change to:* %0", this["getItemLabel"](_0x150367["getFirstRange"]()["start"]["nodeAfter"], 1)) });
  }
  ["_handleInsertRemoveSuggestionDescription"](_0x3ecc68, _0x232ade, _0x36d57c) {
    if (this["_addDescriptionItems"](_0x3ecc68, _0x232ade), _0x36d57c && _0x36d57c["getFirstRange"]() && !_0x232ade["getFirstRange"]()["end"]["isEqual"](_0x36d57c["getFirstRange"]()["start"])) {
      const _0x4b3563 = _0x3ecc68[_0x3ecc68["length"] - 1], _0x19f02f = "insertion" == _0x232ade["type"] ? "add" : "remove";
      _0x4b3563 && "text" == _0x4b3563["type"] && (_0x4b3563[_0x19f02f] += "\n");
    }
  }
};
var V3 = class extends Plugin {
  ["afterInit"]() {
    const _0x23a4d1 = this["editor"], _0x406762 = _0x23a4d1["plugins"]["get"]("TrackChangesEditing");
    _0x23a4d1["commands"]["get"]("showAIAssistant") && _0x406762["enableCommand"]("showAIAssistant");
  }
};
var U4 = class extends Plugin {
  ["afterInit"]() {
    const _0x1e0906 = this["editor"], _0x123ad6 = _0x1e0906["locale"];
    if (!_0x1e0906["plugins"]["has"]("AlignmentEditing")) return;
    const _0x5b72fb = _0x1e0906["plugins"]["get"]("TrackChangesEditing");
    _0x5b72fb["enableDefaultAttributesIntegration"]("alignment"), _0x5b72fb["registerBlockAttribute"]("alignment"), _0x5b72fb["descriptionFactory"]["registerAttributeLabel"]("alignment", o11(_0x123ad6, "FORMAT_ALIGNMENT")), this["_registerLegacyDescription"]();
  }
  ["_registerLegacyDescription"]() {
    const _0x280da9 = this["editor"], _0x19bd8c = _0x280da9["locale"];
    _0x280da9["plugins"]["get"]("TrackChangesEditing")["descriptionFactory"]["registerDescriptionCallback"]((_0x46875c) => {
      if ("formatBlock" != _0x46875c["type"]) return;
      const { data: _0x34de60 } = _0x46875c;
      if (_0x34de60 && "alignment" == _0x34de60["commandName"]) {
        const _0x218b80 = _0x34de60["commandParams"][0]["value"];
        return { "type": "format", "content": o11(_0x19bd8c, "*Format:* %0", function(_0x5c452c) {
          switch (_0x5c452c) {
            case "left":
              return o11(_0x19bd8c, "FORMAT_ALIGN_TO_LEFT");
            case "right":
              return o11(_0x19bd8c, "FORMAT_ALIGN_TO_RIGHT");
            case "center":
              return o11(_0x19bd8c, "FORMAT_ALIGN_TO_CENTER");
            case "justify":
              return o11(_0x19bd8c, "FORMAT_JUSTIFY_TEXT");
          }
        }(_0x218b80)) };
      }
    });
  }
};
var ti2 = ["BoldEditing", "ItalicEditing", "UnderlineEditing", "CodeEditing", "StrikethroughEditing", "SubscriptEditing", "SuperscriptEditing"];
var G4 = class extends Plugin {
  ["afterInit"]() {
    const _0x41795f = this["editor"], _0x5174a4 = _0x41795f["plugins"]["get"]("TrackChangesEditing"), _0x45d7c4 = _0x41795f["locale"];
    for (const _0x13210b of ti2) {
      if (!_0x41795f["plugins"]["has"](_0x13210b)) continue;
      const _0x6aafc6 = _0x13210b["slice"](0, -7)["toLowerCase"](), _0x1ec749 = "FORMAT_" + _0x6aafc6["toUpperCase"]();
      _0x5174a4["enableDefaultAttributesIntegration"](_0x6aafc6), _0x5174a4["registerInlineAttribute"](_0x6aafc6), _0x5174a4["descriptionFactory"]["registerAttributeLabel"](_0x6aafc6, o11(_0x45d7c4, _0x1ec749));
    }
    this["_registerLegacyDescription"]();
  }
  ["_registerLegacyDescription"]() {
    const _0x335272 = this["editor"], _0x56f5df = _0x335272["locale"], _0x29c0b2 = _0x335272["plugins"]["get"]("TrackChangesEditing");
    function _0x57c8d8(_0x38ddf9, _0x4df6c8) {
      _0x29c0b2["descriptionFactory"]["registerDescriptionCallback"]((_0x3a4346) => {
        if ("formatInline" != _0x3a4346["type"]) return;
        const { data: _0x16e3ba } = _0x3a4346;
        return _0x16e3ba && _0x16e3ba["commandName"] === _0x38ddf9 ? _0x16e3ba["commandParams"][0]["forceValue"] ? { "type": "format", "content": o11(_0x56f5df, "*Format:* %0", _0x4df6c8) } : { "type": "format", "content": o11(_0x56f5df, "*Remove format:* %0", _0x4df6c8) } : void 0;
      });
    }
    _0x57c8d8("bold", o11(_0x56f5df, "FORMAT_BOLD")), _0x57c8d8("italic", o11(_0x56f5df, "FORMAT_ITALIC")), _0x57c8d8("underline", o11(_0x56f5df, "FORMAT_UNDERLINE")), _0x57c8d8("code", o11(_0x56f5df, "FORMAT_CODE")), _0x57c8d8("strikethrough", o11(_0x56f5df, "FORMAT_STRIKETHROUGH")), _0x57c8d8("subscript", o11(_0x56f5df, "FORMAT_SUBSCRIPT")), _0x57c8d8("superscript", o11(_0x56f5df, "FORMAT_SUPERSCRIPT"));
  }
};
var F4 = class extends Plugin {
  ["afterInit"]() {
    const _0x21732c = this["editor"], _0x35240b = _0x21732c["locale"];
    if (!_0x21732c["plugins"]["has"]("BlockQuoteEditing")) return;
    const _0x195984 = _0x21732c["plugins"]["get"]("TrackChangesEditing"), _0x9ee4d2 = this["editor"]["commands"]["get"]("blockQuote");
    _0x195984["enableCommand"]("blockQuote", (_0x41fc3f, _0x3984b6 = {}) => {
      const _0x367d72 = this["editor"]["model"]["document"]["selection"], _0x415135 = _0x3984b6 && void 0 !== _0x3984b6["forceValue"] ? _0x3984b6["forceValue"] : !_0x9ee4d2["value"];
      let _0x2a1555 = [];
      if (_0x415135) {
        const _0x1f0db4 = Array["from"](_0x367d72["getSelectedBlocks"]())["filter"]((_0x4935fa) => oo(_0x4935fa) || function(_0x508ea6, _0x226bd6) {
          const _0x55a22e = _0x226bd6["checkChild"](_0x508ea6["parent"], "blockQuote"), _0x9d4af9 = _0x226bd6["checkChild"](["$root", "blockQuote"], _0x508ea6);
          return _0x55a22e && _0x9d4af9;
        }(_0x4935fa, this["editor"]["model"]["schema"]));
        _0x2a1555 = to(_0x1f0db4, _0x21732c["model"]);
      } else {
        const _0x346826 = Array["from"](_0x367d72["getSelectedBlocks"]())["filter"]((_0x1f7b01) => oo(_0x1f7b01));
        _0x2a1555 = to(_0x346826, _0x21732c["model"]);
      }
      _0x21732c["model"]["change"](() => {
        for (const _0x8fa992 of _0x2a1555) _0x195984["markBlockFormat"](_0x8fa992, { "commandName": "blockQuote", "commandParams": [{ "forceValue": _0x415135 }] });
      });
    }), _0x195984["descriptionFactory"]["registerDescriptionCallback"]((_0x3d89fb) => {
      const { data: _0x287376 } = _0x3d89fb;
      if (_0x287376 && "blockQuote" == _0x287376["commandName"]) {
        const _0xb67d32 = o11(_0x35240b, "ELEMENT_BLOCK_QUOTE");
        return _0x287376["commandParams"][0]["forceValue"] ? { "type": "format", "content": o11(_0x35240b, "*Set format:* %0", _0xb67d32) } : { "type": "format", "content": o11(_0x35240b, "*Remove format:* %0", _0xb67d32) };
      }
    });
  }
};
function oo(_0x550646) {
  return "blockQuote" == _0x550646["parent"]["name"];
}
var L4 = class extends Plugin {
  ["afterInit"]() {
    const _0x5e430b = this["editor"];
    _0x5e430b["plugins"]["has"]("CaseChange") && (_0x5e430b["plugins"]["get"]("TrackChangesEditing")["enableCommand"]("changeCaseUpper"), _0x5e430b["plugins"]["get"]("TrackChangesEditing")["enableCommand"]("changeCaseLower"), _0x5e430b["plugins"]["get"]("TrackChangesEditing")["enableCommand"]("changeCaseTitle"));
  }
};
var H7 = class extends Plugin {
  ["afterInit"]() {
    const _0x35957d = this["editor"];
    _0x35957d["commands"]["get"]("ckbox") && _0x35957d["plugins"]["get"]("TrackChangesEditing")["enableCommand"]("ckbox");
  }
};
var J6 = class extends Plugin {
  ["afterInit"]() {
    const _0x5a063b = this["editor"];
    if (!_0x5a063b["plugins"]["has"]("CodeBlock")) return;
    const _0x297ec4 = _0x5a063b["plugins"]["get"]("TrackChangesEditing"), _0x54a70e = _0x5a063b["locale"], _0x9bfdab = _0x5a063b["config"]["get"]("codeBlock")["languages"], _0x158a59 = _0x5a063b["commands"]["get"]("codeBlock");
    _0x297ec4["enableCommand"]("indentCodeBlock"), _0x297ec4["enableCommand"]("outdentCodeBlock"), _0x297ec4["enableCommand"]("codeBlock", (_0x251a14, _0x374aa4 = {}) => {
      const _0x403b8f = _0x5a063b["model"], _0xc492d6 = _0x5a063b["model"]["document"]["selection"], _0x694a20 = _0x374aa4 && void 0 !== _0x374aa4["forceValue"] ? _0x374aa4["forceValue"] : !_0x158a59["value"];
      let _0x41082c;
      _0x374aa4["language"] || (_0x374aa4["language"] = _0x9bfdab[0]["language"]), _0x41082c = _0x694a20 ? Array["from"](_0xc492d6["getSelectedBlocks"]())["filter"]((_0x303868) => eo(_0x303868) || function(_0x2a99e2, _0x51da6e) {
        if (_0x2a99e2["is"]("rootElement") || _0x51da6e["isLimit"](_0x2a99e2)) return false;
        return _0x51da6e["checkChild"](_0x2a99e2["parent"], "codeBlock");
      }(_0x303868, _0x403b8f["schema"])) : Array["from"](_0xc492d6["getSelectedBlocks"]())["filter"]((_0x5553a6) => eo(_0x5553a6));
      const _0x24b1e3 = to(_0x41082c, _0x403b8f);
      _0x403b8f["change"](() => {
        for (const _0x538aed of _0x24b1e3) _0x297ec4["markBlockFormat"](_0x538aed, { "commandName": "codeBlock", "commandParams": [{ ..._0x374aa4, "forceValue": _0x694a20 }], "formatGroupId": "blockName" });
      });
    }), _0x297ec4["descriptionFactory"]["registerElementLabel"]("codeBlock", (_0x37f7f0) => o11(_0x54a70e, "ELEMENT_CODE_BLOCK", _0x37f7f0)), _0x297ec4["descriptionFactory"]["registerDescriptionCallback"]((_0x4c1e3d) => {
      if ("formatBlock" != _0x4c1e3d["type"]) return;
      const _0x2c1ee7 = _0x54a70e["t"], { data: _0x29a62a } = _0x4c1e3d;
      if (!_0x29a62a || "codeBlock" != _0x29a62a["commandName"]) return;
      const _0x4e5627 = _0x29a62a["commandParams"][0]["language"], _0x31436e = _0x2c1ee7(_0x9bfdab["find"]((_0x3e1a89) => _0x3e1a89["language"] === _0x4e5627)["label"])["toLowerCase"]();
      return _0x29a62a["commandParams"][0]["forceValue"] ? { "type": "format", "content": o11(_0x54a70e, "*Set format:* %0", o11(_0x54a70e, "ELEMENT_CODE_BLOCK", 1) + " (" + _0x31436e + ")") } : { "type": "format", "content": o11(_0x54a70e, "*Remove format:* %0", o11(_0x54a70e, "ELEMENT_CODE_BLOCK", 1)) };
    });
  }
};
function eo(_0x5ca8c2) {
  return "codeBlock" == _0x5ca8c2["name"];
}
var q7 = class extends Plugin {
  ["afterInit"]() {
    const _0x144d38 = this["editor"];
    if (!_0x144d38["plugins"]["has"]("CommentsEditing")) return;
    _0x144d38["plugins"]["get"]("TrackChangesEditing")["enableCommand"]("addCommentThread");
  }
};
function io(_0x274e30, _0xfefb57, _0x2369af) {
  const _0x3169aa = [];
  for (const _0x1a31b4 of _0xfefb57["getItems"]()) _0x1a31b4["hasAttribute"](_0x274e30) && _0x3169aa["push"](_0x2369af["createRangeOn"](_0x1a31b4));
  return _0x3169aa;
}
function _e(_0x166e19, _0x35f0a6, { showActiveMarker: _0x2522d6 = true } = {}) {
  const _0x406f67 = _0x166e19["plugins"]["get"]("TrackChangesEditing");
  return (_0x1eb348, _0x2571d8, _0x37050a) => {
    if (!_0x37050a["consumable"]["test"](_0x2571d8["markerRange"], _0x1eb348["name"])) return;
    const _0x3ffd4b = _0x2571d8["markerRange"]["getWalker"](), _0x357de5 = _0x2571d8["markerRange"]["start"], _0x4550e3 = _0x166e19["model"]["schema"];
    let _0x2cd18e = null, _0x1be2bd = null, _0x126e60 = false, _0x44cb07 = false;
    for (const _0x2b3b53 of _0x3ffd4b) {
      const _0x10838e = _0x2b3b53["item"];
      _0x126e60 = _0x126e60 || _0x4550e3["isContent"](_0x10838e);
      const _0x20d9f4 = _0x37050a["mapper"]["toViewElement"](_0x10838e);
      if (_0x20d9f4 && _0x20d9f4["getCustomProperty"]("addHighlight")) return;
      "elementEnd" == _0x2b3b53["type"] && (_0x4550e3["isBlock"](_0x10838e) && !_0x4550e3["isLimit"](_0x10838e) && (_0x10838e["nextSibling"] || _0x357de5["isAtEnd"] ? _0x2cd18e && _0x2cd18e["parent"] == _0x10838e || (_0x2cd18e = _0x10838e, _0x58cdc7(_0x2b3b53["previousPosition"]), _0x44cb07 = true) : _0x1be2bd = _0x1be2bd || _0x2b3b53["previousPosition"]));
    }
    function _0x58cdc7(_0x6e4a04) {
      const { authorId: _0x2b46cc } = _0x406f67["_splitMarkerName"](_0x2571d8["markerName"]), _0x2e4ce8 = _0x37050a["writer"]["createUIElement"]("span", { "class": "ck-suggestion-marker-" + _0x35f0a6, "data-author-id": _0x2b46cc }), _0x10f217 = _0x37050a["mapper"]["toViewPosition"](_0x6e4a04);
      _0x2522d6 && _0x406f67["activeMarkers"]["includes"](_0x2571d8["markerName"]) && _0x37050a["writer"]["addClass"]("ck-suggestion-marker--active", _0x2e4ce8), _0x37050a["writer"]["insert"](_0x10f217, _0x2e4ce8), _0x37050a["mapper"]["bindElementToMarker"](_0x2e4ce8, _0x2571d8["markerName"]);
    }
    _0x126e60 || _0x44cb07 || !_0x1be2bd || _0x58cdc7(_0x1be2bd);
  };
}
var z4 = class extends Plugin {
  static get ["requires"]() {
    return [Delete];
  }
  ["init"]() {
    const _0x11f737 = this["editor"], _0x463a4e = _0x11f737["plugins"]["get"]("TrackChangesEditing");
    _0x463a4e["enableCommand"]("delete");
    const _0x2a5404 = _0x11f737["commands"]["get"]("deleteForward");
    _0x463a4e["enableCommand"]("deleteForward", (_0xc53921, _0x3c1fd3 = {}) => {
      const _0xd03bfd = _0x11f737["model"]["createSelection"](_0x11f737["model"]["document"]["selection"]);
      _0xd03bfd["isCollapsed"] && _0x11f737["model"]["modifySelection"](_0xd03bfd, { "direction": "forward", "unit": _0x3c1fd3["unit"] });
      const _0x43bb69 = _0xd03bfd["getFirstRange"](), _0x1fa957 = LiveRange["fromRange"](_0x43bb69);
      let _0x1671f4;
      _0xc53921(_0x3c1fd3), _0x1671f4 = "$graveyard" == _0x1fa957["root"]["rootName"] ? _0x11f737["model"]["createRange"](_0x43bb69["start"]) : _0x11f737["model"]["createRange"](_0x1fa957["start"], _0x1fa957["end"]), _0x1fa957["detach"](), _0x11f737["model"]["enqueueChange"](_0x2a5404["buffer"]["batch"], (_0x4b456b) => {
        _0x2a5404["buffer"]["lock"](), _0x4b456b["setSelection"](_0x4b456b["createRange"](_0x1671f4["end"])), _0x2a5404["buffer"]["unlock"]();
      });
    }), _0x11f737["editing"]["downcastDispatcher"]["on"]("addMarker:suggestion:deletion", _e(_0x11f737, "merge"), { "priority": "high" }), _0x11f737["data"]["downcastDispatcher"]["on"]("addMarker:suggestion:deletion", (_0x3b1743, _0x230ad5, _0x4e9a6d) => {
      _0x4e9a6d["options"]["showSuggestionHighlights"] && _e(_0x11f737, "merge", { "showActiveMarker": false })["bind"](this)(_0x3b1743, _0x230ad5, _0x4e9a6d);
    }, { "priority": "high" }), _0x11f737["editing"]["downcastDispatcher"]["on"]("removeMarker:suggestion:deletion", (_0x17d377, _0x437bcc, _0x13fa9a) => {
      const _0x4acb4e = _0x13fa9a["mapper"]["markerNameToElements"](_0x437bcc["markerName"]);
      if (_0x4acb4e) {
        for (const _0x3d0793 of _0x4acb4e) _0x3d0793["is"]("uiElement") && (_0x13fa9a["mapper"]["unbindElementFromMarkerName"](_0x3d0793, _0x437bcc["markerName"]), _0x13fa9a["writer"]["remove"](_0x3d0793));
      }
    }, { "priority": "high" });
  }
};
var K3 = class extends Plugin {
  ["afterInit"]() {
    const _0x5bcbe0 = this["editor"];
    if (!_0x5bcbe0["plugins"]["has"]("ListEditing")) return;
    const _0x7672b4 = _0x5bcbe0["locale"], _0x16a1a8 = _0x5bcbe0["plugins"]["get"]("TrackChangesEditing"), _0x3a9bdd = _0x5bcbe0["plugins"]["has"]("TodoListEditing"), _0x2fa44d = !!_0x5bcbe0["config"]["get"]("list.multiBlock");
    function _0x83bc3c(_0x1bdfa9) {
      return { "type": "format", "content": "" + o11(_0x7672b4, "*Set format:* %0", _0x1bdfa9) };
    }
    function _0x4dfdc9(_0x343c6a) {
      return { "type": "format", "content": "" + o11(_0x7672b4, "*Remove format:* %0", _0x343c6a) };
    }
    _0x16a1a8["enableDefaultAttributesIntegration"]("numberedList"), _0x16a1a8["enableDefaultAttributesIntegration"]("bulletedList"), _0x16a1a8["enableDefaultAttributesIntegration"]("customNumberedList"), _0x16a1a8["enableDefaultAttributesIntegration"]("customBulletedList"), _0x16a1a8["enableDefaultAttributesIntegration"]("indentList"), _0x16a1a8["enableDefaultAttributesIntegration"]("outdentList"), _0x16a1a8["enableDefaultAttributesIntegration"]("splitListItemAfter"), _0x16a1a8["enableDefaultAttributesIntegration"]("splitListItemBefore"), _0x16a1a8["registerBlockAttribute"]("listItemId"), _0x16a1a8["registerBlockAttribute"]("listType"), _0x16a1a8["registerBlockAttribute"]("listIndent"), _0x2fa44d && (_0x16a1a8["enableDefaultAttributesIntegration"]("mergeListItemBackward"), _0x16a1a8["enableDefaultAttributesIntegration"]("mergeListItemForward")), _0x3a9bdd && (_0x16a1a8["enableDefaultAttributesIntegration"]("todoList"), _0x16a1a8["enableDefaultAttributesIntegration"]("checkTodoList"), _0x16a1a8["registerBlockAttribute"]("todoListChecked"), _0x16a1a8["descriptionFactory"]["registerDescriptionCallback"]((_0x4ebe2f) => {
      const { data: _0x491fee } = _0x4ebe2f;
      if (_0x491fee && "todoListChecked" == _0x491fee["key"]) return { "type": "format", "content": _0x491fee["newValue"] ? o11(_0x7672b4, "*Check item*") : o11(_0x7672b4, "*Uncheck item*") };
    }), this["editor"]["model"]["document"]["registerPostFixer"]((_0x34fd5e) => {
      if (_0x34fd5e["batch"]["isUndo"]) return false;
      let _0x499fdc = false;
      const _0x50032e = _0x16a1a8["getSuggestions"]({ "skipNotAttached": true })["filter"]((_0x42a04b) => "todoListChecked" === _0x16a1a8["_getAttributeKey"](_0x42a04b));
      for (const _0x5dabfa of _0x50032e) {
        "todo" != _0x5dabfa["getFirstRange"]()["start"]["nodeAfter"]["getAttribute"]("listType") && (_0x16a1a8["_findSuggestions"](_0x5dabfa["getFirstRange"](), "attribute")["find"]((_0x3f9270) => "listType" === _0x16a1a8["_getAttributeKey"](_0x3f9270["suggestion"])) || (_0x34fd5e["removeMarker"](_0x5dabfa["getFirstMarker"]()), _0x499fdc = true));
      }
      return _0x499fdc;
    })), _0x16a1a8["descriptionFactory"]["registerAttributeLabel"]("listIndent", o11(_0x7672b4, "FORMAT_INDENT"));
    const _0x4afac7 = { "type": "format", "content": "" };
    _0x16a1a8["descriptionFactory"]["registerDescriptionCallback"]((_0x18e632) => {
      const { data: _0x1f46e2 } = _0x18e632;
      if (!_0x1f46e2 || "listType" != _0x1f46e2["key"]) return;
      let _0x26e51b = _0x18e632["head"];
      for (; _0x26e51b; ) {
        if (_0x26e51b["data"] && (("listStyle" == _0x26e51b["data"]["key"] || "listMarkerStyle" == _0x26e51b["data"]["key"]) && (_0x26e51b["data"]["newValue"] && "default" != _0x26e51b["data"]["newValue"] || "default" != _0x26e51b["data"]["oldValue"] && !_0x1f46e2["newValue"]) || !_0x2fa44d && _0x26e51b["data"]["key"] == m12)) return _0x4afac7;
        _0x26e51b = _0x26e51b["next"];
      }
      if (null == _0x1f46e2["newValue"]) switch (_0x1f46e2["oldValue"]) {
        case "bulleted":
          return _0x4dfdc9(o11(_0x7672b4, "ELEMENT_BULLETED_LIST"));
        case "numbered":
          return _0x4dfdc9(o11(_0x7672b4, "ELEMENT_NUMBERED_LIST"));
        case "todo":
          return _0x4dfdc9(o11(_0x7672b4, "ELEMENT_TODO_LIST"));
      }
      switch (_0x1f46e2["newValue"]) {
        case "bulleted":
          return _0x83bc3c(o11(_0x7672b4, "ELEMENT_BULLETED_LIST"));
        case "numbered":
          return _0x83bc3c(o11(_0x7672b4, "ELEMENT_NUMBERED_LIST"));
        case "todo":
          return _0x83bc3c(o11(_0x7672b4, "ELEMENT_TODO_LIST"));
      }
    }), _0x16a1a8["descriptionFactory"]["registerDescriptionCallback"]((_0x3a0fa1) => {
      const { data: _0x342191 } = _0x3a0fa1;
      if (_0x342191 && "listIndent" == _0x342191["key"]) return null == _0x342191["newValue"] || null == _0x342191["oldValue"] && 0 == _0x342191["newValue"] ? _0x4afac7 : void 0;
    }), _0x16a1a8["descriptionFactory"]["registerDescriptionCallback"]((_0x296b21) => {
      if ("attribute" != _0x296b21["type"]) return;
      const { data: _0x399a5a } = _0x296b21;
      if (!_0x399a5a || "listItemId" != _0x399a5a["key"]) return;
      const _0x1e135f = Ee(_0x296b21);
      return "newValue" == _0x1e135f ? { "type": "format", "content": o11(_0x7672b4, "*Merge:* list item") } : "oldValue" == _0x1e135f ? { "type": "format", "content": o11(_0x7672b4, "*Split:* list item") } : _0x4afac7;
    }), _0x5bcbe0["model"]["document"]["registerPostFixer"]((_0x4f079d) => this["listItemIdFixer"](_0x4f079d)), _0x5bcbe0["model"]["document"]["registerPostFixer"]((_0x401404) => this["noTrackChangesFixer"](_0x401404)), _0x5bcbe0["model"]["document"]["on"]("change:data", (_0x3dd845, _0x3a9b7c) => {
      if (_0x3a9b7c["isUndo"] || !_0x3a9b7c["isLocal"]) return false;
      this["assureChains"]();
    }, { "priority": "high" }), this["_supportLegacySuggestions"]();
  }
  ["listItemIdFixer"](_0x3f807a) {
    if (_0x3f807a["batch"]["isUndo"] || !_0x3f807a["batch"]["isLocal"]) return false;
    let _0x43b996 = false;
    const _0x104d3e = this["editor"]["plugins"]["get"]("TrackChangesEditing")["getSuggestions"]({ "skipNotAttached": true })["filter"]((_0x48b2b8) => _0x48b2b8["data"] && "listItemId" == _0x48b2b8["data"]["key"])["filter"]((_0x112ead) => _0x112ead["data"]["newValue"] && _0x112ead["data"]["oldValue"]);
    for (const _0x5341bd of _0x104d3e) Ee(_0x5341bd) || (_0x3f807a["removeMarker"](_0x5341bd["getFirstMarker"]()), _0x43b996 = true);
    return _0x43b996;
  }
  ["noTrackChangesFixer"](_0x2e3a10) {
    if (_0x2e3a10["batch"]["isUndo"] || !_0x2e3a10["batch"]["isLocal"]) return false;
    const _0x4db420 = this["editor"]["plugins"]["get"]("TrackChangesEditing");
    if (_0x4db420["trackChangesCommand"]["value"]) return false;
    let _0x43511c = false;
    const _0x3296aa = ["listType", "listItemId", "listIndent", "listStyle", "listStart", "listReversed", "todoListCheck", "listMarker", "listMarkerStyle"], _0x4bd4e8 = this["editor"]["model"]["document"]["differ"]["getChanges"]()["filter"]((_0x1f9010) => "attribute" == _0x1f9010["type"])["filter"]((_0x47c4f9) => _0x3296aa["includes"](_0x47c4f9["attributeKey"]));
    if (0 == _0x4bd4e8["length"]) return _0x43511c;
    for (const _0x12b56b of _0x4bd4e8) {
      const _0x1a7fb0 = _0x4db420["_findSuggestions"](_0x12b56b["range"], "attribute")["filter"]((_0x867b6c) => !_0x867b6c["meta"]["isNextTo"])["map"]((_0x51c988) => _0x51c988["suggestion"])["filter"]((_0x161dc6) => {
        const _0xcf1e6 = _0x4db420["_getAttributeKey"](_0x161dc6);
        return _0x3296aa["includes"](_0xcf1e6);
      });
      if (_0x1a7fb0["length"]) {
        for (const _0x1ec7c5 of _0x1a7fb0) _0x2e3a10["removeMarker"](_0x1ec7c5["getFirstMarker"]());
        _0x43511c = true;
      }
    }
    return _0x43511c;
  }
  ["assureChains"]() {
    const _0x20f2ad = this["editor"]["plugins"]["get"]("TrackChangesEditing"), _0x2f8b7c = ["listType", "listItemId", "listIndent", "listStyle", "listStart", "listReversed", "todoListCheck", "listMarker", "listMarkerStyle"];
    let _0x223854;
    const _0x13b7f9 = new Set(this["editor"]["model"]["document"]["differ"]["getChangedMarkers"]()["filter"]((_0x3d8220) => {
      if (_0x3d8220["data"]["oldRange"] || !_0x3d8220["data"]["newRange"]) return null;
      if (!_0x3d8220["name"]["startsWith"]("suggestion:attribute:")) return null;
      const { id: _0x565168 } = _0x20f2ad["_splitMarkerName"](_0x3d8220["name"]);
      if (!_0x20f2ad["hasSuggestion"](_0x565168)) return null;
      const _0x2f385f = _0x20f2ad["getSuggestion"](_0x565168);
      return _0x2f8b7c["includes"](_0x2f385f["data"]["key"]);
    })["map"]((_0x52bd6c) => {
      const { id: _0x3e407c } = _0x20f2ad["_splitMarkerName"](_0x52bd6c["name"]), _0x412e7f = _0x20f2ad["getSuggestion"](_0x3e407c);
      return _0x223854 = _0x412e7f["attributes"]["groupId"], _0x412e7f["getFirstRange"]()["start"]["nodeAfter"];
    }));
    if (0 == _0x13b7f9["size"]) return;
    const _0x52a8bc = _0x20f2ad["getSuggestions"]({ "skipNotAttached": true })["filter"]((_0x53ccaf) => "attribute" == _0x53ccaf["type"] && _0x53ccaf["data"] && _0x2f8b7c["includes"](_0x53ccaf["data"]["key"]) && _0x53ccaf["attributes"]["groupId"] != _0x223854)["map"]((_0x31f60d) => ({ "listItem": _0x31f60d["getFirstRange"]()["start"]["nodeAfter"], "groupId": _0x31f60d["attributes"]["groupId"] })), _0x2ef062 = /* @__PURE__ */ new Set();
    for (const { groupId: _0x3ed71b, listItem: _0x4d2aa7 } of _0x52a8bc) _0x13b7f9["has"](_0x4d2aa7) && _0x2ef062["add"](_0x3ed71b);
    for (const _0x205298 of _0x20f2ad["getSuggestions"]()) _0x2ef062["has"](_0x205298["attributes"]["groupId"]) && _0x205298["setAttribute"]("groupId", _0x223854);
  }
  ["_supportLegacySuggestions"]() {
    const _0x1a7710 = this["editor"], _0x138c55 = _0x1a7710["locale"], _0x424164 = _0x1a7710["plugins"]["get"]("TrackChangesEditing");
    this["_registerLegacyDescription"](), _0x424164["_suggestionFactory"]["registerCustomCallback"]("formatBlock", "documentList", "accept", function(_0x41a254, _0x446237) {
      const _0x39edb8 = [];
      for (let _0x96e08b of _0x41a254) _0x96e08b["start"]["nodeAfter"] === _0x96e08b["end"]["parent"] && (_0x96e08b = _0x1a7710["model"]["createRange"](_0x1a7710["model"]["createPositionAt"](_0x96e08b["start"]["nodeAfter"], 0))), _0x39edb8["push"](_0x96e08b);
      _0x1a7710["model"]["change"]((_0x5b3368) => {
        const _0xfc0644 = _0x1a7710["model"]["document"]["selection"], _0x4cd0c2 = Array["from"](_0xfc0644["getRanges"]())["map"]((_0x2a74dc) => LiveRange["fromRange"](_0x2a74dc));
        _0x5b3368["setSelection"](_0x39edb8), _0x1a7710["commands"]["get"](_0x446237["commandName"])["refresh"](), _0x446237["commandParams"]["push"]({ "forceDefaultExecution": true }), _0x1a7710["execute"](_0x446237["commandName"], ..._0x446237["commandParams"]), _0x5b3368["setSelection"](_0x4cd0c2);
        for (const _0x2c5eb4 of _0x4cd0c2) _0x2c5eb4["detach"]();
      });
    }), _0x424164["descriptionFactory"]["registerElementLabel"](function(_0x465e33) {
      const _0x2ab886 = !_0x1a7710["model"]["schema"]["isObject"](_0x465e33), _0x38bc0c = _0x465e33["previousSibling"], _0x33cca9 = _0x465e33["nextSibling"], _0x57941c = _0x465e33["getAttribute"]("listItemId"), _0x57edaa = !_0x38bc0c || _0x38bc0c["getAttribute"]("listItemId") !== _0x57941c, _0x4a2611 = !_0x33cca9 || _0x33cca9["getAttribute"]("listItemId") !== _0x57941c;
      return _0x2ab886 && Boolean(_0x57941c) && _0x57edaa && _0x4a2611;
    }, (_0x4f1bf1) => o11(_0x138c55, "ELEMENT_LIST_ITEM", _0x4f1bf1));
  }
  ["_registerLegacyDescription"]() {
    const _0x15abf2 = this["editor"], _0x4723eb = _0x15abf2["locale"];
    function _0x5e29e8(_0x4c8202) {
      const _0x1f6124 = _0x15abf2["commands"]["get"]("bulletedList")["value"], _0x13ac3c = _0x15abf2["commands"]["get"]("numberedList")["value"];
      return "numberedList" === _0x4c8202 ? _0x1f6124 : _0x13ac3c;
    }
    _0x15abf2["plugins"]["get"]("TrackChangesEditing")["descriptionFactory"]["registerDescriptionCallback"](function(_0x1c4e42) {
      if ("formatBlock" != _0x1c4e42["type"]) return;
      const { data: _0x4baec2 } = _0x1c4e42;
      if (!_0x4baec2) return;
      let _0xdbd47, _0x1f6d13, _0x5a7d21, _0x295989;
      switch (_0x4baec2["commandName"]) {
        case "bulletedList":
          _0x5a7d21 = _0x4baec2["commandParams"][0]["forceValue"], _0x295989 = _0x5e29e8(_0x4baec2["commandName"]), _0xdbd47 = _0x5a7d21 ? "*Format:* insert into %0" : "*Format:* remove from %0", !_0x295989 && _0x15abf2["config"]["get"]("list.multiBlock") || (_0xdbd47 = "*Change to:* %0"), _0x1f6d13 = { "type": "format", "content": o11(_0x4723eb, _0xdbd47, o11(_0x4723eb, "ELEMENT_BULLETED_LIST")) };
          break;
        case "numberedList":
          _0x5a7d21 = _0x4baec2["commandParams"][0]["forceValue"], _0x295989 = _0x5e29e8(_0x4baec2["commandName"]), _0xdbd47 = _0x5a7d21 ? "*Format:* insert into %0" : "*Format:* remove from %0", !_0x295989 && _0x15abf2["config"]["get"]("list.multiBlock") || (_0xdbd47 = "*Change to:* %0"), _0x1f6d13 = { "type": "format", "content": o11(_0x4723eb, _0xdbd47, o11(_0x4723eb, "ELEMENT_NUMBERED_LIST")) };
          break;
        case "indentList":
          _0xdbd47 = "*Indent:* %0", _0x1f6d13 = { "type": "format", "content": o11(_0x4723eb, _0xdbd47, o11(_0x4723eb, "ELEMENT_LIST_ITEM")) };
          break;
        case "outdentList":
          _0xdbd47 = function(_0x4f3c0b) {
            const _0x44e0bf = _0x4f3c0b["getFirstRange"]();
            let _0x54b627 = _0x44e0bf["start"]["nodeAfter"];
            for (; _0x54b627 && _0x44e0bf["containsItem"](_0x54b627); ) {
              if (_0x54b627["getAttribute"]("listIndent") > 0) return false;
              _0x54b627 = _0x54b627["nextSibling"];
            }
            return true;
          }(_0x1c4e42) ? o11(_0x4723eb, "*Format:* remove from %0", o11(_0x4723eb, function(_0x1b10e3) {
            return "ELEMENT_" + _0x1b10e3["getFirstRange"]()["start"]["nodeAfter"]["getAttribute"]("listType")["toUpperCase"]() + "_LIST";
          }(_0x1c4e42))) : o11(_0x4723eb, "*Outdent:* %0", o11(_0x4723eb, "ELEMENT_LIST_ITEM")), _0x1f6d13 = { "type": "format", "content": _0xdbd47 };
          break;
        case "mergeListItemBackward":
        case "mergeListItemForward":
          false === _0x4baec2["multipleBlocks"] && (_0xdbd47 = "*Merge:* %0", _0x1f6d13 = { "type": "deletion", "content": o11(_0x4723eb, _0xdbd47, o11(_0x4723eb, "ELEMENT_LIST_ITEM")) });
      }
      return _0x1f6d13;
    });
  }
};
function Ee(_0x37eefa) {
  let _0x293348 = _0x37eefa["getFirstRange"]()["start"]["nodeAfter"]["previousSibling"];
  for (; _0x293348; ) {
    const _0x2a6c96 = _0x293348["getAttribute"]("listItemId");
    if (!_0x2a6c96) return false;
    if (_0x2a6c96 == _0x37eefa["data"]["newValue"]) return "newValue";
    if (_0x2a6c96 == _0x37eefa["data"]["oldValue"]) return "oldValue";
    _0x293348 = _0x293348["previousSibling"];
  }
  return false;
}
var pe = class extends Plugin {
  ["afterInit"]() {
    if (!this["editor"]["plugins"]["has"]("ListPropertiesEditing")) return;
    const _0x594b49 = this["editor"]["config"]["get"]("list.properties"), _0x43aab9 = this["editor"]["plugins"]["get"]("TrackChangesEditing");
    _0x594b49["styles"] && (_0x43aab9["enableDefaultAttributesIntegration"]("listStyle"), _0x43aab9["registerBlockAttribute"]("listStyle")), _0x594b49["reversed"] && (_0x43aab9["enableDefaultAttributesIntegration"]("listReversed"), _0x43aab9["registerBlockAttribute"]("listReversed")), _0x594b49["startIndex"] && (_0x43aab9["enableDefaultAttributesIntegration"]("listStart"), _0x43aab9["registerBlockAttribute"]("listStart"));
    const _0xd56774 = { "type": "format", "content": "" };
    _0x43aab9["descriptionFactory"]["registerDescriptionCallback"](this["handleDescriptions"]["bind"](this));
    const _0x1be701 = this["editor"]["locale"];
    _0x43aab9["descriptionFactory"]["registerAttributeLabel"]("listReversed", o11(_0x1be701, "FORMAT_LIST_REVERSED")), _0x43aab9["descriptionFactory"]["registerDescriptionCallback"]((_0x53161a) => {
      const { data: _0x2dd15f } = _0x53161a;
      if (_0x2dd15f && "listReversed" == _0x2dd15f["key"]) return null == _0x2dd15f["newValue"] || 0 == _0x2dd15f["newValue"] && null == _0x2dd15f["oldValue"] ? _0xd56774 : void 0;
    }), _0x43aab9["descriptionFactory"]["registerAttributeLabel"]("listStart", o11(_0x1be701, "FORMAT_LIST_START")), _0x43aab9["descriptionFactory"]["registerDescriptionCallback"]((_0x52ad6d) => {
      const { data: _0x44c545 } = _0x52ad6d;
      if (_0x44c545 && "listStart" == _0x44c545["key"]) return null == _0x44c545["newValue"] || 1 == _0x44c545["newValue"] && null == _0x44c545["oldValue"] ? _0xd56774 : void 0;
    }), this["editor"]["model"]["document"]["registerPostFixer"]((_0x4b9ed4) => {
      if (_0x4b9ed4["batch"]["isUndo"]) return false;
      let _0xb5965 = false;
      const _0x2ebeec = _0x43aab9["getSuggestions"]({ "skipNotAttached": true })["filter"]((_0x303643) => {
        const _0x5dd2ef = _0x43aab9["_getAttributeKey"](_0x303643);
        return "listStart" == _0x5dd2ef || "listReversed" == _0x5dd2ef;
      });
      for (const _0x3968e6 of _0x2ebeec) {
        const _0x4ed241 = _0x3968e6["getFirstRange"]()["start"]["nodeAfter"]["getAttribute"]("listType");
        if ("numbered" == _0x4ed241 || "customNumbered" == _0x4ed241) continue;
        _0x43aab9["_findSuggestions"](_0x3968e6["getFirstRange"](), "attribute")["find"]((_0x5b0faa) => "listType" == _0x43aab9["_getAttributeKey"](_0x5b0faa["suggestion"])) || (_0x4b9ed4["removeMarker"](_0x3968e6["getFirstMarker"]()), _0xb5965 = true);
      }
      return _0xb5965;
    }), this["_registerLegacyDescription"]();
  }
  ["handleDescriptions"](_0x273e0a) {
    const _0x471e03 = this["editor"]["locale"], { data: _0x597057 } = _0x273e0a, _0x2071cf = { "type": "format", "content": "" };
    if (!_0x597057 || "listStyle" != _0x597057["key"]) return;
    if (!_0x597057["oldValue"]) return "default" == _0x597057["newValue"] ? _0x2071cf : { "type": "format", "content": "" + o11(_0x471e03, "*Set format:* %0", o11(_0x471e03, this["_getTranslationKeyForListStyle"](_0x597057["newValue"]))) };
    if (!_0x597057["newValue"]) {
      if ("default" == _0x597057["oldValue"]) return _0x2071cf;
      let _0x1ccba4 = _0x273e0a["head"];
      for (; _0x1ccba4; ) {
        if (_0x1ccba4["data"] && "listType" == _0x1ccba4["data"]["key"] && _0x1ccba4["data"]["newValue"]) return _0x2071cf;
        _0x1ccba4 = _0x1ccba4["next"];
      }
      return { "type": "format", "content": "" + o11(_0x471e03, "*Remove format:* %0", o11(_0x471e03, this["_getTranslationKeyForListStyle"](_0x597057["oldValue"]))) };
    }
    if ("default" != _0x597057["newValue"]) return { "type": "format", "content": "" + o11(_0x471e03, "*Set format:* %0", o11(_0x471e03, this["_getTranslationKeyForListStyle"](_0x597057["newValue"]))) };
    let _0x23c365 = _0x273e0a["head"];
    for (; _0x23c365; ) {
      if (_0x23c365["data"] && "listType" == _0x23c365["data"]["key"] && _0x23c365["data"]["newValue"] && _0x23c365["data"]["oldValue"]) return _0x2071cf;
      _0x23c365 = _0x23c365["next"];
    }
    return { "type": "format", "content": o11(_0x471e03, "*Set format:* %0", o11(_0x471e03, "ELEMENT_" + _0x273e0a["getFirstRange"]()["start"]["nodeAfter"]["getAttribute"]("listType")["toUpperCase"]() + "_LIST_DEFAULT")) };
  }
  ["_registerLegacyDescription"]() {
    const _0x227695 = this["editor"], _0x18f594 = _0x227695["locale"];
    _0x227695["plugins"]["get"]("TrackChangesEditing")["descriptionFactory"]["registerDescriptionCallback"]((_0x663274) => {
      if ("formatBlock" != _0x663274["type"]) return;
      const { data: _0x26c2d3 } = _0x663274;
      if (!_0x26c2d3) return;
      let _0x25318c, _0x5674e6;
      switch (_0x26c2d3["commandName"]) {
        case "listStyle":
          _0x25318c = "*Change to:* %0", _0x5674e6 = { "type": "format", "content": o11(_0x18f594, _0x25318c, o11(_0x18f594, this["_getTranslationKeyForListStyle"](_0x26c2d3["commandParams"][0]["type"]))) };
          break;
        case "listReversed":
          _0x25318c = _0x26c2d3["commandParams"][0]["reversed"] ? "*Format:* set order to reversed" : "*Format:* set order to regular", _0x5674e6 = { "type": "format", "content": o11(_0x18f594, _0x25318c) };
          break;
        case "listStart":
          _0x25318c = "*Format:* set start index to %0", _0x5674e6 = { "type": "format", "content": o11(_0x18f594, _0x25318c, _0x26c2d3["commandParams"][0]["startIndex"]) };
      }
      return _0x5674e6;
    });
  }
  ["_getTranslationKeyForListStyle"](_0x1e0fa9) {
    return "ELEMENT_" + function(_0x42736c) {
      if (ye["includes"](_0x42736c)) return "bulleted";
      if (Se["includes"](_0x42736c)) return "numbered";
      return null;
    }(_0x1e0fa9)["toUpperCase"]() + "_LIST_" + _0x1e0fa9["toUpperCase"]()["replace"](/-/g, "_");
  }
};
var ye = ["disc", "circle", "square"];
var Se = ["decimal", "decimal-leading-zero", "lower-roman", "upper-roman", "lower-latin", "upper-latin"];
var Q3 = class extends Plugin {
  static get ["requires"]() {
    return [Enter];
  }
  ["init"]() {
    const _0x3b49d5 = this["editor"], _0x3f014d = _0x3b49d5["plugins"]["get"]("TrackChangesEditing"), _0x2d7f17 = _0x3b49d5["commands"]["get"]("enter");
    _0x3f014d["enableCommand"]("enter", () => {
      _0x3b49d5["model"]["change"]((_0x256f9d) => {
        const _0x3b0418 = _0x3b49d5["model"]["document"]["selection"], _0x2b946b = _0x3b0418["getFirstPosition"](), _0x24f5ad = LiveRange["fromRange"](_0x3b0418["getFirstRange"]());
        if (_0x2d7f17["enterBlock"](_0x256f9d)) {
          const _0x1d5b16 = _0x3b49d5["model"]["createPositionAt"](_0x2b946b["parent"]["nextSibling"], 0), _0x50af8f = _0x256f9d["createRange"](_0x2b946b, _0x1d5b16);
          _0x3f014d["markInsertion"](_0x50af8f);
        } else _0x256f9d["setSelection"](_0x256f9d["createRange"](_0x24f5ad["end"]));
        _0x24f5ad["detach"](), _0x2d7f17["fire"]("afterExecute", { "writer": _0x256f9d });
      });
    }), _0x3b49d5["editing"]["downcastDispatcher"]["on"]("addMarker:suggestion:insertion", _e(_0x3b49d5, "split"), { "priority": "high" }), _0x3b49d5["editing"]["downcastDispatcher"]["on"]("removeMarker:suggestion:insertion", (_0x5b29f5, _0x44aab1, _0x413ccb) => {
      const _0x512d53 = _0x413ccb["mapper"]["markerNameToElements"](_0x44aab1["markerName"]);
      if (_0x512d53) {
        for (const _0x46d4cf of _0x512d53) _0x46d4cf["hasClass"]("ck-suggestion-marker-split") && (_0x413ccb["mapper"]["unbindElementFromMarkerName"](_0x46d4cf, _0x44aab1["markerName"]), _0x413ccb["writer"]["remove"](_0x46d4cf));
      }
    }, { "priority": "high" }), _0x3b49d5["data"]["downcastDispatcher"]["on"]("addMarker:suggestion:insertion", (_0x14099e, _0x464d5e, _0x603616) => {
      _0x603616["options"]["showSuggestionHighlights"] && _e(_0x3b49d5, "split", { "showActiveMarker": false })["bind"](this)(_0x14099e, _0x464d5e, _0x603616);
    }, { "priority": "high" });
  }
};
var X = class extends Plugin {
  ["afterInit"]() {
    if (!this["editor"]["plugins"]["has"]("FindAndReplaceEditing")) return;
    const _0x4b5f40 = this["editor"]["plugins"]["get"]("TrackChangesEditing");
    _0x4b5f40["enableCommand"]("find", this["handleFindCommand"]["bind"](this)), _0x4b5f40["enableCommand"]("findNext"), _0x4b5f40["enableCommand"]("findPrevious"), _0x4b5f40["enableCommand"]("replace"), _0x4b5f40["enableCommand"]("replaceAll");
  }
  ["handleFindCommand"](_0x220d0b, _0xdd3ace, _0x3c4836 = {}) {
    const _0x522b5a = this["editor"]["plugins"]["get"]("FindAndReplaceUtils");
    return _0x220d0b((_0x20d46f) => {
      let _0x1f0b79 = ("string" == typeof _0xdd3ace ? _0x522b5a["findByTextCallback"](_0xdd3ace, _0x3c4836) : _0xdd3ace)(_0x20d46f);
      Array["isArray"](_0x1f0b79) && (_0x1f0b79 = { "results": _0x1f0b79, "searchText": "string" == typeof _0xdd3ace ? _0xdd3ace : "" });
      const _0x116573 = _0x1f0b79["results"]["filter"]((_0x3371cd) => false === this["_isInDeletionRange"](_0x3371cd, _0x20d46f["item"]));
      return { ..._0x1f0b79, "results": _0x116573 };
    }, _0x3c4836);
  }
  ["_isInDeletionRange"](_0x873af7, _0x42384e) {
    const _0xfcfa27 = this["editor"]["model"]["createRange"](this["editor"]["model"]["createPositionAt"](_0x42384e, _0x873af7["start"]), this["editor"]["model"]["createPositionAt"](_0x42384e, _0x873af7["end"]));
    for (const _0x55ae6b of this["editor"]["model"]["markers"]["getMarkersGroup"]("suggestion:deletion")) if (null !== _0xfcfa27["getIntersection"](_0x55ae6b["getRange"]())) return true;
    return false;
  }
};
var ro = [{ "pluginName": "FontSizeEditing", "commandName": "fontSize" }, { "pluginName": "FontFamilyEditing", "commandName": "fontFamily" }, { "pluginName": "FontColorEditing", "commandName": "fontColor" }, { "pluginName": "FontBackgroundColorEditing", "commandName": "fontBackgroundColor" }];
var Y2 = class extends Plugin {
  ["afterInit"]() {
    const _0x1f8df1 = this["editor"]["locale"], _0x30fef7 = this["editor"]["plugins"]["get"]("TrackChangesEditing");
    for (const { pluginName: _0x381919, commandName: _0x565db6 } of ro) this["editor"]["plugins"]["has"](_0x381919) && (_0x30fef7["enableDefaultAttributesIntegration"](_0x565db6), _0x30fef7["registerInlineAttribute"](_0x565db6));
    _0x30fef7["descriptionFactory"]["registerAttributeLabel"]("fontSize", o11(_0x1f8df1, "FORMAT_FONT_SIZE")), _0x30fef7["descriptionFactory"]["registerAttributeLabel"]("fontFamily", o11(_0x1f8df1, "FORMAT_FONT_FAMILY")), _0x30fef7["descriptionFactory"]["registerAttributeLabel"]("fontColor", o11(_0x1f8df1, "FORMAT_FONT_COLOR")), _0x30fef7["descriptionFactory"]["registerAttributeLabel"]("fontBackgroundColor", o11(_0x1f8df1, "FORMAT_FONT_BACKGROUND")), this["_registerLegacyDescription"]();
  }
  ["_registerLegacyDescription"]() {
    const _0x96e7ac = this["editor"], _0x4261cb = _0x96e7ac["locale"];
    _0x96e7ac["plugins"]["get"]("TrackChangesEditing")["descriptionFactory"]["registerDescriptionCallback"]((_0x3c3e94) => {
      const _0x2b5278 = _0x4261cb["t"];
      if ("formatInline" != _0x3c3e94["type"]) return;
      const { data: _0x34f863 } = _0x3c3e94;
      if (null != _0x34f863) {
        if ("fontSize" == _0x34f863["commandName"]) {
          const _0x49b82a = _0x34f863["commandParams"][0]["value"];
          if (_0x49b82a) {
            const _0x542ff6 = _0x2b5278(this["editor"]["plugins"]["get"]("FontSize")["normalizeSizeOptions"](this["editor"]["config"]["get"]("fontSize.options"))["find"]((_0x5b358d) => _0x5b358d["model"] == _0x49b82a)["title"])["toLowerCase"]();
            return { "type": "format", "content": o11(_0x4261cb, "*Set font size:* %0", _0x542ff6) };
          }
          return { "type": "format", "content": o11(_0x4261cb, "*Reset font size*") };
        }
        if ("fontFamily" == _0x34f863["commandName"]) {
          const _0x30a89e = _0x34f863["commandParams"][0]["value"];
          return _0x30a89e ? { "type": "format", "content": o11(_0x4261cb, "*Set font family:* %0", _0x30a89e) } : { "type": "format", "content": o11(_0x4261cb, "*Reset font family*") };
        }
        if ("fontColor" == _0x34f863["commandName"]) {
          const _0xf62a65 = _0x34f863["commandParams"][0]["value"];
          if (_0xf62a65) {
            const _0x2eb855 = normalizeColorOptions(this["editor"]["config"]["get"]("fontColor.colors"))["find"]((_0x501dad) => _0x501dad["model"] == _0xf62a65);
            let _0x216892 = _0xf62a65, _0x517d09 = "";
            return _0x2eb855 && (_0x216892 = _0x2eb855["label"], _0x517d09 = _0x2b5278(_0x216892)["toLowerCase"]()), { "type": "format", "content": o11(_0x4261cb, "*Set font color:* %0", _0x517d09)["trim"](), "color": { "value": _0xf62a65, "title": _0x517d09 || _0x216892 } };
          }
          return { "type": "format", "content": o11(_0x4261cb, "*Reset font color*") };
        }
        if ("fontBackgroundColor" == _0x34f863["commandName"]) {
          const _0x12119e = _0x34f863["commandParams"][0]["value"];
          if (_0x12119e) {
            const _0x167af7 = normalizeColorOptions(this["editor"]["config"]["get"]("fontBackgroundColor.colors"))["find"]((_0x38a1d1) => _0x38a1d1["model"] == _0x12119e);
            let _0x13b41f = _0x12119e, _0x3a39a0 = "";
            return _0x167af7 && (_0x13b41f = _0x167af7["label"], _0x3a39a0 = _0x2b5278(_0x13b41f)["toLowerCase"]()), { "type": "format", "content": o11(_0x4261cb, "*Set font background color:* %0", _0x3a39a0)["trim"](), "color": { "value": _0x12119e, "title": _0x3a39a0 || _0x13b41f } };
          }
          return { "type": "format", "content": o11(_0x4261cb, "*Reset font background color*") };
        }
      }
    });
  }
};
var Z5 = class extends Plugin {
  ["afterInit"]() {
    const _0x3459b4 = this["editor"], _0xe6861 = _0x3459b4["plugins"]["get"]("TrackChangesEditing"), _0x4da095 = _0x3459b4["commands"]["get"]("copyFormat"), _0x11a559 = _0x3459b4["commands"]["get"]("pasteFormat");
    _0x4da095 && _0x11a559 && (_0xe6861["enableDefaultAttributesIntegration"]("pasteFormat"), _0xe6861["enableCommand"]("copyFormat"), this["_registerLegacyDescription"]());
  }
  ["_registerLegacyDescription"]() {
    const _0x413b60 = this["editor"], _0x557d40 = _0x413b60["locale"];
    _0x413b60["plugins"]["get"]("TrackChangesEditing")["descriptionFactory"]["registerDescriptionCallback"]((_0x542296) => {
      if ("formatBlock" != _0x542296["type"] && "formatInline" != _0x542296["type"]) return;
      const { data: _0x3f884e } = _0x542296;
      if (_0x3f884e && "pasteFormat" === _0x3f884e["commandName"]) {
        const _0x41a659 = [], _0x27c9cb = _0x3f884e["commandParams"][0];
        for (const [_0x16e625, _0x3d0477] of Object["entries"](_0x27c9cb)) _0x41a659["push"](so(_0x413b60, _0x16e625, _0x3d0477));
        return _0x41a659["length"] ? { "type": "format", "content": o11(_0x557d40, "*Set format to:* %0", _0x41a659["join"](", ")) } : { "type": "format", "content": o11(_0x557d40, "*Remove all formatting*") };
      }
    });
  }
};
function so(_0x1a8235, _0x216c95, _0x2e7845) {
  const _0xe6f113 = _0x1a8235["locale"]["t"], _0x34f837 = _0x216c95["split"](/(?=[A-Z])/)["join"](" "), _0x64e5e4 = _0xe6f113(_0x34f837["charAt"](0)["toUpperCase"]() + _0x34f837["slice"](1))["toLowerCase"]();
  if ("boolean" == typeof _0x2e7845) return _0x64e5e4;
  if ("fontColor" === _0x216c95 || "fontBackgroundColor" === _0x216c95) {
    const _0x4e0543 = normalizeColorOptions(_0x1a8235["config"]["get"]("fontColor.colors"))["find"]((_0x126446) => _0x126446["model"] == _0x2e7845);
    return _0x64e5e4 + " (" + (_0x4e0543 ? _0xe6f113(_0x4e0543["label"])["toLowerCase"]() : _0x2e7845) + ")";
  }
  if ("fontSize" === _0x216c95 && isNaN(parseFloat(_0x2e7845))) {
    const _0x210964 = _0x1a8235["plugins"]["get"]("FontSize")["normalizeSizeOptions"](_0x1a8235["config"]["get"]("fontSize.options"))["find"]((_0x55bc71) => _0x55bc71["model"] == _0x2e7845);
    return _0x64e5e4 + " (" + (_0x210964 ? _0xe6f113(_0x210964["title"])["toLowerCase"]() : _0x2e7845) + ")";
  }
  return _0x64e5e4 + " (" + _0x2e7845 + ")";
}
var tt4 = class extends Plugin {
  constructor() {
    super(...arguments);
    __publicField(this, "_headingOptions");
  }
  ["afterInit"]() {
    const _0x129d26 = this["editor"];
    if (!_0x129d26["plugins"]["has"]("HeadingEditing")) return;
    this["_headingOptions"] = _0x129d26["config"]["get"]("heading.options");
    const _0x22e9b4 = _0x129d26["locale"], _0x4d8371 = _0x129d26["plugins"]["get"]("TrackChangesEditing");
    _0x4d8371["enableDefaultAttributesIntegration"]("heading");
    for (const _0x23e864 of this["_headingOptions"]) "paragraph" != _0x23e864["model"] && _0x4d8371["descriptionFactory"]["registerElementLabel"](_0x23e864["model"], (_0x25c897) => {
      const _0x2a2b9d = this["_getHeadingLevel"](_0x23e864["model"]);
      return null !== _0x2a2b9d ? _0xd5d927(_0x25c897, _0x2a2b9d) : _0x3c7c30(_0x25c897, _0x23e864["title"]);
    });
    function _0xd5d927(_0x509d59, _0x4cfbba) {
      return o11(_0x22e9b4, "ELEMENT_HEADING", [_0x509d59, _0x4cfbba]);
    }
    function _0x3c7c30(_0x2b4c8d, _0x52bff5) {
      return o11(_0x22e9b4, "ELEMENT_HEADING_CUSTOM", [_0x2b4c8d, _0x52bff5]);
    }
    this["_registerLegacyDescription"]();
  }
  ["_registerLegacyDescription"]() {
    const _0x3a35d5 = this["editor"], _0x2feeca = _0x3a35d5["locale"];
    function _0x12084b(_0x516413, _0x2e3bea) {
      return o11(_0x2feeca, "ELEMENT_HEADING_CUSTOM", [_0x516413, _0x2e3bea]);
    }
    _0x3a35d5["plugins"]["get"]("TrackChangesEditing")["descriptionFactory"]["registerDescriptionCallback"]((_0x56ca00) => {
      if ("formatBlock" != _0x56ca00["type"]) return;
      const { data: _0x5ecdf1 } = _0x56ca00;
      if (_0x5ecdf1 && "heading" == _0x5ecdf1["commandName"]) {
        const _0x301c68 = _0x5ecdf1["commandParams"][0]["value"], _0x388934 = this["_getHeadingLevel"](_0x301c68);
        if (null !== _0x388934) return { "type": "format", "content": o11(_0x2feeca, "*Change to:* %0", (_0x372f74 = 1, _0x28f268 = _0x388934, o11(_0x2feeca, "ELEMENT_HEADING", [_0x372f74, _0x28f268]))) };
        const _0x3246de = this["_headingOptions"]["find"]((_0x3c834f) => _0x3c834f["model"] === _0x301c68)["title"];
        return { "type": "format", "content": o11(_0x2feeca, "*Change to:* %0", _0x12084b(1, _0x3246de)) };
      }
      var _0x372f74, _0x28f268;
    });
  }
  ["_getHeadingLevel"](_0x140b12) {
    var _a5;
    const _0x216b59 = _0x140b12["match"](/^heading(\d+)/);
    if (_0x216b59) return _0x216b59[1];
    const _0xe7cf40 = (_a5 = this["_headingOptions"]) == null ? void 0 : _a5["find"]((_0x1cd6db) => _0x1cd6db["model"] == _0x140b12);
    if (_0xe7cf40 && _0xe7cf40["view"]) {
      const _0x509afc = _0xe7cf40["view"], _0x22c4d7 = (_0x509afc["name"] ?? _0x509afc)["match"](/^h(\d+)/);
      if (_0x22c4d7) return _0x22c4d7[1];
    }
    return null;
  }
};
var et3 = class extends Plugin {
  ["afterInit"]() {
    const _0x516d5e = this["editor"];
    if (!_0x516d5e["plugins"]["has"]("HighlightEditing")) return;
    const _0x49b19e = _0x516d5e["plugins"]["get"]("TrackChangesEditing"), _0x5caa99 = _0x516d5e["locale"];
    _0x49b19e["enableDefaultAttributesIntegration"]("highlight"), _0x49b19e["registerInlineAttribute"]("highlight"), _0x49b19e["descriptionFactory"]["registerAttributeLabel"]("highlight", o11(_0x5caa99, "FORMAT_HIGHLIGHT")), this["_registerLegacyDescription"]();
  }
  ["_registerLegacyDescription"]() {
    const _0x25aa9c = this["editor"], _0x36bfdf = _0x25aa9c["locale"];
    _0x25aa9c["plugins"]["get"]("TrackChangesEditing")["descriptionFactory"]["registerDescriptionCallback"]((_0x120b65) => {
      if ("formatInline" != _0x120b65["type"]) return;
      const { data: _0x1efc4a } = _0x120b65;
      if (_0x1efc4a && "highlight" == _0x1efc4a["commandName"]) {
        const _0x13d02a = _0x36bfdf["t"], _0x400b9e = _0x1efc4a["commandParams"][0]["value"];
        if (_0x400b9e) {
          const _0x4cf1f8 = _0x25aa9c["config"]["get"]("highlight.options")["find"]((_0x31d0ce) => _0x31d0ce["model"] == _0x400b9e), _0x58a59d = _0x13d02a(_0x4cf1f8["title"])["toLowerCase"]();
          return { "type": "format", "content": o11(_0x36bfdf, "*Set highlight:* %0", _0x58a59d), "color": { "value": _0x4cf1f8["color"], "title": _0x4cf1f8["title"] } };
        }
        return { "type": "format", "content": o11(_0x36bfdf, "*Remove highlight*", o11(_0x36bfdf, "FORMAT_HIGHLIGHT")) };
      }
    });
  }
};
var it = class extends Plugin {
  ["afterInit"]() {
    const _0x44a17e = this["editor"];
    if (!_0x44a17e["plugins"]["has"]("HorizontalLineEditing")) return;
    _0x44a17e["plugins"]["get"]("TrackChangesEditing")["enableCommand"]("horizontalLine");
    const _0x797ac6 = _0x44a17e["plugins"]["get"]("TrackChangesEditing"), _0x112f6e = _0x44a17e["locale"];
    _0x797ac6["descriptionFactory"]["registerElementLabel"]("horizontalLine", (_0x413117) => o11(_0x112f6e, "ELEMENT_HORIZONTAL_LINE", _0x413117)), _0x44a17e["conversion"]["for"]("dataDowncast")["elementToStructure"]({ "model": "horizontalLine", "view": (_0x1f7431, { writer: _0x365dd5, options: _0x40f7e0 }) => {
      if (!_0x40f7e0["showSuggestionHighlights"]) return null;
      const _0x5d5b0e = _0x365dd5["createContainerElement"]("div"), _0x391895 = _0x365dd5["createEmptyElement"]("hr");
      return _0x365dd5["addClass"]("ck-horizontal-line", _0x5d5b0e), _0x365dd5["insert"](_0x365dd5["createPositionAt"](_0x5d5b0e, 0), _0x391895), _0x5d5b0e;
    }, "converterPriority": "high" });
  }
};
var st3 = class extends Plugin {
  ["afterInit"]() {
    const _0x25d1b2 = this["editor"];
    if (!_0x25d1b2["plugins"]["has"]("HtmlEmbed")) return;
    const _0x114fd8 = _0x25d1b2["plugins"]["get"]("TrackChangesEditing"), _0x2f20ef = _0x25d1b2["locale"];
    _0x114fd8["descriptionFactory"]["registerElementLabel"]("rawHtml", (_0xac9828) => o11(_0x2f20ef, "ELEMENT_HTML_EMBED", _0xac9828)), _0x114fd8["enableDefaultAttributesIntegration"]("htmlEmbed"), _0x114fd8["registerBlockAttribute"]("value"), _0x114fd8["descriptionFactory"]["registerDescriptionCallback"]((_0x4d9ef4) => {
      if ("attribute" != _0x4d9ef4["type"]) return;
      const { data: _0x5a58b5 } = _0x4d9ef4;
      if (_0x5a58b5 && "value" == _0x5a58b5["key"] && _0x4d9ef4["getFirstRange"]()["start"]["nodeAfter"]["is"]("element", "rawHtml")) {
        const _0x26c069 = o11(_0x2f20ef, "ELEMENT_HTML_EMBED");
        return { "type": "format", "content": o11(_0x2f20ef, "*Change %0 content*", _0x26c069) };
      }
    }), this["_registerLegacyDescription"]();
  }
  ["_registerLegacyDescription"]() {
    const _0x1e5023 = this["editor"], _0x3b011f = _0x1e5023["locale"];
    _0x1e5023["plugins"]["get"]("TrackChangesEditing")["descriptionFactory"]["registerDescriptionCallback"]((_0xbe2da4) => {
      if ("formatBlock" != _0xbe2da4["type"]) return;
      const { data: _0x38da42 } = _0xbe2da4;
      if (_0x38da42 && "htmlEmbed" == _0x38da42["commandName"]) {
        const _0x463c81 = o11(_0x3b011f, "ELEMENT_HTML_EMBED");
        return { "type": "format", "content": o11(_0x3b011f, "*Change %0 content*", _0x463c81) };
      }
    });
  }
};
var nt3 = class extends Plugin {
  ["afterInit"]() {
    const _0x9d25f3 = this["editor"];
    if (!_0x9d25f3["plugins"]["has"]("ImageEditing")) return;
    const _0x1a2751 = _0x9d25f3["plugins"]["get"]("TrackChangesEditing"), _0x25fef3 = _0x9d25f3["plugins"]["get"]("ImageUtils"), _0x25547d = _0x9d25f3["locale"];
    _0x1a2751["enableCommand"]("insertImage"), _0x1a2751["descriptionFactory"]["registerElementLabel"]("imageBlock", (_0x335ee3) => o11(_0x25547d, "ELEMENT_IMAGE", _0x335ee3)), _0x1a2751["descriptionFactory"]["registerElementLabel"]("imageInline", (_0x9f539d) => o11(_0x25547d, "ELEMENT_INLINE_IMAGE", _0x9f539d)), _0x1a2751["descriptionFactory"]["registerElementLabel"]("caption", () => o11(_0x25547d, "ELEMENT_CAPTION")), _0x9d25f3["plugins"]["has"]("ImageUploadEditing") && _0x1a2751["enableCommand"]("uploadImage"), _0x9d25f3["plugins"]["has"]("ImageBlockEditing") && _0x9d25f3["plugins"]["has"]("ImageInlineEditing") && (_0x1a2751["enableCommand"]("imageTypeInline", (_0x5d5d73, _0x59fe25) => {
      const _0x31d990 = _0x25fef3["getClosestSelectedImageElement"](_0x9d25f3["model"]["document"]["selection"]);
      _0x9d25f3["model"]["change"](() => {
        _0x1a2751["markBlockFormat"](_0x31d990, { "commandName": "imageTypeInline", "commandParams": [_0x59fe25] }, [], "convertBlockImageToInline");
      });
    }), _0x1a2751["enableCommand"]("imageTypeBlock", (_0x43caa4, _0x32bc93) => {
      _0x9d25f3["model"]["change"]((_0x457c90) => {
        let _0x42b001 = _0x25fef3["getClosestSelectedImageElement"](_0x9d25f3["model"]["document"]["selection"]), _0x43cb72 = _0x457c90["createRangeOn"](_0x42b001);
        const _0x232555 = LivePosition["fromPosition"](_0x43cb72["start"], "toPrevious"), _0x30aae3 = LivePosition["fromPosition"](_0x43cb72["end"], "toNext");
        _0x1a2751["forceDefaultExecution"](() => _0x43caa4(_0x32bc93)), _0x42b001 = _0x25fef3["getClosestSelectedImageElement"](_0x9d25f3["model"]["document"]["selection"]), _0x43cb72 = _0x457c90["createRangeOn"](_0x42b001);
        const _0x5364ca = _0x457c90["createRange"](_0x232555, _0x30aae3);
        _0x232555["detach"](), _0x30aae3["detach"](), _0x1a2751["markBlockFormat"](_0x42b001, { "commandName": "imageTypeInline", "commandParams": [_0x32bc93] }, [], "convertInlineImageToBlock"), _0x5364ca["start"]["isBefore"](_0x43cb72["start"]) && _0x1a2751["markInsertion"](_0x457c90["createRange"](_0x5364ca["start"], _0x43cb72["start"]), "convertInlineImageToBlock"), _0x43cb72["end"]["isBefore"](_0x5364ca["end"]) && _0x1a2751["markInsertion"](_0x457c90["createRange"](_0x43cb72["end"], _0x5364ca["end"]), "convertInlineImageToBlock");
      });
    }), _0x1a2751["_suggestionFactory"]["registerCustomCallback"]("formatBlock", "convertInlineImageToBlock", "join", () => false), _0x1a2751["_suggestionFactory"]["registerCustomCallback"]("formatBlock", "convertInlineImageToBlock", "accept", () => false), _0x1a2751["_suggestionFactory"]["registerCustomCallback"]("formatBlock", "convertInlineImageToBlock", "discard", _0x1a2751["_suggestionFactory"]["getSuggestionCallback"]("formatBlock", "", "accept")), _0x1a2751["_suggestionFactory"]["registerCustomCallback"]("insertion", "convertInlineImageToBlock", "join", () => false), _0x1a2751["_suggestionFactory"]["registerCustomCallback"]("insertion", "convertInlineImageToBlock", "discard", ([_0x1d6e74]) => {
      const _0x34b0d5 = _0x1a2751["_suggestionFactory"]["getSuggestionCallback"]("insertion", "", "discard");
      let _0x245835 = _0x1d6e74["start"], _0x3031a5 = _0x1d6e74["end"];
      const _0x50e4aa = _0x9d25f3["model"]["schema"]["getNearestSelectionRange"](_0x245835, "backward"), _0x912f80 = _0x9d25f3["model"]["schema"]["getNearestSelectionRange"](_0x3031a5, "forward");
      _0x50e4aa["isCollapsed"] && (_0x245835 = _0x50e4aa["start"]), _0x912f80["isCollapsed"] && (_0x3031a5 = _0x912f80["end"]), _0x34b0d5([_0x9d25f3["model"]["createRange"](_0x245835, _0x3031a5)]);
    }), _0x1a2751["_suggestionFactory"]["registerCustomCallback"]("formatBlock", "convertInlineImageToBlock", "chain", _0x2349a8), _0x1a2751["_suggestionFactory"]["registerCustomCallback"]("insertion", "convertInlineImageToBlock", "chain", _0x2349a8)), _0x9d25f3["plugins"]["has"]("ImageCaptionEditing") && (_0x1a2751["enableCommand"]("toggleImageCaption", (_0x5824f7, _0x3f46a0) => {
      const _0x36fad7 = _0x9d25f3["plugins"]["get"]("ImageCaptionUtils");
      let _0x1d90a8 = _0x25fef3["getClosestSelectedImageElement"](_0x9d25f3["model"]["document"]["selection"]), _0x328882 = _0x36fad7["getCaptionFromImageModelElement"](_0x1d90a8);
      _0x9d25f3["model"]["change"](() => {
        if (_0x328882) return void _0x1a2751["markDeletion"](_0x9d25f3["model"]["createRangeOn"](_0x328882));
        const _0x5553c8 = _0x25fef3["isBlockImage"](_0x1d90a8);
        _0x5824f7(_0x3f46a0), _0x1d90a8 = _0x25fef3["getClosestSelectedImageElement"](_0x9d25f3["model"]["document"]["selection"]), _0x328882 = _0x36fad7["getCaptionFromImageModelElement"](_0x1d90a8), _0x1a2751["markInsertion"](_0x9d25f3["model"]["createRangeOn"](_0x328882), _0x5553c8 ? null : "imageCaption");
      });
    }), _0x1a2751["_suggestionFactory"]["registerCustomCallback"]("insertion", "imageCaption", "chain", _0x2349a8));
    const _0x47eb8d = [{ "type": "formatBlock", "subType": "imageStylePreApply" }, { "type": "insertion", "subType": "imageCaption" }, { "type": "formatBlock", "subType": "convertInlineImageToBlock" }, { "type": "insertion", "subType": "convertInlineImageToBlock" }];
    function _0x1544f1(_0x59cac1, _0x44975a) {
      const _0x153107 = _0x47eb8d["findIndex"](({ type: _0x3c1ae0, subType: _0x1b6d21 }) => _0x59cac1["type"] == _0x3c1ae0 && _0x59cac1["subType"] == _0x1b6d21), _0x56ffbf = _0x47eb8d["findIndex"](({ type: _0x28ee51, subType: _0x239a0e }) => _0x44975a["type"] == _0x28ee51 && _0x44975a["subType"] == _0x239a0e);
      if (_0x153107 < 0 || _0x56ffbf < 0) return false;
      const _0x3f59a9 = _0x59cac1["getFirstRange"](), _0x440c60 = _0x44975a["getFirstRange"]();
      if ((0 == _0x153107 || 1 == _0x153107) && 2 == _0x56ffbf && _0x3f59a9["isIntersecting"](_0x440c60)) return true;
      if (2 == _0x153107 && 3 == _0x56ffbf) {
        const _0x56be25 = _0x1a2751["_findSuggestions"](_0x3f59a9, "insertion")["filter"](({ suggestion: _0x2367d1, meta: _0x344378 }) => _0x344378["isOwn"] && "convertInlineImageToBlock" == _0x2367d1["subType"]);
        if (_0x56be25["length"] > 1 && _0x440c60["end"]["isEqual"](_0x3f59a9["start"])) return true;
        if (1 == _0x56be25["length"] && (_0x3f59a9["start"]["isEqual"](_0x440c60["end"]) || _0x3f59a9["end"]["isEqual"](_0x440c60["start"]))) return true;
      }
      if (3 == _0x153107 && 3 == _0x56ffbf && _0x3f59a9["start"]["isBefore"](_0x440c60["start"])) {
        const _0x40f671 = _0x3f59a9["end"]["nodeAfter"], _0x5ba04b = _0x440c60["start"]["nodeBefore"];
        return _0x25fef3["isBlockImage"](_0x40f671) && _0x40f671 === _0x5ba04b;
      }
      return false;
    }
    function _0x2349a8(_0xecd819, _0x1cb52a) {
      return _0x1544f1(_0xecd819, _0x1cb52a) ? [_0xecd819, _0x1cb52a] : _0x1544f1(_0x1cb52a, _0xecd819) ? [_0x1cb52a, _0xecd819] : null;
    }
    _0x9d25f3["plugins"]["has"]("ImageResize") && (_0x1a2751["enableDefaultAttributesIntegration"]("resizeImage"), _0x1a2751["registerBlockAttribute"]("resizedWidth"), _0x1a2751["descriptionFactory"]["registerAttributeLabel"]("resizedWidth", o11(_0x25547d, "FORMAT_IMAGE_SIZE"))), _0x9d25f3["plugins"]["has"]("ImageTextAlternativeEditing") && (_0x1a2751["enableDefaultAttributesIntegration"]("imageTextAlternative"), _0x1a2751["registerBlockAttribute"]("alt")), _0x1a2751["descriptionFactory"]["registerDescriptionCallback"]((_0x372aef) => {
      if (!!_0x47eb8d["find"](({ type: _0x4f7168, subType: _0x450dd7 }) => _0x372aef["type"] == _0x4f7168 && _0x372aef["subType"] == _0x450dd7)) return _0x372aef["previous"] ? {} : void 0;
    }), _0x1a2751["descriptionFactory"]["registerDescriptionCallback"]((_0x4a3075) => {
      if ("insertion" == _0x4a3075["type"] || "deletion" == _0x4a3075["type"]) {
        const _0x27d1e1 = _0x4a3075["getContainedElement"]();
        if (_0x27d1e1 && _0x27d1e1["is"]("element", "caption")) return { "type": "insertion" == _0x4a3075["type"] ? "addObject" : "removeObject", "element": _0x27d1e1, "quantity": 1 };
      }
    }), _0x1a2751["descriptionFactory"]["registerDescriptionCallback"]((_0x2019a5) => "formatBlock" == _0x2019a5["type"] && "convertInlineImageToBlock" == _0x2019a5["subType"] ? { "type": "format", "content": "Inline image to block image" } : "formatBlock" == _0x2019a5["type"] && "convertBlockImageToInline" == _0x2019a5["subType"] ? { "type": "format", "content": "Block image to inline image" } : void 0), _0x1a2751["descriptionFactory"]["registerDescriptionCallback"]((_0x52ab5e) => {
      if ("attribute" != _0x52ab5e["type"]) return;
      const { data: _0x471ba4 } = _0x52ab5e;
      if (!_0x471ba4 || "alt" != _0x471ba4["key"]) return;
      const _0x3944ae = _0x471ba4["newValue"];
      return _0x3944ae ? { "type": "format", "content": o11(_0x25547d, "*Set image text alternative:* %0", '"' + _0x3944ae + '"') } : { "type": "format", "content": o11(_0x25547d, "*Remove image text alternative*") };
    }), this["_registerLegacyDescription"]();
  }
  ["_registerLegacyDescription"]() {
    const _0x2aaa6b = this["editor"], _0x4b3bda = _0x2aaa6b["locale"];
    _0x2aaa6b["plugins"]["get"]("TrackChangesEditing")["descriptionFactory"]["registerDescriptionCallback"]((_0x558a77) => {
      if ("formatBlock" != _0x558a77["type"] && "formatInline" != _0x558a77["type"]) return;
      const { data: _0x20bc18 } = _0x558a77;
      if (_0x20bc18) {
        if ("imageTextAlternative" == _0x20bc18["commandName"]) {
          const _0x17549e = _0x20bc18["commandParams"][0]["newValue"];
          return _0x17549e ? { "type": "format", "content": o11(_0x4b3bda, "*Set image text alternative:* %0", '"' + _0x17549e + '"') } : { "type": "format", "content": o11(_0x4b3bda, "*Remove image text alternative*") };
        }
        if ("resizeImage" == _0x20bc18["commandName"]) {
          const _0x25c2a7 = _0x20bc18["commandParams"][0]["width"];
          return _0x25c2a7 ? { "type": "format", "content": o11(_0x4b3bda, "*Set image width:* %0", _0x25c2a7) } : { "type": "format", "content": o11(_0x4b3bda, "*Reset image width*") };
        }
      }
    });
  }
};
var ot3 = class extends Plugin {
  ["afterInit"]() {
    if (!this["editor"]["plugins"]["has"]("ImageEditing")) return;
    const _0x41428f = this["editor"]["locale"], _0x2563e7 = this["editor"]["plugins"]["get"]("TrackChangesEditing");
    _0x2563e7["enableDefaultAttributesIntegration"]("replaceImageSource"), _0x2563e7["registerBlockAttribute"]("src"), _0x2563e7["descriptionFactory"]["registerDescriptionCallback"]((_0x31b44c) => {
      if ("attribute" != _0x31b44c["type"]) return;
      const { data: _0x1e458e } = _0x31b44c;
      return _0x1e458e && "src" == _0x1e458e["key"] ? _0x1e458e["newValue"] && _0x1e458e["oldValue"] ? { "type": "format", "content": o11(_0x41428f, "*Replace image URL*") } : { "type": "format", "content": "" } : void 0;
    }), this["_handleLegacySuggestions"]();
  }
  ["_handleLegacySuggestions"]() {
    const _0x251de4 = this["editor"]["plugins"]["get"]("TrackChangesEditing");
    _0x251de4["_suggestionFactory"]["registerCustomCallback"]("formatBlock", "replaceImageSource", "accept", _0x251de4["_suggestionFactory"]["getSuggestionCallback"]("formatBlock", null, "discard")), _0x251de4["_suggestionFactory"]["registerCustomCallback"]("formatBlock", "replaceImageSource", "discard", _0x251de4["_suggestionFactory"]["getSuggestionCallback"]("formatBlock", null, "accept")), this["_registerLegacyDescription"]();
  }
  ["_registerLegacyDescription"]() {
    const _0x1fa860 = this["editor"], _0x2ec1d3 = _0x1fa860["locale"];
    _0x1fa860["plugins"]["get"]("TrackChangesEditing")["descriptionFactory"]["registerDescriptionCallback"]((_0x26d9c5) => {
      if ("formatBlock" != _0x26d9c5["type"] && "formatInline" != _0x26d9c5["type"]) return;
      const { data: _0x5681fc } = _0x26d9c5;
      if (!_0x5681fc || "replaceImageSource" != _0x5681fc["commandName"]) return;
      return { "type": "format", "content": o11(_0x2ec1d3, "*Format:* replace image URL") };
    });
  }
};
var rt2 = class extends Plugin {
  ["afterInit"]() {
    const _0x5a1c67 = this["editor"];
    if (!_0x5a1c67["plugins"]["has"]("ImageStyleEditing")) return;
    const _0x1a335f = _0x5a1c67["plugins"]["get"]("TrackChangesEditing"), _0x17a930 = _0x5a1c67["plugins"]["get"]("ImageUtils"), _0x13e870 = {};
    _0x1a335f["enableCommand"]("imageStyle", (_0x225a8a, _0x332b15) => {
      const _0xc41231 = _0x5a1c67["plugins"]["get"]("Users")["me"], _0x5be971 = _0x5a1c67["commands"]["get"]("imageStyle");
      let _0x1f5fcc = _0x17a930["getClosestSelectedImageElement"](_0x5a1c67["model"]["document"]["selection"]), _0x5c0da3 = _0x5a1c67["model"]["createRangeOn"](_0x1f5fcc), _0x44f9bb = _0x5be971["value"];
      if (_0x44f9bb == _0x332b15["value"]) return;
      const _0x55ec92 = { "commandName": "imageStyle", "commandParams": [_0x332b15], "formatGroupId": uid() };
      _0x5a1c67["model"]["change"](() => {
        if (_0x1a335f["getSuggestions"]()["filter"]((_0x5309cd) => _0x5309cd["isInContent"] && _0xc41231 == _0x5309cd["author"] && ("formatBlock" == _0x5309cd["type"] || "formatInline" == _0x5309cd["type"]) && ("imageStylePreApply" == _0x5309cd["subType"] || "imageStylePostApply" == _0x5309cd["subType"]) && _0x5309cd["getFirstRange"]()["isEqual"](_0x5c0da3))["forEach"]((_0x9a11c6) => _0x1a335f["discardSuggestion"](_0x9a11c6["head"])), _0x1f5fcc = _0x17a930["getClosestSelectedImageElement"](_0x5a1c67["model"]["document"]["selection"]), _0x5c0da3 = _0x5a1c67["model"]["createRangeOn"](_0x1f5fcc), _0x5be971["refresh"](), _0x5a1c67["commands"]["get"]("imageTypeInline")["refresh"](), _0x5a1c67["commands"]["get"]("imageTypeBlock")["refresh"](), _0x44f9bb = _0x5be971["value"], _0x44f9bb != _0x332b15["value"]) return _0x17a930["isInlineImage"](_0x1f5fcc) && _0x5be971["shouldConvertImageType"](_0x332b15["value"], _0x1f5fcc) ? (_0x225a8a({ ..._0x332b15, "setImageSizes": false }), _0x1f5fcc = _0x17a930["getClosestSelectedImageElement"](_0x5a1c67["model"]["document"]["selection"]), void _0x1a335f["markBlockFormat"](_0x1f5fcc, { ..._0x55ec92, "commandReversedParams": [{ "value": _0x44f9bb || null, "setImageSizes": false }] }, [], "imageStylePreApply")) : void (_0x17a930["isBlockImage"](_0x1f5fcc) ? _0x1a335f["markBlockFormat"](_0x1f5fcc, _0x55ec92, [], "imageStylePostApply") : _0x1a335f["markInlineFormat"](_0x5c0da3, _0x55ec92, "imageStylePostApply"));
      });
    });
    for (const _0x2f0a1a of _0x5a1c67["plugins"]["get"]("ImageStyleEditing")["normalizedStyles"]) _0x13e870[_0x2f0a1a["name"]] = _0x2f0a1a["title"]["toLowerCase"]();
    _0x1a335f["_suggestionFactory"]["registerCustomCallback"]("formatBlock", "imageStylePreApply", "join", () => false), _0x1a335f["_suggestionFactory"]["registerCustomCallback"]("formatBlock", "imageStylePostApply", "join", () => false), _0x1a335f["_suggestionFactory"]["registerCustomCallback"]("formatInline", "imageStylePostApply", "join", () => false), _0x1a335f["_suggestionFactory"]["registerCustomCallback"]("formatBlock", "imageStylePreApply", "accept", ([_0x1f9846]) => {
      _0x17a930["setImageNaturalSizeAttributes"](_0x1f9846["getContainedElement"]());
    }), _0x1a335f["_suggestionFactory"]["registerCustomCallback"]("formatBlock", "imageStylePreApply", "discard", (_0x81d96b, _0x4f2f18) => {
      _0x1a335f["_suggestionFactory"]["getSuggestionCallback"]("formatBlock", "", "accept")(_0x81d96b, { "commandName": _0x4f2f18["commandName"], "commandParams": _0x4f2f18["commandReversedParams"] });
    }), _0x1a335f["_suggestionFactory"]["registerCustomCallback"]("formatBlock", "imageStylePreApply", "chain", function(_0x3fe29c, _0xbe6264) {
      if (_0x39b70f(_0x3fe29c, _0xbe6264)) return [_0x3fe29c, _0xbe6264];
      if (_0x39b70f(_0xbe6264, _0x3fe29c)) return [_0xbe6264, _0x3fe29c];
      return null;
    });
    const _0x59934e = [{ "type": "formatBlock", "subType": "imageStylePreApply" }, { "type": "insertion", "subType": "imageCaption" }, { "type": "formatBlock", "subType": "convertInlineImageToBlock" }, { "type": "insertion", "subType": "convertInlineImageToBlock" }];
    function _0x39b70f(_0x45ebd6, _0x2cd8c5) {
      const _0xa906f1 = _0x59934e["findIndex"](({ type: _0x90701f, subType: _0x109103 }) => _0x45ebd6["type"] == _0x90701f && _0x45ebd6["subType"] == _0x109103), _0xb4b5d3 = _0x59934e["findIndex"](({ type: _0x182e29, subType: _0x539282 }) => _0x2cd8c5["type"] == _0x182e29 && _0x2cd8c5["subType"] == _0x539282);
      if (_0xa906f1 < 0 || _0xb4b5d3 < 0) return false;
      const _0x3452c7 = _0x45ebd6["getFirstRange"](), _0x58d362 = _0x2cd8c5["getFirstRange"]();
      if ((0 == _0xa906f1 || 1 == _0xa906f1) && 2 == _0xb4b5d3 && _0x3452c7["isIntersecting"](_0x58d362)) return true;
      if (2 == _0xa906f1 && 3 == _0xb4b5d3) {
        const _0x210f8c = _0x1a335f["_findSuggestions"](_0x3452c7, "insertion")["filter"](({ suggestion: _0x565ad5, meta: _0xbd4e16 }) => _0xbd4e16["isOwn"] && "convertInlineImageToBlock" == _0x565ad5["subType"]);
        if (_0x210f8c["length"] > 1 && _0x58d362["end"]["isEqual"](_0x3452c7["start"])) return true;
        if (1 == _0x210f8c["length"] && (_0x3452c7["start"]["isEqual"](_0x58d362["end"]) || _0x3452c7["end"]["isEqual"](_0x58d362["start"]))) return true;
      }
      if (3 == _0xa906f1 && 3 == _0xb4b5d3 && _0x3452c7["start"]["isBefore"](_0x58d362["start"])) {
        const _0x2005f4 = _0x3452c7["end"]["nodeAfter"], _0x47381a = _0x58d362["start"]["nodeBefore"];
        return _0x17a930["isBlockImage"](_0x2005f4) && _0x2005f4 === _0x47381a;
      }
      return false;
    }
    _0x5a1c67["model"]["document"]["registerPostFixer"](() => {
      let _0x2f2197 = false;
      const _0x3c1ed1 = Array["from"](_0x5a1c67["model"]["document"]["differ"]["getChangedMarkers"]());
      for (const { name: _0x4ffae9, data: _0x149f20 } of _0x3c1ed1) {
        const { group: _0x40c618, type: _0x4c3d3d, subType: _0x2fc6e2, id: _0x46d001 } = _0x1a335f["_splitMarkerName"](_0x4ffae9);
        if ("suggestion" == _0x40c618 && _0x1a335f["hasSuggestion"](_0x46d001)) {
          if ("formatBlock" == _0x4c3d3d && ("imageStylePreApply" == _0x2fc6e2 || "imageStylePostApply" == _0x2fc6e2)) {
            const _0x5b30d2 = _0x1a335f["getSuggestion"](_0x46d001);
            if (_0x149f20["newRange"]) {
              const _0x45c536 = _0x5b30d2["getFirstRange"]()["getContainedElement"]();
              if (_0x17a930["isBlockImage"](_0x45c536)) continue;
              _0x1a335f["discardSuggestion"](_0x5b30d2), _0x2f2197 = true;
            }
          }
          if ("insertion" == _0x4c3d3d && "imageCaption" == _0x2fc6e2 && !_0x149f20["newRange"]) {
            const _0x1c821e = _0x1a335f["getSuggestion"](_0x46d001);
            _0x1c821e["next"] && _0x1c821e["next"]["isInContent"] && (_0x1a335f["discardSuggestion"](_0x1c821e["next"]), _0x2f2197 = true);
          }
        }
      }
      return _0x2f2197;
    }), this["_registerLegacyDescription"](_0x13e870);
  }
  ["_registerLegacyDescription"](_0x3fc243) {
    const _0x5735d4 = this["editor"], _0x38e9e3 = _0x5735d4["locale"];
    _0x5735d4["plugins"]["get"]("TrackChangesEditing")["descriptionFactory"]["registerDescriptionCallback"]((_0x959199) => {
      if ("formatBlock" != _0x959199["type"] && "formatInline" != _0x959199["type"]) return;
      const { data: _0x45a0e5 } = _0x959199;
      if (!_0x45a0e5 || "imageStyle" != _0x45a0e5["commandName"]) return;
      const _0x49eb82 = _0x45a0e5["commandParams"][0]["value"];
      return _0x24afa8("side" === _0x49eb82 ? o11(_0x38e9e3, "FORMAT_SIDE_IMAGE") : _0x3fc243[_0x49eb82] || _0x49eb82);
      function _0x24afa8(_0x379503) {
        return { "type": "format", "content": o11(_0x38e9e3, "*Format:* %0", _0x379503) };
      }
    });
  }
};
var at2 = class extends Plugin {
  constructor(_0x4f528b) {
    super(_0x4f528b);
    __publicField(this, "_trackChangesValueDuringImport");
    __publicField(this, "_trackChangesExecuted");
    this["_trackChangesValueDuringImport"] = false, this["_trackChangesExecuted"] = false;
  }
  ["afterInit"]() {
    const _0x2e6c5f = this["editor"], _0x5c97ea = _0x2e6c5f["commands"]["get"]("importWord"), _0x5c1dfa = _0x2e6c5f["commands"]["get"]("trackChanges");
    _0x5c97ea && (_0x5c97ea["on"]("execute", (_0x2a4783, [, _0x3c4b07]) => {
      this["_trackChangesValueDuringImport"] = _0x5c1dfa["value"], _0x3c4b07["collaboration_features"]["track_changes"] = !this["_trackChangesValueDuringImport"];
    }, { "priority": "high" }), this["listenTo"](_0x5c97ea, "dataInsert", this["_handleImportedData"]["bind"](this)), this["listenTo"](_0x5c97ea, "dataInsert", () => {
      this["_trackChangesExecuted"] && (_0x5c1dfa["execute"](), this["_trackChangesExecuted"] = false);
    }, { "priority": "lowest" }), _0x2e6c5f["plugins"]["get"]("TrackChangesEditing")["enableCommand"]("importWord"));
  }
  ["_handleImportedData"](_0x128a1a, _0x3ad3dc) {
    const { suggestions: _0x24ebdc } = _0x3ad3dc, _0x567672 = this["editor"]["commands"]["get"]("trackChanges"), _0x337620 = _0x567672["value"];
    this["_trackChangesValueDuringImport"] !== _0x337620 && (_0x567672["execute"](), this["_trackChangesExecuted"] = true), _0x24ebdc && _0x24ebdc["forEach"](({ id: _0x31e688, type: _0x430b33, author: _0x368822, created_at: _0x5df10c }) => {
      const _0x11ec3c = { "id": _0x31e688, "type": _0x430b33, "authorId": this["editor"]["plugins"]["get"]("Users")["me"]["id"], "createdAt": /* @__PURE__ */ new Date(), "data": null, "hasComments": false, "attributes": { "@external": { "authorName": _0x368822, "createdAt": _0x5df10c ? new Date(_0x5df10c) : /* @__PURE__ */ new Date(), "source": "importWord" } } };
      this["editor"]["plugins"]["get"]("TrackChangesEditing")["_setSuggestionData"](_0x11ec3c);
    });
  }
};
var ct3 = class extends Plugin {
  ["afterInit"]() {
    const _0x5ddb6e = this["editor"], _0x6b11ca = _0x5ddb6e["plugins"]["get"]("TrackChangesEditing");
    if (_0x5ddb6e["plugins"]["has"]("IndentEditing") && (_0x6b11ca["enableCommand"]("indent"), _0x6b11ca["enableCommand"]("outdent")), _0x5ddb6e["plugins"]["has"]("IndentBlock")) {
      for (const _0x282603 of ["indentBlock", "outdentBlock"]) _0x6b11ca["enableDefaultAttributesIntegration"](_0x282603);
    }
    const _0x586db5 = _0x5ddb6e["locale"];
    _0x6b11ca["registerBlockAttribute"]("blockIndent"), _0x6b11ca["descriptionFactory"]["registerAttributeLabel"]("blockIndent", o11(_0x586db5, "FORMAT_INDENT")), this["_registerLegacyDescription"]();
  }
  ["_registerLegacyDescription"]() {
    const _0x3624b6 = this["editor"], _0x11d3ce = _0x3624b6["locale"], _0x40065f = _0x3624b6["plugins"]["get"]("TrackChangesEditing");
    _0x40065f["descriptionFactory"]["registerDescriptionCallback"]((_0x2f23e0) => {
      if ("formatBlock" != _0x2f23e0["type"]) return;
      const { data: _0x3701a0 } = _0x2f23e0;
      if (!_0x3701a0) return;
      if ("indentBlock" != _0x3701a0["commandName"] && "outdentBlock" != _0x3701a0["commandName"]) return;
      const _0x5f10f2 = _0x2f23e0["getItems"]()[0], _0x557024 = _0x40065f["descriptionFactory"]["getItemLabel"](_0x5f10f2);
      return "indentBlock" == _0x3701a0["commandName"] ? { "type": "format", "content": o11(_0x11d3ce, "*Indent:* %0", _0x557024) } : "outdentBlock" == _0x3701a0["commandName"] ? { "type": "format", "content": o11(_0x11d3ce, "*Outdent:* %0", _0x557024) } : void 0;
    });
  }
};
var ut = class extends Plugin {
  static get ["requires"]() {
    return [Input];
  }
  ["init"]() {
    this["editor"]["plugins"]["get"]("TrackChangesEditing")["enableCommand"]("input");
  }
};
var ht3 = class extends Plugin {
  ["afterInit"]() {
    const _0x574ed9 = this["editor"];
    if (!_0x574ed9["plugins"]["has"]("LinkEditing")) return;
    const _0x4d18ed = _0x574ed9["plugins"]["get"]("TrackChangesEditing"), _0x35f0b6 = _0x574ed9["commands"]["get"]("link");
    _0x4d18ed["enableDefaultAttributesIntegration"]("link"), _0x4d18ed["enableDefaultAttributesIntegration"]("unlink"), _0x4d18ed["registerInlineAttribute"]("linkHref");
    for (const _0x3c8cd3 of _0x35f0b6["manualDecorators"]) _0x4d18ed["registerInlineAttribute"](_0x3c8cd3["id"]), _0x4d18ed["descriptionFactory"]["registerAttributeLabel"](_0x3c8cd3["id"], "link (" + _0x3c8cd3["label"]["toLowerCase"]() + ")");
    _0x4d18ed["descriptionFactory"]["registerDescriptionCallback"]((_0x1cf783) => {
      if ("attribute" != _0x1cf783["type"]) return;
      const { data: _0x2c6e16 } = _0x1cf783;
      if (!_0x2c6e16 || "linkHref" != _0x2c6e16["key"]) return;
      const _0xb67c65 = _0x2c6e16["newValue"], _0x51b95f = _0x574ed9["locale"];
      return { "type": "format", "content": null == _0xb67c65 ? o11(_0x51b95f, "*Remove link*") : o11(_0x51b95f, "*Set link:* %0", '"' + _0xb67c65 + '"') };
    }), this["_registerLegacyDescription"]();
  }
  ["_registerLegacyDescription"]() {
    const _0x2908e2 = this["editor"], _0x240231 = _0x2908e2["locale"];
    _0x2908e2["plugins"]["get"]("TrackChangesEditing")["descriptionFactory"]["registerDescriptionCallback"]((_0x333691) => {
      if ("formatInline" != _0x333691["type"]) return;
      const { data: _0x1cccb1 } = _0x333691;
      if (_0x1cccb1) {
        if ("link" == _0x1cccb1["commandName"]) {
          const _0x49e001 = _0x1cccb1["commandParams"][0];
          return { "type": "format", "content": o11(_0x240231, "*Set link:* %0", '"' + _0x49e001 + '"') };
        }
        return "unlink" == _0x1cccb1["commandName"] ? { "type": "format", "content": o11(_0x240231, "*Remove link*") } : void 0;
      }
    });
  }
};
var ft = class extends Plugin {
  ["afterInit"]() {
    const _0x31fab7 = this["editor"], _0x3c0d2d = _0x31fab7["locale"];
    if (!_0x31fab7["plugins"]["has"]("LegacyListEditing")) return;
    const _0x39d6b8 = _0x31fab7["plugins"]["get"]("TrackChangesEditing"), _0x4c339c = _0x31fab7["plugins"]["has"]("LegacyTodoListEditing");
    function _0x1e76d2(_0x5a0ee9) {
      return () => {
        const _0x3bb93f = _0x31fab7["model"]["document"]["selection"], _0xe96f17 = _0x31fab7["commands"]["get"](_0x5a0ee9);
        if (_0xe96f17["value"]) return void _0x31fab7["execute"]("paragraph", {});
        const _0x1f702b = _0x5a0ee9["slice"](0, -4), _0x2a8f3f = function(_0x51e3d2, _0x3c5a96, _0x2425e6) {
          let _0x31384c = Array["from"](_0x51e3d2)["filter"]((_0x17acb9) => function(_0x15b9e0, _0x4cdc6e) {
            return _0x4cdc6e["checkChild"](_0x15b9e0["parent"], "listItem") && !_0x4cdc6e["isObject"](_0x15b9e0);
          }(_0x17acb9, _0x2425e6));
          _0x31384c = _0x31384c["filter"]((_0x670793) => !_0x670793["is"]("element", "listItem") || _0x670793["getAttribute"]("listType") != _0x3c5a96);
          const _0x4d85e3 = /* @__PURE__ */ new Set();
          for (const _0x50a9c7 of _0x31384c) _0x50a9c7["is"]("element", "listItem") ? _0x4d85e3["add"](fe(_0x50a9c7)) : _0x4d85e3["add"](_0x50a9c7);
          return Array["from"](_0x4d85e3);
        }(_0x3bb93f["getSelectedBlocks"](), _0x1f702b, _0x31fab7["model"]["schema"]);
        _0x31fab7["model"]["change"](() => {
          for (const _0x2e9257 of _0x2a8f3f) _0x39d6b8["markBlockFormat"](_0x2e9257, { "commandName": _0x5a0ee9, "commandParams": [{ "forceValue": !_0xe96f17["value"] }], "formatGroupId": "blockName" }, ue(_0x2e9257));
        });
      };
    }
    function _0x36f22d(_0x14adea) {
      return () => {
        const _0x1789f5 = function(_0x2da548) {
          let _0x537f3e = Array["from"](_0x2da548);
          const _0x5d556f = _0x537f3e["findIndex"]((_0x18c60a) => "listItem" != _0x18c60a["name"]);
          return _0x5d556f > -1 && (_0x537f3e = _0x537f3e["slice"](0, _0x5d556f)), _0x537f3e;
        }(_0x31fab7["model"]["document"]["selection"]["getSelectedBlocks"]()), _0x48f188 = _0x31fab7["model"]["createRange"](_0x31fab7["model"]["createPositionAt"](_0x1789f5[0], "before"), _0x31fab7["model"]["createPositionAt"](_0x1789f5[_0x1789f5["length"] - 1], "end"));
        _0x31fab7["model"]["change"](() => {
          _0x39d6b8["markBlockFormat"](_0x48f188, { "commandName": _0x14adea, "commandParams": [], "formatGroupId": "listIndent" }, function(_0x1877d6) {
            const _0x3fd4b1 = /* @__PURE__ */ new Set();
            for (const _0x348c03 of _0x1877d6) {
              let _0x8d68db = _0x348c03["nextSibling"];
              for (; _0x8d68db && _0x8d68db["getAttribute"]("listIndent") > _0x348c03["getAttribute"]("listIndent"); ) _0x3fd4b1["add"](_0x8d68db), _0x8d68db = _0x8d68db["nextSibling"];
            }
            return Array["from"](_0x3fd4b1);
          }(_0x1789f5));
        });
      };
    }
    _0x39d6b8["enableCommand"]("numberedList", _0x1e76d2("numberedList")), _0x39d6b8["enableCommand"]("bulletedList", _0x1e76d2("bulletedList")), _0x4c339c && _0x39d6b8["enableCommand"]("todoList", _0x1e76d2("todoList")), _0x39d6b8["enableCommand"]("indentList", _0x36f22d("indentList")), _0x39d6b8["enableCommand"]("outdentList", _0x36f22d("outdentList")), _0x4c339c && _0x39d6b8["enableCommand"]("checkTodoList", () => {
      const _0x561e59 = _0x31fab7["commands"]["get"]("checkTodoList"), _0x2a2ce9 = Array["from"](_0x561e59["_selectedElements"]);
      _0x2a2ce9["filter"]((_0x4b39a3) => _0x4b39a3["getAttribute"]("todoListChecked") != _0x561e59["value"]), _0x31fab7["model"]["change"](() => {
        for (const _0x7ffadb of _0x2a2ce9) _0x39d6b8["markBlockFormat"](_0x7ffadb, { "commandName": "checkTodoList", "commandParams": [{ "forceValue": !_0x561e59["value"] }] });
      });
    }), _0x39d6b8["descriptionFactory"]["registerElementLabel"]("listItem", (_0x99b2f7) => o11(_0x3c0d2d, "ELEMENT_LIST_ITEM", _0x99b2f7)), _0x39d6b8["descriptionFactory"]["registerDescriptionCallback"]((_0xee2511) => {
      if ("formatBlock" != _0xee2511["type"] && "formatInline" != _0xee2511["type"]) return;
      const { data: _0x4b2c2d } = _0xee2511;
      if (_0x4b2c2d) {
        if ("numberedList" == _0x4b2c2d["commandName"] || "bulletedList" == _0x4b2c2d["commandName"] || "todoList" == _0x4b2c2d["commandName"]) switch (_0x4b2c2d["commandName"]["replace"]("List", "")) {
          case "bulleted":
            return _0x3a540c(o11(_0x3c0d2d, "ELEMENT_BULLETED_LIST"));
          case "numbered":
            return _0x3a540c(o11(_0x3c0d2d, "ELEMENT_NUMBERED_LIST"));
          case "todo":
            return _0x3a540c(o11(_0x3c0d2d, "ELEMENT_TODO_LIST"));
        }
        if ("indentList" == _0x4b2c2d["commandName"]) return { "type": "format", "content": o11(_0x3c0d2d, "*Indent:* %0", o11(_0x3c0d2d, "ELEMENT_LIST_ITEM")) };
        if ("outdentList" == _0x4b2c2d["commandName"]) return { "type": "format", "content": o11(_0x3c0d2d, "*Outdent:* %0", o11(_0x3c0d2d, "ELEMENT_LIST_ITEM")) };
        if ("checkTodoList" == _0x4b2c2d["commandName"]) return _0x4b2c2d["commandParams"][0]["forceValue"] ? { "type": "format", "content": o11(_0x3c0d2d, "*Check item*") } : { "type": "format", "content": o11(_0x3c0d2d, "*Uncheck item*") };
      }
      function _0x3a540c(_0x18de23) {
        return { "type": "format", "content": o11(_0x3c0d2d, "*Change to:* %0", _0x18de23) };
      }
    });
  }
};
function fe(_0x1bb6ea) {
  const _0x3c768b = _0x1bb6ea["getAttribute"]("listIndent");
  if (0 == _0x3c768b) return _0x1bb6ea;
  let _0x1ed5bc = _0x1bb6ea;
  for (; _0x1bb6ea["previousSibling"] && _0x1bb6ea["previousSibling"]["is"]("element", "listItem"); ) {
    const _0x54159b = _0x1bb6ea["previousSibling"]["getAttribute"]("listIndent");
    if (_0x54159b == _0x3c768b) _0x1ed5bc = _0x1bb6ea["previousSibling"];
    else {
      if (_0x54159b < _0x3c768b) break;
    }
    _0x1bb6ea = _0x1bb6ea["previousSibling"];
  }
  return _0x1ed5bc;
}
function ue(_0x3a79ad) {
  const _0x17e097 = [];
  if (_0x3a79ad["is"]("element", "listItem") && _0x3a79ad["getAttribute"]("listIndent") > 0) {
    let _0x3b5cf2 = _0x3a79ad["nextSibling"];
    for (; _0x3b5cf2 && "listItem" == _0x3b5cf2["name"] && _0x3b5cf2["getAttribute"]("listIndent") == _0x3a79ad["getAttribute"]("listIndent"); ) _0x17e097["push"](_0x3b5cf2), _0x3b5cf2 = _0x3b5cf2["nextSibling"];
  }
  return _0x17e097;
}
var W4 = class extends Plugin {
  ["afterInit"]() {
    if (!this["editor"]["plugins"]["has"]("LegacyListPropertiesEditing")) return;
    const _0x55af1b = this["editor"]["config"]["get"]("list.properties"), _0x4ce044 = this["editor"]["plugins"]["get"]("TrackChangesEditing");
    _0x55af1b["styles"] && _0x4ce044["enableCommand"]("listStyle", this["handleListStyleCommand"]["bind"](this)), _0x55af1b["reversed"] && _0x4ce044["enableCommand"]("listReversed", this["handleListReversedCommand"]["bind"](this)), _0x55af1b["startIndex"] && _0x4ce044["enableCommand"]("listStart", this["handleListStartCommand"]["bind"](this)), _0x4ce044["descriptionFactory"]["registerDescriptionCallback"](this["handleDescriptions"]["bind"](this));
  }
  ["handleListStyleCommand"](_0x3d15a3, _0x1cad04 = {}) {
    const _0x20b026 = this["editor"]["plugins"]["get"]("TrackChangesEditing"), _0xff4f4 = this["_getSuggestionBlocksForListStyle"]();
    this["editor"]["model"]["change"](() => {
      _0x20b026["markMultiRangeBlockFormat"](_0xff4f4, { "commandName": "listStyle", "commandParams": [{ "type": _0x1cad04["type"] }], "formatGroupId": "listStyle" });
    });
  }
  ["handleListReversedCommand"](_0x1a7d28, _0x431fd0 = {}) {
    const _0x170c3a = this["editor"]["plugins"]["get"]("TrackChangesEditing"), _0x1243df = this["_getSuggestionBlocks"]((_0x25a7b3) => _0x25a7b3["is"]("element", "listItem") && "numbered" === _0x25a7b3["getAttribute"]("listType"));
    if (_0x1243df["length"] < 1) return;
    const _0x352044 = _0x1243df["map"]((_0x447393) => this["editor"]["model"]["createRange"](this["editor"]["model"]["createPositionAt"](_0x447393, "before"), this["editor"]["model"]["createPositionAt"](_0x447393, 0)));
    this["editor"]["model"]["change"](() => {
      _0x170c3a["markMultiRangeBlockFormat"](_0x352044, { "commandName": "listReversed", "commandParams": [{ "reversed": _0x431fd0["reversed"] }], "formatGroupId": "listReversed" });
    });
  }
  ["handleListStartCommand"](_0x1a1503, _0x1826a0 = {}) {
    const _0x43a538 = this["editor"]["plugins"]["get"]("TrackChangesEditing"), _0x25c428 = this["_getSuggestionBlocks"]((_0x570710) => _0x570710["is"]("element", "listItem") && "numbered" === _0x570710["getAttribute"]("listType"));
    if (_0x25c428["length"] < 1) return;
    const _0xb228d6 = _0x25c428["map"]((_0x1a95ea) => this["editor"]["model"]["createRange"](this["editor"]["model"]["createPositionAt"](_0x1a95ea, "before"), this["editor"]["model"]["createPositionAt"](_0x1a95ea, 0)));
    this["editor"]["model"]["change"](() => {
      _0x43a538["markMultiRangeBlockFormat"](_0xb228d6, { "commandName": "listStart", "commandParams": [{ "startIndex": _0x1826a0["startIndex"] }], "formatGroupId": "listStart" });
    });
  }
  ["handleDescriptions"](_0x12a00a) {
    if ("formatBlock" != _0x12a00a["type"] && "formatInline" != _0x12a00a["type"]) return;
    const _0x3cc585 = this["editor"]["locale"], { data: _0x5af80d } = _0x12a00a;
    if (!_0x5af80d) return;
    let _0x1dacdc, _0x2d347e;
    switch (_0x5af80d["commandName"]) {
      case "listStyle":
        _0x1dacdc = "*Change to:* %0", _0x2d347e = { "type": "format", "content": o11(_0x3cc585, _0x1dacdc, o11(_0x3cc585, this["_getTranslationKeyForListStyle"](_0x5af80d["commandParams"][0]["type"]))) };
        break;
      case "listReversed":
        _0x1dacdc = _0x5af80d["commandParams"][0]["reversed"] ? "*Format:* set order to reversed" : "*Format:* set order to regular", _0x2d347e = { "type": "format", "content": o11(_0x3cc585, _0x1dacdc) };
        break;
      case "listStart":
        _0x1dacdc = "*Format:* set start index to %0", _0x2d347e = { "type": "format", "content": o11(_0x3cc585, _0x1dacdc, _0x5af80d["commandParams"][0]["startIndex"]) };
    }
    return _0x2d347e;
  }
  ["_getSuggestionBlocksForListStyle"]() {
    var _a5, _b, _c2, _d;
    const _0x44192d = this["editor"]["plugins"]["get"]("LegacyListUtils");
    let _0x357e53 = Array["from"](this["editor"]["model"]["document"]["selection"]["getSelectedBlocks"]());
    return ((_a5 = _0x357e53[0]) == null ? void 0 : _a5["is"]("element", "listItem")) && _0x357e53["unshift"](..._0x44192d["getSiblingNodes"](this["editor"]["model"]["document"]["selection"]["getFirstPosition"](), "backward")), ((_b = _0x357e53[_0x357e53["length"] - 1]) == null ? void 0 : _b["is"]("element", "listItem")) && _0x357e53["push"](..._0x44192d["getSiblingNodes"](this["editor"]["model"]["document"]["selection"]["getLastPosition"](), "forward")), _0x357e53 = [...new Set(_0x357e53)], ((_d = (_c2 = this["editor"]["model"]["document"]["selection"]["getFirstPosition"]()) == null ? void 0 : _c2["parent"]) == null ? void 0 : _d["is"]("element", "listItem")) && (_0x357e53 = _0x357e53["filter"]((_0x4f5efe) => _0x4f5efe["is"]("element", "listItem"))), _0x357e53;
  }
  ["_getSuggestionBlocks"](_0x198444) {
    const _0xdacd9a = this["editor"]["plugins"]["get"]("LegacyListUtils");
    let _0x2feda6 = Array["from"](this["editor"]["model"]["document"]["selection"]["getSelectedBlocks"]())["filter"](_0x198444)["map"]((_0x442e77) => {
      const _0x63aec9 = this["editor"]["model"]["createPositionAt"](_0x442e77, 0);
      return [..._0xdacd9a["getSiblingNodes"](_0x63aec9, "backward"), ..._0xdacd9a["getSiblingNodes"](_0x63aec9, "forward")];
    })["flat"]();
    return _0x2feda6 = [...new Set(_0x2feda6)], _0x2feda6;
  }
  ["_getTranslationKeyForListStyle"](_0x2f7bd1) {
    return "ELEMENT_" + (this["editor"]["plugins"]["get"]("LegacyListUtils")["getListTypeFromListStyleType"](_0x2f7bd1) || "default")["toUpperCase"]() + "_LIST_" + _0x2f7bd1["toUpperCase"]()["replace"](/-/g, "_");
  }
};
var lt = class extends Plugin {
  ["afterInit"]() {
    const _0x380ef3 = this["editor"];
    if (!_0x380ef3["plugins"]["has"]("MediaEmbedEditing")) return;
    const _0x2ca546 = _0x380ef3["plugins"]["get"]("TrackChangesEditing"), _0x5ad71b = _0x380ef3["locale"];
    _0x2ca546["enableCommand"]("mediaEmbed"), _0x2ca546["descriptionFactory"]["registerElementLabel"]("media", (_0x1950ee) => o11(_0x5ad71b, "ELEMENT_MEDIA", _0x1950ee)), _0x380ef3["conversion"]["for"]("dataDowncast")["elementToElement"]({ "model": "media", "view": (_0x1842d4, { writer: _0x108ea4, options: _0x59c73f }) => {
      if (_0x59c73f["showSuggestionHighlights"]) return _0x108ea4["createEmptyElement"]("div");
    }, "converterPriority": "high" }), _0x380ef3["data"]["downcastDispatcher"]["on"]("attribute:url:media", (_0x5e1f4b, _0x4c9f47, _0x5bedd4) => {
      _0x5bedd4["options"]["showSuggestionHighlights"] && _0x5e1f4b["stop"]();
    }, { "priority": "high" });
  }
};
var mt2 = class extends Plugin {
  ["afterInit"]() {
    const _0x320e29 = this["editor"];
    _0x320e29["plugins"]["has"]("MentionEditing") && _0x320e29["plugins"]["get"]("TrackChangesEditing")["enableCommand"]("mention");
  }
};
var dt3 = class extends Plugin {
  ["afterInit"]() {
    const _0xcdd896 = this["editor"];
    if (!_0xcdd896["plugins"]["has"]("MergeFieldsEditing")) return;
    _0xcdd896["plugins"]["get"]("TrackChangesEditing")["enableCommand"]("insertMergeField"), _0xcdd896["plugins"]["get"]("TrackChangesEditing")["enableCommand"]("insertMergeFieldBlock");
    const _0x12f46f = _0xcdd896["plugins"]["get"]("TrackChangesEditing"), _0x151497 = _0xcdd896["locale"];
    _0x12f46f["descriptionFactory"]["registerElementLabel"]("mergeField", (_0xc2b979) => o11(_0x151497, "ELEMENT_MERGE_FIELD", _0xc2b979)), _0x12f46f["descriptionFactory"]["registerElementLabel"]("mergeFieldBlock", (_0x2fd639) => o11(_0x151497, "ELEMENT_MERGE_FIELD", _0x2fd639)), _0x12f46f["descriptionFactory"]["registerDescriptionCallback"]((_0x53aeee) => {
      if ("insertion" != _0x53aeee["type"] && "deletion" != _0x53aeee["type"]) return;
      const _0x38565f = _0x53aeee["getContainedElement"]();
      if (null == _0x38565f) return;
      if (!_0x38565f["is"]("element", "mergeField") && !_0x38565f["is"]("element", "mergeFieldBlock")) return;
      const _0x3797cb = _0xcdd896["plugins"]["get"]("MergeFieldsEditing")["getLabel"](_0x38565f["getAttribute"]("id"));
      return "insertion" == _0x53aeee["type"] ? { "type": "insertion", "content": o11(_0x151497, "*Insert:* %0", '"' + _0x3797cb + '" ' + o11(_0x151497, "ELEMENT_MERGE_FIELD")) } : { "type": "deletion", "content": o11(_0x151497, "*Remove:* %0", '"' + _0x3797cb + '" ' + o11(_0x151497, "ELEMENT_MERGE_FIELD")) };
    });
  }
};
var pt = class extends Plugin {
  ["afterInit"]() {
    const _0xa58751 = this["editor"], _0x8b1e09 = _0xa58751["plugins"]["get"]("TrackChangesEditing");
    _0xa58751["plugins"]["has"]("MultiLevelList") && (_0x8b1e09["enableDefaultAttributesIntegration"]("multiLevelList"), _0x8b1e09["registerBlockAttribute"]("listMarkerStyle"), _0x8b1e09["descriptionFactory"]["registerDescriptionCallback"]((_0x57c477) => this["handleDescriptions"](_0x57c477)));
  }
  ["handleDescriptions"](_0x4e7c30) {
    const _0x31f546 = this["editor"]["locale"], { data: _0x467d6e } = _0x4e7c30, _0x34961d = { "type": "format", "content": "" };
    if (_0x467d6e && "listMarkerStyle" == _0x467d6e["key"]) {
      if (!_0x467d6e["oldValue"]) return { "type": "format", "content": o11(_0x31f546, "*Set format:* %0", o11(_0x31f546, "ELEMENT_MULTI_LEVEL_LIST")) + " (" + _0x467d6e["newValue"] + ")" };
      if (!_0x467d6e["newValue"]) {
        let _0x294b75 = _0x4e7c30["head"];
        for (; _0x294b75; ) {
          if (_0x294b75["data"] && "listType" == _0x294b75["data"]["key"] && _0x294b75["data"]["newValue"]) return _0x34961d;
          _0x294b75 = _0x294b75["next"];
        }
        return { "type": "format", "content": o11(_0x31f546, "*Remove format:* %0", o11(_0x31f546, "ELEMENT_MULTI_LEVEL_LIST")) + " (" + _0x467d6e["oldValue"] + ")" };
      }
    }
  }
};
var kt3 = class extends Plugin {
  ["afterInit"]() {
    const _0xe5d1de = this["editor"];
    if (!_0xe5d1de["plugins"]["has"]("PageBreakEditing")) return;
    _0xe5d1de["plugins"]["get"]("TrackChangesEditing")["enableCommand"]("pageBreak");
    const _0x7645be = _0xe5d1de["plugins"]["get"]("TrackChangesEditing"), _0x27a43d = _0xe5d1de["locale"];
    _0x7645be["descriptionFactory"]["registerElementLabel"]("pageBreak", (_0x5da282) => o11(_0x27a43d, "ELEMENT_PAGE_BREAK", _0x5da282));
  }
};
var bt3 = class extends Plugin {
  ["afterInit"]() {
    const _0x1ab6a4 = this["editor"];
    if (!_0x1ab6a4["plugins"]["has"]("Paragraph")) return;
    const _0x40e353 = _0x1ab6a4["locale"], _0x159f12 = _0x1ab6a4["plugins"]["get"]("TrackChangesEditing");
    _0x159f12["descriptionFactory"]["registerElementLabel"]("paragraph", (_0x225766) => o11(_0x40e353, "ELEMENT_PARAGRAPH", _0x225766)), _0x159f12["enableDefaultAttributesIntegration"]("paragraph"), _0x159f12["enableCommand"]("insertParagraph"), _0x1ab6a4["editing"]["downcastDispatcher"]["on"]("addMarker:suggestion:insertion", nr(_0x1ab6a4), { "priority": "highest" }), _0x1ab6a4["data"]["downcastDispatcher"]["on"]("addMarker:suggestion:insertion", (_0x43962b, _0x75e5a0, _0x206351) => {
      _0x206351["options"]["showSuggestionHighlights"] && nr(_0x1ab6a4, { "showActiveMarker": false })(_0x43962b, _0x75e5a0, _0x206351);
    }, { "priority": "highest" });
    const _0x4ebcc8 = _0x159f12["descriptionFactory"];
    _0x4ebcc8["registerDescriptionCallback"]((_0x127e04) => {
      if ("insertion" !== _0x127e04["type"]) return;
      const { start: _0x40f9c2, end: _0x30ff23 } = _0x127e04["getFirstRange"]();
      if (!_0x40f9c2["isTouching"](_0x30ff23) || !_0x40f9c2["nodeAfter"]) return;
      const _0x4c459c = _0x1ab6a4["model"]["schema"], _0x3c8be1 = _0x40f9c2["nodeAfter"];
      return _0x4c459c["isBlock"](_0x3c8be1) && !_0x4c459c["isLimit"](_0x3c8be1) && _0x4c459c["checkChild"](_0x3c8be1, "$text") ? { "type": "insertion", "content": o11(_0x40e353, "*Insert:* %0", _0x4ebcc8["getItemLabel"](_0x3c8be1, 1)) } : void 0;
    }), this["_registerLegacyDescription"]();
  }
  ["_registerLegacyDescription"]() {
    const _0x6072a5 = this["editor"], _0x4b7508 = _0x6072a5["locale"];
    _0x6072a5["plugins"]["get"]("TrackChangesEditing")["descriptionFactory"]["registerDescriptionCallback"]((_0x500955) => {
      if ("formatBlock" != _0x500955["type"]) return;
      const { data: _0x5a253e } = _0x500955;
      return _0x5a253e && "paragraph" == _0x5a253e["commandName"] ? { "type": "format", "content": o11(_0x4b7508, "*Change to:* %0", o11(_0x4b7508, "ELEMENT_PARAGRAPH")) } : void 0;
    });
  }
};
function nr(_0xe52c9, { showActiveMarker: _0x4ed9eb = true } = {}) {
  return (_0x2aea1f, _0x5bd384, _0x51b684) => {
    const _0x5414c3 = _0xe52c9["plugins"]["get"]("TrackChangesEditing"), _0x1a702a = _0x5bd384["markerRange"]["start"], _0x21b650 = _0x5bd384["markerRange"]["end"], _0x342e80 = _0xe52c9["model"]["schema"];
    if (!_0x1a702a["isTouching"](_0x21b650) || !_0x1a702a["nodeAfter"]) return;
    const _0x4c5c58 = _0x1a702a["nodeAfter"];
    if (_0x342e80["isBlock"](_0x4c5c58) && !_0x342e80["isLimit"](_0x4c5c58) && _0x342e80["checkChild"](_0x4c5c58, "$text")) {
      if (!_0x51b684["consumable"]["consume"](_0x5bd384["markerRange"], _0x2aea1f["name"])) return;
      const { authorId: _0x8ffcdc } = _0x5414c3["_splitMarkerName"](_0x5bd384["markerName"]), _0x3cee6a = _0x51b684["writer"]["createUIElement"]("span", { "class": "ck-suggestion-marker-split", "data-author-id": _0x8ffcdc }), _0x5b126e = _0x51b684["mapper"]["toViewPosition"](_0x21b650);
      _0x4ed9eb && _0x5414c3["activeMarkers"]["includes"](_0x5bd384["markerName"]) && _0x51b684["writer"]["addClass"]("ck-suggestion-marker--active", _0x3cee6a), _0x51b684["writer"]["insert"](_0x5b126e, _0x3cee6a), _0x51b684["mapper"]["bindElementToMarker"](_0x3cee6a, _0x5bd384["markerName"]);
    }
  };
}
var wt2 = class extends Plugin {
  ["afterInit"]() {
    const _0x5e8a72 = this["editor"];
    if (!_0x5e8a72["plugins"]["has"]("RemoveFormatEditing")) return;
    _0x5e8a72["plugins"]["get"]("TrackChangesEditing")["enableDefaultAttributesIntegration"]("removeFormat"), this["_registerLegacyDescription"]();
  }
  ["_registerLegacyDescription"]() {
    const _0x40ca71 = this["editor"];
    _0x40ca71["plugins"]["get"]("TrackChangesEditing")["descriptionFactory"]["registerDescriptionCallback"]((_0x835e6a) => {
      if ("formatBlock" != _0x835e6a["type"] && "formatInline" != _0x835e6a["type"]) return;
      const { data: _0x3adc7b } = _0x835e6a;
      return _0x3adc7b && "removeFormat" == _0x3adc7b["commandName"] ? { "type": "format", "content": o11(_0x40ca71["locale"], "*Remove all formatting*") } : void 0;
    });
  }
};
var yt2 = class extends Plugin {
  ["afterInit"]() {
    const _0x2961cb = this["editor"];
    if (!_0x2961cb["plugins"]["has"]("RestrictedEditingModeEditing")) return;
    const _0x2126a8 = _0x2961cb["plugins"]["get"]("TrackChangesEditing");
    _0x2126a8["enableCommand"]("goToPreviousRestrictedEditingException"), _0x2126a8["enableCommand"]("goToNextRestrictedEditingException");
    const _0x5f1072 = _0x2961cb["plugins"]["get"]("RestrictedEditingModeEditing");
    _0x5f1072["enableCommand"]("trackChanges"), _0x5f1072["enableCommand"]("acceptSuggestion"), _0x5f1072["enableCommand"]("discardSuggestion"), _0x5f1072["enableCommand"]("acceptAllSuggestions"), _0x5f1072["enableCommand"]("discardAllSuggestions"), _0x5f1072["enableCommand"]("acceptSelectedSuggestions"), _0x5f1072["enableCommand"]("discardSelectedSuggestions");
  }
};
var jt = class extends Plugin {
  static get ["requires"]() {
    return [ShiftEnter];
  }
  ["init"]() {
    const _0x2a4daf = this["editor"], _0x134126 = _0x2a4daf["plugins"]["get"]("TrackChangesEditing");
    _0x134126["enableCommand"]("shiftEnter"), _0x2a4daf["editing"]["downcastDispatcher"]["on"]("addMarker:suggestion:insertion", ge(_0x2a4daf), { "priority": "high" }), _0x2a4daf["editing"]["downcastDispatcher"]["on"]("addMarker:suggestion:deletion", ge(_0x2a4daf), { "priority": "high" }), _0x2a4daf["data"]["downcastDispatcher"]["on"]("addMarker:suggestion", (_0x584754, _0x312c86, _0x40820d) => {
      _0x40820d["options"]["showSuggestionHighlights"] && ge(_0x2a4daf, { "showActiveMarker": false })(_0x584754, _0x312c86, _0x40820d);
    }), _0x134126["descriptionFactory"]["registerElementLabel"]("softBreak", (_0x5735bb) => o11(_0x2a4daf["locale"], "ELEMENT_LINE_BREAK", _0x5735bb));
  }
};
function ge(_0x2be791, { showActiveMarker: _0x2266d0 = true } = {}) {
  return (_0x1de52b, _0x3ba9df, _0x473d75) => {
    const _0x86c99 = _0x2be791["plugins"]["get"]("TrackChangesEditing");
    if (!_0x473d75["consumable"]["test"](_0x3ba9df["markerRange"], _0x1de52b["name"])) return;
    const _0x3058a7 = _0x2be791["model"];
    for (const _0x5ba6fc of _0x3ba9df["markerRange"]["getItems"]()) {
      if (!_0x5ba6fc["is"]("element", "softBreak")) continue;
      const _0x41f5bf = "deletion" == _0x3ba9df["markerName"]["split"](":")[1] ? "merge" : "split", { authorId: _0x3b0336 } = _0x86c99["_splitMarkerName"](_0x3ba9df["markerName"]), _0x2b3344 = _0x473d75["writer"]["createUIElement"]("span", { "class": "ck-suggestion-marker-" + _0x41f5bf, "data-author-id": _0x3b0336 }), _0x36d776 = _0x473d75["mapper"]["toViewPosition"](_0x3058a7["createPositionBefore"](_0x5ba6fc));
      _0x2266d0 && _0x86c99["activeMarkers"]["includes"](_0x3ba9df["markerName"]) && _0x473d75["writer"]["addClass"]("ck-suggestion-marker--active", _0x2b3344), _0x473d75["writer"]["insert"](_0x36d776, _0x2b3344), _0x473d75["mapper"]["bindElementToMarker"](_0x2b3344, _0x3ba9df["markerName"]);
    }
  };
}
var St = class extends Plugin {
  ["afterInit"]() {
    const _0x24e39a = this["editor"], _0x1db25c = _0x24e39a["model"], _0x1f5e35 = _0x24e39a["locale"];
    if (!_0x24e39a["plugins"]["has"]("StandardEditingModeEditing")) return;
    const _0x2dc972 = _0x24e39a["plugins"]["get"]("TrackChangesEditing"), _0x1214d3 = "restrictedEditingException", _0x5d8337 = _0x24e39a["commands"]["get"](_0x1214d3);
    _0x2dc972["enableCommand"](_0x1214d3, (_0x3e5022, _0x3d92be = {}) => {
      const _0x1e1c1f = _0x1db25c["document"]["selection"];
      if (_0x1e1c1f["isCollapsed"]) return void _0x3e5022(_0x3d92be);
      const _0x25b030 = void 0 !== _0x3d92be["forceValue"] ? _0x3d92be["forceValue"] : !_0x5d8337["value"];
      _0x1db25c["change"](() => {
        const _0xc8df2f = Array["from"](_0x1e1c1f["getRanges"]());
        for (const _0x1000f9 of _0xc8df2f) {
          const _0x13af64 = _0x25b030 ? [_0x1000f9] : io(_0x1214d3, _0x1000f9, _0x1db25c);
          for (const _0x5188aa of _0x13af64) _0x2dc972["markInlineFormat"](_0x5188aa, { "commandName": _0x1214d3, "commandParams": [{ "forceValue": _0x25b030 }] });
        }
      });
    }), _0x2dc972["descriptionFactory"]["registerDescriptionCallback"]((_0x918308) => {
      if ("formatBlock" != _0x918308["type"] && "formatInline" != _0x918308["type"]) return;
      const { data: _0x3a65e1 } = _0x918308;
      return _0x3a65e1 && _0x3a65e1["commandName"] == _0x1214d3 ? _0x3a65e1["commandParams"][0]["forceValue"] ? { "type": "format", "content": o11(_0x1f5e35, "FORMAT_RESTRICTED_ENABLED") } : { "type": "format", "content": o11(_0x1f5e35, "FORMAT_RESTRICTED_DISABLED") } : void 0;
    });
  }
};
var At2 = class extends Plugin {
  ["afterInit"]() {
    const _0x1b864e = this["editor"];
    if (!_0x1b864e["plugins"]["has"]("Style") || !_0x1b864e["plugins"]["has"]("DataSchema")) return;
    const _0x4f5e33 = _0x1b864e["plugins"]["get"]("TrackChangesEditing"), _0x392e48 = _0x1b864e["locale"], _0x43f0d8 = _0x1b864e["config"]["get"]("style") || {}, _0x3709b5 = _0x1b864e["plugins"]["get"]("GeneralHtmlSupport"), _0x30b2da = _0x1b864e["plugins"]["get"]("StyleUtils")["normalizeConfig"](_0x1b864e["plugins"]["get"]("DataSchema"), _0x43f0d8["definitions"]);
    _0x4f5e33["enableDefaultAttributesIntegration"]("style");
    const _0x312ebd = /* @__PURE__ */ new Set();
    for (const _0x40c820 of _0x30b2da["block"]) {
      const _0x4532da = _0x3709b5["getGhsAttributeNameForElement"](_0x40c820["element"]);
      _0x312ebd["add"](_0x4532da);
    }
    const _0x2522a5 = /* @__PURE__ */ new Set();
    for (const _0x22b865 of _0x30b2da["inline"]) {
      const _0x4196b0 = _0x3709b5["getGhsAttributeNameForElement"](_0x22b865["element"]);
      _0x2522a5["add"](_0x4196b0);
      for (const _0x27b248 of _0x22b865["ghsAttributes"]) _0x2522a5["add"](_0x27b248);
    }
    for (const _0x5c26ec of _0x312ebd) _0x4f5e33["registerBlockAttribute"](_0x5c26ec), _0x4f5e33["descriptionFactory"]["registerAttributeLabel"](_0x5c26ec, o11(_0x392e48, "FORMAT_STYLE"));
    for (const _0x50c240 of _0x2522a5) _0x4f5e33["registerInlineAttribute"](_0x50c240), _0x4f5e33["descriptionFactory"]["registerAttributeLabel"](_0x50c240, o11(_0x392e48, "FORMAT_STYLE"));
    this["_registerLegacyDescription"]();
  }
  ["_registerLegacyDescription"]() {
    const _0x1c1ad3 = this["editor"], _0x240933 = _0x1c1ad3["locale"];
    _0x1c1ad3["plugins"]["get"]("TrackChangesEditing")["descriptionFactory"]["registerDescriptionCallback"]((_0x44c701) => {
      if ("formatBlock" != _0x44c701["type"] && "formatInline" != _0x44c701["type"]) return;
      const { data: _0x94f46f } = _0x44c701;
      return _0x94f46f && "style" === _0x94f46f["commandName"] ? _0x94f46f["commandParams"][0]["forceValue"] ? { "type": "format", "content": o11(_0x240933, "*Set format:* %0", _0x94f46f["commandParams"][0]["styleName"]["toLowerCase"]()) } : { "type": "format", "content": o11(_0x240933, "*Remove format:* %0", _0x94f46f["commandParams"][0]["styleName"]["toLowerCase"]()) } : void 0;
    });
  }
};
var It = class extends Plugin {
  constructor(_0x151f88) {
    super(_0x151f88);
    __publicField(this, "_tablePostFixingSubtypes");
    __publicField(this, "_tableSuggestions");
    this["_tablePostFixingSubtypes"] = ["tableRow", "tableColumn"], this["_tableSuggestions"] = /* @__PURE__ */ new Set();
  }
  ["afterInit"]() {
    const _0x29318a = this["editor"], _0x47584d = _0x29318a["model"]["document"]["selection"];
    if (!_0x29318a["plugins"]["has"]("TableEditing")) return;
    const _0x32a124 = _0x29318a["locale"], _0xcc80d7 = _0x29318a["plugins"]["get"]("TrackChangesEditing"), _0x14d94e = _0x29318a["plugins"]["get"]("TableUtils");
    _0xcc80d7["descriptionFactory"]["registerElementLabel"]("table", (_0x2273be) => o11(_0x32a124, "ELEMENT_TABLE", _0x2273be)), this["_setupColumnsRowsFixing"](), _0xcc80d7["enableCommand"]("insertTable"), _0xcc80d7["enableCommand"]("selectTableRow"), _0xcc80d7["enableCommand"]("selectTableColumn");
    for (const _0x25ceab of ["insertTableRowAbove", "insertTableRowBelow"]) {
      const _0x1bbc71 = _0x29318a["commands"]["get"](_0x25ceab);
      _0xcc80d7["enableCommand"](_0x25ceab, (_0x56c1e8) => {
        _0x29318a["model"]["change"]((_0x47d81f) => {
          _0x56c1e8();
          const _0x39875d = "above" === _0x1bbc71["order"], _0x5e6232 = _0x14d94e["getSelectionAffectedTableCells"](_0x47584d), _0x24d39f = _0x14d94e["getRowIndexes"](_0x5e6232), _0x2a0066 = _0x39875d ? _0x24d39f["first"] - 1 : _0x24d39f["last"] + 1, _0x28e72f = _0x5e6232[0]["findAncestor"]("table"), _0x2df30c = _0x14d94e["createTableWalker"](_0x28e72f, { "startRow": _0x2a0066, "endRow": _0x2a0066 }), _0x5e32d4 = Array["from"](_0x2df30c)["map"]((_0x27ffca) => _0x47d81f["createRangeOn"](_0x27ffca["cell"]));
          _0xcc80d7["markMultiRangeInsertion"](_0x5e32d4, "tableRow");
        });
      });
    }
    for (const _0x3644cc of ["insertTableColumnLeft", "insertTableColumnRight"]) {
      const _0x5d9c5e = _0x29318a["commands"]["get"](_0x3644cc);
      _0xcc80d7["enableCommand"](_0x3644cc, (_0x22c06f) => {
        _0x29318a["model"]["change"]((_0x2dc32a) => {
          _0x22c06f();
          const _0x4e474f = "left" === _0x5d9c5e["order"], _0x3d9414 = _0x14d94e["getSelectionAffectedTableCells"](_0x47584d), _0x498d7b = _0x14d94e["getColumnIndexes"](_0x3d9414), _0x7bd25 = _0x4e474f ? _0x498d7b["first"] - 1 : _0x498d7b["last"] + 1, _0x1fcc5f = _0x3d9414[0]["findAncestor"]("table"), _0x3be2d2 = _0x14d94e["createTableWalker"](_0x1fcc5f, { "startRow": 0, "column": _0x7bd25, "includeAllSlots": false }), _0x1b1332 = Array["from"](_0x3be2d2)["map"]((_0x5c031c) => _0x2dc32a["createRangeOn"](_0x5c031c["cell"]));
          _0xcc80d7["markMultiRangeInsertion"](_0x1b1332, "tableColumn");
        });
      });
    }
    for (const _0x437bda of ["removeTableRow", "removeTableColumn"]) {
      const _0x48c06a = _0x437bda["substr"](11), _0x58795b = _0x48c06a["toLowerCase"](), _0x49fde2 = _0x58795b["substr"](0, 3) + "span", _0x45f80e = "table" + _0x48c06a, _0x26a817 = "min" + _0x48c06a, _0x19c1b5 = "max" + _0x48c06a;
      _0xcc80d7["enableCommand"](_0x437bda, () => {
        _0x29318a["model"]["change"]((_0x2f9ec5) => {
          const _0x3e101c = _0x14d94e["getSelectionAffectedTableCells"](_0x47584d), _0x1d90c4 = _0x3e101c[0]["findAncestor"]("table");
          let _0x3f0a39;
          if ("removeTableRow" == _0x437bda) {
            const _0x321674 = _0x14d94e["getRowIndexes"](_0x3e101c);
            _0x3f0a39 = { "startRow": _0x321674["first"], "endRow": _0x321674["last"], "includeAllSlots": true };
          } else {
            const _0xa42e67 = _0x14d94e["getColumnIndexes"](_0x3e101c);
            _0x3f0a39 = { "startColumn": _0xa42e67["first"], "endColumn": _0xa42e67["last"], "includeAllSlots": true };
          }
          const _0x1b4103 = _0x14d94e["createTableWalker"](_0x1d90c4, _0x3f0a39), _0x26efb1 = Array["from"](_0x1b4103)["map"](({ cell: _0xfaca08 }) => _0xfaca08), _0x10e742 = be(_0x26efb1["filter"]((_0x1b9138) => _0x1b9138["hasAttribute"](_0x49fde2))), _0xa50992 = be(_0x26efb1["filter"]((_0x474ff1) => !_0x474ff1["hasAttribute"](_0x49fde2)))["map"]((_0x1df85e) => _0x2f9ec5["createRangeOn"](_0x1df85e)), _0x1856f8 = _0xcc80d7["markMultiRangeDeletion"](_0xa50992, _0x45f80e);
          if (_0x1856f8 && ("tableRow" == _0x1856f8["subType"] || "tableColumn" == _0x1856f8["subType"])) {
            const _0x4cdb01 = this["_getSuggestionCoords"](_0x1856f8);
            for (const _0x4686ee of _0x10e742) {
              const _0x3037c9 = _0x2f9ec5["createRangeOn"](_0x4686ee), _0x3d6f66 = _0x14d94e["getCellLocation"](_0x4686ee), _0x4cb727 = _0x4686ee["getAttribute"](_0x49fde2) - 1, _0x43a595 = _0x4cdb01[_0x26a817], _0x2604c5 = _0x4cdb01[_0x19c1b5];
              _0x43a595 <= _0x3d6f66[_0x58795b] && _0x3d6f66[_0x58795b] + _0x4cb727 <= _0x2604c5 && _0x1856f8["addRange"](_0x3037c9);
            }
          }
        });
      });
    }
    function _0x8291e(_0x7837) {
      const _0x3b8c37 = Array["from"](_0x47584d["getRanges"]())["map"]((_0x329fa3) => LiveRange["fromRange"](_0x329fa3));
      _0x29318a["model"]["change"]((_0x3ca6fc) => {
        const _0x2d89c2 = _0x3ca6fc["batch"];
        _0x7837 = _0x7837["filter"]((_0x194e08) => "$graveyard" != _0x194e08["root"]["rootName"]), _0x3ca6fc["setSelection"](_0x7837), _0x29318a["commands"]["get"]("removeTableRow")["refresh"](), _0x29318a["execute"]("removeTableRow", { "forceDefaultExecution": true }), _0x29318a["model"]["enqueueChange"](() => {
          _0x29318a["model"]["enqueueChange"](_0x2d89c2, (_0x3d73f3) => {
            const _0xb475f9 = _0x3b8c37["filter"]((_0x73f68a) => "$graveyard" != _0x73f68a["root"]["rootName"]);
            _0xb475f9["length"] > 0 && _0x3d73f3["setSelection"](_0xb475f9);
            for (const _0x466a2e of _0x3b8c37) _0x466a2e["detach"]();
          });
        });
      });
    }
    function _0xe6ac53(_0x531ab8) {
      _0x29318a["model"]["change"]((_0x26b1d4) => {
        const _0x168ba4 = Array["from"](_0x47584d["getRanges"]())["map"]((_0x339ff5) => LiveRange["fromRange"](_0x339ff5)), _0x355511 = [];
        for (const _0xaa3fb of _0x531ab8) for (const _0x1127ea of _0xaa3fb["getItems"]({ "shallow": true })) _0x355511["push"](_0x1127ea);
        for (const _0x4c5057 of _0x355511) "$graveyard" != _0x4c5057["root"]["rootName"] && (_0x26b1d4["setSelection"](_0x26b1d4["createPositionAt"](_0x4c5057, 0)), _0x29318a["commands"]["get"]("removeTableColumn")["refresh"](), _0x29318a["execute"]("removeTableColumn", { "forceDefaultExecution": true }));
        const _0xd4ce36 = _0x168ba4["filter"]((_0x5155b3) => "$graveyard" != _0x5155b3["root"]["rootName"]);
        _0xd4ce36["length"] > 0 && _0x26b1d4["setSelection"](_0xd4ce36);
        for (const _0x467536 of _0x168ba4) _0x467536["detach"]();
      });
    }
    function _0x5f579f(_0x5ebad7, _0x50faf4) {
      return _0x50faf4["every"]((_0x2d13e5) => _0x5ebad7["some"]((_0x63b5b2) => _0x63b5b2["end"]["isEqual"](_0x2d13e5["start"]) || _0x2d13e5["end"]["isEqual"](_0x63b5b2["start"])));
    }
    function _0x4ce078(_0x41034e, _0x535edd) {
      return !_0x41034e["some"]((_0x5608d5) => _0x535edd["some"]((_0x5059b9) => _0x5608d5["isIntersecting"](_0x5059b9))) && _0x41034e["some"]((_0x55fb65) => _0x535edd["some"]((_0x50c625) => _0x55fb65["end"]["isTouching"](_0x50c625["start"])));
    }
    _0x29318a["data"]["downcastDispatcher"]["on"]("addMarker:suggestion", (_0x3d77ad, _0x672671, _0x160576) => {
      if (!_0x160576["options"]["showSuggestionHighlights"]) return;
      const _0x2b35c1 = _0x672671["item"];
      if (!_0x2b35c1) return;
      const _0x567fb1 = _0x160576["mapper"]["toViewElement"](_0x2b35c1);
      function _0x3b1555(_0x148798) {
        return Array["isArray"](_0x148798) ? _0x148798 : [_0x148798];
      }
      _0x567fb1 && "tableCell" === _0x2b35c1["name"] && setHighlightHandling(_0x567fb1, _0x160576["writer"], (_0x4a8493, _0x4ff169, _0x6a1c80) => _0x6a1c80["addClass"](_0x3b1555(_0x4ff169["classes"]), _0x4a8493), (_0x3e916c, _0x4282be, _0x47d1bb) => _0x47d1bb["removeClass"](_0x3b1555(_0x4282be["classes"]), _0x3e916c));
    }, { "priority": "highest" }), _0xcc80d7["descriptionFactory"]["registerDescriptionCallback"]((_0x17a4d4) => {
      if ("insertion" != _0x17a4d4["type"] && "deletion" != _0x17a4d4["type"]) return;
      const _0x55d904 = _0x17a4d4["getContainedElement"]();
      if (null != _0x55d904 && _0x55d904["is"]("element", "table")) {
        if ("insertion" == _0x17a4d4["type"]) {
          const _0x4488f3 = _0x17a4d4["getItems"]()["filter"]((_0x3eb5db) => _0x3eb5db["is"]("$textProxy"))["map"]((_0x427041) => _0x427041["data"]);
          if (_0x4488f3["length"]) return { "type": "insertion", "content": o11(_0x32a124, "*Insert:* %0", o11(_0x32a124, "ELEMENT_TABLE_WITH_TEXT", '"' + _0x4488f3["join"](" ") + '"')) };
        }
        if ("deletion" == _0x17a4d4["type"]) {
          const _0x222a48 = _0x17a4d4["getItems"]()["filter"]((_0x44bfd6) => _0x44bfd6["is"]("$textProxy"))["map"]((_0x5688ba) => _0x5688ba["data"]);
          if (_0x222a48["length"]) return { "type": "deletion", "content": o11(_0x32a124, "*Remove:* %0", o11(_0x32a124, "ELEMENT_TABLE_WITH_TEXT", '"' + _0x222a48["join"](" ") + '"')) };
        }
      }
    }), _0xcc80d7["descriptionFactory"]["registerDescriptionCallback"]((_0x2f9576) => {
      if ("tableRow" == _0x2f9576["subType"]) {
        const _0x13ba29 = _0x2f9576["getItems"]()["filter"]((_0x1d664e) => _0x1d664e["is"]("$textProxy"))["map"]((_0x5541f9) => _0x5541f9["data"]), _0xc63e20 = this["_getSuggestionCoords"](_0x2f9576), _0x3d6d9a = _0xc63e20["maxRow"] - _0xc63e20["minRow"] + 1;
        if ("insertion" == _0x2f9576["type"]) return _0x13ba29["length"] ? { "type": "insertion", "content": o11(_0x32a124, "*Insert:* %0", o11(_0x32a124, "ELEMENT_TABLE_ROW_WITH_TEXT", [_0x3d6d9a, '"' + _0x13ba29["join"](" ") + '"'])) } : { "type": "insertion", "content": o11(_0x32a124, "*Insert:* %0", o11(_0x32a124, "ELEMENT_TABLE_ROW", _0x3d6d9a)) };
        if ("deletion" == _0x2f9576["type"]) return _0x13ba29["length"] ? { "type": "deletion", "content": o11(_0x32a124, "*Remove:* %0", o11(_0x32a124, "ELEMENT_TABLE_ROW_WITH_TEXT", [_0x3d6d9a, '"' + _0x13ba29["join"](" ") + '"'])) } : { "type": "deletion", "content": o11(_0x32a124, "*Remove:* %0", o11(_0x32a124, "ELEMENT_TABLE_ROW", _0x3d6d9a)) };
      }
      if ("tableColumn" == _0x2f9576["subType"]) {
        const _0x1a80c0 = _0x2f9576["getItems"]()["filter"]((_0xf4cd80) => _0xf4cd80["is"]("$textProxy"))["map"]((_0x3a73b4) => _0x3a73b4["data"]), _0x1253e3 = this["_getSuggestionCoords"](_0x2f9576), _0x37a1f9 = _0x1253e3["maxColumn"] - _0x1253e3["minColumn"] + 1;
        if ("insertion" == _0x2f9576["type"]) return _0x1a80c0["length"] ? { "type": "insertion", "content": o11(_0x32a124, "*Insert:* %0", o11(_0x32a124, "ELEMENT_TABLE_COLUMN_WITH_TEXT", [_0x37a1f9, '"' + _0x1a80c0["join"](" ") + '"'])) } : { "type": "insertion", "content": o11(_0x32a124, "*Insert:* %0", o11(_0x32a124, "ELEMENT_TABLE_COLUMN", _0x37a1f9)) };
        if ("deletion" == _0x2f9576["type"]) return _0x1a80c0["length"] ? { "type": "deletion", "content": o11(_0x32a124, "*Remove:* %0", o11(_0x32a124, "ELEMENT_TABLE_COLUMN_WITH_TEXT", [_0x37a1f9, '"' + _0x1a80c0["join"](" ") + '"'])) } : { "type": "deletion", "content": o11(_0x32a124, "*Remove:* %0", o11(_0x32a124, "ELEMENT_TABLE_COLUMN", _0x37a1f9)) };
      }
    }), _0xcc80d7["_suggestionFactory"]["registerCustomCallback"]("insertion", "tableRow", "discard", _0x8291e), _0xcc80d7["_suggestionFactory"]["registerCustomCallback"]("deletion", "tableRow", "accept", _0x8291e), _0xcc80d7["_suggestionFactory"]["registerCustomCallback"]("insertion", "tableColumn", "discard", _0xe6ac53), _0xcc80d7["_suggestionFactory"]["registerCustomCallback"]("deletion", "tableColumn", "accept", _0xe6ac53), _0xcc80d7["_suggestionFactory"]["registerCustomCallback"]("insertion", "tableColumn", "join", _0x5f579f), _0xcc80d7["_suggestionFactory"]["registerCustomCallback"]("deletion", "tableColumn", "join", _0x5f579f), _0xcc80d7["_suggestionFactory"]["registerCustomCallback"]("insertion", "tableRow", "join", _0x4ce078), _0xcc80d7["_suggestionFactory"]["registerCustomCallback"]("deletion", "tableRow", "join", _0x4ce078);
  }
  ["_acceptFormatSuggestionCallbackFactory"]() {
    const _0x24e627 = this["editor"], _0x18148c = _0x24e627["model"]["document"]["selection"];
    return (_0x1a2769, _0x2ac163) => {
      _0x24e627["model"]["change"]((_0x1a7124) => {
        const { commandName: _0x1393c5, commandParams: _0x45ec0e } = _0x2ac163;
        let _0x100917 = _0x1a2769[0]["end"]["nodeBefore"];
        _0x45ec0e && _0x45ec0e[0] && false === _0x45ec0e[0]["forceValue"] && (_0x100917 = _0x1a2769[0]["start"]["nodeAfter"]);
        const _0x411c51 = _0x1a7124["createRangeIn"](_0x100917);
        if ("$graveyard" == _0x411c51["root"]["rootName"]) return;
        const _0x3eebed = Array["from"](_0x18148c["getRanges"]())["map"]((_0x19f6cf) => LiveRange["fromRange"](_0x19f6cf));
        _0x1a7124["setSelection"](_0x411c51), _0x24e627["commands"]["get"](_0x1393c5)["refresh"](), _0x45ec0e["push"]({ "forceDefaultExecution": true }), _0x24e627["execute"](_0x1393c5, ..._0x45ec0e);
        const _0x43d2c5 = _0x3eebed["filter"]((_0x1d5d5d) => "$graveyard" != _0x1d5d5d["root"]["rootName"]);
        _0x43d2c5["length"] > 0 && _0x1a7124["setSelection"](_0x43d2c5);
        for (const _0x322eec of _0x3eebed) _0x322eec["detach"]();
      });
    };
  }
  ["_getCoordsForCells"](_0x42f812) {
    const _0x4e1a10 = this["editor"]["plugins"]["get"]("TableUtils");
    let _0x5977b3 = Number["MAX_SAFE_INTEGER"], _0x1c6ce0 = Number["MIN_SAFE_INTEGER"], _0x2b3c7c = Number["MAX_SAFE_INTEGER"], _0x404c53 = Number["MIN_SAFE_INTEGER"];
    for (const _0x4c1e8f of _0x42f812) {
      if ("$graveyard" == _0x4c1e8f["root"]["rootName"]) continue;
      const { row: _0x33842c, column: _0x107c03 } = _0x4e1a10["getCellLocation"](_0x4c1e8f), _0x4aa27b = _0x4c1e8f["hasAttribute"]("rowspan") ? _0x4c1e8f["getAttribute"]("rowspan") - 1 : 0, _0x13311d = _0x4c1e8f["hasAttribute"]("colspan") ? _0x4c1e8f["getAttribute"]("colspan") - 1 : 0;
      _0x5977b3 = _0x33842c < _0x5977b3 ? _0x33842c : _0x5977b3, _0x1c6ce0 = _0x33842c + _0x4aa27b > _0x1c6ce0 ? _0x33842c + _0x4aa27b : _0x1c6ce0, _0x2b3c7c = _0x107c03 < _0x2b3c7c ? _0x107c03 : _0x2b3c7c, _0x404c53 = _0x107c03 + _0x13311d > _0x404c53 ? _0x107c03 + _0x13311d : _0x404c53;
    }
    return { "minRow": _0x5977b3, "maxRow": _0x1c6ce0, "minColumn": _0x2b3c7c, "maxColumn": _0x404c53 };
  }
  ["_setupColumnsRowsFixing"]() {
    const _0x1a5785 = this["editor"], _0x382a47 = _0x1a5785["plugins"]["get"]("TrackChangesEditing"), _0x3315b3 = _0x1a5785["plugins"]["get"]("TableUtils");
    _0x1a5785["model"]["document"]["on"]("change:data", () => {
      const _0x290ab6 = Array["from"](_0x1a5785["model"]["document"]["differ"]["getChangedMarkers"]());
      for (const { name: _0x19246e, data: _0x4cd33d } of _0x290ab6) {
        const { group: _0x36a3b7, id: _0x1c403a, subType: _0x5d5bcc } = _0x382a47["_splitMarkerName"](_0x19246e);
        if ("suggestion" != _0x36a3b7) continue;
        if (null != _0x4cd33d["oldRange"]) continue;
        const _0x1fc9d2 = _0x382a47["getSuggestion"](_0x1c403a);
        this["_tablePostFixingSubtypes"]["includes"](_0x5d5bcc) && this["_tableSuggestions"]["add"](_0x1fc9d2);
      }
    }, { "priority": "low" });
    const _0x15e28f = (_0x460792, _0x188363) => {
      let _0x2466fa = false;
      const _0x213338 = _0x188363["createRangeOn"](_0x460792), _0xb5f73c = _0x460792["findAncestor"]("table"), _0x125573 = _0x3315b3["getCellLocation"](_0x460792);
      for (const _0x226e5a of this["_tableSuggestions"]) {
        const _0x4cc894 = _0x226e5a["subType"], _0x3fa276 = _0x4cc894["startsWith"]("tablePaste"), _0x1104bb = _0x4cc894["substr"](_0x3fa276 ? 10 : 5), _0x13df0e = _0x1104bb["toLowerCase"](), _0x41660a = _0x13df0e["substr"](0, 3) + "span", _0x465529 = "min" + _0x1104bb, _0x306717 = "max" + _0x1104bb;
        if (!_0x226e5a["isInContent"]) continue;
        if (_0xb5f73c != _0x226e5a["getFirstRange"]()["start"]["findAncestor"]("table")) continue;
        if (_0x226e5a["isIntersectingWithRange"](_0x213338)) continue;
        const _0x3b642d = _0x460792["hasAttribute"](_0x41660a) ? _0x460792["getAttribute"](_0x41660a) - 1 : 0, _0x4a2b27 = this["_getSuggestionCoords"](_0x226e5a), _0x5d5d62 = _0x4a2b27[_0x465529], _0x67096f = _0x4a2b27[_0x306717];
        _0x5d5d62 <= _0x125573[_0x13df0e] && _0x125573[_0x13df0e] + _0x3b642d <= _0x67096f && (_0x226e5a["addRange"](_0x213338), _0x2466fa = true);
      }
      return _0x2466fa;
    };
    _0x1a5785["model"]["document"]["registerPostFixer"]((_0x383edf) => {
      let _0x175448 = false;
      for (const _0x45c05b of _0x1a5785["model"]["document"]["differ"]["getChanges"]()) if ("insert" == _0x45c05b["type"]) {
        if ("tableRow" == _0x45c05b["name"]) {
          for (const _0x4bdebb of _0x45c05b["position"]["nodeAfter"]["getChildren"]()) _0x175448 = _0x175448 || _0x15e28f(_0x4bdebb, _0x383edf);
        } else "tableCell" == _0x45c05b["name"] && (_0x175448 = _0x175448 || _0x15e28f(_0x45c05b["position"]["nodeAfter"], _0x383edf));
      }
      return _0x175448;
    });
  }
  ["_getSuggestionCoords"](_0x11d799) {
    return this["_getCoordsForCells"](_0x11d799["getRanges"]()["map"]((_0x532a35) => _0x532a35["start"]["nodeAfter"]));
  }
};
function be(_0x1c861c) {
  return Array["from"](new Set(_0x1c861c)["values"]());
}
var vt3 = class extends Plugin {
  static get ["requires"]() {
    return [It];
  }
  ["afterInit"]() {
    const _0x5b597f = this["editor"], _0x148242 = _0x5b597f["model"]["document"]["selection"], _0x2764e5 = _0x5b597f["locale"];
    if (!_0x5b597f["plugins"]["has"]("TableEditing")) return;
    const _0x452d2d = _0x5b597f["plugins"]["get"]("TrackChangesEditing"), _0xb12651 = _0x5b597f["plugins"]["get"]("TableUtils"), _0x32deee = _0x5b597f["plugins"]["get"](It);
    _0x32deee["_tablePostFixingSubtypes"]["push"]("mergeTableCells"), _0x452d2d["enableCommand"]("mergeTableCells", () => {
      const _0x586246 = _0xb12651["getSelectionAffectedTableCells"](_0x5b597f["model"]["document"]["selection"]);
      _0x5b597f["model"]["change"](() => {
        _0x452d2d["markMultiRangeBlockFormat"](_0x586246, { "commandName": "mergeTableCells", "commandParams": [] }, [], "mergeTableCells");
      });
    }), _0x5b597f["commands"]["get"]("mergeTableCells")["on"]("execute", (_0x569eca, _0x4ba4f5) => {
      _0x5b597f["commands"]["get"]("trackChanges")["value"] && (_0x4ba4f5["length"] > 0 && _0x4ba4f5[_0x4ba4f5["length"] - 1] && _0x4ba4f5[_0x4ba4f5["length"] - 1]["forceDefaultExecution"] || _0x452d2d["_isForcedDefaultExecutionBlock"] || this["_areSelectedCellsMergable"]() || _0x569eca["stop"]());
    }, { "priority": "highest" });
    for (const _0x55f5e of ["mergeTableCellUp", "mergeTableCellRight", "mergeTableCellDown", "mergeTableCellLeft"]) {
      const _0xebb4c3 = _0x5b597f["commands"]["get"](_0x55f5e);
      _0x452d2d["enableCommand"](_0x55f5e, () => {
        const _0x3a7fca = _0x5b597f["model"]["document"]["selection"]["getFirstPosition"]()["getAncestors"]()["find"]((_0x2bc8a9) => _0x2bc8a9["is"]("element", "tableCell")), _0x58792e = _0xebb4c3["value"];
        _0x5b597f["model"]["change"](() => {
          _0x452d2d["markMultiRangeBlockFormat"]([_0x3a7fca, _0x58792e], { "commandName": "mergeTableCells", "commandParams": [] }, [], "mergeTableCells");
        });
      });
    }
    for (const _0x47907f of ["splitTableCellVertically", "splitTableCellHorizontally"]) {
      const _0x43d211 = _0x5b597f["commands"]["get"](_0x47907f);
      _0x452d2d["enableCommand"](_0x47907f, () => {
        const _0x491744 = _0xb12651["getSelectionAffectedTableCells"](_0x5b597f["model"]["document"]["selection"])[0], _0xaaf86c = _0x491744["findAncestor"]("table"), { column: _0x39a24e, row: _0x2e91a5 } = _0xb12651["getCellLocation"](_0x491744);
        let _0x576e32 = [];
        if ("horizontally" == _0x43d211["direction"]) {
          const _0x4412bb = _0xb12651["createTableWalker"](_0xaaf86c, { "startRow": _0x2e91a5, "endRow": _0x2e91a5, "includeAllSlots": true });
          _0x576e32 = Array["from"](_0x4412bb)["map"]((_0xd86ec9) => _0xd86ec9["cell"]);
        } else {
          const _0x1141eb = _0xb12651["createTableWalker"](_0xaaf86c, { "column": _0x39a24e, "includeAllSlots": true });
          _0x576e32 = Array["from"](_0x1141eb)["map"]((_0x450bbd) => _0x450bbd["cell"]);
        }
        _0x5b597f["model"]["change"]((_0x54ac73) => {
          _0x452d2d["markBlockFormat"](_0x54ac73["createRangeOn"](_0x491744), { "commandName": _0x47907f, "commandParams": [] }, _0x576e32, _0x47907f);
        });
      });
    }
    _0x452d2d["descriptionFactory"]["registerDescriptionCallback"]((_0x4f4584) => {
      if ("formatBlock" != _0x4f4584["type"] && "formatInline" != _0x4f4584["type"]) return;
      const { data: _0x5ea8c0 } = _0x4f4584;
      return _0x5ea8c0 && "mergeTableCells" == _0x5ea8c0["commandName"] ? { "type": "format", "content": o11(_0x2764e5, "*Merge cells*") } : void 0;
    }), _0x452d2d["descriptionFactory"]["registerDescriptionCallback"]((_0x438719) => {
      if ("formatBlock" != _0x438719["type"] && "formatInline" != _0x438719["type"]) return;
      const { data: _0x4bc188 } = _0x438719;
      return _0x4bc188 ? "splitTableCellVertically" == _0x4bc188["commandName"] ? { "type": "format", "content": o11(_0x2764e5, "*Split cell:* vertically") } : "splitTableCellHorizontally" == _0x4bc188["commandName"] ? { "type": "format", "content": o11(_0x2764e5, "*Split cell:* horizontally") } : void 0 : void 0;
    });
    const _0x5a0013 = _0x32deee["_acceptFormatSuggestionCallbackFactory"]();
    for (const _0x5eb209 of ["mergeTableCellUp", "mergeTableCellRight", "mergeTableCellDown", "mergeTableCellLeft"]) _0x452d2d["_suggestionFactory"]["registerCustomCallback"]("formatBlock", _0x5eb209, "accept", _0x5a0013);
    for (const _0x4b8b8e of ["splitTableCellVertically", "splitTableCellHorizontally"]) _0x452d2d["_suggestionFactory"]["registerCustomCallback"]("formatBlock", _0x4b8b8e, "accept", _0x5a0013);
    _0x452d2d["_suggestionFactory"]["registerCustomCallback"]("formatBlock", "mergeTableCells", "accept", (_0x1b6cc0) => {
      _0x5b597f["model"]["change"]((_0x14650a) => {
        const _0x4ad154 = Array["from"](_0x148242["getRanges"]())["map"]((_0x417b6f) => LiveRange["fromRange"](_0x417b6f));
        _0x14650a["setSelection"](_0x1b6cc0), _0x5b597f["commands"]["get"]("mergeTableCells")["refresh"](), _0x5b597f["execute"]("mergeTableCells", { "forceDefaultExecution": true });
        const _0x57886f = _0x4ad154["filter"]((_0xcf2deb) => "$graveyard" != _0xcf2deb["root"]["rootName"]);
        _0x57886f["length"] > 0 && _0x14650a["setSelection"](_0x57886f);
        for (const _0x18a45c of _0x4ad154) _0x18a45c["detach"]();
      });
    });
    for (const _0x18502d of ["mergeTableCellUp", "mergeTableCellDown", "mergeTableCellLeft", "mergeTableCellRight"]) {
      const _0x12e05a = _0x5b597f["commands"]["get"](_0x18502d);
      _0x12e05a["on"]("set:isEnabled", (_0x3a94f4, _0x277398, _0x3f1ad1) => {
        if (_0x3f1ad1) {
          const _0x35d8ee = _0x5b597f["model"]["document"]["selection"]["getFirstPosition"]()["getAncestors"]()["find"]((_0x37aa61) => _0x37aa61["is"]("element", "tableCell"));
          this["_areMergableCells"](_0x12e05a["value"], _0x35d8ee) || (_0x3a94f4["return"] = false, _0x3a94f4["stop"]());
        }
      }, { "priority": "low" });
    }
  }
  ["_areSelectedCellsMergable"]() {
    const _0x2c3a64 = this["editor"]["commands"]["get"]("mergeTableCells"), _0x966de9 = this["editor"]["plugins"]["get"]("TableUtils");
    if (!_0x2c3a64["isEnabled"]) return false;
    const _0x502d4d = _0x966de9["getSelectionAffectedTableCells"](this["editor"]["model"]["document"]["selection"]);
    for (const _0xe9570b of _0x502d4d) for (const _0x1447b4 of _0x502d4d) if (_0xe9570b != _0x1447b4 && !this["_areMergableCells"](_0xe9570b, _0x1447b4)) return false;
    return true;
  }
  ["_areMergableCells"](_0x3c1365, _0x3a2ada) {
    const _0x3c567e = this["editor"]["plugins"]["get"]("TrackChangesEditing"), _0x3dc0f1 = this["editor"]["model"]["createRangeOn"](_0x3c1365), _0x54668f = this["editor"]["model"]["createRangeOn"](_0x3a2ada), _0x56c432 = /* @__PURE__ */ new Set(), _0x459edf = /* @__PURE__ */ new Set();
    for (const _0x3232e3 of _0x3c567e["getSuggestions"]()) if (("insertion" == _0x3232e3["type"] || "deletion" == _0x3232e3["type"] || "mergeTableCells" == _0x3232e3["subType"]) && _0x3232e3["isInContent"]) {
      for (const _0x40261c of _0x3232e3["getRanges"]()) _0x40261c["containsRange"](_0x3dc0f1, true) && _0x56c432["add"](_0x3232e3["type"] + ":" + _0x3232e3["author"]["id"]), _0x40261c["containsRange"](_0x54668f, true) && _0x459edf["add"](_0x3232e3["type"] + ":" + _0x3232e3["author"]["id"]);
    }
    if (_0x56c432["size"] != _0x459edf["size"]) return false;
    for (const _0x3d2113 of _0x56c432) if (!_0x459edf["has"](_0x3d2113)) return false;
    return true;
  }
};
var Ct2 = class extends Plugin {
  static get ["requires"]() {
    return [It];
  }
  ["afterInit"]() {
    const _0x3a8738 = this["editor"];
    if (!_0x3a8738["plugins"]["has"]("TableEditing")) return;
    const _0x50eee3 = _0x3a8738["locale"], _0x5a90a2 = _0x3a8738["plugins"]["get"]("TrackChangesEditing");
    _0x5a90a2["enableDefaultAttributesIntegration"]("setTableRowHeader"), _0x5a90a2["enableDefaultAttributesIntegration"]("setTableColumnHeader"), _0x5a90a2["registerBlockAttribute"]("headingRows"), _0x5a90a2["registerBlockAttribute"]("headingColumns"), _0x5a90a2["descriptionFactory"]["registerAttributeLabel"]("headingRows", o11(_0x50eee3, "FORMAT_HEADER_ROW")), _0x5a90a2["descriptionFactory"]["registerAttributeLabel"]("headingColumns", o11(_0x50eee3, "FORMAT_HEADER_COLUMN")), this["_handleLegacySuggestions"]();
  }
  ["_handleLegacySuggestions"]() {
    const _0x4fb885 = this["editor"]["plugins"]["get"]("TrackChangesEditing"), _0x577e66 = this["editor"]["plugins"]["get"]("TableUtils"), _0x2ebdf4 = this["editor"]["plugins"]["get"](It)["_acceptFormatSuggestionCallbackFactory"]();
    function _0x145718({ showActiveMarker: _0x36dad9 = true, setDataAttribute: _0x184f0b = true } = {}) {
      return (_0x1e440d, _0x2c9ce2, _0x3d4ab8) => {
        const { type: _0x2c8fca, id: _0x2f5e29 } = _0x4fb885["_splitMarkerName"](_0x2c9ce2["markerName"]), _0xf503c6 = _0x4fb885["getSuggestion"](_0x2f5e29), _0x8c0f9e = _0xf503c6["data"];
        if ("formatBlock" != _0xf503c6["type"] || !_0x8c0f9e || "setTableColumnHeader" != _0x8c0f9e["commandName"]) return;
        if (_0x2c9ce2["item"]) return void _0x1e440d["stop"]();
        if (!_0x3d4ab8["consumable"]["consume"](_0x2c9ce2["markerRange"], _0x1e440d["name"])) return;
        const _0x45bbed = _0x2c9ce2["markerRange"]["start"]["nodeAfter"], _0x50c4d8 = _0x2c9ce2["markerRange"]["end"]["nodeBefore"], _0x1ec1ec = _0x45bbed["parent"]["parent"], { column: _0x685506 } = _0x577e66["getCellLocation"](_0x45bbed), { column: _0x18985f } = _0x577e66["getCellLocation"](_0x50c4d8);
        for (let _0x258f06 = _0x685506; _0x258f06 <= _0x18985f; _0x258f06++) {
          const _0xb526bf = _0x577e66["createTableWalker"](_0x1ec1ec, { "column": _0x258f06, "includeAllSlots": false });
          for (const _0x2139e7 of _0xb526bf) {
            const _0xa1ac44 = _0x2139e7["cell"], _0x1aa3d2 = _0x3d4ab8["mapper"]["toViewElement"](_0xa1ac44);
            _0x3d4ab8["writer"]["addClass"]("ck-suggestion-marker-" + _0x2c8fca, _0x1aa3d2), _0x184f0b && _0x3d4ab8["writer"]["setAttribute"]("data-suggestion", _0x2f5e29, _0x1aa3d2), _0x3d4ab8["mapper"]["bindElementToMarker"](_0x1aa3d2, _0x2c9ce2["markerName"]), _0x36dad9 && (_0x4fb885["activeMarkers"]["includes"](_0x2c9ce2["markerName"]) ? _0x3d4ab8["writer"]["addClass"]("ck-suggestion-marker--active", _0x1aa3d2) : _0x3d4ab8["writer"]["removeClass"]("ck-suggestion-marker--active", _0x1aa3d2));
          }
        }
      };
    }
    _0x4fb885["_suggestionFactory"]["registerCustomCallback"]("formatBlock", "setTableRowHeader", "accept", _0x2ebdf4), _0x4fb885["_suggestionFactory"]["registerCustomCallback"]("formatBlock", "setTableColumnHeader", "accept", _0x2ebdf4), this["editor"]["editing"]["downcastDispatcher"]["on"]("addMarker:suggestion", _0x145718(), { "priority": "highest" }), this["editor"]["data"]["downcastDispatcher"]["on"]("addMarker:suggestion", (_0x4c8c96, _0x5b2a13, _0x241222) => {
      _0x241222["options"]["showSuggestionHighlights"] && _0x145718({ "showActiveMarker": false, "setDataAttribute": false })(_0x4c8c96, _0x5b2a13, _0x241222);
    }, { "priority": "highest" }), this["editor"]["editing"]["downcastDispatcher"]["on"]("removeMarker:suggestion", (_0x422844, _0x106fa1, _0x31c651) => {
      const { type: _0xd272ba, id: _0x2d3d18 } = _0x4fb885["_splitMarkerName"](_0x106fa1["markerName"]), _0x344f2c = _0x4fb885["getSuggestion"](_0x2d3d18), _0x2427b4 = _0x344f2c["data"];
      if ("formatBlock" != _0x344f2c["type"] || !_0x2427b4 || "setTableColumnHeader" != _0x2427b4["commandName"]) return;
      const _0x561b1f = _0x31c651["mapper"]["markerNameToElements"](_0x106fa1["markerName"]);
      if (_0x561b1f) {
        for (const _0x15b231 of _0x561b1f) _0x31c651["writer"]["removeClass"]("ck-suggestion-marker-" + _0xd272ba, _0x15b231), _0x31c651["writer"]["removeClass"]("ck-suggestion-marker--active", _0x15b231), _0x31c651["writer"]["removeAttribute"]("data-suggestion", _0x15b231), _0x31c651["mapper"]["unbindElementFromMarkerName"](_0x15b231, _0x106fa1["markerName"]);
      }
    }, { "priority": "highest" }), this["_registerLegacyDescription"]();
  }
  ["_registerLegacyDescription"]() {
    const _0x770c75 = this["editor"], _0x581054 = _0x770c75["locale"];
    function _0x3c8476(_0x5ac14c) {
      return { "type": "format", "content": o11(_0x581054, "*Format:* %0", _0x5ac14c) };
    }
    _0x770c75["plugins"]["get"]("TrackChangesEditing")["descriptionFactory"]["registerDescriptionCallback"]((_0x41905d) => {
      if ("formatBlock" != _0x41905d["type"]) return;
      const { data: _0x2c9ce3 } = _0x41905d;
      if (_0x2c9ce3) {
        if ("setTableRowHeader" == _0x2c9ce3["commandName"]) {
          const _0x2231bb = _0x2c9ce3["commandParams"][0]["forceValue"];
          return _0x3c8476(o11(_0x581054, _0x2231bb ? "FORMAT_HEADER_ROW" : "FORMAT_REGULAR_ROW"));
        }
        if ("setTableColumnHeader" == _0x2c9ce3["commandName"]) {
          const _0x25252a = _0x2c9ce3["commandParams"][0]["forceValue"];
          return _0x3c8476(o11(_0x581054, _0x25252a ? "FORMAT_HEADER_COLUMN" : "FORMAT_REGULAR_COLUMN"));
        }
      }
    });
  }
};
var Pe = ["tableCellBorderWidth", "tableCellBorderColor", "tableCellBorderStyle", "tableCellHorizontalAlignment", "tableCellVerticalAlignment", "tableCellBackgroundColor", "tableCellPadding"];
var we = Object["fromEntries"](Pe["map"]((_0x47ce0b) => [_0x47ce0b, null]));
var _t2 = class extends Plugin {
  static get ["requires"]() {
    return [It];
  }
  ["afterInit"]() {
    const _0x434ec0 = this["editor"];
    if (!_0x434ec0["plugins"]["has"]("TableClipboard")) return;
    const _0x26d2c4 = _0x434ec0["plugins"]["get"]("TrackChangesEditing"), _0x289e42 = _0x434ec0["plugins"]["get"]("TableUtils"), _0x37ac91 = _0x434ec0["plugins"]["get"](It), _0x2fcebd = _0x434ec0["plugins"]["get"]("TableClipboard");
    _0x37ac91["_tablePostFixingSubtypes"]["push"]("tablePasteRow", "tablePasteColumn"), _0x434ec0["model"]["schema"]["register"]("tableCellSuggestion", { "allowIn": "tableCell", "allowContentOf": "tableCell", "isLimit": true }), _0x434ec0["conversion"]["elementToElement"]({ "model": "tableCellSuggestion", "view": "suggestion-td" });
    let _0x4be675 = null;
    _0x434ec0["model"]["on"]("insertContent", (_0x34f123, _0x32964d) => {
      const [_0x55777e, _0xdc2873] = _0x32964d, _0x2bbac5 = _0x32964d[_0x32964d["length"] - 1];
      _0x2bbac5 && _0x2bbac5["forceDefaultExecution"] || _0x26d2c4["_isForcedDefaultExecutionBlock"] || this["editor"]["commands"]["get"]("trackChanges")["value"] && function(_0x11e186, _0x1d6924, _0x3bd2ca, _0x14039e, _0x37b1b9) {
        if (_0x1d6924 && !_0x1d6924["is"]("documentSelection")) return false;
        const _0x1adce4 = _0x37b1b9["getTableIfOnlyTableInContent"](_0x11e186, _0x3bd2ca);
        if (!_0x1adce4 || !Re(_0x1adce4, void 0, _0x14039e)) return false;
        const _0x9ccc07 = _0x14039e["getSelectionAffectedTableCells"](_0x3bd2ca["document"]["selection"]);
        if (!_0x9ccc07["length"]) return false;
        const _0x22dd89 = _0x9ccc07[0]["findAncestor"]("table"), _0x3b2b09 = _0x14039e["getRowIndexes"](_0x9ccc07), _0x20946a = _0x14039e["getColumnIndexes"](_0x9ccc07), _0x13c9ff = { "startRow": _0x3b2b09["first"], "endRow": _0x3b2b09["last"], "startColumn": _0x20946a["first"], "endColumn": _0x20946a["last"] };
        return 1 == _0x9ccc07["length"] && (_0x13c9ff["endRow"] += _0x14039e["getRows"](_0x1adce4) - 1, _0x13c9ff["endColumn"] += _0x14039e["getColumns"](_0x1adce4) - 1), Re(_0x22dd89, _0x13c9ff, _0x14039e);
      }(_0x55777e, _0xdc2873, _0x434ec0["model"], _0x289e42, _0x2fcebd) && (_0x34f123["stop"](), _0x4be675 = { "cells": [], "insertionRanges": [], "deletionRanges": [], "rowInsertionRanges": [], "rowInsertionIndexes": [], "columnInsertionRanges": [], "columnInsertionIndexes": [] }, _0x434ec0["model"]["change"](() => {
        _0x434ec0["model"]["insertContent"](_0x32964d[0], _0x32964d[1], _0x32964d[2], { "forceDefaultExecution": true });
        const _0x44a2fb = uid(), { rowInsertionRanges: _0x5b46e8, columnInsertionRanges: _0x2a5c1a, insertionRanges: _0x575d84, deletionRanges: _0x397297, cells: _0x195561 } = _0x4be675;
        _0x5b46e8["length"] && _0x26d2c4["markMultiRangeInsertion"](_0x5b46e8, "tablePasteRow", { "tablePasteChainId": _0x44a2fb }), _0x2a5c1a["length"] && _0x26d2c4["markMultiRangeInsertion"](_0x2a5c1a, "tablePasteColumn", { "tablePasteChainId": _0x44a2fb }), _0x575d84["length"] && (_0x26d2c4["markMultiRangeInsertion"](_0x575d84, "tablePaste", { "tablePasteChainId": _0x44a2fb, "skipNestingCheck": true }), _0x575d84["forEach"]((_0x32de9f) => {
          var _a5;
          return (_a5 = _0x32de9f["detach"]) == null ? void 0 : _a5.call(_0x32de9f);
        })), _0x397297["length"] && (_0x26d2c4["markMultiRangeDeletion"](_0x397297, "tablePaste", { "tablePasteChainId": _0x44a2fb, "skipNestingCheck": true }), _0x397297["forEach"]((_0x4235a4) => {
          var _a5;
          return (_a5 = _0x4235a4["detach"]) == null ? void 0 : _a5.call(_0x4235a4);
        }));
        const _0x557949 = _0x26d2c4["markMultiRangeBlockFormat"](_0x195561["map"](({ element: _0x2e1909 }) => _0x2e1909), { "formatGroupId": uid() }, [], "tablePasteCell", { "tablePasteChainId": _0x44a2fb });
        if (_0x557949) {
          const _0x2016b0 = _0x557949["getMarkers"](), _0x4dc016 = [];
          for (const { element: _0x3b61de, attributes: _0x48fb32 } of _0x195561) {
            if (!_0x48fb32) continue;
            const _0x1da80e = _0x434ec0["model"]["createRangeOn"](_0x3b61de), _0x104513 = _0x2016b0["find"]((_0x3e8267) => _0x3e8267["getRange"]()["isEqual"](_0x1da80e));
            _0x104513 && _0x4dc016["push"]([_0x104513["name"], _0x48fb32]);
          }
          _0x4dc016["length"] && _0x557949["setAttribute"]("markerAttributes", Object["fromEntries"](_0x4dc016));
        }
        _0x4be675 = null;
      }));
    }, { "priority": priorities["high"] + 10 }), _0x434ec0["plugins"]["get"]("TableClipboard")["on"]("_replaceTableSlotCell", (_0x34f14f, _0x1363e1) => {
      const [_0x779dcd, _0x3cb1a7, , _0x5a5809] = _0x1363e1;
      if (!_0x4be675) return;
      _0x34f14f["stop"]();
      const _0x5c27e6 = _0x779dcd["cell"], _0x2dbbad = _0x3cb1a7, _0x22a4d7 = ke(_0x5c27e6), _0x579caf = ke(_0x2dbbad);
      _0x34f14f["return"] = _0x5c27e6;
      let _0x5292dd = null, _0x49a4ff = null;
      if (_0x579caf || _0x22a4d7) {
        if (_0x22a4d7 && !_0x579caf) {
          _0x5a5809["remove"](_0x5c27e6["getChild"](0));
          for (const _0x4aa0e6 of Array["from"](_0x2dbbad["getChildren"]())) _0x5a5809["insert"](_0x4aa0e6, _0x5c27e6, "end");
          const _0x2c9273 = _0x4be675["rowInsertionIndexes"]["includes"](_0x779dcd["row"]), _0x3ef670 = _0x4be675["columnInsertionIndexes"]["includes"](_0x779dcd["column"]);
          _0x2c9273 || _0x3ef670 || (_0x5292dd = LiveRange["fromRange"](_0x5a5809["createRangeIn"](_0x5c27e6)));
        } else _0x579caf && !_0x22a4d7 && (_0x49a4ff = _0x5a5809["createRangeIn"](_0x5c27e6));
      } else {
        const _0x349682 = _0x5a5809["createElement"]("tableCellSuggestion"), _0x42d211 = _0x5a5809["createElement"]("tableCellSuggestion");
        _0x5a5809["wrap"](_0x5a5809["createRangeIn"](_0x5c27e6), _0x42d211), _0x5a5809["insert"](_0x349682, _0x5c27e6, 0);
        for (const _0x286726 of Array["from"](_0x2dbbad["getChildren"]())) _0x5a5809["insert"](_0x286726, _0x349682, "end");
        _0x5292dd = LiveRange["fromRange"](_0x5a5809["createRangeOn"](_0x349682)), _0x49a4ff = LiveRange["fromRange"](_0x5a5809["createRangeOn"](_0x42d211));
      }
      const _0xb6694f = Array["from"](_0x2dbbad["getAttributes"]())["filter"](([_0x58272c]) => Pe["includes"](_0x58272c));
      _0x4be675["cells"]["push"]({ "element": _0x5c27e6, "attributes": _0xb6694f["length"] ? Object["fromEntries"](_0xb6694f) : null }), _0x5292dd && _0x4be675["insertionRanges"]["push"](_0x5292dd), _0x49a4ff && _0x4be675["deletionRanges"]["push"](_0x49a4ff);
    }, { "priority": "high" }), _0x289e42["on"]("insertColumns", (_0x2c0483, _0x58f37a) => {
      const [_0x519bf3, _0x4d8a2d = {}] = _0x58f37a;
      if (!_0x4be675) return;
      const _0x1bee35 = _0x4d8a2d["at"] || 0, _0x168063 = _0x4d8a2d["columns"] || 1;
      _0x4be675["columnInsertionIndexes"] = new Array(_0x168063)["fill"](_0x1bee35)["map"]((_0x223ebd, _0x1e9a8a) => _0x223ebd + _0x1e9a8a);
      for (const { cell: _0x269d1a } of _0x289e42["createTableWalker"](_0x519bf3, { "startColumn": _0x1bee35, "endColumn": _0x1bee35 + _0x168063 - 1 })) _0x4be675["columnInsertionRanges"]["push"](_0x434ec0["model"]["createRangeOn"](_0x269d1a));
    }, { "priority": "low" }), _0x289e42["on"]("insertRows", (_0x531935, _0x1c3eaa) => {
      const [_0x49744d, _0x42d737 = {}] = _0x1c3eaa;
      if (!_0x4be675) return;
      const _0x10f2de = _0x42d737["at"] || 0, _0x2e228f = _0x42d737["rows"] || 1;
      _0x4be675["rowInsertionIndexes"] = new Array(_0x2e228f)["fill"](_0x10f2de)["map"]((_0x1407c7, _0x421d5b) => _0x1407c7 + _0x421d5b);
      for (const { cell: _0x52b892 } of _0x289e42["createTableWalker"](_0x49744d, { "startRow": _0x10f2de, "endRow": _0x10f2de + _0x2e228f - 1 })) _0x4be675["rowInsertionRanges"]["push"](_0x434ec0["model"]["createRangeOn"](_0x52b892));
    }, { "priority": "low" }), _0x26d2c4["descriptionFactory"]["registerDescriptionCallback"]((_0x12d877) => {
      if (_0x12d877["subType"] && _0x12d877["subType"]["startsWith"]("tablePaste")) return _0x12d877["previous"] ? {} : { "type": "insertion", "content": o11(_0x434ec0["locale"], "*Replace table cells*") };
    });
    const _0x3d42cc = () => false;
    for (const _0x2de6a7 of ["tablePaste", "tablePasteColumn", "tablePasteRow", "tablePasteCell"]) _0x26d2c4["_suggestionFactory"]["registerCustomCallback"]("insertion", _0x2de6a7, "join", _0x3d42cc), _0x26d2c4["_suggestionFactory"]["registerCustomCallback"]("deletion", _0x2de6a7, "join", _0x3d42cc), _0x26d2c4["_suggestionFactory"]["registerCustomCallback"]("formatBlock", _0x2de6a7, "join", _0x3d42cc);
    _0x26d2c4["_suggestionFactory"]["registerCustomCallback"]("formatBlock", "tablePasteCell", "discard", _0x3d42cc), _0x26d2c4["_suggestionFactory"]["registerCustomCallback"]("formatBlock", "tablePasteCell", "accept", (_0x47be5e, _0x37481f, _0x5c4be4) => {
      const _0x3bd191 = _0x47be5e["map"]((_0x418832) => _0x418832["getContainedElement"]())["filter"]((_0x19d1ba) => _0x19d1ba), _0xb83046 = new Map(_0x3bd191["map"]((_0x4209d9) => [_0x4209d9, null]));
      if (_0x4be675) {
        for (const { element: _0x1222a3, attributes: _0x273fdf } of _0x4be675["cells"]) _0x273fdf && _0xb83046["set"](_0x1222a3, _0x273fdf);
      } else {
        if (_0x5c4be4 && _0x5c4be4["markerAttributes"]) for (const [_0x56e7a9, _0x554ff3] of Object["entries"](_0x5c4be4["markerAttributes"])) {
          const _0x28494b = _0x434ec0["model"]["markers"]["get"](_0x56e7a9), _0x3ab362 = _0x28494b ? _0x28494b["getRange"]()["getContainedElement"]() : null;
          _0x3ab362 && _0xb83046["set"](_0x3ab362, _0x554ff3);
        }
      }
      _0x434ec0["model"]["change"]((_0x522248) => {
        for (const [_0x29dd87, _0x904af5] of _0xb83046) _0x522248["setAttributes"]({ ...we, ..._0x904af5 }, _0x29dd87);
      });
    });
    const _0x125fb5 = (_0x151f96, _0x346ae5) => {
      _0x26d2c4["_suggestionFactory"]["registerCustomCallback"](_0x151f96, "tablePaste", _0x346ae5, (_0x417dc7, _0x24010a, _0x4247ff) => {
        _0x434ec0["model"]["change"]((_0xac2af1) => {
          const _0x4324d8 = [];
          for (const _0xd4a6af of _0x417dc7) {
            const _0x2814b5 = _0xd4a6af["start"]["nodeAfter"];
            _0x2814b5["is"]("element", "tableCellSuggestion") && _0x4324d8["push"](_0x2814b5);
          }
          _0x26d2c4["_suggestionFactory"]["getSuggestionCallback"](_0x151f96, null, _0x346ae5)(_0x417dc7, _0x24010a, _0x4247ff);
          for (const _0x16d725 of _0x4324d8) "$graveyard" != _0x16d725["root"]["rootName"] && _0xac2af1["unwrap"](_0x16d725);
        });
      });
    };
    _0x125fb5("insertion", "accept"), _0x125fb5("insertion", "discard"), _0x125fb5("deletion", "accept"), _0x125fb5("deletion", "discard"), _0x26d2c4["_suggestionFactory"]["registerCustomCallback"]("insertion", "tablePasteRow", "discard", (_0x1ae9f5) => {
      const _0x1d4dae = _0x1ae9f5["map"]((_0x61dd1b) => _0x61dd1b["getContainedElement"]()), _0x46adea = _0x1d4dae[0]["findAncestor"]("table"), { minRow: _0x459d27, maxRow: _0xbaa1a6 } = _0x37ac91["_getCoordsForCells"](_0x1d4dae);
      _0x289e42["removeRows"](_0x46adea, { "at": _0x459d27, "rows": _0xbaa1a6 - _0x459d27 + 1 });
    }), _0x26d2c4["_suggestionFactory"]["registerCustomCallback"]("insertion", "tablePasteColumn", "discard", (_0x5be81b) => {
      const _0x368290 = _0x5be81b["map"]((_0x191d00) => _0x191d00["getContainedElement"]()), _0x97023b = _0x368290[0]["findAncestor"]("table"), { minColumn: _0x49dd28, maxColumn: _0x2689c2 } = _0x37ac91["_getCoordsForCells"](_0x368290);
      _0x289e42["removeColumns"](_0x97023b, { "at": _0x49dd28, "columns": _0x2689c2 - _0x49dd28 + 1 });
    });
    const _0x3684b9 = (_0x25a077, _0x2c0718) => {
      if (!_0x2c0718["subType"] || !_0x2c0718["subType"]["startsWith"]("tablePaste")) return;
      const _0x17c3fb = _0x2c0718["attributes"]["tablePasteChainId"], _0x9dad07 = _0x26d2c4["getSuggestions"]()["filter"]((_0x33503b) => _0x33503b["isInContent"] && _0x33503b["attributes"] && _0x33503b["attributes"]["tablePasteChainId"] == _0x17c3fb);
      _0x9dad07["length"] && _0x2c0718["getAllAdjacentSuggestions"]()["length"] != _0x9dad07["length"] && _0x9dad07["reduce"]((_0x2357c7, _0x593be1) => (_0x2357c7["next"] = _0x593be1, _0x593be1["previous"] = _0x2357c7, _0x593be1));
    };
    function _0xd2ca5c(_0x117835, _0x3dd04b = true) {
      const { id: _0x55e4f2, authorId: _0x1cf756 } = _0x26d2c4["_splitMarkerName"](_0x117835["markerName"]), _0x2aed6b = ["ck-suggestion-marker", "ck-suggestion-marker-insertion"], _0x1595f6 = _0x26d2c4["activeMarkers"]["includes"](_0x117835["markerName"]);
      return _0x1595f6 && _0x2aed6b["push"]("ck-suggestion-marker--active"), { "classes": _0x2aed6b, "attributes": { "data-suggestion": _0x55e4f2, "data-author-id": _0x1cf756 }, "priority": _0x1595f6 && _0x3dd04b ? 3010 : 3e3 };
    }
    _0x26d2c4["on"]("suggestionLoaded", _0x3684b9, { "priority": "high" }), _0x26d2c4["on"]("suggestionUnloaded", _0x3684b9, { "priority": "high" }), _0x434ec0["model"]["document"]["registerPostFixer"](() => {
      let _0x48c5d4 = false;
      const _0x168cd1 = Array["from"](_0x434ec0["model"]["document"]["differ"]["getChangedMarkers"]());
      for (const { name: _0x18c843, data: _0x53dffa } of _0x168cd1) {
        const { group: _0x5acbdd, type: _0x57c3f0, id: _0x7a13a9 } = _0x26d2c4["_splitMarkerName"](_0x18c843);
        if ("suggestion" != _0x5acbdd || "deletion" != _0x57c3f0 || _0x53dffa["oldRange"]) continue;
        if (!_0x26d2c4["hasSuggestion"](_0x7a13a9)) continue;
        const _0x27e838 = _0x26d2c4["getSuggestion"](_0x7a13a9)["getRanges"](), _0x1a6ba0 = _0x434ec0["plugins"]["get"]("Users")["me"];
        for (const _0x47fe8f of _0x26d2c4["getSuggestions"]()) {
          if (!_0x47fe8f["isInContent"] || _0x47fe8f["author"] != _0x1a6ba0) continue;
          if ("formatBlock" != _0x47fe8f["type"] || "tablePasteCell" != _0x47fe8f["subType"]) continue;
          if (_0x47fe8f["getRanges"]()["every"]((_0x448225) => _0x27e838["some"]((_0xe8ea6d) => _0xe8ea6d["containsRange"](_0x448225, true)))) {
            for (const _0x4a8af4 of _0x47fe8f["getAllAdjacentSuggestions"]()) _0x4a8af4["isInContent"] && (_0x4a8af4["discard"](), _0x48c5d4 = true);
          }
        }
      }
      return _0x48c5d4;
    }), _0x434ec0["model"]["document"]["registerPostFixer"]((_0x539fc3) => {
      const _0x347792 = _0x434ec0["commands"]["get"]("redo");
      if (!_0x347792 || !_0x347792["_createdBatches"]["has"](_0x539fc3["batch"])) return false;
      let _0x288856 = false;
      const _0x5dc1ea = _0x434ec0["plugins"]["get"]("Users")["me"], _0x39e726 = _0x434ec0["model"]["document"]["differ"]["getChanges"](), _0x4b178b = Array["from"](_0x434ec0["model"]["document"]["differ"]["getChangedMarkers"]())["filter"](({ name: _0x34bf0c, data: _0x4971a0 }) => {
        const { group: _0x2991b3, subType: _0x2779a8, authorId: _0x5379ba } = _0x26d2c4["_splitMarkerName"](_0x34bf0c);
        return "suggestion" == _0x2991b3 && "tablePaste" == _0x2779a8 && _0x5379ba == _0x5dc1ea["id"] && !_0x4971a0["oldRange"];
      });
      for (const _0x12f199 of _0x39e726) {
        if ("insert" != _0x12f199["type"] || "tableCellSuggestion" != _0x12f199["name"] || 1 != _0x12f199["length"]) continue;
        const _0x2657c8 = _0x539fc3["createRange"](_0x12f199["position"], _0x12f199["position"]["getShiftedBy"](1));
        if (!_0x4b178b["find"](({ data: _0x552a0d }) => _0x552a0d["newRange"]["isEqual"](_0x2657c8))) {
          for (const { name: _0x1ccd74, data: _0x64041f } of _0x4b178b) if (_0x2657c8["containsRange"](_0x64041f["newRange"])) {
            _0x539fc3["updateMarker"](_0x1ccd74, { "range": _0x2657c8 }), _0x288856 = true;
            break;
          }
        }
      }
      return _0x288856;
    }), _0x434ec0["model"]["document"]["registerPostFixer"]((_0x4378b0) => {
      let _0x1dffd5 = false;
      const _0x32080b = _0x434ec0["plugins"]["get"]("Users")["me"], _0x2f944c = _0x26d2c4["getSuggestions"]()["filter"]((_0xfd5806) => _0xfd5806["isInContent"] && _0xfd5806["author"] == _0x32080b), _0x2ebd4d = /* @__PURE__ */ new Set(), _0x43028d = /* @__PURE__ */ new Set();
      for (const _0x54af62 of _0x2f944c) if ("tablePaste" == _0x54af62["subType"]) for (const _0x5d501a of _0x54af62["getMarkers"]()) {
        const _0x419424 = _0x5d501a["getRange"]()["getContainedElement"]();
        if (_0x419424) {
          if (_0x419424["is"]("element", "tableCellSuggestion") && ke(_0x419424)) {
            _0x54af62["removeMarker"](_0x5d501a["name"]), _0x2ebd4d["add"](_0x419424), _0x1dffd5 = true;
            const _0x7a543c = _0x419424["nextSibling"], _0x4fe95a = _0x419424["previousSibling"], _0x909c5b = _0x7a543c && _0x7a543c["is"]("element", "tableCellSuggestion"), _0x387d5e = _0x4fe95a && _0x4fe95a["is"]("element", "tableCellSuggestion");
            _0x909c5b && !_0x2ebd4d["has"](_0x7a543c) && _0x43028d["add"](_0x7a543c), _0x387d5e && !_0x2ebd4d["has"](_0x4fe95a) && _0x43028d["add"](_0x4fe95a);
          } else _0x419424["is"]("element", "paragraph") && _0x419424["isEmpty"] && (_0x54af62["removeMarker"](_0x5d501a["name"]), _0x1dffd5 = true);
        }
      }
      else {
        if ("tablePasteCell" == _0x54af62["subType"]) {
          if (!_0x54af62["attributes"] || !_0x54af62["attributes"]["tablePasteChainId"]) continue;
          const _0x109016 = _0x54af62["attributes"]["markerAttributes"];
          if (_0x109016 && Object["keys"](_0x109016)["length"]) continue;
          const _0x4e3587 = _0x54af62["attributes"]["tablePasteChainId"];
          let _0x40e787 = true, _0x11254b = true;
          for (const _0x43b9d7 of _0x2f944c) if (_0x43b9d7["subType"] && _0x43b9d7["subType"]["startsWith"]("tablePaste")) {
            if (!_0x43b9d7["attributes"]["tablePasteChainId"]) {
              _0x11254b = false;
              break;
            }
            if (_0x43b9d7["id"] != _0x54af62["id"] && _0x43b9d7["attributes"]["tablePasteChainId"] == _0x4e3587) {
              _0x40e787 = false;
              break;
            }
          }
          _0x11254b && _0x40e787 && (_0x54af62["removeMarkers"](), _0x1dffd5 = true);
        }
      }
      for (const _0x3fb072 of _0x2ebd4d) _0x4378b0["remove"](_0x3fb072);
      for (const _0x2ebbee of _0x43028d) _0x4378b0["unwrap"](_0x2ebbee);
      return _0x1dffd5;
    }), _0x434ec0["conversion"]["for"]("editingDowncast")["markerToHighlight"]({ "model": "suggestion:formatBlock:tablePasteCell", "view": (_0x40baac) => _0xd2ca5c(_0x40baac), "converterPriority": "high" }), _0x434ec0["conversion"]["for"]("dataDowncast")["markerToHighlight"]({ "model": "suggestion:formatBlock:tablePasteCell", "view": (_0x539a62, _0x2b19c0) => _0x2b19c0["options"]["showSuggestionHighlights"] ? _0xd2ca5c(_0x539a62, false) : null, "converterPriority": "high" });
    const _0x14d9fc = _0x434ec0["editing"]["view"];
    this["listenTo"](_0x14d9fc["document"], "clipboardOutput", (_0xb8d23b, _0x3e12c8) => {
      const _0xe324d8 = [];
      for (const _0x4ed6f5 of _0x14d9fc["createRangeIn"](_0x3e12c8["content"])["getItems"]()) _0x4ed6f5["is"]("element", "suggestion-td") && _0xe324d8["push"](_0x4ed6f5);
      _0x14d9fc["change"]((_0x16a95d) => {
        for (const _0x3a9781 of _0xe324d8) _0x16a95d["move"](_0x16a95d["createRangeIn"](_0x3a9781), _0x16a95d["createPositionBefore"](_0x3a9781)), _0x16a95d["remove"](_0x3a9781);
      });
    });
  }
};
function ke(_0x3f7c06) {
  if (_0x3f7c06["isEmpty"]) return true;
  const _0x306442 = _0x3f7c06["getChild"](0);
  return _0x306442["is"]("element", "paragraph") && _0x306442["isEmpty"];
}
function Re(_0x1107a8, _0x1c1442 = {}, _0x2f0dfa) {
  for (const { isAnchor: _0x1c61a8, cellHeight: _0x31491b, cellWidth: _0x335387 } of _0x2f0dfa["createTableWalker"](_0x1107a8, { "includeAllSlots": true, ..._0x1c1442 })) if (!_0x1c61a8 || 1 != _0x31491b || 1 != _0x335387) return false;
  return true;
}
var Nt = class extends Plugin {
  ["afterInit"]() {
    if (!this["editor"]["plugins"]["has"]("TableColumnResizeEditing")) return;
    const _0x4b9351 = this["editor"]["plugins"]["get"]("TrackChangesEditing");
    _0x4b9351["enableCommand"]("resizeTableWidth", this["handleResizeTableWidthCommand"]["bind"](this)), _0x4b9351["_suggestionFactory"]["registerCustomCallback"]("formatBlock", "resizeTable", "accept", _0x4b9351["_suggestionFactory"]["getSuggestionCallback"]("formatBlock", null, "discard")), _0x4b9351["_suggestionFactory"]["registerCustomCallback"]("formatBlock", "resizeTable", "discard", _0x4b9351["_suggestionFactory"]["getSuggestionCallback"]("formatBlock", null, "accept")), _0x4b9351["descriptionFactory"]["registerDescriptionCallback"](this["handleSuggestionDescription"]["bind"](this));
  }
  ["handleResizeTableWidthCommand"](_0x141e60, _0x1233b1) {
    const _0x50c277 = this["editor"]["plugins"]["get"]("TrackChangesEditing"), _0x3ed43b = this["editor"]["plugins"]["get"]("TableColumnResizeEditing"), _0x18b940 = _0x1233b1["table"] || this["editor"]["model"]["document"]["selection"]["getSelectedElement"]();
    this["editor"]["model"]["change"](() => {
      const _0x4baf30 = _0x3ed43b["getColumnGroupElement"](_0x18b940);
      let _0x5c713d = _0x4baf30 ? _0x3ed43b["getTableColumnsWidths"](_0x4baf30) : null, _0x2ccb69 = _0x18b940["getAttribute"]("tableWidth") || null;
      const _0x2c127a = _0x1233b1["tableWidth"] || _0x2ccb69, _0x430ecb = _0x1233b1["columnWidths"] || _0x5c713d, _0x2e2cc0 = this["editor"]["plugins"]["get"]("Users")["me"];
      for (const _0x7c37b7 of _0x50c277["getSuggestions"]()) {
        const _0x2de991 = _0x7c37b7["getContainedElement"]();
        if ("resizeTable" === _0x7c37b7["subType"] && _0x2de991 === _0x18b940) {
          _0x7c37b7["author"] !== _0x2e2cc0 && _0x7c37b7["discard"]();
          const _0x2cdf6a = _0x7c37b7["data"]["commandParams"];
          _0x2ccb69 = _0x2cdf6a[0]["tableWidth"], _0x5c713d = _0x2cdf6a[0]["columnWidths"];
          break;
        }
      }
      _0x141e60({ "table": _0x18b940, "tableWidth": _0x2c127a, "columnWidths": _0x430ecb }), _0x50c277["markBlockFormat"](_0x18b940, { "commandName": "resizeTableWidth", "commandParams": [{ "tableWidth": _0x2ccb69, "columnWidths": _0x5c713d }], "formatGroupId": "resizeTable" }, [], "resizeTable");
    });
  }
  ["handleSuggestionDescription"](_0x3689fc) {
    if ("formatBlock" != _0x3689fc["type"] && "formatInline" != _0x3689fc["type"]) return;
    const { data: _0x56390d } = _0x3689fc;
    if (_0x56390d && "resizeTable" === _0x56390d["formatGroupId"]) {
      const _0x403c6f = "*Format:* resize table";
      return { "type": "format", "content": o11(this["editor"]["locale"], _0x403c6f) };
    }
  }
};
var Dt = class extends Plugin {
  ["afterInit"]() {
    const _0x2a7d66 = this["editor"];
    _0x2a7d66["plugins"]["has"]("Template") && _0x2a7d66["plugins"]["get"]("TrackChangesEditing")["enableCommand"]("insertTemplate");
  }
};
var Mt = class extends Plugin {
  ["afterInit"]() {
    const _0x26939b = this["editor"];
    if (!_0x26939b["commands"]["get"]("insertTableOfContents")) return;
    _0x26939b["plugins"]["get"]("TrackChangesEditing")["enableCommand"]("insertTableOfContents");
    const _0x401ba5 = _0x26939b["plugins"]["get"]("TrackChangesEditing"), _0x4cec27 = _0x26939b["locale"];
    _0x401ba5["descriptionFactory"]["registerElementLabel"]("tableOfContents", (_0x4be990) => o11(_0x4cec27, "ELEMENT_TABLE_OF_CONTENTS", _0x4be990));
  }
};
var $t = class extends Plugin {
  ["afterInit"]() {
    const _0x3377ab = this["editor"];
    if (!_0x3377ab["plugins"]["has"]("Title")) return;
    const _0x235899 = _0x3377ab["plugins"]["get"]("TrackChangesEditing");
    _0x235899["descriptionFactory"]["registerElementLabel"]("title-content", () => o11(_0x3377ab["locale"], "ELEMENT_TITLE")), _0x3377ab["model"]["document"]["registerPostFixer"]((_0x287daa) => {
      let _0xc89158 = false;
      const _0x49c51b = Array["from"](_0x3377ab["model"]["document"]["differ"]["getChangedMarkers"]());
      for (const { name: _0x328c6d, data: _0x231fe9 } of _0x49c51b) {
        const { group: _0x281838 } = _0x235899["_splitMarkerName"](_0x328c6d);
        if ("suggestion" !== _0x281838 || !_0x231fe9["newRange"]) continue;
        const _0x1d18fc = _0x231fe9["newRange"], _0x1e7139 = _0x1d18fc["end"]["nodeBefore"];
        if (!_0x1e7139 || !_0x1e7139["is"]("element", "title-content")) continue;
        if (!_0x1d18fc["start"]["isTouching"](_0x1d18fc["end"])) continue;
        const _0x2df0cc = _0x3377ab["model"]["schema"]["getNearestSelectionRange"](_0x1d18fc["end"], "forward");
        if (_0x2df0cc && _0x2df0cc["isCollapsed"]) {
          const _0x39d1a4 = _0x287daa["createRange"](_0x1d18fc["start"], _0x2df0cc["start"]);
          _0x39d1a4["isEqual"](_0x1d18fc) || (_0x287daa["updateMarker"](_0x328c6d, { "range": _0x39d1a4 }), _0xc89158 = true);
        }
        _0xc89158 || (_0x287daa["removeMarker"](_0x328c6d), _0xc89158 = true);
      }
      return _0xc89158;
    });
  }
};
var Bt = class extends Plugin {
  ["afterInit"]() {
    const _0x47fa05 = this["editor"], _0x491d10 = _0x47fa05["plugins"]["get"]("TrackChangesEditing");
    _0x47fa05["plugins"]["has"]("UndoEditing") && (_0x491d10["enableCommand"]("undo"), _0x491d10["enableCommand"]("redo"));
  }
};
var xt2 = class extends Plugin {
  static get ["requires"]() {
    return [It];
  }
  ["afterInit"]() {
    const _0x27950a = this["editor"];
    if (!_0x27950a["plugins"]["has"]("TableCaptionEditing")) return;
    _0x27950a["plugins"]["get"]("TrackChangesEditing")["enableCommand"]("toggleTableCaption");
  }
};
var Ot2 = class extends Plugin {
  constructor(_0x51a436) {
    super(_0x51a436);
    __publicField(this, "tableProperties");
    __publicField(this, "tableCellProperties");
    this["tableProperties"] = ["tableBorderColor", "tableBorderStyle", "tableBorderWidth", "tableAlignment", "tableWidth", "tableHeight", "tableBackgroundColor"], this["tableCellProperties"] = ["tableCellBorderColor", "tableCellBorderStyle", "tableCellBorderWidth", "tableCellPadding", "tableCellWidth", "tableCellHeight", "tableCellBackgroundColor", "tableCellHorizontalAlignment", "tableCellVerticalAlignment"];
  }
  static get ["pluginName"]() {
    return "TrackChangesTableProperties";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["afterInit"]() {
    const _0x1d700e = this["editor"]["plugins"]["get"]("TrackChangesEditing");
    if (this["editor"]["plugins"]["has"]("TablePropertiesEditing")) {
      for (const _0x3e425f of this["tableProperties"]) _0x1d700e["enableCommand"](_0x3e425f, (_0x4412a4, _0x3b2e62) => {
        const _0x4f170b = this["editor"]["model"]["document"]["selection"]["getFirstPosition"]()["findAncestor"]("table");
        this["_handlePropertyChange"](_0x3e425f, [_0x4f170b], this["tableProperties"], "tableProperties", _0x4412a4, _0x3b2e62);
      });
      _0x1d700e["_suggestionFactory"]["registerCustomCallback"]("formatBlock", "tableProperties", "accept", _0x1d700e["_suggestionFactory"]["getSuggestionCallback"]("formatBlock", null, "discard")), _0x1d700e["_suggestionFactory"]["registerCustomCallback"]("formatBlock", "tableProperties", "discard", (_0xc21942, _0x2f6ce4) => this["handleDiscardAction"](this["tableProperties"], _0xc21942, _0x2f6ce4)), _0x1d700e["_suggestionFactory"]["registerCustomCallback"]("formatBlock", "tableProperties", "join", () => false);
    }
    if (this["editor"]["plugins"]["has"]("TableCellPropertiesEditing")) {
      for (const _0x595374 of this["tableCellProperties"]) _0x1d700e["enableCommand"](_0x595374, (_0x1129c2, _0x46e13d) => {
        const _0x4fc741 = this["editor"]["plugins"]["get"]("TableUtils")["getSelectionAffectedTableCells"](this["editor"]["model"]["document"]["selection"]);
        this["_handlePropertyChange"](_0x595374, _0x4fc741, this["tableCellProperties"], "tableCellProperties", _0x1129c2, _0x46e13d);
      });
      _0x1d700e["_suggestionFactory"]["registerCustomCallback"]("formatBlock", "tableCellProperties", "accept", _0x1d700e["_suggestionFactory"]["getSuggestionCallback"]("formatBlock", null, "discard")), _0x1d700e["_suggestionFactory"]["registerCustomCallback"]("formatBlock", "tableCellProperties", "discard", (_0x512c6f, _0x3bdffe) => this["handleDiscardAction"](this["tableCellProperties"], _0x512c6f, _0x3bdffe)), _0x1d700e["_suggestionFactory"]["registerCustomCallback"]("formatBlock", "tableCellProperties", "join", () => false);
    }
    _0x1d700e["descriptionFactory"]["registerDescriptionCallback"]((_0x1d36b0) => this["handleSuggestionDescription"](_0x1d36b0));
  }
  ["_handlePropertyChange"](_0x1108d1, _0x31f2a7, _0x23a203, _0x39cb87, _0x42e820, _0x2c7955) {
    const _0x3b020d = this["editor"]["plugins"]["get"]("TrackChangesEditing");
    this["editor"]["model"]["enqueueChange"](_0x2c7955["batch"], () => {
      for (const _0x150808 of _0x31f2a7) {
        if (this["_getSuggestion"](_0x150808, _0x39cb87)) _0x42e820(_0x2c7955);
        else {
          const _0xf57af9 = {};
          for (const _0x210548 of _0x23a203) {
            const _0x3fc838 = _0x150808["getAttribute"](_0x210548);
            void 0 !== _0x3fc838 && (_0xf57af9[_0x210548] = _0x3fc838);
          }
          _0x42e820(_0x2c7955), _0x3b020d["markBlockFormat"](_0x150808, { "commandParams": [_0xf57af9] }, [], _0x39cb87);
        }
      }
    });
  }
  ["handleDiscardAction"](_0xf13001, _0x4b05eb, _0x3947d3) {
    const _0x46e5d3 = _0x4b05eb[0]["start"]["nodeAfter"], _0x3deb66 = _0x3947d3["commandParams"][0];
    this["editor"]["model"]["change"]((_0x4aeaff) => {
      for (const _0x518bb7 of _0xf13001) void 0 !== _0x3deb66[_0x518bb7] ? _0x4aeaff["setAttribute"](_0x518bb7, _0x3deb66[_0x518bb7], _0x46e5d3) : _0x4aeaff["removeAttribute"](_0x518bb7, _0x46e5d3);
    });
  }
  ["handleSuggestionDescription"](_0x247ff4) {
    if (_0x247ff4["data"]) switch (_0x247ff4["subType"]) {
      case "tableProperties":
        return { "type": "format", "content": o11(this["editor"]["locale"], "*Format:* change table properties") };
      case "tableCellProperties":
        return { "type": "format", "content": o11(this["editor"]["locale"], "*Format:* change table cell properties") };
    }
  }
  ["_getSuggestion"](_0x51d455, _0x6adc87) {
    const _0x3beba4 = this["editor"]["plugins"]["get"]("TrackChangesEditing");
    for (const _0x4ce036 of _0x3beba4["getSuggestions"]({ "skipNotAttached": true })) {
      const _0x2d6b93 = _0x4ce036["getContainedElement"]();
      if (_0x4ce036["subType"] === _0x6adc87 && _0x2d6b93 === _0x51d455) return _0x4ce036;
    }
    return null;
  }
};
var m12 = "$elementName";
var p10 = class extends Plugin {
  constructor(_0x31a347) {
    function _0x187c8a(_0x421a25) {
      return _0x421a25["map"]((_0x3d1233) => String["fromCharCode"](_0x3d1233))["join"]("");
    }
    super(_0x31a347);
    __publicField(this, "descriptionFactory");
    __publicField(this, "trackChangesCommand");
    __publicField(this, "_adapter");
    __publicField(this, "_suggestionFactory");
    __publicField(this, "_suggestions");
    __publicField(this, "_commentsRepository");
    __publicField(this, "_enabledCommands");
    __publicField(this, "_model");
    __publicField(this, "_suggestionState");
    __publicField(this, "_isForcedDefaultExecutionBlock");
    __publicField(this, "_trackFormatChanges");
    __publicField(this, "_mergeNestedSuggestions");
    __publicField(this, "_blockAttributeKeys");
    __publicField(this, "_inlineAttributeKeys");
    __publicField(this, "_recordAttributeSuggestions", false);
    this["set"]("activeMarkers", []), this["on"]("change:activeMarkers", (_0x434317, _0x1da14c, _0x2265b0, _0x3f9c29) => {
      this["_model"]["change"](() => {
        for (const _0x33c10f of [..._0x3f9c29, ..._0x2265b0]) this["_model"]["markers"]["has"](_0x33c10f) && _0x31a347["editing"]["reconvertMarker"](_0x33c10f);
      });
    }), this["descriptionFactory"] = new f9(this["editor"]["model"]["schema"], this["editor"]["locale"]), this["_adapter"] = null, this["_suggestionFactory"] = new Tt2(this["editor"]), this["_suggestions"] = /* @__PURE__ */ new Map(), this["_commentsRepository"] = _0x31a347["plugins"]["get"]("CommentsRepository"), this["_enabledCommands"] = /* @__PURE__ */ new Set(), this["_model"] = this["editor"]["model"], this["_suggestionState"] = /* @__PURE__ */ new WeakMap(), this["_isForcedDefaultExecutionBlock"] = false, this["_blockAttributeKeys"] = /* @__PURE__ */ new Set([m12]), this["_inlineAttributeKeys"] = /* @__PURE__ */ new Set(), _0x31a347["config"]["define"]("trackChanges.trackFormatChanges", "default"), this["_trackFormatChanges"] = _0x31a347["config"]["get"]("trackChanges.trackFormatChanges"), _0x31a347["config"]["define"]("trackChanges.mergeNestedSuggestions", true), this["_mergeNestedSuggestions"] = _0x31a347["config"]["get"]("trackChanges.mergeNestedSuggestions"), this["trackChangesCommand"] = new B5(_0x31a347, this["_enabledCommands"]), this["_initAriaMarkerChangeAnnouncements"](), this[_0x187c8a([95, 101, 120, 101, 99, 117, 116, 101, 83, 117, 103, 103, 101, 115, 116, 105, 111, 110])] = _0x187c8a([52, 48, 52, 56, 50, 50, 49, 50]);
  }
  static get ["requires"]() {
    return ["CommentsRepository", l, PendingActions, V3, U4, G4, F4, H7, L4, J6, q7, z4, Q3, X, Y2, Z5, tt4, et3, it, st3, nt3, rt2, ot3, at2, ct3, ut, ft, W4, pt, ht3, K3, pe, lt, mt2, dt3, kt3, bt3, wt2, yt2, jt, St, At2, It, vt3, Ct2, xt2, _t2, Nt, Mt, Ot2, Dt, $t, Bt];
  }
  static get ["pluginName"]() {
    return "TrackChangesEditing";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    const _0x2c3460 = this["editor"], _0x48e8c1 = (_0x177802, _0x3235d5) => {
      if ("attribute" != _0x177802) return "ck-suggestion-marker-" + _0x177802;
      const _0xe15836 = _0x3235d5["split"]("|")[0];
      return this["_isBlockAttribute"](_0xe15836) ? "ck-suggestion-marker-formatBlock" : "ck-suggestion-marker-formatInline";
    };
    _0x2c3460["conversion"]["for"]("editingDowncast")["markerToHighlight"]({ "model": "suggestion", "view": (_0xc12d38) => {
      const { id: _0x10bd10, authorId: _0x2dac97, type: _0x2819f3, subType: _0x1ebfc3 } = this["_splitMarkerName"](_0xc12d38["markerName"]), _0x4222bf = ["ck-suggestion-marker", _0x48e8c1(_0x2819f3, _0x1ebfc3)];
      let _0x57ccf9 = 3e3;
      return this["activeMarkers"]["includes"](_0xc12d38["markerName"]) && (_0x4222bf["push"]("ck-suggestion-marker--active"), _0x57ccf9 = 3010), "deletion" == _0x2819f3 && (_0x57ccf9 += 5), { "classes": _0x4222bf, "attributes": { "data-suggestion": _0x10bd10, "data-author-id": _0x2dac97 }, "priority": _0x57ccf9 };
    } }), _0x2c3460["conversion"]["for"]("dataDowncast")["add"]((_0x343e5d) => {
      _0x343e5d["on"]("addMarker:suggestion", (_0x43b666, _0x45f8fb, _0x46718c) => {
        if (!_0x46718c["options"]["showSuggestionHighlights"]) return;
        const _0x1c53e4 = _0x45f8fb["item"];
        if (!_0x1c53e4) return;
        const _0x2a1791 = _0x46718c["mapper"]["toViewElement"](_0x1c53e4);
        _0x2c3460["model"]["schema"]["isObject"](_0x1c53e4) && _0x2a1791 && !_0x2a1791["getCustomProperty"]("widget") && _0x2a1791["is"]("containerElement") && toWidget(_0x2a1791, _0x46718c["writer"]);
      }, { "priority": "high" });
    }), _0x2c3460["conversion"]["for"]("dataDowncast")["markerToHighlight"]({ "model": "suggestion", "view": (_0xd033fe, _0x118bf4) => {
      if (!_0x118bf4["options"]["showSuggestionHighlights"]) return null;
      const { type: _0x6b9f01, subType: _0x2cc498 } = this["_splitMarkerName"](_0xd033fe["markerName"]);
      return { "classes": ["ck-suggestion-marker", _0x48e8c1(_0x6b9f01, _0x2cc498)], "priority": 3e3 };
    } });
    const _0x23ec8e = ({ showActiveMarkers: _0x40cc3b = true, isAttributeSuggestion: _0x1bb302 = false } = {}) => (_0x4ab3a7, _0x18b86e, _0x17b626) => {
      if (!_0x18b86e["item"]) return;
      const { id: _0x20b80f, authorId: _0x2268ec } = this["_splitMarkerName"](_0x18b86e["markerName"]);
      if (_0x1bb302) {
        const _0x7adab2 = this["_suggestions"]["get"](_0x20b80f), _0x1bce54 = this["_getAttributeKey"](_0x7adab2);
        if (!this["_isBlockAttribute"](_0x1bce54)) return;
      }
      if (_0x18b86e["item"]["is"]("selection")) return void _0x17b626["consumable"]["consume"](_0x18b86e["item"], _0x4ab3a7["name"]);
      const _0x1c3ac9 = _0x17b626["mapper"]["toViewElement"](_0x18b86e["item"]);
      if (_0x18b86e["item"]["is"]("element") && _0x2c3460["model"]["schema"]["isBlock"](_0x18b86e["item"]) && !_0x1c3ac9["getCustomProperty"]("addHighlight")) {
        _0x17b626["writer"]["addClass"](["ck-suggestion-marker", "ck-suggestion-marker-formatBlock"], _0x1c3ac9), _0x17b626["writer"]["setAttribute"]("data-suggestion", _0x20b80f, _0x1c3ac9), _0x17b626["writer"]["setAttribute"]("data-author-id", _0x2268ec, _0x1c3ac9), _0x17b626["mapper"]["bindElementToMarker"](_0x1c3ac9, _0x18b86e["markerName"]), _0x40cc3b && (this["activeMarkers"]["includes"](_0x18b86e["markerName"]) ? _0x17b626["writer"]["addClass"]("ck-suggestion-marker--active", _0x1c3ac9) : _0x17b626["writer"]["removeClass"]("ck-suggestion-marker--active", _0x1c3ac9));
        for (const _0x4637c4 of _0x2c3460["model"]["createRangeIn"](_0x18b86e["item"])["getItems"]()) _0x17b626["consumable"]["consume"](_0x4637c4, _0x4ab3a7["name"]);
        _0x17b626["consumable"]["consume"](_0x18b86e["item"], _0x4ab3a7["name"]);
      }
    };
    _0x2c3460["conversion"]["for"]("dataDowncast")["add"]((_0x5aa765) => {
      _0x5aa765["on"]("addMarker:suggestion:formatBlock", (_0x2801d7, _0x35cee3, _0x3dc38a) => {
        _0x3dc38a["options"]["showSuggestionHighlights"] && _0x23ec8e({ "showActiveMarkers": false })(_0x2801d7, _0x35cee3, _0x3dc38a);
      }, { "priority": "highest" });
    }), _0x2c3460["conversion"]["for"]("dataDowncast")["add"]((_0x229859) => {
      _0x229859["on"]("addMarker:suggestion:attribute", (_0x2bd1eb, _0x26b4e5, _0x23c74a) => {
        _0x23c74a["options"]["showSuggestionHighlights"] && _0x23ec8e({ "showActiveMarkers": false, "isAttributeSuggestion": true })(_0x2bd1eb, _0x26b4e5, _0x23c74a);
      }, { "priority": "highest" });
    }), _0x2c3460["conversion"]["for"]("dataDowncast")["markerToData"]({ "model": "suggestion", "view": (_0x31d7f7, _0x17e0e9) => _0x17e0e9["options"]["showSuggestionHighlights"] ? null : { "group": "suggestion", "name": _0x31d7f7["substr"](11) } }), _0x2c3460["conversion"]["for"]("upcast")["elementToElement"]({ "view": { "name": "suggestion", "attributes": { "id": /^\w/, "suggestion-type": /^\w/ } }, "model": (_0x5b98d9, { writer: _0x1a0e93 }) => {
      let _0x4c287a = "suggestion:" + _0x5b98d9["getAttribute"]("suggestion-type") + ":" + _0x5b98d9["getAttribute"]("id");
      return _0x5b98d9["getAttribute"]("marker-count") && (_0x4c287a += ":" + _0x5b98d9["getAttribute"]("marker-count")), _0x1a0e93["createElement"]("$marker", { "data-name": _0x4c287a });
    } }), _0x2c3460["conversion"]["for"]("upcast")["dataToMarker"]({ "view": "suggestion" }), _0x2c3460["conversion"]["for"]("editingDowncast")["add"]((_0x165587) => {
      _0x165587["on"]("addMarker:suggestion:formatBlock", _0x23ec8e(), { "priority": "high" });
    }), _0x2c3460["conversion"]["for"]("editingDowncast")["add"]((_0x64971f) => {
      _0x64971f["on"]("addMarker:suggestion:attribute", _0x23ec8e({ "isAttributeSuggestion": true }), { "priority": "high" });
    }), _0x2c3460["conversion"]["for"]("editingDowncast")["add"]((_0x26edc1) => {
      _0x26edc1["on"]("removeMarker:suggestion:formatBlock", (_0x3514bb, _0x214b6d, _0x37033a) => {
        const _0x5df724 = _0x37033a["mapper"]["markerNameToElements"](_0x214b6d["markerName"]);
        if (_0x5df724) {
          for (const _0x1d6475 of _0x5df724) _0x1d6475["getCustomProperty"]("addHighlight") || (_0x37033a["writer"]["removeClass"](["ck-suggestion-marker", "ck-suggestion-marker-formatBlock", "ck-suggestion-marker--active"], _0x1d6475), _0x37033a["writer"]["removeAttribute"]("data-suggestion", _0x1d6475), _0x37033a["writer"]["removeAttribute"]("data-author-id", _0x1d6475), _0x37033a["mapper"]["unbindElementFromMarkerName"](_0x1d6475, _0x214b6d["markerName"]));
        }
      }, { "priority": "high" });
    }), _0x2c3460["conversion"]["for"]("editingDowncast")["add"]((_0x467c08) => {
      _0x467c08["on"]("removeMarker:suggestion:attribute", (_0xaf1104, _0x20003c, _0x55211e) => {
        const _0x3c0df1 = _0x55211e["mapper"]["markerNameToElements"](_0x20003c["markerName"]);
        if (!_0x3c0df1) return;
        const { id: _0x18117d } = this["_splitMarkerName"](_0x20003c["markerName"]), _0x11bcd4 = this["_suggestions"]["get"](_0x18117d), _0x1fc39a = this["_getAttributeKey"](_0x11bcd4);
        if (this["_isBlockAttribute"](_0x1fc39a)) {
          for (const _0x141922 of _0x3c0df1) _0x141922["getCustomProperty"]("addHighlight") || (_0x55211e["writer"]["removeClass"](["ck-suggestion-marker", "ck-suggestion-marker-formatBlock", "ck-suggestion-marker--active"], _0x141922), _0x55211e["writer"]["removeAttribute"]("data-suggestion", _0x141922), _0x55211e["writer"]["removeAttribute"]("data-author-id", _0x141922), _0x55211e["mapper"]["unbindElementFromMarkerName"](_0x141922, _0x20003c["markerName"]));
        }
      }, { "priority": "high" });
    }), _0x2c3460["model"]["document"]["registerPostFixer"]((_0x74a29f) => {
      let _0x3fb5e9 = false;
      const _0x192724 = Array["from"](_0x2c3460["model"]["document"]["differ"]["getChangedMarkers"]()), _0x4e5ebf = /* @__PURE__ */ new Set();
      for (const { name: _0x5e90b3, data: _0x54b408 } of _0x192724) {
        const { group: _0x3611b6, type: _0x38b897, subType: _0x11a233, id: _0x5ceb58 } = this["_splitMarkerName"](_0x5e90b3);
        if ("suggestion" !== _0x3611b6) continue;
        const _0x32436d = this["_suggestions"]["get"](_0x5ceb58);
        if (null != _0x54b408["newRange"]) {
          "formatInline" == _0x38b897 && (_0x3fb5e9 = _0x3fb5e9 || Ut(_0x54b408["newRange"], _0x5e90b3, _0x74a29f, _0x2c3460["model"]["schema"]));
          const _0x42bb10 = "attribute" == _0x38b897 && this["_isBlockAttribute"](_0x11a233["split"]("|")[0]);
          if (_0x54b408["newRange"]["isCollapsed"] || "$graveyard" == _0x54b408["newRange"]["root"]["rootName"] || "formatBlock" == _0x38b897 && !Gt(_0x54b408["newRange"]) || _0x42bb10 && !Gt(_0x54b408["newRange"]) || "deletion" == _0x38b897 && !(!Vt2(_0x419129 = _0x54b408["newRange"]) && !function(_0x112050) {
            return _0x112050["start"]["parent"] == _0x112050["end"]["nodeBefore"] && _0x112050["start"]["isAtEnd"];
          }(_0x419129))) _0x74a29f["removeMarker"](_0x5e90b3), _0x3fb5e9 = true;
          else {
            if (!_0x32436d || !_0x32436d["isInContent"]) continue;
            if (_0x54b408["newRange"] && _0x54b408["oldRange"] && _0x54b408["newRange"]["isEqual"](_0x54b408["oldRange"])) continue;
            _0x4e5ebf["add"](_0x32436d);
          }
        }
      }
      var _0x419129;
      return _0x4e5ebf["size"] > 0 && (_0x3fb5e9 = !!this["_joinWithAdjacentSuggestions"](_0x4e5ebf) || _0x3fb5e9), _0x3fb5e9;
    }), _0x2c3460["model"]["document"]["registerPostFixer"]((_0x340d4b) => {
      let _0x20fa8e = false;
      for (const _0x2f8537 of _0x2c3460["model"]["document"]["differ"]["getChanges"]()) if ("insert" == _0x2f8537["type"]) for (const _0x5e4f1f of this["_suggestions"]["values"]()) {
        if (_0x5e4f1f["isMultiRange"] || !_0x5e4f1f["isInContent"]) continue;
        const _0x717d91 = "formatBlock" == _0x5e4f1f["type"], _0x3ab8db = this["_getAttributeKey"](_0x5e4f1f), _0x29ccd5 = _0x3ab8db && this["_isBlockAttribute"](_0x3ab8db);
        if (!_0x717d91 && !_0x29ccd5) continue;
        const _0xcffc0d = _0x5e4f1f["getFirstRange"]();
        if (_0xcffc0d["start"]["parent"] != _0xcffc0d["end"]["parent"] && !_0xcffc0d["end"]["isAtEnd"]) {
          const _0x4c9118 = _0x2c3460["model"]["createPositionAt"](_0xcffc0d["start"]["nodeAfter"], "end"), _0x137f5b = _0x2c3460["model"]["createRange"](_0xcffc0d["start"], _0x4c9118);
          _0x340d4b["updateMarker"](_0x5e4f1f["getFirstMarker"](), { "range": _0x137f5b }), _0x20fa8e = true;
        }
      }
      return _0x20fa8e;
    }), _0x2c3460["model"]["document"]["registerPostFixer"]((_0x48b172) => this["_processAttributeChanges"](_0x48b172)), _0x2c3460["model"]["document"]["registerPostFixer"]((_0x54ee1f) => !_0x54ee1f["batch"]["isLocal"] && this["_processAttributeSuggestions"](_0x54ee1f)), _0x2c3460["model"]["on"]("_afterChanges", () => {
      this["_recordAttributeSuggestions"] = false;
    }), _0x2c3460["model"]["document"]["on"]("change:data", (_0x801cef, _0x17a077) => {
      if (!_0x17a077["isLocal"] || _0x17a077["isUndo"]) return;
      if (!this["_recordAttributeSuggestions"]) return;
      const _0x10bf6f = _0x2c3460["model"]["document"]["differ"]["getChanges"]();
      if (0 == _0x10bf6f["length"]) return;
      const _0x189797 = [], _0x5ec966 = _0x10bf6f["filter"]((_0xa6bb3d) => "attribute" == _0xa6bb3d["type"]), _0x2cf134 = _0x10bf6f["filter"]((_0x31bdf0) => "insert" == _0x31bdf0["type"] && "$text" != _0x31bdf0["name"]);
      for (const _0x2027bf of _0x5ec966) this["_isRegisteredAttribute"](_0x2027bf["attributeKey"]) && _0x189797["push"]({ "key": _0x2027bf["attributeKey"], "newValue": _0x2027bf["attributeNewValue"], "oldValue": _0x2027bf["attributeOldValue"], "range": Ft(_0x2027bf["range"], _0x2c3460["model"]) });
      for (const _0x1fcc35 of _0x2cf134) {
        if ("rename" != _0x1fcc35["action"] && "refresh" != _0x1fcc35["action"]) continue;
        const _0x440012 = Lt2(_0x1fcc35["position"]["nodeAfter"], _0x2c3460["model"]), _0xe73b00 = _0x1fcc35["before"];
        "rename" == _0x1fcc35["action"] && _0x189797["push"]({ "key": m12, "newValue": _0x1fcc35["name"], "oldValue": _0xe73b00["name"], "range": _0x440012 });
        for (const [_0x4e7282, _0x1f8fb8] of _0xe73b00["attributes"]) {
          if (!this["_isRegisteredAttribute"](_0x4e7282)) continue;
          const _0x2d8676 = _0x1fcc35["attributes"]["get"](_0x4e7282);
          _0x1f8fb8 !== _0x2d8676 && _0x189797["push"]({ "key": _0x4e7282, "newValue": _0x2d8676, "oldValue": _0x1f8fb8, "range": _0x440012 });
        }
        for (const [_0x85d6aa, _0x10fb53] of _0x1fcc35["attributes"]) this["_isRegisteredAttribute"](_0x85d6aa) && (_0xe73b00["attributes"]["has"](_0x85d6aa) || _0x189797["push"]({ "key": _0x85d6aa, "newValue": _0x10fb53, "oldValue": null, "range": _0x440012 }));
      }
      0 != _0x189797["length"] && _0x2c3460["model"]["enqueueChange"](_0x17a077, (_0x155d38) => {
        const _0x23a845 = uid();
        for (const { range: _0x2f1d65, key: _0x14a149, oldValue: _0x4cd49b, newValue: _0x353c19 } of _0x189797) this["markAttributeChange"](_0x2f1d65, _0x14a149, _0x4cd49b, _0x353c19, { "groupId": _0x23a845 });
        this["_reduceExistingSuggestions"](_0x155d38, _0x189797);
      });
    }, { "priority": "lowest" }), _0x2c3460["model"]["markers"]["on"]("update:suggestion", (_0x2d5fd3, _0x2f227b, _0x11cb05) => {
      if (null == _0x11cb05) {
        const { id: _0x2f3b6d } = this["_splitMarkerName"](_0x2f227b["name"]), _0x39a718 = this["_suggestions"]["get"](_0x2f3b6d);
        _0x39a718 && _0x39a718["addMarkerName"](_0x2f227b["name"]);
      }
    }), _0x2c3460["model"]["document"]["on"]("change:data", () => {
      const _0x5d095e = Array["from"](_0x2c3460["model"]["document"]["differ"]["getChangedMarkers"]())["filter"]((_0x56d936) => "suggestion" === this["_splitMarkerName"](_0x56d936["name"])["group"]);
      if (0 === _0x5d095e["length"]) return;
      _0x5d095e["sort"]((_0x424427, _0xdac0f6) => {
        const _0x5617de = _0x424427["data"]["oldRange"], _0x524a96 = _0xdac0f6["data"]["oldRange"];
        return null === _0x5617de && null === _0x524a96 ? 0 : null === _0x5617de && null !== _0x524a96 ? -1 : null !== _0x5617de && null === _0x524a96 ? 1 : _0x5617de["start"]["isBefore"](_0x524a96["start"]) ? -1 : 1;
      });
      const _0x5aeea2 = /* @__PURE__ */ new Set(), _0xe4ecc4 = /* @__PURE__ */ new Set();
      for (const { name: _0x4530f6, data: _0x3f195e } of _0x5d095e) {
        const { id: _0x2dd15a } = this["_splitMarkerName"](_0x4530f6);
        if (null === _0x3f195e["oldRange"]) {
          const _0x3f6780 = this["_handleNewSuggestionMarker"](_0x4530f6);
          _0xe4ecc4["add"](_0x3f6780);
        } else {
          const _0x928ae7 = this["_suggestions"]["get"](_0x2dd15a);
          null !== _0x3f195e["newRange"] || _0x928ae7["isInContent"] ? (_0x5aeea2["add"](_0x928ae7["head"]), _0xe4ecc4["add"](_0x928ae7)) : this["_removeSuggestion"](_0x928ae7);
        }
      }
      _0xe4ecc4["size"] > 0 && this["_refreshSuggestionsChain"](_0xe4ecc4);
      for (const _0x56e164 of _0x5aeea2) this["fire"]("suggestionChanged", _0x56e164);
    }), _0x2c3460["model"]["on"]("applyOperation", (_0x437334, _0x31fa4a) => {
      const _0x39cfae = _0x31fa4a[0];
      if (!this["_suggestions"]["size"]) return;
      if (!_0x39cfae["isDocumentOperation"]) return;
      if (_0x39cfae["batch"]["isUndo"] || !_0x39cfae["batch"]["isLocal"]) return;
      let _0x831fba, _0xbef38b;
      switch (_0x39cfae["type"]) {
        case "insert":
          _0x831fba = _0x2c3460["model"]["createPositionAt"](_0x39cfae["position"]), _0xbef38b = _0x831fba["getShiftedBy"](_0x39cfae["howMany"]);
          break;
        case "split":
          _0x831fba = _0x2c3460["model"]["createPositionAt"](_0x39cfae["splitPosition"]), _0xbef38b = _0x2c3460["model"]["createPositionAt"](_0x39cfae["moveTargetPosition"]);
          break;
        case "move":
          _0x831fba = _0x2c3460["model"]["createPositionAt"](_0x39cfae["targetPosition"]), _0xbef38b = _0x831fba["getShiftedBy"](_0x39cfae["howMany"]);
          break;
        default:
          return;
      }
      const _0xd04827 = _0x2c3460["model"]["createRange"](_0x831fba, _0xbef38b);
      _0x2c3460["model"]["change"](() => {
        for (const { suggestion: _0x404a99, meta: _0x407443 } of this["_findSuggestions"](_0xd04827)) {
          if (_0x404a99["isMultiRange"]) continue;
          if ("formatInline" == _0x404a99["type"]) continue;
          const _0x48e27f = this["_getAttributeKey"](_0x404a99);
          if (_0x48e27f && this["_isBlockAttribute"](_0x48e27f) && "split" != _0x39cfae["type"]) continue;
          const _0x49a283 = _0x404a99["data"] && _0x404a99["data"]["multipleBlocks"];
          ("formatBlock" != _0x404a99["type"] || "split" == _0x39cfae["type"] && !_0x49a283) && (_0x407443["containsRangeInObject"] || "insertion" == _0x404a99["type"] && _0x407443["isOwn"] || _0x404a99["getFirstRange"]()["containsRange"](_0xd04827) && this["_breakSuggestionMarker"](_0x404a99, _0x831fba, _0xbef38b));
        }
      });
    }, { "priority": "lowest" }), _0x2c3460["model"]["on"]("deleteContent", (_0x3e1b42, _0x4e908b) => {
      const _0x360699 = _0x4e908b[0], _0x2e1ad9 = _0x4e908b[1];
      if (_0x2e1ad9 && _0x2e1ad9["forceDefaultExecution"]) return;
      if (this["_isForcedDefaultExecutionBlock"]) return;
      if (!this["trackChangesCommand"]["value"]) return;
      if (_0x360699["isCollapsed"]) return;
      const _0x5897f9 = _0x2c3460["model"]["schema"], { start: _0x4269ea, end: _0x225358 } = _0x360699["getFirstRange"](), _0x58a359 = _0x4269ea["nodeAfter"] && _0x5897f9["isLimit"](_0x4269ea["nodeAfter"]) ? null : _0x5897f9["getNearestSelectionRange"](_0x4269ea, "forward"), _0x16fb95 = _0x225358["nodeBefore"] && _0x5897f9["isLimit"](_0x225358["nodeBefore"]) ? null : _0x5897f9["getNearestSelectionRange"](_0x225358, "backward"), _0x4444a3 = _0x2c3460["model"]["createRange"](_0x58a359 ? _0x58a359["start"] : _0x4269ea, _0x16fb95 ? _0x16fb95["end"] : _0x225358);
      _0x2c3460["model"]["change"]((_0x19fbdc) => {
        this["markDeletion"](_0x4444a3);
        const _0xf2db9b = _0x2c3460["model"]["schema"]["getNearestSelectionRange"](_0x4444a3["start"]);
        _0x360699["is"]("documentSelection") ? _0x19fbdc["setSelection"](_0xf2db9b) : _0x360699["setTo"](_0xf2db9b);
      }), _0x3e1b42["stop"]();
    }, { "priority": priorities["normal"] + 10 }), _0x2c3460["model"]["on"]("insertContent", (_0x148975, _0x4af727) => {
      const _0x5f5d38 = _0x4af727[_0x4af727["length"] - 1];
      _0x5f5d38 && _0x5f5d38["forceDefaultExecution"] || this["_isForcedDefaultExecutionBlock"] || this["trackChangesCommand"]["value"] && (_0x2c3460["model"]["change"](() => {
        let _0xa0d807 = _0x2c3460["model"]["insertContent"](_0x4af727[0], _0x4af727[1], _0x4af727[2], { "forceDefaultExecution": true });
        if (!_0xa0d807) return;
        _0x148975["return"] = _0xa0d807["clone"]();
        const _0x11a3a6 = _0xa0d807["end"]["nodeBefore"], _0x11fc2d = _0x2c3460["model"]["schema"];
        _0x11a3a6 && _0x11fc2d["isBlock"](_0x11a3a6) && !_0x11fc2d["isObject"](_0x11a3a6) && (_0xa0d807 = _0x2c3460["model"]["createRange"](_0xa0d807["start"], _0x2c3460["model"]["createPositionAt"](_0x11a3a6, "end"))), this["markInsertion"](_0xa0d807);
      }), _0x148975["stop"]());
    }, { "priority": "high" }), this["editor"]["commands"]["add"]("trackChanges", this["trackChangesCommand"]), this["enableCommand"]("trackChanges");
    const _0x2c3501 = new x5(_0x2c3460, this["_suggestions"]);
    _0x2c3460["commands"]["add"]("acceptSuggestion", _0x2c3501), this["enableCommand"]("acceptSuggestion");
    const _0x33f0d5 = new O6(_0x2c3460, this["_suggestions"]);
    _0x2c3460["commands"]["add"]("discardSuggestion", _0x33f0d5), this["enableCommand"]("discardSuggestion"), _0x2c3460["commands"]["add"]("acceptAllSuggestions", new R6(_0x2c3460, _0x2c3501, this["_suggestions"])), this["enableCommand"]("acceptAllSuggestions"), _0x2c3460["commands"]["add"]("discardAllSuggestions", new R6(_0x2c3460, _0x33f0d5, this["_suggestions"])), this["enableCommand"]("discardAllSuggestions"), _0x2c3460["commands"]["add"]("acceptSelectedSuggestions", new E6(_0x2c3460, _0x2c3501, this["_suggestions"])), this["enableCommand"]("acceptSelectedSuggestions"), _0x2c3460["commands"]["add"]("discardSelectedSuggestions", new E6(_0x2c3460, _0x33f0d5, this["_suggestions"])), this["enableCommand"]("discardSelectedSuggestions");
    const _0x318905 = _0x2c3460["plugins"]["get"]("CommentsRepository");
    this["listenTo"](_0x318905, "addComment", (_0x21187b, { threadId: _0x3db976 }) => {
      const _0x1d7350 = this["_suggestions"]["get"](_0x3db976);
      _0x1d7350 && _0x1d7350["commentThread"] && 1 === _0x1d7350["commentThread"]["length"] && this["_updateSuggestionData"](_0x3db976, { "hasComments": true });
    }, { "priority": "low" }), this["listenTo"](_0x318905, "removeComment", (_0x256912, { threadId: _0x310de6 }) => {
      const _0x337050 = this["_suggestions"]["get"](_0x310de6);
      _0x337050 && _0x337050["commentThread"] && !_0x337050["commentThread"]["length"] && this["_updateSuggestionData"](_0x310de6, { "hasComments": false });
    }, { "priority": "low" });
  }
  set ["adapter"](_0x38e34a) {
    if (this["_adapter"]) throw new CKEditorError("track-changes-adapter-already-set", this);
    this["_adapter"] = _0x38e34a;
  }
  get ["adapter"]() {
    return this["_adapter"];
  }
  ["getSuggestions"]({ skipNotAttached: _0x1d5184 = false, toJSON: _0x5246bf = false } = {}) {
    const _0x20b77c = [];
    for (const _0x1cfa3e of this["_suggestions"]["values"]()) _0x1d5184 && !_0x1cfa3e["isInContent"] || _0x20b77c["push"](_0x1cfa3e);
    return _0x5246bf ? _0x20b77c["map"]((_0x29b29f) => _0x29b29f["toJSON"]()) : _0x20b77c;
  }
  ["getSuggestion"](_0x5970d6) {
    const _0x29d5be = this["_suggestions"]["get"](_0x5970d6);
    if (!_0x29d5be) throw new CKEditorError("track-changes-suggestion-not-found", this);
    return _0x29d5be;
  }
  ["hasSuggestion"](_0x354a60) {
    return this["_suggestions"]["has"](_0x354a60);
  }
  ["addSuggestionData"](_0x5f3c6f) {
    const { authorId: _0x119b3b, id: _0x2c953b, attributes: _0x59be9d } = _0x5f3c6f, [_0x1a0985, _0x24b27e] = _0x5f3c6f["type"]["split"](":"), _0x1d6160 = this["_suggestions"]["get"](_0x2c953b) || this["_createSuggestion"](_0x1a0985, _0x24b27e, _0x2c953b, _0x119b3b, _0x59be9d);
    if (this["_addThreadToSuggestion"](_0x1d6160), this["_checkSuggestionCorrectness"](_0x1d6160, _0x1a0985, _0x24b27e || null, _0x119b3b), _0x1d6160["createdAt"] = _0x5f3c6f["createdAt"], _0x1d6160["_isDataLoaded"] = true, _0x59be9d && _0x59be9d["@external"]) {
      const _0x5933e9 = _0x59be9d["@external"], _0x13b9dc = this["_getExternalAuthor"](_0x5933e9["authorName"]);
      _0x1d6160["authoredAt"] = _0x5933e9["createdAt"], _0x1d6160["author"] = _0x13b9dc, _0x1d6160["isExternal"] = true;
    } else _0x1d6160["authoredAt"] = _0x5f3c6f["createdAt"];
    switch (_0x5f3c6f["data"] && (_0x1d6160["data"] = _0x5f3c6f["data"]), _0x5f3c6f["attributes"] && (_0x1d6160["attributes"] = _0x5f3c6f["attributes"]), this["_adapter"] && this["_adapter"]["addSuggestion"] || (_0x1d6160["_saved"] = true), this["_suggestionState"]["get"](_0x1d6160)) {
      case "notReady":
        this["_suggestionState"]["set"](_0x1d6160, "dataReady");
        break;
      case "markerReady":
        _0x1d6160["isInContent"] ? (this["_joinWithAdjacentSuggestions"](/* @__PURE__ */ new Set([_0x1d6160])), this["_refreshSuggestionsChain"](/* @__PURE__ */ new Set([_0x1d6160])), this["_suggestionState"]["set"](_0x1d6160, "ready"), this["fire"]("suggestionLoaded", _0x1d6160)) : this["_suggestionState"]["set"](_0x1d6160, "removed");
    }
    return _0x1d6160;
  }
  ["acceptSuggestion"](_0x437ed0) {
    this["forceDefaultExecution"](() => {
      this["editor"]["model"]["change"](() => {
        for (const _0xcffaa4 of _0x437ed0["getAllAdjacentSuggestions"]()) _0xcffaa4["accept"]();
      });
    });
  }
  ["discardSuggestion"](_0x5506c5) {
    this["forceDefaultExecution"](() => {
      this["editor"]["model"]["change"](() => {
        for (const _0x14f755 of _0x5506c5["getAllAdjacentSuggestions"]()) _0x14f755["discard"]();
      });
    });
  }
  ["enableCommand"](_0x433cb1, _0x3589fa) {
    const _0x46a4ea = this["editor"]["commands"]["get"](_0x433cb1);
    if (!_0x46a4ea) throw new CKEditorError("track-changes-command-not-found", this, { "commandName": _0x433cb1 });
    if (this["_enabledCommands"]["has"](_0x46a4ea)) throw new CKEditorError("track-changes-enable-command-twice", this, { "commandName": _0x433cb1 });
    this["_enabledCommands"]["add"](_0x46a4ea), _0x3589fa && _0x46a4ea["on"]("execute", (_0x41489a, _0x4d2a59) => {
      this["trackChangesCommand"]["value"] && (this["_isForcedDefaultExecutionBlock"] || (_0x4d2a59["length"] > 0 && _0x4d2a59[_0x4d2a59["length"] - 1] && _0x4d2a59[_0x4d2a59["length"] - 1]["forceDefaultExecution"] ? _0x4d2a59["pop"]() : (_0x41489a["return"] = _0x3589fa((..._0x3e79e2) => _0x46a4ea["execute"](..._0x3e79e2, { "forceDefaultExecution": true }), ..._0x4d2a59), _0x41489a["stop"]())));
    }, { "priority": "high" });
  }
  ["forceDefaultExecution"](_0x361c31) {
    let _0x58095f, _0x98b82a;
    const _0x12707d = this["_isForcedDefaultExecutionBlock"];
    this["_isForcedDefaultExecutionBlock"] = true;
    try {
      _0x58095f = _0x361c31();
    } catch (_0x624d93) {
      _0x98b82a = _0x624d93;
    }
    return _0x12707d || (this["_isForcedDefaultExecutionBlock"] = false), _0x98b82a && CKEditorError["rethrowUnexpectedError"](_0x98b82a, this), _0x58095f;
  }
  ["markInsertion"](_0x21109b, _0x5f309a = null, _0x3c79ed = {}) {
    if (_0x21109b["isCollapsed"]) return null;
    const _0x1d8a74 = this["editor"]["plugins"]["get"]("Users")["me"];
    for (const { suggestion: _0x37e05a, meta: _0x1eac0e } of this["_findSuggestions"](_0x21109b, "insertion")) if (_0x1eac0e["isOwn"]) {
      if (!_0x1eac0e["isNextTo"]) {
        if (_0x1eac0e["containsRangeInObject"]) {
          if (!this["_mergeNestedSuggestions"] || !qt2(_0x37e05a, _0x3c79ed)) continue;
          return _0x37e05a;
        }
        if (qt2(_0x37e05a, _0x3c79ed)) return _0x37e05a;
        this["_breakSuggestionMarker"](_0x37e05a, _0x21109b["start"], _0x21109b["end"]);
        break;
      }
      if (_0x5f309a == _0x37e05a["subType"] && qt2(_0x37e05a, _0x3c79ed)) {
        const _0x5e695b = _0x37e05a["getFirstRange"]();
        return _0x5e695b["start"]["isEqual"](_0x21109b["end"]) ? this["_setSuggestionRange"](_0x37e05a, this["_model"]["createRange"](_0x21109b["start"], _0x5e695b["end"])) : this["_setSuggestionRange"](_0x37e05a, this["_model"]["createRange"](_0x5e695b["start"], _0x21109b["end"])), _0x37e05a;
      }
    }
    const _0x20f073 = uid(), _0x1440bd = _0x1d8a74["id"], _0x213b63 = _0x5f309a ? "insertion:" + _0x5f309a : "insertion", _0x141e97 = this["_setSuggestionData"]({ "id": _0x20f073, "type": _0x213b63, "createdAt": /* @__PURE__ */ new Date(), "authorId": _0x1440bd, "attributes": _0x3c79ed });
    return this["_addSuggestionMarker"](_0x213b63, _0x20f073, _0x1440bd, _0x21109b), _0x141e97;
  }
  ["markMultiRangeInsertion"](_0x14cc54, _0x480b2b = "multi", _0x234ad2 = {}) {
    const _0x4014be = this["editor"]["plugins"]["get"]("Users")["me"], _0x132ea1 = this["_suggestionFactory"]["getSuggestionCallback"]("insertion", _0x480b2b, "join");
    for (const _0x7766f3 of this["getSuggestions"]()) if (_0x7766f3["author"]["id"] == _0x4014be["id"] && "insertion" == _0x7766f3["type"] && _0x7766f3["subType"] == _0x480b2b && qt2(_0x7766f3, _0x234ad2) && (_0x132ea1(_0x7766f3["getRanges"](), _0x14cc54) || _0x132ea1(_0x14cc54, _0x7766f3["getRanges"]()))) {
      for (const _0x1daaed of _0x14cc54) _0x7766f3["addRange"](_0x1daaed);
      return _0x7766f3;
    }
    for (const { suggestion: _0x1bb8ad, meta: _0x495ec1 } of this["_findSuggestions"](_0x14cc54, "insertion")) {
      if (!_0x495ec1["isOwn"]) continue;
      if (!this["_mergeNestedSuggestions"] && _0x495ec1["containsRangeInObject"]) continue;
      if (!qt2(_0x1bb8ad, _0x234ad2)) continue;
      let _0x22b74d = true;
      for (const _0x1f8669 of _0x1bb8ad["getRanges"]()) for (const _0x299e0e of _0x14cc54) if (!_0x1f8669["containsRange"](_0x299e0e)) {
        _0x22b74d = false;
        break;
      }
      if (_0x22b74d) return _0x1bb8ad;
    }
    const _0x1d5043 = uid(), _0xc2fe65 = _0x4014be["id"], _0x4fc5f2 = "insertion:" + _0x480b2b, _0x1820b = this["_setSuggestionData"]({ "id": _0x1d5043, "type": _0x4fc5f2, "createdAt": /* @__PURE__ */ new Date(), "authorId": _0xc2fe65, "attributes": _0x234ad2 });
    for (const _0x414e8a of _0x14cc54) this["_addSuggestionMarker"](_0x4fc5f2, _0x1d5043, _0xc2fe65, _0x414e8a, u8["getMultiRangeId"]());
    return _0x1820b;
  }
  ["markInlineFormat"](_0xcc9e4d, _0xa4774e, _0x30ad78 = null, _0x4788e8 = {}) {
    if (_0x30ad78 = _0x30ad78 || Pt2(_0xa4774e), _0xcc9e4d["isCollapsed"]) return null;
    if ("never" === this["_trackFormatChanges"]) {
      const _0x52b1d0 = this["_suggestionFactory"]["getSuggestionCallback"]("formatInline", _0x30ad78, "accept");
      return this["forceDefaultExecution"](() => _0x52b1d0([_0xcc9e4d], _0xa4774e, _0x4788e8)), null;
    }
    const _0x5632d4 = this["editor"]["plugins"]["get"]("Users")["me"], _0x2c236a = [];
    if ("always" !== this["_trackFormatChanges"]) {
      for (const { suggestion: _0x52d82a, meta: _0x53ce64 } of this["_findSuggestions"](_0xcc9e4d, "insertion")) _0x53ce64["isOwn"] && !_0x53ce64["isInsideObject"] && _0x2c236a["push"](..._0x52d82a["getRanges"]());
    }
    const _0x13a15f = function(_0xb336b3, _0x4b66da) {
      const _0x32641d = [];
      for (const _0x4668ce of _0x4b66da) {
        const _0x45410a = _0xb336b3["getIntersection"](_0x4668ce);
        _0x45410a && _0x32641d["push"](_0x45410a);
      }
      return _0x32641d;
    }(_0xcc9e4d, _0x2c236a), _0x439243 = function(_0x5f4a96, _0x8293eb) {
      const _0x35ebbd = [_0x5f4a96];
      for (const _0x5aae22 of _0x8293eb) {
        let _0x3e00a2 = 0;
        for (; _0x3e00a2 < _0x35ebbd["length"]; ) {
          const _0x28b650 = _0x35ebbd[_0x3e00a2]["getDifference"](_0x5aae22);
          _0x35ebbd["splice"](_0x3e00a2, 1, ..._0x28b650), _0x3e00a2 += _0x28b650["length"];
        }
      }
      return _0x35ebbd;
    }(_0xcc9e4d, _0x2c236a);
    _0x13a15f["length"] && this["_model"]["change"](() => {
      for (const _0x54311b of _0x13a15f) {
        const _0x4bf93e = this["_suggestionFactory"]["getSuggestionCallback"]("formatInline", _0x30ad78, "accept");
        this["forceDefaultExecution"](() => _0x4bf93e([_0x54311b], _0xa4774e, _0x4788e8));
      }
    });
    for (const _0x234575 of _0x439243) {
      let _0x3c9614 = null, _0x50df4c = _0x234575["start"], _0x37ed2f = _0x234575["end"];
      for (const { suggestion: _0x1a4f10, meta: _0x3127dc } of this["_findSuggestions"](_0x234575, "formatInline")) {
        if (!_0x3127dc["isOwn"]) continue;
        if (_0x1a4f10["subType"] != _0x30ad78) continue;
        if (!qt2(_0x1a4f10, _0x4788e8)) continue;
        const _0x99c669 = _0x1a4f10["getFirstRange"]();
        if (_0x99c669["containsRange"](_0x234575, true)) return null;
        _0x50df4c = _0x50df4c["isBefore"](_0x99c669["start"]) ? _0x50df4c : _0x99c669["start"], _0x37ed2f = _0x37ed2f["isAfter"](_0x99c669["end"]) ? _0x37ed2f : _0x99c669["end"], _0x3c9614 ? _0x99c669["start"]["isBefore"](_0x3c9614["getFirstRange"]()["start"]) ? (_0x3c9614["removeMarkers"](), _0x3c9614 = _0x1a4f10) : _0x1a4f10["removeMarkers"]() : _0x3c9614 = _0x1a4f10;
      }
      const _0x10667a = this["_model"]["createRange"](_0x50df4c, _0x37ed2f);
      if (_0x3c9614) this["_setSuggestionRange"](_0x3c9614, _0x10667a);
      else {
        const _0x2978db = uid(), _0x341da2 = _0x5632d4["id"];
        this["_setSuggestionData"]({ "id": _0x2978db, "type": "formatInline:" + _0x30ad78, "data": _0xa4774e, "createdAt": /* @__PURE__ */ new Date(), "authorId": _0x341da2, "attributes": _0x4788e8 }), this["_addSuggestionMarker"]("formatInline:" + _0x30ad78, _0x2978db, _0x341da2, _0x10667a);
      }
    }
    return null;
  }
  ["markBlockFormat"](_0x3a20b3, _0x574111, _0x2a8ddf = [], _0x58e887 = null, _0x370a29 = {}) {
    _0x574111["formatGroupId"] || (_0x574111["formatGroupId"] = _0x574111["commandName"]), _0x574111["multipleBlocks"] = _0x3a20b3["is"]("range"), _0x58e887 = _0x58e887 || Pt2(_0x574111);
    const _0x29fdd7 = _0x2a8ddf["map"]((_0x9ab19f) => Lt2(_0x9ab19f, this["_model"])), _0x394151 = _0x3a20b3["is"]("range") ? _0x3a20b3 : Lt2(_0x3a20b3, this["_model"]);
    if ("never" === this["_trackFormatChanges"]) {
      const _0x81b991 = this["_suggestionFactory"]["getSuggestionCallback"]("formatBlock", _0x58e887, "accept");
      return this["forceDefaultExecution"](() => _0x81b991([_0x394151], _0x574111, _0x370a29)), null;
    }
    _0x29fdd7["push"](_0x394151);
    let _0x220752 = true;
    for (const _0x4af27a of _0x29fdd7) if (!this["_rangeIsInLocalUserInsertion"](_0x4af27a)) {
      _0x220752 = false;
      break;
    }
    if (_0x220752 && "always" !== this["_trackFormatChanges"]) {
      const _0x3222ec = this["_suggestionFactory"]["getSuggestionCallback"]("formatBlock", _0x58e887, "accept");
      return this["forceDefaultExecution"](() => _0x3222ec([_0x394151], _0x574111, _0x370a29)), null;
    }
    let _0x4c0133 = null, _0x257070 = _0x394151["start"], _0xc00875 = _0x394151["end"];
    for (const { suggestion: _0x56bf8b, meta: _0x37df64 } of this["_findSuggestions"](_0x394151, "formatBlock")) {
      if (!_0x37df64["isOwn"]) continue;
      if (_0x37df64["isNextTo"] || _0x37df64["containsRangeInObject"] || _0x37df64["isInsideObject"]) continue;
      if (_0x56bf8b["data"]["formatGroupId"] != _0x574111["formatGroupId"]) continue;
      if (!qt2(_0x56bf8b, _0x370a29)) continue;
      const _0x5a69cb = _0x56bf8b["getFirstRange"]();
      if (_0x56bf8b["subType"] == _0x58e887) {
        if (_0x5a69cb["containsRange"](_0x394151, true)) return null;
        _0x257070 = _0x257070["isBefore"](_0x5a69cb["start"]) ? _0x257070 : _0x5a69cb["start"], _0xc00875 = _0xc00875["isAfter"](_0x5a69cb["end"]) ? _0xc00875 : _0x5a69cb["end"], _0x4c0133 ? _0x5a69cb["start"]["isBefore"](_0x4c0133["getFirstRange"]()["start"]) ? (_0x4c0133["removeMarkers"](), _0x4c0133 = _0x56bf8b) : _0x56bf8b["removeMarkers"]() : _0x4c0133 = _0x56bf8b;
      } else {
        const _0x34a7f4 = _0x394151["getIntersection"](_0x5a69cb);
        this["_cutOutSuggestionMarker"](_0x56bf8b, _0x34a7f4);
      }
    }
    const _0x436e31 = this["editor"]["plugins"]["get"]("Users")["me"], _0x53d95e = uid(), _0x5df2e8 = _0x436e31["id"];
    if (_0x4c0133) return this["_setSuggestionRange"](_0x4c0133, this["_model"]["createRange"](_0x257070, _0xc00875)), _0x4c0133;
    {
      const _0x179a71 = this["_setSuggestionData"]({ "id": _0x53d95e, "type": "formatBlock:" + _0x58e887, "data": _0x574111, "createdAt": /* @__PURE__ */ new Date(), "authorId": _0x5df2e8, "attributes": _0x370a29 });
      return this["_addSuggestionMarker"]("formatBlock:" + _0x58e887, _0x53d95e, _0x5df2e8, this["_model"]["createRange"](_0x257070, _0xc00875)), _0x179a71;
    }
  }
  ["markMultiRangeBlockFormat"](_0x5c7bb8, _0x419ace, _0x2e5cb9 = [], _0x1c6494 = null, _0x332aee = {}) {
    _0x419ace["formatGroupId"] || (_0x419ace["formatGroupId"] = _0x419ace["commandName"]);
    const _0x399842 = _0x5c7bb8[0];
    _0x419ace["multipleBlocks"] = _0x399842["is"]("range"), _0x1c6494 = _0x1c6494 || Pt2(_0x419ace);
    const _0x50ca36 = _0x2e5cb9["map"]((_0x122ba3) => Lt2(_0x122ba3, this["_model"])), _0x5687e7 = _0x399842["is"]("range") ? _0x5c7bb8 : _0x5c7bb8["map"]((_0x1f73c1) => Lt2(_0x1f73c1, this["_model"]));
    if ("never" === this["_trackFormatChanges"]) {
      const _0x51fa37 = this["_suggestionFactory"]["getSuggestionCallback"]("formatBlock", _0x1c6494, "accept");
      return this["forceDefaultExecution"](() => _0x51fa37(_0x5687e7, _0x419ace, _0x332aee)), null;
    }
    _0x50ca36["push"](..._0x5687e7);
    let _0x37f2b0 = true;
    for (const _0x4de268 of _0x50ca36) if (!this["_rangeIsInLocalUserInsertion"](_0x4de268)) {
      _0x37f2b0 = false;
      break;
    }
    if (_0x37f2b0 && "always" !== this["_trackFormatChanges"]) {
      const _0x425c17 = this["_suggestionFactory"]["getSuggestionCallback"]("formatBlock", _0x1c6494, "accept");
      return this["forceDefaultExecution"](() => _0x425c17(_0x5687e7, _0x419ace, _0x332aee)), null;
    }
    const _0xacad1d = this["editor"]["plugins"]["get"]("Users")["me"];
    for (const _0x13b3a9 of this["getSuggestions"]()) {
      if (_0x13b3a9["author"]["id"] != _0xacad1d["id"]) continue;
      if ("formatBlock" != _0x13b3a9["type"] || _0x13b3a9["data"]["formatGroupId"] != _0x419ace["formatGroupId"]) continue;
      if (!qt2(_0x13b3a9, _0x332aee)) continue;
      const _0x4a1c51 = _0x13b3a9["subType"] == _0x1c6494;
      for (let _0x39f1a9 = 0; _0x39f1a9 < _0x5687e7["length"]; _0x39f1a9++) {
        const _0x227872 = _0x5687e7[_0x39f1a9];
        for (const _0x7a5a44 of _0x13b3a9["getMarkers"]()) {
          const _0x118c95 = _0x7a5a44["getRange"]();
          if (_0x227872["isEqual"](_0x118c95)) {
            _0x4a1c51 ? (_0x5687e7["splice"](_0x39f1a9, 1), _0x39f1a9--) : _0x13b3a9["removeMarker"](_0x7a5a44["name"]);
            break;
          }
        }
      }
    }
    if (0 == _0x5687e7["length"]) return null;
    const _0x32e1b5 = this["_suggestionFactory"]["getSuggestionCallback"]("formatBlock", _0x1c6494, "join");
    for (const _0x445ee3 of this["getSuggestions"]()) if (_0x445ee3["author"]["id"] == _0xacad1d["id"] && "formatBlock" == _0x445ee3["type"] && _0x445ee3["data"]["formatGroupId"] == _0x419ace["formatGroupId"] && _0x445ee3["subType"] == _0x1c6494 && qt2(_0x445ee3, _0x332aee) && (_0x32e1b5(_0x445ee3["getRanges"](), _0x5687e7) || _0x32e1b5(_0x5687e7, _0x445ee3["getRanges"]()))) {
      for (const _0x550b40 of _0x5687e7) _0x445ee3["addRange"](_0x550b40);
      return _0x445ee3;
    }
    const _0xfc7ba = uid(), _0x55635f = _0xacad1d["id"], _0x37a356 = "formatBlock:" + _0x1c6494, _0x20e4f9 = this["_setSuggestionData"]({ "id": _0xfc7ba, "type": _0x37a356, "data": _0x419ace, "createdAt": /* @__PURE__ */ new Date(), "authorId": _0x55635f, "attributes": _0x332aee });
    for (const _0x1b9565 of _0x5687e7) this["_addSuggestionMarker"](_0x37a356, _0xfc7ba, _0x55635f, _0x1b9565, u8["getMultiRangeId"]());
    return _0x20e4f9;
  }
  ["markDeletion"](_0x445b8a, _0x37a4f3 = null, _0x43b3b7 = {}) {
    if (_0x445b8a["isCollapsed"]) return null;
    const _0x10501b = this["editor"]["plugins"]["get"]("Users")["me"], _0x265b5e = new LiveRange(_0x445b8a["start"], _0x445b8a["end"]);
    for (const { suggestion: _0x3257cc, meta: _0x15402b } of this["_findSuggestions"](_0x265b5e, "insertion")) if (_0x15402b["isOwn"] && !_0x15402b["isNextTo"]) {
      if (_0x3257cc["isMultiRange"]) {
        const _0x1e1233 = _0x3257cc["getRanges"]()["filter"]((_0x45c15e) => "$graveyard" != _0x45c15e["root"]["rootName"]);
        _0x1e1233["every"]((_0x2c4028) => _0x265b5e["containsRange"](_0x2c4028, true)) && _0x3257cc["discard"]();
        if (_0x1e1233["some"]((_0x56ca17) => _0x56ca17["containsRange"](_0x265b5e, true))) {
          const _0x5e18cb = this["_suggestionFactory"]["getSuggestionCallback"]("deletion", _0x37a4f3, "accept");
          return this["forceDefaultExecution"](() => _0x5e18cb([_0x265b5e], null, _0x43b3b7)), null;
        }
      } else {
        const _0x41e84a = _0x265b5e["getIntersection"](_0x3257cc["getFirstRange"]());
        null !== _0x41e84a && _0x3257cc["_onDiscard"]([_0x41e84a], null, _0x43b3b7);
      }
    }
    if (_0x265b5e["detach"](), _0x265b5e["isCollapsed"] || "$graveyard" == _0x265b5e["root"]["rootName"]) return null;
    let _0x2db37a = null, _0x37cb44 = _0x265b5e["start"], _0x39b570 = _0x265b5e["end"];
    const _0x34daac = this["_findSuggestions"](_0x265b5e, "deletion");
    for (const { suggestion: _0x1e4ceb, meta: _0x56f424 } of _0x34daac) {
      const _0x41cdaf = this["_model"]["createRange"](_0x37cb44, _0x39b570);
      if (_0x56f424["isOwn"] && (this["_mergeNestedSuggestions"] || !_0x56f424["containsRangeInObject"] && !_0x56f424["isInsideObject"])) {
        if (_0x1e4ceb["isMultiRange"]) {
          if (!qt2(_0x1e4ceb, _0x43b3b7)) continue;
          let _0xfc8738 = true;
          for (const _0x229ba5 of _0x1e4ceb["getRanges"]()) {
            if (_0x229ba5["containsRange"](_0x41cdaf, true)) return _0x1e4ceb;
            _0x41cdaf["containsRange"](_0x229ba5) || (_0xfc8738 = false);
          }
          _0xfc8738 && _0x1e4ceb["discard"]();
        } else {
          const _0x2e6a98 = _0x1e4ceb["getFirstRange"]();
          if (_0x2e6a98["containsRange"](_0x41cdaf, true)) return _0x1e4ceb;
          if (!qt2(_0x1e4ceb, _0x43b3b7)) {
            _0x41cdaf["containsRange"](_0x2e6a98) ? _0x1e4ceb["removeMarkers"]() : _0x2e6a98["containsPosition"](_0x37cb44) ? _0x37cb44 = _0x2e6a98["end"] : _0x2e6a98["containsPosition"](_0x39b570) && (_0x39b570 = _0x2e6a98["start"]);
            continue;
          }
          _0x37cb44 = _0x37cb44["isBefore"](_0x2e6a98["start"]) ? _0x37cb44 : _0x2e6a98["start"], _0x39b570 = _0x39b570["isAfter"](_0x2e6a98["end"]) ? _0x39b570 : _0x2e6a98["end"], _0x43b3b7 = Object["assign"]({}, _0x1e4ceb["attributes"]), _0x2db37a ? _0x2e6a98["start"]["isBefore"](_0x2db37a["getFirstRange"]()["start"]) ? (_0x2db37a["removeMarkers"](), _0x2db37a = _0x1e4ceb) : _0x1e4ceb["removeMarkers"]() : _0x2db37a = _0x1e4ceb;
        }
      }
    }
    if (_0x2db37a) return this["_setSuggestionRange"](_0x2db37a, this["_model"]["createRange"](_0x37cb44, _0x39b570)), _0x2db37a;
    {
      const _0x1727c5 = uid(), _0x49cb98 = this["_model"]["createRange"](_0x37cb44, _0x39b570), _0x3ffd25 = _0x10501b["id"], _0x4ec40f = _0x37a4f3 ? "deletion:" + _0x37a4f3 : "deletion", _0x326f88 = this["_setSuggestionData"]({ "id": _0x1727c5, "type": _0x4ec40f, "createdAt": /* @__PURE__ */ new Date(), "authorId": _0x3ffd25, "attributes": _0x43b3b7 });
      return this["_addSuggestionMarker"](_0x4ec40f, _0x1727c5, _0x3ffd25, _0x49cb98), _0x326f88;
    }
  }
  ["markMultiRangeDeletion"](_0xdeac5d, _0x3c447a = "multi", _0x5a7674 = {}) {
    const _0xce35c5 = this["editor"]["plugins"]["get"]("Users")["me"], _0x3fc5d7 = _0xdeac5d["map"]((_0x3397db) => new LiveRange(_0x3397db["start"], _0x3397db["end"])), _0x1ba4e3 = /* @__PURE__ */ new Set();
    for (const { suggestion: _0x5b9b0f, meta: _0xb1272b } of this["_findSuggestions"](_0x3fc5d7, "insertion")) _0xb1272b["isOwn"] && !_0xb1272b["isNextTo"] && _0x1ba4e3["add"](_0x5b9b0f);
    for (const _0x269cdc of _0x1ba4e3) if (_0x269cdc["isMultiRange"]) {
      const _0x36f99b = _0x269cdc["getRanges"]();
      (!_0x269cdc["attributes"] || !_0x269cdc["attributes"]["skipNestingCheck"]) && (_0x36f99b["every"]((_0x742fe2) => _0x3fc5d7["some"]((_0x7fa007) => _0x7fa007["containsRange"](_0x742fe2, true))) && _0x269cdc["discard"]());
      if (_0x3fc5d7["every"]((_0xe654de) => _0x36f99b["some"]((_0x4636f9) => _0x4636f9["containsRange"](_0xe654de, true)))) {
        const _0x489172 = this["_suggestionFactory"]["getSuggestionCallback"]("deletion", _0x3c447a, "accept");
        return this["forceDefaultExecution"](() => _0x489172(_0xdeac5d, null, _0x5a7674)), null;
      }
    } else {
      const _0x3220a7 = _0x269cdc["getFirstRange"]();
      _0x3fc5d7["some"]((_0x19a4bc) => _0x19a4bc["containsRange"](_0x3220a7, true)) && _0x269cdc["discard"]();
      if (_0x3fc5d7["every"]((_0x17cd3d) => _0x3220a7["containsRange"](_0x17cd3d, true))) {
        const _0x178c28 = this["_suggestionFactory"]["getSuggestionCallback"]("deletion", _0x3c447a, "accept");
        return this["forceDefaultExecution"](() => _0x178c28(_0x3fc5d7, null, _0x5a7674)), null;
      }
    }
    const _0x265342 = this["_suggestionFactory"]["getSuggestionCallback"]("deletion", _0x3c447a, "join");
    let _0x1c18d3 = null;
    for (const _0x1bbf98 of this["getSuggestions"]()) if (_0x1bbf98["author"]["id"] == _0xce35c5["id"] && _0x1bbf98["isInContent"] && "deletion" == _0x1bbf98["type"] && _0x1bbf98["subType"] == _0x3c447a && qt2(_0x1bbf98, _0x5a7674) && (_0x265342(_0x1bbf98["getRanges"](), _0x3fc5d7) || _0x265342(_0x3fc5d7, _0x1bbf98["getRanges"]()))) {
      if (_0x1c18d3) {
        if (_0x1bbf98["commentThread"] && _0x1bbf98["commentThread"]["length"]) continue;
        for (const _0x181123 of _0x1bbf98["getRanges"]()) _0x1c18d3["isIntersectingWithRange"](_0x181123) || _0x1c18d3["addRange"](_0x181123);
        _0x1bbf98["removeMarkers"]();
      } else {
        _0x1c18d3 = _0x1bbf98;
        for (const _0x3f4742 of _0x3fc5d7) _0x1bbf98["isIntersectingWithRange"](_0x3f4742) || _0x1bbf98["addRange"](_0x3f4742);
      }
    }
    if (_0x1c18d3) return _0x1c18d3;
    _0x1ba4e3["clear"]();
    for (const { suggestion: _0x47a7ec, meta: _0x4604aa } of this["_findSuggestions"](_0x3fc5d7, "deletion")) _0x4604aa["isOwn"] && (this["_mergeNestedSuggestions"] || !_0x4604aa["containsRangeInObject"] && !_0x4604aa["isInsideObject"]) && qt2(_0x47a7ec, _0x5a7674) && _0x1ba4e3["add"](_0x47a7ec);
    for (const _0x320da8 of _0x1ba4e3) {
      const _0x2aae50 = _0x320da8["getRanges"]();
      if (!_0x5a7674 || !_0x5a7674["skipNestingCheck"]) {
        if (_0x3fc5d7["every"]((_0x3e3e28) => _0x2aae50["some"]((_0x1dc37f) => _0x1dc37f["containsRange"](_0x3e3e28, true)))) return _0x320da8;
      }
      (!_0x320da8["attributes"] || !_0x320da8["attributes"]["skipNestingCheck"]) && (_0x2aae50["every"]((_0x26cd8a) => _0x3fc5d7["some"]((_0x22d020) => _0x22d020["containsRange"](_0x26cd8a, true))) && _0x320da8["discard"]());
    }
    const _0xb46f55 = uid(), _0x1def2e = _0xce35c5["id"], _0x2d1d81 = "deletion:" + _0x3c447a, _0xcda478 = this["_setSuggestionData"]({ "id": _0xb46f55, "type": _0x2d1d81, "createdAt": /* @__PURE__ */ new Date(), "authorId": _0x1def2e, "attributes": _0x5a7674 });
    for (const _0x4558ac of _0x3fc5d7) _0x4558ac["detach"](), _0x4558ac["isCollapsed"] || "$graveyard" == _0x4558ac["root"]["rootName"] || this["_addSuggestionMarker"](_0x2d1d81, _0xb46f55, _0x1def2e, _0x4558ac, u8["getMultiRangeId"]());
    return _0xcda478;
  }
  ["markAttributeChange"](_0x125db4, _0x108b46, _0x6d34a3, _0x5bd338, _0xc0ac8f) {
    if (_0x125db4["isCollapsed"]) return [];
    if ("never" === this["_trackFormatChanges"]) return [];
    const _0x2dc753 = this["editor"]["plugins"]["get"]("Users")["me"]["id"], _0x327b5a = Array["from"](this["_suggestions"]["values"]())["filter"]((_0x159453) => "attribute" == _0x159453["type"] && _0x159453["data"]["key"] == _0x108b46 && _0x159453["isIntersectingWithRange"](_0x125db4));
    if ("default" === this["_trackFormatChanges"]) {
      const _0x26f09e = this["_findSuggestions"](_0x125db4, "insertion")["filter"](({ meta: _0x396deb }) => _0x396deb["isOwn"] && !_0x396deb["isInsideObject"] && !_0x396deb["isNextTo"])["map"](({ suggestion: _0x59a006 }) => _0x59a006);
      _0x327b5a["unshift"](..._0x26f09e);
    }
    const _0x579588 = /* @__PURE__ */ new Map([[_0x125db4, _0x6d34a3]]);
    for (const _0x299f11 of _0x327b5a) {
      const _0x5663d6 = "attribute" == _0x299f11["type"] ? _0x299f11["data"]["oldValue"] : void 0, _0x34b0d3 = _0x299f11["getFirstRange"](), _0xbe3de4 = Array["from"](_0x579588["keys"]())["find"]((_0xb20cf) => _0xb20cf["isIntersecting"](_0x34b0d3));
      if (!_0xbe3de4) continue;
      const _0x16fd31 = _0xbe3de4["getDifference"](_0x34b0d3);
      this["_isBlockAttribute"](_0x108b46) && "insertion" == _0x299f11["type"] && 0 != _0x16fd31["length"] || (_0x579588["delete"](_0xbe3de4), _0x16fd31["forEach"]((_0xb078ed) => {
        _0x579588["set"](_0xb078ed, _0x6d34a3);
      }), "insertion" != _0x299f11["type"] && _0x5663d6 != _0x5bd338 && _0x579588["set"](_0xbe3de4["getIntersection"](_0x34b0d3), _0x5663d6));
    }
    const _0x2b8ce0 = [];
    for (const [_0x2a744d, _0x59da48] of _0x579588) {
      const _0x4ad0a7 = uid(), _0x40b3f6 = { "key": _0x108b46, "oldValue": _0x59da48, "newValue": _0x5bd338 };
      _0x108b46["length"] > 37 && console["warn"]("Creating a suggestion for attribute with too long attribute key. This may lead to errors. Change the attribute key to a value shorter than 37 characters.", { "key": _0x108b46 });
      const _0x37d023 = ("attribute:" + (_0x108b46 + "|" + Pt2({ "newValue": _0x5bd338 })))["substring"](0, 60), _0x5d0187 = this["_setSuggestionData"]({ "id": _0x4ad0a7, "type": _0x37d023, "data": _0x40b3f6, "createdAt": /* @__PURE__ */ new Date(), "authorId": _0x2dc753, "attributes": _0xc0ac8f });
      _0x2b8ce0["push"](_0x5d0187), this["_addSuggestionMarker"](_0x37d023, _0x4ad0a7, _0x2dc753, _0x2a744d);
    }
    return _0x2b8ce0;
  }
  ["enableDefaultAttributesIntegration"](_0xf88805) {
    this["enableCommand"](_0xf88805, (_0x26261a, ..._0x489514) => {
      this["_recordAttributeChanges"](() => {
        _0x26261a(..._0x489514);
      });
    });
  }
  ["registerBlockAttribute"](_0x5f2bc7) {
    this["_blockAttributeKeys"]["add"](_0x5f2bc7);
  }
  ["registerInlineAttribute"](_0x5f1376) {
    this["_inlineAttributeKeys"]["add"](_0x5f1376);
  }
  ["_getAttributeKey"](_0x3b4630) {
    return "attribute" == _0x3b4630["type"] ? _0x3b4630["subType"]["split"]("|")[0] : null;
  }
  ["_setSuggestionRange"](_0x31f6de, _0x5bccd5) {
    const _0xd958c4 = _0x31f6de["getFirstMarker"]();
    this["_model"]["change"]((_0x2574c3) => {
      _0x2574c3["updateMarker"](_0xd958c4, { "range": _0x5bccd5 });
    });
  }
  ["_addThreadToSuggestion"](_0x43ddbe) {
    const _0x121857 = _0x43ddbe["id"], _0x5b8f90 = this["editor"]["config"]["get"]("collaboration.channelId");
    this["_commentsRepository"]["hasCommentThread"](_0x121857) || this["_commentsRepository"]["addCommentThread"]({ "channelId": _0x5b8f90, "threadId": _0x121857, "isResolvable": false, "isSubmitted": true });
    const _0xcfe6d1 = this["_commentsRepository"]["getCommentThread"](_0x121857);
    _0xcfe6d1["unbind"]("isRemovable"), _0xcfe6d1["isRemovable"] = false, _0x43ddbe["commentThread"] = _0xcfe6d1;
  }
  ["_checkSuggestionCorrectness"](_0x41d197, _0x2aa81f, _0x1d4cf6, _0x146924) {
    if (_0x41d197["type"] != _0x2aa81f || _0x41d197["subType"] != _0x1d4cf6 || _0x41d197["creator"]["id"] != _0x146924) throw this["editor"]["enableReadOnlyMode"]("track-changes-suggestion-data-mismatch"), new CKEditorError("track-changes-suggestion-data-mismatch", this);
  }
  ["_cutOutSuggestionMarker"](_0x4e925a, _0x387b81) {
    const _0x42def9 = _0x4e925a["getFirstRange"]();
    if (_0x387b81["isEqual"](_0x42def9)) _0x4e925a["removeMarkers"]();
    else {
      if (_0x42def9["containsRange"](_0x387b81)) {
        const _0x207878 = this["_model"]["createPositionAt"](_0x387b81["start"]["nodeBefore"], "end");
        this["_setSuggestionRange"](_0x4e925a, this["_model"]["createRange"](_0x42def9["start"], _0x207878));
        const _0x5ddda3 = uid(), _0x693198 = _0x4e925a["creator"]["id"], _0x2917e9 = _0x4e925a["type"] + ":" + _0x4e925a["subType"];
        this["_setSuggestionData"]({ "id": _0x5ddda3, "type": _0x2917e9, "createdAt": /* @__PURE__ */ new Date(), "authorId": _0x693198, "data": _0x4e925a["data"], "attributes": _0x4e925a["attributes"] });
        const _0x3de758 = this["_model"]["createPositionAt"](_0x387b81["end"]["parent"], "after"), _0x49f233 = this["_model"]["createRange"](_0x3de758, _0x42def9["end"]);
        this["_addSuggestionMarker"](_0x2917e9, _0x5ddda3, _0x693198, _0x49f233);
      } else {
        if (_0x42def9["containsPosition"](_0x387b81["start"])) {
          const _0x1a09e2 = this["_model"]["createPositionAt"](_0x387b81["start"]["nodeBefore"], "end");
          this["_setSuggestionRange"](_0x4e925a, this["_model"]["createRange"](_0x42def9["start"], _0x1a09e2));
        } else {
          const _0x5f3781 = this["_model"]["createPositionAt"](_0x387b81["end"]["parent"], "after");
          this["_setSuggestionRange"](_0x4e925a, this["_model"]["createRange"](_0x5f3781, _0x42def9["end"]));
        }
      }
    }
  }
  ["_rangeIsInLocalUserInsertion"](_0x2ca19a) {
    for (const { suggestion: _0x506fa6, meta: _0x41e576 } of this["_findSuggestions"](_0x2ca19a, "insertion")) {
      if (!_0x41e576["isOwn"]) continue;
      const _0x47f316 = _0x506fa6["getRanges"]();
      for (const _0x4388b7 of _0x47f316) if (!_0x2ca19a["getDifference"](_0x4388b7)["length"]) return true;
    }
    return false;
  }
  ["_getAuthorFromId"](_0x9d5116) {
    const _0x3a46d2 = this["editor"]["plugins"]["get"]("Users")["getUser"](_0x9d5116);
    if (!_0x3a46d2) throw new CKEditorError("track-changes-user-not-found", this);
    return _0x3a46d2;
  }
  ["_getExternalAuthor"](_0x18470d) {
    const _0x2917fb = this["editor"]["plugins"]["get"]("Users"), _0x391b73 = M("external:" + _0x18470d), _0x57e349 = _0x2917fb["getUser"](_0x391b73);
    return _0x57e349 || _0x2917fb["addUser"]({ "id": _0x391b73, "name": _0x18470d });
  }
  ["_createSuggestion"](_0x1a56cb, _0x2cb445, _0xc00c3e, _0x2d57d9, _0x396eab) {
    const _0x342efc = this["_getAuthorFromId"](_0x2d57d9), _0x565b0f = this["_suggestionFactory"]["buildSuggestion"](_0x1a56cb, _0x2cb445, _0xc00c3e, _0x342efc, _0x396eab, (_0x40ed72) => {
      this["_updateSuggestionData"](_0xc00c3e, { "attributes": _0x40ed72 });
      const _0x1722cb = this["getSuggestion"](_0xc00c3e);
      this["_joinWithAdjacentSuggestions"](/* @__PURE__ */ new Set([_0x1722cb])), this["_refreshSuggestionsChain"](/* @__PURE__ */ new Set([_0x1722cb]));
    });
    return this["listenTo"](_0x565b0f, "accept", () => {
      this["_updateSuggestionData"](_0xc00c3e, { "state": "accepted" });
    }, { "priority": "high" }), this["listenTo"](_0x565b0f, "discard", () => {
      this["_updateSuggestionData"](_0xc00c3e, { "state": "rejected" });
    }, { "priority": "high" }), this["_suggestions"]["set"](_0xc00c3e, _0x565b0f), this["_suggestionState"]["set"](_0x565b0f, "notReady"), _0x565b0f;
  }
  ["_splitMarkerName"](_0x2250fe) {
    const _0x3afd71 = _0x2250fe["split"](":");
    return { "group": _0x3afd71[0], "type": _0x3afd71[1], "subType": _0x3afd71["length"] >= 5 ? _0x3afd71[2] : null, "id": _0x3afd71["length"] < 5 ? _0x3afd71[2] : _0x3afd71[3], "authorId": _0x3afd71["length"] < 5 ? _0x3afd71[3] : _0x3afd71[4], "markerCount": 6 == _0x3afd71["length"] ? _0x3afd71[5] : null };
  }
  ["_breakSuggestionMarker"](_0x512290, _0x5929e4, _0x37a7c9) {
    const _0x3588cd = _0x512290["getFirstRange"](), _0x193929 = _0x3588cd["start"], _0x5198c2 = _0x3588cd["end"];
    this["_setSuggestionRange"](_0x512290, this["_model"]["createRange"](_0x193929, _0x5929e4));
    const _0x27a6df = uid(), _0x282c28 = _0x512290["creator"]["id"], _0x5aef2c = _0x512290["type"] + (_0x512290["subType"] ? ":" + _0x512290["subType"] : "");
    this["_setSuggestionData"]({ "id": _0x27a6df, "type": _0x5aef2c, "createdAt": /* @__PURE__ */ new Date(), "authorId": _0x282c28, "originalSuggestionId": _0x512290["id"], "attributes": _0x512290["attributes"], "data": _0x512290["data"] });
    const _0x3ad01e = this["_getAttributeKey"](_0x512290);
    ("formatBlock" == _0x512290["type"] || _0x3ad01e && this["_isBlockAttribute"](_0x3ad01e)) && (_0x37a7c9 = this["_model"]["createPositionBefore"](_0x37a7c9["parent"])), this["_addSuggestionMarker"](_0x5aef2c, _0x27a6df, _0x282c28, this["_model"]["createRange"](_0x37a7c9, _0x5198c2));
  }
  ["_findSuggestions"](_0xba21f1, _0x31c451 = null) {
    const _0x2c7e35 = [], _0x1bec8f = this["editor"]["plugins"]["get"]("Users")["me"];
    Array["isArray"](_0xba21f1) || (_0xba21f1 = [_0xba21f1]);
    for (const _0x4a34b2 of this["getSuggestions"]()) {
      if (!_0x4a34b2["isInContent"]) continue;
      if (_0x31c451 && _0x4a34b2["type"] != _0x31c451) continue;
      let _0x3b5c91 = false;
      for (const _0x3e04b4 of _0x4a34b2["getRanges"]()) {
        for (const _0x24ff42 of _0xba21f1) {
          const _0x1d0026 = _0x24ff42["start"]["isEqual"](_0x3e04b4["end"]) || _0x24ff42["end"]["isEqual"](_0x3e04b4["start"]);
          if (_0x1d0026 || _0x24ff42["getIntersection"](_0x3e04b4)) {
            const _0x217134 = _0x24ff42["containsRange"](_0x3e04b4) && Et(this["_model"]["schema"], _0x3e04b4["start"], _0x24ff42), _0x560aae = _0x3e04b4["containsRange"](_0x24ff42) && Et(this["_model"]["schema"], _0x24ff42["start"], _0x3e04b4);
            _0x2c7e35["push"]({ "suggestion": _0x4a34b2, "meta": { "isOwn": _0x1bec8f == _0x4a34b2["author"], "isNextTo": _0x1d0026, "isInsideObject": _0x217134, "containsRangeInObject": _0x560aae } }), _0x3b5c91 = true;
            break;
          }
        }
        if (_0x3b5c91) break;
      }
    }
    return _0x2c7e35;
  }
  ["_addSuggestionMarker"](_0x25a2a2, _0x1444ee, _0x3271b7, _0x374af7, _0x25148b) {
    this["_model"]["change"]((_0x1d2126) => {
      let _0x313115 = "suggestion:" + _0x25a2a2 + ":" + _0x1444ee + ":" + _0x3271b7;
      _0x25148b && (_0x313115 = _0x313115 + ":" + _0x25148b), _0x1d2126["addMarker"](_0x313115, { "range": _0x374af7, "usingOperation": true, "affectsData": true });
    });
  }
  ["_removeSuggestion"](_0x3a7af6) {
    const _0x275e89 = _0x3a7af6["previous"], _0x16ffa1 = _0x3a7af6["next"];
    _0x3a7af6["previous"] = null, _0x3a7af6["next"] = null, null != _0x275e89 && _0x275e89["next"] == _0x3a7af6 && (_0x275e89["next"] = _0x16ffa1), null != _0x16ffa1 && _0x16ffa1["previous"] == _0x3a7af6 && (_0x16ffa1["previous"] = _0x275e89), "ready" == this["_suggestionState"]["get"](_0x3a7af6) && (this["_suggestionState"]["set"](_0x3a7af6, "removed"), this["fire"]("suggestionUnloaded", _0x3a7af6, _0x275e89, _0x16ffa1));
  }
  ["_setSuggestionData"](_0x52e51e) {
    const _0x11e73f = _0x52e51e["id"], _0x59743f = this["addSuggestionData"](_0x52e51e);
    if (this["_adapter"] && this["_adapter"]["addSuggestion"]) {
      const _0x1c581c = this["editor"]["plugins"]["get"]("PendingActions"), _0x54071a = _0x59743f["hasComments"], _0x1a955b = _0x59743f["subType"] ? _0x59743f["type"] + ":" + _0x59743f["subType"] : _0x59743f["type"], _0xe49c17 = this["editor"]["locale"], _0x37c3a5 = _0x1c581c["add"](o11(_0xe49c17, "PENDING_ACTION_SUGGESTION")), _0x42cb72 = { "id": _0x11e73f, "type": _0x1a955b, "hasComments": _0x54071a, "data": _0x52e51e["data"] || null, "originalSuggestionId": _0x52e51e["originalSuggestionId"] || null, "attributes": _0x59743f["attributes"] };
      this["_adapter"]["addSuggestion"](_0x42cb72)["then"]((_0x257f88) => {
        _0x59743f["_saved"] = true, _0x1c581c["remove"](_0x37c3a5), _0x257f88 && _0x257f88["createdAt"] && (this["_suggestions"]["get"](_0x11e73f)["createdAt"] = _0x257f88["createdAt"]);
      })["catch"]((_0x4899cd) => {
        throw logWarning("error-saving-suggestion-data-suggestion-discarded"), this["editor"]["model"]["enqueueChange"]({ "isUndoable": false }, () => {
          _0x59743f["discard"]();
        }), _0x59743f["stopListening"](), this["_suggestions"]["delete"](_0x59743f["id"]), this["_suggestionState"]["delete"](_0x59743f), _0x4899cd;
      });
    }
    return _0x59743f;
  }
  ["_isBlockAttribute"](_0x5809a7) {
    return this["_blockAttributeKeys"]["has"](_0x5809a7);
  }
  ["_updateSuggestionData"](_0x343572, _0x562085) {
    const _0x2865cd = this["editor"]["plugins"]["get"]("PendingActions"), _0x305691 = this["getSuggestion"](_0x343572);
    if (this["_adapter"] && this["_adapter"]["updateSuggestion"]) {
      if (_0x305691["_saved"]) {
        const _0x402a0e = _0x2865cd["add"](o11(this["editor"]["locale"], "PENDING_ACTION_SUGGESTION"));
        this["_adapter"]["updateSuggestion"](_0x343572, _0x562085)["then"](() => {
          _0x2865cd["remove"](_0x402a0e);
        });
      } else _0x305691["on"]("change:_saved", () => {
        this["_updateSuggestionData"](_0x343572, _0x562085);
      });
    }
  }
  ["_getSuggestionData"](_0x141bb6) {
    if (!this["_adapter"] || !this["_adapter"]["getSuggestion"]) throw new CKEditorError("track-changes-adapter-missing-getsuggestion", this);
    return this["_adapter"]["getSuggestion"](_0x141bb6);
  }
  ["_handleNewSuggestionMarker"](_0x117919) {
    const { id: _0x1df8c7, type: _0x35d96a, subType: _0x20c80e, authorId: _0x1e760b } = this["_splitMarkerName"](_0x117919), _0x1b5d02 = this["_suggestions"]["get"](_0x1df8c7) || this["_createSuggestion"](_0x35d96a, _0x20c80e, _0x1df8c7, _0x1e760b, {});
    switch (this["_checkSuggestionCorrectness"](_0x1b5d02, _0x35d96a, _0x20c80e, _0x1e760b), this["_suggestionState"]["get"](_0x1b5d02)) {
      case "notReady":
        this["_getSuggestionData"](_0x1df8c7)["then"]((_0x59995b) => {
          let _0x440556 = Promise["resolve"]();
          _0x59995b["hasComments"] && (_0x440556 = this["_commentsRepository"]["fetchCommentThread"]({ "channelId": this["editor"]["config"]["get"]("collaboration.channelId"), "threadId": _0x1df8c7 })), _0x440556["then"](() => {
            this["addSuggestionData"](_0x59995b)["_saved"] = true;
          });
        }), this["_suggestionState"]["set"](_0x1b5d02, "markerReady");
        break;
      case "removed":
        this["_updateSuggestionData"](_0x1df8c7, { "state": "open" });
      case "dataReady":
        this["_suggestionState"]["set"](_0x1b5d02, "ready"), this["fire"]("suggestionLoaded", _0x1b5d02);
        break;
      case "ready":
        this["fire"]("suggestionChanged", _0x1b5d02);
    }
    return _0x1b5d02["addMarkerName"](_0x117919), _0x1b5d02;
  }
  ["_refreshSuggestionsChain"](_0x401503) {
    const _0x596353 = Array["from"](_0x401503), _0x504710 = _0x596353["filter"]((_0x4c1664) => "attribute" == _0x4c1664["type"]);
    this["_refreshAttributeSuggestionsChain"](_0x504710);
    const _0x3e3718 = _0x596353["filter"]((_0x54ca15) => !_0x54ca15["isMultiRange"] && "attribute" != _0x54ca15["type"]), _0x491d4b = this["getSuggestions"]({ "skipNotAttached": true })["filter"]((_0x3c7824) => !_0x3c7824["isMultiRange"] && "attribute" != _0x3c7824["type"]), _0x28074d = _0x491d4b["filter"]((_0x43663d) => !_0x401503["has"](_0x43663d)), _0x40aed0 = new Map(_0x491d4b["map"]((_0x48066c) => [_0x48066c, this["_suggestionFactory"]["getSuggestionCallback"](_0x48066c["type"], _0x48066c["subType"], "chain")])), _0xe65f51 = new Map(_0x491d4b["map"]((_0x4994b0) => [_0x4994b0, _0x4994b0["getFirstRange"]()])), _0x6f46c8 = /* @__PURE__ */ new Set(), _0xad9446 = /* @__PURE__ */ new Set();
    for (let _0x498f6a = 0; _0x498f6a < _0x3e3718["length"]; _0x498f6a++) _0x296e57(_0x3e3718[_0x498f6a], _0x3e3718, _0x498f6a + 1);
    for (let _0x2307bc = 0; _0x2307bc < _0x3e3718["length"]; _0x2307bc++) _0x296e57(_0x3e3718[_0x2307bc], _0x28074d, 0);
    const _0x516201 = /* @__PURE__ */ new Set();
    for (let _0x26f858 = 0; _0x26f858 < _0x3e3718["length"]; _0x26f858++) {
      const _0x531513 = _0x3e3718[_0x26f858];
      !_0xad9446["has"](_0x531513) && _0x531513["previous"] && (_0x516201["add"](_0x531513["previous"]), _0x531513["previous"]["next"] === _0x531513 && (_0x531513["previous"]["next"] = null), _0x531513["previous"] = null), !_0x6f46c8["has"](_0x531513) && _0x531513["next"] && (_0x516201["add"](_0x531513["next"]), _0x531513["next"]["previous"] === _0x531513 && (_0x531513["next"]["previous"] = null), _0x531513["next"] = null);
    }
    function _0x296e57(_0x5d924d, _0xa7a204, _0x92ba77) {
      for (let _0x18d815 = _0x92ba77; _0x18d815 < _0xa7a204["length"]; _0x18d815++) {
        const _0x5c74f7 = _0x46616e(_0x5d924d, _0xa7a204[_0x18d815]);
        _0x5c74f7 && (_0x5c74f7[0]["next"] = _0x5c74f7[1], _0x5c74f7[1]["previous"] = _0x5c74f7[0], _0x6f46c8["add"](_0x5c74f7[0]), _0xad9446["add"](_0x5c74f7[1]));
      }
    }
    function _0x46616e(_0x37a17a, _0x54a497) {
      if (_0x37a17a["author"]["id"] !== _0x54a497["author"]["id"]) return null;
      const _0x1213b2 = _0x40aed0["get"](_0x37a17a)(_0x37a17a, _0x54a497, _0xe65f51["get"](_0x37a17a), _0xe65f51["get"](_0x54a497));
      if (!_0x1213b2) return null;
      return _0x40aed0["get"](_0x54a497)(_0x37a17a, _0x54a497, _0xe65f51["get"](_0x37a17a), _0xe65f51["get"](_0x54a497)) ? _0x1213b2[1]["commentThread"] && _0x1213b2[1]["commentThread"]["length"] ? null : _0x1213b2 : null;
    }
    _0x516201["size"] && this["_refreshSuggestionsChain"](_0x516201);
  }
  ["_refreshAttributeSuggestionsChain"](_0x1c7d1c) {
    if (0 == _0x1c7d1c["length"]) return;
    const _0x3e12ed = this["getSuggestions"]({ "skipNotAttached": true })["filter"]((_0x384c66) => "attribute" == _0x384c66["type"] && _0x384c66["_isDataLoaded"]), _0x3fb103 = [], _0xeb5955 = /* @__PURE__ */ new Map();
    for (const _0x50f11e of _0x3e12ed) {
      const _0x19ee84 = M(_0x50f11e["attributes"]);
      _0xeb5955["has"](_0x19ee84) || (_0xeb5955["set"](_0x19ee84, _0x3fb103["length"]), _0x3fb103["push"]([]));
      const _0x5c7684 = _0xeb5955["get"](_0x19ee84);
      _0x3fb103[_0x5c7684]["push"](_0x50f11e);
    }
    !function() {
      _0x3fb103["sort"]((_0x13a08f, _0x5e54f4) => {
        const _0x4e03dd = _0x13a08f[0]["createdAt"], _0x2f9c48 = _0x5e54f4[0]["createdAt"];
        return _0x4e03dd == _0x2f9c48 ? _0x13a08f[0]["attributes"]["groupId"] < _0x5e54f4[0]["attributes"]["groupId"] ? -1 : 1 : _0x4e03dd < _0x2f9c48 ? -1 : 1;
      });
      for (const _0x16b17d of _0x3fb103) _0x16b17d["sort"]((_0xca7498, _0x3ca49d) => _0xca7498["id"] < _0x3ca49d["id"] ? -1 : 1);
    }();
    for (let _0x34542c = 0; _0x34542c < _0x3fb103["length"]; _0x34542c++) {
      if (0 == _0x3fb103[_0x34542c]["length"]) continue;
      const _0x18adfa = [];
      for (let _0x34cd62 = _0x34542c + 1; _0x34cd62 < _0x3fb103["length"]; _0x34cd62++) 0 != _0x3fb103[_0x34cd62]["length"] && _0x3692c4(_0x3fb103[_0x34542c], _0x3fb103[_0x34cd62]) && _0x18adfa["push"](_0x34cd62);
      for (const _0x9cce0d of _0x18adfa) _0x3fb103[_0x34542c] = _0x3fb103[_0x34542c]["concat"](_0x3fb103[_0x9cce0d]), _0x3fb103[_0x9cce0d] = [];
    }
    for (const _0x2c6513 of _0x3fb103) for (let _0x5e62ac = 0; _0x5e62ac < _0x2c6513["length"]; _0x5e62ac++) {
      const _0x362305 = _0x2c6513[_0x5e62ac + 1] || null;
      _0x2c6513[_0x5e62ac]["next"] !== _0x362305 && (_0x2c6513[_0x5e62ac]["next"] = _0x362305);
    }
    for (const _0x57f5c6 of _0x3fb103) for (let _0x3200ae = 0; _0x3200ae < _0x57f5c6["length"]; _0x3200ae++) {
      const _0x489754 = _0x57f5c6[_0x3200ae - 1] || null;
      _0x57f5c6[_0x3200ae]["previous"] !== _0x489754 && (_0x57f5c6[_0x3200ae]["previous"] = _0x489754);
    }
    function _0x3692c4(_0x315559, _0x57ee6d) {
      if (_0x315559[0]["attributes"]["groupId"] !== _0x57ee6d[0]["attributes"]["groupId"] && _0x315559[0]["author"] !== _0x57ee6d[0]["author"]) return false;
      if (!function(_0x3f4368, _0x3b9165) {
        if (!_0x3f4368["hasComments"] && !_0x3b9165["hasComments"]) return true;
        if (_0x3f4368["hasComments"] && _0x3b9165["hasComments"]) return false;
        if (_0x3f4368["hasComments"] && _0x3b9165["createdAt"] < _0x3f4368["commentThread"]["comments"]["get"](0)["createdAt"]) return true;
        if (_0x3b9165["hasComments"] && _0x3f4368["createdAt"] < _0x3b9165["commentThread"]["comments"]["get"](0)["createdAt"]) return true;
        return false;
      }(_0x315559[0], _0x57ee6d[0])) return false;
      const _0x2dc5ec = omit_default(_0x315559[0]["attributes"], "groupId"), _0x56a382 = omit_default(_0x57ee6d[0]["attributes"], "groupId");
      if (!isEqual_default(_0x2dc5ec, _0x56a382)) return false;
      return !!_0x315559["every"]((_0x2e43b6) => _0x57ee6d["some"]((_0x4c967e) => _0x2e43b6["getFirstRange"]()["isEqual"](_0x4c967e["getFirstRange"]()))) && _0x57ee6d["every"]((_0xdbdedc) => _0x315559["some"]((_0x1d74fb) => _0xdbdedc["getFirstRange"]()["isEqual"](_0x1d74fb["getFirstRange"]())));
    }
  }
  ["_joinWithAdjacentSuggestions"](_0x193ced) {
    const _0x1ab50d = Array["from"](_0x193ced), _0x331406 = this["getSuggestions"]({ "skipNotAttached": true }), _0x4065ac = _0x331406["filter"]((_0x3f4be5) => !_0x193ced["has"](_0x3f4be5)), _0xef7c57 = new Map(_0x1ab50d["map"]((_0x53735c) => [_0x53735c, this["_suggestionFactory"]["getSuggestionCallback"](_0x53735c["type"], _0x53735c["subType"], "join")])), _0x2048f5 = new Map(_0x331406["map"]((_0x1b983c) => [_0x1b983c, _0x1b983c["getRanges"]()]));
    for (let _0x53d103 = 0; _0x53d103 < _0x1ab50d["length"]; _0x53d103++) {
      if (_0x53be46(this, _0x1ab50d[_0x53d103], _0x1ab50d, _0x53d103 + 1)) return true;
    }
    for (let _0x5455de = 0; _0x5455de < _0x1ab50d["length"]; _0x5455de++) {
      if (_0x53be46(this, _0x1ab50d[_0x5455de], _0x4065ac, 0)) return true;
    }
    return false;
    function _0x53be46(_0x428d09, _0x55adae, _0x1cd2cd, _0x9ae388) {
      for (let _0xdd6d57 = _0x9ae388; _0xdd6d57 < _0x1cd2cd["length"]; _0xdd6d57++) {
        const _0x2bb896 = _0x1cd2cd[_0xdd6d57];
        if (_0x2bb896["type"] !== _0x55adae["type"] || _0x2bb896["author"]["id"] !== _0x55adae["author"]["id"] || _0x2bb896["subType"] !== _0x55adae["subType"]) continue;
        if (!Jt(_0x55adae, _0x2bb896)) continue;
        if ("attribute" == _0x55adae["type"] && _0x55adae["data"]["oldValue"] != _0x2bb896["data"]["oldValue"]) continue;
        if ("attribute" == _0x55adae["type"] && _0x428d09["_isBlockAttribute"](_0x55adae["data"]["key"])) continue;
        if ("formatBlock" == _0x55adae["type"]) {
          const _0x3d5c78 = _0x428d09["editor"]["model"], _0x16f3d2 = _0x55adae["getContainedElement"]();
          if (_0x16f3d2 && (_0x3d5c78["schema"]["isObject"](_0x16f3d2) || _0x3d5c78["schema"]["isLimit"](_0x16f3d2))) continue;
        }
        const _0x9544ed = _0xef7c57["get"](_0x55adae), _0x589fe4 = _0x2048f5["get"](_0x55adae), _0x28a760 = _0x2048f5["get"](_0x2bb896), _0x1a6ec3 = _0x55adae["commentThread"] && _0x55adae["commentThread"]["length"], _0x53b230 = _0x2bb896["commentThread"] && _0x2bb896["commentThread"]["length"];
        if (!_0x1a6ec3 && _0x9544ed(_0x28a760, _0x589fe4)) return _0x428d09["_joinSuggestions"](_0x2bb896, _0x55adae), _0x2048f5["delete"](_0x55adae), true;
        if (!_0x53b230 && _0x9544ed(_0x589fe4, _0x28a760)) return _0x428d09["_joinSuggestions"](_0x55adae, _0x2bb896), _0x2048f5["delete"](_0x2bb896), true;
      }
      return false;
    }
  }
  ["_joinSuggestions"](_0x2dc2fa, _0x1ee406) {
    if (_0x2dc2fa["isMultiRange"]) {
      for (const _0x1b381e of _0x1ee406["getRanges"]()) _0x2dc2fa["addRange"](_0x1b381e);
    } else {
      const _0x37ad19 = _0x1ee406["getFirstRange"]()["end"];
      this["_setSuggestionRange"](_0x2dc2fa, this["_model"]["createRange"](_0x2dc2fa["getFirstRange"]()["start"], _0x37ad19));
    }
    _0x1ee406["removeMarkers"]();
  }
  ["_getMarkerAnnouncementText"](_0x30b2bb, _0x5d5219, _0x114a8e) {
    const _0x58be13 = _0x30b2bb["startsWith"]("format") || _0x30b2bb["startsWith"]("attribute") ? "FORMATTING" : _0x30b2bb["toUpperCase"]();
    return o11(this["editor"]["locale"], _0x5d5219 + "_" + _0x58be13 + "_SUGGESTION_ANNOUNCEMENT", _0x114a8e);
  }
  ["_initAriaMarkerChangeAnnouncements"]() {
    const _0x999659 = this["editor"];
    if (!_0x999659["ui"]) return;
    const { ariaLiveAnnouncer: _0xa81a47 } = _0x999659["ui"];
    B(this["_model"], ({ left: _0x15c489, entered: _0x41e0c8 }) => {
      for (const _0x19a079 of _0x15c489) {
        const { group: _0x3c867a, type: _0x15b6a9 } = this["_splitMarkerName"](_0x19a079["name"]);
        if ("suggestion" === _0x3c867a) {
          _0xa81a47["announce"](this["_getMarkerAnnouncementText"](_0x15b6a9, "LEAVE"));
          break;
        }
      }
      for (const _0x548912 of _0x41e0c8) {
        const { group: _0x19da26, type: _0x4e26a3 } = this["_splitMarkerName"](_0x548912["name"]);
        if ("suggestion" === _0x19da26) {
          _0xa81a47["announce"](this["_getMarkerAnnouncementText"](_0x4e26a3, "ENTER", getEnvKeystrokeText(Q)));
          break;
        }
      }
    });
  }
  ["_processAttributeChanges"](_0x535d5e) {
    if (this["_recordAttributeSuggestions"]) return false;
    const _0x4e72e3 = this["editor"], _0x1eb93b = _0x4e72e3["model"]["document"]["differ"]["getChanges"]();
    if (0 == _0x1eb93b["length"]) return false;
    const _0x243f4d = [], _0xa5c2ad = _0x1eb93b["filter"]((_0x50cf50) => "attribute" == _0x50cf50["type"]), _0x430447 = _0x1eb93b["filter"]((_0x5736e4) => "insert" == _0x5736e4["type"] && "$text" != _0x5736e4["name"]), _0x517092 = _0x1eb93b["filter"]((_0x9b70b2) => "remove" == _0x9b70b2["type"] && "$text" != _0x9b70b2["name"]);
    for (const _0x3f1554 of _0xa5c2ad) _0x243f4d["push"]({ "key": _0x3f1554["attributeKey"], "newValue": _0x3f1554["attributeNewValue"], "oldValue": _0x3f1554["attributeOldValue"], "range": Ft(_0x3f1554["range"], _0x4e72e3["model"]) });
    for (const _0xb20229 of _0x430447) {
      const _0x374dd3 = _0x517092["find"]((_0x43b8b7) => _0x43b8b7["position"]["isEqual"](_0xb20229["position"]));
      _0x374dd3 && _0x243f4d["push"]({ "key": m12, "newValue": _0xb20229["name"], "oldValue": _0x374dd3["name"], "range": _0x4e72e3["model"]["createRangeOn"](_0xb20229["position"]["nodeAfter"]) });
    }
    return 0 != _0x243f4d["length"] && this["_reduceExistingSuggestions"](_0x535d5e, _0x243f4d);
  }
  ["_processAttributeSuggestions"](_0x2c7393) {
    let _0xc7dd35 = false;
    const _0x16c97b = this["editor"]["model"]["document"]["differ"]["getChangedMarkers"]()["filter"]((_0x2d6133) => _0x2d6133["data"]["newRange"] && _0x2d6133["name"]["startsWith"]("suggestion:attribute:"));
    for (const _0x1e421b of _0x16c97b) {
      const { subType: _0x364eb1, id: _0x21cb58 } = this["_splitMarkerName"](_0x1e421b["name"]), _0x2f77c2 = _0x364eb1["split"]("|")[0];
      for (const _0x19978f of this["getSuggestions"]({ "skipNotAttached": true })) _0x19978f["id"] != _0x21cb58 && "attribute" == _0x19978f["type"] && _0x19978f["data"] && _0x19978f["data"]["key"] == _0x2f77c2 && _0x19978f["getFirstRange"]()["isIntersecting"](_0x1e421b["data"]["newRange"]) && (this["_reduceSuggestionAttributeRange"](_0x19978f, _0x1e421b["data"]["newRange"], _0x2c7393), _0xc7dd35 = true);
    }
    return _0xc7dd35;
  }
  ["_recordAttributeChanges"](_0x30defb) {
    this["_recordAttributeSuggestions"] = true, _0x30defb();
  }
  ["_isRegisteredAttribute"](_0x26c8b0) {
    const _0x1554d0 = this["_isBlockAttribute"](_0x26c8b0), _0x3d9f2b = this["_inlineAttributeKeys"]["has"](_0x26c8b0);
    return _0x1554d0 || _0x3d9f2b;
  }
  ["_reduceExistingSuggestions"](_0x5ed256, _0x1869f1) {
    if (0 == _0x1869f1["length"]) return false;
    let _0x13a06f = false;
    for (const _0x33de25 of _0x1869f1) {
      const _0x565e3c = this["_findSuggestions"](_0x33de25["range"], "attribute")["filter"]((_0x197f2c) => !_0x197f2c["meta"]["isNextTo"])["map"]((_0xc93da7) => _0xc93da7["suggestion"]), _0x340e5f = M({ "newValue": _0x33de25["newValue"] });
      _0x565e3c["filter"]((_0x5fd8ed) => {
        const [_0x398af4, _0x4a9801] = _0x5fd8ed["subType"]["split"]("|");
        return _0x398af4 == _0x33de25["key"] && _0x4a9801 != _0x340e5f;
      })["forEach"]((_0x5d228a) => {
        this["_reduceSuggestionAttributeRange"](_0x5d228a, _0x33de25["range"], _0x5ed256), _0x13a06f = true;
      });
    }
    return _0x13a06f;
  }
  ["_reduceSuggestionAttributeRange"](_0x5b0f0e, _0x3c74d1, _0x367fdf) {
    const _0x5ad4da = _0x5b0f0e["getFirstRange"]()["getDifference"](_0x3c74d1);
    0 !== _0x5ad4da["length"] ? 1 !== _0x5ad4da["length"] ? this["_breakSuggestionMarker"](_0x5b0f0e, _0x3c74d1["start"], _0x3c74d1["end"]) : this["_setSuggestionRange"](_0x5b0f0e, _0x5ad4da[0]) : _0x367fdf["removeMarker"](_0x5b0f0e["getFirstMarker"]());
  }
};
var Tt2 = class {
  constructor(_0x2b7120) {
    __publicField(this, "_editor");
    __publicField(this, "_model");
    __publicField(this, "_customCallbacks");
    __publicField(this, "_defaultCallbacks");
    this["_editor"] = _0x2b7120, this["_model"] = _0x2b7120["model"], this["_customCallbacks"] = /* @__PURE__ */ new Map(), this["_defaultCallbacks"] = /* @__PURE__ */ new Map(), this["_registerDefaultCallbacks"]();
  }
  ["buildSuggestion"](_0x3c724c, _0x4bd220, _0x200102, _0x4e4d80, _0x263704, _0x40213a) {
    return new u8(this["_model"], { "type": _0x3c724c, "subType": _0x4bd220, "id": _0x200102, "author": _0x4e4d80, "creator": _0x4e4d80, "attributes": _0x263704, "onAttributesChange": _0x40213a, "onAccept": (..._0x2ee0e3) => this["getSuggestionCallback"](_0x3c724c, _0x4bd220, "accept")(..._0x2ee0e3), "onDiscard": (..._0x3eb3ab) => this["getSuggestionCallback"](_0x3c724c, _0x4bd220, "discard")(..._0x3eb3ab) });
  }
  ["registerCustomCallback"](_0x35732f, _0x4da1b8, _0x43f1ec, _0x274228) {
    const _0x1b086c = _0x35732f + ":" + _0x4da1b8 + ":" + _0x43f1ec;
    this["_customCallbacks"]["set"](_0x1b086c, _0x274228);
  }
  ["getSuggestionCallback"](_0x4c69d9, _0x3b3a45, _0x48cf7c) {
    const _0x3b8e4c = _0x4c69d9 + ":" + _0x3b3a45 + ":" + _0x48cf7c;
    return this["_customCallbacks"]["get"](_0x3b8e4c) || this["_defaultCallbacks"]["get"](_0x4c69d9 + ":" + _0x48cf7c);
  }
  ["_registerDefaultCallbacks"]() {
    const _0x339322 = () => false, _0x31b538 = (_0x10c518) => {
      _0x10c518["sort"]((_0x2a8a71, _0xd2123e) => _0x2a8a71["start"]["isBefore"](_0xd2123e["start"]) ? 1 : -1), this["_model"]["change"]((_0x36dc64) => {
        for (const _0x2b180a of _0x10c518) {
          let _0x94514c;
          _0x94514c = _0x2b180a["end"]["isAtEnd"] && _0x2b180a["end"]["parent"] == _0x2b180a["start"]["nodeAfter"] ? _0x36dc64["createSelection"](_0x2b180a["start"]["nodeAfter"], "on") : _0x36dc64["createSelection"](_0x2b180a), this["_model"]["deleteContent"](_0x94514c, { "forceDefaultExecution": true, "doNotAutoparagraph": true });
        }
      });
    }, _0xd589bb = (_0x216988, _0x33da94) => {
      _0x33da94 && this["_model"]["change"]((_0x5b52a9) => {
        const { commandName: _0x37760b, commandParams: _0x4a1cb6 = [] } = _0x33da94, _0x45b6a4 = _0x216988["map"]((_0x4b4fb0) => (Vt2(_0x4b4fb0) && (_0x4b4fb0 = this["_model"]["createRange"](_0x4b4fb0["end"])), _0x4b4fb0))["filter"]((_0x4add30) => "$graveyard" !== _0x4add30["root"]["rootName"]);
        if (_0x45b6a4["length"] < 1) return;
        const _0xb488a = Array["from"](this["_model"]["document"]["selection"]["getRanges"]())["map"]((_0x4a8d49) => LiveRange["fromRange"](_0x4a8d49));
        _0x5b52a9["setSelection"](_0x45b6a4);
        for (const _0x229d07 of this["_editor"]["commands"]["commands"]()) _0x229d07["refresh"]();
        _0x4a1cb6["push"]({ "forceDefaultExecution": true }), this["_editor"]["execute"](_0x37760b, ..._0x4a1cb6);
        const _0x5c002f = _0xb488a["filter"]((_0x2a0f20) => "$graveyard" != _0x2a0f20["root"]["rootName"]);
        _0x5c002f["length"] > 0 && _0x5b52a9["setSelection"](_0x5c002f);
        for (const _0x3ccfe5 of _0xb488a) _0x3ccfe5["detach"]();
      });
    }, _0x26ef5b = (_0x217f3b, _0xa5cc6e) => 1 == _0x217f3b["length"] && 1 == _0xa5cc6e["length"] && _0x217f3b[0]["end"]["isEqual"](_0xa5cc6e[0]["start"]), _0x109de6 = (_0x423a39, _0x5b0694, _0x15e106, _0x426403) => Ht(_0x423a39, _0x5b0694, _0x15e106, _0x426403, this["_model"]) ? [_0x423a39, _0x5b0694] : Ht(_0x5b0694, _0x423a39, _0x426403, _0x15e106, this["_model"]) ? [_0x5b0694, _0x423a39] : null;
    this["_defaultCallbacks"]["set"]("insertion:accept", _0x339322), this["_defaultCallbacks"]["set"]("insertion:discard", _0x31b538), this["_defaultCallbacks"]["set"]("insertion:join", _0x26ef5b), this["_defaultCallbacks"]["set"]("insertion:chain", _0x109de6), this["_defaultCallbacks"]["set"]("deletion:accept", _0x31b538), this["_defaultCallbacks"]["set"]("deletion:discard", _0x339322), this["_defaultCallbacks"]["set"]("deletion:join", _0x26ef5b), this["_defaultCallbacks"]["set"]("deletion:chain", _0x109de6), this["_defaultCallbacks"]["set"]("formatInline:accept", _0xd589bb), this["_defaultCallbacks"]["set"]("formatInline:discard", _0x339322), this["_defaultCallbacks"]["set"]("formatInline:join", _0x26ef5b), this["_defaultCallbacks"]["set"]("formatInline:chain", _0x339322), this["_defaultCallbacks"]["set"]("formatBlock:accept", _0xd589bb), this["_defaultCallbacks"]["set"]("formatBlock:discard", _0x339322), this["_defaultCallbacks"]["set"]("formatBlock:join", _0x26ef5b), this["_defaultCallbacks"]["set"]("formatBlock:chain", _0x339322), this["_defaultCallbacks"]["set"]("attribute:accept", _0x339322), this["_defaultCallbacks"]["set"]("attribute:discard", (_0x28b97f, _0x50aa6d) => {
      if (!_0x50aa6d) return;
      const _0x54c875 = this["_editor"]["plugins"]["get"](p10);
      this["_model"]["change"]((_0x33b990) => {
        if (_0x50aa6d["key"] == m12) for (const _0xa3a032 of _0x28b97f) {
          const _0x5ef862 = _0xa3a032["start"]["nodeAfter"], _0x239fa2 = _0x50aa6d["oldValue"];
          _0x33b990["rename"](_0x5ef862, _0x239fa2);
        }
        else {
          if (_0x54c875["_isBlockAttribute"](_0x50aa6d["key"])) {
            for (const _0x2c6def of _0x28b97f) void 0 !== _0x50aa6d["oldValue"] ? _0x33b990["setAttribute"](_0x50aa6d["key"], _0x50aa6d["oldValue"], _0x2c6def["start"]["nodeAfter"]) : _0x33b990["removeAttribute"](_0x50aa6d["key"], _0x2c6def["start"]["nodeAfter"]);
          } else {
            for (const _0x28abc0 of _0x28b97f) _0x50aa6d["oldValue"] ? _0x33b990["setAttribute"](_0x50aa6d["key"], _0x50aa6d["oldValue"], _0x28abc0) : _0x33b990["removeAttribute"](_0x50aa6d["key"], _0x28abc0);
          }
        }
      });
    }), this["_defaultCallbacks"]["set"]("attribute:join", _0x26ef5b);
  }
};
function Et(_0x35034a, _0x29b815, _0xee0f2e) {
  for (const _0x54817c of _0x29b815["parent"]["getAncestors"]({ "includeSelf": true, "parentFirst": true })) {
    if (_0x54817c["root"] == _0x54817c) return false;
    if (!_0xee0f2e["containsItem"](_0x54817c)) return false;
    if (_0x35034a["isObject"](_0x54817c) || _0x35034a["isLimit"](_0x54817c)) return true;
  }
  return false;
}
function Vt2(_0xec1698) {
  return _0xec1698["end"]["parent"] == _0xec1698["start"]["nodeAfter"] && _0xec1698["end"]["isAtStart"];
}
function Ut(_0x3d2e13, _0x1cda47, _0x3bb81e, _0x51beef) {
  const _0x570b62 = (_0x5c5e5e) => !_0x5c5e5e["item"]["is"]("$textProxy") && !_0x51beef["isObject"](_0x5c5e5e["item"]), _0x209ff3 = _0x3d2e13["start"]["getLastMatchingPosition"](_0x570b62), _0x917fcc = _0x3d2e13["end"]["getLastMatchingPosition"](_0x570b62, { "direction": "backward" });
  return (!_0x3d2e13["start"]["isEqual"](_0x209ff3) || !_0x3d2e13["end"]["isEqual"](_0x917fcc)) && (_0x209ff3["isBefore"](_0x917fcc) ? _0x3bb81e["updateMarker"](_0x1cda47, { "range": _0x3bb81e["createRange"](_0x209ff3, _0x917fcc) }) : _0x3bb81e["removeMarker"](_0x1cda47), true);
}
function Pt2(_0x387642) {
  return M(_0x387642);
}
function Gt(_0x260b75) {
  const _0x544d80 = _0x260b75["start"]["nodeAfter"];
  return _0x544d80 && _0x544d80["is"]("element");
}
function Ft(_0x36f7f5, _0x44840c) {
  return null == _0x36f7f5["end"]["nodeBefore"] && _0x36f7f5["end"]["parent"] == _0x36f7f5["start"]["nodeAfter"] ? Lt2(_0x36f7f5["start"]["nodeAfter"], _0x44840c) : _0x36f7f5;
}
function Lt2(_0x1aedb0, _0x5bb054) {
  const _0x5f129a = _0x5bb054["schema"]["isObject"](_0x1aedb0) || _0x5bb054["schema"]["isSelectable"](_0x1aedb0);
  return _0x5bb054["createRange"](_0x5bb054["createPositionAt"](_0x1aedb0, "before"), _0x5f129a ? _0x5bb054["createPositionAfter"](_0x1aedb0) : _0x5bb054["createPositionAt"](_0x1aedb0, "end"));
}
function Ht(_0x2c2c4b, _0x2f4399, _0xb84654, _0xc29ae0, _0xa84b89) {
  if (_0x2c2c4b["next"]) return false;
  if (!Jt(_0x2c2c4b, _0x2f4399)) return false;
  if (_0xb84654["end"]["isEqual"](_0xc29ae0["start"])) return true;
  if (_0x2c2c4b["type"] != _0x2f4399["type"]) return false;
  if (!_0xb84654["end"]["isTouching"](_0xc29ae0["start"])) return false;
  const _0x465dd3 = _0xa84b89["createRange"](_0xb84654["end"], _0xc29ae0["start"])["getWalker"]();
  for (const _0xa87e91 of _0x465dd3) if (["elementStart", "elementEnd"]["includes"](_0xa87e91["type"]) && _0xa84b89["schema"]["isLimit"](_0xa87e91["item"])) return false;
  return true;
}
function Jt(_0x21f910, _0x5d76f2) {
  if (!_0x21f910["_isDataLoaded"] || !_0x5d76f2["_isDataLoaded"]) return false;
  const _0x5ed611 = new Set(Object["keys"](_0x21f910["attributes"])), _0x33b399 = new Set(Object["keys"](_0x5d76f2["attributes"]));
  if (_0x5ed611["delete"]("groupId"), _0x33b399["delete"]("groupId"), 0 == _0x5ed611["size"] && 0 == _0x33b399["size"]) return true;
  if (_0x5ed611["size"] != _0x33b399["size"]) return false;
  const _0x5e9019 = { ..._0x21f910["attributes"] }, _0x315b37 = { ..._0x5d76f2["attributes"] };
  return delete _0x5e9019["groupId"], delete _0x315b37["groupId"], JSON["stringify"](_0x5e9019) == JSON["stringify"](_0x315b37);
}
function qt2(_0xe1c93d, _0x39f3f0) {
  const _0x530efb = zt(_0xe1c93d["attributes"]), _0x574849 = zt(_0x39f3f0);
  if (!_0xe1c93d["_isDataLoaded"]) return false;
  for (const _0x5e62d6 of Object["keys"](_0x574849)) if (!isEqual_default(_0x530efb[_0x5e62d6], _0x574849[_0x5e62d6])) return false;
  return true;
}
function zt(_0x320d2d) {
  const _0xff34fc = Object["assign"]({}, _0x320d2d);
  return delete _0xff34fc["skipNestingCheck"], delete _0xff34fc["tablePasteChainId"], _0xff34fc;
}
var ae = class extends ObservableMixin() {
  constructor(_0x4ddf21, _0xb441a3, _0x58c11c, _0xb37baa) {
    super();
    __publicField(this, "model");
    __publicField(this, "view");
    __publicField(this, "commentThreadController");
    __publicField(this, "_editor");
    __publicField(this, "_acceptCommand");
    __publicField(this, "_discardCommand");
    __publicField(this, "_pendingAction");
    this["model"] = _0xb441a3, this["view"] = _0x58c11c, this["commentThreadController"] = _0xb37baa, this["_editor"] = _0x4ddf21, this["_acceptCommand"] = _0x4ddf21["commands"]["get"]("acceptSuggestion"), this["_discardCommand"] = _0x4ddf21["commands"]["get"]("discardSuggestion"), this["view"]["bind"]("isEnabled")["to"](this["_acceptCommand"], this["_discardCommand"], (_0x51c01e, _0x4cf9af) => _0x51c01e || _0x4cf9af), this["view"]["bind"]("canAccept")["to"](this["_acceptCommand"], "isEnabled", (_0x20bdb9) => _0x20bdb9 && this["_editor"]["model"]["canEditAt"](_0xb441a3["getRanges"]())), this["view"]["bind"]("canDiscard")["to"](this["_discardCommand"], "isEnabled", (_0x33d310) => _0x33d310 && this["_editor"]["model"]["canEditAt"](_0xb441a3["getRanges"]())), this["_pendingAction"] = null, _0x58c11c["isDirty"] && this["_setPendingAction"](), this["listenTo"](_0x58c11c, "acceptSuggestion", () => this["acceptSuggestion"]()), this["listenTo"](_0x58c11c, "discardSuggestion", () => this["discardSuggestion"]()), this["listenTo"](_0x58c11c, "change:isDirty", () => {
      _0x58c11c["isDirty"] ? this["_setPendingAction"]() : this["_removePendingAction"]();
    });
  }
  ["acceptSuggestion"]() {
    this["_acceptCommand"]["execute"](this["model"]["id"]);
  }
  ["discardSuggestion"]() {
    this["_discardCommand"]["execute"](this["model"]["id"]);
  }
  ["destroy"]() {
    this["view"]["unbind"]("isEnabled"), this["view"]["unbind"]("canAccept"), this["view"]["unbind"]("canDiscard"), this["stopListening"](), this["commentThreadController"]["destroy"](), this["_pendingAction"] && this["_removePendingAction"]();
  }
  ["_setPendingAction"]() {
    const _0x138140 = o11(this["_editor"]["locale"], "PENDING_ACTION_SUGGESTION");
    this["_pendingAction"] = this["_editor"]["plugins"]["get"]("PendingActions")["add"](_0x138140);
  }
  ["_removePendingAction"]() {
    null !== this["_pendingAction"] && this["_editor"]["plugins"]["get"]("PendingActions")["remove"](this["_pendingAction"]), this["_pendingAction"] = null;
  }
};
var us = class extends View {
  constructor(_0x56e2e7, _0x55c5eb, _0x3c0380, _0xd7c3c0) {
    super(_0x56e2e7);
    __publicField(this, "commentsListView");
    __publicField(this, "commentThreadInputView");
    __publicField(this, "ariaDescriptionView");
    __publicField(this, "focusables");
    __publicField(this, "focusTracker");
    __publicField(this, "keystrokes");
    __publicField(this, "focusCycler");
    __publicField(this, "_model");
    __publicField(this, "_localUser");
    __publicField(this, "_config");
    this["commentsListView"] = null, this["commentThreadInputView"] = null, this["ariaDescriptionView"] = new J(_0x56e2e7, o11(_0x56e2e7, "SUGGESTION_THREAD_DESCRIPTION")), this["set"]("isActive", false), this["set"]("authoredAt", _0x55c5eb["authoredAt"]), this["bind"]("authoredAt")["to"](_0x55c5eb), this["set"]("descriptionParts", []), this["set"]("isDirty", false), this["set"]("isEnabled", false), this["set"]("canAccept", false), this["set"]("canDiscard", false), this["bind"]("ariaLabel")["to"](this, "length", _0x55c5eb, "authoredAt", this, "descriptionParts", (_0x254883, _0x4f02bb, _0x59344c) => {
      const _0x25b1f5 = _0x59344c["map"]((_0x1a0281) => ls2(_0x1a0281["content"]))["join"](". ") + ".";
      return o11(this["locale"], "SUGGESTION_THREAD_ARIA_LABEL", [_0x254883 - 1, _0x55c5eb["author"]["name"], _0x4f02bb ? _0xd7c3c0["formatDateTime"](_0x4f02bb) : "", new DOMParser()["parseFromString"](_0x25b1f5, "text/html")["body"]["textContent"]]);
    }), this["focusables"] = new ViewCollection(), this["focusTracker"] = new FocusTracker(), this["keystrokes"] = new KeystrokeHandler(), this["focusCycler"] = new FocusCycler({ "focusables": this["focusables"], "focusTracker": this["focusTracker"], "keystrokeHandler": this["keystrokes"], "keystrokeHandlerOptions": { "filter": (_0x5c03c3) => _0x5c03c3["target"] !== this["element"] }, "actions": { "focusPrevious": "shift+tab", "focusNext": "tab" } }), this["_model"] = _0x55c5eb, this["_localUser"] = _0x3c0380, this["_config"] = _0xd7c3c0, _0xd7c3c0["disableComments"] ? this["set"]("length", 1) : this["_createCommentViews"]();
  }
  ["render"]() {
    super["render"](), T(this, this["focusables"]);
  }
  ["focus"]() {
    this["element"]["focus"]();
  }
  ["destroy"]() {
    this["commentsListView"] && this["commentsListView"]["destroy"](), this["commentThreadInputView"] && this["commentThreadInputView"]["destroy"](), super["destroy"]();
  }
  ["_createCommentViews"]() {
    const { CommentsListView: _0x38df09 } = this["_config"];
    this["commentsListView"] = new _0x38df09(this["locale"], this["_model"]["commentThread"], Object["assign"]({ "CommentView": this["_config"]["CommentView"] }, this["_config"])), this["commentsListView"]["delegate"]("removeComment")["to"](this), this["commentsListView"]["delegate"]("updateComment")["to"](this), this["commentsListView"]["bind"]("isActive")["to"](this), this["set"]("length", this["commentsListView"]["length"] + 1), this["bind"]("length")["to"](this["commentsListView"], "length", (_0x24e51e) => _0x24e51e + 1), this["commentThreadInputView"] = this["_createCommentThreadInputView"](), this["on"]("removeComment", () => this["focus"]()), this["bind"]("isDirty")["to"](this["commentsListView"], "hasDirtyComment", this["commentThreadInputView"]["commentInputView"], "value", (_0x3bc20a, _0x453b3e) => _0x3bc20a || !!_0x453b3e);
  }
  ["_createCommentThreadInputView"]() {
    const { CommentThreadInputView: _0x16f24b } = this["_config"], _0xb7fb7f = new _0x16f24b(this["locale"], this["_localUser"], this["_config"]["editorConfig"]), _0x15eddf = _0xb7fb7f["commentInputView"];
    return _0xb7fb7f["bind"]("showInput")["to"](this, "isActive", this["_model"]["commentThread"], "isReadOnly", _0x15eddf, "value", (_0x21ee94, _0xd87bb1, _0x24fa15) => !!_0x24fa15 || _0x21ee94 && !_0xd87bb1), _0x15eddf["on"]("submit", (_0x21e014, _0x1ca470) => {
      this["fire"]("addComment", _0x1ca470), _0x15eddf["editor"]["setData"]("");
    }), _0x15eddf["on"]("cancel", () => this["focus"]()), _0x15eddf["bind"]("disabledSubmit")["to"](this["_model"]["commentThread"], "isReadOnly"), _0xb7fb7f;
  }
};
var re2 = class extends us {
  constructor(_0x15edae, _0x4ab4fe, _0x5c5eb5, _0xdd9ba9) {
    super(_0x15edae, _0x4ab4fe, _0x5c5eb5, _0xdd9ba9);
    __publicField(this, "suggestionView");
    __publicField(this, "_descriptionElement");
    this["set"]("type", ""), this["bind"]("type")["to"](this, "descriptionParts", (_0x4a1c1f) => _0x4a1c1f && _0x4a1c1f[0] ? _0x4a1c1f[0]["type"] : ""), this["bind"]("description")["to"](this, "descriptionParts", this, "isActive", (_0x4b02aa, _0x37450c) => {
      let _0x4736f2 = "";
      for (const _0x1ed8fc of _0x4b02aa) _0x4736f2 += "<p>" + ls2(_0x1ed8fc["content"], _0x1ed8fc["color"]) + "</p>";
      return _0x37450c ? _0x4736f2 : Z(_0x4736f2, { "limit": 140 });
    }), this["_descriptionElement"] = null, this["suggestionView"] = new _0xdd9ba9["SuggestionView"](_0x15edae, _0x4ab4fe, { "formatDateTime": _0xdd9ba9["formatDateTime"] }), this["suggestionView"]["bind"]("description")["to"](this), this["suggestionView"]["delegate"]("acceptSuggestion", "discardSuggestion")["to"](this), this["suggestionView"]["acceptButton"]["bind"]("isEnabled")["to"](this, "canAccept"), this["suggestionView"]["discardButton"]["bind"]("isEnabled")["to"](this, "canDiscard"), this["focusables"]["add"](this["suggestionView"]), this["commentsListView"] && this["focusables"]["add"](this["commentsListView"]), this["commentThreadInputView"] && this["focusables"]["add"](this["commentThreadInputView"]), this["setTemplate"](this["getTemplate"]());
  }
  ["getTemplate"]() {
    const _0x4ca9e5 = this["bindTemplate"], _0x5a0dd5 = [this["suggestionView"]];
    return this["commentsListView"] && _0x5a0dd5["push"](this["commentsListView"]), this["commentThreadInputView"] && _0x5a0dd5["push"](this["commentThreadInputView"]), _0x5a0dd5["push"](this["ariaDescriptionView"]), { "tag": "div", "attributes": { "class": ["ck", "ck-rounded-corners", "ck-suggestion-wrapper", _0x4ca9e5["if"]("isActive", "ck-suggestion-wrapper--active"), _0x4ca9e5["to"]("type", (_0x343648) => "ck-suggestion-" + _0x343648), this["_config"]["disableComments"] && "ck-suggestion--disabled-comments"], "data-suggestion-id": this["_model"]["id"], "data-thread-id": this["_model"]["commentThread"]["id"], "data-author-id": this["_model"]["author"]["id"], "tabindex": 0, "role": "listitem", "aria-label": _0x4ca9e5["to"]("ariaLabel"), "aria-describedby": this["ariaDescriptionView"]["id"] }, "children": _0x5a0dd5 };
  }
  ["render"]() {
    super["render"](), this["commentsListView"] && (this["commentsListView"]["delegate"]("editorReady")["to"](this), this["commentsListView"]["delegate"]("editorDestroyed")["to"](this)), this["commentThreadInputView"] && (this["commentThreadInputView"]["delegate"]("editorReady")["to"](this), this["commentThreadInputView"]["delegate"]("editorDestroyed")["to"](this));
  }
};
var ce2 = class extends View {
  constructor(_0x378f80, _0x3db21f, _0x4ca4d0) {
    super(_0x378f80);
    __publicField(this, "userView");
    __publicField(this, "acceptButton");
    __publicField(this, "discardButton");
    __publicField(this, "focusables");
    __publicField(this, "focusTracker");
    __publicField(this, "keystrokes");
    __publicField(this, "focusCycler");
    __publicField(this, "_model");
    __publicField(this, "_config");
    this["_model"] = _0x3db21f, this["_config"] = _0x4ca4d0, this["set"]("description", ""), this["bind"]("authoredAt")["to"](_0x3db21f), this["acceptButton"] = this["_createButton"](o11(_0x378f80, "Accept suggestion"), icons["check"], "ck-suggestion--accept", "acceptSuggestion", "sw"), this["discardButton"] = this["_createButton"](o11(_0x378f80, "Discard suggestion"), icons["cancel"], "ck-suggestion--discard", "discardSuggestion", "sw"), this["userView"] = new H(_0x378f80, _0x3db21f["author"], this["getUserViewNotificationText"]()), this["userView"]["extendTemplate"]({ "attributes": { "class": ["ck-suggestion__user", "ck-annotation__user"], "aria-hidden": true } }), this["focusables"] = new ViewCollection([this["acceptButton"], this["discardButton"]]), this["focusTracker"] = new FocusTracker(), this["keystrokes"] = new KeystrokeHandler(), this["focusCycler"] = new FocusCycler({ "focusables": this["focusables"], "focusTracker": this["focusTracker"], "keystrokeHandler": this["keystrokes"], "actions": { "focusPrevious": "shift+tab", "focusNext": "tab" }, "keystrokeHandlerOptions": { "filter": (_0x24344b) => _0x24344b["target"] !== this["element"] } }), this["setTemplate"](this["getTemplate"]());
  }
  ["render"]() {
    super["render"]();
    const _0x49f8f8 = this["element"]["querySelector"](".ck-annotation__content-wrapper");
    _0x49f8f8["innerHTML"] = this["description"], this["on"]("change:description", (_0x16e40c, _0x248fb7, _0x214bea) => {
      _0x49f8f8["innerHTML"] = _0x214bea;
    }), this["_setupKeyboardNavigation"]();
  }
  ["getTemplate"]() {
    const _0x1f6826 = this["bindTemplate"], _0x3696ff = [{ "tag": "div", "attributes": { "class": ["ck-suggestion__info", "ck-annotation__info"] }, "children": [{ "tag": "span", "children": [{ "text": this["userView"]["name"] }], "attributes": { "class": ["ck-suggestion__info-name", "ck-annotation__info-name"] } }, { "tag": "time", "attributes": { "datetime": _0x1f6826["to"]("authoredAt"), "class": ["ck-comment__info-time", "ck-annotation__info-time"] }, "children": [{ "text": _0x1f6826["to"]("authoredAt", (_0x1be679) => this["_config"]["formatDateTime"](_0x1be679)) }] }] }, { "tag": "div", "attributes": { "class": ["ck-suggestion__actions", "ck-annotation__actions"] }, "children": [this["acceptButton"], this["discardButton"]] }, { "tag": "div", "attributes": { "class": ["ck-annotation__content-wrapper"] } }];
    return this["_model"]["isExternal"] && _0x3696ff["push"]({ "tag": "div", "attributes": { "class": ["ck-comment__external"] }, "children": [{ "text": this["getExternalSuggestionNote"]() }] }), { "tag": "div", "attributes": { "class": ["ck-suggestion", "ck-annotation"], "tabindex": -1 }, "children": [this["userView"], { "tag": "div", "attributes": { "class": ["ck-suggestion__main", "ck-annotation__main"], "role": "presentation" }, "children": _0x3696ff }] };
  }
  ["focus"]() {
    this["element"]["focus"]();
  }
  ["getUserViewNotificationText"]() {
    return this["_model"]["isExternal"] ? "importWord" === this["_model"]["attributes"]["@external"]["source"] ? o11(this["locale"], "EXTERNAL_IMPORT_WORD_AVATAR", this["_model"]["creator"]["name"]) : o11(this["locale"], "EXTERNAL_AVATAR", this["_model"]["creator"]["name"]) : null;
  }
  ["getExternalSuggestionNote"]() {
    return "importWord" === this["_model"]["attributes"]["@external"]["source"] ? o11(this["locale"], "EXTERNAL_IMPORT_WORD_SUGGESTION") : o11(this["locale"], "EXTERNAL_SUGGESTION");
  }
  ["_createButton"](_0x10fafc, _0x2e7468, _0x557f1c, _0x18f5a3, _0x5cc37e) {
    const _0x4e1ede = new U(this["locale"]);
    return _0x4e1ede["set"]({ "label": _0x10fafc, "icon": _0x2e7468, "tooltip": true, "tooltipPosition": _0x5cc37e }), _0x4e1ede["extendTemplate"]({ "attributes": { "class": _0x557f1c } }), _0x4e1ede["on"]("execute", () => {
      this["fire"](_0x18f5a3, this["_model"]["id"]);
    }), _0x4e1ede;
  }
  ["_setupKeyboardNavigation"]() {
    const _0x1113ed = this["element"];
    this["keystrokes"]["listenTo"](_0x1113ed);
    for (const _0x17a5f7 of this["focusables"]) this["focusTracker"]["add"](_0x17a5f7["element"]), this["keystrokes"]["listenTo"](_0x17a5f7["element"]);
    this["keystrokes"]["set"]("enter", (_0x401f41, _0x5a3d59) => {
      _0x1113ed === _0x401f41["target"] && (this["focusCycler"]["focusFirst"](), _0x5a3d59());
    }), this["keystrokes"]["set"]("esc", (_0x41bab5, _0x2658a2) => {
      _0x1113ed !== _0x41bab5["target"] && (this["focus"](), _0x2658a2());
    });
  }
};
var he = `<!--

 What you're currently looking at is the source code of a legally protected, proprietary software.
 CKEditor 5 Collaboration is licensed under a commercial license and protected by copyright law. Where not otherwise indicated,
 all CKEditor 5 Collaboration content is authored by CKSource engineers and consists of CKSource-owned intellectual property.

 Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.

!-->

<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M6.182 5.514a.643.643 0 0 0-.636.64v-.001a.636.636 0 0 0 .636.639h5.682a.641.641 0 0 0 .636-.638.637.637 0 0 0-.636-.64H6.182Z"/><path d="M6.182 8.5a.642.642 0 0 0-.588.882.636.636 0 0 0 .588.395h5.682a.641.641 0 0 0 .636-.639.635.635 0 0 0-.636-.638H6.182Z"/><path d="M6.18 11.5a.64.64 0 0 0 0 1.278h3.133a.64.64 0 0 0 0-1.278H6.18Z"/><path d="m11.772 18.308.154-.23c-.195-.098-.304-.192-.328-.28-.024-.09 0-.274.076-.551.062-.166.099-.296.11-.393a2.934 2.934 0 0 0 0-.479c-.137-.41-.2-.685-.186-.83.013-.145.117-.335.313-.57l4.465-6.207c.356-.6 1.059-.56 2.11.118 1.05.68 1.443 1.272 1.177 1.772l-3.876 6.833c-.105.27-.22.444-.347.515-.128.07-.4.119-.813.139a2.954 2.954 0 0 0-.487.21c-.127.09-.244.193-.347.31-.193.174-.332.262-.416.262-.064 0-.178-.05-.346-.15l-.204.27-1.056-.739Zm-.184.274 1.039.727-.26.34h-1.496l.717-1.067Z"/><path clip-rule="evenodd" d="M3.272 1A1.28 1.28 0 0 0 2 2.28v14.439a1.276 1.276 0 0 0 1.272 1.28h6.838a2.13 2.13 0 0 1 .003-.61c.024-.18.066-.363.113-.534.012-.046.027-.092.043-.136.011-.029.02-.052.025-.069v-.008a7.395 7.395 0 0 1-.042-.142H3.5V2.46s11 .002 11 .005v6.341l.627-.872c.204-.32.49-.614.873-.819V2.281c0-.707-.569-1.28-1.272-1.28L3.272 1ZM16 9.29l-1.5 2.085V16.5h-2.708c.005.118.002.236-.007.354a.904.904 0 0 1-.013.075l-.001.005a3.108 3.108 0 0 1-.097.312c-.027.101-.048.19-.062.266a.734.734 0 0 0-.014.287.25.25 0 0 0 .068.105.65.65 0 0 0 .088.074l.017.011.016.01h.175L14.73 18c.697 0 1.271-.573 1.271-1.281v-7.43Z"/></svg>
`;
var d8 = class extends Plugin {
  constructor(_0x3fe30a) {
    super(_0x3fe30a);
    __publicField(this, "_suggestionToController");
    __publicField(this, "_viewToController");
    __publicField(this, "_annotationViews");
    __publicField(this, "_handleControllerBuffer");
    __publicField(this, "_disableComments");
    this["_suggestionToController"] = /* @__PURE__ */ new Map(), this["_viewToController"] = /* @__PURE__ */ new Map(), this["_annotationViews"] = /* @__PURE__ */ new Map(), this["_handleControllerBuffer"] = /* @__PURE__ */ new Map();
    const _0x2c35e5 = this["editor"]["config"];
    _0x2c35e5["define"]("trackChanges.SuggestionThreadView", re2), _0x2c35e5["define"]("trackChanges.SuggestionView", ce2), _0x2c35e5["define"]("trackChanges.disableComments", false), this["_disableComments"] = _0x2c35e5["get"]("trackChanges.disableComments");
  }
  static get ["requires"]() {
    return [p10, l, "CommentsRepository", "Annotations", "EditorAnnotations"];
  }
  static get ["pluginName"]() {
    return "TrackChangesUI";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["_handleSuggestionControllerDelayed"](_0xb36f4, _0x4b8a6f) {
    0 === this["_handleControllerBuffer"]["size"] && setTimeout(() => {
      for (const [_0x119a35, _0x413560] of this["_handleControllerBuffer"]) {
        const _0x760ea = this["_suggestionToController"]["has"](_0x119a35);
        _0x760ea || _0x413560 ? _0x760ea && _0x413560 && this["_destroyController"](_0x119a35) : this["_initializeController"](_0x119a35);
      }
      this["_handleControllerBuffer"]["clear"](), this["editor"]["plugins"]["get"]("EditorAnnotations")["refreshSelectedViews"](), this["_refreshActiveMarkers"]();
    }, 10), this["_handleControllerBuffer"]["set"](_0xb36f4, _0x4b8a6f);
  }
  ["init"]() {
    const _0x35e715 = this["editor"], _0x547877 = _0x35e715["plugins"]["get"]("TrackChangesEditing"), _0x598af6 = _0x35e715["plugins"]["get"]("Annotations"), _0x211d6d = _0x35e715["plugins"]["get"]("EditorAnnotations"), _0x3c34a6 = _0x35e715["plugins"]["get"]("CommentsRepository");
    this["_addUIComponentsToFactory"](), _0x211d6d["addSourceCollector"](() => {
      const _0x5a57ec = [];
      for (const [_0x17a348, _0x35872e] of Array["from"](this["_suggestionToController"])) {
        const _0x8b6958 = _0x17a348["getAllAdjacentSuggestions"](), _0xcc5e2 = [];
        for (const _0x325cf3 of _0x8b6958) {
          if (!_0x325cf3["isInContent"]) continue;
          if (_0x325cf3["isMultiRange"]) {
            _0xcc5e2["push"](..._0x325cf3["getRanges"]());
            continue;
          }
          const _0x1283f4 = _0x325cf3["getFirstRange"]();
          if (_0xcc5e2["length"] > 0) {
            const _0x1c8ce5 = _0xcc5e2[0]["getJoined"](_0x1283f4);
            if (_0x1c8ce5) {
              _0xcc5e2[0] = _0x1c8ce5;
              continue;
            }
          }
          _0xcc5e2["push"](_0x1283f4);
        }
        _0x5a57ec["push"]([_0x35872e["view"], _0xcc5e2]);
      }
      return _0x5a57ec;
    }), this["listenTo"](_0x547877, "suggestionLoaded", (_0x5528c7, _0x217e68) => {
      this["listenTo"](_0x217e68, "change:previous", (_0x48b216, _0x2e82d6, _0xd0f7ac, _0x568593) => {
        _0x217e68["isInContent"] && (null == _0xd0f7ac ? (this["_updateController"](_0x568593["head"]), this["_handleSuggestionControllerDelayed"](_0x217e68, false)) : (this["_updateController"](_0xd0f7ac["head"]), null == _0x568593 && this["_handleSuggestionControllerDelayed"](_0x217e68, true)));
      }), null !== _0x217e68["previous"] ? this["_updateController"](_0x217e68["head"]) : this["_handleSuggestionControllerDelayed"](_0x217e68, false);
    }), this["listenTo"](_0x547877, "suggestionUnloaded", (_0x4b8ac9, _0x3aa6d7, _0x4c8103) => {
      this["stopListening"](_0x3aa6d7, "change:previous"), this["_handleControllerBuffer"]["delete"](_0x3aa6d7), this["_suggestionToController"]["has"](_0x3aa6d7) && this["_destroyController"](_0x3aa6d7), _0x4c8103 && this["_updateController"](_0x4c8103["head"]);
    }), this["listenTo"](_0x547877, "suggestionChanged", (_0x2d1bb5, _0x4ada31) => {
      this["_updateController"](_0x4ada31);
    }), this["listenTo"](_0x598af6, "change:activeAnnotations", () => {
      this["_refreshActiveMarkers"]();
    }), this["listenTo"](_0x3c34a6, "addComment", (_0x10c793, { threadId: _0x23df57, isFromAdapter: _0x54f508 }) => {
      if (_0x54f508 || !_0x547877["hasSuggestion"](_0x23df57)) return;
      const _0x3fe52d = _0x547877["getSuggestion"](_0x23df57);
      this["_suggestionToController"]["get"](_0x3fe52d)["view"]["commentsListView"]["focus"](-1);
    }, { "priority": "lowest" });
  }
  ["_refreshActiveMarkers"]() {
    const _0xf87d7a = this["editor"]["plugins"]["get"]("Annotations"), _0x220a33 = this["editor"]["plugins"]["get"]("TrackChangesEditing"), _0x1b128b = Array["from"](_0xf87d7a["activeAnnotations"], (_0x29254d) => _0x29254d["innerView"])["filter"]((_0x32cefb) => this["_viewToController"]["has"](_0x32cefb)), _0x53b9fe = [];
    for (const _0x921cb8 of _0x1b128b) {
      const _0x3304cd = this["_viewToController"]["get"](_0x921cb8)["model"]["getAllAdjacentSuggestions"]();
      _0x53b9fe["push"](..._0x3304cd["reduce"]((_0x1fa007, _0x18cd11) => [..._0x1fa007, ..._0x18cd11["getMarkerNames"]()], []));
    }
    _0x220a33["activeMarkers"] = _0x53b9fe;
  }
  ["_addUIComponentsToFactory"]() {
    const _0x1f743d = this["editor"], _0xeee99 = _0x1f743d["locale"], _0x38b191 = o11(_0xeee99, "Track changes"), _0x392c3 = new Collection([{ "type": "switchbutton", "model": new Model({ "withText": true, "isToggleable": true, "label": _0x38b191, "commandName": "trackChanges", "role": "menuitemcheckbox" }) }, { "type": "separator" }, { "type": "button", "model": new Model({ "withText": true, "label": o11(_0xeee99, "Accept all suggestions"), "commandName": "acceptAllSuggestions", "role": "menuitem" }) }, { "type": "button", "model": new Model({ "withText": true, "label": o11(_0xeee99, "Accept all selected suggestions"), "commandName": "acceptSelectedSuggestions", "role": "menuitem" }) }, { "type": "button", "model": new Model({ "withText": true, "label": o11(_0xeee99, "Discard all suggestions"), "commandName": "discardAllSuggestions", "role": "menuitem" }) }, { "type": "button", "model": new Model({ "withText": true, "label": o11(_0xeee99, "Discard all selected suggestions"), "commandName": "discardSelectedSuggestions", "role": "menuitem" }) }]);
    for (const _0xd217a6 of _0x392c3) if (me(_0xd217a6)) {
      const _0x5aab36 = _0x1f743d["commands"]["get"](_0xd217a6["model"]["commandName"]);
      _0xd217a6["model"]["bind"]("isOn", "isEnabled")["to"](_0x5aab36, "value", "isEnabled");
    }
    _0x1f743d["ui"]["componentFactory"]["add"]("trackChanges", (_0x239c97) => this["_createToolbarButton"](_0x239c97, _0x392c3, _0x38b191)), _0x1f743d["ui"]["componentFactory"]["add"]("menuBar:trackChanges", (_0x54ad29) => this["_createMenuBarMenu"](_0x54ad29, _0x392c3, _0x38b191));
  }
  ["_createToolbarButton"](_0x13745d, _0x560a5b, _0x2010bf) {
    const _0x474d04 = createDropdown(_0x13745d, SplitButtonView), _0x4861f3 = this["editor"]["commands"]["get"]("trackChanges");
    _0x474d04["buttonView"]["set"]({ "tooltip": _0x2010bf, "label": _0x2010bf, "icon": he }), _0x474d04["buttonView"]["bind"]("isOn")["to"](_0x4861f3, "value"), _0x474d04["buttonView"]["on"]("execute", () => {
      _0x4861f3["execute"](), this["editor"]["editing"]["view"]["focus"]();
    }), addListToDropdown(_0x474d04, _0x560a5b, { "role": "menu" });
    const _0x51deda = [];
    for (const _0x2330db of _0x560a5b) me(_0x2330db) && _0x51deda["push"](this["editor"]["commands"]["get"](_0x2330db["model"]["commandName"]));
    const _0x4d76a6 = _0x474d04["buttonView"];
    return _0x4d76a6["actionView"]["unbind"]("isEnabled"), _0x4d76a6["arrowView"]["unbind"]("isEnabled"), _0x4d76a6["actionView"]["bind"]("isEnabled")["to"](_0x4861f3, "isEnabled"), _0x4d76a6["arrowView"]["bind"]("isEnabled")["toMany"](_0x51deda, "isEnabled", (..._0x5ebdf1) => _0x5ebdf1["some"]((_0x34c34d) => _0x34c34d)), _0x474d04["on"]("execute", (_0x4113f3) => {
      this["editor"]["execute"](_0x4113f3["source"]["commandName"]), this["editor"]["editing"]["view"]["focus"]();
    }), _0x474d04;
  }
  ["_createMenuBarMenu"](_0x52aebf, _0x5788ae, _0x4bf107) {
    const _0xc221c6 = new MenuBarMenuView(_0x52aebf), _0x38e747 = this["editor"]["commands"]["get"]("trackChanges");
    _0xc221c6["buttonView"]["set"]({ "label": _0x4bf107, "icon": he });
    const _0x3eac1e = new MenuBarMenuListView(_0x52aebf);
    for (const _0x3fbb39 of _0x5788ae) {
      if ("separator" == _0x3fbb39["type"]) {
        _0x3eac1e["items"]["add"](new ListSeparatorView(_0x52aebf));
        continue;
      }
      const _0x341551 = new MenuBarMenuListItemView(_0x52aebf, _0xc221c6), _0x21043b = new MenuBarMenuListItemButtonView(_0x52aebf), _0x55f06e = _0x3fbb39["model"];
      _0x21043b["bind"](...Object["keys"](_0x55f06e))["to"](_0x55f06e), _0x21043b["delegate"]("execute")["to"](_0xc221c6), _0x21043b["on"]("execute", () => {
        this["editor"]["execute"](_0x55f06e["commandName"]), this["editor"]["editing"]["view"]["focus"]();
      }), _0x341551["children"]["add"](_0x21043b), _0x3eac1e["items"]["add"](_0x341551);
    }
    return _0xc221c6["bind"]("isEnabled")["to"](_0x38e747, "isEnabled"), _0xc221c6["panelView"]["children"]["add"](_0x3eac1e), _0xc221c6;
  }
  ["_initializeController"](_0x5844fb) {
    const _0x598a36 = this["editor"], _0x50f194 = _0x598a36["config"], _0x5d4ba2 = _0x598a36["plugins"]["get"]("Annotations"), _0x4176c7 = _0x598a36["plugins"]["get"]("CommentsRepository"), _0x453809 = _0x598a36["plugins"]["get"]("EditorAnnotations"), _0x51db78 = _0x598a36["plugins"]["get"](l)["me"], _0x5c4b04 = _0x50f194["get"]("trackChanges")["SuggestionThreadView"], _0x566f31 = _0x50f194["get"]("trackChanges")["SuggestionView"], { CommentsListView: _0x17d89f, CommentThreadInputView: _0x2721b6 } = _0x598a36["plugins"]["get"]("CommentsUI");
    let _0x4a68da, _0x35f802, _0x42a94d;
    this["_annotationViews"]["has"](_0x5844fb["id"]) ? (_0x35f802 = this["_annotationViews"]["get"](_0x5844fb["id"]), _0x4a68da = _0x35f802["mainView"]) : (_0x4a68da = new _0x5c4b04(_0x598a36["locale"], _0x5844fb, _0x51db78, { "disableComments": this["_disableComments"], "editorConfig": _0x50f194["get"]("comments.editorConfig"), "maxCommentsWhenCollapsed": _0x50f194["get"]("comments.maxCommentsWhenCollapsed"), "maxThreadTotalWeight": _0x50f194["get"]("comments.maxThreadTotalWeight"), "maxCommentCharsWhenCollapsed": _0x50f194["get"]("comments.maxCommentCharsWhenCollapsed"), "formatDateTime": E(_0x50f194["get"]("locale")), "CommentView": _0x50f194["get"]("comments")["CommentView"], "CommentsListView": _0x17d89f, "CommentThreadInputView": _0x2721b6, "SuggestionView": _0x566f31 }), _0x4a68da["suggestionView"]["acceptButton"]["on"]("execute", () => {
      _0x598a36["editing"]["view"]["focus"]();
    }), _0x4a68da["suggestionView"]["discardButton"]["on"]("execute", () => {
      _0x598a36["editing"]["view"]["focus"]();
    }), _0x35f802 = _0x5d4ba2["createAnnotationView"](this["editor"]["locale"], _0x4a68da), _0x35f802["bind"]("isDirty")["to"](_0x4a68da, "isDirty"), _0x35f802["bind"]("length")["to"](_0x4a68da), _0x35f802["bind"]("type")["to"](_0x4a68da, "type", (_0x2555b1) => "suggestion-" + _0x2555b1), _0x4a68da["on"]("escape", () => {
      _0x42a94d["fire"]("escape");
    }), this["_annotationViews"]["set"](_0x5844fb["id"], _0x35f802));
    const _0x2a762b = _0x4176c7["createCommentThreadController"](_0x5844fb["commentThread"], _0x4a68da), _0x37998f = new ae(_0x598a36, _0x5844fb, _0x4a68da, _0x2a762b), _0x4c6f2b = _0x5844fb["getAllAdjacentSuggestions"]()["filter"]((_0x489ede) => _0x489ede["isInContent"]);
    _0x4a68da["descriptionParts"] = _0x598a36["plugins"]["get"]("TrackChangesEditing")["descriptionFactory"]["getDescriptions"](_0x4c6f2b), this["_suggestionToController"]["set"](_0x5844fb, _0x37998f), this["_viewToController"]["set"](_0x4a68da, _0x37998f), _0x42a94d = _0x5d4ba2["createAnnotation"]({ "view": _0x35f802, "target": () => {
      const _0x436279 = [], _0x23f9e0 = _0x5844fb["getAllAdjacentSuggestions"]()["filter"]((_0x2014cb) => _0x2014cb["isInContent"]);
      for (const _0x57c52d of _0x23f9e0) _0x436279["push"](..._0x57c52d["getMarkers"]());
      return R(_0x598a36["editing"], _0x436279);
    }, "type": () => "suggestion-" + _0x37998f["view"]["type"] }), _0x4176c7["_bindAnnotationToEditors"](_0x4a68da, _0x42a94d), _0x5d4ba2["add"](_0x42a94d), _0x453809["registerAnnotation"](_0x42a94d);
  }
  ["_destroyController"](_0x2bbb2c) {
    const _0x301289 = this["editor"]["plugins"]["get"]("CommentsRepository"), _0x239958 = this["editor"]["plugins"]["get"]("Annotations"), _0x499957 = this["_suggestionToController"]["get"](_0x2bbb2c), _0x2a25f4 = _0x499957["view"], _0x362940 = _0x239958["getByInnerView"](_0x2a25f4);
    _0x301289["_unbindEditors"](_0x2a25f4), _0x362940 && _0x239958["remove"](_0x362940), this["_suggestionToController"]["delete"](_0x2bbb2c), this["_viewToController"]["delete"](_0x2a25f4), _0x499957["destroy"]();
  }
  ["_updateController"](_0x516d69) {
    if (!_0x516d69["isInContent"] || !this["_suggestionToController"]["has"](_0x516d69)) return;
    const _0x405ffb = this["editor"]["plugins"]["get"]("TrackChangesEditing"), _0x8eceef = this["_suggestionToController"]["get"](_0x516d69), _0x5e2d8f = _0x516d69["getAllAdjacentSuggestions"]();
    _0x8eceef["view"]["descriptionParts"] = _0x405ffb["descriptionFactory"]["getDescriptions"](_0x5e2d8f);
  }
  ["destroy"]() {
    for (const _0x41287b of this["_suggestionToController"]["keys"]()) this["_destroyController"](_0x41287b);
    for (const _0x398566 of this["_annotationViews"]["values"]()) _0x398566["mainView"]["destroy"]();
    super["destroy"]();
  }
};
function me(_0x53d11c) {
  return "model" in _0x53d11c;
}
var k7 = class extends Plugin {
  static get ["requires"]() {
    return [p10, d8, "Comments"];
  }
  static get ["pluginName"]() {
    return "TrackChanges";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  set ["adapter"](_0x29411c) {
    this["editor"]["plugins"]["get"](p10)["adapter"] = _0x29411c;
  }
  get ["adapter"]() {
    return this["editor"]["plugins"]["get"](p10)["adapter"];
  }
  ["addSuggestion"](_0x167b6c) {
    return this["editor"]["plugins"]["get"](p10)["addSuggestionData"](_0x167b6c);
  }
  ["getSuggestions"]({ skipNotAttached: _0x140891 = false, toJSON: _0x2944b2 = false } = {}) {
    return this["editor"]["plugins"]["get"](p10)["getSuggestions"]({ "skipNotAttached": _0x140891, "toJSON": _0x2944b2 });
  }
  ["getSuggestion"](_0x1df09b) {
    return this["editor"]["plugins"]["get"](p10)["getSuggestion"](_0x1df09b);
  }
};
var w6 = ["Pagination"];
var T6 = class extends Plugin {
  static get ["requires"]() {
    return [p10];
  }
  static get ["pluginName"]() {
    return "TrackChangesData";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    const _0x5e0684 = this["editor"];
    if (_0x5e0684["config"]["define"]("trackChangesData.editorCreator", (_0x5ee167) => {
      const _0x5d9a0f = _0x5e0684["model"]["document"]["getRootNames"]()["reduce"]((_0x147d67, _0x16fdaa) => (_0x147d67[_0x16fdaa] = "", _0x147d67), {});
      return _0x5e0684["constructor"]["create"](_0x5d9a0f, _0x5ee167);
    }), "function" != typeof _0x5e0684["config"]["get"]("trackChangesData")["editorCreator"]) throw new CKEditorError("track-changes-data-invalid-editor-creator");
  }
  ["getDataWithAcceptedSuggestions"](_0x226b67) {
    return N5(this["editor"], true, _0x226b67);
  }
  ["getDataWithDiscardedSuggestions"](_0x4cf588) {
    return N5(this["editor"], false, _0x4cf588);
  }
};
var D4 = class extends Plugin {
  constructor(_0x50ddc0) {
    super(_0x50ddc0);
    __publicField(this, "result");
    this["result"] = "end";
  }
  static get ["pluginName"]() {
    return "TrackChangesDataGetter";
  }
  static get ["isOfficialPlugin"]() {
    return true;
  }
  static get ["isPremiumPlugin"]() {
    return true;
  }
  ["init"]() {
    this["editor"]["plugins"]["get"]("CommentsRepository")["_adapter"] = { "addCommentThread": () => new Promise(() => {
    }), "getCommentThread": () => new Promise(() => {
    }), "updateCommentThread": () => new Promise(() => {
    }), "resolveCommentThread": () => new Promise(() => {
    }), "reopenCommentThread": () => new Promise(() => {
    }), "removeCommentThread": () => new Promise(() => {
    }), "addComment": () => new Promise(() => {
    }), "updateComment": () => new Promise(() => {
    }), "removeComment": () => new Promise(() => {
    }) }, this["editor"]["plugins"]["get"]("TrackChangesEditing")["_adapter"] = null;
  }
};
function v10(_0x31f542) {
  return void 0 !== _0x31f542["getRootsAttributes"];
}
async function N5(_0x48a61c, _0x20a89d, _0x32191e) {
  const _0xa45a3c = C(_0x48a61c, w6);
  _0xa45a3c["plugins"]["push"](p10, D4), _0xa45a3c["rootsAttributes"] = v10(_0x48a61c) ? _0x48a61c["getRootsAttributes"]() : void 0;
  const _0x1fcd8a = document["createDocumentFragment"](), _0x38ef37 = _0x48a61c["config"]["get"]("trackChangesData")["editorCreator"], _0x215c5c = await _0x38ef37(_0xa45a3c, () => function(_0x202f24) {
    const _0x137baf = document["createElement"]("div");
    return _0x202f24["appendChild"](_0x137baf), _0x137baf;
  }(_0x1fcd8a));
  !function(_0x3b2ac9, _0x1ed051) {
    const _0x320e62 = _0x3b2ac9["model"]["document"]["getRootNames"]()["reduce"]((_0x6c256f, _0x378473) => (_0x6c256f[_0x378473] = _0x3b2ac9["data"]["get"]({ "rootName": _0x378473 }), _0x6c256f), {}), _0x2ba94a = _0x3b2ac9["plugins"]["get"]("Users")["users"]["map"]((_0x3364df) => ({ "id": _0x3364df["id"], "name": _0x3364df["name"] })), _0x5471b8 = _0x3b2ac9["plugins"]["get"]("TrackChangesEditing")["getSuggestions"]({ "skipNotAttached": true, "toJSON": true }), _0x18fdfd = _0x3b2ac9["plugins"]["get"]("CommentsRepository")["getCommentThreads"]({ "skipNotAttached": true, "toJSON": true }), _0x5a8c96 = _0x1ed051["plugins"]["get"]("Users"), _0x1791d6 = _0x1ed051["plugins"]["get"]("TrackChangesEditing"), _0x5c20eb = _0x1ed051["plugins"]["get"]("CommentsRepository");
    for (const _0x206543 of _0x5c20eb["getCommentThreads"]()) _0x206543["remove"]();
    for (const _0x5b0ea7 of _0x2ba94a) _0x5a8c96["getUser"](_0x5b0ea7["id"]) || _0x5a8c96["addUser"](_0x5b0ea7);
    _0x5a8c96["me"] || _0x5a8c96["useAnonymousUser"]();
    for (const _0x5da951 of _0x18fdfd) _0x5c20eb["addCommentThread"](_0x5da951);
    for (const _0x2efc09 of _0x5471b8) _0x1791d6["addSuggestionData"](_0x2efc09);
    _0x1ed051["data"]["set"](_0x320e62);
  }(_0x48a61c, _0x215c5c), _0x215c5c["execute"](_0x20a89d ? "acceptAllSuggestions" : "discardAllSuggestions");
  const _0x4832cd = v10(_0x215c5c) ? _0x215c5c["getFullData"](_0x32191e) : _0x215c5c["data"]["get"](_0x32191e);
  return await _0x215c5c["destroy"](), _0x4832cd;
}
export {
  y as AIAdapter,
  s2 as AIAssistant,
  R2 as AIRequestError,
  P2 as AITextAdapter,
  O2 as AWSTextAdapter,
  d2 as Annotation,
  x2 as AnnotationCollection,
  T2 as AnnotationView,
  N2 as Annotations,
  M2 as AnnotationsUIs,
  J as AriaDescriptionView,
  es as BaseCommentThreadView,
  ns as BaseCommentView,
  us as BaseSuggestionThreadView,
  a5 as CaseChange,
  r4 as CaseChangeCommand,
  s3 as CaseChangeEditing,
  n3 as CaseChangeUI,
  a13 as CloudServicesCommentsAdapter,
  u6 as CloudServicesRevisionHistoryAdapter,
  f6 as CloudServicesTrackChangesAdapter,
  se as Comment,
  ie as CommentThread,
  At as CommentThreadController,
  Pt as CommentThreadInputView,
  Ct as CommentThreadView,
  vt as CommentView,
  p2 as Comments,
  f3 as CommentsArchive,
  xt as CommentsListView,
  s4 as CommentsOnly,
  o4 as CommentsRepository,
  i2 as CommentsUI,
  m as ConfirmMixin,
  r7 as CopyFormatCommand,
  o5 as DocumentOutline,
  l3 as DocumentOutlineUI,
  n5 as DocumentOutlineUtils,
  P3 as EditorAnnotations,
  o6 as ExportPdf,
  s7 as ExportWord,
  Q as FOCUS_ANNOTATION_KEYSTROKE,
  n6 as FormatPainter,
  a10 as FormatPainterEditing,
  m4 as FormatPainterUI,
  g3 as HeadingId,
  o8 as ImportWord,
  e6 as ImportWordEditing,
  i3 as ImportWordUI,
  c4 as InlineAnnotations,
  U as LateFocusButtonView,
  Y as LateFocusDropdownButtonView,
  u3 as MergeFields,
  g5 as MergeFieldsEditing,
  m6 as MergeFieldsUI,
  l5 as MultiLevelList,
  i4 as MultiLevelListEditing,
  r8 as MultiLevelListUI,
  n4 as NarrowSidebar,
  H2 as OpenAITextAdapter,
  o9 as Pagination,
  l4 as PasteFormatCommand,
  s9 as PasteFromOfficeEnhanced,
  o as Permissions,
  s11 as PresenceList,
  l8 as RealTimeCollaborationClient,
  m9 as RealTimeCollaborativeComments,
  n9 as RealTimeCollaborativeEditing,
  g7 as RealTimeCollaborativeRevisionHistory,
  p8 as RealTimeCollaborativeTrackChanges,
  a14 as Revision,
  H6 as RevisionHistory,
  u7 as RevisionHistoryUI,
  l10 as RevisionTracker,
  d6 as RevisionViewer,
  le as RevisionViewerLoadingOverlay,
  m10 as RevisionViewerUI,
  A4 as RevisionsRepository,
  R5 as RevisionsSidebar,
  s13 as SlashCommand,
  c10 as SlashCommandConfig,
  r15 as SlashCommandEditing,
  e8 as SlashCommandUI,
  u8 as Suggestion,
  re2 as SuggestionThreadView,
  ce2 as SuggestionView,
  a7 as TableOfContents,
  h3 as TableOfContentsCommand,
  r6 as TableOfContentsEditing,
  s5 as TableOfContentsUI,
  s14 as Template,
  o10 as TemplateCommand,
  r16 as TemplateEditing,
  i10 as TemplateUI,
  k7 as TrackChanges,
  T6 as TrackChangesData,
  p10 as TrackChangesEditing,
  H as UserView,
  l as Users,
  e2 as WideSidebar,
  R as getAllMarkersDomElementsSorted,
  E as getDateTimeFormatter,
  g as getMarkerDomElement,
  M as hashObject,
  a2 as icons,
  C as sanitizeEditorConfig,
  T as setupThreadKeyboardNavigation,
  B as surroundingMarkersDetector,
  Z as trimHtml
};
/*! Bundled license information:

bowser/src/bowser.js:
  (*!
   * Bowser - a browser detector
   * https://github.com/lancedikson/bowser
   * MIT License | (c) Dustin Diaz 2012-2015
   * MIT License | (c) Denis Demchenko 2015-2019
   *)
*/
//# sourceMappingURL=ckeditor5-premium-features.js.map
